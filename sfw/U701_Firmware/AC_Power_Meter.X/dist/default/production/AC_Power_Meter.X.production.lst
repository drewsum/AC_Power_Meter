

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 08 10:04:49 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   114                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1,group=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1,group=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   170                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   171  0000                     
   172                           ; Version 1.45 (B)
   173                           ; Generated 30/01/2018 GMT
   174                           ; 
   175                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   176                           ; All rights reserved.
   177                           ; 
   178                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   179                           ; 
   180                           ; Redistribution and use in source and binary forms, with or without modification, are
   181                           ; permitted provided that the following conditions are met:
   182                           ; 
   183                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   184                           ;        conditions and the following disclaimer.
   185                           ; 
   186                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   187                           ;        of conditions and the following disclaimer in the documentation and/or other
   188                           ;        materials provided with the distribution.
   189                           ; 
   190                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   191                           ;        software without specific prior written permission.
   192                           ; 
   193                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   194                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   195                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   196                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   197                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   198                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   199                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   200                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   201                           ; 
   202                           ; 
   203                           ; Code-generator required, PIC18LF67K40 Definitions
   204                           ; 
   205                           ; SFR Addresses
   206  0000                     
   207                           	psect	idataBANK0
   208  01944E                     __pidataBANK0:
   209                           	opt stack 0
   210                           
   211                           ;initializer for _dimming_period
   212  01944E  7FEE               	dw	32750
   213                           
   214                           ;initializer for _TRIAC_Firing_Angle
   215                           ;main.c: 72: volatile double FVR_ADC_Result;
   216                           ;main.c: 73: volatile double AVSS_ADC_Result;
   217                           ;main.c: 74: volatile double ADC_Result_Scaling;
   218                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   219                           ;main.c: 76: volatile double POS12_ADC_Result;
   220                           ;main.c: 77: volatile double Temp_ADC_Result;
   221                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   222                           ;main.c: 79: double Vpk_const = 169.7056274847714;
   223                           ;main.c: 80: volatile double Vpk;
   224                           ;main.c: 81: volatile double Ipk;
   225                           ;main.c: 82: volatile double Imeas;
   226                           ;main.c: 83: double Irms_offset = -0.113;
   227  019450  0000               	dw	0
   228  019452  42B4               	dw	17076
   229                           
   230                           	psect	idataBANK1
   231  019480                     __pidataBANK1:
   232                           	opt stack 0
   233                           
   234                           ;initializer for _next_channel
   235  019480  3C                 	db	60
   236                           
   237                           	psect	idataBANK2
   238  019184                     __pidataBANK2:
   239                           	opt stack 0
   240                           
   241                           ;initializer for getCauseOfResetString@strings
   242  019184  EE                 	db	low STR_154
   243  019185  FD                 	db	high STR_154
   244  019186  5E                 	db	low STR_155
   245  019187  FE                 	db	high STR_155
   246  019188  FE                 	db	low STR_156
   247  019189  FD                 	db	high STR_156
   248  01918A  3F                 	db	low STR_157
   249  01918B  FD                 	db	high STR_157
   250  01918C  86                 	db	low (STR_159+9)
   251  01918D  F9                 	db	high (STR_159+9)
   252  01918E  7D                 	db	low STR_159
   253  01918F  F9                 	db	high STR_159
   254  019190  2C                 	db	low STR_160
   255  019191  FC                 	db	high STR_160
   256  019192  D7                 	db	low STR_161
   257  019193  FC                 	db	high STR_161
   258  019194  AB                 	db	low STR_162
   259  019195  FC                 	db	high STR_162
   260                           
   261                           ;initializer for getDeviceIDString@F17550
   262  019196  30                 	db	low STR_151
   263  019197  FF                 	db	high STR_151
   264  019198  FC                 	db	low STR_152
   265  019199  FE                 	db	high STR_152
   266  01919A  73                 	db	low STR_68
   267  01919B  FF                 	db	high STR_68
   268                           
   269                           ;initializer for _Irms_offset
   270  01919C  6C8B               	dw	27787
   271  01919E  BDE7               	dw	48615
   272                           
   273                           ;initializer for _Vpk_const
   274                           ;main.c: 72: volatile double FVR_ADC_Result;
   275                           ;main.c: 73: volatile double AVSS_ADC_Result;
   276                           ;main.c: 74: volatile double ADC_Result_Scaling;
   277                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   278                           ;main.c: 76: volatile double POS12_ADC_Result;
   279                           ;main.c: 77: volatile double Temp_ADC_Result;
   280                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   281  0191A0  B4A4               	dw	46244
   282  0191A2  4329               	dw	17193
   283                           
   284                           ;initializer for _Temp_ADC_Offset
   285                           ;main.c: 72: volatile double FVR_ADC_Result;
   286                           ;main.c: 73: volatile double AVSS_ADC_Result;
   287                           ;main.c: 74: volatile double ADC_Result_Scaling;
   288                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   289                           ;main.c: 76: volatile double POS12_ADC_Result;
   290                           ;main.c: 77: volatile double Temp_ADC_Result;
   291  0191A4  FF99               	dw	65433
   292  0191A6  441D               	dw	17437
   293                           
   294                           	psect	mediumconst
   295  00D842                     __pmediumconst:
   296                           	opt stack 0
   297  00D842  00                 	db	0
   298  00D843                     __powers_:
   299                           	opt stack 0
   300  00D843  0000               	dw	0
   301  00D845  3F80               	dw	16256
   302  00D847  0000               	dw	0
   303  00D849  4120               	dw	16672
   304  00D84B  0000               	dw	0
   305  00D84D  42C8               	dw	17096
   306  00D84F  0000               	dw	0
   307  00D851  447A               	dw	17530
   308  00D853  4000               	dw	16384
   309  00D855  461C               	dw	17948
   310  00D857  5000               	dw	20480
   311  00D859  47C3               	dw	18371
   312  00D85B  2400               	dw	9216
   313  00D85D  4974               	dw	18804
   314  00D85F  9680               	dw	38528
   315  00D861  4B18               	dw	19224
   316  00D863  BC20               	dw	48160
   317  00D865  4CBE               	dw	19646
   318  00D867  6B28               	dw	27432
   319  00D869  4E6E               	dw	20078
   320  00D86B  02F9               	dw	761
   321  00D86D  5015               	dw	20501
   322  00D86F  78EC               	dw	30956
   323  00D871  60AD               	dw	24749
   324  00D873  F2CA               	dw	62154
   325  00D875  7149               	dw	29001
   326  00D877                     __end_of__powers_:
   327                           	opt stack 0
   328  00D877                     __npowers_:
   329                           	opt stack 0
   330  00D877  0000               	dw	0
   331  00D879  3F80               	dw	16256
   332  00D87B  CCCD               	dw	52429
   333  00D87D  3DCC               	dw	15820
   334  00D87F  D70A               	dw	55050
   335  00D881  3C23               	dw	15395
   336  00D883  126F               	dw	4719
   337  00D885  3A83               	dw	14979
   338  00D887  B717               	dw	46871
   339  00D889  38D1               	dw	14545
   340  00D88B  C5AC               	dw	50604
   341  00D88D  3727               	dw	14119
   342  00D88F  37BD               	dw	14269
   343  00D891  3586               	dw	13702
   344  00D893  BF95               	dw	49045
   345  00D895  33D6               	dw	13270
   346  00D897  CC77               	dw	52343
   347  00D899  322B               	dw	12843
   348  00D89B  705F               	dw	28767
   349  00D89D  3089               	dw	12425
   350  00D89F  E6FF               	dw	59135
   351  00D8A1  2EDB               	dw	11995
   352  00D8A3  E508               	dw	58632
   353  00D8A5  1E3C               	dw	7740
   354  00D8A7  4260               	dw	16992
   355  00D8A9  0DA2               	dw	3490
   356  00D8AB                     __end_of__npowers_:
   357                           	opt stack 0
   358  00D8AB                     _dpowers:
   359                           	opt stack 0
   360  00D8AB  0001               	dw	1
   361  00D8AD  0000               	dw	0
   362  00D8AF  000A               	dw	10
   363  00D8B1  0000               	dw	0
   364  00D8B3  0064               	dw	100
   365  00D8B5  0000               	dw	0
   366  00D8B7  03E8               	dw	1000
   367  00D8B9  0000               	dw	0
   368  00D8BB  2710               	dw	10000
   369  00D8BD  0000               	dw	0
   370  00D8BF  86A0               	dw	34464
   371  00D8C1  0001               	dw	1
   372  00D8C3  4240               	dw	16960
   373  00D8C5  000F               	dw	15
   374  00D8C7  9680               	dw	38528
   375  00D8C9  0098               	dw	152
   376  00D8CB  E100               	dw	57600
   377  00D8CD  05F5               	dw	1525
   378  00D8CF  CA00               	dw	51712
   379  00D8D1  3B9A               	dw	15258
   380  00D8D3                     __end_of_dpowers:
   381                           	opt stack 0
   382  00D8D3                     _hexpowers:
   383                           	opt stack 0
   384  00D8D3  0001               	dw	1
   385  00D8D5  0000               	dw	0
   386  00D8D7  0010               	dw	16
   387  00D8D9  0000               	dw	0
   388  00D8DB  0100               	dw	256
   389  00D8DD  0000               	dw	0
   390  00D8DF  1000               	dw	4096
   391  00D8E1  0000               	dw	0
   392  00D8E3  0000               	dw	0
   393  00D8E5  0001               	dw	1
   394  00D8E7  0000               	dw	0
   395  00D8E9  0010               	dw	16
   396  00D8EB  0000               	dw	0
   397  00D8ED  0100               	dw	256
   398  00D8EF  0000               	dw	0
   399  00D8F1  1000               	dw	4096
   400  00D8F3                     __end_of_hexpowers:
   401                           	opt stack 0
   402  00D8F3                     _max_FVR_ADC_Result_address:
   403                           	opt stack 0
   404  00D8F3  0014               	dw	20
   405  00D8F5                     __end_of_max_FVR_ADC_Result_address:
   406                           	opt stack 0
   407  00D8F5                     _max_Temp_ADC_Result_address:
   408                           	opt stack 0
   409  00D8F5  0010               	dw	16
   410  00D8F7                     __end_of_max_Temp_ADC_Result_address:
   411                           	opt stack 0
   412  00D8F7                     _max_POS12_ADC_Result_address:
   413                           	opt stack 0
   414  00D8F7  000C               	dw	12
   415  00D8F9                     __end_of_max_POS12_ADC_Result_address:
   416                           	opt stack 0
   417  00D8F9                     _max_POS3P3_ADC_Result_address:
   418                           	opt stack 0
   419  00D8F9  0008               	dw	8
   420  00D8FB                     __end_of_max_POS3P3_ADC_Result_address:
   421                           	opt stack 0
   422  00D8FB                     _max_Power_address:
   423                           	opt stack 0
   424  00D8FB  0004               	dw	4
   425  00D8FD                     __end_of_max_Power_address:
   426                           	opt stack 0
   427  00D8FD                     _max_Irms_address:
   428                           	opt stack 0
   429  00D8FD  0000               	dw	0
   430  00D8FF                     __end_of_max_Irms_address:
   431                           	opt stack 0
   432  00D8FF                     atan@coeff_a:
   433                           	opt stack 0
   434  00D8FF  3C06               	dw	15366
   435  00D901  4204               	dw	16900
   436  00D903  9F7D               	dw	40829
   437  00D905  426A               	dw	17002
   438  00D907  905C               	dw	36956
   439  00D909  4201               	dw	16897
   440  00D90B  4D60               	dw	19808
   441  00D90D  40BB               	dw	16571
   442  00D90F  EC51               	dw	60497
   443  00D911  3E47               	dw	15943
   444  00D913  8DDE               	dw	36318
   445  00D915  BB1F               	dw	47903
   446  00D917                     __end_ofatan@coeff_a:
   447                           	opt stack 0
   448  00D917                     sin@coeff_a:
   449                           	opt stack 0
   450  00D917  F3EC               	dw	62444
   451  00D919  484A               	dw	18506
   452  00D91B  9535               	dw	38197
   453  00D91D  C795               	dw	51093
   454  00D91F  C117               	dw	49431
   455  00D921  45DC               	dw	17884
   456  00D923  DBFD               	dw	56317
   457  00D925  C36D               	dw	50029
   458  00D927  B372               	dw	45938
   459  00D929  4033               	dw	16435
   460  00D92B                     __end_ofsin@coeff_a:
   461                           	opt stack 0
   462  00D92B                     atan@coeff_b:
   463                           	opt stack 0
   464  00D92B  3C06               	dw	15366
   465  00D92D  4204               	dw	16900
   466  00D92F  59C0               	dw	22976
   467  00D931  428B               	dw	17035
   468  00D933  0474               	dw	1140
   469  00D935  4244               	dw	16964
   470  00D937  9BF9               	dw	39929
   471  00D939  414F               	dw	16719
   472  00D93B  0000               	dw	0
   473  00D93D  3F80               	dw	16256
   474  00D93F                     __end_ofatan@coeff_b:
   475                           	opt stack 0
   476  00D93F                     sin@coeff_b:
   477                           	opt stack 0
   478  00D93F  342B               	dw	13355
   479  00D941  4801               	dw	18433
   480  00D943  9D7F               	dw	40319
   481  00D945  45B0               	dw	17840
   482  00D947  FFE7               	dw	65511
   483  00D949  42D9               	dw	17113
   484  00D94B  0000               	dw	0
   485  00D94D  3F80               	dw	16256
   486  00D94F                     __end_ofsin@coeff_b:
   487                           	opt stack 0
   488  00D94F                     STR_143:
   489  00D94F  4C                 	db	76	;'L'
   490  00D950  69                 	db	105	;'i'
   491  00D951  73                 	db	115	;'s'
   492  00D952  74                 	db	116	;'t'
   493  00D953  20                 	db	32
   494  00D954  6F                 	db	111	;'o'
   495  00D955  66                 	db	102	;'f'
   496  00D956  20                 	db	32
   497  00D957  61                 	db	97	;'a'
   498  00D958  6C                 	db	108	;'l'
   499  00D959  6C                 	db	108	;'l'
   500  00D95A  20                 	db	32
   501  00D95B  73                 	db	115	;'s'
   502  00D95C  75                 	db	117	;'u'
   503  00D95D  70                 	db	112	;'p'
   504  00D95E  70                 	db	112	;'p'
   505  00D95F  6F                 	db	111	;'o'
   506  00D960  72                 	db	114	;'r'
   507  00D961  74                 	db	116	;'t'
   508  00D962  65                 	db	101	;'e'
   509  00D963  64                 	db	100	;'d'
   510  00D964  20                 	db	32
   511  00D965  63                 	db	99	;'c'
   512  00D966  6F                 	db	111	;'o'
   513  00D967  6D                 	db	109	;'m'
   514  00D968  6D                 	db	109	;'m'
   515  00D969  61                 	db	97	;'a'
   516  00D96A  6E                 	db	110	;'n'
   517  00D96B  64                 	db	100	;'d'
   518  00D96C  73                 	db	115	;'s'
   519  00D96D  3A                 	db	58	;':'
   520  00D96E  0A                 	db	10
   521  00D96F  0D                 	db	13
   522  00D970  44                 	db	68	;'D'
   523  00D971  65                 	db	101	;'e'
   524  00D972  76                 	db	118	;'v'
   525  00D973  69                 	db	105	;'i'
   526  00D974  63                 	db	99	;'c'
   527  00D975  65                 	db	101	;'e'
   528  00D976  20                 	db	32
   529  00D977  43                 	db	67	;'C'
   530  00D978  6F                 	db	111	;'o'
   531  00D979  6E                 	db	110	;'n'
   532  00D97A  74                 	db	116	;'t'
   533  00D97B  72                 	db	114	;'r'
   534  00D97C  6F                 	db	111	;'o'
   535  00D97D  6C                 	db	108	;'l'
   536  00D97E  20                 	db	32
   537  00D97F  43                 	db	67	;'C'
   538  00D980  6F                 	db	111	;'o'
   539  00D981  6D                 	db	109	;'m'
   540  00D982  6D                 	db	109	;'m'
   541  00D983  61                 	db	97	;'a'
   542  00D984  6E                 	db	110	;'n'
   543  00D985  64                 	db	100	;'d'
   544  00D986  73                 	db	115	;'s'
   545  00D987  3A                 	db	58	;':'
   546  00D988  20                 	db	32
   547  00D989  43                 	db	67	;'C'
   548  00D98A  6F                 	db	111	;'o'
   549  00D98B  6D                 	db	109	;'m'
   550  00D98C  6D                 	db	109	;'m'
   551  00D98D  61                 	db	97	;'a'
   552  00D98E  6E                 	db	110	;'n'
   553  00D98F  64                 	db	100	;'d'
   554  00D990  73                 	db	115	;'s'
   555  00D991  20                 	db	32
   556  00D992  74                 	db	116	;'t'
   557  00D993  6F                 	db	111	;'o'
   558  00D994  20                 	db	32
   559  00D995  76                 	db	118	;'v'
   560  00D996  69                 	db	105	;'i'
   561  00D997  65                 	db	101	;'e'
   562  00D998  77                 	db	119	;'w'
   563  00D999  20                 	db	32
   564  00D99A  61                 	db	97	;'a'
   565  00D99B  6E                 	db	110	;'n'
   566  00D99C  64                 	db	100	;'d'
   567  00D99D  20                 	db	32
   568  00D99E  63                 	db	99	;'c'
   569  00D99F  6F                 	db	111	;'o'
   570  00D9A0  6E                 	db	110	;'n'
   571  00D9A1  74                 	db	116	;'t'
   572  00D9A2  72                 	db	114	;'r'
   573  00D9A3  6F                 	db	111	;'o'
   574  00D9A4  6C                 	db	108	;'l'
   575  00D9A5  20                 	db	32
   576  00D9A6  6C                 	db	108	;'l'
   577  00D9A7  6F                 	db	111	;'o'
   578  00D9A8  77                 	db	119	;'w'
   579  00D9A9  20                 	db	32
   580  00D9AA  6C                 	db	108	;'l'
   581  00D9AB  65                 	db	101	;'e'
   582  00D9AC  76                 	db	118	;'v'
   583  00D9AD  65                 	db	101	;'e'
   584  00D9AE  6C                 	db	108	;'l'
   585  00D9AF  20                 	db	32
   586  00D9B0  73                 	db	115	;'s'
   587  00D9B1  79                 	db	121	;'y'
   588  00D9B2  73                 	db	115	;'s'
   589  00D9B3  74                 	db	116	;'t'
   590  00D9B4  65                 	db	101	;'e'
   591  00D9B5  6D                 	db	109	;'m'
   592  00D9B6  20                 	db	32
   593  00D9B7  66                 	db	102	;'f'
   594  00D9B8  75                 	db	117	;'u'
   595  00D9B9  6E                 	db	110	;'n'
   596  00D9BA  63                 	db	99	;'c'
   597  00D9BB  74                 	db	116	;'t'
   598  00D9BC  69                 	db	105	;'i'
   599  00D9BD  6F                 	db	111	;'o'
   600  00D9BE  6E                 	db	110	;'n'
   601  00D9BF  61                 	db	97	;'a'
   602  00D9C0  6C                 	db	108	;'l'
   603  00D9C1  69                 	db	105	;'i'
   604  00D9C2  74                 	db	116	;'t'
   605  00D9C3  79                 	db	121	;'y'
   606  00D9C4  0A                 	db	10
   607  00D9C5  0D                 	db	13
   608  00D9C6  20                 	db	32
   609  00D9C7  20                 	db	32
   610  00D9C8  20                 	db	32
   611  00D9C9  52                 	db	82	;'R'
   612  00D9CA  65                 	db	101	;'e'
   613  00D9CB  73                 	db	115	;'s'
   614  00D9CC  65                 	db	101	;'e'
   615  00D9CD  74                 	db	116	;'t'
   616  00D9CE  3A                 	db	58	;':'
   617  00D9CF  20                 	db	32
   618  00D9D0  43                 	db	67	;'C'
   619  00D9D1  6C                 	db	108	;'l'
   620  00D9D2  65                 	db	101	;'e'
   621  00D9D3  61                 	db	97	;'a'
   622  00D9D4  72                 	db	114	;'r'
   623  00D9D5  73                 	db	115	;'s'
   624  00D9D6  20                 	db	32
   625  00D9D7  74                 	db	116	;'t'
   626  00D9D8  68                 	db	104	;'h'
   627  00D9D9  65                 	db	101	;'e'
   628  00D9DA  20                 	db	32
   629  00D9DB  74                 	db	116	;'t'
   630  00D9DC  65                 	db	101	;'e'
   631  00D9DD  72                 	db	114	;'r'
   632  00D9DE  6D                 	db	109	;'m'
   633  00D9DF  69                 	db	105	;'i'
   634  00D9E0  6E                 	db	110	;'n'
   635  00D9E1  61                 	db	97	;'a'
   636  00D9E2  6C                 	db	108	;'l'
   637  00D9E3  20                 	db	32
   638  00D9E4  61                 	db	97	;'a'
   639  00D9E5  6E                 	db	110	;'n'
   640  00D9E6  64                 	db	100	;'d'
   641  00D9E7  20                 	db	32
   642  00D9E8  72                 	db	114	;'r'
   643  00D9E9  65                 	db	101	;'e'
   644  00D9EA  73                 	db	115	;'s'
   645  00D9EB  65                 	db	101	;'e'
   646  00D9EC  74                 	db	116	;'t'
   647  00D9ED  73                 	db	115	;'s'
   648  00D9EE  20                 	db	32
   649  00D9EF  74                 	db	116	;'t'
   650  00D9F0  68                 	db	104	;'h'
   651  00D9F1  65                 	db	101	;'e'
   652  00D9F2  20                 	db	32
   653  00D9F3  6D                 	db	109	;'m'
   654  00D9F4  69                 	db	105	;'i'
   655  00D9F5  63                 	db	99	;'c'
   656  00D9F6  72                 	db	114	;'r'
   657  00D9F7  6F                 	db	111	;'o'
   658  00D9F8  0A                 	db	10
   659  00D9F9  0D                 	db	13
   660  00D9FA  20                 	db	32
   661  00D9FB  20                 	db	32
   662  00D9FC  20                 	db	32
   663  00D9FD  43                 	db	67	;'C'
   664  00D9FE  6C                 	db	108	;'l'
   665  00D9FF  65                 	db	101	;'e'
   666  00DA00  61                 	db	97	;'a'
   667  00DA01  72                 	db	114	;'r'
   668  00DA02  3A                 	db	58	;':'
   669  00DA03  20                 	db	32
   670  00DA04  43                 	db	67	;'C'
   671  00DA05  6C                 	db	108	;'l'
   672  00DA06  65                 	db	101	;'e'
   673  00DA07  61                 	db	97	;'a'
   674  00DA08  72                 	db	114	;'r'
   675  00DA09  73                 	db	115	;'s'
   676  00DA0A  20                 	db	32
   677  00DA0B  74                 	db	116	;'t'
   678  00DA0C  68                 	db	104	;'h'
   679  00DA0D  65                 	db	101	;'e'
   680  00DA0E  20                 	db	32
   681  00DA0F  74                 	db	116	;'t'
   682  00DA10  65                 	db	101	;'e'
   683  00DA11  72                 	db	114	;'r'
   684  00DA12  6D                 	db	109	;'m'
   685  00DA13  69                 	db	105	;'i'
   686  00DA14  6E                 	db	110	;'n'
   687  00DA15  61                 	db	97	;'a'
   688  00DA16  6C                 	db	108	;'l'
   689  00DA17  20                 	db	32
   690  00DA18  62                 	db	98	;'b'
   691  00DA19  75                 	db	117	;'u'
   692  00DA1A  74                 	db	116	;'t'
   693  00DA1B  20                 	db	32
   694  00DA1C  64                 	db	100	;'d'
   695  00DA1D  6F                 	db	111	;'o'
   696  00DA1E  65                 	db	101	;'e'
   697  00DA1F  73                 	db	115	;'s'
   698  00DA20  6E                 	db	110	;'n'
   699  00DA21  27                 	db	39
   700  00DA22  74                 	db	116	;'t'
   701  00DA23  20                 	db	32
   702  00DA24  72                 	db	114	;'r'
   703  00DA25  65                 	db	101	;'e'
   704  00DA26  73                 	db	115	;'s'
   705  00DA27  65                 	db	101	;'e'
   706  00DA28  74                 	db	116	;'t'
   707  00DA29  20                 	db	32
   708  00DA2A  74                 	db	116	;'t'
   709  00DA2B  68                 	db	104	;'h'
   710  00DA2C  65                 	db	101	;'e'
   711  00DA2D  20                 	db	32
   712  00DA2E  6D                 	db	109	;'m'
   713  00DA2F  69                 	db	105	;'i'
   714  00DA30  63                 	db	99	;'c'
   715  00DA31  72                 	db	114	;'r'
   716  00DA32  6F                 	db	111	;'o'
   717  00DA33  0A                 	db	10
   718  00DA34  0D                 	db	13
   719  00DA35  20                 	db	32
   720  00DA36  20                 	db	32
   721  00DA37  20                 	db	32
   722  00DA38  43                 	db	67	;'C'
   723  00DA39  61                 	db	97	;'a'
   724  00DA3A  75                 	db	117	;'u'
   725  00DA3B  73                 	db	115	;'s'
   726  00DA3C  65                 	db	101	;'e'
   727  00DA3D  20                 	db	32
   728  00DA3E  6F                 	db	111	;'o'
   729  00DA3F  66                 	db	102	;'f'
   730  00DA40  20                 	db	32
   731  00DA41  52                 	db	82	;'R'
   732  00DA42  65                 	db	101	;'e'
   733  00DA43  73                 	db	115	;'s'
   734  00DA44  65                 	db	101	;'e'
   735  00DA45  74                 	db	116	;'t'
   736  00DA46  3F                 	db	63	;'?'
   737  00DA47  3A                 	db	58	;':'
   738  00DA48  20                 	db	32
   739  00DA49  52                 	db	82	;'R'
   740  00DA4A  65                 	db	101	;'e'
   741  00DA4B  74                 	db	116	;'t'
   742  00DA4C  75                 	db	117	;'u'
   743  00DA4D  72                 	db	114	;'r'
   744  00DA4E  6E                 	db	110	;'n'
   745  00DA4F  73                 	db	115	;'s'
   746  00DA50  20                 	db	32
   747  00DA51  74                 	db	116	;'t'
   748  00DA52  68                 	db	104	;'h'
   749  00DA53  65                 	db	101	;'e'
   750  00DA54  20                 	db	32
   751  00DA55  63                 	db	99	;'c'
   752  00DA56  61                 	db	97	;'a'
   753  00DA57  75                 	db	117	;'u'
   754  00DA58  73                 	db	115	;'s'
   755  00DA59  65                 	db	101	;'e'
   756  00DA5A  20                 	db	32
   757  00DA5B  6F                 	db	111	;'o'
   758  00DA5C  66                 	db	102	;'f'
   759  00DA5D  20                 	db	32
   760  00DA5E  74                 	db	116	;'t'
   761  00DA5F  68                 	db	104	;'h'
   762  00DA60  65                 	db	101	;'e'
   763  00DA61  20                 	db	32
   764  00DA62  6D                 	db	109	;'m'
   765  00DA63  6F                 	db	111	;'o'
   766  00DA64  73                 	db	115	;'s'
   767  00DA65  74                 	db	116	;'t'
   768  00DA66  20                 	db	32
   769  00DA67  72                 	db	114	;'r'
   770  00DA68  65                 	db	101	;'e'
   771  00DA69  63                 	db	99	;'c'
   772  00DA6A  65                 	db	101	;'e'
   773  00DA6B  6E                 	db	110	;'n'
   774  00DA6C  74                 	db	116	;'t'
   775  00DA6D  20                 	db	32
   776  00DA6E  64                 	db	100	;'d'
   777  00DA6F  65                 	db	101	;'e'
   778  00DA70  76                 	db	118	;'v'
   779  00DA71  69                 	db	105	;'i'
   780  00DA72  63                 	db	99	;'c'
   781  00DA73  65                 	db	101	;'e'
   782  00DA74  20                 	db	32
   783  00DA75  72                 	db	114	;'r'
   784  00DA76  65                 	db	101	;'e'
   785  00DA77  73                 	db	115	;'s'
   786  00DA78  65                 	db	101	;'e'
   787  00DA79  74                 	db	116	;'t'
   788  00DA7A  0A                 	db	10
   789  00DA7B  0D                 	db	13
   790  00DA7C  20                 	db	32
   791  00DA7D  20                 	db	32
   792  00DA7E  20                 	db	32
   793  00DA7F  2A                 	db	42
   794  00DA80  49                 	db	73	;'I'
   795  00DA81  44                 	db	68	;'D'
   796  00DA82  4E                 	db	78	;'N'
   797  00DA83  3F                 	db	63	;'?'
   798  00DA84  3A                 	db	58	;':'
   799  00DA85  20                 	db	32
   800  00DA86  52                 	db	82	;'R'
   801  00DA87  65                 	db	101	;'e'
   802  00DA88  74                 	db	116	;'t'
   803  00DA89  75                 	db	117	;'u'
   804  00DA8A  72                 	db	114	;'r'
   805  00DA8B  6E                 	db	110	;'n'
   806  00DA8C  73                 	db	115	;'s'
   807  00DA8D  20                 	db	32
   808  00DA8E  64                 	db	100	;'d'
   809  00DA8F  65                 	db	101	;'e'
   810  00DA90  76                 	db	118	;'v'
   811  00DA91  69                 	db	105	;'i'
   812  00DA92  63                 	db	99	;'c'
   813  00DA93  65                 	db	101	;'e'
   814  00DA94  20                 	db	32
   815  00DA95  69                 	db	105	;'i'
   816  00DA96  64                 	db	100	;'d'
   817  00DA97  65                 	db	101	;'e'
   818  00DA98  6E                 	db	110	;'n'
   819  00DA99  74                 	db	116	;'t'
   820  00DA9A  69                 	db	105	;'i'
   821  00DA9B  66                 	db	102	;'f'
   822  00DA9C  69                 	db	105	;'i'
   823  00DA9D  63                 	db	99	;'c'
   824  00DA9E  61                 	db	97	;'a'
   825  00DA9F  74                 	db	116	;'t'
   826  00DAA0  69                 	db	105	;'i'
   827  00DAA1  6F                 	db	111	;'o'
   828  00DAA2  6E                 	db	110	;'n'
   829  00DAA3  20                 	db	32
   830  00DAA4  73                 	db	115	;'s'
   831  00DAA5  74                 	db	116	;'t'
   832  00DAA6  72                 	db	114	;'r'
   833  00DAA7  69                 	db	105	;'i'
   834  00DAA8  6E                 	db	110	;'n'
   835  00DAA9  67                 	db	103	;'g'
   836  00DAAA  0A                 	db	10
   837  00DAAB  0D                 	db	13
   838  00DAAC  20                 	db	32
   839  00DAAD  20                 	db	32
   840  00DAAE  20                 	db	32
   841  00DAAF  44                 	db	68	;'D'
   842  00DAB0  65                 	db	101	;'e'
   843  00DAB1  76                 	db	118	;'v'
   844  00DAB2  69                 	db	105	;'i'
   845  00DAB3  63                 	db	99	;'c'
   846  00DAB4  65                 	db	101	;'e'
   847  00DAB5  20                 	db	32
   848  00DAB6  4F                 	db	79	;'O'
   849  00DAB7  6E                 	db	110	;'n'
   850  00DAB8  20                 	db	32
   851  00DAB9  54                 	db	84	;'T'
   852  00DABA  69                 	db	105	;'i'
   853  00DABB  6D                 	db	109	;'m'
   854  00DABC  65                 	db	101	;'e'
   855  00DABD  3F                 	db	63	;'?'
   856  00DABE  3A                 	db	58	;':'
   857  00DABF  20                 	db	32
   858  00DAC0  52                 	db	82	;'R'
   859  00DAC1  65                 	db	101	;'e'
   860  00DAC2  74                 	db	116	;'t'
   861  00DAC3  75                 	db	117	;'u'
   862  00DAC4  72                 	db	114	;'r'
   863  00DAC5  6E                 	db	110	;'n'
   864  00DAC6  73                 	db	115	;'s'
   865  00DAC7  20                 	db	32
   866  00DAC8  64                 	db	100	;'d'
   867  00DAC9  65                 	db	101	;'e'
   868  00DACA  76                 	db	118	;'v'
   869  00DACB  69                 	db	105	;'i'
   870  00DACC  63                 	db	99	;'c'
   871  00DACD  65                 	db	101	;'e'
   872  00DACE  20                 	db	32
   873  00DACF  6F                 	db	111	;'o'
   874  00DAD0  6E                 	db	110	;'n'
   875  00DAD1  20                 	db	32
   876  00DAD2  74                 	db	116	;'t'
   877  00DAD3  69                 	db	105	;'i'
   878  00DAD4  6D                 	db	109	;'m'
   879  00DAD5  65                 	db	101	;'e'
   880  00DAD6  20                 	db	32
   881  00DAD7  73                 	db	115	;'s'
   882  00DAD8  69                 	db	105	;'i'
   883  00DAD9  6E                 	db	110	;'n'
   884  00DADA  63                 	db	99	;'c'
   885  00DADB  65                 	db	101	;'e'
   886  00DADC  20                 	db	32
   887  00DADD  6C                 	db	108	;'l'
   888  00DADE  61                 	db	97	;'a'
   889  00DADF  73                 	db	115	;'s'
   890  00DAE0  74                 	db	116	;'t'
   891  00DAE1  20                 	db	32
   892  00DAE2  64                 	db	100	;'d'
   893  00DAE3  65                 	db	101	;'e'
   894  00DAE4  76                 	db	118	;'v'
   895  00DAE5  69                 	db	105	;'i'
   896  00DAE6  63                 	db	99	;'c'
   897  00DAE7  65                 	db	101	;'e'
   898  00DAE8  20                 	db	32
   899  00DAE9  72                 	db	114	;'r'
   900  00DAEA  65                 	db	101	;'e'
   901  00DAEB  73                 	db	115	;'s'
   902  00DAEC  65                 	db	101	;'e'
   903  00DAED  74                 	db	116	;'t'
   904  00DAEE  0A                 	db	10
   905  00DAEF  0D                 	db	13
   906  00DAF0  20                 	db	32
   907  00DAF1  20                 	db	32
   908  00DAF2  20                 	db	32
   909  00DAF3  44                 	db	68	;'D'
   910  00DAF4  65                 	db	101	;'e'
   911  00DAF5  76                 	db	118	;'v'
   912  00DAF6  69                 	db	105	;'i'
   913  00DAF7  63                 	db	99	;'c'
   914  00DAF8  65                 	db	101	;'e'
   915  00DAF9  20                 	db	32
   916  00DAFA  49                 	db	73	;'I'
   917  00DAFB  44                 	db	68	;'D'
   918  00DAFC  3F                 	db	63	;'?'
   919  00DAFD  3A                 	db	58	;':'
   920  00DAFE  20                 	db	32
   921  00DAFF  52                 	db	82	;'R'
   922  00DB00  65                 	db	101	;'e'
   923  00DB01  74                 	db	116	;'t'
   924  00DB02  75                 	db	117	;'u'
   925  00DB03  72                 	db	114	;'r'
   926  00DB04  6E                 	db	110	;'n'
   927  00DB05  73                 	db	115	;'s'
   928  00DB06  20                 	db	32
   929  00DB07  64                 	db	100	;'d'
   930  00DB08  65                 	db	101	;'e'
   931  00DB09  76                 	db	118	;'v'
   932  00DB0A  69                 	db	105	;'i'
   933  00DB0B  63                 	db	99	;'c'
   934  00DB0C  65                 	db	101	;'e'
   935  00DB0D  20                 	db	32
   936  00DB0E  49                 	db	73	;'I'
   937  00DB0F  44                 	db	68	;'D'
   938  00DB10  20                 	db	32
   939  00DB11  61                 	db	97	;'a'
   940  00DB12  73                 	db	115	;'s'
   941  00DB13  20                 	db	32
   942  00DB14  70                 	db	112	;'p'
   943  00DB15  72                 	db	114	;'r'
   944  00DB16  65                 	db	101	;'e'
   945  00DB17  2D                 	db	45
   946  00DB18  70                 	db	112	;'p'
   947  00DB19  72                 	db	114	;'r'
   948  00DB1A  6F                 	db	111	;'o'
   949  00DB1B  67                 	db	103	;'g'
   950  00DB1C  72                 	db	114	;'r'
   951  00DB1D  61                 	db	97	;'a'
   952  00DB1E  6D                 	db	109	;'m'
   953  00DB1F  6D                 	db	109	;'m'
   954  00DB20  65                 	db	101	;'e'
   955  00DB21  64                 	db	100	;'d'
   956  00DB22  20                 	db	32
   957  00DB23  69                 	db	105	;'i'
   958  00DB24  6E                 	db	110	;'n'
   959  00DB25  20                 	db	32
   960  00DB26  66                 	db	102	;'f'
   961  00DB27  6C                 	db	108	;'l'
   962  00DB28  61                 	db	97	;'a'
   963  00DB29  73                 	db	115	;'s'
   964  00DB2A  68                 	db	104	;'h'
   965  00DB2B  20                 	db	32
   966  00DB2C  6D                 	db	109	;'m'
   967  00DB2D  65                 	db	101	;'e'
   968  00DB2E  6D                 	db	109	;'m'
   969  00DB2F  6F                 	db	111	;'o'
   970  00DB30  72                 	db	114	;'r'
   971  00DB31  79                 	db	121	;'y'
   972  00DB32  0A                 	db	10
   973  00DB33  0D                 	db	13
   974  00DB34  20                 	db	32
   975  00DB35  20                 	db	32
   976  00DB36  20                 	db	32
   977  00DB37  52                 	db	82	;'R'
   978  00DB38  65                 	db	101	;'e'
   979  00DB39  76                 	db	118	;'v'
   980  00DB3A  69                 	db	105	;'i'
   981  00DB3B  73                 	db	115	;'s'
   982  00DB3C  69                 	db	105	;'i'
   983  00DB3D  6F                 	db	111	;'o'
   984  00DB3E  6E                 	db	110	;'n'
   985  00DB3F  20                 	db	32
   986  00DB40  49                 	db	73	;'I'
   987  00DB41  44                 	db	68	;'D'
   988  00DB42  3F                 	db	63	;'?'
   989  00DB43  3A                 	db	58	;':'
   990  00DB44  20                 	db	32
   991  00DB45  52                 	db	82	;'R'
   992  00DB46  65                 	db	101	;'e'
   993  00DB47  74                 	db	116	;'t'
   994  00DB48  75                 	db	117	;'u'
   995  00DB49  72                 	db	114	;'r'
   996  00DB4A  6E                 	db	110	;'n'
   997  00DB4B  73                 	db	115	;'s'
   998  00DB4C  20                 	db	32
   999  00DB4D  64                 	db	100	;'d'
  1000  00DB4E  65                 	db	101	;'e'
  1001  00DB4F  76                 	db	118	;'v'
  1002  00DB50  69                 	db	105	;'i'
  1003  00DB51  63                 	db	99	;'c'
  1004  00DB52  65                 	db	101	;'e'
  1005  00DB53  20                 	db	32
  1006  00DB54  73                 	db	115	;'s'
  1007  00DB55  69                 	db	105	;'i'
  1008  00DB56  6C                 	db	108	;'l'
  1009  00DB57  69                 	db	105	;'i'
  1010  00DB58  63                 	db	99	;'c'
  1011  00DB59  6F                 	db	111	;'o'
  1012  00DB5A  6E                 	db	110	;'n'
  1013  00DB5B  20                 	db	32
  1014  00DB5C  72                 	db	114	;'r'
  1015  00DB5D  65                 	db	101	;'e'
  1016  00DB5E  76                 	db	118	;'v'
  1017  00DB5F  69                 	db	105	;'i'
  1018  00DB60  73                 	db	115	;'s'
  1019  00DB61  69                 	db	105	;'i'
  1020  00DB62  6F                 	db	111	;'o'
  1021  00DB63  6E                 	db	110	;'n'
  1022  00DB64  20                 	db	32
  1023  00DB65  49                 	db	73	;'I'
  1024  00DB66  44                 	db	68	;'D'
  1025  00DB67  20                 	db	32
  1026  00DB68  61                 	db	97	;'a'
  1027  00DB69  73                 	db	115	;'s'
  1028  00DB6A  20                 	db	32
  1029  00DB6B  70                 	db	112	;'p'
  1030  00DB6C  72                 	db	114	;'r'
  1031  00DB6D  65                 	db	101	;'e'
  1032  00DB6E  2D                 	db	45
  1033  00DB6F  70                 	db	112	;'p'
  1034  00DB70  72                 	db	114	;'r'
  1035  00DB71  6F                 	db	111	;'o'
  1036  00DB72  67                 	db	103	;'g'
  1037  00DB73  72                 	db	114	;'r'
  1038  00DB74  61                 	db	97	;'a'
  1039  00DB75  6D                 	db	109	;'m'
  1040  00DB76  6D                 	db	109	;'m'
  1041  00DB77  65                 	db	101	;'e'
  1042  00DB78  64                 	db	100	;'d'
  1043  00DB79  20                 	db	32
  1044  00DB7A  69                 	db	105	;'i'
  1045  00DB7B  6E                 	db	110	;'n'
  1046  00DB7C  20                 	db	32
  1047  00DB7D  66                 	db	102	;'f'
  1048  00DB7E  6C                 	db	108	;'l'
  1049  00DB7F  61                 	db	97	;'a'
  1050  00DB80  73                 	db	115	;'s'
  1051  00DB81  68                 	db	104	;'h'
  1052  00DB82  20                 	db	32
  1053  00DB83  6D                 	db	109	;'m'
  1054  00DB84  65                 	db	101	;'e'
  1055  00DB85  6D                 	db	109	;'m'
  1056  00DB86  6F                 	db	111	;'o'
  1057  00DB87  72                 	db	114	;'r'
  1058  00DB88  79                 	db	121	;'y'
  1059  00DB89  0A                 	db	10
  1060  00DB8A  0D                 	db	13
  1061  00DB8B  20                 	db	32
  1062  00DB8C  20                 	db	32
  1063  00DB8D  20                 	db	32
  1064  00DB8E  55                 	db	85	;'U'
  1065  00DB8F  73                 	db	115	;'s'
  1066  00DB90  65                 	db	101	;'e'
  1067  00DB91  72                 	db	114	;'r'
  1068  00DB92  20                 	db	32
  1069  00DB93  49                 	db	73	;'I'
  1070  00DB94  44                 	db	68	;'D'
  1071  00DB95  73                 	db	115	;'s'
  1072  00DB96  3F                 	db	63	;'?'
  1073  00DB97  3A                 	db	58	;':'
  1074  00DB98  20                 	db	32
  1075  00DB99  52                 	db	82	;'R'
  1076  00DB9A  65                 	db	101	;'e'
  1077  00DB9B  74                 	db	116	;'t'
  1078  00DB9C  75                 	db	117	;'u'
  1079  00DB9D  72                 	db	114	;'r'
  1080  00DB9E  6E                 	db	110	;'n'
  1081  00DB9F  73                 	db	115	;'s'
  1082  00DBA0  20                 	db	32
  1083  00DBA1  61                 	db	97	;'a'
  1084  00DBA2  20                 	db	32
  1085  00DBA3  6C                 	db	108	;'l'
  1086  00DBA4  69                 	db	105	;'i'
  1087  00DBA5  73                 	db	115	;'s'
  1088  00DBA6  74                 	db	116	;'t'
  1089  00DBA7  20                 	db	32
  1090  00DBA8  6F                 	db	111	;'o'
  1091  00DBA9  66                 	db	102	;'f'
  1092  00DBAA  20                 	db	32
  1093  00DBAB  75                 	db	117	;'u'
  1094  00DBAC  73                 	db	115	;'s'
  1095  00DBAD  65                 	db	101	;'e'
  1096  00DBAE  72                 	db	114	;'r'
  1097  00DBAF  20                 	db	32
  1098  00DBB0  49                 	db	73	;'I'
  1099  00DBB1  44                 	db	68	;'D'
  1100  00DBB2  73                 	db	115	;'s'
  1101  00DBB3  20                 	db	32
  1102  00DBB4  28                 	db	40
  1103  00DBB5  64                 	db	100	;'d'
  1104  00DBB6  69                 	db	105	;'i'
  1105  00DBB7  73                 	db	115	;'s'
  1106  00DBB8  70                 	db	112	;'p'
  1107  00DBB9  6C                 	db	108	;'l'
  1108  00DBBA  61                 	db	97	;'a'
  1109  00DBBB  79                 	db	121	;'y'
  1110  00DBBC  65                 	db	101	;'e'
  1111  00DBBD  64                 	db	100	;'d'
  1112  00DBBE  20                 	db	32
  1113  00DBBF  69                 	db	105	;'i'
  1114  00DBC0  6E                 	db	110	;'n'
  1115  00DBC1  20                 	db	32
  1116  00DBC2  68                 	db	104	;'h'
  1117  00DBC3  65                 	db	101	;'e'
  1118  00DBC4  78                 	db	120	;'x'
  1119  00DBC5  29                 	db	41
  1120  00DBC6  20                 	db	32
  1121  00DBC7  61                 	db	97	;'a'
  1122  00DBC8  73                 	db	115	;'s'
  1123  00DBC9  20                 	db	32
  1124  00DBCA  73                 	db	115	;'s'
  1125  00DBCB  74                 	db	116	;'t'
  1126  00DBCC  6F                 	db	111	;'o'
  1127  00DBCD  72                 	db	114	;'r'
  1128  00DBCE  65                 	db	101	;'e'
  1129  00DBCF  64                 	db	100	;'d'
  1130  00DBD0  20                 	db	32
  1131  00DBD1  69                 	db	105	;'i'
  1132  00DBD2  6E                 	db	110	;'n'
  1133  00DBD3  20                 	db	32
  1134  00DBD4  66                 	db	102	;'f'
  1135  00DBD5  6C                 	db	108	;'l'
  1136  00DBD6  61                 	db	97	;'a'
  1137  00DBD7  73                 	db	115	;'s'
  1138  00DBD8  68                 	db	104	;'h'
  1139  00DBD9  20                 	db	32
  1140  00DBDA  6D                 	db	109	;'m'
  1141  00DBDB  65                 	db	101	;'e'
  1142  00DBDC  6D                 	db	109	;'m'
  1143  00DBDD  6F                 	db	111	;'o'
  1144  00DBDE  72                 	db	114	;'r'
  1145  00DBDF  79                 	db	121	;'y'
  1146  00DBE0  0A                 	db	10
  1147  00DBE1  0D                 	db	13
  1148  00DBE2  20                 	db	32
  1149  00DBE3  20                 	db	32
  1150  00DBE4  20                 	db	32
  1151  00DBE5  41                 	db	65	;'A'
  1152  00DBE6  44                 	db	68	;'D'
  1153  00DBE7  43                 	db	67	;'C'
  1154  00DBE8  20                 	db	32
  1155  00DBE9  45                 	db	69	;'E'
  1156  00DBEA  72                 	db	114	;'r'
  1157  00DBEB  72                 	db	114	;'r'
  1158  00DBEC  6F                 	db	111	;'o'
  1159  00DBED  72                 	db	114	;'r'
  1160  00DBEE  3F                 	db	63	;'?'
  1161  00DBEF  3A                 	db	58	;':'
  1162  00DBF0  20                 	db	32
  1163  00DBF1  52                 	db	82	;'R'
  1164  00DBF2  65                 	db	101	;'e'
  1165  00DBF3  74                 	db	116	;'t'
  1166  00DBF4  75                 	db	117	;'u'
  1167  00DBF5  72                 	db	114	;'r'
  1168  00DBF6  6E                 	db	110	;'n'
  1169  00DBF7  73                 	db	115	;'s'
  1170  00DBF8  20                 	db	32
  1171  00DBF9  74                 	db	116	;'t'
  1172  00DBFA  68                 	db	104	;'h'
  1173  00DBFB  65                 	db	101	;'e'
  1174  00DBFC  20                 	db	32
  1175  00DBFD  63                 	db	99	;'c'
  1176  00DBFE  61                 	db	97	;'a'
  1177  00DBFF  75                 	db	117	;'u'
  1178  00DC00  73                 	db	115	;'s'
  1179  00DC01  65                 	db	101	;'e'
  1180  00DC02  20                 	db	32
  1181  00DC03  6F                 	db	111	;'o'
  1182  00DC04  66                 	db	102	;'f'
  1183  00DC05  20                 	db	32
  1184  00DC06  61                 	db	97	;'a'
  1185  00DC07  6E                 	db	110	;'n'
  1186  00DC08  20                 	db	32
  1187  00DC09  41                 	db	65	;'A'
  1188  00DC0A  44                 	db	68	;'D'
  1189  00DC0B  43                 	db	67	;'C'
  1190  00DC0C  20                 	db	32
  1191  00DC0D  65                 	db	101	;'e'
  1192  00DC0E  72                 	db	114	;'r'
  1193  00DC0F  72                 	db	114	;'r'
  1194  00DC10  6F                 	db	111	;'o'
  1195  00DC11  72                 	db	114	;'r'
  1196  00DC12  20                 	db	32
  1197  00DC13  69                 	db	105	;'i'
  1198  00DC14  66                 	db	102	;'f'
  1199  00DC15  20                 	db	32
  1200  00DC16  61                 	db	97	;'a'
  1201  00DC17  6E                 	db	110	;'n'
  1202  00DC18  20                 	db	32
  1203  00DC19  65                 	db	101	;'e'
  1204  00DC1A  72                 	db	114	;'r'
  1205  00DC1B  72                 	db	114	;'r'
  1206  00DC1C  6F                 	db	111	;'o'
  1207  00DC1D  72                 	db	114	;'r'
  1208  00DC1E  20                 	db	32
  1209  00DC1F  6F                 	db	111	;'o'
  1210  00DC20  63                 	db	99	;'c'
  1211  00DC21  63                 	db	99	;'c'
  1212  00DC22  75                 	db	117	;'u'
  1213  00DC23  72                 	db	114	;'r'
  1214  00DC24  72                 	db	114	;'r'
  1215  00DC25  65                 	db	101	;'e'
  1216  00DC26  64                 	db	100	;'d'
  1217  00DC27  0A                 	db	10
  1218  00DC28  0D                 	db	13
  1219  00DC29  20                 	db	32
  1220  00DC2A  20                 	db	32
  1221  00DC2B  20                 	db	32
  1222  00DC2C  43                 	db	67	;'C'
  1223  00DC2D  6C                 	db	108	;'l'
  1224  00DC2E  65                 	db	101	;'e'
  1225  00DC2F  61                 	db	97	;'a'
  1226  00DC30  72                 	db	114	;'r'
  1227  00DC31  20                 	db	32
  1228  00DC32  41                 	db	65	;'A'
  1229  00DC33  44                 	db	68	;'D'
  1230  00DC34  43                 	db	67	;'C'
  1231  00DC35  20                 	db	32
  1232  00DC36  45                 	db	69	;'E'
  1233  00DC37  72                 	db	114	;'r'
  1234  00DC38  72                 	db	114	;'r'
  1235  00DC39  6F                 	db	111	;'o'
  1236  00DC3A  72                 	db	114	;'r'
  1237  00DC3B  3A                 	db	58	;':'
  1238  00DC3C  20                 	db	32
  1239  00DC3D  43                 	db	67	;'C'
  1240  00DC3E  6C                 	db	108	;'l'
  1241  00DC3F  65                 	db	101	;'e'
  1242  00DC40  61                 	db	97	;'a'
  1243  00DC41  72                 	db	114	;'r'
  1244  00DC42  73                 	db	115	;'s'
  1245  00DC43  20                 	db	32
  1246  00DC44  74                 	db	116	;'t'
  1247  00DC45  68                 	db	104	;'h'
  1248  00DC46  65                 	db	101	;'e'
  1249  00DC47  20                 	db	32
  1250  00DC48  41                 	db	65	;'A'
  1251  00DC49  44                 	db	68	;'D'
  1252  00DC4A  43                 	db	67	;'C'
  1253  00DC4B  20                 	db	32
  1254  00DC4C  65                 	db	101	;'e'
  1255  00DC4D  72                 	db	114	;'r'
  1256  00DC4E  72                 	db	114	;'r'
  1257  00DC4F  6F                 	db	111	;'o'
  1258  00DC50  72                 	db	114	;'r'
  1259  00DC51  20                 	db	32
  1260  00DC52  61                 	db	97	;'a'
  1261  00DC53  6E                 	db	110	;'n'
  1262  00DC54  64                 	db	100	;'d'
  1263  00DC55  20                 	db	32
  1264  00DC56  72                 	db	114	;'r'
  1265  00DC57  65                 	db	101	;'e'
  1266  00DC58  73                 	db	115	;'s'
  1267  00DC59  75                 	db	117	;'u'
  1268  00DC5A  6D                 	db	109	;'m'
  1269  00DC5B  65                 	db	101	;'e'
  1270  00DC5C  73                 	db	115	;'s'
  1271  00DC5D  20                 	db	32
  1272  00DC5E  41                 	db	65	;'A'
  1273  00DC5F  44                 	db	68	;'D'
  1274  00DC60  43                 	db	67	;'C'
  1275  00DC61  20                 	db	32
  1276  00DC62  63                 	db	99	;'c'
  1277  00DC63  6F                 	db	111	;'o'
  1278  00DC64  6E                 	db	110	;'n'
  1279  00DC65  76                 	db	118	;'v'
  1280  00DC66  65                 	db	101	;'e'
  1281  00DC67  72                 	db	114	;'r'
  1282  00DC68  73                 	db	115	;'s'
  1283  00DC69  69                 	db	105	;'i'
  1284  00DC6A  6F                 	db	111	;'o'
  1285  00DC6B  6E                 	db	110	;'n'
  1286  00DC6C  73                 	db	115	;'s'
  1287  00DC6D  0A                 	db	10
  1288  00DC6E  0D                 	db	13
  1289  00DC6F  20                 	db	32
  1290  00DC70  20                 	db	32
  1291  00DC71  20                 	db	32
  1292  00DC72  56                 	db	86	;'V'
  1293  00DC73  43                 	db	67	;'C'
  1294  00DC74  43                 	db	67	;'C'
  1295  00DC75  20                 	db	32
  1296  00DC76  4F                 	db	79	;'O'
  1297  00DC77  76                 	db	118	;'v'
  1298  00DC78  65                 	db	101	;'e'
  1299  00DC79  72                 	db	114	;'r'
  1300  00DC7A  76                 	db	118	;'v'
  1301  00DC7B  6F                 	db	111	;'o'
  1302  00DC7C  6C                 	db	108	;'l'
  1303  00DC7D  74                 	db	116	;'t'
  1304  00DC7E  61                 	db	97	;'a'
  1305  00DC7F  67                 	db	103	;'g'
  1306  00DC80  65                 	db	101	;'e'
  1307  00DC81  3F                 	db	63	;'?'
  1308  00DC82  3A                 	db	58	;':'
  1309  00DC83  20                 	db	32
  1310  00DC84  53                 	db	83	;'S'
  1311  00DC85  74                 	db	116	;'t'
  1312  00DC86  61                 	db	97	;'a'
  1313  00DC87  74                 	db	116	;'t'
  1314  00DC88  65                 	db	101	;'e'
  1315  00DC89  73                 	db	115	;'s'
  1316  00DC8A  20                 	db	32
  1317  00DC8B  69                 	db	105	;'i'
  1318  00DC8C  66                 	db	102	;'f'
  1319  00DC8D  20                 	db	32
  1320  00DC8E  61                 	db	97	;'a'
  1321  00DC8F  20                 	db	32
  1322  00DC90  56                 	db	86	;'V'
  1323  00DC91  43                 	db	67	;'C'
  1324  00DC92  43                 	db	67	;'C'
  1325  00DC93  20                 	db	32
  1326  00DC94  6F                 	db	111	;'o'
  1327  00DC95  76                 	db	118	;'v'
  1328  00DC96  65                 	db	101	;'e'
  1329  00DC97  72                 	db	114	;'r'
  1330  00DC98  76                 	db	118	;'v'
  1331  00DC99  6F                 	db	111	;'o'
  1332  00DC9A  6C                 	db	108	;'l'
  1333  00DC9B  74                 	db	116	;'t'
  1334  00DC9C  61                 	db	97	;'a'
  1335  00DC9D  67                 	db	103	;'g'
  1336  00DC9E  65                 	db	101	;'e'
  1337  00DC9F  20                 	db	32
  1338  00DCA0  63                 	db	99	;'c'
  1339  00DCA1  6F                 	db	111	;'o'
  1340  00DCA2  6E                 	db	110	;'n'
  1341  00DCA3  64                 	db	100	;'d'
  1342  00DCA4  69                 	db	105	;'i'
  1343  00DCA5  74                 	db	116	;'t'
  1344  00DCA6  69                 	db	105	;'i'
  1345  00DCA7  6F                 	db	111	;'o'
  1346  00DCA8  6E                 	db	110	;'n'
  1347  00DCA9  20                 	db	32
  1348  00DCAA  68                 	db	104	;'h'
  1349  00DCAB  61                 	db	97	;'a'
  1350  00DCAC  73                 	db	115	;'s'
  1351  00DCAD  20                 	db	32
  1352  00DCAE  6F                 	db	111	;'o'
  1353  00DCAF  63                 	db	99	;'c'
  1354  00DCB0  63                 	db	99	;'c'
  1355  00DCB1  75                 	db	117	;'u'
  1356  00DCB2  72                 	db	114	;'r'
  1357  00DCB3  72                 	db	114	;'r'
  1358  00DCB4  65                 	db	101	;'e'
  1359  00DCB5  64                 	db	100	;'d'
  1360  00DCB6  20                 	db	32
  1361  00DCB7  6F                 	db	111	;'o'
  1362  00DCB8  72                 	db	114	;'r'
  1363  00DCB9  20                 	db	32
  1364  00DCBA  6E                 	db	110	;'n'
  1365  00DCBB  6F                 	db	111	;'o'
  1366  00DCBC  74                 	db	116	;'t'
  1367  00DCBD  0A                 	db	10
  1368  00DCBE  0D                 	db	13
  1369  00DCBF  20                 	db	32
  1370  00DCC0  20                 	db	32
  1371  00DCC1  20                 	db	32
  1372  00DCC2  43                 	db	67	;'C'
  1373  00DCC3  6C                 	db	108	;'l'
  1374  00DCC4  65                 	db	101	;'e'
  1375  00DCC5  61                 	db	97	;'a'
  1376  00DCC6  72                 	db	114	;'r'
  1377  00DCC7  20                 	db	32
  1378  00DCC8  4D                 	db	77	;'M'
  1379  00DCC9  61                 	db	97	;'a'
  1380  00DCCA  78                 	db	120	;'x'
  1381  00DCCB  20                 	db	32
  1382  00DCCC  56                 	db	86	;'V'
  1383  00DCCD  61                 	db	97	;'a'
  1384  00DCCE  6C                 	db	108	;'l'
  1385  00DCCF  75                 	db	117	;'u'
  1386  00DCD0  65                 	db	101	;'e'
  1387  00DCD1  73                 	db	115	;'s'
  1388  00DCD2  3A                 	db	58	;':'
  1389  00DCD3  20                 	db	32
  1390  00DCD4  45                 	db	69	;'E'
  1391  00DCD5  72                 	db	114	;'r'
  1392  00DCD6  61                 	db	97	;'a'
  1393  00DCD7  73                 	db	115	;'s'
  1394  00DCD8  65                 	db	101	;'e'
  1395  00DCD9  73                 	db	115	;'s'
  1396  00DCDA  20                 	db	32
  1397  00DCDB  6D                 	db	109	;'m'
  1398  00DCDC  61                 	db	97	;'a'
  1399  00DCDD  78                 	db	120	;'x'
  1400  00DCDE  69                 	db	105	;'i'
  1401  00DCDF  6D                 	db	109	;'m'
  1402  00DCE0  75                 	db	117	;'u'
  1403  00DCE1  6D                 	db	109	;'m'
  1404  00DCE2  20                 	db	32
  1405  00DCE3  72                 	db	114	;'r'
  1406  00DCE4  65                 	db	101	;'e'
  1407  00DCE5  63                 	db	99	;'c'
  1408  00DCE6  6F                 	db	111	;'o'
  1409  00DCE7  72                 	db	114	;'r'
  1410  00DCE8  64                 	db	100	;'d'
  1411  00DCE9  65                 	db	101	;'e'
  1412  00DCEA  64                 	db	100	;'d'
  1413  00DCEB  20                 	db	32
  1414  00DCEC  76                 	db	118	;'v'
  1415  00DCED  61                 	db	97	;'a'
  1416  00DCEE  6C                 	db	108	;'l'
  1417  00DCEF  75                 	db	117	;'u'
  1418  00DCF0  65                 	db	101	;'e'
  1419  00DCF1  73                 	db	115	;'s'
  1420  00DCF2  20                 	db	32
  1421  00DCF3  66                 	db	102	;'f'
  1422  00DCF4  72                 	db	114	;'r'
  1423  00DCF5  6F                 	db	111	;'o'
  1424  00DCF6  6D                 	db	109	;'m'
  1425  00DCF7  20                 	db	32
  1426  00DCF8  45                 	db	69	;'E'
  1427  00DCF9  45                 	db	69	;'E'
  1428  00DCFA  50                 	db	80	;'P'
  1429  00DCFB  52                 	db	82	;'R'
  1430  00DCFC  4F                 	db	79	;'O'
  1431  00DCFD  4D                 	db	77	;'M'
  1432  00DCFE  0A                 	db	10
  1433  00DCFF  0D                 	db	13
  1434  00DD00  20                 	db	32
  1435  00DD01  20                 	db	32
  1436  00DD02  20                 	db	32
  1437  00DD03  48                 	db	72	;'H'
  1438  00DD04  65                 	db	101	;'e'
  1439  00DD05  6C                 	db	108	;'l'
  1440  00DD06  70                 	db	112	;'p'
  1441  00DD07  3A                 	db	58	;':'
  1442  00DD08  20                 	db	32
  1443  00DD09  54                 	db	84	;'T'
  1444  00DD0A  68                 	db	104	;'h'
  1445  00DD0B  69                 	db	105	;'i'
  1446  00DD0C  73                 	db	115	;'s'
  1447  00DD0D  20                 	db	32
  1448  00DD0E  6D                 	db	109	;'m'
  1449  00DD0F  65                 	db	101	;'e'
  1450  00DD10  73                 	db	115	;'s'
  1451  00DD11  73                 	db	115	;'s'
  1452  00DD12  61                 	db	97	;'a'
  1453  00DD13  67                 	db	103	;'g'
  1454  00DD14  65                 	db	101	;'e'
  1455  00DD15  2C                 	db	44
  1456  00DD16  20                 	db	32
  1457  00DD17  6C                 	db	108	;'l'
  1458  00DD18  69                 	db	105	;'i'
  1459  00DD19  73                 	db	115	;'s'
  1460  00DD1A  74                 	db	116	;'t'
  1461  00DD1B  73                 	db	115	;'s'
  1462  00DD1C  20                 	db	32
  1463  00DD1D  73                 	db	115	;'s'
  1464  00DD1E  75                 	db	117	;'u'
  1465  00DD1F  70                 	db	112	;'p'
  1466  00DD20  70                 	db	112	;'p'
  1467  00DD21  6F                 	db	111	;'o'
  1468  00DD22  72                 	db	114	;'r'
  1469  00DD23  74                 	db	116	;'t'
  1470  00DD24  65                 	db	101	;'e'
  1471  00DD25  64                 	db	100	;'d'
  1472  00DD26  20                 	db	32
  1473  00DD27  63                 	db	99	;'c'
  1474  00DD28  6F                 	db	111	;'o'
  1475  00DD29  6D                 	db	109	;'m'
  1476  00DD2A  6D                 	db	109	;'m'
  1477  00DD2B  61                 	db	97	;'a'
  1478  00DD2C  6E                 	db	110	;'n'
  1479  00DD2D  64                 	db	100	;'d'
  1480  00DD2E  73                 	db	115	;'s'
  1481  00DD2F  0A                 	db	10
  1482  00DD30  0D                 	db	13
  1483  00DD31  0A                 	db	10
  1484  00DD32  0D                 	db	13
  1485  00DD33  44                 	db	68	;'D'
  1486  00DD34  65                 	db	101	;'e'
  1487  00DD35  76                 	db	118	;'v'
  1488  00DD36  69                 	db	105	;'i'
  1489  00DD37  63                 	db	99	;'c'
  1490  00DD38  65                 	db	101	;'e'
  1491  00DD39  20                 	db	32
  1492  00DD3A  4D                 	db	77	;'M'
  1493  00DD3B  65                 	db	101	;'e'
  1494  00DD3C  61                 	db	97	;'a'
  1495  00DD3D  73                 	db	115	;'s'
  1496  00DD3E  75                 	db	117	;'u'
  1497  00DD3F  72                 	db	114	;'r'
  1498  00DD40  65                 	db	101	;'e'
  1499  00DD41  6D                 	db	109	;'m'
  1500  00DD42  65                 	db	101	;'e'
  1501  00DD43  6E                 	db	110	;'n'
  1502  00DD44  74                 	db	116	;'t'
  1503  00DD45  20                 	db	32
  1504  00DD46  43                 	db	67	;'C'
  1505  00DD47  6F                 	db	111	;'o'
  1506  00DD48  6D                 	db	109	;'m'
  1507  00DD49  6D                 	db	109	;'m'
  1508  00DD4A  61                 	db	97	;'a'
  1509  00DD4B  6E                 	db	110	;'n'
  1510  00DD4C  64                 	db	100	;'d'
  1511  00DD4D  73                 	db	115	;'s'
  1512  00DD4E  3A                 	db	58	;':'
  1513  00DD4F  20                 	db	32
  1514  00DD50  56                 	db	86	;'V'
  1515  00DD51  69                 	db	105	;'i'
  1516  00DD52  65                 	db	101	;'e'
  1517  00DD53  77                 	db	119	;'w'
  1518  00DD54  20                 	db	32
  1519  00DD55  6C                 	db	108	;'l'
  1520  00DD56  6F                 	db	111	;'o'
  1521  00DD57  77                 	db	119	;'w'
  1522  00DD58  20                 	db	32
  1523  00DD59  6C                 	db	108	;'l'
  1524  00DD5A  65                 	db	101	;'e'
  1525  00DD5B  76                 	db	118	;'v'
  1526  00DD5C  65                 	db	101	;'e'
  1527  00DD5D  6C                 	db	108	;'l'
  1528  00DD5E  20                 	db	32
  1529  00DD5F  73                 	db	115	;'s'
  1530  00DD60  79                 	db	121	;'y'
  1531  00DD61  73                 	db	115	;'s'
  1532  00DD62  74                 	db	116	;'t'
  1533  00DD63  65                 	db	101	;'e'
  1534  00DD64  6D                 	db	109	;'m'
  1535  00DD65  20                 	db	32
  1536  00DD66  6D                 	db	109	;'m'
  1537  00DD67  65                 	db	101	;'e'
  1538  00DD68  61                 	db	97	;'a'
  1539  00DD69  73                 	db	115	;'s'
  1540  00DD6A  75                 	db	117	;'u'
  1541  00DD6B  72                 	db	114	;'r'
  1542  00DD6C  65                 	db	101	;'e'
  1543  00DD6D  6D                 	db	109	;'m'
  1544  00DD6E  65                 	db	101	;'e'
  1545  00DD6F  6E                 	db	110	;'n'
  1546  00DD70  74                 	db	116	;'t'
  1547  00DD71  73                 	db	115	;'s'
  1548  00DD72  0A                 	db	10
  1549  00DD73  0D                 	db	13
  1550  00DD74  20                 	db	32
  1551  00DD75  20                 	db	32
  1552  00DD76  20                 	db	32
  1553  00DD77  4D                 	db	77	;'M'
  1554  00DD78  65                 	db	101	;'e'
  1555  00DD79  61                 	db	97	;'a'
  1556  00DD7A  73                 	db	115	;'s'
  1557  00DD7B  75                 	db	117	;'u'
  1558  00DD7C  72                 	db	114	;'r'
  1559  00DD7D  65                 	db	101	;'e'
  1560  00DD7E  20                 	db	32
  1561  00DD7F  50                 	db	80	;'P'
  1562  00DD80  4F                 	db	79	;'O'
  1563  00DD81  53                 	db	83	;'S'
  1564  00DD82  33                 	db	51	;'3'
  1565  00DD83  50                 	db	80	;'P'
  1566  00DD84  33                 	db	51	;'3'
  1567  00DD85  3F                 	db	63	;'?'
  1568  00DD86  3A                 	db	58	;':'
  1569  00DD87  20                 	db	32
  1570  00DD88  52                 	db	82	;'R'
  1571  00DD89  65                 	db	101	;'e'
  1572  00DD8A  74                 	db	116	;'t'
  1573  00DD8B  75                 	db	117	;'u'
  1574  00DD8C  72                 	db	114	;'r'
  1575  00DD8D  6E                 	db	110	;'n'
  1576  00DD8E  73                 	db	115	;'s'
  1577  00DD8F  20                 	db	32
  1578  00DD90  2B                 	db	43
  1579  00DD91  33                 	db	51	;'3'
  1580  00DD92  2E                 	db	46
  1581  00DD93  33                 	db	51	;'3'
  1582  00DD94  56                 	db	86	;'V'
  1583  00DD95  20                 	db	32
  1584  00DD96  41                 	db	65	;'A'
  1585  00DD97  44                 	db	68	;'D'
  1586  00DD98  43                 	db	67	;'C'
  1587  00DD99  20                 	db	32
  1588  00DD9A  43                 	db	67	;'C'
  1589  00DD9B  6F                 	db	111	;'o'
  1590  00DD9C  6E                 	db	110	;'n'
  1591  00DD9D  76                 	db	118	;'v'
  1592  00DD9E  65                 	db	101	;'e'
  1593  00DD9F  72                 	db	114	;'r'
  1594  00DDA0  73                 	db	115	;'s'
  1595  00DDA1  69                 	db	105	;'i'
  1596  00DDA2  6F                 	db	111	;'o'
  1597  00DDA3  6E                 	db	110	;'n'
  1598  00DDA4  20                 	db	32
  1599  00DDA5  69                 	db	105	;'i'
  1600  00DDA6  6E                 	db	110	;'n'
  1601  00DDA7  20                 	db	32
  1602  00DDA8  76                 	db	118	;'v'
  1603  00DDA9  6F                 	db	111	;'o'
  1604  00DDAA  6C                 	db	108	;'l'
  1605  00DDAB  74                 	db	116	;'t'
  1606  00DDAC  73                 	db	115	;'s'
  1607  00DDAD  0A                 	db	10
  1608  00DDAE  0D                 	db	13
  1609  00DDAF  20                 	db	32
  1610  00DDB0  20                 	db	32
  1611  00DDB1  20                 	db	32
  1612  00DDB2  4D                 	db	77	;'M'
  1613  00DDB3  65                 	db	101	;'e'
  1614  00DDB4  61                 	db	97	;'a'
  1615  00DDB5  73                 	db	115	;'s'
  1616  00DDB6  75                 	db	117	;'u'
  1617  00DDB7  72                 	db	114	;'r'
  1618  00DDB8  65                 	db	101	;'e'
  1619  00DDB9  20                 	db	32
  1620  00DDBA  50                 	db	80	;'P'
  1621  00DDBB  4F                 	db	79	;'O'
  1622  00DDBC  53                 	db	83	;'S'
  1623  00DDBD  31                 	db	49	;'1'
  1624  00DDBE  32                 	db	50	;'2'
  1625  00DDBF  3F                 	db	63	;'?'
  1626  00DDC0  3A                 	db	58	;':'
  1627  00DDC1  20                 	db	32
  1628  00DDC2  52                 	db	82	;'R'
  1629  00DDC3  65                 	db	101	;'e'
  1630  00DDC4  74                 	db	116	;'t'
  1631  00DDC5  75                 	db	117	;'u'
  1632  00DDC6  72                 	db	114	;'r'
  1633  00DDC7  6E                 	db	110	;'n'
  1634  00DDC8  73                 	db	115	;'s'
  1635  00DDC9  20                 	db	32
  1636  00DDCA  2B                 	db	43
  1637  00DDCB  31                 	db	49	;'1'
  1638  00DDCC  32                 	db	50	;'2'
  1639  00DDCD  56                 	db	86	;'V'
  1640  00DDCE  20                 	db	32
  1641  00DDCF  41                 	db	65	;'A'
  1642  00DDD0  44                 	db	68	;'D'
  1643  00DDD1  43                 	db	67	;'C'
  1644  00DDD2  20                 	db	32
  1645  00DDD3  43                 	db	67	;'C'
  1646  00DDD4  6F                 	db	111	;'o'
  1647  00DDD5  6E                 	db	110	;'n'
  1648  00DDD6  76                 	db	118	;'v'
  1649  00DDD7  65                 	db	101	;'e'
  1650  00DDD8  72                 	db	114	;'r'
  1651  00DDD9  73                 	db	115	;'s'
  1652  00DDDA  69                 	db	105	;'i'
  1653  00DDDB  6F                 	db	111	;'o'
  1654  00DDDC  6E                 	db	110	;'n'
  1655  00DDDD  20                 	db	32
  1656  00DDDE  69                 	db	105	;'i'
  1657  00DDDF  6E                 	db	110	;'n'
  1658  00DDE0  20                 	db	32
  1659  00DDE1  76                 	db	118	;'v'
  1660  00DDE2  6F                 	db	111	;'o'
  1661  00DDE3  6C                 	db	108	;'l'
  1662  00DDE4  74                 	db	116	;'t'
  1663  00DDE5  73                 	db	115	;'s'
  1664  00DDE6  0A                 	db	10
  1665  00DDE7  0D                 	db	13
  1666  00DDE8  20                 	db	32
  1667  00DDE9  20                 	db	32
  1668  00DDEA  20                 	db	32
  1669  00DDEB  4D                 	db	77	;'M'
  1670  00DDEC  65                 	db	101	;'e'
  1671  00DDED  61                 	db	97	;'a'
  1672  00DDEE  73                 	db	115	;'s'
  1673  00DDEF  75                 	db	117	;'u'
  1674  00DDF0  72                 	db	114	;'r'
  1675  00DDF1  65                 	db	101	;'e'
  1676  00DDF2  20                 	db	32
  1677  00DDF3  44                 	db	68	;'D'
  1678  00DDF4  69                 	db	105	;'i'
  1679  00DDF5  65                 	db	101	;'e'
  1680  00DDF6  20                 	db	32
  1681  00DDF7  54                 	db	84	;'T'
  1682  00DDF8  65                 	db	101	;'e'
  1683  00DDF9  6D                 	db	109	;'m'
  1684  00DDFA  70                 	db	112	;'p'
  1685  00DDFB  3F                 	db	63	;'?'
  1686  00DDFC  3A                 	db	58	;':'
  1687  00DDFD  20                 	db	32
  1688  00DDFE  52                 	db	82	;'R'
  1689  00DDFF  65                 	db	101	;'e'
  1690  00DE00  74                 	db	116	;'t'
  1691  00DE01  75                 	db	117	;'u'
  1692  00DE02  72                 	db	114	;'r'
  1693  00DE03  6E                 	db	110	;'n'
  1694  00DE04  73                 	db	115	;'s'
  1695  00DE05  20                 	db	32
  1696  00DE06  74                 	db	116	;'t'
  1697  00DE07  68                 	db	104	;'h'
  1698  00DE08  65                 	db	101	;'e'
  1699  00DE09  20                 	db	32
  1700  00DE0A  6D                 	db	109	;'m'
  1701  00DE0B  69                 	db	105	;'i'
  1702  00DE0C  63                 	db	99	;'c'
  1703  00DE0D  72                 	db	114	;'r'
  1704  00DE0E  6F                 	db	111	;'o'
  1705  00DE0F  63                 	db	99	;'c'
  1706  00DE10  6F                 	db	111	;'o'
  1707  00DE11  6E                 	db	110	;'n'
  1708  00DE12  74                 	db	116	;'t'
  1709  00DE13  72                 	db	114	;'r'
  1710  00DE14  6F                 	db	111	;'o'
  1711  00DE15  6C                 	db	108	;'l'
  1712  00DE16  6C                 	db	108	;'l'
  1713  00DE17  65                 	db	101	;'e'
  1714  00DE18  72                 	db	114	;'r'
  1715  00DE19  20                 	db	32
  1716  00DE1A  64                 	db	100	;'d'
  1717  00DE1B  69                 	db	105	;'i'
  1718  00DE1C  65                 	db	101	;'e'
  1719  00DE1D  20                 	db	32
  1720  00DE1E  74                 	db	116	;'t'
  1721  00DE1F  65                 	db	101	;'e'
  1722  00DE20  6D                 	db	109	;'m'
  1723  00DE21  70                 	db	112	;'p'
  1724  00DE22  65                 	db	101	;'e'
  1725  00DE23  72                 	db	114	;'r'
  1726  00DE24  61                 	db	97	;'a'
  1727  00DE25  74                 	db	116	;'t'
  1728  00DE26  75                 	db	117	;'u'
  1729  00DE27  72                 	db	114	;'r'
  1730  00DE28  65                 	db	101	;'e'
  1731  00DE29  20                 	db	32
  1732  00DE2A  69                 	db	105	;'i'
  1733  00DE2B  6E                 	db	110	;'n'
  1734  00DE2C  20                 	db	32
  1735  00DE2D  64                 	db	100	;'d'
  1736  00DE2E  65                 	db	101	;'e'
  1737  00DE2F  67                 	db	103	;'g'
  1738  00DE30  72                 	db	114	;'r'
  1739  00DE31  65                 	db	101	;'e'
  1740  00DE32  65                 	db	101	;'e'
  1741  00DE33  73                 	db	115	;'s'
  1742  00DE34  20                 	db	32
  1743  00DE35  43                 	db	67	;'C'
  1744  00DE36  0A                 	db	10
  1745  00DE37  0D                 	db	13
  1746  00DE38  20                 	db	32
  1747  00DE39  20                 	db	32
  1748  00DE3A  20                 	db	32
  1749  00DE3B  4D                 	db	77	;'M'
  1750  00DE3C  65                 	db	101	;'e'
  1751  00DE3D  61                 	db	97	;'a'
  1752  00DE3E  73                 	db	115	;'s'
  1753  00DE3F  75                 	db	117	;'u'
  1754  00DE40  72                 	db	114	;'r'
  1755  00DE41  65                 	db	101	;'e'
  1756  00DE42  20                 	db	32
  1757  00DE43  46                 	db	70	;'F'
  1758  00DE44  56                 	db	86	;'V'
  1759  00DE45  52                 	db	82	;'R'
  1760  00DE46  3F                 	db	63	;'?'
  1761  00DE47  3A                 	db	58	;':'
  1762  00DE48  20                 	db	32
  1763  00DE49  52                 	db	82	;'R'
  1764  00DE4A  65                 	db	101	;'e'
  1765  00DE4B  74                 	db	116	;'t'
  1766  00DE4C  75                 	db	117	;'u'
  1767  00DE4D  72                 	db	114	;'r'
  1768  00DE4E  6E                 	db	110	;'n'
  1769  00DE4F  73                 	db	115	;'s'
  1770  00DE50  20                 	db	32
  1771  00DE51  74                 	db	116	;'t'
  1772  00DE52  68                 	db	104	;'h'
  1773  00DE53  65                 	db	101	;'e'
  1774  00DE54  20                 	db	32
  1775  00DE55  69                 	db	105	;'i'
  1776  00DE56  6E                 	db	110	;'n'
  1777  00DE57  74                 	db	116	;'t'
  1778  00DE58  65                 	db	101	;'e'
  1779  00DE59  72                 	db	114	;'r'
  1780  00DE5A  6E                 	db	110	;'n'
  1781  00DE5B  61                 	db	97	;'a'
  1782  00DE5C  6C                 	db	108	;'l'
  1783  00DE5D  20                 	db	32
  1784  00DE5E  66                 	db	102	;'f'
  1785  00DE5F  69                 	db	105	;'i'
  1786  00DE60  78                 	db	120	;'x'
  1787  00DE61  65                 	db	101	;'e'
  1788  00DE62  64                 	db	100	;'d'
  1789  00DE63  20                 	db	32
  1790  00DE64  76                 	db	118	;'v'
  1791  00DE65  6F                 	db	111	;'o'
  1792  00DE66  6C                 	db	108	;'l'
  1793  00DE67  74                 	db	116	;'t'
  1794  00DE68  61                 	db	97	;'a'
  1795  00DE69  67                 	db	103	;'g'
  1796  00DE6A  65                 	db	101	;'e'
  1797  00DE6B  20                 	db	32
  1798  00DE6C  72                 	db	114	;'r'
  1799  00DE6D  65                 	db	101	;'e'
  1800  00DE6E  66                 	db	102	;'f'
  1801  00DE6F  65                 	db	101	;'e'
  1802  00DE70  72                 	db	114	;'r'
  1803  00DE71  65                 	db	101	;'e'
  1804  00DE72  6E                 	db	110	;'n'
  1805  00DE73  63                 	db	99	;'c'
  1806  00DE74  65                 	db	101	;'e'
  1807  00DE75  20                 	db	32
  1808  00DE76  62                 	db	98	;'b'
  1809  00DE77  75                 	db	117	;'u'
  1810  00DE78  66                 	db	102	;'f'
  1811  00DE79  66                 	db	102	;'f'
  1812  00DE7A  65                 	db	101	;'e'
  1813  00DE7B  72                 	db	114	;'r'
  1814  00DE7C  20                 	db	32
  1815  00DE7D  31                 	db	49	;'1'
  1816  00DE7E  20                 	db	32
  1817  00DE7F  6F                 	db	111	;'o'
  1818  00DE80  75                 	db	117	;'u'
  1819  00DE81  74                 	db	116	;'t'
  1820  00DE82  70                 	db	112	;'p'
  1821  00DE83  75                 	db	117	;'u'
  1822  00DE84  74                 	db	116	;'t'
  1823  00DE85  20                 	db	32
  1824  00DE86  69                 	db	105	;'i'
  1825  00DE87  6E                 	db	110	;'n'
  1826  00DE88  20                 	db	32
  1827  00DE89  76                 	db	118	;'v'
  1828  00DE8A  6F                 	db	111	;'o'
  1829  00DE8B  6C                 	db	108	;'l'
  1830  00DE8C  74                 	db	116	;'t'
  1831  00DE8D  73                 	db	115	;'s'
  1832  00DE8E  0A                 	db	10
  1833  00DE8F  0D                 	db	13
  1834  00DE90  20                 	db	32
  1835  00DE91  20                 	db	32
  1836  00DE92  20                 	db	32
  1837  00DE93  4D                 	db	77	;'M'
  1838  00DE94  65                 	db	101	;'e'
  1839  00DE95  61                 	db	97	;'a'
  1840  00DE96  73                 	db	115	;'s'
  1841  00DE97  75                 	db	117	;'u'
  1842  00DE98  72                 	db	114	;'r'
  1843  00DE99  65                 	db	101	;'e'
  1844  00DE9A  20                 	db	32
  1845  00DE9B  41                 	db	65	;'A'
  1846  00DE9C  56                 	db	86	;'V'
  1847  00DE9D  53                 	db	83	;'S'
  1848  00DE9E  53                 	db	83	;'S'
  1849  00DE9F  3F                 	db	63	;'?'
  1850  00DEA0  3A                 	db	58	;':'
  1851  00DEA1  20                 	db	32
  1852  00DEA2  52                 	db	82	;'R'
  1853  00DEA3  65                 	db	101	;'e'
  1854  00DEA4  74                 	db	116	;'t'
  1855  00DEA5  75                 	db	117	;'u'
  1856  00DEA6  72                 	db	114	;'r'
  1857  00DEA7  6E                 	db	110	;'n'
  1858  00DEA8  73                 	db	115	;'s'
  1859  00DEA9  20                 	db	32
  1860  00DEAA  74                 	db	116	;'t'
  1861  00DEAB  68                 	db	104	;'h'
  1862  00DEAC  65                 	db	101	;'e'
  1863  00DEAD  20                 	db	32
  1864  00DEAE  6D                 	db	109	;'m'
  1865  00DEAF  65                 	db	101	;'e'
  1866  00DEB0  61                 	db	97	;'a'
  1867  00DEB1  73                 	db	115	;'s'
  1868  00DEB2  75                 	db	117	;'u'
  1869  00DEB3  72                 	db	114	;'r'
  1870  00DEB4  65                 	db	101	;'e'
  1871  00DEB5  64                 	db	100	;'d'
  1872  00DEB6  20                 	db	32
  1873  00DEB7  76                 	db	118	;'v'
  1874  00DEB8  61                 	db	97	;'a'
  1875  00DEB9  6C                 	db	108	;'l'
  1876  00DEBA  75                 	db	117	;'u'
  1877  00DEBB  65                 	db	101	;'e'
  1878  00DEBC  20                 	db	32
  1879  00DEBD  6F                 	db	111	;'o'
  1880  00DEBE  66                 	db	102	;'f'
  1881  00DEBF  20                 	db	32
  1882  00DEC0  41                 	db	65	;'A'
  1883  00DEC1  6E                 	db	110	;'n'
  1884  00DEC2  61                 	db	97	;'a'
  1885  00DEC3  6C                 	db	108	;'l'
  1886  00DEC4  6F                 	db	111	;'o'
  1887  00DEC5  67                 	db	103	;'g'
  1888  00DEC6  20                 	db	32
  1889  00DEC7  56                 	db	86	;'V'
  1890  00DEC8  53                 	db	83	;'S'
  1891  00DEC9  53                 	db	83	;'S'
  1892  00DECA  20                 	db	32
  1893  00DECB  69                 	db	105	;'i'
  1894  00DECC  6E                 	db	110	;'n'
  1895  00DECD  20                 	db	32
  1896  00DECE  76                 	db	118	;'v'
  1897  00DECF  6F                 	db	111	;'o'
  1898  00DED0  6C                 	db	108	;'l'
  1899  00DED1  74                 	db	116	;'t'
  1900  00DED2  73                 	db	115	;'s'
  1901  00DED3  0A                 	db	10
  1902  00DED4  0D                 	db	13
  1903  00DED5  20                 	db	32
  1904  00DED6  20                 	db	32
  1905  00DED7  20                 	db	32
  1906  00DED8  4D                 	db	77	;'M'
  1907  00DED9  61                 	db	97	;'a'
  1908  00DEDA  78                 	db	120	;'x'
  1909  00DEDB  20                 	db	32
  1910  00DEDC  50                 	db	80	;'P'
  1911  00DEDD  4F                 	db	79	;'O'
  1912  00DEDE  53                 	db	83	;'S'
  1913  00DEDF  33                 	db	51	;'3'
  1914  00DEE0  50                 	db	80	;'P'
  1915  00DEE1  33                 	db	51	;'3'
  1916  00DEE2  20                 	db	32
  1917  00DEE3  56                 	db	86	;'V'
  1918  00DEE4  6F                 	db	111	;'o'
  1919  00DEE5  6C                 	db	108	;'l'
  1920  00DEE6  74                 	db	116	;'t'
  1921  00DEE7  61                 	db	97	;'a'
  1922  00DEE8  67                 	db	103	;'g'
  1923  00DEE9  65                 	db	101	;'e'
  1924  00DEEA  3F                 	db	63	;'?'
  1925  00DEEB  3A                 	db	58	;':'
  1926  00DEEC  20                 	db	32
  1927  00DEED  52                 	db	82	;'R'
  1928  00DEEE  65                 	db	101	;'e'
  1929  00DEEF  74                 	db	116	;'t'
  1930  00DEF0  75                 	db	117	;'u'
  1931  00DEF1  72                 	db	114	;'r'
  1932  00DEF2  6E                 	db	110	;'n'
  1933  00DEF3  73                 	db	115	;'s'
  1934  00DEF4  20                 	db	32
  1935  00DEF5  74                 	db	116	;'t'
  1936  00DEF6  68                 	db	104	;'h'
  1937  00DEF7  65                 	db	101	;'e'
  1938  00DEF8  20                 	db	32
  1939  00DEF9  6D                 	db	109	;'m'
  1940  00DEFA  61                 	db	97	;'a'
  1941  00DEFB  78                 	db	120	;'x'
  1942  00DEFC  69                 	db	105	;'i'
  1943  00DEFD  6D                 	db	109	;'m'
  1944  00DEFE  75                 	db	117	;'u'
  1945  00DEFF  6D                 	db	109	;'m'
  1946  00DF00  20                 	db	32
  1947  00DF01  72                 	db	114	;'r'
  1948  00DF02  65                 	db	101	;'e'
  1949  00DF03  63                 	db	99	;'c'
  1950  00DF04  6F                 	db	111	;'o'
  1951  00DF05  72                 	db	114	;'r'
  1952  00DF06  64                 	db	100	;'d'
  1953  00DF07  65                 	db	101	;'e'
  1954  00DF08  64                 	db	100	;'d'
  1955  00DF09  20                 	db	32
  1956  00DF0A  2B                 	db	43
  1957  00DF0B  33                 	db	51	;'3'
  1958  00DF0C  2E                 	db	46
  1959  00DF0D  33                 	db	51	;'3'
  1960  00DF0E  56                 	db	86	;'V'
  1961  00DF0F  20                 	db	32
  1962  00DF10  52                 	db	82	;'R'
  1963  00DF11  61                 	db	97	;'a'
  1964  00DF12  69                 	db	105	;'i'
  1965  00DF13  6C                 	db	108	;'l'
  1966  00DF14  20                 	db	32
  1967  00DF15  56                 	db	86	;'V'
  1968  00DF16  6F                 	db	111	;'o'
  1969  00DF17  6C                 	db	108	;'l'
  1970  00DF18  74                 	db	116	;'t'
  1971  00DF19  61                 	db	97	;'a'
  1972  00DF1A  67                 	db	103	;'g'
  1973  00DF1B  65                 	db	101	;'e'
  1974  00DF1C  20                 	db	32
  1975  00DF1D  6D                 	db	109	;'m'
  1976  00DF1E  65                 	db	101	;'e'
  1977  00DF1F  61                 	db	97	;'a'
  1978  00DF20  73                 	db	115	;'s'
  1979  00DF21  75                 	db	117	;'u'
  1980  00DF22  72                 	db	114	;'r'
  1981  00DF23  65                 	db	101	;'e'
  1982  00DF24  64                 	db	100	;'d'
  1983  00DF25  0A                 	db	10
  1984  00DF26  0D                 	db	13
  1985  00DF27  20                 	db	32
  1986  00DF28  20                 	db	32
  1987  00DF29  20                 	db	32
  1988  00DF2A  4D                 	db	77	;'M'
  1989  00DF2B  61                 	db	97	;'a'
  1990  00DF2C  78                 	db	120	;'x'
  1991  00DF2D  20                 	db	32
  1992  00DF2E  50                 	db	80	;'P'
  1993  00DF2F  4F                 	db	79	;'O'
  1994  00DF30  53                 	db	83	;'S'
  1995  00DF31  31                 	db	49	;'1'
  1996  00DF32  32                 	db	50	;'2'
  1997  00DF33  20                 	db	32
  1998  00DF34  56                 	db	86	;'V'
  1999  00DF35  6F                 	db	111	;'o'
  2000  00DF36  6C                 	db	108	;'l'
  2001  00DF37  74                 	db	116	;'t'
  2002  00DF38  61                 	db	97	;'a'
  2003  00DF39  67                 	db	103	;'g'
  2004  00DF3A  65                 	db	101	;'e'
  2005  00DF3B  3F                 	db	63	;'?'
  2006  00DF3C  3A                 	db	58	;':'
  2007  00DF3D  20                 	db	32
  2008  00DF3E  52                 	db	82	;'R'
  2009  00DF3F  65                 	db	101	;'e'
  2010  00DF40  74                 	db	116	;'t'
  2011  00DF41  75                 	db	117	;'u'
  2012  00DF42  72                 	db	114	;'r'
  2013  00DF43  6E                 	db	110	;'n'
  2014  00DF44  73                 	db	115	;'s'
  2015  00DF45  20                 	db	32
  2016  00DF46  74                 	db	116	;'t'
  2017  00DF47  68                 	db	104	;'h'
  2018  00DF48  65                 	db	101	;'e'
  2019  00DF49  20                 	db	32
  2020  00DF4A  6D                 	db	109	;'m'
  2021  00DF4B  61                 	db	97	;'a'
  2022  00DF4C  78                 	db	120	;'x'
  2023  00DF4D  69                 	db	105	;'i'
  2024  00DF4E  6D                 	db	109	;'m'
  2025  00DF4F  75                 	db	117	;'u'
  2026  00DF50  6D                 	db	109	;'m'
  2027  00DF51  20                 	db	32
  2028  00DF52  72                 	db	114	;'r'
  2029  00DF53  65                 	db	101	;'e'
  2030  00DF54  63                 	db	99	;'c'
  2031  00DF55  6F                 	db	111	;'o'
  2032  00DF56  72                 	db	114	;'r'
  2033  00DF57  64                 	db	100	;'d'
  2034  00DF58  65                 	db	101	;'e'
  2035  00DF59  64                 	db	100	;'d'
  2036  00DF5A  20                 	db	32
  2037  00DF5B  2B                 	db	43
  2038  00DF5C  31                 	db	49	;'1'
  2039  00DF5D  32                 	db	50	;'2'
  2040  00DF5E  56                 	db	86	;'V'
  2041  00DF5F  20                 	db	32
  2042  00DF60  52                 	db	82	;'R'
  2043  00DF61  61                 	db	97	;'a'
  2044  00DF62  69                 	db	105	;'i'
  2045  00DF63  6C                 	db	108	;'l'
  2046  00DF64  20                 	db	32
  2047  00DF65  56                 	db	86	;'V'
  2048  00DF66  6F                 	db	111	;'o'
  2049  00DF67  6C                 	db	108	;'l'
  2050  00DF68  74                 	db	116	;'t'
  2051  00DF69  61                 	db	97	;'a'
  2052  00DF6A  67                 	db	103	;'g'
  2053  00DF6B  65                 	db	101	;'e'
  2054  00DF6C  20                 	db	32
  2055  00DF6D  6D                 	db	109	;'m'
  2056  00DF6E  65                 	db	101	;'e'
  2057  00DF6F  61                 	db	97	;'a'
  2058  00DF70  73                 	db	115	;'s'
  2059  00DF71  75                 	db	117	;'u'
  2060  00DF72  72                 	db	114	;'r'
  2061  00DF73  65                 	db	101	;'e'
  2062  00DF74  64                 	db	100	;'d'
  2063  00DF75  0A                 	db	10
  2064  00DF76  0D                 	db	13
  2065  00DF77  20                 	db	32
  2066  00DF78  20                 	db	32
  2067  00DF79  20                 	db	32
  2068  00DF7A  4D                 	db	77	;'M'
  2069  00DF7B  61                 	db	97	;'a'
  2070  00DF7C  78                 	db	120	;'x'
  2071  00DF7D  20                 	db	32
  2072  00DF7E  44                 	db	68	;'D'
  2073  00DF7F  69                 	db	105	;'i'
  2074  00DF80  65                 	db	101	;'e'
  2075  00DF81  20                 	db	32
  2076  00DF82  54                 	db	84	;'T'
  2077  00DF83  65                 	db	101	;'e'
  2078  00DF84  6D                 	db	109	;'m'
  2079  00DF85  70                 	db	112	;'p'
  2080  00DF86  3F                 	db	63	;'?'
  2081  00DF87  3A                 	db	58	;':'
  2082  00DF88  20                 	db	32
  2083  00DF89  52                 	db	82	;'R'
  2084  00DF8A  65                 	db	101	;'e'
  2085  00DF8B  74                 	db	116	;'t'
  2086  00DF8C  75                 	db	117	;'u'
  2087  00DF8D  72                 	db	114	;'r'
  2088  00DF8E  6E                 	db	110	;'n'
  2089  00DF8F  73                 	db	115	;'s'
  2090  00DF90  20                 	db	32
  2091  00DF91  74                 	db	116	;'t'
  2092  00DF92  68                 	db	104	;'h'
  2093  00DF93  65                 	db	101	;'e'
  2094  00DF94  20                 	db	32
  2095  00DF95  6D                 	db	109	;'m'
  2096  00DF96  61                 	db	97	;'a'
  2097  00DF97  78                 	db	120	;'x'
  2098  00DF98  69                 	db	105	;'i'
  2099  00DF99  6D                 	db	109	;'m'
  2100  00DF9A  75                 	db	117	;'u'
  2101  00DF9B  6D                 	db	109	;'m'
  2102  00DF9C  20                 	db	32
  2103  00DF9D  72                 	db	114	;'r'
  2104  00DF9E  65                 	db	101	;'e'
  2105  00DF9F  63                 	db	99	;'c'
  2106  00DFA0  6F                 	db	111	;'o'
  2107  00DFA1  72                 	db	114	;'r'
  2108  00DFA2  64                 	db	100	;'d'
  2109  00DFA3  65                 	db	101	;'e'
  2110  00DFA4  64                 	db	100	;'d'
  2111  00DFA5  20                 	db	32
  2112  00DFA6  64                 	db	100	;'d'
  2113  00DFA7  69                 	db	105	;'i'
  2114  00DFA8  65                 	db	101	;'e'
  2115  00DFA9  20                 	db	32
  2116  00DFAA  74                 	db	116	;'t'
  2117  00DFAB  65                 	db	101	;'e'
  2118  00DFAC  6D                 	db	109	;'m'
  2119  00DFAD  70                 	db	112	;'p'
  2120  00DFAE  65                 	db	101	;'e'
  2121  00DFAF  72                 	db	114	;'r'
  2122  00DFB0  61                 	db	97	;'a'
  2123  00DFB1  74                 	db	116	;'t'
  2124  00DFB2  75                 	db	117	;'u'
  2125  00DFB3  72                 	db	114	;'r'
  2126  00DFB4  65                 	db	101	;'e'
  2127  00DFB5  20                 	db	32
  2128  00DFB6  6D                 	db	109	;'m'
  2129  00DFB7  65                 	db	101	;'e'
  2130  00DFB8  61                 	db	97	;'a'
  2131  00DFB9  73                 	db	115	;'s'
  2132  00DFBA  75                 	db	117	;'u'
  2133  00DFBB  72                 	db	114	;'r'
  2134  00DFBC  65                 	db	101	;'e'
  2135  00DFBD  64                 	db	100	;'d'
  2136  00DFBE  0A                 	db	10
  2137  00DFBF  0D                 	db	13
  2138  00DFC0  20                 	db	32
  2139  00DFC1  20                 	db	32
  2140  00DFC2  20                 	db	32
  2141  00DFC3  4D                 	db	77	;'M'
  2142  00DFC4  61                 	db	97	;'a'
  2143  00DFC5  78                 	db	120	;'x'
  2144  00DFC6  20                 	db	32
  2145  00DFC7  46                 	db	70	;'F'
  2146  00DFC8  56                 	db	86	;'V'
  2147  00DFC9  52                 	db	82	;'R'
  2148  00DFCA  20                 	db	32
  2149  00DFCB  56                 	db	86	;'V'
  2150  00DFCC  6F                 	db	111	;'o'
  2151  00DFCD  6C                 	db	108	;'l'
  2152  00DFCE  74                 	db	116	;'t'
  2153  00DFCF  61                 	db	97	;'a'
  2154  00DFD0  67                 	db	103	;'g'
  2155  00DFD1  65                 	db	101	;'e'
  2156  00DFD2  3F                 	db	63	;'?'
  2157  00DFD3  3A                 	db	58	;':'
  2158  00DFD4  20                 	db	32
  2159  00DFD5  52                 	db	82	;'R'
  2160  00DFD6  65                 	db	101	;'e'
  2161  00DFD7  74                 	db	116	;'t'
  2162  00DFD8  75                 	db	117	;'u'
  2163  00DFD9  72                 	db	114	;'r'
  2164  00DFDA  6E                 	db	110	;'n'
  2165  00DFDB  73                 	db	115	;'s'
  2166  00DFDC  20                 	db	32
  2167  00DFDD  74                 	db	116	;'t'
  2168  00DFDE  68                 	db	104	;'h'
  2169  00DFDF  65                 	db	101	;'e'
  2170  00DFE0  20                 	db	32
  2171  00DFE1  6D                 	db	109	;'m'
  2172  00DFE2  61                 	db	97	;'a'
  2173  00DFE3  78                 	db	120	;'x'
  2174  00DFE4  69                 	db	105	;'i'
  2175  00DFE5  6D                 	db	109	;'m'
  2176  00DFE6  75                 	db	117	;'u'
  2177  00DFE7  6D                 	db	109	;'m'
  2178  00DFE8  20                 	db	32
  2179  00DFE9  72                 	db	114	;'r'
  2180  00DFEA  65                 	db	101	;'e'
  2181  00DFEB  63                 	db	99	;'c'
  2182  00DFEC  6F                 	db	111	;'o'
  2183  00DFED  72                 	db	114	;'r'
  2184  00DFEE  64                 	db	100	;'d'
  2185  00DFEF  65                 	db	101	;'e'
  2186  00DFF0  64                 	db	100	;'d'
  2187  00DFF1  20                 	db	32
  2188  00DFF2  46                 	db	70	;'F'
  2189  00DFF3  56                 	db	86	;'V'
  2190  00DFF4  52                 	db	82	;'R'
  2191  00DFF5  20                 	db	32
  2192  00DFF6  42                 	db	66	;'B'
  2193  00DFF7  75                 	db	117	;'u'
  2194  00DFF8  66                 	db	102	;'f'
  2195  00DFF9  66                 	db	102	;'f'
  2196  00DFFA  65                 	db	101	;'e'
  2197  00DFFB  72                 	db	114	;'r'
  2198  00DFFC  20                 	db	32
  2199  00DFFD  31                 	db	49	;'1'
  2200  00DFFE  20                 	db	32
  2201  00DFFF  56                 	db	86	;'V'
  2202  00E000  6F                 	db	111	;'o'
  2203  00E001  6C                 	db	108	;'l'
  2204  00E002  74                 	db	116	;'t'
  2205  00E003  61                 	db	97	;'a'
  2206  00E004  67                 	db	103	;'g'
  2207  00E005  65                 	db	101	;'e'
  2208  00E006  20                 	db	32
  2209  00E007  6D                 	db	109	;'m'
  2210  00E008  65                 	db	101	;'e'
  2211  00E009  61                 	db	97	;'a'
  2212  00E00A  73                 	db	115	;'s'
  2213  00E00B  75                 	db	117	;'u'
  2214  00E00C  72                 	db	114	;'r'
  2215  00E00D  65                 	db	101	;'e'
  2216  00E00E  64                 	db	100	;'d'
  2217  00E00F  0A                 	db	10
  2218  00E010  0D                 	db	13
  2219  00E011  0A                 	db	10
  2220  00E012  0D                 	db	13
  2221  00E013  50                 	db	80	;'P'
  2222  00E014  72                 	db	114	;'r'
  2223  00E015  69                 	db	105	;'i'
  2224  00E016  6D                 	db	109	;'m'
  2225  00E017  61                 	db	97	;'a'
  2226  00E018  72                 	db	114	;'r'
  2227  00E019  79                 	db	121	;'y'
  2228  00E01A  20                 	db	32
  2229  00E01B  4D                 	db	77	;'M'
  2230  00E01C  65                 	db	101	;'e'
  2231  00E01D  61                 	db	97	;'a'
  2232  00E01E  73                 	db	115	;'s'
  2233  00E01F  75                 	db	117	;'u'
  2234  00E020  72                 	db	114	;'r'
  2235  00E021  65                 	db	101	;'e'
  2236  00E022  6D                 	db	109	;'m'
  2237  00E023  65                 	db	101	;'e'
  2238  00E024  6E                 	db	110	;'n'
  2239  00E025  74                 	db	116	;'t'
  2240  00E026  20                 	db	32
  2241  00E027  43                 	db	67	;'C'
  2242  00E028  6F                 	db	111	;'o'
  2243  00E029  6D                 	db	109	;'m'
  2244  00E02A  6D                 	db	109	;'m'
  2245  00E02B  61                 	db	97	;'a'
  2246  00E02C  6E                 	db	110	;'n'
  2247  00E02D  64                 	db	100	;'d'
  2248  00E02E  73                 	db	115	;'s'
  2249  00E02F  3A                 	db	58	;':'
  2250  00E030  20                 	db	32
  2251  00E031  56                 	db	86	;'V'
  2252  00E032  69                 	db	105	;'i'
  2253  00E033  65                 	db	101	;'e'
  2254  00E034  77                 	db	119	;'w'
  2255  00E035  20                 	db	32
  2256  00E036  68                 	db	104	;'h'
  2257  00E037  69                 	db	105	;'i'
  2258  00E038  67                 	db	103	;'g'
  2259  00E039  68                 	db	104	;'h'
  2260  00E03A  20                 	db	32
  2261  00E03B  6C                 	db	108	;'l'
  2262  00E03C  65                 	db	101	;'e'
  2263  00E03D  76                 	db	118	;'v'
  2264  00E03E  65                 	db	101	;'e'
  2265  00E03F  6C                 	db	108	;'l'
  2266  00E040  20                 	db	32
  2267  00E041  6F                 	db	111	;'o'
  2268  00E042  75                 	db	117	;'u'
  2269  00E043  74                 	db	116	;'t'
  2270  00E044  70                 	db	112	;'p'
  2271  00E045  75                 	db	117	;'u'
  2272  00E046  74                 	db	116	;'t'
  2273  00E047  20                 	db	32
  2274  00E048  6D                 	db	109	;'m'
  2275  00E049  65                 	db	101	;'e'
  2276  00E04A  61                 	db	97	;'a'
  2277  00E04B  73                 	db	115	;'s'
  2278  00E04C  75                 	db	117	;'u'
  2279  00E04D  72                 	db	114	;'r'
  2280  00E04E  65                 	db	101	;'e'
  2281  00E04F  6D                 	db	109	;'m'
  2282  00E050  65                 	db	101	;'e'
  2283  00E051  6E                 	db	110	;'n'
  2284  00E052  74                 	db	116	;'t'
  2285  00E053  73                 	db	115	;'s'
  2286  00E054  20                 	db	32
  2287  00E055  61                 	db	97	;'a'
  2288  00E056  6E                 	db	110	;'n'
  2289  00E057  64                 	db	100	;'d'
  2290  00E058  20                 	db	32
  2291  00E059  63                 	db	99	;'c'
  2292  00E05A  61                 	db	97	;'a'
  2293  00E05B  6C                 	db	108	;'l'
  2294  00E05C  63                 	db	99	;'c'
  2295  00E05D  75                 	db	117	;'u'
  2296  00E05E  6C                 	db	108	;'l'
  2297  00E05F  61                 	db	97	;'a'
  2298  00E060  74                 	db	116	;'t'
  2299  00E061  69                 	db	105	;'i'
  2300  00E062  6F                 	db	111	;'o'
  2301  00E063  6E                 	db	110	;'n'
  2302  00E064  73                 	db	115	;'s'
  2303  00E065  0A                 	db	10
  2304  00E066  0D                 	db	13
  2305  00E067  20                 	db	32
  2306  00E068  20                 	db	32
  2307  00E069  20                 	db	32
  2308  00E06A  4D                 	db	77	;'M'
  2309  00E06B  65                 	db	101	;'e'
  2310  00E06C  61                 	db	97	;'a'
  2311  00E06D  73                 	db	115	;'s'
  2312  00E06E  75                 	db	117	;'u'
  2313  00E06F  72                 	db	114	;'r'
  2314  00E070  65                 	db	101	;'e'
  2315  00E071  20                 	db	32
  2316  00E072  44                 	db	68	;'D'
  2317  00E073  65                 	db	101	;'e'
  2318  00E074  74                 	db	116	;'t'
  2319  00E075  65                 	db	101	;'e'
  2320  00E076  63                 	db	99	;'c'
  2321  00E077  74                 	db	116	;'t'
  2322  00E078  65                 	db	101	;'e'
  2323  00E079  64                 	db	100	;'d'
  2324  00E07A  20                 	db	32
  2325  00E07B  43                 	db	67	;'C'
  2326  00E07C  75                 	db	117	;'u'
  2327  00E07D  72                 	db	114	;'r'
  2328  00E07E  72                 	db	114	;'r'
  2329  00E07F  65                 	db	101	;'e'
  2330  00E080  6E                 	db	110	;'n'
  2331  00E081  74                 	db	116	;'t'
  2332  00E082  3F                 	db	63	;'?'
  2333  00E083  3A                 	db	58	;':'
  2334  00E084  20                 	db	32
  2335  00E085  52                 	db	82	;'R'
  2336  00E086  65                 	db	101	;'e'
  2337  00E087  74                 	db	116	;'t'
  2338  00E088  75                 	db	117	;'u'
  2339  00E089  72                 	db	114	;'r'
  2340  00E08A  6E                 	db	110	;'n'
  2341  00E08B  73                 	db	115	;'s'
  2342  00E08C  20                 	db	32
  2343  00E08D  6D                 	db	109	;'m'
  2344  00E08E  65                 	db	101	;'e'
  2345  00E08F  61                 	db	97	;'a'
  2346  00E090  73                 	db	115	;'s'
  2347  00E091  75                 	db	117	;'u'
  2348  00E092  72                 	db	114	;'r'
  2349  00E093  65                 	db	101	;'e'
  2350  00E094  64                 	db	100	;'d'
  2351  00E095  20                 	db	32
  2352  00E096  6F                 	db	111	;'o'
  2353  00E097  75                 	db	117	;'u'
  2354  00E098  74                 	db	116	;'t'
  2355  00E099  70                 	db	112	;'p'
  2356  00E09A  75                 	db	117	;'u'
  2357  00E09B  74                 	db	116	;'t'
  2358  00E09C  20                 	db	32
  2359  00E09D  63                 	db	99	;'c'
  2360  00E09E  75                 	db	117	;'u'
  2361  00E09F  72                 	db	114	;'r'
  2362  00E0A0  72                 	db	114	;'r'
  2363  00E0A1  65                 	db	101	;'e'
  2364  00E0A2  6E                 	db	110	;'n'
  2365  00E0A3  74                 	db	116	;'t'
  2366  00E0A4  20                 	db	32
  2367  00E0A5  69                 	db	105	;'i'
  2368  00E0A6  6E                 	db	110	;'n'
  2369  00E0A7  20                 	db	32
  2370  00E0A8  61                 	db	97	;'a'
  2371  00E0A9  6D                 	db	109	;'m'
  2372  00E0AA  70                 	db	112	;'p'
  2373  00E0AB  73                 	db	115	;'s'
  2374  00E0AC  20                 	db	32
  2375  00E0AD  61                 	db	97	;'a'
  2376  00E0AE  73                 	db	115	;'s'
  2377  00E0AF  20                 	db	32
  2378  00E0B0  73                 	db	115	;'s'
  2379  00E0B1  65                 	db	101	;'e'
  2380  00E0B2  65                 	db	101	;'e'
  2381  00E0B3  6E                 	db	110	;'n'
  2382  00E0B4  20                 	db	32
  2383  00E0B5  62                 	db	98	;'b'
  2384  00E0B6  79                 	db	121	;'y'
  2385  00E0B7  20                 	db	32
  2386  00E0B8  41                 	db	65	;'A'
  2387  00E0B9  44                 	db	68	;'D'
  2388  00E0BA  43                 	db	67	;'C'
  2389  00E0BB  0A                 	db	10
  2390  00E0BC  0D                 	db	13
  2391  00E0BD  20                 	db	32
  2392  00E0BE  20                 	db	32
  2393  00E0BF  20                 	db	32
  2394  00E0C0  4D                 	db	77	;'M'
  2395  00E0C1  65                 	db	101	;'e'
  2396  00E0C2  61                 	db	97	;'a'
  2397  00E0C3  73                 	db	115	;'s'
  2398  00E0C4  75                 	db	117	;'u'
  2399  00E0C5  72                 	db	114	;'r'
  2400  00E0C6  65                 	db	101	;'e'
  2401  00E0C7  20                 	db	32
  2402  00E0C8  52                 	db	82	;'R'
  2403  00E0C9  4D                 	db	77	;'M'
  2404  00E0CA  53                 	db	83	;'S'
  2405  00E0CB  20                 	db	32
  2406  00E0CC  43                 	db	67	;'C'
  2407  00E0CD  75                 	db	117	;'u'
  2408  00E0CE  72                 	db	114	;'r'
  2409  00E0CF  72                 	db	114	;'r'
  2410  00E0D0  65                 	db	101	;'e'
  2411  00E0D1  6E                 	db	110	;'n'
  2412  00E0D2  74                 	db	116	;'t'
  2413  00E0D3  3F                 	db	63	;'?'
  2414  00E0D4  3A                 	db	58	;':'
  2415  00E0D5  20                 	db	32
  2416  00E0D6  52                 	db	82	;'R'
  2417  00E0D7  65                 	db	101	;'e'
  2418  00E0D8  74                 	db	116	;'t'
  2419  00E0D9  75                 	db	117	;'u'
  2420  00E0DA  72                 	db	114	;'r'
  2421  00E0DB  6E                 	db	110	;'n'
  2422  00E0DC  73                 	db	115	;'s'
  2423  00E0DD  20                 	db	32
  2424  00E0DE  74                 	db	116	;'t'
  2425  00E0DF  68                 	db	104	;'h'
  2426  00E0E0  65                 	db	101	;'e'
  2427  00E0E1  20                 	db	32
  2428  00E0E2  63                 	db	99	;'c'
  2429  00E0E3  61                 	db	97	;'a'
  2430  00E0E4  6C                 	db	108	;'l'
  2431  00E0E5  63                 	db	99	;'c'
  2432  00E0E6  75                 	db	117	;'u'
  2433  00E0E7  6C                 	db	108	;'l'
  2434  00E0E8  61                 	db	97	;'a'
  2435  00E0E9  74                 	db	116	;'t'
  2436  00E0EA  65                 	db	101	;'e'
  2437  00E0EB  64                 	db	100	;'d'
  2438  00E0EC  20                 	db	32
  2439  00E0ED  52                 	db	82	;'R'
  2440  00E0EE  4D                 	db	77	;'M'
  2441  00E0EF  53                 	db	83	;'S'
  2442  00E0F0  20                 	db	32
  2443  00E0F1  6F                 	db	111	;'o'
  2444  00E0F2  75                 	db	117	;'u'
  2445  00E0F3  74                 	db	116	;'t'
  2446  00E0F4  70                 	db	112	;'p'
  2447  00E0F5  75                 	db	117	;'u'
  2448  00E0F6  74                 	db	116	;'t'
  2449  00E0F7  20                 	db	32
  2450  00E0F8  63                 	db	99	;'c'
  2451  00E0F9  75                 	db	117	;'u'
  2452  00E0FA  72                 	db	114	;'r'
  2453  00E0FB  72                 	db	114	;'r'
  2454  00E0FC  65                 	db	101	;'e'
  2455  00E0FD  6E                 	db	110	;'n'
  2456  00E0FE  74                 	db	116	;'t'
  2457  00E0FF  20                 	db	32
  2458  00E100  66                 	db	102	;'f'
  2459  00E101  72                 	db	114	;'r'
  2460  00E102  6F                 	db	111	;'o'
  2461  00E103  6D                 	db	109	;'m'
  2462  00E104  20                 	db	32
  2463  00E105  6D                 	db	109	;'m'
  2464  00E106  65                 	db	101	;'e'
  2465  00E107  61                 	db	97	;'a'
  2466  00E108  73                 	db	115	;'s'
  2467  00E109  75                 	db	117	;'u'
  2468  00E10A  72                 	db	114	;'r'
  2469  00E10B  65                 	db	101	;'e'
  2470  00E10C  6D                 	db	109	;'m'
  2471  00E10D  65                 	db	101	;'e'
  2472  00E10E  6E                 	db	110	;'n'
  2473  00E10F  74                 	db	116	;'t'
  2474  00E110  73                 	db	115	;'s'
  2475  00E111  20                 	db	32
  2476  00E112  61                 	db	97	;'a'
  2477  00E113  6E                 	db	110	;'n'
  2478  00E114  64                 	db	100	;'d'
  2479  00E115  20                 	db	32
  2480  00E116  54                 	db	84	;'T'
  2481  00E117  52                 	db	82	;'R'
  2482  00E118  49                 	db	73	;'I'
  2483  00E119  41                 	db	65	;'A'
  2484  00E11A  43                 	db	67	;'C'
  2485  00E11B  20                 	db	32
  2486  00E11C  66                 	db	102	;'f'
  2487  00E11D  69                 	db	105	;'i'
  2488  00E11E  72                 	db	114	;'r'
  2489  00E11F  69                 	db	105	;'i'
  2490  00E120  6E                 	db	110	;'n'
  2491  00E121  67                 	db	103	;'g'
  2492  00E122  20                 	db	32
  2493  00E123  61                 	db	97	;'a'
  2494  00E124  6E                 	db	110	;'n'
  2495  00E125  67                 	db	103	;'g'
  2496  00E126  6C                 	db	108	;'l'
  2497  00E127  65                 	db	101	;'e'
  2498  00E128  0A                 	db	10
  2499  00E129  0D                 	db	13
  2500  00E12A  20                 	db	32
  2501  00E12B  20                 	db	32
  2502  00E12C  20                 	db	32
  2503  00E12D  4D                 	db	77	;'M'
  2504  00E12E  65                 	db	101	;'e'
  2505  00E12F  61                 	db	97	;'a'
  2506  00E130  73                 	db	115	;'s'
  2507  00E131  75                 	db	117	;'u'
  2508  00E132  72                 	db	114	;'r'
  2509  00E133  65                 	db	101	;'e'
  2510  00E134  20                 	db	32
  2511  00E135  52                 	db	82	;'R'
  2512  00E136  4D                 	db	77	;'M'
  2513  00E137  53                 	db	83	;'S'
  2514  00E138  20                 	db	32
  2515  00E139  56                 	db	86	;'V'
  2516  00E13A  6F                 	db	111	;'o'
  2517  00E13B  6C                 	db	108	;'l'
  2518  00E13C  74                 	db	116	;'t'
  2519  00E13D  61                 	db	97	;'a'
  2520  00E13E  67                 	db	103	;'g'
  2521  00E13F  65                 	db	101	;'e'
  2522  00E140  3F                 	db	63	;'?'
  2523  00E141  3A                 	db	58	;':'
  2524  00E142  20                 	db	32
  2525  00E143  52                 	db	82	;'R'
  2526  00E144  65                 	db	101	;'e'
  2527  00E145  74                 	db	116	;'t'
  2528  00E146  75                 	db	117	;'u'
  2529  00E147  72                 	db	114	;'r'
  2530  00E148  6E                 	db	110	;'n'
  2531  00E149  73                 	db	115	;'s'
  2532  00E14A  20                 	db	32
  2533  00E14B  74                 	db	116	;'t'
  2534  00E14C  68                 	db	104	;'h'
  2535  00E14D  65                 	db	101	;'e'
  2536  00E14E  20                 	db	32
  2537  00E14F  63                 	db	99	;'c'
  2538  00E150  61                 	db	97	;'a'
  2539  00E151  6C                 	db	108	;'l'
  2540  00E152  63                 	db	99	;'c'
  2541  00E153  75                 	db	117	;'u'
  2542  00E154  6C                 	db	108	;'l'
  2543  00E155  61                 	db	97	;'a'
  2544  00E156  74                 	db	116	;'t'
  2545  00E157  65                 	db	101	;'e'
  2546  00E158  64                 	db	100	;'d'
  2547  00E159  20                 	db	32
  2548  00E15A  52                 	db	82	;'R'
  2549  00E15B  4D                 	db	77	;'M'
  2550  00E15C  53                 	db	83	;'S'
  2551  00E15D  20                 	db	32
  2552  00E15E  6F                 	db	111	;'o'
  2553  00E15F  75                 	db	117	;'u'
  2554  00E160  74                 	db	116	;'t'
  2555  00E161  70                 	db	112	;'p'
  2556  00E162  75                 	db	117	;'u'
  2557  00E163  74                 	db	116	;'t'
  2558  00E164  20                 	db	32
  2559  00E165  76                 	db	118	;'v'
  2560  00E166  6F                 	db	111	;'o'
  2561  00E167  6C                 	db	108	;'l'
  2562  00E168  74                 	db	116	;'t'
  2563  00E169  61                 	db	97	;'a'
  2564  00E16A  67                 	db	103	;'g'
  2565  00E16B  65                 	db	101	;'e'
  2566  00E16C  20                 	db	32
  2567  00E16D  66                 	db	102	;'f'
  2568  00E16E  72                 	db	114	;'r'
  2569  00E16F  6F                 	db	111	;'o'
  2570  00E170  6D                 	db	109	;'m'
  2571  00E171  20                 	db	32
  2572  00E172  54                 	db	84	;'T'
  2573  00E173  52                 	db	82	;'R'
  2574  00E174  49                 	db	73	;'I'
  2575  00E175  41                 	db	65	;'A'
  2576  00E176  43                 	db	67	;'C'
  2577  00E177  20                 	db	32
  2578  00E178  66                 	db	102	;'f'
  2579  00E179  69                 	db	105	;'i'
  2580  00E17A  72                 	db	114	;'r'
  2581  00E17B  69                 	db	105	;'i'
  2582  00E17C  6E                 	db	110	;'n'
  2583  00E17D  67                 	db	103	;'g'
  2584  00E17E  20                 	db	32
  2585  00E17F  61                 	db	97	;'a'
  2586  00E180  6E                 	db	110	;'n'
  2587  00E181  67                 	db	103	;'g'
  2588  00E182  6C                 	db	108	;'l'
  2589  00E183  65                 	db	101	;'e'
  2590  00E184  0A                 	db	10
  2591  00E185  0D                 	db	13
  2592  00E186  20                 	db	32
  2593  00E187  20                 	db	32
  2594  00E188  20                 	db	32
  2595  00E189  4D                 	db	77	;'M'
  2596  00E18A  65                 	db	101	;'e'
  2597  00E18B  61                 	db	97	;'a'
  2598  00E18C  73                 	db	115	;'s'
  2599  00E18D  75                 	db	117	;'u'
  2600  00E18E  72                 	db	114	;'r'
  2601  00E18F  65                 	db	101	;'e'
  2602  00E190  20                 	db	32
  2603  00E191  50                 	db	80	;'P'
  2604  00E192  6F                 	db	111	;'o'
  2605  00E193  77                 	db	119	;'w'
  2606  00E194  65                 	db	101	;'e'
  2607  00E195  72                 	db	114	;'r'
  2608  00E196  3F                 	db	63	;'?'
  2609  00E197  3A                 	db	58	;':'
  2610  00E198  20                 	db	32
  2611  00E199  52                 	db	82	;'R'
  2612  00E19A  65                 	db	101	;'e'
  2613  00E19B  74                 	db	116	;'t'
  2614  00E19C  75                 	db	117	;'u'
  2615  00E19D  72                 	db	114	;'r'
  2616  00E19E  6E                 	db	110	;'n'
  2617  00E19F  73                 	db	115	;'s'
  2618  00E1A0  20                 	db	32
  2619  00E1A1  74                 	db	116	;'t'
  2620  00E1A2  68                 	db	104	;'h'
  2621  00E1A3  65                 	db	101	;'e'
  2622  00E1A4  20                 	db	32
  2623  00E1A5  63                 	db	99	;'c'
  2624  00E1A6  61                 	db	97	;'a'
  2625  00E1A7  6C                 	db	108	;'l'
  2626  00E1A8  63                 	db	99	;'c'
  2627  00E1A9  75                 	db	117	;'u'
  2628  00E1AA  6C                 	db	108	;'l'
  2629  00E1AB  61                 	db	97	;'a'
  2630  00E1AC  74                 	db	116	;'t'
  2631  00E1AD  65                 	db	101	;'e'
  2632  00E1AE  64                 	db	100	;'d'
  2633  00E1AF  20                 	db	32
  2634  00E1B0  6F                 	db	111	;'o'
  2635  00E1B1  75                 	db	117	;'u'
  2636  00E1B2  74                 	db	116	;'t'
  2637  00E1B3  70                 	db	112	;'p'
  2638  00E1B4  75                 	db	117	;'u'
  2639  00E1B5  74                 	db	116	;'t'
  2640  00E1B6  20                 	db	32
  2641  00E1B7  70                 	db	112	;'p'
  2642  00E1B8  6F                 	db	111	;'o'
  2643  00E1B9  77                 	db	119	;'w'
  2644  00E1BA  65                 	db	101	;'e'
  2645  00E1BB  72                 	db	114	;'r'
  2646  00E1BC  20                 	db	32
  2647  00E1BD  69                 	db	105	;'i'
  2648  00E1BE  6E                 	db	110	;'n'
  2649  00E1BF  20                 	db	32
  2650  00E1C0  57                 	db	87	;'W'
  2651  00E1C1  61                 	db	97	;'a'
  2652  00E1C2  74                 	db	116	;'t'
  2653  00E1C3  74                 	db	116	;'t'
  2654  00E1C4  73                 	db	115	;'s'
  2655  00E1C5  0A                 	db	10
  2656  00E1C6  0D                 	db	13
  2657  00E1C7  20                 	db	32
  2658  00E1C8  20                 	db	32
  2659  00E1C9  20                 	db	32
  2660  00E1CA  4C                 	db	76	;'L'
  2661  00E1CB  6F                 	db	111	;'o'
  2662  00E1CC  61                 	db	97	;'a'
  2663  00E1CD  64                 	db	100	;'d'
  2664  00E1CE  20                 	db	32
  2665  00E1CF  4F                 	db	79	;'O'
  2666  00E1D0  6E                 	db	110	;'n'
  2667  00E1D1  20                 	db	32
  2668  00E1D2  54                 	db	84	;'T'
  2669  00E1D3  69                 	db	105	;'i'
  2670  00E1D4  6D                 	db	109	;'m'
  2671  00E1D5  65                 	db	101	;'e'
  2672  00E1D6  3F                 	db	63	;'?'
  2673  00E1D7  3A                 	db	58	;':'
  2674  00E1D8  20                 	db	32
  2675  00E1D9  52                 	db	82	;'R'
  2676  00E1DA  65                 	db	101	;'e'
  2677  00E1DB  74                 	db	116	;'t'
  2678  00E1DC  75                 	db	117	;'u'
  2679  00E1DD  72                 	db	114	;'r'
  2680  00E1DE  6E                 	db	110	;'n'
  2681  00E1DF  73                 	db	115	;'s'
  2682  00E1E0  20                 	db	32
  2683  00E1E1  6C                 	db	108	;'l'
  2684  00E1E2  6F                 	db	111	;'o'
  2685  00E1E3  61                 	db	97	;'a'
  2686  00E1E4  64                 	db	100	;'d'
  2687  00E1E5  20                 	db	32
  2688  00E1E6  6F                 	db	111	;'o'
  2689  00E1E7  6E                 	db	110	;'n'
  2690  00E1E8  20                 	db	32
  2691  00E1E9  74                 	db	116	;'t'
  2692  00E1EA  69                 	db	105	;'i'
  2693  00E1EB  6D                 	db	109	;'m'
  2694  00E1EC  65                 	db	101	;'e'
  2695  00E1ED  20                 	db	32
  2696  00E1EE  73                 	db	115	;'s'
  2697  00E1EF  69                 	db	105	;'i'
  2698  00E1F0  6E                 	db	110	;'n'
  2699  00E1F1  63                 	db	99	;'c'
  2700  00E1F2  65                 	db	101	;'e'
  2701  00E1F3  20                 	db	32
  2702  00E1F4  6C                 	db	108	;'l'
  2703  00E1F5  61                 	db	97	;'a'
  2704  00E1F6  73                 	db	115	;'s'
  2705  00E1F7  74                 	db	116	;'t'
  2706  00E1F8  20                 	db	32
  2707  00E1F9  64                 	db	100	;'d'
  2708  00E1FA  65                 	db	101	;'e'
  2709  00E1FB  76                 	db	118	;'v'
  2710  00E1FC  69                 	db	105	;'i'
  2711  00E1FD  63                 	db	99	;'c'
  2712  00E1FE  65                 	db	101	;'e'
  2713  00E1FF  20                 	db	32
  2714  00E200  72                 	db	114	;'r'
  2715  00E201  65                 	db	101	;'e'
  2716  00E202  73                 	db	115	;'s'
  2717  00E203  65                 	db	101	;'e'
  2718  00E204  74                 	db	116	;'t'
  2719  00E205  20                 	db	32
  2720  00E206  69                 	db	105	;'i'
  2721  00E207  6E                 	db	110	;'n'
  2722  00E208  20                 	db	32
  2723  00E209  73                 	db	115	;'s'
  2724  00E20A  65                 	db	101	;'e'
  2725  00E20B  63                 	db	99	;'c'
  2726  00E20C  6F                 	db	111	;'o'
  2727  00E20D  6E                 	db	110	;'n'
  2728  00E20E  64                 	db	100	;'d'
  2729  00E20F  73                 	db	115	;'s'
  2730  00E210  0A                 	db	10
  2731  00E211  0D                 	db	13
  2732  00E212  20                 	db	32
  2733  00E213  20                 	db	32
  2734  00E214  20                 	db	32
  2735  00E215  4D                 	db	77	;'M'
  2736  00E216  61                 	db	97	;'a'
  2737  00E217  78                 	db	120	;'x'
  2738  00E218  20                 	db	32
  2739  00E219  52                 	db	82	;'R'
  2740  00E21A  4D                 	db	77	;'M'
  2741  00E21B  53                 	db	83	;'S'
  2742  00E21C  20                 	db	32
  2743  00E21D  43                 	db	67	;'C'
  2744  00E21E  75                 	db	117	;'u'
  2745  00E21F  72                 	db	114	;'r'
  2746  00E220  72                 	db	114	;'r'
  2747  00E221  65                 	db	101	;'e'
  2748  00E222  6E                 	db	110	;'n'
  2749  00E223  74                 	db	116	;'t'
  2750  00E224  3F                 	db	63	;'?'
  2751  00E225  3A                 	db	58	;':'
  2752  00E226  20                 	db	32
  2753  00E227  50                 	db	80	;'P'
  2754  00E228  72                 	db	114	;'r'
  2755  00E229  69                 	db	105	;'i'
  2756  00E22A  6E                 	db	110	;'n'
  2757  00E22B  74                 	db	116	;'t'
  2758  00E22C  73                 	db	115	;'s'
  2759  00E22D  20                 	db	32
  2760  00E22E  74                 	db	116	;'t'
  2761  00E22F  68                 	db	104	;'h'
  2762  00E230  65                 	db	101	;'e'
  2763  00E231  20                 	db	32
  2764  00E232  6D                 	db	109	;'m'
  2765  00E233  61                 	db	97	;'a'
  2766  00E234  78                 	db	120	;'x'
  2767  00E235  69                 	db	105	;'i'
  2768  00E236  6D                 	db	109	;'m'
  2769  00E237  75                 	db	117	;'u'
  2770  00E238  6D                 	db	109	;'m'
  2771  00E239  20                 	db	32
  2772  00E23A  72                 	db	114	;'r'
  2773  00E23B  65                 	db	101	;'e'
  2774  00E23C  63                 	db	99	;'c'
  2775  00E23D  6F                 	db	111	;'o'
  2776  00E23E  72                 	db	114	;'r'
  2777  00E23F  64                 	db	100	;'d'
  2778  00E240  65                 	db	101	;'e'
  2779  00E241  64                 	db	100	;'d'
  2780  00E242  20                 	db	32
  2781  00E243  52                 	db	82	;'R'
  2782  00E244  4D                 	db	77	;'M'
  2783  00E245  53                 	db	83	;'S'
  2784  00E246  20                 	db	32
  2785  00E247  6F                 	db	111	;'o'
  2786  00E248  75                 	db	117	;'u'
  2787  00E249  74                 	db	116	;'t'
  2788  00E24A  70                 	db	112	;'p'
  2789  00E24B  75                 	db	117	;'u'
  2790  00E24C  74                 	db	116	;'t'
  2791  00E24D  20                 	db	32
  2792  00E24E  63                 	db	99	;'c'
  2793  00E24F  75                 	db	117	;'u'
  2794  00E250  72                 	db	114	;'r'
  2795  00E251  72                 	db	114	;'r'
  2796  00E252  65                 	db	101	;'e'
  2797  00E253  6E                 	db	110	;'n'
  2798  00E254  74                 	db	116	;'t'
  2799  00E255  0A                 	db	10
  2800  00E256  0D                 	db	13
  2801  00E257  20                 	db	32
  2802  00E258  20                 	db	32
  2803  00E259  20                 	db	32
  2804  00E25A  4D                 	db	77	;'M'
  2805  00E25B  61                 	db	97	;'a'
  2806  00E25C  78                 	db	120	;'x'
  2807  00E25D  20                 	db	32
  2808  00E25E  50                 	db	80	;'P'
  2809  00E25F  6F                 	db	111	;'o'
  2810  00E260  77                 	db	119	;'w'
  2811  00E261  65                 	db	101	;'e'
  2812  00E262  72                 	db	114	;'r'
  2813  00E263  3F                 	db	63	;'?'
  2814  00E264  3A                 	db	58	;':'
  2815  00E265  20                 	db	32
  2816  00E266  50                 	db	80	;'P'
  2817  00E267  72                 	db	114	;'r'
  2818  00E268  69                 	db	105	;'i'
  2819  00E269  6E                 	db	110	;'n'
  2820  00E26A  74                 	db	116	;'t'
  2821  00E26B  73                 	db	115	;'s'
  2822  00E26C  20                 	db	32
  2823  00E26D  74                 	db	116	;'t'
  2824  00E26E  68                 	db	104	;'h'
  2825  00E26F  65                 	db	101	;'e'
  2826  00E270  20                 	db	32
  2827  00E271  6D                 	db	109	;'m'
  2828  00E272  61                 	db	97	;'a'
  2829  00E273  78                 	db	120	;'x'
  2830  00E274  69                 	db	105	;'i'
  2831  00E275  6D                 	db	109	;'m'
  2832  00E276  75                 	db	117	;'u'
  2833  00E277  6D                 	db	109	;'m'
  2834  00E278  20                 	db	32
  2835  00E279  72                 	db	114	;'r'
  2836  00E27A  65                 	db	101	;'e'
  2837  00E27B  63                 	db	99	;'c'
  2838  00E27C  6F                 	db	111	;'o'
  2839  00E27D  72                 	db	114	;'r'
  2840  00E27E  64                 	db	100	;'d'
  2841  00E27F  65                 	db	101	;'e'
  2842  00E280  64                 	db	100	;'d'
  2843  00E281  20                 	db	32
  2844  00E282  6F                 	db	111	;'o'
  2845  00E283  75                 	db	117	;'u'
  2846  00E284  74                 	db	116	;'t'
  2847  00E285  70                 	db	112	;'p'
  2848  00E286  75                 	db	117	;'u'
  2849  00E287  74                 	db	116	;'t'
  2850  00E288  20                 	db	32
  2851  00E289  70                 	db	112	;'p'
  2852  00E28A  6F                 	db	111	;'o'
  2853  00E28B  77                 	db	119	;'w'
  2854  00E28C  65                 	db	101	;'e'
  2855  00E28D  72                 	db	114	;'r'
  2856  00E28E  0A                 	db	10
  2857  00E28F  0D                 	db	13
  2858  00E290  0A                 	db	10
  2859  00E291  0D                 	db	13
  2860  00E292  4F                 	db	79	;'O'
  2861  00E293  75                 	db	117	;'u'
  2862  00E294  74                 	db	116	;'t'
  2863  00E295  70                 	db	112	;'p'
  2864  00E296  75                 	db	117	;'u'
  2865  00E297  74                 	db	116	;'t'
  2866  00E298  20                 	db	32
  2867  00E299  43                 	db	67	;'C'
  2868  00E29A  6F                 	db	111	;'o'
  2869  00E29B  6E                 	db	110	;'n'
  2870  00E29C  74                 	db	116	;'t'
  2871  00E29D  72                 	db	114	;'r'
  2872  00E29E  6F                 	db	111	;'o'
  2873  00E29F  6C                 	db	108	;'l'
  2874  00E2A0  20                 	db	32
  2875  00E2A1  43                 	db	67	;'C'
  2876  00E2A2  6F                 	db	111	;'o'
  2877  00E2A3  6D                 	db	109	;'m'
  2878  00E2A4  6D                 	db	109	;'m'
  2879  00E2A5  61                 	db	97	;'a'
  2880  00E2A6  6E                 	db	110	;'n'
  2881  00E2A7  64                 	db	100	;'d'
  2882  00E2A8  73                 	db	115	;'s'
  2883  00E2A9  3A                 	db	58	;':'
  2884  00E2AA  20                 	db	32
  2885  00E2AB  43                 	db	67	;'C'
  2886  00E2AC  6F                 	db	111	;'o'
  2887  00E2AD  6E                 	db	110	;'n'
  2888  00E2AE  74                 	db	116	;'t'
  2889  00E2AF  72                 	db	114	;'r'
  2890  00E2B0  6F                 	db	111	;'o'
  2891  00E2B1  6C                 	db	108	;'l'
  2892  00E2B2  20                 	db	32
  2893  00E2B3  74                 	db	116	;'t'
  2894  00E2B4  68                 	db	104	;'h'
  2895  00E2B5  65                 	db	101	;'e'
  2896  00E2B6  20                 	db	32
  2897  00E2B7  6F                 	db	111	;'o'
  2898  00E2B8  75                 	db	117	;'u'
  2899  00E2B9  74                 	db	116	;'t'
  2900  00E2BA  70                 	db	112	;'p'
  2901  00E2BB  75                 	db	117	;'u'
  2902  00E2BC  74                 	db	116	;'t'
  2903  00E2BD  20                 	db	32
  2904  00E2BE  73                 	db	115	;'s'
  2905  00E2BF  74                 	db	116	;'t'
  2906  00E2C0  61                 	db	97	;'a'
  2907  00E2C1  74                 	db	116	;'t'
  2908  00E2C2  65                 	db	101	;'e'
  2909  00E2C3  20                 	db	32
  2910  00E2C4  61                 	db	97	;'a'
  2911  00E2C5  6E                 	db	110	;'n'
  2912  00E2C6  64                 	db	100	;'d'
  2913  00E2C7  20                 	db	32
  2914  00E2C8  64                 	db	100	;'d'
  2915  00E2C9  69                 	db	105	;'i'
  2916  00E2CA  6D                 	db	109	;'m'
  2917  00E2CB  6D                 	db	109	;'m'
  2918  00E2CC  69                 	db	105	;'i'
  2919  00E2CD  6E                 	db	110	;'n'
  2920  00E2CE  67                 	db	103	;'g'
  2921  00E2CF  20                 	db	32
  2922  00E2D0  66                 	db	102	;'f'
  2923  00E2D1  65                 	db	101	;'e'
  2924  00E2D2  61                 	db	97	;'a'
  2925  00E2D3  74                 	db	116	;'t'
  2926  00E2D4  75                 	db	117	;'u'
  2927  00E2D5  72                 	db	114	;'r'
  2928  00E2D6  65                 	db	101	;'e'
  2929  00E2D7  73                 	db	115	;'s'
  2930  00E2D8  0A                 	db	10
  2931  00E2D9  0D                 	db	13
  2932  00E2DA  20                 	db	32
  2933  00E2DB  20                 	db	32
  2934  00E2DC  20                 	db	32
  2935  00E2DD  45                 	db	69	;'E'
  2936  00E2DE  6E                 	db	110	;'n'
  2937  00E2DF  61                 	db	97	;'a'
  2938  00E2E0  62                 	db	98	;'b'
  2939  00E2E1  6C                 	db	108	;'l'
  2940  00E2E2  65                 	db	101	;'e'
  2941  00E2E3  20                 	db	32
  2942  00E2E4  44                 	db	68	;'D'
  2943  00E2E5  69                 	db	105	;'i'
  2944  00E2E6  6D                 	db	109	;'m'
  2945  00E2E7  6D                 	db	109	;'m'
  2946  00E2E8  69                 	db	105	;'i'
  2947  00E2E9  6E                 	db	110	;'n'
  2948  00E2EA  67                 	db	103	;'g'
  2949  00E2EB  3A                 	db	58	;':'
  2950  00E2EC  20                 	db	32
  2951  00E2ED  45                 	db	69	;'E'
  2952  00E2EE  6E                 	db	110	;'n'
  2953  00E2EF  61                 	db	97	;'a'
  2954  00E2F0  62                 	db	98	;'b'
  2955  00E2F1  6C                 	db	108	;'l'
  2956  00E2F2  65                 	db	101	;'e'
  2957  00E2F3  20                 	db	32
  2958  00E2F4  54                 	db	84	;'T'
  2959  00E2F5  52                 	db	82	;'R'
  2960  00E2F6  49                 	db	73	;'I'
  2961  00E2F7  41                 	db	65	;'A'
  2962  00E2F8  43                 	db	67	;'C'
  2963  00E2F9  20                 	db	32
  2964  00E2FA  6F                 	db	111	;'o'
  2965  00E2FB  75                 	db	117	;'u'
  2966  00E2FC  74                 	db	116	;'t'
  2967  00E2FD  70                 	db	112	;'p'
  2968  00E2FE  75                 	db	117	;'u'
  2969  00E2FF  74                 	db	116	;'t'
  2970  00E300  20                 	db	32
  2971  00E301  64                 	db	100	;'d'
  2972  00E302  69                 	db	105	;'i'
  2973  00E303  6D                 	db	109	;'m'
  2974  00E304  6D                 	db	109	;'m'
  2975  00E305  69                 	db	105	;'i'
  2976  00E306  6E                 	db	110	;'n'
  2977  00E307  67                 	db	103	;'g'
  2978  00E308  0A                 	db	10
  2979  00E309  0D                 	db	13
  2980  00E30A  20                 	db	32
  2981  00E30B  20                 	db	32
  2982  00E30C  20                 	db	32
  2983  00E30D  44                 	db	68	;'D'
  2984  00E30E  69                 	db	105	;'i'
  2985  00E30F  73                 	db	115	;'s'
  2986  00E310  61                 	db	97	;'a'
  2987  00E311  62                 	db	98	;'b'
  2988  00E312  6C                 	db	108	;'l'
  2989  00E313  65                 	db	101	;'e'
  2990  00E314  20                 	db	32
  2991  00E315  44                 	db	68	;'D'
  2992  00E316  69                 	db	105	;'i'
  2993  00E317  6D                 	db	109	;'m'
  2994  00E318  6D                 	db	109	;'m'
  2995  00E319  69                 	db	105	;'i'
  2996  00E31A  6E                 	db	110	;'n'
  2997  00E31B  67                 	db	103	;'g'
  2998  00E31C  3A                 	db	58	;':'
  2999  00E31D  20                 	db	32
  3000  00E31E  44                 	db	68	;'D'
  3001  00E31F  69                 	db	105	;'i'
  3002  00E320  73                 	db	115	;'s'
  3003  00E321  61                 	db	97	;'a'
  3004  00E322  62                 	db	98	;'b'
  3005  00E323  6C                 	db	108	;'l'
  3006  00E324  65                 	db	101	;'e'
  3007  00E325  20                 	db	32
  3008  00E326  54                 	db	84	;'T'
  3009  00E327  52                 	db	82	;'R'
  3010  00E328  49                 	db	73	;'I'
  3011  00E329  41                 	db	65	;'A'
  3012  00E32A  43                 	db	67	;'C'
  3013  00E32B  20                 	db	32
  3014  00E32C  6F                 	db	111	;'o'
  3015  00E32D  75                 	db	117	;'u'
  3016  00E32E  74                 	db	116	;'t'
  3017  00E32F  70                 	db	112	;'p'
  3018  00E330  75                 	db	117	;'u'
  3019  00E331  74                 	db	116	;'t'
  3020  00E332  20                 	db	32
  3021  00E333  64                 	db	100	;'d'
  3022  00E334  69                 	db	105	;'i'
  3023  00E335  6D                 	db	109	;'m'
  3024  00E336  6D                 	db	109	;'m'
  3025  00E337  69                 	db	105	;'i'
  3026  00E338  6E                 	db	110	;'n'
  3027  00E339  67                 	db	103	;'g'
  3028  00E33A  0A                 	db	10
  3029  00E33B  0D                 	db	13
  3030  00E33C  20                 	db	32
  3031  00E33D  20                 	db	32
  3032  00E33E  20                 	db	32
  3033  00E33F  45                 	db	69	;'E'
  3034  00E340  6E                 	db	110	;'n'
  3035  00E341  61                 	db	97	;'a'
  3036  00E342  62                 	db	98	;'b'
  3037  00E343  6C                 	db	108	;'l'
  3038  00E344  65                 	db	101	;'e'
  3039  00E345  20                 	db	32
  3040  00E346  4C                 	db	76	;'L'
  3041  00E347  6F                 	db	111	;'o'
  3042  00E348  61                 	db	97	;'a'
  3043  00E349  64                 	db	100	;'d'
  3044  00E34A  3A                 	db	58	;':'
  3045  00E34B  20                 	db	32
  3046  00E34C  45                 	db	69	;'E'
  3047  00E34D  6E                 	db	110	;'n'
  3048  00E34E  61                 	db	97	;'a'
  3049  00E34F  62                 	db	98	;'b'
  3050  00E350  6C                 	db	108	;'l'
  3051  00E351  65                 	db	101	;'e'
  3052  00E352  73                 	db	115	;'s'
  3053  00E353  20                 	db	32
  3054  00E354  74                 	db	116	;'t'
  3055  00E355  68                 	db	104	;'h'
  3056  00E356  65                 	db	101	;'e'
  3057  00E357  20                 	db	32
  3058  00E358  6F                 	db	111	;'o'
  3059  00E359  75                 	db	117	;'u'
  3060  00E35A  74                 	db	116	;'t'
  3061  00E35B  70                 	db	112	;'p'
  3062  00E35C  75                 	db	117	;'u'
  3063  00E35D  74                 	db	116	;'t'
  3064  00E35E  20                 	db	32
  3065  00E35F  54                 	db	84	;'T'
  3066  00E360  52                 	db	82	;'R'
  3067  00E361  49                 	db	73	;'I'
  3068  00E362  41                 	db	65	;'A'
  3069  00E363  43                 	db	67	;'C'
  3070  00E364  20                 	db	32
  3071  00E365  77                 	db	119	;'w'
  3072  00E366  69                 	db	105	;'i'
  3073  00E367  74                 	db	116	;'t'
  3074  00E368  68                 	db	104	;'h'
  3075  00E369  20                 	db	32
  3076  00E36A  64                 	db	100	;'d'
  3077  00E36B  69                 	db	105	;'i'
  3078  00E36C  6D                 	db	109	;'m'
  3079  00E36D  6D                 	db	109	;'m'
  3080  00E36E  69                 	db	105	;'i'
  3081  00E36F  6E                 	db	110	;'n'
  3082  00E370  67                 	db	103	;'g'
  3083  00E371  20                 	db	32
  3084  00E372  64                 	db	100	;'d'
  3085  00E373  69                 	db	105	;'i'
  3086  00E374  73                 	db	115	;'s'
  3087  00E375  61                 	db	97	;'a'
  3088  00E376  62                 	db	98	;'b'
  3089  00E377  6C                 	db	108	;'l'
  3090  00E378  65                 	db	101	;'e'
  3091  00E379  64                 	db	100	;'d'
  3092  00E37A  0A                 	db	10
  3093  00E37B  0D                 	db	13
  3094  00E37C  20                 	db	32
  3095  00E37D  20                 	db	32
  3096  00E37E  20                 	db	32
  3097  00E37F  44                 	db	68	;'D'
  3098  00E380  69                 	db	105	;'i'
  3099  00E381  73                 	db	115	;'s'
  3100  00E382  61                 	db	97	;'a'
  3101  00E383  62                 	db	98	;'b'
  3102  00E384  6C                 	db	108	;'l'
  3103  00E385  65                 	db	101	;'e'
  3104  00E386  20                 	db	32
  3105  00E387  4C                 	db	76	;'L'
  3106  00E388  6F                 	db	111	;'o'
  3107  00E389  61                 	db	97	;'a'
  3108  00E38A  64                 	db	100	;'d'
  3109  00E38B  3A                 	db	58	;':'
  3110  00E38C  20                 	db	32
  3111  00E38D  44                 	db	68	;'D'
  3112  00E38E  69                 	db	105	;'i'
  3113  00E38F  73                 	db	115	;'s'
  3114  00E390  61                 	db	97	;'a'
  3115  00E391  62                 	db	98	;'b'
  3116  00E392  6C                 	db	108	;'l'
  3117  00E393  65                 	db	101	;'e'
  3118  00E394  73                 	db	115	;'s'
  3119  00E395  20                 	db	32
  3120  00E396  74                 	db	116	;'t'
  3121  00E397  68                 	db	104	;'h'
  3122  00E398  65                 	db	101	;'e'
  3123  00E399  20                 	db	32
  3124  00E39A  6F                 	db	111	;'o'
  3125  00E39B  75                 	db	117	;'u'
  3126  00E39C  74                 	db	116	;'t'
  3127  00E39D  70                 	db	112	;'p'
  3128  00E39E  75                 	db	117	;'u'
  3129  00E39F  74                 	db	116	;'t'
  3130  00E3A0  20                 	db	32
  3131  00E3A1  54                 	db	84	;'T'
  3132  00E3A2  52                 	db	82	;'R'
  3133  00E3A3  49                 	db	73	;'I'
  3134  00E3A4  41                 	db	65	;'A'
  3135  00E3A5  43                 	db	67	;'C'
  3136  00E3A6  20                 	db	32
  3137  00E3A7  63                 	db	99	;'c'
  3138  00E3A8  6F                 	db	111	;'o'
  3139  00E3A9  6D                 	db	109	;'m'
  3140  00E3AA  70                 	db	112	;'p'
  3141  00E3AB  6C                 	db	108	;'l'
  3142  00E3AC  65                 	db	101	;'e'
  3143  00E3AD  74                 	db	116	;'t'
  3144  00E3AE  65                 	db	101	;'e'
  3145  00E3AF  6C                 	db	108	;'l'
  3146  00E3B0  79                 	db	121	;'y'
  3147  00E3B1  0A                 	db	10
  3148  00E3B2  0D                 	db	13
  3149  00E3B3  20                 	db	32
  3150  00E3B4  20                 	db	32
  3151  00E3B5  20                 	db	32
  3152  00E3B6  4C                 	db	76	;'L'
  3153  00E3B7  6F                 	db	111	;'o'
  3154  00E3B8  61                 	db	97	;'a'
  3155  00E3B9  64                 	db	100	;'d'
  3156  00E3BA  20                 	db	32
  3157  00E3BB  45                 	db	69	;'E'
  3158  00E3BC  6E                 	db	110	;'n'
  3159  00E3BD  61                 	db	97	;'a'
  3160  00E3BE  62                 	db	98	;'b'
  3161  00E3BF  6C                 	db	108	;'l'
  3162  00E3C0  65                 	db	101	;'e'
  3163  00E3C1  64                 	db	100	;'d'
  3164  00E3C2  3F                 	db	63	;'?'
  3165  00E3C3  3A                 	db	58	;':'
  3166  00E3C4  20                 	db	32
  3167  00E3C5  52                 	db	82	;'R'
  3168  00E3C6  65                 	db	101	;'e'
  3169  00E3C7  74                 	db	116	;'t'
  3170  00E3C8  75                 	db	117	;'u'
  3171  00E3C9  72                 	db	114	;'r'
  3172  00E3CA  6E                 	db	110	;'n'
  3173  00E3CB  73                 	db	115	;'s'
  3174  00E3CC  20                 	db	32
  3175  00E3CD  69                 	db	105	;'i'
  3176  00E3CE  66                 	db	102	;'f'
  3177  00E3CF  20                 	db	32
  3178  00E3D0  74                 	db	116	;'t'
  3179  00E3D1  68                 	db	104	;'h'
  3180  00E3D2  65                 	db	101	;'e'
  3181  00E3D3  20                 	db	32
  3182  00E3D4  6F                 	db	111	;'o'
  3183  00E3D5  75                 	db	117	;'u'
  3184  00E3D6  74                 	db	116	;'t'
  3185  00E3D7  70                 	db	112	;'p'
  3186  00E3D8  75                 	db	117	;'u'
  3187  00E3D9  74                 	db	116	;'t'
  3188  00E3DA  20                 	db	32
  3189  00E3DB  6C                 	db	108	;'l'
  3190  00E3DC  6F                 	db	111	;'o'
  3191  00E3DD  61                 	db	97	;'a'
  3192  00E3DE  64                 	db	100	;'d'
  3193  00E3DF  20                 	db	32
  3194  00E3E0  69                 	db	105	;'i'
  3195  00E3E1  73                 	db	115	;'s'
  3196  00E3E2  20                 	db	32
  3197  00E3E3  65                 	db	101	;'e'
  3198  00E3E4  6E                 	db	110	;'n'
  3199  00E3E5  61                 	db	97	;'a'
  3200  00E3E6  62                 	db	98	;'b'
  3201  00E3E7  6C                 	db	108	;'l'
  3202  00E3E8  65                 	db	101	;'e'
  3203  00E3E9  64                 	db	100	;'d'
  3204  00E3EA  20                 	db	32
  3205  00E3EB  6F                 	db	111	;'o'
  3206  00E3EC  72                 	db	114	;'r'
  3207  00E3ED  20                 	db	32
  3208  00E3EE  64                 	db	100	;'d'
  3209  00E3EF  69                 	db	105	;'i'
  3210  00E3F0  73                 	db	115	;'s'
  3211  00E3F1  61                 	db	97	;'a'
  3212  00E3F2  62                 	db	98	;'b'
  3213  00E3F3  6C                 	db	108	;'l'
  3214  00E3F4  65                 	db	101	;'e'
  3215  00E3F5  64                 	db	100	;'d'
  3216  00E3F6  0A                 	db	10
  3217  00E3F7  0D                 	db	13
  3218  00E3F8  20                 	db	32
  3219  00E3F9  20                 	db	32
  3220  00E3FA  20                 	db	32
  3221  00E3FB  44                 	db	68	;'D'
  3222  00E3FC  69                 	db	105	;'i'
  3223  00E3FD  6D                 	db	109	;'m'
  3224  00E3FE  6D                 	db	109	;'m'
  3225  00E3FF  69                 	db	105	;'i'
  3226  00E400  6E                 	db	110	;'n'
  3227  00E401  67                 	db	103	;'g'
  3228  00E402  20                 	db	32
  3229  00E403  45                 	db	69	;'E'
  3230  00E404  6E                 	db	110	;'n'
  3231  00E405  61                 	db	97	;'a'
  3232  00E406  62                 	db	98	;'b'
  3233  00E407  6C                 	db	108	;'l'
  3234  00E408  65                 	db	101	;'e'
  3235  00E409  64                 	db	100	;'d'
  3236  00E40A  3F                 	db	63	;'?'
  3237  00E40B  3A                 	db	58	;':'
  3238  00E40C  20                 	db	32
  3239  00E40D  52                 	db	82	;'R'
  3240  00E40E  65                 	db	101	;'e'
  3241  00E40F  74                 	db	116	;'t'
  3242  00E410  75                 	db	117	;'u'
  3243  00E411  72                 	db	114	;'r'
  3244  00E412  6E                 	db	110	;'n'
  3245  00E413  73                 	db	115	;'s'
  3246  00E414  20                 	db	32
  3247  00E415  69                 	db	105	;'i'
  3248  00E416  66                 	db	102	;'f'
  3249  00E417  20                 	db	32
  3250  00E418  64                 	db	100	;'d'
  3251  00E419  69                 	db	105	;'i'
  3252  00E41A  6D                 	db	109	;'m'
  3253  00E41B  6D                 	db	109	;'m'
  3254  00E41C  69                 	db	105	;'i'
  3255  00E41D  6E                 	db	110	;'n'
  3256  00E41E  67                 	db	103	;'g'
  3257  00E41F  20                 	db	32
  3258  00E420  6F                 	db	111	;'o'
  3259  00E421  66                 	db	102	;'f'
  3260  00E422  20                 	db	32
  3261  00E423  74                 	db	116	;'t'
  3262  00E424  68                 	db	104	;'h'
  3263  00E425  65                 	db	101	;'e'
  3264  00E426  20                 	db	32
  3265  00E427  6F                 	db	111	;'o'
  3266  00E428  75                 	db	117	;'u'
  3267  00E429  74                 	db	116	;'t'
  3268  00E42A  70                 	db	112	;'p'
  3269  00E42B  75                 	db	117	;'u'
  3270  00E42C  74                 	db	116	;'t'
  3271  00E42D  20                 	db	32
  3272  00E42E  6C                 	db	108	;'l'
  3273  00E42F  6F                 	db	111	;'o'
  3274  00E430  61                 	db	97	;'a'
  3275  00E431  64                 	db	100	;'d'
  3276  00E432  20                 	db	32
  3277  00E433  69                 	db	105	;'i'
  3278  00E434  73                 	db	115	;'s'
  3279  00E435  20                 	db	32
  3280  00E436  65                 	db	101	;'e'
  3281  00E437  6E                 	db	110	;'n'
  3282  00E438  61                 	db	97	;'a'
  3283  00E439  62                 	db	98	;'b'
  3284  00E43A  6C                 	db	108	;'l'
  3285  00E43B  65                 	db	101	;'e'
  3286  00E43C  64                 	db	100	;'d'
  3287  00E43D  20                 	db	32
  3288  00E43E  6F                 	db	111	;'o'
  3289  00E43F  72                 	db	114	;'r'
  3290  00E440  20                 	db	32
  3291  00E441  6E                 	db	110	;'n'
  3292  00E442  6F                 	db	111	;'o'
  3293  00E443  74                 	db	116	;'t'
  3294  00E444  0A                 	db	10
  3295  00E445  0D                 	db	13
  3296  00E446  20                 	db	32
  3297  00E447  20                 	db	32
  3298  00E448  20                 	db	32
  3299  00E449  53                 	db	83	;'S'
  3300  00E44A  65                 	db	101	;'e'
  3301  00E44B  74                 	db	116	;'t'
  3302  00E44C  20                 	db	32
  3303  00E44D  44                 	db	68	;'D'
  3304  00E44E  69                 	db	105	;'i'
  3305  00E44F  6D                 	db	109	;'m'
  3306  00E450  6D                 	db	109	;'m'
  3307  00E451  69                 	db	105	;'i'
  3308  00E452  6E                 	db	110	;'n'
  3309  00E453  67                 	db	103	;'g'
  3310  00E454  20                 	db	32
  3311  00E455  50                 	db	80	;'P'
  3312  00E456  65                 	db	101	;'e'
  3313  00E457  72                 	db	114	;'r'
  3314  00E458  63                 	db	99	;'c'
  3315  00E459  65                 	db	101	;'e'
  3316  00E45A  6E                 	db	110	;'n'
  3317  00E45B  74                 	db	116	;'t'
  3318  00E45C  61                 	db	97	;'a'
  3319  00E45D  67                 	db	103	;'g'
  3320  00E45E  65                 	db	101	;'e'
  3321  00E45F  3A                 	db	58	;':'
  3322  00E460  20                 	db	32
  3323  00E461  3C                 	db	60	;'<'
  3324  00E462  78                 	db	120	;'x'
  3325  00E463  3E                 	db	62	;'>'
  3326  00E464  3A                 	db	58	;':'
  3327  00E465  20                 	db	32
  3328  00E466  53                 	db	83	;'S'
  3329  00E467  65                 	db	101	;'e'
  3330  00E468  74                 	db	116	;'t'
  3331  00E469  73                 	db	115	;'s'
  3332  00E46A  20                 	db	32
  3333  00E46B  74                 	db	116	;'t'
  3334  00E46C  68                 	db	104	;'h'
  3335  00E46D  65                 	db	101	;'e'
  3336  00E46E  20                 	db	32
  3337  00E46F  6F                 	db	111	;'o'
  3338  00E470  75                 	db	117	;'u'
  3339  00E471  74                 	db	116	;'t'
  3340  00E472  70                 	db	112	;'p'
  3341  00E473  75                 	db	117	;'u'
  3342  00E474  74                 	db	116	;'t'
  3343  00E475  20                 	db	32
  3344  00E476  64                 	db	100	;'d'
  3345  00E477  69                 	db	105	;'i'
  3346  00E478  6D                 	db	109	;'m'
  3347  00E479  6D                 	db	109	;'m'
  3348  00E47A  69                 	db	105	;'i'
  3349  00E47B  6E                 	db	110	;'n'
  3350  00E47C  67                 	db	103	;'g'
  3351  00E47D  20                 	db	32
  3352  00E47E  70                 	db	112	;'p'
  3353  00E47F  65                 	db	101	;'e'
  3354  00E480  72                 	db	114	;'r'
  3355  00E481  63                 	db	99	;'c'
  3356  00E482  65                 	db	101	;'e'
  3357  00E483  6E                 	db	110	;'n'
  3358  00E484  74                 	db	116	;'t'
  3359  00E485  61                 	db	97	;'a'
  3360  00E486  67                 	db	103	;'g'
  3361  00E487  65                 	db	101	;'e'
  3362  00E488  20                 	db	32
  3363  00E489  61                 	db	97	;'a'
  3364  00E48A  73                 	db	115	;'s'
  3365  00E48B  20                 	db	32
  3366  00E48C  78                 	db	120	;'x'
  3367  00E48D  20                 	db	32
  3368  00E48E  70                 	db	112	;'p'
  3369  00E48F  65                 	db	101	;'e'
  3370  00E490  72                 	db	114	;'r'
  3371  00E491  63                 	db	99	;'c'
  3372  00E492  65                 	db	101	;'e'
  3373  00E493  6E                 	db	110	;'n'
  3374  00E494  74                 	db	116	;'t'
  3375  00E495  0A                 	db	10
  3376  00E496  0D                 	db	13
  3377  00E497  0A                 	db	10
  3378  00E498  0D                 	db	13
  3379  00E499  00                 	db	0
  3380  00E49A                     STR_135:
  3381  00E49A  4C                 	db	76	;'L'
  3382  00E49B  69                 	db	105	;'i'
  3383  00E49C  73                 	db	115	;'s'
  3384  00E49D  74                 	db	116	;'t'
  3385  00E49E  20                 	db	32
  3386  00E49F  6F                 	db	111	;'o'
  3387  00E4A0  66                 	db	102	;'f'
  3388  00E4A1  20                 	db	32
  3389  00E4A2  73                 	db	115	;'s'
  3390  00E4A3  75                 	db	117	;'u'
  3391  00E4A4  70                 	db	112	;'p'
  3392  00E4A5  70                 	db	112	;'p'
  3393  00E4A6  6F                 	db	111	;'o'
  3394  00E4A7  72                 	db	114	;'r'
  3395  00E4A8  74                 	db	116	;'t'
  3396  00E4A9  65                 	db	101	;'e'
  3397  00E4AA  64                 	db	100	;'d'
  3398  00E4AB  20                 	db	32
  3399  00E4AC  44                 	db	68	;'D'
  3400  00E4AD  65                 	db	101	;'e'
  3401  00E4AE  76                 	db	118	;'v'
  3402  00E4AF  69                 	db	105	;'i'
  3403  00E4B0  63                 	db	99	;'c'
  3404  00E4B1  65                 	db	101	;'e'
  3405  00E4B2  20                 	db	32
  3406  00E4B3  43                 	db	67	;'C'
  3407  00E4B4  6F                 	db	111	;'o'
  3408  00E4B5  6E                 	db	110	;'n'
  3409  00E4B6  74                 	db	116	;'t'
  3410  00E4B7  72                 	db	114	;'r'
  3411  00E4B8  6F                 	db	111	;'o'
  3412  00E4B9  6C                 	db	108	;'l'
  3413  00E4BA  20                 	db	32
  3414  00E4BB  43                 	db	67	;'C'
  3415  00E4BC  6F                 	db	111	;'o'
  3416  00E4BD  6D                 	db	109	;'m'
  3417  00E4BE  6D                 	db	109	;'m'
  3418  00E4BF  61                 	db	97	;'a'
  3419  00E4C0  6E                 	db	110	;'n'
  3420  00E4C1  64                 	db	100	;'d'
  3421  00E4C2  73                 	db	115	;'s'
  3422  00E4C3  3A                 	db	58	;':'
  3423  00E4C4  0A                 	db	10
  3424  00E4C5  0D                 	db	13
  3425  00E4C6  20                 	db	32
  3426  00E4C7  20                 	db	32
  3427  00E4C8  20                 	db	32
  3428  00E4C9  52                 	db	82	;'R'
  3429  00E4CA  65                 	db	101	;'e'
  3430  00E4CB  73                 	db	115	;'s'
  3431  00E4CC  65                 	db	101	;'e'
  3432  00E4CD  74                 	db	116	;'t'
  3433  00E4CE  3A                 	db	58	;':'
  3434  00E4CF  20                 	db	32
  3435  00E4D0  43                 	db	67	;'C'
  3436  00E4D1  6C                 	db	108	;'l'
  3437  00E4D2  65                 	db	101	;'e'
  3438  00E4D3  61                 	db	97	;'a'
  3439  00E4D4  72                 	db	114	;'r'
  3440  00E4D5  73                 	db	115	;'s'
  3441  00E4D6  20                 	db	32
  3442  00E4D7  74                 	db	116	;'t'
  3443  00E4D8  68                 	db	104	;'h'
  3444  00E4D9  65                 	db	101	;'e'
  3445  00E4DA  20                 	db	32
  3446  00E4DB  74                 	db	116	;'t'
  3447  00E4DC  65                 	db	101	;'e'
  3448  00E4DD  72                 	db	114	;'r'
  3449  00E4DE  6D                 	db	109	;'m'
  3450  00E4DF  69                 	db	105	;'i'
  3451  00E4E0  6E                 	db	110	;'n'
  3452  00E4E1  61                 	db	97	;'a'
  3453  00E4E2  6C                 	db	108	;'l'
  3454  00E4E3  20                 	db	32
  3455  00E4E4  61                 	db	97	;'a'
  3456  00E4E5  6E                 	db	110	;'n'
  3457  00E4E6  64                 	db	100	;'d'
  3458  00E4E7  20                 	db	32
  3459  00E4E8  72                 	db	114	;'r'
  3460  00E4E9  65                 	db	101	;'e'
  3461  00E4EA  73                 	db	115	;'s'
  3462  00E4EB  65                 	db	101	;'e'
  3463  00E4EC  74                 	db	116	;'t'
  3464  00E4ED  73                 	db	115	;'s'
  3465  00E4EE  20                 	db	32
  3466  00E4EF  74                 	db	116	;'t'
  3467  00E4F0  68                 	db	104	;'h'
  3468  00E4F1  65                 	db	101	;'e'
  3469  00E4F2  20                 	db	32
  3470  00E4F3  6D                 	db	109	;'m'
  3471  00E4F4  69                 	db	105	;'i'
  3472  00E4F5  63                 	db	99	;'c'
  3473  00E4F6  72                 	db	114	;'r'
  3474  00E4F7  6F                 	db	111	;'o'
  3475  00E4F8  0A                 	db	10
  3476  00E4F9  0D                 	db	13
  3477  00E4FA  20                 	db	32
  3478  00E4FB  20                 	db	32
  3479  00E4FC  20                 	db	32
  3480  00E4FD  43                 	db	67	;'C'
  3481  00E4FE  6C                 	db	108	;'l'
  3482  00E4FF  65                 	db	101	;'e'
  3483  00E500  61                 	db	97	;'a'
  3484  00E501  72                 	db	114	;'r'
  3485  00E502  3A                 	db	58	;':'
  3486  00E503  20                 	db	32
  3487  00E504  43                 	db	67	;'C'
  3488  00E505  6C                 	db	108	;'l'
  3489  00E506  65                 	db	101	;'e'
  3490  00E507  61                 	db	97	;'a'
  3491  00E508  72                 	db	114	;'r'
  3492  00E509  73                 	db	115	;'s'
  3493  00E50A  20                 	db	32
  3494  00E50B  74                 	db	116	;'t'
  3495  00E50C  68                 	db	104	;'h'
  3496  00E50D  65                 	db	101	;'e'
  3497  00E50E  20                 	db	32
  3498  00E50F  74                 	db	116	;'t'
  3499  00E510  65                 	db	101	;'e'
  3500  00E511  72                 	db	114	;'r'
  3501  00E512  6D                 	db	109	;'m'
  3502  00E513  69                 	db	105	;'i'
  3503  00E514  6E                 	db	110	;'n'
  3504  00E515  61                 	db	97	;'a'
  3505  00E516  6C                 	db	108	;'l'
  3506  00E517  20                 	db	32
  3507  00E518  62                 	db	98	;'b'
  3508  00E519  75                 	db	117	;'u'
  3509  00E51A  74                 	db	116	;'t'
  3510  00E51B  20                 	db	32
  3511  00E51C  64                 	db	100	;'d'
  3512  00E51D  6F                 	db	111	;'o'
  3513  00E51E  65                 	db	101	;'e'
  3514  00E51F  73                 	db	115	;'s'
  3515  00E520  6E                 	db	110	;'n'
  3516  00E521  27                 	db	39
  3517  00E522  74                 	db	116	;'t'
  3518  00E523  20                 	db	32
  3519  00E524  72                 	db	114	;'r'
  3520  00E525  65                 	db	101	;'e'
  3521  00E526  73                 	db	115	;'s'
  3522  00E527  65                 	db	101	;'e'
  3523  00E528  74                 	db	116	;'t'
  3524  00E529  20                 	db	32
  3525  00E52A  74                 	db	116	;'t'
  3526  00E52B  68                 	db	104	;'h'
  3527  00E52C  65                 	db	101	;'e'
  3528  00E52D  20                 	db	32
  3529  00E52E  6D                 	db	109	;'m'
  3530  00E52F  69                 	db	105	;'i'
  3531  00E530  63                 	db	99	;'c'
  3532  00E531  72                 	db	114	;'r'
  3533  00E532  6F                 	db	111	;'o'
  3534  00E533  0A                 	db	10
  3535  00E534  0D                 	db	13
  3536  00E535  20                 	db	32
  3537  00E536  20                 	db	32
  3538  00E537  20                 	db	32
  3539  00E538  43                 	db	67	;'C'
  3540  00E539  61                 	db	97	;'a'
  3541  00E53A  75                 	db	117	;'u'
  3542  00E53B  73                 	db	115	;'s'
  3543  00E53C  65                 	db	101	;'e'
  3544  00E53D  20                 	db	32
  3545  00E53E  6F                 	db	111	;'o'
  3546  00E53F  66                 	db	102	;'f'
  3547  00E540  20                 	db	32
  3548  00E541  52                 	db	82	;'R'
  3549  00E542  65                 	db	101	;'e'
  3550  00E543  73                 	db	115	;'s'
  3551  00E544  65                 	db	101	;'e'
  3552  00E545  74                 	db	116	;'t'
  3553  00E546  3F                 	db	63	;'?'
  3554  00E547  3A                 	db	58	;':'
  3555  00E548  20                 	db	32
  3556  00E549  52                 	db	82	;'R'
  3557  00E54A  65                 	db	101	;'e'
  3558  00E54B  74                 	db	116	;'t'
  3559  00E54C  75                 	db	117	;'u'
  3560  00E54D  72                 	db	114	;'r'
  3561  00E54E  6E                 	db	110	;'n'
  3562  00E54F  73                 	db	115	;'s'
  3563  00E550  20                 	db	32
  3564  00E551  74                 	db	116	;'t'
  3565  00E552  68                 	db	104	;'h'
  3566  00E553  65                 	db	101	;'e'
  3567  00E554  20                 	db	32
  3568  00E555  63                 	db	99	;'c'
  3569  00E556  61                 	db	97	;'a'
  3570  00E557  75                 	db	117	;'u'
  3571  00E558  73                 	db	115	;'s'
  3572  00E559  65                 	db	101	;'e'
  3573  00E55A  20                 	db	32
  3574  00E55B  6F                 	db	111	;'o'
  3575  00E55C  66                 	db	102	;'f'
  3576  00E55D  20                 	db	32
  3577  00E55E  74                 	db	116	;'t'
  3578  00E55F  68                 	db	104	;'h'
  3579  00E560  65                 	db	101	;'e'
  3580  00E561  20                 	db	32
  3581  00E562  6D                 	db	109	;'m'
  3582  00E563  6F                 	db	111	;'o'
  3583  00E564  73                 	db	115	;'s'
  3584  00E565  74                 	db	116	;'t'
  3585  00E566  20                 	db	32
  3586  00E567  72                 	db	114	;'r'
  3587  00E568  65                 	db	101	;'e'
  3588  00E569  63                 	db	99	;'c'
  3589  00E56A  65                 	db	101	;'e'
  3590  00E56B  6E                 	db	110	;'n'
  3591  00E56C  74                 	db	116	;'t'
  3592  00E56D  20                 	db	32
  3593  00E56E  64                 	db	100	;'d'
  3594  00E56F  65                 	db	101	;'e'
  3595  00E570  76                 	db	118	;'v'
  3596  00E571  69                 	db	105	;'i'
  3597  00E572  63                 	db	99	;'c'
  3598  00E573  65                 	db	101	;'e'
  3599  00E574  20                 	db	32
  3600  00E575  72                 	db	114	;'r'
  3601  00E576  65                 	db	101	;'e'
  3602  00E577  73                 	db	115	;'s'
  3603  00E578  65                 	db	101	;'e'
  3604  00E579  74                 	db	116	;'t'
  3605  00E57A  0A                 	db	10
  3606  00E57B  0D                 	db	13
  3607  00E57C  20                 	db	32
  3608  00E57D  20                 	db	32
  3609  00E57E  20                 	db	32
  3610  00E57F  2A                 	db	42
  3611  00E580  49                 	db	73	;'I'
  3612  00E581  44                 	db	68	;'D'
  3613  00E582  4E                 	db	78	;'N'
  3614  00E583  3F                 	db	63	;'?'
  3615  00E584  3A                 	db	58	;':'
  3616  00E585  20                 	db	32
  3617  00E586  52                 	db	82	;'R'
  3618  00E587  65                 	db	101	;'e'
  3619  00E588  74                 	db	116	;'t'
  3620  00E589  75                 	db	117	;'u'
  3621  00E58A  72                 	db	114	;'r'
  3622  00E58B  6E                 	db	110	;'n'
  3623  00E58C  73                 	db	115	;'s'
  3624  00E58D  20                 	db	32
  3625  00E58E  64                 	db	100	;'d'
  3626  00E58F  65                 	db	101	;'e'
  3627  00E590  76                 	db	118	;'v'
  3628  00E591  69                 	db	105	;'i'
  3629  00E592  63                 	db	99	;'c'
  3630  00E593  65                 	db	101	;'e'
  3631  00E594  20                 	db	32
  3632  00E595  69                 	db	105	;'i'
  3633  00E596  64                 	db	100	;'d'
  3634  00E597  65                 	db	101	;'e'
  3635  00E598  6E                 	db	110	;'n'
  3636  00E599  74                 	db	116	;'t'
  3637  00E59A  69                 	db	105	;'i'
  3638  00E59B  66                 	db	102	;'f'
  3639  00E59C  69                 	db	105	;'i'
  3640  00E59D  63                 	db	99	;'c'
  3641  00E59E  61                 	db	97	;'a'
  3642  00E59F  74                 	db	116	;'t'
  3643  00E5A0  69                 	db	105	;'i'
  3644  00E5A1  6F                 	db	111	;'o'
  3645  00E5A2  6E                 	db	110	;'n'
  3646  00E5A3  20                 	db	32
  3647  00E5A4  73                 	db	115	;'s'
  3648  00E5A5  74                 	db	116	;'t'
  3649  00E5A6  72                 	db	114	;'r'
  3650  00E5A7  69                 	db	105	;'i'
  3651  00E5A8  6E                 	db	110	;'n'
  3652  00E5A9  67                 	db	103	;'g'
  3653  00E5AA  0A                 	db	10
  3654  00E5AB  0D                 	db	13
  3655  00E5AC  20                 	db	32
  3656  00E5AD  20                 	db	32
  3657  00E5AE  20                 	db	32
  3658  00E5AF  44                 	db	68	;'D'
  3659  00E5B0  65                 	db	101	;'e'
  3660  00E5B1  76                 	db	118	;'v'
  3661  00E5B2  69                 	db	105	;'i'
  3662  00E5B3  63                 	db	99	;'c'
  3663  00E5B4  65                 	db	101	;'e'
  3664  00E5B5  20                 	db	32
  3665  00E5B6  4F                 	db	79	;'O'
  3666  00E5B7  6E                 	db	110	;'n'
  3667  00E5B8  20                 	db	32
  3668  00E5B9  54                 	db	84	;'T'
  3669  00E5BA  69                 	db	105	;'i'
  3670  00E5BB  6D                 	db	109	;'m'
  3671  00E5BC  65                 	db	101	;'e'
  3672  00E5BD  3F                 	db	63	;'?'
  3673  00E5BE  3A                 	db	58	;':'
  3674  00E5BF  20                 	db	32
  3675  00E5C0  52                 	db	82	;'R'
  3676  00E5C1  65                 	db	101	;'e'
  3677  00E5C2  74                 	db	116	;'t'
  3678  00E5C3  75                 	db	117	;'u'
  3679  00E5C4  72                 	db	114	;'r'
  3680  00E5C5  6E                 	db	110	;'n'
  3681  00E5C6  73                 	db	115	;'s'
  3682  00E5C7  20                 	db	32
  3683  00E5C8  64                 	db	100	;'d'
  3684  00E5C9  65                 	db	101	;'e'
  3685  00E5CA  76                 	db	118	;'v'
  3686  00E5CB  69                 	db	105	;'i'
  3687  00E5CC  63                 	db	99	;'c'
  3688  00E5CD  65                 	db	101	;'e'
  3689  00E5CE  20                 	db	32
  3690  00E5CF  6F                 	db	111	;'o'
  3691  00E5D0  6E                 	db	110	;'n'
  3692  00E5D1  20                 	db	32
  3693  00E5D2  74                 	db	116	;'t'
  3694  00E5D3  69                 	db	105	;'i'
  3695  00E5D4  6D                 	db	109	;'m'
  3696  00E5D5  65                 	db	101	;'e'
  3697  00E5D6  20                 	db	32
  3698  00E5D7  73                 	db	115	;'s'
  3699  00E5D8  69                 	db	105	;'i'
  3700  00E5D9  6E                 	db	110	;'n'
  3701  00E5DA  63                 	db	99	;'c'
  3702  00E5DB  65                 	db	101	;'e'
  3703  00E5DC  20                 	db	32
  3704  00E5DD  6C                 	db	108	;'l'
  3705  00E5DE  61                 	db	97	;'a'
  3706  00E5DF  73                 	db	115	;'s'
  3707  00E5E0  74                 	db	116	;'t'
  3708  00E5E1  20                 	db	32
  3709  00E5E2  64                 	db	100	;'d'
  3710  00E5E3  65                 	db	101	;'e'
  3711  00E5E4  76                 	db	118	;'v'
  3712  00E5E5  69                 	db	105	;'i'
  3713  00E5E6  63                 	db	99	;'c'
  3714  00E5E7  65                 	db	101	;'e'
  3715  00E5E8  20                 	db	32
  3716  00E5E9  72                 	db	114	;'r'
  3717  00E5EA  65                 	db	101	;'e'
  3718  00E5EB  73                 	db	115	;'s'
  3719  00E5EC  65                 	db	101	;'e'
  3720  00E5ED  74                 	db	116	;'t'
  3721  00E5EE  0A                 	db	10
  3722  00E5EF  0D                 	db	13
  3723  00E5F0  20                 	db	32
  3724  00E5F1  20                 	db	32
  3725  00E5F2  20                 	db	32
  3726  00E5F3  44                 	db	68	;'D'
  3727  00E5F4  65                 	db	101	;'e'
  3728  00E5F5  76                 	db	118	;'v'
  3729  00E5F6  69                 	db	105	;'i'
  3730  00E5F7  63                 	db	99	;'c'
  3731  00E5F8  65                 	db	101	;'e'
  3732  00E5F9  20                 	db	32
  3733  00E5FA  49                 	db	73	;'I'
  3734  00E5FB  44                 	db	68	;'D'
  3735  00E5FC  3F                 	db	63	;'?'
  3736  00E5FD  3A                 	db	58	;':'
  3737  00E5FE  20                 	db	32
  3738  00E5FF  52                 	db	82	;'R'
  3739  00E600  65                 	db	101	;'e'
  3740  00E601  74                 	db	116	;'t'
  3741  00E602  75                 	db	117	;'u'
  3742  00E603  72                 	db	114	;'r'
  3743  00E604  6E                 	db	110	;'n'
  3744  00E605  73                 	db	115	;'s'
  3745  00E606  20                 	db	32
  3746  00E607  64                 	db	100	;'d'
  3747  00E608  65                 	db	101	;'e'
  3748  00E609  76                 	db	118	;'v'
  3749  00E60A  69                 	db	105	;'i'
  3750  00E60B  63                 	db	99	;'c'
  3751  00E60C  65                 	db	101	;'e'
  3752  00E60D  20                 	db	32
  3753  00E60E  49                 	db	73	;'I'
  3754  00E60F  44                 	db	68	;'D'
  3755  00E610  20                 	db	32
  3756  00E611  61                 	db	97	;'a'
  3757  00E612  73                 	db	115	;'s'
  3758  00E613  20                 	db	32
  3759  00E614  70                 	db	112	;'p'
  3760  00E615  72                 	db	114	;'r'
  3761  00E616  65                 	db	101	;'e'
  3762  00E617  2D                 	db	45
  3763  00E618  70                 	db	112	;'p'
  3764  00E619  72                 	db	114	;'r'
  3765  00E61A  6F                 	db	111	;'o'
  3766  00E61B  67                 	db	103	;'g'
  3767  00E61C  72                 	db	114	;'r'
  3768  00E61D  61                 	db	97	;'a'
  3769  00E61E  6D                 	db	109	;'m'
  3770  00E61F  6D                 	db	109	;'m'
  3771  00E620  65                 	db	101	;'e'
  3772  00E621  64                 	db	100	;'d'
  3773  00E622  20                 	db	32
  3774  00E623  69                 	db	105	;'i'
  3775  00E624  6E                 	db	110	;'n'
  3776  00E625  20                 	db	32
  3777  00E626  66                 	db	102	;'f'
  3778  00E627  6C                 	db	108	;'l'
  3779  00E628  61                 	db	97	;'a'
  3780  00E629  73                 	db	115	;'s'
  3781  00E62A  68                 	db	104	;'h'
  3782  00E62B  20                 	db	32
  3783  00E62C  6D                 	db	109	;'m'
  3784  00E62D  65                 	db	101	;'e'
  3785  00E62E  6D                 	db	109	;'m'
  3786  00E62F  6F                 	db	111	;'o'
  3787  00E630  72                 	db	114	;'r'
  3788  00E631  79                 	db	121	;'y'
  3789  00E632  0A                 	db	10
  3790  00E633  0D                 	db	13
  3791  00E634  20                 	db	32
  3792  00E635  20                 	db	32
  3793  00E636  20                 	db	32
  3794  00E637  52                 	db	82	;'R'
  3795  00E638  65                 	db	101	;'e'
  3796  00E639  76                 	db	118	;'v'
  3797  00E63A  69                 	db	105	;'i'
  3798  00E63B  73                 	db	115	;'s'
  3799  00E63C  69                 	db	105	;'i'
  3800  00E63D  6F                 	db	111	;'o'
  3801  00E63E  6E                 	db	110	;'n'
  3802  00E63F  20                 	db	32
  3803  00E640  49                 	db	73	;'I'
  3804  00E641  44                 	db	68	;'D'
  3805  00E642  3F                 	db	63	;'?'
  3806  00E643  3A                 	db	58	;':'
  3807  00E644  20                 	db	32
  3808  00E645  52                 	db	82	;'R'
  3809  00E646  65                 	db	101	;'e'
  3810  00E647  74                 	db	116	;'t'
  3811  00E648  75                 	db	117	;'u'
  3812  00E649  72                 	db	114	;'r'
  3813  00E64A  6E                 	db	110	;'n'
  3814  00E64B  73                 	db	115	;'s'
  3815  00E64C  20                 	db	32
  3816  00E64D  64                 	db	100	;'d'
  3817  00E64E  65                 	db	101	;'e'
  3818  00E64F  76                 	db	118	;'v'
  3819  00E650  69                 	db	105	;'i'
  3820  00E651  63                 	db	99	;'c'
  3821  00E652  65                 	db	101	;'e'
  3822  00E653  20                 	db	32
  3823  00E654  73                 	db	115	;'s'
  3824  00E655  69                 	db	105	;'i'
  3825  00E656  6C                 	db	108	;'l'
  3826  00E657  69                 	db	105	;'i'
  3827  00E658  63                 	db	99	;'c'
  3828  00E659  6F                 	db	111	;'o'
  3829  00E65A  6E                 	db	110	;'n'
  3830  00E65B  20                 	db	32
  3831  00E65C  72                 	db	114	;'r'
  3832  00E65D  65                 	db	101	;'e'
  3833  00E65E  76                 	db	118	;'v'
  3834  00E65F  69                 	db	105	;'i'
  3835  00E660  73                 	db	115	;'s'
  3836  00E661  69                 	db	105	;'i'
  3837  00E662  6F                 	db	111	;'o'
  3838  00E663  6E                 	db	110	;'n'
  3839  00E664  20                 	db	32
  3840  00E665  49                 	db	73	;'I'
  3841  00E666  44                 	db	68	;'D'
  3842  00E667  20                 	db	32
  3843  00E668  61                 	db	97	;'a'
  3844  00E669  73                 	db	115	;'s'
  3845  00E66A  20                 	db	32
  3846  00E66B  70                 	db	112	;'p'
  3847  00E66C  72                 	db	114	;'r'
  3848  00E66D  65                 	db	101	;'e'
  3849  00E66E  2D                 	db	45
  3850  00E66F  70                 	db	112	;'p'
  3851  00E670  72                 	db	114	;'r'
  3852  00E671  6F                 	db	111	;'o'
  3853  00E672  67                 	db	103	;'g'
  3854  00E673  72                 	db	114	;'r'
  3855  00E674  61                 	db	97	;'a'
  3856  00E675  6D                 	db	109	;'m'
  3857  00E676  6D                 	db	109	;'m'
  3858  00E677  65                 	db	101	;'e'
  3859  00E678  64                 	db	100	;'d'
  3860  00E679  20                 	db	32
  3861  00E67A  69                 	db	105	;'i'
  3862  00E67B  6E                 	db	110	;'n'
  3863  00E67C  20                 	db	32
  3864  00E67D  66                 	db	102	;'f'
  3865  00E67E  6C                 	db	108	;'l'
  3866  00E67F  61                 	db	97	;'a'
  3867  00E680  73                 	db	115	;'s'
  3868  00E681  68                 	db	104	;'h'
  3869  00E682  20                 	db	32
  3870  00E683  6D                 	db	109	;'m'
  3871  00E684  65                 	db	101	;'e'
  3872  00E685  6D                 	db	109	;'m'
  3873  00E686  6F                 	db	111	;'o'
  3874  00E687  72                 	db	114	;'r'
  3875  00E688  79                 	db	121	;'y'
  3876  00E689  0A                 	db	10
  3877  00E68A  0D                 	db	13
  3878  00E68B  20                 	db	32
  3879  00E68C  20                 	db	32
  3880  00E68D  20                 	db	32
  3881  00E68E  55                 	db	85	;'U'
  3882  00E68F  73                 	db	115	;'s'
  3883  00E690  65                 	db	101	;'e'
  3884  00E691  72                 	db	114	;'r'
  3885  00E692  20                 	db	32
  3886  00E693  49                 	db	73	;'I'
  3887  00E694  44                 	db	68	;'D'
  3888  00E695  73                 	db	115	;'s'
  3889  00E696  3F                 	db	63	;'?'
  3890  00E697  3A                 	db	58	;':'
  3891  00E698  20                 	db	32
  3892  00E699  52                 	db	82	;'R'
  3893  00E69A  65                 	db	101	;'e'
  3894  00E69B  74                 	db	116	;'t'
  3895  00E69C  75                 	db	117	;'u'
  3896  00E69D  72                 	db	114	;'r'
  3897  00E69E  6E                 	db	110	;'n'
  3898  00E69F  73                 	db	115	;'s'
  3899  00E6A0  20                 	db	32
  3900  00E6A1  61                 	db	97	;'a'
  3901  00E6A2  20                 	db	32
  3902  00E6A3  6C                 	db	108	;'l'
  3903  00E6A4  69                 	db	105	;'i'
  3904  00E6A5  73                 	db	115	;'s'
  3905  00E6A6  74                 	db	116	;'t'
  3906  00E6A7  20                 	db	32
  3907  00E6A8  6F                 	db	111	;'o'
  3908  00E6A9  66                 	db	102	;'f'
  3909  00E6AA  20                 	db	32
  3910  00E6AB  75                 	db	117	;'u'
  3911  00E6AC  73                 	db	115	;'s'
  3912  00E6AD  65                 	db	101	;'e'
  3913  00E6AE  72                 	db	114	;'r'
  3914  00E6AF  20                 	db	32
  3915  00E6B0  49                 	db	73	;'I'
  3916  00E6B1  44                 	db	68	;'D'
  3917  00E6B2  73                 	db	115	;'s'
  3918  00E6B3  20                 	db	32
  3919  00E6B4  28                 	db	40
  3920  00E6B5  64                 	db	100	;'d'
  3921  00E6B6  69                 	db	105	;'i'
  3922  00E6B7  73                 	db	115	;'s'
  3923  00E6B8  70                 	db	112	;'p'
  3924  00E6B9  6C                 	db	108	;'l'
  3925  00E6BA  61                 	db	97	;'a'
  3926  00E6BB  79                 	db	121	;'y'
  3927  00E6BC  65                 	db	101	;'e'
  3928  00E6BD  64                 	db	100	;'d'
  3929  00E6BE  20                 	db	32
  3930  00E6BF  69                 	db	105	;'i'
  3931  00E6C0  6E                 	db	110	;'n'
  3932  00E6C1  20                 	db	32
  3933  00E6C2  68                 	db	104	;'h'
  3934  00E6C3  65                 	db	101	;'e'
  3935  00E6C4  78                 	db	120	;'x'
  3936  00E6C5  29                 	db	41
  3937  00E6C6  20                 	db	32
  3938  00E6C7  61                 	db	97	;'a'
  3939  00E6C8  73                 	db	115	;'s'
  3940  00E6C9  20                 	db	32
  3941  00E6CA  73                 	db	115	;'s'
  3942  00E6CB  74                 	db	116	;'t'
  3943  00E6CC  6F                 	db	111	;'o'
  3944  00E6CD  72                 	db	114	;'r'
  3945  00E6CE  65                 	db	101	;'e'
  3946  00E6CF  64                 	db	100	;'d'
  3947  00E6D0  20                 	db	32
  3948  00E6D1  69                 	db	105	;'i'
  3949  00E6D2  6E                 	db	110	;'n'
  3950  00E6D3  20                 	db	32
  3951  00E6D4  66                 	db	102	;'f'
  3952  00E6D5  6C                 	db	108	;'l'
  3953  00E6D6  61                 	db	97	;'a'
  3954  00E6D7  73                 	db	115	;'s'
  3955  00E6D8  68                 	db	104	;'h'
  3956  00E6D9  20                 	db	32
  3957  00E6DA  6D                 	db	109	;'m'
  3958  00E6DB  65                 	db	101	;'e'
  3959  00E6DC  6D                 	db	109	;'m'
  3960  00E6DD  6F                 	db	111	;'o'
  3961  00E6DE  72                 	db	114	;'r'
  3962  00E6DF  79                 	db	121	;'y'
  3963  00E6E0  0A                 	db	10
  3964  00E6E1  0D                 	db	13
  3965  00E6E2  20                 	db	32
  3966  00E6E3  20                 	db	32
  3967  00E6E4  20                 	db	32
  3968  00E6E5  41                 	db	65	;'A'
  3969  00E6E6  44                 	db	68	;'D'
  3970  00E6E7  43                 	db	67	;'C'
  3971  00E6E8  20                 	db	32
  3972  00E6E9  45                 	db	69	;'E'
  3973  00E6EA  72                 	db	114	;'r'
  3974  00E6EB  72                 	db	114	;'r'
  3975  00E6EC  6F                 	db	111	;'o'
  3976  00E6ED  72                 	db	114	;'r'
  3977  00E6EE  3F                 	db	63	;'?'
  3978  00E6EF  3A                 	db	58	;':'
  3979  00E6F0  20                 	db	32
  3980  00E6F1  52                 	db	82	;'R'
  3981  00E6F2  65                 	db	101	;'e'
  3982  00E6F3  74                 	db	116	;'t'
  3983  00E6F4  75                 	db	117	;'u'
  3984  00E6F5  72                 	db	114	;'r'
  3985  00E6F6  6E                 	db	110	;'n'
  3986  00E6F7  73                 	db	115	;'s'
  3987  00E6F8  20                 	db	32
  3988  00E6F9  74                 	db	116	;'t'
  3989  00E6FA  68                 	db	104	;'h'
  3990  00E6FB  65                 	db	101	;'e'
  3991  00E6FC  20                 	db	32
  3992  00E6FD  63                 	db	99	;'c'
  3993  00E6FE  61                 	db	97	;'a'
  3994  00E6FF  75                 	db	117	;'u'
  3995  00E700  73                 	db	115	;'s'
  3996  00E701  65                 	db	101	;'e'
  3997  00E702  20                 	db	32
  3998  00E703  6F                 	db	111	;'o'
  3999  00E704  66                 	db	102	;'f'
  4000  00E705  20                 	db	32
  4001  00E706  61                 	db	97	;'a'
  4002  00E707  6E                 	db	110	;'n'
  4003  00E708  20                 	db	32
  4004  00E709  41                 	db	65	;'A'
  4005  00E70A  44                 	db	68	;'D'
  4006  00E70B  43                 	db	67	;'C'
  4007  00E70C  20                 	db	32
  4008  00E70D  65                 	db	101	;'e'
  4009  00E70E  72                 	db	114	;'r'
  4010  00E70F  72                 	db	114	;'r'
  4011  00E710  6F                 	db	111	;'o'
  4012  00E711  72                 	db	114	;'r'
  4013  00E712  20                 	db	32
  4014  00E713  69                 	db	105	;'i'
  4015  00E714  66                 	db	102	;'f'
  4016  00E715  20                 	db	32
  4017  00E716  61                 	db	97	;'a'
  4018  00E717  6E                 	db	110	;'n'
  4019  00E718  20                 	db	32
  4020  00E719  65                 	db	101	;'e'
  4021  00E71A  72                 	db	114	;'r'
  4022  00E71B  72                 	db	114	;'r'
  4023  00E71C  6F                 	db	111	;'o'
  4024  00E71D  72                 	db	114	;'r'
  4025  00E71E  20                 	db	32
  4026  00E71F  6F                 	db	111	;'o'
  4027  00E720  63                 	db	99	;'c'
  4028  00E721  63                 	db	99	;'c'
  4029  00E722  75                 	db	117	;'u'
  4030  00E723  72                 	db	114	;'r'
  4031  00E724  72                 	db	114	;'r'
  4032  00E725  65                 	db	101	;'e'
  4033  00E726  64                 	db	100	;'d'
  4034  00E727  0A                 	db	10
  4035  00E728  0D                 	db	13
  4036  00E729  20                 	db	32
  4037  00E72A  20                 	db	32
  4038  00E72B  20                 	db	32
  4039  00E72C  43                 	db	67	;'C'
  4040  00E72D  6C                 	db	108	;'l'
  4041  00E72E  65                 	db	101	;'e'
  4042  00E72F  61                 	db	97	;'a'
  4043  00E730  72                 	db	114	;'r'
  4044  00E731  20                 	db	32
  4045  00E732  41                 	db	65	;'A'
  4046  00E733  44                 	db	68	;'D'
  4047  00E734  43                 	db	67	;'C'
  4048  00E735  20                 	db	32
  4049  00E736  45                 	db	69	;'E'
  4050  00E737  72                 	db	114	;'r'
  4051  00E738  72                 	db	114	;'r'
  4052  00E739  6F                 	db	111	;'o'
  4053  00E73A  72                 	db	114	;'r'
  4054  00E73B  3A                 	db	58	;':'
  4055  00E73C  20                 	db	32
  4056  00E73D  43                 	db	67	;'C'
  4057  00E73E  6C                 	db	108	;'l'
  4058  00E73F  65                 	db	101	;'e'
  4059  00E740  61                 	db	97	;'a'
  4060  00E741  72                 	db	114	;'r'
  4061  00E742  73                 	db	115	;'s'
  4062  00E743  20                 	db	32
  4063  00E744  74                 	db	116	;'t'
  4064  00E745  68                 	db	104	;'h'
  4065  00E746  65                 	db	101	;'e'
  4066  00E747  20                 	db	32
  4067  00E748  41                 	db	65	;'A'
  4068  00E749  44                 	db	68	;'D'
  4069  00E74A  43                 	db	67	;'C'
  4070  00E74B  20                 	db	32
  4071  00E74C  65                 	db	101	;'e'
  4072  00E74D  72                 	db	114	;'r'
  4073  00E74E  72                 	db	114	;'r'
  4074  00E74F  6F                 	db	111	;'o'
  4075  00E750  72                 	db	114	;'r'
  4076  00E751  20                 	db	32
  4077  00E752  61                 	db	97	;'a'
  4078  00E753  6E                 	db	110	;'n'
  4079  00E754  64                 	db	100	;'d'
  4080  00E755  20                 	db	32
  4081  00E756  72                 	db	114	;'r'
  4082  00E757  65                 	db	101	;'e'
  4083  00E758  73                 	db	115	;'s'
  4084  00E759  75                 	db	117	;'u'
  4085  00E75A  6D                 	db	109	;'m'
  4086  00E75B  65                 	db	101	;'e'
  4087  00E75C  73                 	db	115	;'s'
  4088  00E75D  20                 	db	32
  4089  00E75E  41                 	db	65	;'A'
  4090  00E75F  44                 	db	68	;'D'
  4091  00E760  43                 	db	67	;'C'
  4092  00E761  20                 	db	32
  4093  00E762  63                 	db	99	;'c'
  4094  00E763  6F                 	db	111	;'o'
  4095  00E764  6E                 	db	110	;'n'
  4096  00E765  76                 	db	118	;'v'
  4097  00E766  65                 	db	101	;'e'
  4098  00E767  72                 	db	114	;'r'
  4099  00E768  73                 	db	115	;'s'
  4100  00E769  69                 	db	105	;'i'
  4101  00E76A  6F                 	db	111	;'o'
  4102  00E76B  6E                 	db	110	;'n'
  4103  00E76C  73                 	db	115	;'s'
  4104  00E76D  0A                 	db	10
  4105  00E76E  0D                 	db	13
  4106  00E76F  20                 	db	32
  4107  00E770  20                 	db	32
  4108  00E771  20                 	db	32
  4109  00E772  56                 	db	86	;'V'
  4110  00E773  43                 	db	67	;'C'
  4111  00E774  43                 	db	67	;'C'
  4112  00E775  20                 	db	32
  4113  00E776  4F                 	db	79	;'O'
  4114  00E777  76                 	db	118	;'v'
  4115  00E778  65                 	db	101	;'e'
  4116  00E779  72                 	db	114	;'r'
  4117  00E77A  76                 	db	118	;'v'
  4118  00E77B  6F                 	db	111	;'o'
  4119  00E77C  6C                 	db	108	;'l'
  4120  00E77D  74                 	db	116	;'t'
  4121  00E77E  61                 	db	97	;'a'
  4122  00E77F  67                 	db	103	;'g'
  4123  00E780  65                 	db	101	;'e'
  4124  00E781  3F                 	db	63	;'?'
  4125  00E782  3A                 	db	58	;':'
  4126  00E783  20                 	db	32
  4127  00E784  53                 	db	83	;'S'
  4128  00E785  74                 	db	116	;'t'
  4129  00E786  61                 	db	97	;'a'
  4130  00E787  74                 	db	116	;'t'
  4131  00E788  65                 	db	101	;'e'
  4132  00E789  73                 	db	115	;'s'
  4133  00E78A  20                 	db	32
  4134  00E78B  69                 	db	105	;'i'
  4135  00E78C  66                 	db	102	;'f'
  4136  00E78D  20                 	db	32
  4137  00E78E  61                 	db	97	;'a'
  4138  00E78F  20                 	db	32
  4139  00E790  56                 	db	86	;'V'
  4140  00E791  43                 	db	67	;'C'
  4141  00E792  43                 	db	67	;'C'
  4142  00E793  20                 	db	32
  4143  00E794  6F                 	db	111	;'o'
  4144  00E795  76                 	db	118	;'v'
  4145  00E796  65                 	db	101	;'e'
  4146  00E797  72                 	db	114	;'r'
  4147  00E798  76                 	db	118	;'v'
  4148  00E799  6F                 	db	111	;'o'
  4149  00E79A  6C                 	db	108	;'l'
  4150  00E79B  74                 	db	116	;'t'
  4151  00E79C  61                 	db	97	;'a'
  4152  00E79D  67                 	db	103	;'g'
  4153  00E79E  65                 	db	101	;'e'
  4154  00E79F  20                 	db	32
  4155  00E7A0  63                 	db	99	;'c'
  4156  00E7A1  6F                 	db	111	;'o'
  4157  00E7A2  6E                 	db	110	;'n'
  4158  00E7A3  64                 	db	100	;'d'
  4159  00E7A4  69                 	db	105	;'i'
  4160  00E7A5  74                 	db	116	;'t'
  4161  00E7A6  69                 	db	105	;'i'
  4162  00E7A7  6F                 	db	111	;'o'
  4163  00E7A8  6E                 	db	110	;'n'
  4164  00E7A9  20                 	db	32
  4165  00E7AA  68                 	db	104	;'h'
  4166  00E7AB  61                 	db	97	;'a'
  4167  00E7AC  73                 	db	115	;'s'
  4168  00E7AD  20                 	db	32
  4169  00E7AE  6F                 	db	111	;'o'
  4170  00E7AF  63                 	db	99	;'c'
  4171  00E7B0  63                 	db	99	;'c'
  4172  00E7B1  75                 	db	117	;'u'
  4173  00E7B2  72                 	db	114	;'r'
  4174  00E7B3  72                 	db	114	;'r'
  4175  00E7B4  65                 	db	101	;'e'
  4176  00E7B5  64                 	db	100	;'d'
  4177  00E7B6  20                 	db	32
  4178  00E7B7  6F                 	db	111	;'o'
  4179  00E7B8  72                 	db	114	;'r'
  4180  00E7B9  20                 	db	32
  4181  00E7BA  6E                 	db	110	;'n'
  4182  00E7BB  6F                 	db	111	;'o'
  4183  00E7BC  74                 	db	116	;'t'
  4184  00E7BD  0A                 	db	10
  4185  00E7BE  0D                 	db	13
  4186  00E7BF  20                 	db	32
  4187  00E7C0  20                 	db	32
  4188  00E7C1  20                 	db	32
  4189  00E7C2  43                 	db	67	;'C'
  4190  00E7C3  6C                 	db	108	;'l'
  4191  00E7C4  65                 	db	101	;'e'
  4192  00E7C5  61                 	db	97	;'a'
  4193  00E7C6  72                 	db	114	;'r'
  4194  00E7C7  20                 	db	32
  4195  00E7C8  4D                 	db	77	;'M'
  4196  00E7C9  61                 	db	97	;'a'
  4197  00E7CA  78                 	db	120	;'x'
  4198  00E7CB  20                 	db	32
  4199  00E7CC  56                 	db	86	;'V'
  4200  00E7CD  61                 	db	97	;'a'
  4201  00E7CE  6C                 	db	108	;'l'
  4202  00E7CF  75                 	db	117	;'u'
  4203  00E7D0  65                 	db	101	;'e'
  4204  00E7D1  73                 	db	115	;'s'
  4205  00E7D2  3A                 	db	58	;':'
  4206  00E7D3  20                 	db	32
  4207  00E7D4  45                 	db	69	;'E'
  4208  00E7D5  72                 	db	114	;'r'
  4209  00E7D6  61                 	db	97	;'a'
  4210  00E7D7  73                 	db	115	;'s'
  4211  00E7D8  65                 	db	101	;'e'
  4212  00E7D9  73                 	db	115	;'s'
  4213  00E7DA  20                 	db	32
  4214  00E7DB  6D                 	db	109	;'m'
  4215  00E7DC  61                 	db	97	;'a'
  4216  00E7DD  78                 	db	120	;'x'
  4217  00E7DE  69                 	db	105	;'i'
  4218  00E7DF  6D                 	db	109	;'m'
  4219  00E7E0  75                 	db	117	;'u'
  4220  00E7E1  6D                 	db	109	;'m'
  4221  00E7E2  20                 	db	32
  4222  00E7E3  72                 	db	114	;'r'
  4223  00E7E4  65                 	db	101	;'e'
  4224  00E7E5  63                 	db	99	;'c'
  4225  00E7E6  6F                 	db	111	;'o'
  4226  00E7E7  72                 	db	114	;'r'
  4227  00E7E8  64                 	db	100	;'d'
  4228  00E7E9  65                 	db	101	;'e'
  4229  00E7EA  64                 	db	100	;'d'
  4230  00E7EB  20                 	db	32
  4231  00E7EC  76                 	db	118	;'v'
  4232  00E7ED  61                 	db	97	;'a'
  4233  00E7EE  6C                 	db	108	;'l'
  4234  00E7EF  75                 	db	117	;'u'
  4235  00E7F0  65                 	db	101	;'e'
  4236  00E7F1  73                 	db	115	;'s'
  4237  00E7F2  20                 	db	32
  4238  00E7F3  66                 	db	102	;'f'
  4239  00E7F4  72                 	db	114	;'r'
  4240  00E7F5  6F                 	db	111	;'o'
  4241  00E7F6  6D                 	db	109	;'m'
  4242  00E7F7  20                 	db	32
  4243  00E7F8  45                 	db	69	;'E'
  4244  00E7F9  45                 	db	69	;'E'
  4245  00E7FA  50                 	db	80	;'P'
  4246  00E7FB  52                 	db	82	;'R'
  4247  00E7FC  4F                 	db	79	;'O'
  4248  00E7FD  4D                 	db	77	;'M'
  4249  00E7FE  0A                 	db	10
  4250  00E7FF  0D                 	db	13
  4251  00E800  20                 	db	32
  4252  00E801  20                 	db	32
  4253  00E802  20                 	db	32
  4254  00E803  48                 	db	72	;'H'
  4255  00E804  65                 	db	101	;'e'
  4256  00E805  6C                 	db	108	;'l'
  4257  00E806  70                 	db	112	;'p'
  4258  00E807  3A                 	db	58	;':'
  4259  00E808  20                 	db	32
  4260  00E809  54                 	db	84	;'T'
  4261  00E80A  68                 	db	104	;'h'
  4262  00E80B  69                 	db	105	;'i'
  4263  00E80C  73                 	db	115	;'s'
  4264  00E80D  20                 	db	32
  4265  00E80E  6D                 	db	109	;'m'
  4266  00E80F  65                 	db	101	;'e'
  4267  00E810  73                 	db	115	;'s'
  4268  00E811  73                 	db	115	;'s'
  4269  00E812  61                 	db	97	;'a'
  4270  00E813  67                 	db	103	;'g'
  4271  00E814  65                 	db	101	;'e'
  4272  00E815  2C                 	db	44
  4273  00E816  20                 	db	32
  4274  00E817  6C                 	db	108	;'l'
  4275  00E818  69                 	db	105	;'i'
  4276  00E819  73                 	db	115	;'s'
  4277  00E81A  74                 	db	116	;'t'
  4278  00E81B  73                 	db	115	;'s'
  4279  00E81C  20                 	db	32
  4280  00E81D  73                 	db	115	;'s'
  4281  00E81E  75                 	db	117	;'u'
  4282  00E81F  70                 	db	112	;'p'
  4283  00E820  70                 	db	112	;'p'
  4284  00E821  6F                 	db	111	;'o'
  4285  00E822  72                 	db	114	;'r'
  4286  00E823  74                 	db	116	;'t'
  4287  00E824  65                 	db	101	;'e'
  4288  00E825  64                 	db	100	;'d'
  4289  00E826  20                 	db	32
  4290  00E827  63                 	db	99	;'c'
  4291  00E828  6F                 	db	111	;'o'
  4292  00E829  6D                 	db	109	;'m'
  4293  00E82A  6D                 	db	109	;'m'
  4294  00E82B  61                 	db	97	;'a'
  4295  00E82C  6E                 	db	110	;'n'
  4296  00E82D  64                 	db	100	;'d'
  4297  00E82E  73                 	db	115	;'s'
  4298  00E82F  0A                 	db	10
  4299  00E830  0D                 	db	13
  4300  00E831  0A                 	db	10
  4301  00E832  0D                 	db	13
  4302  00E833  00                 	db	0
  4303  00E834                     STR_137:
  4304  00E834  4C                 	db	76	;'L'
  4305  00E835  69                 	db	105	;'i'
  4306  00E836  73                 	db	115	;'s'
  4307  00E837  74                 	db	116	;'t'
  4308  00E838  20                 	db	32
  4309  00E839  6F                 	db	111	;'o'
  4310  00E83A  66                 	db	102	;'f'
  4311  00E83B  20                 	db	32
  4312  00E83C  73                 	db	115	;'s'
  4313  00E83D  75                 	db	117	;'u'
  4314  00E83E  70                 	db	112	;'p'
  4315  00E83F  70                 	db	112	;'p'
  4316  00E840  6F                 	db	111	;'o'
  4317  00E841  72                 	db	114	;'r'
  4318  00E842  74                 	db	116	;'t'
  4319  00E843  65                 	db	101	;'e'
  4320  00E844  64                 	db	100	;'d'
  4321  00E845  20                 	db	32
  4322  00E846  44                 	db	68	;'D'
  4323  00E847  65                 	db	101	;'e'
  4324  00E848  76                 	db	118	;'v'
  4325  00E849  69                 	db	105	;'i'
  4326  00E84A  63                 	db	99	;'c'
  4327  00E84B  65                 	db	101	;'e'
  4328  00E84C  20                 	db	32
  4329  00E84D  4D                 	db	77	;'M'
  4330  00E84E  65                 	db	101	;'e'
  4331  00E84F  61                 	db	97	;'a'
  4332  00E850  73                 	db	115	;'s'
  4333  00E851  75                 	db	117	;'u'
  4334  00E852  72                 	db	114	;'r'
  4335  00E853  65                 	db	101	;'e'
  4336  00E854  6D                 	db	109	;'m'
  4337  00E855  65                 	db	101	;'e'
  4338  00E856  6E                 	db	110	;'n'
  4339  00E857  74                 	db	116	;'t'
  4340  00E858  20                 	db	32
  4341  00E859  43                 	db	67	;'C'
  4342  00E85A  6F                 	db	111	;'o'
  4343  00E85B  6D                 	db	109	;'m'
  4344  00E85C  6D                 	db	109	;'m'
  4345  00E85D  61                 	db	97	;'a'
  4346  00E85E  6E                 	db	110	;'n'
  4347  00E85F  64                 	db	100	;'d'
  4348  00E860  73                 	db	115	;'s'
  4349  00E861  3A                 	db	58	;':'
  4350  00E862  0A                 	db	10
  4351  00E863  0D                 	db	13
  4352  00E864  20                 	db	32
  4353  00E865  20                 	db	32
  4354  00E866  20                 	db	32
  4355  00E867  4D                 	db	77	;'M'
  4356  00E868  65                 	db	101	;'e'
  4357  00E869  61                 	db	97	;'a'
  4358  00E86A  73                 	db	115	;'s'
  4359  00E86B  75                 	db	117	;'u'
  4360  00E86C  72                 	db	114	;'r'
  4361  00E86D  65                 	db	101	;'e'
  4362  00E86E  20                 	db	32
  4363  00E86F  50                 	db	80	;'P'
  4364  00E870  4F                 	db	79	;'O'
  4365  00E871  53                 	db	83	;'S'
  4366  00E872  33                 	db	51	;'3'
  4367  00E873  50                 	db	80	;'P'
  4368  00E874  33                 	db	51	;'3'
  4369  00E875  3F                 	db	63	;'?'
  4370  00E876  3A                 	db	58	;':'
  4371  00E877  20                 	db	32
  4372  00E878  52                 	db	82	;'R'
  4373  00E879  65                 	db	101	;'e'
  4374  00E87A  74                 	db	116	;'t'
  4375  00E87B  75                 	db	117	;'u'
  4376  00E87C  72                 	db	114	;'r'
  4377  00E87D  6E                 	db	110	;'n'
  4378  00E87E  73                 	db	115	;'s'
  4379  00E87F  20                 	db	32
  4380  00E880  2B                 	db	43
  4381  00E881  33                 	db	51	;'3'
  4382  00E882  2E                 	db	46
  4383  00E883  33                 	db	51	;'3'
  4384  00E884  56                 	db	86	;'V'
  4385  00E885  20                 	db	32
  4386  00E886  41                 	db	65	;'A'
  4387  00E887  44                 	db	68	;'D'
  4388  00E888  43                 	db	67	;'C'
  4389  00E889  20                 	db	32
  4390  00E88A  43                 	db	67	;'C'
  4391  00E88B  6F                 	db	111	;'o'
  4392  00E88C  6E                 	db	110	;'n'
  4393  00E88D  76                 	db	118	;'v'
  4394  00E88E  65                 	db	101	;'e'
  4395  00E88F  72                 	db	114	;'r'
  4396  00E890  73                 	db	115	;'s'
  4397  00E891  69                 	db	105	;'i'
  4398  00E892  6F                 	db	111	;'o'
  4399  00E893  6E                 	db	110	;'n'
  4400  00E894  20                 	db	32
  4401  00E895  69                 	db	105	;'i'
  4402  00E896  6E                 	db	110	;'n'
  4403  00E897  20                 	db	32
  4404  00E898  76                 	db	118	;'v'
  4405  00E899  6F                 	db	111	;'o'
  4406  00E89A  6C                 	db	108	;'l'
  4407  00E89B  74                 	db	116	;'t'
  4408  00E89C  73                 	db	115	;'s'
  4409  00E89D  0A                 	db	10
  4410  00E89E  0D                 	db	13
  4411  00E89F  20                 	db	32
  4412  00E8A0  20                 	db	32
  4413  00E8A1  20                 	db	32
  4414  00E8A2  4D                 	db	77	;'M'
  4415  00E8A3  65                 	db	101	;'e'
  4416  00E8A4  61                 	db	97	;'a'
  4417  00E8A5  73                 	db	115	;'s'
  4418  00E8A6  75                 	db	117	;'u'
  4419  00E8A7  72                 	db	114	;'r'
  4420  00E8A8  65                 	db	101	;'e'
  4421  00E8A9  20                 	db	32
  4422  00E8AA  50                 	db	80	;'P'
  4423  00E8AB  4F                 	db	79	;'O'
  4424  00E8AC  53                 	db	83	;'S'
  4425  00E8AD  31                 	db	49	;'1'
  4426  00E8AE  32                 	db	50	;'2'
  4427  00E8AF  3F                 	db	63	;'?'
  4428  00E8B0  3A                 	db	58	;':'
  4429  00E8B1  20                 	db	32
  4430  00E8B2  52                 	db	82	;'R'
  4431  00E8B3  65                 	db	101	;'e'
  4432  00E8B4  74                 	db	116	;'t'
  4433  00E8B5  75                 	db	117	;'u'
  4434  00E8B6  72                 	db	114	;'r'
  4435  00E8B7  6E                 	db	110	;'n'
  4436  00E8B8  73                 	db	115	;'s'
  4437  00E8B9  20                 	db	32
  4438  00E8BA  2B                 	db	43
  4439  00E8BB  31                 	db	49	;'1'
  4440  00E8BC  32                 	db	50	;'2'
  4441  00E8BD  56                 	db	86	;'V'
  4442  00E8BE  20                 	db	32
  4443  00E8BF  41                 	db	65	;'A'
  4444  00E8C0  44                 	db	68	;'D'
  4445  00E8C1  43                 	db	67	;'C'
  4446  00E8C2  20                 	db	32
  4447  00E8C3  43                 	db	67	;'C'
  4448  00E8C4  6F                 	db	111	;'o'
  4449  00E8C5  6E                 	db	110	;'n'
  4450  00E8C6  76                 	db	118	;'v'
  4451  00E8C7  65                 	db	101	;'e'
  4452  00E8C8  72                 	db	114	;'r'
  4453  00E8C9  73                 	db	115	;'s'
  4454  00E8CA  69                 	db	105	;'i'
  4455  00E8CB  6F                 	db	111	;'o'
  4456  00E8CC  6E                 	db	110	;'n'
  4457  00E8CD  20                 	db	32
  4458  00E8CE  69                 	db	105	;'i'
  4459  00E8CF  6E                 	db	110	;'n'
  4460  00E8D0  20                 	db	32
  4461  00E8D1  76                 	db	118	;'v'
  4462  00E8D2  6F                 	db	111	;'o'
  4463  00E8D3  6C                 	db	108	;'l'
  4464  00E8D4  74                 	db	116	;'t'
  4465  00E8D5  73                 	db	115	;'s'
  4466  00E8D6  0A                 	db	10
  4467  00E8D7  0D                 	db	13
  4468  00E8D8  20                 	db	32
  4469  00E8D9  20                 	db	32
  4470  00E8DA  20                 	db	32
  4471  00E8DB  4D                 	db	77	;'M'
  4472  00E8DC  65                 	db	101	;'e'
  4473  00E8DD  61                 	db	97	;'a'
  4474  00E8DE  73                 	db	115	;'s'
  4475  00E8DF  75                 	db	117	;'u'
  4476  00E8E0  72                 	db	114	;'r'
  4477  00E8E1  65                 	db	101	;'e'
  4478  00E8E2  20                 	db	32
  4479  00E8E3  44                 	db	68	;'D'
  4480  00E8E4  69                 	db	105	;'i'
  4481  00E8E5  65                 	db	101	;'e'
  4482  00E8E6  20                 	db	32
  4483  00E8E7  54                 	db	84	;'T'
  4484  00E8E8  65                 	db	101	;'e'
  4485  00E8E9  6D                 	db	109	;'m'
  4486  00E8EA  70                 	db	112	;'p'
  4487  00E8EB  3F                 	db	63	;'?'
  4488  00E8EC  3A                 	db	58	;':'
  4489  00E8ED  20                 	db	32
  4490  00E8EE  52                 	db	82	;'R'
  4491  00E8EF  65                 	db	101	;'e'
  4492  00E8F0  74                 	db	116	;'t'
  4493  00E8F1  75                 	db	117	;'u'
  4494  00E8F2  72                 	db	114	;'r'
  4495  00E8F3  6E                 	db	110	;'n'
  4496  00E8F4  73                 	db	115	;'s'
  4497  00E8F5  20                 	db	32
  4498  00E8F6  74                 	db	116	;'t'
  4499  00E8F7  68                 	db	104	;'h'
  4500  00E8F8  65                 	db	101	;'e'
  4501  00E8F9  20                 	db	32
  4502  00E8FA  6D                 	db	109	;'m'
  4503  00E8FB  69                 	db	105	;'i'
  4504  00E8FC  63                 	db	99	;'c'
  4505  00E8FD  72                 	db	114	;'r'
  4506  00E8FE  6F                 	db	111	;'o'
  4507  00E8FF  63                 	db	99	;'c'
  4508  00E900  6F                 	db	111	;'o'
  4509  00E901  6E                 	db	110	;'n'
  4510  00E902  74                 	db	116	;'t'
  4511  00E903  72                 	db	114	;'r'
  4512  00E904  6F                 	db	111	;'o'
  4513  00E905  6C                 	db	108	;'l'
  4514  00E906  6C                 	db	108	;'l'
  4515  00E907  65                 	db	101	;'e'
  4516  00E908  72                 	db	114	;'r'
  4517  00E909  20                 	db	32
  4518  00E90A  64                 	db	100	;'d'
  4519  00E90B  69                 	db	105	;'i'
  4520  00E90C  65                 	db	101	;'e'
  4521  00E90D  20                 	db	32
  4522  00E90E  74                 	db	116	;'t'
  4523  00E90F  65                 	db	101	;'e'
  4524  00E910  6D                 	db	109	;'m'
  4525  00E911  70                 	db	112	;'p'
  4526  00E912  65                 	db	101	;'e'
  4527  00E913  72                 	db	114	;'r'
  4528  00E914  61                 	db	97	;'a'
  4529  00E915  74                 	db	116	;'t'
  4530  00E916  75                 	db	117	;'u'
  4531  00E917  72                 	db	114	;'r'
  4532  00E918  65                 	db	101	;'e'
  4533  00E919  20                 	db	32
  4534  00E91A  69                 	db	105	;'i'
  4535  00E91B  6E                 	db	110	;'n'
  4536  00E91C  20                 	db	32
  4537  00E91D  64                 	db	100	;'d'
  4538  00E91E  65                 	db	101	;'e'
  4539  00E91F  67                 	db	103	;'g'
  4540  00E920  72                 	db	114	;'r'
  4541  00E921  65                 	db	101	;'e'
  4542  00E922  65                 	db	101	;'e'
  4543  00E923  73                 	db	115	;'s'
  4544  00E924  20                 	db	32
  4545  00E925  43                 	db	67	;'C'
  4546  00E926  0A                 	db	10
  4547  00E927  0D                 	db	13
  4548  00E928  20                 	db	32
  4549  00E929  20                 	db	32
  4550  00E92A  20                 	db	32
  4551  00E92B  4D                 	db	77	;'M'
  4552  00E92C  65                 	db	101	;'e'
  4553  00E92D  61                 	db	97	;'a'
  4554  00E92E  73                 	db	115	;'s'
  4555  00E92F  75                 	db	117	;'u'
  4556  00E930  72                 	db	114	;'r'
  4557  00E931  65                 	db	101	;'e'
  4558  00E932  20                 	db	32
  4559  00E933  46                 	db	70	;'F'
  4560  00E934  56                 	db	86	;'V'
  4561  00E935  52                 	db	82	;'R'
  4562  00E936  3F                 	db	63	;'?'
  4563  00E937  3A                 	db	58	;':'
  4564  00E938  20                 	db	32
  4565  00E939  52                 	db	82	;'R'
  4566  00E93A  65                 	db	101	;'e'
  4567  00E93B  74                 	db	116	;'t'
  4568  00E93C  75                 	db	117	;'u'
  4569  00E93D  72                 	db	114	;'r'
  4570  00E93E  6E                 	db	110	;'n'
  4571  00E93F  73                 	db	115	;'s'
  4572  00E940  20                 	db	32
  4573  00E941  74                 	db	116	;'t'
  4574  00E942  68                 	db	104	;'h'
  4575  00E943  65                 	db	101	;'e'
  4576  00E944  20                 	db	32
  4577  00E945  69                 	db	105	;'i'
  4578  00E946  6E                 	db	110	;'n'
  4579  00E947  74                 	db	116	;'t'
  4580  00E948  65                 	db	101	;'e'
  4581  00E949  72                 	db	114	;'r'
  4582  00E94A  6E                 	db	110	;'n'
  4583  00E94B  61                 	db	97	;'a'
  4584  00E94C  6C                 	db	108	;'l'
  4585  00E94D  20                 	db	32
  4586  00E94E  66                 	db	102	;'f'
  4587  00E94F  69                 	db	105	;'i'
  4588  00E950  78                 	db	120	;'x'
  4589  00E951  65                 	db	101	;'e'
  4590  00E952  64                 	db	100	;'d'
  4591  00E953  20                 	db	32
  4592  00E954  76                 	db	118	;'v'
  4593  00E955  6F                 	db	111	;'o'
  4594  00E956  6C                 	db	108	;'l'
  4595  00E957  74                 	db	116	;'t'
  4596  00E958  61                 	db	97	;'a'
  4597  00E959  67                 	db	103	;'g'
  4598  00E95A  65                 	db	101	;'e'
  4599  00E95B  20                 	db	32
  4600  00E95C  72                 	db	114	;'r'
  4601  00E95D  65                 	db	101	;'e'
  4602  00E95E  66                 	db	102	;'f'
  4603  00E95F  65                 	db	101	;'e'
  4604  00E960  72                 	db	114	;'r'
  4605  00E961  65                 	db	101	;'e'
  4606  00E962  6E                 	db	110	;'n'
  4607  00E963  63                 	db	99	;'c'
  4608  00E964  65                 	db	101	;'e'
  4609  00E965  20                 	db	32
  4610  00E966  62                 	db	98	;'b'
  4611  00E967  75                 	db	117	;'u'
  4612  00E968  66                 	db	102	;'f'
  4613  00E969  66                 	db	102	;'f'
  4614  00E96A  65                 	db	101	;'e'
  4615  00E96B  72                 	db	114	;'r'
  4616  00E96C  20                 	db	32
  4617  00E96D  31                 	db	49	;'1'
  4618  00E96E  20                 	db	32
  4619  00E96F  6F                 	db	111	;'o'
  4620  00E970  75                 	db	117	;'u'
  4621  00E971  74                 	db	116	;'t'
  4622  00E972  70                 	db	112	;'p'
  4623  00E973  75                 	db	117	;'u'
  4624  00E974  74                 	db	116	;'t'
  4625  00E975  20                 	db	32
  4626  00E976  69                 	db	105	;'i'
  4627  00E977  6E                 	db	110	;'n'
  4628  00E978  20                 	db	32
  4629  00E979  76                 	db	118	;'v'
  4630  00E97A  6F                 	db	111	;'o'
  4631  00E97B  6C                 	db	108	;'l'
  4632  00E97C  74                 	db	116	;'t'
  4633  00E97D  73                 	db	115	;'s'
  4634  00E97E  0A                 	db	10
  4635  00E97F  0D                 	db	13
  4636  00E980  20                 	db	32
  4637  00E981  20                 	db	32
  4638  00E982  20                 	db	32
  4639  00E983  4D                 	db	77	;'M'
  4640  00E984  65                 	db	101	;'e'
  4641  00E985  61                 	db	97	;'a'
  4642  00E986  73                 	db	115	;'s'
  4643  00E987  75                 	db	117	;'u'
  4644  00E988  72                 	db	114	;'r'
  4645  00E989  65                 	db	101	;'e'
  4646  00E98A  20                 	db	32
  4647  00E98B  41                 	db	65	;'A'
  4648  00E98C  56                 	db	86	;'V'
  4649  00E98D  53                 	db	83	;'S'
  4650  00E98E  53                 	db	83	;'S'
  4651  00E98F  3F                 	db	63	;'?'
  4652  00E990  3A                 	db	58	;':'
  4653  00E991  20                 	db	32
  4654  00E992  52                 	db	82	;'R'
  4655  00E993  65                 	db	101	;'e'
  4656  00E994  74                 	db	116	;'t'
  4657  00E995  75                 	db	117	;'u'
  4658  00E996  72                 	db	114	;'r'
  4659  00E997  6E                 	db	110	;'n'
  4660  00E998  73                 	db	115	;'s'
  4661  00E999  20                 	db	32
  4662  00E99A  74                 	db	116	;'t'
  4663  00E99B  68                 	db	104	;'h'
  4664  00E99C  65                 	db	101	;'e'
  4665  00E99D  20                 	db	32
  4666  00E99E  6D                 	db	109	;'m'
  4667  00E99F  65                 	db	101	;'e'
  4668  00E9A0  61                 	db	97	;'a'
  4669  00E9A1  73                 	db	115	;'s'
  4670  00E9A2  75                 	db	117	;'u'
  4671  00E9A3  72                 	db	114	;'r'
  4672  00E9A4  65                 	db	101	;'e'
  4673  00E9A5  64                 	db	100	;'d'
  4674  00E9A6  20                 	db	32
  4675  00E9A7  76                 	db	118	;'v'
  4676  00E9A8  61                 	db	97	;'a'
  4677  00E9A9  6C                 	db	108	;'l'
  4678  00E9AA  75                 	db	117	;'u'
  4679  00E9AB  65                 	db	101	;'e'
  4680  00E9AC  20                 	db	32
  4681  00E9AD  6F                 	db	111	;'o'
  4682  00E9AE  66                 	db	102	;'f'
  4683  00E9AF  20                 	db	32
  4684  00E9B0  41                 	db	65	;'A'
  4685  00E9B1  6E                 	db	110	;'n'
  4686  00E9B2  61                 	db	97	;'a'
  4687  00E9B3  6C                 	db	108	;'l'
  4688  00E9B4  6F                 	db	111	;'o'
  4689  00E9B5  67                 	db	103	;'g'
  4690  00E9B6  20                 	db	32
  4691  00E9B7  56                 	db	86	;'V'
  4692  00E9B8  53                 	db	83	;'S'
  4693  00E9B9  53                 	db	83	;'S'
  4694  00E9BA  20                 	db	32
  4695  00E9BB  69                 	db	105	;'i'
  4696  00E9BC  6E                 	db	110	;'n'
  4697  00E9BD  20                 	db	32
  4698  00E9BE  76                 	db	118	;'v'
  4699  00E9BF  6F                 	db	111	;'o'
  4700  00E9C0  6C                 	db	108	;'l'
  4701  00E9C1  74                 	db	116	;'t'
  4702  00E9C2  73                 	db	115	;'s'
  4703  00E9C3  0A                 	db	10
  4704  00E9C4  0D                 	db	13
  4705  00E9C5  20                 	db	32
  4706  00E9C6  20                 	db	32
  4707  00E9C7  20                 	db	32
  4708  00E9C8  4D                 	db	77	;'M'
  4709  00E9C9  61                 	db	97	;'a'
  4710  00E9CA  78                 	db	120	;'x'
  4711  00E9CB  20                 	db	32
  4712  00E9CC  50                 	db	80	;'P'
  4713  00E9CD  4F                 	db	79	;'O'
  4714  00E9CE  53                 	db	83	;'S'
  4715  00E9CF  33                 	db	51	;'3'
  4716  00E9D0  50                 	db	80	;'P'
  4717  00E9D1  33                 	db	51	;'3'
  4718  00E9D2  20                 	db	32
  4719  00E9D3  56                 	db	86	;'V'
  4720  00E9D4  6F                 	db	111	;'o'
  4721  00E9D5  6C                 	db	108	;'l'
  4722  00E9D6  74                 	db	116	;'t'
  4723  00E9D7  61                 	db	97	;'a'
  4724  00E9D8  67                 	db	103	;'g'
  4725  00E9D9  65                 	db	101	;'e'
  4726  00E9DA  3F                 	db	63	;'?'
  4727  00E9DB  3A                 	db	58	;':'
  4728  00E9DC  20                 	db	32
  4729  00E9DD  52                 	db	82	;'R'
  4730  00E9DE  65                 	db	101	;'e'
  4731  00E9DF  74                 	db	116	;'t'
  4732  00E9E0  75                 	db	117	;'u'
  4733  00E9E1  72                 	db	114	;'r'
  4734  00E9E2  6E                 	db	110	;'n'
  4735  00E9E3  73                 	db	115	;'s'
  4736  00E9E4  20                 	db	32
  4737  00E9E5  74                 	db	116	;'t'
  4738  00E9E6  68                 	db	104	;'h'
  4739  00E9E7  65                 	db	101	;'e'
  4740  00E9E8  20                 	db	32
  4741  00E9E9  6D                 	db	109	;'m'
  4742  00E9EA  61                 	db	97	;'a'
  4743  00E9EB  78                 	db	120	;'x'
  4744  00E9EC  69                 	db	105	;'i'
  4745  00E9ED  6D                 	db	109	;'m'
  4746  00E9EE  75                 	db	117	;'u'
  4747  00E9EF  6D                 	db	109	;'m'
  4748  00E9F0  20                 	db	32
  4749  00E9F1  72                 	db	114	;'r'
  4750  00E9F2  65                 	db	101	;'e'
  4751  00E9F3  63                 	db	99	;'c'
  4752  00E9F4  6F                 	db	111	;'o'
  4753  00E9F5  72                 	db	114	;'r'
  4754  00E9F6  64                 	db	100	;'d'
  4755  00E9F7  65                 	db	101	;'e'
  4756  00E9F8  64                 	db	100	;'d'
  4757  00E9F9  20                 	db	32
  4758  00E9FA  2B                 	db	43
  4759  00E9FB  33                 	db	51	;'3'
  4760  00E9FC  2E                 	db	46
  4761  00E9FD  33                 	db	51	;'3'
  4762  00E9FE  56                 	db	86	;'V'
  4763  00E9FF  20                 	db	32
  4764  00EA00  52                 	db	82	;'R'
  4765  00EA01  61                 	db	97	;'a'
  4766  00EA02  69                 	db	105	;'i'
  4767  00EA03  6C                 	db	108	;'l'
  4768  00EA04  20                 	db	32
  4769  00EA05  56                 	db	86	;'V'
  4770  00EA06  6F                 	db	111	;'o'
  4771  00EA07  6C                 	db	108	;'l'
  4772  00EA08  74                 	db	116	;'t'
  4773  00EA09  61                 	db	97	;'a'
  4774  00EA0A  67                 	db	103	;'g'
  4775  00EA0B  65                 	db	101	;'e'
  4776  00EA0C  20                 	db	32
  4777  00EA0D  6D                 	db	109	;'m'
  4778  00EA0E  65                 	db	101	;'e'
  4779  00EA0F  61                 	db	97	;'a'
  4780  00EA10  73                 	db	115	;'s'
  4781  00EA11  75                 	db	117	;'u'
  4782  00EA12  72                 	db	114	;'r'
  4783  00EA13  65                 	db	101	;'e'
  4784  00EA14  64                 	db	100	;'d'
  4785  00EA15  0A                 	db	10
  4786  00EA16  0D                 	db	13
  4787  00EA17  20                 	db	32
  4788  00EA18  20                 	db	32
  4789  00EA19  20                 	db	32
  4790  00EA1A  4D                 	db	77	;'M'
  4791  00EA1B  61                 	db	97	;'a'
  4792  00EA1C  78                 	db	120	;'x'
  4793  00EA1D  20                 	db	32
  4794  00EA1E  50                 	db	80	;'P'
  4795  00EA1F  4F                 	db	79	;'O'
  4796  00EA20  53                 	db	83	;'S'
  4797  00EA21  31                 	db	49	;'1'
  4798  00EA22  32                 	db	50	;'2'
  4799  00EA23  20                 	db	32
  4800  00EA24  56                 	db	86	;'V'
  4801  00EA25  6F                 	db	111	;'o'
  4802  00EA26  6C                 	db	108	;'l'
  4803  00EA27  74                 	db	116	;'t'
  4804  00EA28  61                 	db	97	;'a'
  4805  00EA29  67                 	db	103	;'g'
  4806  00EA2A  65                 	db	101	;'e'
  4807  00EA2B  3F                 	db	63	;'?'
  4808  00EA2C  3A                 	db	58	;':'
  4809  00EA2D  20                 	db	32
  4810  00EA2E  52                 	db	82	;'R'
  4811  00EA2F  65                 	db	101	;'e'
  4812  00EA30  74                 	db	116	;'t'
  4813  00EA31  75                 	db	117	;'u'
  4814  00EA32  72                 	db	114	;'r'
  4815  00EA33  6E                 	db	110	;'n'
  4816  00EA34  73                 	db	115	;'s'
  4817  00EA35  20                 	db	32
  4818  00EA36  74                 	db	116	;'t'
  4819  00EA37  68                 	db	104	;'h'
  4820  00EA38  65                 	db	101	;'e'
  4821  00EA39  20                 	db	32
  4822  00EA3A  6D                 	db	109	;'m'
  4823  00EA3B  61                 	db	97	;'a'
  4824  00EA3C  78                 	db	120	;'x'
  4825  00EA3D  69                 	db	105	;'i'
  4826  00EA3E  6D                 	db	109	;'m'
  4827  00EA3F  75                 	db	117	;'u'
  4828  00EA40  6D                 	db	109	;'m'
  4829  00EA41  20                 	db	32
  4830  00EA42  72                 	db	114	;'r'
  4831  00EA43  65                 	db	101	;'e'
  4832  00EA44  63                 	db	99	;'c'
  4833  00EA45  6F                 	db	111	;'o'
  4834  00EA46  72                 	db	114	;'r'
  4835  00EA47  64                 	db	100	;'d'
  4836  00EA48  65                 	db	101	;'e'
  4837  00EA49  64                 	db	100	;'d'
  4838  00EA4A  20                 	db	32
  4839  00EA4B  2B                 	db	43
  4840  00EA4C  31                 	db	49	;'1'
  4841  00EA4D  32                 	db	50	;'2'
  4842  00EA4E  56                 	db	86	;'V'
  4843  00EA4F  20                 	db	32
  4844  00EA50  52                 	db	82	;'R'
  4845  00EA51  61                 	db	97	;'a'
  4846  00EA52  69                 	db	105	;'i'
  4847  00EA53  6C                 	db	108	;'l'
  4848  00EA54  20                 	db	32
  4849  00EA55  56                 	db	86	;'V'
  4850  00EA56  6F                 	db	111	;'o'
  4851  00EA57  6C                 	db	108	;'l'
  4852  00EA58  74                 	db	116	;'t'
  4853  00EA59  61                 	db	97	;'a'
  4854  00EA5A  67                 	db	103	;'g'
  4855  00EA5B  65                 	db	101	;'e'
  4856  00EA5C  20                 	db	32
  4857  00EA5D  6D                 	db	109	;'m'
  4858  00EA5E  65                 	db	101	;'e'
  4859  00EA5F  61                 	db	97	;'a'
  4860  00EA60  73                 	db	115	;'s'
  4861  00EA61  75                 	db	117	;'u'
  4862  00EA62  72                 	db	114	;'r'
  4863  00EA63  65                 	db	101	;'e'
  4864  00EA64  64                 	db	100	;'d'
  4865  00EA65  0A                 	db	10
  4866  00EA66  0D                 	db	13
  4867  00EA67  20                 	db	32
  4868  00EA68  20                 	db	32
  4869  00EA69  20                 	db	32
  4870  00EA6A  4D                 	db	77	;'M'
  4871  00EA6B  61                 	db	97	;'a'
  4872  00EA6C  78                 	db	120	;'x'
  4873  00EA6D  20                 	db	32
  4874  00EA6E  44                 	db	68	;'D'
  4875  00EA6F  69                 	db	105	;'i'
  4876  00EA70  65                 	db	101	;'e'
  4877  00EA71  20                 	db	32
  4878  00EA72  54                 	db	84	;'T'
  4879  00EA73  65                 	db	101	;'e'
  4880  00EA74  6D                 	db	109	;'m'
  4881  00EA75  70                 	db	112	;'p'
  4882  00EA76  3F                 	db	63	;'?'
  4883  00EA77  3A                 	db	58	;':'
  4884  00EA78  20                 	db	32
  4885  00EA79  52                 	db	82	;'R'
  4886  00EA7A  65                 	db	101	;'e'
  4887  00EA7B  74                 	db	116	;'t'
  4888  00EA7C  75                 	db	117	;'u'
  4889  00EA7D  72                 	db	114	;'r'
  4890  00EA7E  6E                 	db	110	;'n'
  4891  00EA7F  73                 	db	115	;'s'
  4892  00EA80  20                 	db	32
  4893  00EA81  74                 	db	116	;'t'
  4894  00EA82  68                 	db	104	;'h'
  4895  00EA83  65                 	db	101	;'e'
  4896  00EA84  20                 	db	32
  4897  00EA85  6D                 	db	109	;'m'
  4898  00EA86  61                 	db	97	;'a'
  4899  00EA87  78                 	db	120	;'x'
  4900  00EA88  69                 	db	105	;'i'
  4901  00EA89  6D                 	db	109	;'m'
  4902  00EA8A  75                 	db	117	;'u'
  4903  00EA8B  6D                 	db	109	;'m'
  4904  00EA8C  20                 	db	32
  4905  00EA8D  72                 	db	114	;'r'
  4906  00EA8E  65                 	db	101	;'e'
  4907  00EA8F  63                 	db	99	;'c'
  4908  00EA90  6F                 	db	111	;'o'
  4909  00EA91  72                 	db	114	;'r'
  4910  00EA92  64                 	db	100	;'d'
  4911  00EA93  65                 	db	101	;'e'
  4912  00EA94  64                 	db	100	;'d'
  4913  00EA95  20                 	db	32
  4914  00EA96  64                 	db	100	;'d'
  4915  00EA97  69                 	db	105	;'i'
  4916  00EA98  65                 	db	101	;'e'
  4917  00EA99  20                 	db	32
  4918  00EA9A  74                 	db	116	;'t'
  4919  00EA9B  65                 	db	101	;'e'
  4920  00EA9C  6D                 	db	109	;'m'
  4921  00EA9D  70                 	db	112	;'p'
  4922  00EA9E  65                 	db	101	;'e'
  4923  00EA9F  72                 	db	114	;'r'
  4924  00EAA0  61                 	db	97	;'a'
  4925  00EAA1  74                 	db	116	;'t'
  4926  00EAA2  75                 	db	117	;'u'
  4927  00EAA3  72                 	db	114	;'r'
  4928  00EAA4  65                 	db	101	;'e'
  4929  00EAA5  20                 	db	32
  4930  00EAA6  6D                 	db	109	;'m'
  4931  00EAA7  65                 	db	101	;'e'
  4932  00EAA8  61                 	db	97	;'a'
  4933  00EAA9  73                 	db	115	;'s'
  4934  00EAAA  75                 	db	117	;'u'
  4935  00EAAB  72                 	db	114	;'r'
  4936  00EAAC  65                 	db	101	;'e'
  4937  00EAAD  64                 	db	100	;'d'
  4938  00EAAE  0A                 	db	10
  4939  00EAAF  0D                 	db	13
  4940  00EAB0  20                 	db	32
  4941  00EAB1  20                 	db	32
  4942  00EAB2  20                 	db	32
  4943  00EAB3  4D                 	db	77	;'M'
  4944  00EAB4  61                 	db	97	;'a'
  4945  00EAB5  78                 	db	120	;'x'
  4946  00EAB6  20                 	db	32
  4947  00EAB7  46                 	db	70	;'F'
  4948  00EAB8  56                 	db	86	;'V'
  4949  00EAB9  52                 	db	82	;'R'
  4950  00EABA  20                 	db	32
  4951  00EABB  56                 	db	86	;'V'
  4952  00EABC  6F                 	db	111	;'o'
  4953  00EABD  6C                 	db	108	;'l'
  4954  00EABE  74                 	db	116	;'t'
  4955  00EABF  61                 	db	97	;'a'
  4956  00EAC0  67                 	db	103	;'g'
  4957  00EAC1  65                 	db	101	;'e'
  4958  00EAC2  3F                 	db	63	;'?'
  4959  00EAC3  3A                 	db	58	;':'
  4960  00EAC4  20                 	db	32
  4961  00EAC5  52                 	db	82	;'R'
  4962  00EAC6  65                 	db	101	;'e'
  4963  00EAC7  74                 	db	116	;'t'
  4964  00EAC8  75                 	db	117	;'u'
  4965  00EAC9  72                 	db	114	;'r'
  4966  00EACA  6E                 	db	110	;'n'
  4967  00EACB  73                 	db	115	;'s'
  4968  00EACC  20                 	db	32
  4969  00EACD  74                 	db	116	;'t'
  4970  00EACE  68                 	db	104	;'h'
  4971  00EACF  65                 	db	101	;'e'
  4972  00EAD0  20                 	db	32
  4973  00EAD1  6D                 	db	109	;'m'
  4974  00EAD2  61                 	db	97	;'a'
  4975  00EAD3  78                 	db	120	;'x'
  4976  00EAD4  69                 	db	105	;'i'
  4977  00EAD5  6D                 	db	109	;'m'
  4978  00EAD6  75                 	db	117	;'u'
  4979  00EAD7  6D                 	db	109	;'m'
  4980  00EAD8  20                 	db	32
  4981  00EAD9  72                 	db	114	;'r'
  4982  00EADA  65                 	db	101	;'e'
  4983  00EADB  63                 	db	99	;'c'
  4984  00EADC  6F                 	db	111	;'o'
  4985  00EADD  72                 	db	114	;'r'
  4986  00EADE  64                 	db	100	;'d'
  4987  00EADF  65                 	db	101	;'e'
  4988  00EAE0  64                 	db	100	;'d'
  4989  00EAE1  20                 	db	32
  4990  00EAE2  46                 	db	70	;'F'
  4991  00EAE3  56                 	db	86	;'V'
  4992  00EAE4  52                 	db	82	;'R'
  4993  00EAE5  20                 	db	32
  4994  00EAE6  42                 	db	66	;'B'
  4995  00EAE7  75                 	db	117	;'u'
  4996  00EAE8  66                 	db	102	;'f'
  4997  00EAE9  66                 	db	102	;'f'
  4998  00EAEA  65                 	db	101	;'e'
  4999  00EAEB  72                 	db	114	;'r'
  5000  00EAEC  20                 	db	32
  5001  00EAED  31                 	db	49	;'1'
  5002  00EAEE  20                 	db	32
  5003  00EAEF  56                 	db	86	;'V'
  5004  00EAF0  6F                 	db	111	;'o'
  5005  00EAF1  6C                 	db	108	;'l'
  5006  00EAF2  74                 	db	116	;'t'
  5007  00EAF3  61                 	db	97	;'a'
  5008  00EAF4  67                 	db	103	;'g'
  5009  00EAF5  65                 	db	101	;'e'
  5010  00EAF6  20                 	db	32
  5011  00EAF7  6D                 	db	109	;'m'
  5012  00EAF8  65                 	db	101	;'e'
  5013  00EAF9  61                 	db	97	;'a'
  5014  00EAFA  73                 	db	115	;'s'
  5015  00EAFB  75                 	db	117	;'u'
  5016  00EAFC  72                 	db	114	;'r'
  5017  00EAFD  65                 	db	101	;'e'
  5018  00EAFE  64                 	db	100	;'d'
  5019  00EAFF  0A                 	db	10
  5020  00EB00  0D                 	db	13
  5021  00EB01  0A                 	db	10
  5022  00EB02  0D                 	db	13
  5023  00EB03  00                 	db	0
  5024  00EB04                     STR_139:
  5025  00EB04  4C                 	db	76	;'L'
  5026  00EB05  69                 	db	105	;'i'
  5027  00EB06  73                 	db	115	;'s'
  5028  00EB07  74                 	db	116	;'t'
  5029  00EB08  20                 	db	32
  5030  00EB09  6F                 	db	111	;'o'
  5031  00EB0A  66                 	db	102	;'f'
  5032  00EB0B  20                 	db	32
  5033  00EB0C  73                 	db	115	;'s'
  5034  00EB0D  75                 	db	117	;'u'
  5035  00EB0E  70                 	db	112	;'p'
  5036  00EB0F  70                 	db	112	;'p'
  5037  00EB10  6F                 	db	111	;'o'
  5038  00EB11  72                 	db	114	;'r'
  5039  00EB12  74                 	db	116	;'t'
  5040  00EB13  65                 	db	101	;'e'
  5041  00EB14  64                 	db	100	;'d'
  5042  00EB15  20                 	db	32
  5043  00EB16  50                 	db	80	;'P'
  5044  00EB17  72                 	db	114	;'r'
  5045  00EB18  69                 	db	105	;'i'
  5046  00EB19  6D                 	db	109	;'m'
  5047  00EB1A  61                 	db	97	;'a'
  5048  00EB1B  72                 	db	114	;'r'
  5049  00EB1C  79                 	db	121	;'y'
  5050  00EB1D  20                 	db	32
  5051  00EB1E  4D                 	db	77	;'M'
  5052  00EB1F  65                 	db	101	;'e'
  5053  00EB20  61                 	db	97	;'a'
  5054  00EB21  73                 	db	115	;'s'
  5055  00EB22  75                 	db	117	;'u'
  5056  00EB23  72                 	db	114	;'r'
  5057  00EB24  65                 	db	101	;'e'
  5058  00EB25  6D                 	db	109	;'m'
  5059  00EB26  65                 	db	101	;'e'
  5060  00EB27  6E                 	db	110	;'n'
  5061  00EB28  74                 	db	116	;'t'
  5062  00EB29  20                 	db	32
  5063  00EB2A  43                 	db	67	;'C'
  5064  00EB2B  6F                 	db	111	;'o'
  5065  00EB2C  6D                 	db	109	;'m'
  5066  00EB2D  6D                 	db	109	;'m'
  5067  00EB2E  61                 	db	97	;'a'
  5068  00EB2F  6E                 	db	110	;'n'
  5069  00EB30  64                 	db	100	;'d'
  5070  00EB31  73                 	db	115	;'s'
  5071  00EB32  3A                 	db	58	;':'
  5072  00EB33  0A                 	db	10
  5073  00EB34  0D                 	db	13
  5074  00EB35  20                 	db	32
  5075  00EB36  20                 	db	32
  5076  00EB37  20                 	db	32
  5077  00EB38  4D                 	db	77	;'M'
  5078  00EB39  65                 	db	101	;'e'
  5079  00EB3A  61                 	db	97	;'a'
  5080  00EB3B  73                 	db	115	;'s'
  5081  00EB3C  75                 	db	117	;'u'
  5082  00EB3D  72                 	db	114	;'r'
  5083  00EB3E  65                 	db	101	;'e'
  5084  00EB3F  20                 	db	32
  5085  00EB40  44                 	db	68	;'D'
  5086  00EB41  65                 	db	101	;'e'
  5087  00EB42  74                 	db	116	;'t'
  5088  00EB43  65                 	db	101	;'e'
  5089  00EB44  63                 	db	99	;'c'
  5090  00EB45  74                 	db	116	;'t'
  5091  00EB46  65                 	db	101	;'e'
  5092  00EB47  64                 	db	100	;'d'
  5093  00EB48  20                 	db	32
  5094  00EB49  43                 	db	67	;'C'
  5095  00EB4A  75                 	db	117	;'u'
  5096  00EB4B  72                 	db	114	;'r'
  5097  00EB4C  72                 	db	114	;'r'
  5098  00EB4D  65                 	db	101	;'e'
  5099  00EB4E  6E                 	db	110	;'n'
  5100  00EB4F  74                 	db	116	;'t'
  5101  00EB50  3F                 	db	63	;'?'
  5102  00EB51  3A                 	db	58	;':'
  5103  00EB52  20                 	db	32
  5104  00EB53  52                 	db	82	;'R'
  5105  00EB54  65                 	db	101	;'e'
  5106  00EB55  74                 	db	116	;'t'
  5107  00EB56  75                 	db	117	;'u'
  5108  00EB57  72                 	db	114	;'r'
  5109  00EB58  6E                 	db	110	;'n'
  5110  00EB59  73                 	db	115	;'s'
  5111  00EB5A  20                 	db	32
  5112  00EB5B  6D                 	db	109	;'m'
  5113  00EB5C  65                 	db	101	;'e'
  5114  00EB5D  61                 	db	97	;'a'
  5115  00EB5E  73                 	db	115	;'s'
  5116  00EB5F  75                 	db	117	;'u'
  5117  00EB60  72                 	db	114	;'r'
  5118  00EB61  65                 	db	101	;'e'
  5119  00EB62  64                 	db	100	;'d'
  5120  00EB63  20                 	db	32
  5121  00EB64  6F                 	db	111	;'o'
  5122  00EB65  75                 	db	117	;'u'
  5123  00EB66  74                 	db	116	;'t'
  5124  00EB67  70                 	db	112	;'p'
  5125  00EB68  75                 	db	117	;'u'
  5126  00EB69  74                 	db	116	;'t'
  5127  00EB6A  20                 	db	32
  5128  00EB6B  63                 	db	99	;'c'
  5129  00EB6C  75                 	db	117	;'u'
  5130  00EB6D  72                 	db	114	;'r'
  5131  00EB6E  72                 	db	114	;'r'
  5132  00EB6F  65                 	db	101	;'e'
  5133  00EB70  6E                 	db	110	;'n'
  5134  00EB71  74                 	db	116	;'t'
  5135  00EB72  20                 	db	32
  5136  00EB73  69                 	db	105	;'i'
  5137  00EB74  6E                 	db	110	;'n'
  5138  00EB75  20                 	db	32
  5139  00EB76  61                 	db	97	;'a'
  5140  00EB77  6D                 	db	109	;'m'
  5141  00EB78  70                 	db	112	;'p'
  5142  00EB79  73                 	db	115	;'s'
  5143  00EB7A  20                 	db	32
  5144  00EB7B  61                 	db	97	;'a'
  5145  00EB7C  73                 	db	115	;'s'
  5146  00EB7D  20                 	db	32
  5147  00EB7E  73                 	db	115	;'s'
  5148  00EB7F  65                 	db	101	;'e'
  5149  00EB80  65                 	db	101	;'e'
  5150  00EB81  6E                 	db	110	;'n'
  5151  00EB82  20                 	db	32
  5152  00EB83  62                 	db	98	;'b'
  5153  00EB84  79                 	db	121	;'y'
  5154  00EB85  20                 	db	32
  5155  00EB86  41                 	db	65	;'A'
  5156  00EB87  44                 	db	68	;'D'
  5157  00EB88  43                 	db	67	;'C'
  5158  00EB89  0A                 	db	10
  5159  00EB8A  0D                 	db	13
  5160  00EB8B  20                 	db	32
  5161  00EB8C  20                 	db	32
  5162  00EB8D  20                 	db	32
  5163  00EB8E  4D                 	db	77	;'M'
  5164  00EB8F  65                 	db	101	;'e'
  5165  00EB90  61                 	db	97	;'a'
  5166  00EB91  73                 	db	115	;'s'
  5167  00EB92  75                 	db	117	;'u'
  5168  00EB93  72                 	db	114	;'r'
  5169  00EB94  65                 	db	101	;'e'
  5170  00EB95  20                 	db	32
  5171  00EB96  52                 	db	82	;'R'
  5172  00EB97  4D                 	db	77	;'M'
  5173  00EB98  53                 	db	83	;'S'
  5174  00EB99  20                 	db	32
  5175  00EB9A  43                 	db	67	;'C'
  5176  00EB9B  75                 	db	117	;'u'
  5177  00EB9C  72                 	db	114	;'r'
  5178  00EB9D  72                 	db	114	;'r'
  5179  00EB9E  65                 	db	101	;'e'
  5180  00EB9F  6E                 	db	110	;'n'
  5181  00EBA0  74                 	db	116	;'t'
  5182  00EBA1  3F                 	db	63	;'?'
  5183  00EBA2  3A                 	db	58	;':'
  5184  00EBA3  20                 	db	32
  5185  00EBA4  52                 	db	82	;'R'
  5186  00EBA5  65                 	db	101	;'e'
  5187  00EBA6  74                 	db	116	;'t'
  5188  00EBA7  75                 	db	117	;'u'
  5189  00EBA8  72                 	db	114	;'r'
  5190  00EBA9  6E                 	db	110	;'n'
  5191  00EBAA  73                 	db	115	;'s'
  5192  00EBAB  20                 	db	32
  5193  00EBAC  74                 	db	116	;'t'
  5194  00EBAD  68                 	db	104	;'h'
  5195  00EBAE  65                 	db	101	;'e'
  5196  00EBAF  20                 	db	32
  5197  00EBB0  63                 	db	99	;'c'
  5198  00EBB1  61                 	db	97	;'a'
  5199  00EBB2  6C                 	db	108	;'l'
  5200  00EBB3  63                 	db	99	;'c'
  5201  00EBB4  75                 	db	117	;'u'
  5202  00EBB5  6C                 	db	108	;'l'
  5203  00EBB6  61                 	db	97	;'a'
  5204  00EBB7  74                 	db	116	;'t'
  5205  00EBB8  65                 	db	101	;'e'
  5206  00EBB9  64                 	db	100	;'d'
  5207  00EBBA  20                 	db	32
  5208  00EBBB  52                 	db	82	;'R'
  5209  00EBBC  4D                 	db	77	;'M'
  5210  00EBBD  53                 	db	83	;'S'
  5211  00EBBE  20                 	db	32
  5212  00EBBF  6F                 	db	111	;'o'
  5213  00EBC0  75                 	db	117	;'u'
  5214  00EBC1  74                 	db	116	;'t'
  5215  00EBC2  70                 	db	112	;'p'
  5216  00EBC3  75                 	db	117	;'u'
  5217  00EBC4  74                 	db	116	;'t'
  5218  00EBC5  20                 	db	32
  5219  00EBC6  63                 	db	99	;'c'
  5220  00EBC7  75                 	db	117	;'u'
  5221  00EBC8  72                 	db	114	;'r'
  5222  00EBC9  72                 	db	114	;'r'
  5223  00EBCA  65                 	db	101	;'e'
  5224  00EBCB  6E                 	db	110	;'n'
  5225  00EBCC  74                 	db	116	;'t'
  5226  00EBCD  20                 	db	32
  5227  00EBCE  66                 	db	102	;'f'
  5228  00EBCF  72                 	db	114	;'r'
  5229  00EBD0  6F                 	db	111	;'o'
  5230  00EBD1  6D                 	db	109	;'m'
  5231  00EBD2  20                 	db	32
  5232  00EBD3  6D                 	db	109	;'m'
  5233  00EBD4  65                 	db	101	;'e'
  5234  00EBD5  61                 	db	97	;'a'
  5235  00EBD6  73                 	db	115	;'s'
  5236  00EBD7  75                 	db	117	;'u'
  5237  00EBD8  72                 	db	114	;'r'
  5238  00EBD9  65                 	db	101	;'e'
  5239  00EBDA  6D                 	db	109	;'m'
  5240  00EBDB  65                 	db	101	;'e'
  5241  00EBDC  6E                 	db	110	;'n'
  5242  00EBDD  74                 	db	116	;'t'
  5243  00EBDE  73                 	db	115	;'s'
  5244  00EBDF  20                 	db	32
  5245  00EBE0  61                 	db	97	;'a'
  5246  00EBE1  6E                 	db	110	;'n'
  5247  00EBE2  64                 	db	100	;'d'
  5248  00EBE3  20                 	db	32
  5249  00EBE4  54                 	db	84	;'T'
  5250  00EBE5  52                 	db	82	;'R'
  5251  00EBE6  49                 	db	73	;'I'
  5252  00EBE7  41                 	db	65	;'A'
  5253  00EBE8  43                 	db	67	;'C'
  5254  00EBE9  20                 	db	32
  5255  00EBEA  66                 	db	102	;'f'
  5256  00EBEB  69                 	db	105	;'i'
  5257  00EBEC  72                 	db	114	;'r'
  5258  00EBED  69                 	db	105	;'i'
  5259  00EBEE  6E                 	db	110	;'n'
  5260  00EBEF  67                 	db	103	;'g'
  5261  00EBF0  20                 	db	32
  5262  00EBF1  61                 	db	97	;'a'
  5263  00EBF2  6E                 	db	110	;'n'
  5264  00EBF3  67                 	db	103	;'g'
  5265  00EBF4  6C                 	db	108	;'l'
  5266  00EBF5  65                 	db	101	;'e'
  5267  00EBF6  0A                 	db	10
  5268  00EBF7  0D                 	db	13
  5269  00EBF8  20                 	db	32
  5270  00EBF9  20                 	db	32
  5271  00EBFA  20                 	db	32
  5272  00EBFB  4D                 	db	77	;'M'
  5273  00EBFC  65                 	db	101	;'e'
  5274  00EBFD  61                 	db	97	;'a'
  5275  00EBFE  73                 	db	115	;'s'
  5276  00EBFF  75                 	db	117	;'u'
  5277  00EC00  72                 	db	114	;'r'
  5278  00EC01  65                 	db	101	;'e'
  5279  00EC02  20                 	db	32
  5280  00EC03  52                 	db	82	;'R'
  5281  00EC04  4D                 	db	77	;'M'
  5282  00EC05  53                 	db	83	;'S'
  5283  00EC06  20                 	db	32
  5284  00EC07  56                 	db	86	;'V'
  5285  00EC08  6F                 	db	111	;'o'
  5286  00EC09  6C                 	db	108	;'l'
  5287  00EC0A  74                 	db	116	;'t'
  5288  00EC0B  61                 	db	97	;'a'
  5289  00EC0C  67                 	db	103	;'g'
  5290  00EC0D  65                 	db	101	;'e'
  5291  00EC0E  3F                 	db	63	;'?'
  5292  00EC0F  3A                 	db	58	;':'
  5293  00EC10  20                 	db	32
  5294  00EC11  52                 	db	82	;'R'
  5295  00EC12  65                 	db	101	;'e'
  5296  00EC13  74                 	db	116	;'t'
  5297  00EC14  75                 	db	117	;'u'
  5298  00EC15  72                 	db	114	;'r'
  5299  00EC16  6E                 	db	110	;'n'
  5300  00EC17  73                 	db	115	;'s'
  5301  00EC18  20                 	db	32
  5302  00EC19  74                 	db	116	;'t'
  5303  00EC1A  68                 	db	104	;'h'
  5304  00EC1B  65                 	db	101	;'e'
  5305  00EC1C  20                 	db	32
  5306  00EC1D  63                 	db	99	;'c'
  5307  00EC1E  61                 	db	97	;'a'
  5308  00EC1F  6C                 	db	108	;'l'
  5309  00EC20  63                 	db	99	;'c'
  5310  00EC21  75                 	db	117	;'u'
  5311  00EC22  6C                 	db	108	;'l'
  5312  00EC23  61                 	db	97	;'a'
  5313  00EC24  74                 	db	116	;'t'
  5314  00EC25  65                 	db	101	;'e'
  5315  00EC26  64                 	db	100	;'d'
  5316  00EC27  20                 	db	32
  5317  00EC28  52                 	db	82	;'R'
  5318  00EC29  4D                 	db	77	;'M'
  5319  00EC2A  53                 	db	83	;'S'
  5320  00EC2B  20                 	db	32
  5321  00EC2C  6F                 	db	111	;'o'
  5322  00EC2D  75                 	db	117	;'u'
  5323  00EC2E  74                 	db	116	;'t'
  5324  00EC2F  70                 	db	112	;'p'
  5325  00EC30  75                 	db	117	;'u'
  5326  00EC31  74                 	db	116	;'t'
  5327  00EC32  20                 	db	32
  5328  00EC33  76                 	db	118	;'v'
  5329  00EC34  6F                 	db	111	;'o'
  5330  00EC35  6C                 	db	108	;'l'
  5331  00EC36  74                 	db	116	;'t'
  5332  00EC37  61                 	db	97	;'a'
  5333  00EC38  67                 	db	103	;'g'
  5334  00EC39  65                 	db	101	;'e'
  5335  00EC3A  20                 	db	32
  5336  00EC3B  66                 	db	102	;'f'
  5337  00EC3C  72                 	db	114	;'r'
  5338  00EC3D  6F                 	db	111	;'o'
  5339  00EC3E  6D                 	db	109	;'m'
  5340  00EC3F  20                 	db	32
  5341  00EC40  54                 	db	84	;'T'
  5342  00EC41  52                 	db	82	;'R'
  5343  00EC42  49                 	db	73	;'I'
  5344  00EC43  41                 	db	65	;'A'
  5345  00EC44  43                 	db	67	;'C'
  5346  00EC45  20                 	db	32
  5347  00EC46  66                 	db	102	;'f'
  5348  00EC47  69                 	db	105	;'i'
  5349  00EC48  72                 	db	114	;'r'
  5350  00EC49  69                 	db	105	;'i'
  5351  00EC4A  6E                 	db	110	;'n'
  5352  00EC4B  67                 	db	103	;'g'
  5353  00EC4C  20                 	db	32
  5354  00EC4D  61                 	db	97	;'a'
  5355  00EC4E  6E                 	db	110	;'n'
  5356  00EC4F  67                 	db	103	;'g'
  5357  00EC50  6C                 	db	108	;'l'
  5358  00EC51  65                 	db	101	;'e'
  5359  00EC52  0A                 	db	10
  5360  00EC53  0D                 	db	13
  5361  00EC54  20                 	db	32
  5362  00EC55  20                 	db	32
  5363  00EC56  20                 	db	32
  5364  00EC57  4D                 	db	77	;'M'
  5365  00EC58  65                 	db	101	;'e'
  5366  00EC59  61                 	db	97	;'a'
  5367  00EC5A  73                 	db	115	;'s'
  5368  00EC5B  75                 	db	117	;'u'
  5369  00EC5C  72                 	db	114	;'r'
  5370  00EC5D  65                 	db	101	;'e'
  5371  00EC5E  20                 	db	32
  5372  00EC5F  50                 	db	80	;'P'
  5373  00EC60  6F                 	db	111	;'o'
  5374  00EC61  77                 	db	119	;'w'
  5375  00EC62  65                 	db	101	;'e'
  5376  00EC63  72                 	db	114	;'r'
  5377  00EC64  3F                 	db	63	;'?'
  5378  00EC65  3A                 	db	58	;':'
  5379  00EC66  20                 	db	32
  5380  00EC67  52                 	db	82	;'R'
  5381  00EC68  65                 	db	101	;'e'
  5382  00EC69  74                 	db	116	;'t'
  5383  00EC6A  75                 	db	117	;'u'
  5384  00EC6B  72                 	db	114	;'r'
  5385  00EC6C  6E                 	db	110	;'n'
  5386  00EC6D  73                 	db	115	;'s'
  5387  00EC6E  20                 	db	32
  5388  00EC6F  74                 	db	116	;'t'
  5389  00EC70  68                 	db	104	;'h'
  5390  00EC71  65                 	db	101	;'e'
  5391  00EC72  20                 	db	32
  5392  00EC73  63                 	db	99	;'c'
  5393  00EC74  61                 	db	97	;'a'
  5394  00EC75  6C                 	db	108	;'l'
  5395  00EC76  63                 	db	99	;'c'
  5396  00EC77  75                 	db	117	;'u'
  5397  00EC78  6C                 	db	108	;'l'
  5398  00EC79  61                 	db	97	;'a'
  5399  00EC7A  74                 	db	116	;'t'
  5400  00EC7B  65                 	db	101	;'e'
  5401  00EC7C  64                 	db	100	;'d'
  5402  00EC7D  20                 	db	32
  5403  00EC7E  6F                 	db	111	;'o'
  5404  00EC7F  75                 	db	117	;'u'
  5405  00EC80  74                 	db	116	;'t'
  5406  00EC81  70                 	db	112	;'p'
  5407  00EC82  75                 	db	117	;'u'
  5408  00EC83  74                 	db	116	;'t'
  5409  00EC84  20                 	db	32
  5410  00EC85  70                 	db	112	;'p'
  5411  00EC86  6F                 	db	111	;'o'
  5412  00EC87  77                 	db	119	;'w'
  5413  00EC88  65                 	db	101	;'e'
  5414  00EC89  72                 	db	114	;'r'
  5415  00EC8A  20                 	db	32
  5416  00EC8B  69                 	db	105	;'i'
  5417  00EC8C  6E                 	db	110	;'n'
  5418  00EC8D  20                 	db	32
  5419  00EC8E  57                 	db	87	;'W'
  5420  00EC8F  61                 	db	97	;'a'
  5421  00EC90  74                 	db	116	;'t'
  5422  00EC91  74                 	db	116	;'t'
  5423  00EC92  73                 	db	115	;'s'
  5424  00EC93  0A                 	db	10
  5425  00EC94  0D                 	db	13
  5426  00EC95  20                 	db	32
  5427  00EC96  20                 	db	32
  5428  00EC97  20                 	db	32
  5429  00EC98  4C                 	db	76	;'L'
  5430  00EC99  6F                 	db	111	;'o'
  5431  00EC9A  61                 	db	97	;'a'
  5432  00EC9B  64                 	db	100	;'d'
  5433  00EC9C  20                 	db	32
  5434  00EC9D  4F                 	db	79	;'O'
  5435  00EC9E  6E                 	db	110	;'n'
  5436  00EC9F  20                 	db	32
  5437  00ECA0  54                 	db	84	;'T'
  5438  00ECA1  69                 	db	105	;'i'
  5439  00ECA2  6D                 	db	109	;'m'
  5440  00ECA3  65                 	db	101	;'e'
  5441  00ECA4  3F                 	db	63	;'?'
  5442  00ECA5  3A                 	db	58	;':'
  5443  00ECA6  20                 	db	32
  5444  00ECA7  52                 	db	82	;'R'
  5445  00ECA8  65                 	db	101	;'e'
  5446  00ECA9  74                 	db	116	;'t'
  5447  00ECAA  75                 	db	117	;'u'
  5448  00ECAB  72                 	db	114	;'r'
  5449  00ECAC  6E                 	db	110	;'n'
  5450  00ECAD  73                 	db	115	;'s'
  5451  00ECAE  20                 	db	32
  5452  00ECAF  6C                 	db	108	;'l'
  5453  00ECB0  6F                 	db	111	;'o'
  5454  00ECB1  61                 	db	97	;'a'
  5455  00ECB2  64                 	db	100	;'d'
  5456  00ECB3  20                 	db	32
  5457  00ECB4  6F                 	db	111	;'o'
  5458  00ECB5  6E                 	db	110	;'n'
  5459  00ECB6  20                 	db	32
  5460  00ECB7  74                 	db	116	;'t'
  5461  00ECB8  69                 	db	105	;'i'
  5462  00ECB9  6D                 	db	109	;'m'
  5463  00ECBA  65                 	db	101	;'e'
  5464  00ECBB  20                 	db	32
  5465  00ECBC  73                 	db	115	;'s'
  5466  00ECBD  69                 	db	105	;'i'
  5467  00ECBE  6E                 	db	110	;'n'
  5468  00ECBF  63                 	db	99	;'c'
  5469  00ECC0  65                 	db	101	;'e'
  5470  00ECC1  20                 	db	32
  5471  00ECC2  6C                 	db	108	;'l'
  5472  00ECC3  61                 	db	97	;'a'
  5473  00ECC4  73                 	db	115	;'s'
  5474  00ECC5  74                 	db	116	;'t'
  5475  00ECC6  20                 	db	32
  5476  00ECC7  64                 	db	100	;'d'
  5477  00ECC8  65                 	db	101	;'e'
  5478  00ECC9  76                 	db	118	;'v'
  5479  00ECCA  69                 	db	105	;'i'
  5480  00ECCB  63                 	db	99	;'c'
  5481  00ECCC  65                 	db	101	;'e'
  5482  00ECCD  20                 	db	32
  5483  00ECCE  72                 	db	114	;'r'
  5484  00ECCF  65                 	db	101	;'e'
  5485  00ECD0  73                 	db	115	;'s'
  5486  00ECD1  65                 	db	101	;'e'
  5487  00ECD2  74                 	db	116	;'t'
  5488  00ECD3  20                 	db	32
  5489  00ECD4  69                 	db	105	;'i'
  5490  00ECD5  6E                 	db	110	;'n'
  5491  00ECD6  20                 	db	32
  5492  00ECD7  73                 	db	115	;'s'
  5493  00ECD8  65                 	db	101	;'e'
  5494  00ECD9  63                 	db	99	;'c'
  5495  00ECDA  6F                 	db	111	;'o'
  5496  00ECDB  6E                 	db	110	;'n'
  5497  00ECDC  64                 	db	100	;'d'
  5498  00ECDD  73                 	db	115	;'s'
  5499  00ECDE  0A                 	db	10
  5500  00ECDF  0D                 	db	13
  5501  00ECE0  20                 	db	32
  5502  00ECE1  20                 	db	32
  5503  00ECE2  20                 	db	32
  5504  00ECE3  4D                 	db	77	;'M'
  5505  00ECE4  61                 	db	97	;'a'
  5506  00ECE5  78                 	db	120	;'x'
  5507  00ECE6  20                 	db	32
  5508  00ECE7  52                 	db	82	;'R'
  5509  00ECE8  4D                 	db	77	;'M'
  5510  00ECE9  53                 	db	83	;'S'
  5511  00ECEA  20                 	db	32
  5512  00ECEB  43                 	db	67	;'C'
  5513  00ECEC  75                 	db	117	;'u'
  5514  00ECED  72                 	db	114	;'r'
  5515  00ECEE  72                 	db	114	;'r'
  5516  00ECEF  65                 	db	101	;'e'
  5517  00ECF0  6E                 	db	110	;'n'
  5518  00ECF1  74                 	db	116	;'t'
  5519  00ECF2  3F                 	db	63	;'?'
  5520  00ECF3  3A                 	db	58	;':'
  5521  00ECF4  20                 	db	32
  5522  00ECF5  50                 	db	80	;'P'
  5523  00ECF6  72                 	db	114	;'r'
  5524  00ECF7  69                 	db	105	;'i'
  5525  00ECF8  6E                 	db	110	;'n'
  5526  00ECF9  74                 	db	116	;'t'
  5527  00ECFA  73                 	db	115	;'s'
  5528  00ECFB  20                 	db	32
  5529  00ECFC  74                 	db	116	;'t'
  5530  00ECFD  68                 	db	104	;'h'
  5531  00ECFE  65                 	db	101	;'e'
  5532  00ECFF  20                 	db	32
  5533  00ED00  6D                 	db	109	;'m'
  5534  00ED01  61                 	db	97	;'a'
  5535  00ED02  78                 	db	120	;'x'
  5536  00ED03  69                 	db	105	;'i'
  5537  00ED04  6D                 	db	109	;'m'
  5538  00ED05  75                 	db	117	;'u'
  5539  00ED06  6D                 	db	109	;'m'
  5540  00ED07  20                 	db	32
  5541  00ED08  72                 	db	114	;'r'
  5542  00ED09  65                 	db	101	;'e'
  5543  00ED0A  63                 	db	99	;'c'
  5544  00ED0B  6F                 	db	111	;'o'
  5545  00ED0C  72                 	db	114	;'r'
  5546  00ED0D  64                 	db	100	;'d'
  5547  00ED0E  65                 	db	101	;'e'
  5548  00ED0F  64                 	db	100	;'d'
  5549  00ED10  20                 	db	32
  5550  00ED11  52                 	db	82	;'R'
  5551  00ED12  4D                 	db	77	;'M'
  5552  00ED13  53                 	db	83	;'S'
  5553  00ED14  20                 	db	32
  5554  00ED15  6F                 	db	111	;'o'
  5555  00ED16  75                 	db	117	;'u'
  5556  00ED17  74                 	db	116	;'t'
  5557  00ED18  70                 	db	112	;'p'
  5558  00ED19  75                 	db	117	;'u'
  5559  00ED1A  74                 	db	116	;'t'
  5560  00ED1B  20                 	db	32
  5561  00ED1C  63                 	db	99	;'c'
  5562  00ED1D  75                 	db	117	;'u'
  5563  00ED1E  72                 	db	114	;'r'
  5564  00ED1F  72                 	db	114	;'r'
  5565  00ED20  65                 	db	101	;'e'
  5566  00ED21  6E                 	db	110	;'n'
  5567  00ED22  74                 	db	116	;'t'
  5568  00ED23  0A                 	db	10
  5569  00ED24  0D                 	db	13
  5570  00ED25  20                 	db	32
  5571  00ED26  20                 	db	32
  5572  00ED27  20                 	db	32
  5573  00ED28  4D                 	db	77	;'M'
  5574  00ED29  61                 	db	97	;'a'
  5575  00ED2A  78                 	db	120	;'x'
  5576  00ED2B  20                 	db	32
  5577  00ED2C  50                 	db	80	;'P'
  5578  00ED2D  6F                 	db	111	;'o'
  5579  00ED2E  77                 	db	119	;'w'
  5580  00ED2F  65                 	db	101	;'e'
  5581  00ED30  72                 	db	114	;'r'
  5582  00ED31  3F                 	db	63	;'?'
  5583  00ED32  3A                 	db	58	;':'
  5584  00ED33  20                 	db	32
  5585  00ED34  50                 	db	80	;'P'
  5586  00ED35  72                 	db	114	;'r'
  5587  00ED36  69                 	db	105	;'i'
  5588  00ED37  6E                 	db	110	;'n'
  5589  00ED38  74                 	db	116	;'t'
  5590  00ED39  73                 	db	115	;'s'
  5591  00ED3A  20                 	db	32
  5592  00ED3B  74                 	db	116	;'t'
  5593  00ED3C  68                 	db	104	;'h'
  5594  00ED3D  65                 	db	101	;'e'
  5595  00ED3E  20                 	db	32
  5596  00ED3F  6D                 	db	109	;'m'
  5597  00ED40  61                 	db	97	;'a'
  5598  00ED41  78                 	db	120	;'x'
  5599  00ED42  69                 	db	105	;'i'
  5600  00ED43  6D                 	db	109	;'m'
  5601  00ED44  75                 	db	117	;'u'
  5602  00ED45  6D                 	db	109	;'m'
  5603  00ED46  20                 	db	32
  5604  00ED47  72                 	db	114	;'r'
  5605  00ED48  65                 	db	101	;'e'
  5606  00ED49  63                 	db	99	;'c'
  5607  00ED4A  6F                 	db	111	;'o'
  5608  00ED4B  72                 	db	114	;'r'
  5609  00ED4C  64                 	db	100	;'d'
  5610  00ED4D  65                 	db	101	;'e'
  5611  00ED4E  64                 	db	100	;'d'
  5612  00ED4F  20                 	db	32
  5613  00ED50  6F                 	db	111	;'o'
  5614  00ED51  75                 	db	117	;'u'
  5615  00ED52  74                 	db	116	;'t'
  5616  00ED53  70                 	db	112	;'p'
  5617  00ED54  75                 	db	117	;'u'
  5618  00ED55  74                 	db	116	;'t'
  5619  00ED56  20                 	db	32
  5620  00ED57  70                 	db	112	;'p'
  5621  00ED58  6F                 	db	111	;'o'
  5622  00ED59  77                 	db	119	;'w'
  5623  00ED5A  65                 	db	101	;'e'
  5624  00ED5B  72                 	db	114	;'r'
  5625  00ED5C  0A                 	db	10
  5626  00ED5D  0D                 	db	13
  5627  00ED5E  0A                 	db	10
  5628  00ED5F  0D                 	db	13
  5629  00ED60  00                 	db	0
  5630  00ED61                     STR_141:
  5631  00ED61  4C                 	db	76	;'L'
  5632  00ED62  69                 	db	105	;'i'
  5633  00ED63  73                 	db	115	;'s'
  5634  00ED64  74                 	db	116	;'t'
  5635  00ED65  20                 	db	32
  5636  00ED66  6F                 	db	111	;'o'
  5637  00ED67  66                 	db	102	;'f'
  5638  00ED68  20                 	db	32
  5639  00ED69  73                 	db	115	;'s'
  5640  00ED6A  75                 	db	117	;'u'
  5641  00ED6B  70                 	db	112	;'p'
  5642  00ED6C  70                 	db	112	;'p'
  5643  00ED6D  6F                 	db	111	;'o'
  5644  00ED6E  72                 	db	114	;'r'
  5645  00ED6F  74                 	db	116	;'t'
  5646  00ED70  65                 	db	101	;'e'
  5647  00ED71  64                 	db	100	;'d'
  5648  00ED72  20                 	db	32
  5649  00ED73  4F                 	db	79	;'O'
  5650  00ED74  75                 	db	117	;'u'
  5651  00ED75  74                 	db	116	;'t'
  5652  00ED76  70                 	db	112	;'p'
  5653  00ED77  75                 	db	117	;'u'
  5654  00ED78  74                 	db	116	;'t'
  5655  00ED79  20                 	db	32
  5656  00ED7A  43                 	db	67	;'C'
  5657  00ED7B  6F                 	db	111	;'o'
  5658  00ED7C  6E                 	db	110	;'n'
  5659  00ED7D  74                 	db	116	;'t'
  5660  00ED7E  72                 	db	114	;'r'
  5661  00ED7F  6F                 	db	111	;'o'
  5662  00ED80  6C                 	db	108	;'l'
  5663  00ED81  20                 	db	32
  5664  00ED82  43                 	db	67	;'C'
  5665  00ED83  6F                 	db	111	;'o'
  5666  00ED84  6D                 	db	109	;'m'
  5667  00ED85  6D                 	db	109	;'m'
  5668  00ED86  61                 	db	97	;'a'
  5669  00ED87  6E                 	db	110	;'n'
  5670  00ED88  64                 	db	100	;'d'
  5671  00ED89  73                 	db	115	;'s'
  5672  00ED8A  3A                 	db	58	;':'
  5673  00ED8B  0A                 	db	10
  5674  00ED8C  0D                 	db	13
  5675  00ED8D  20                 	db	32
  5676  00ED8E  20                 	db	32
  5677  00ED8F  20                 	db	32
  5678  00ED90  45                 	db	69	;'E'
  5679  00ED91  6E                 	db	110	;'n'
  5680  00ED92  61                 	db	97	;'a'
  5681  00ED93  62                 	db	98	;'b'
  5682  00ED94  6C                 	db	108	;'l'
  5683  00ED95  65                 	db	101	;'e'
  5684  00ED96  20                 	db	32
  5685  00ED97  44                 	db	68	;'D'
  5686  00ED98  69                 	db	105	;'i'
  5687  00ED99  6D                 	db	109	;'m'
  5688  00ED9A  6D                 	db	109	;'m'
  5689  00ED9B  69                 	db	105	;'i'
  5690  00ED9C  6E                 	db	110	;'n'
  5691  00ED9D  67                 	db	103	;'g'
  5692  00ED9E  3A                 	db	58	;':'
  5693  00ED9F  20                 	db	32
  5694  00EDA0  45                 	db	69	;'E'
  5695  00EDA1  6E                 	db	110	;'n'
  5696  00EDA2  61                 	db	97	;'a'
  5697  00EDA3  62                 	db	98	;'b'
  5698  00EDA4  6C                 	db	108	;'l'
  5699  00EDA5  65                 	db	101	;'e'
  5700  00EDA6  20                 	db	32
  5701  00EDA7  54                 	db	84	;'T'
  5702  00EDA8  52                 	db	82	;'R'
  5703  00EDA9  49                 	db	73	;'I'
  5704  00EDAA  41                 	db	65	;'A'
  5705  00EDAB  43                 	db	67	;'C'
  5706  00EDAC  20                 	db	32
  5707  00EDAD  6F                 	db	111	;'o'
  5708  00EDAE  75                 	db	117	;'u'
  5709  00EDAF  74                 	db	116	;'t'
  5710  00EDB0  70                 	db	112	;'p'
  5711  00EDB1  75                 	db	117	;'u'
  5712  00EDB2  74                 	db	116	;'t'
  5713  00EDB3  20                 	db	32
  5714  00EDB4  64                 	db	100	;'d'
  5715  00EDB5  69                 	db	105	;'i'
  5716  00EDB6  6D                 	db	109	;'m'
  5717  00EDB7  6D                 	db	109	;'m'
  5718  00EDB8  69                 	db	105	;'i'
  5719  00EDB9  6E                 	db	110	;'n'
  5720  00EDBA  67                 	db	103	;'g'
  5721  00EDBB  0A                 	db	10
  5722  00EDBC  0D                 	db	13
  5723  00EDBD  20                 	db	32
  5724  00EDBE  20                 	db	32
  5725  00EDBF  20                 	db	32
  5726  00EDC0  44                 	db	68	;'D'
  5727  00EDC1  69                 	db	105	;'i'
  5728  00EDC2  73                 	db	115	;'s'
  5729  00EDC3  61                 	db	97	;'a'
  5730  00EDC4  62                 	db	98	;'b'
  5731  00EDC5  6C                 	db	108	;'l'
  5732  00EDC6  65                 	db	101	;'e'
  5733  00EDC7  20                 	db	32
  5734  00EDC8  44                 	db	68	;'D'
  5735  00EDC9  69                 	db	105	;'i'
  5736  00EDCA  6D                 	db	109	;'m'
  5737  00EDCB  6D                 	db	109	;'m'
  5738  00EDCC  69                 	db	105	;'i'
  5739  00EDCD  6E                 	db	110	;'n'
  5740  00EDCE  67                 	db	103	;'g'
  5741  00EDCF  3A                 	db	58	;':'
  5742  00EDD0  20                 	db	32
  5743  00EDD1  44                 	db	68	;'D'
  5744  00EDD2  69                 	db	105	;'i'
  5745  00EDD3  73                 	db	115	;'s'
  5746  00EDD4  61                 	db	97	;'a'
  5747  00EDD5  62                 	db	98	;'b'
  5748  00EDD6  6C                 	db	108	;'l'
  5749  00EDD7  65                 	db	101	;'e'
  5750  00EDD8  20                 	db	32
  5751  00EDD9  54                 	db	84	;'T'
  5752  00EDDA  52                 	db	82	;'R'
  5753  00EDDB  49                 	db	73	;'I'
  5754  00EDDC  41                 	db	65	;'A'
  5755  00EDDD  43                 	db	67	;'C'
  5756  00EDDE  20                 	db	32
  5757  00EDDF  6F                 	db	111	;'o'
  5758  00EDE0  75                 	db	117	;'u'
  5759  00EDE1  74                 	db	116	;'t'
  5760  00EDE2  70                 	db	112	;'p'
  5761  00EDE3  75                 	db	117	;'u'
  5762  00EDE4  74                 	db	116	;'t'
  5763  00EDE5  20                 	db	32
  5764  00EDE6  64                 	db	100	;'d'
  5765  00EDE7  69                 	db	105	;'i'
  5766  00EDE8  6D                 	db	109	;'m'
  5767  00EDE9  6D                 	db	109	;'m'
  5768  00EDEA  69                 	db	105	;'i'
  5769  00EDEB  6E                 	db	110	;'n'
  5770  00EDEC  67                 	db	103	;'g'
  5771  00EDED  0A                 	db	10
  5772  00EDEE  0D                 	db	13
  5773  00EDEF  20                 	db	32
  5774  00EDF0  20                 	db	32
  5775  00EDF1  20                 	db	32
  5776  00EDF2  45                 	db	69	;'E'
  5777  00EDF3  6E                 	db	110	;'n'
  5778  00EDF4  61                 	db	97	;'a'
  5779  00EDF5  62                 	db	98	;'b'
  5780  00EDF6  6C                 	db	108	;'l'
  5781  00EDF7  65                 	db	101	;'e'
  5782  00EDF8  20                 	db	32
  5783  00EDF9  4C                 	db	76	;'L'
  5784  00EDFA  6F                 	db	111	;'o'
  5785  00EDFB  61                 	db	97	;'a'
  5786  00EDFC  64                 	db	100	;'d'
  5787  00EDFD  3A                 	db	58	;':'
  5788  00EDFE  20                 	db	32
  5789  00EDFF  45                 	db	69	;'E'
  5790  00EE00  6E                 	db	110	;'n'
  5791  00EE01  61                 	db	97	;'a'
  5792  00EE02  62                 	db	98	;'b'
  5793  00EE03  6C                 	db	108	;'l'
  5794  00EE04  65                 	db	101	;'e'
  5795  00EE05  73                 	db	115	;'s'
  5796  00EE06  20                 	db	32
  5797  00EE07  74                 	db	116	;'t'
  5798  00EE08  68                 	db	104	;'h'
  5799  00EE09  65                 	db	101	;'e'
  5800  00EE0A  20                 	db	32
  5801  00EE0B  6F                 	db	111	;'o'
  5802  00EE0C  75                 	db	117	;'u'
  5803  00EE0D  74                 	db	116	;'t'
  5804  00EE0E  70                 	db	112	;'p'
  5805  00EE0F  75                 	db	117	;'u'
  5806  00EE10  74                 	db	116	;'t'
  5807  00EE11  20                 	db	32
  5808  00EE12  54                 	db	84	;'T'
  5809  00EE13  52                 	db	82	;'R'
  5810  00EE14  49                 	db	73	;'I'
  5811  00EE15  41                 	db	65	;'A'
  5812  00EE16  43                 	db	67	;'C'
  5813  00EE17  20                 	db	32
  5814  00EE18  77                 	db	119	;'w'
  5815  00EE19  69                 	db	105	;'i'
  5816  00EE1A  74                 	db	116	;'t'
  5817  00EE1B  68                 	db	104	;'h'
  5818  00EE1C  20                 	db	32
  5819  00EE1D  64                 	db	100	;'d'
  5820  00EE1E  69                 	db	105	;'i'
  5821  00EE1F  6D                 	db	109	;'m'
  5822  00EE20  6D                 	db	109	;'m'
  5823  00EE21  69                 	db	105	;'i'
  5824  00EE22  6E                 	db	110	;'n'
  5825  00EE23  67                 	db	103	;'g'
  5826  00EE24  20                 	db	32
  5827  00EE25  64                 	db	100	;'d'
  5828  00EE26  69                 	db	105	;'i'
  5829  00EE27  73                 	db	115	;'s'
  5830  00EE28  61                 	db	97	;'a'
  5831  00EE29  62                 	db	98	;'b'
  5832  00EE2A  6C                 	db	108	;'l'
  5833  00EE2B  65                 	db	101	;'e'
  5834  00EE2C  64                 	db	100	;'d'
  5835  00EE2D  0A                 	db	10
  5836  00EE2E  0D                 	db	13
  5837  00EE2F  20                 	db	32
  5838  00EE30  20                 	db	32
  5839  00EE31  20                 	db	32
  5840  00EE32  44                 	db	68	;'D'
  5841  00EE33  69                 	db	105	;'i'
  5842  00EE34  73                 	db	115	;'s'
  5843  00EE35  61                 	db	97	;'a'
  5844  00EE36  62                 	db	98	;'b'
  5845  00EE37  6C                 	db	108	;'l'
  5846  00EE38  65                 	db	101	;'e'
  5847  00EE39  20                 	db	32
  5848  00EE3A  4C                 	db	76	;'L'
  5849  00EE3B  6F                 	db	111	;'o'
  5850  00EE3C  61                 	db	97	;'a'
  5851  00EE3D  64                 	db	100	;'d'
  5852  00EE3E  3A                 	db	58	;':'
  5853  00EE3F  20                 	db	32
  5854  00EE40  44                 	db	68	;'D'
  5855  00EE41  69                 	db	105	;'i'
  5856  00EE42  73                 	db	115	;'s'
  5857  00EE43  61                 	db	97	;'a'
  5858  00EE44  62                 	db	98	;'b'
  5859  00EE45  6C                 	db	108	;'l'
  5860  00EE46  65                 	db	101	;'e'
  5861  00EE47  73                 	db	115	;'s'
  5862  00EE48  20                 	db	32
  5863  00EE49  74                 	db	116	;'t'
  5864  00EE4A  68                 	db	104	;'h'
  5865  00EE4B  65                 	db	101	;'e'
  5866  00EE4C  20                 	db	32
  5867  00EE4D  6F                 	db	111	;'o'
  5868  00EE4E  75                 	db	117	;'u'
  5869  00EE4F  74                 	db	116	;'t'
  5870  00EE50  70                 	db	112	;'p'
  5871  00EE51  75                 	db	117	;'u'
  5872  00EE52  74                 	db	116	;'t'
  5873  00EE53  20                 	db	32
  5874  00EE54  54                 	db	84	;'T'
  5875  00EE55  52                 	db	82	;'R'
  5876  00EE56  49                 	db	73	;'I'
  5877  00EE57  41                 	db	65	;'A'
  5878  00EE58  43                 	db	67	;'C'
  5879  00EE59  20                 	db	32
  5880  00EE5A  63                 	db	99	;'c'
  5881  00EE5B  6F                 	db	111	;'o'
  5882  00EE5C  6D                 	db	109	;'m'
  5883  00EE5D  70                 	db	112	;'p'
  5884  00EE5E  6C                 	db	108	;'l'
  5885  00EE5F  65                 	db	101	;'e'
  5886  00EE60  74                 	db	116	;'t'
  5887  00EE61  65                 	db	101	;'e'
  5888  00EE62  6C                 	db	108	;'l'
  5889  00EE63  79                 	db	121	;'y'
  5890  00EE64  0A                 	db	10
  5891  00EE65  0D                 	db	13
  5892  00EE66  20                 	db	32
  5893  00EE67  20                 	db	32
  5894  00EE68  20                 	db	32
  5895  00EE69  4C                 	db	76	;'L'
  5896  00EE6A  6F                 	db	111	;'o'
  5897  00EE6B  61                 	db	97	;'a'
  5898  00EE6C  64                 	db	100	;'d'
  5899  00EE6D  20                 	db	32
  5900  00EE6E  45                 	db	69	;'E'
  5901  00EE6F  6E                 	db	110	;'n'
  5902  00EE70  61                 	db	97	;'a'
  5903  00EE71  62                 	db	98	;'b'
  5904  00EE72  6C                 	db	108	;'l'
  5905  00EE73  65                 	db	101	;'e'
  5906  00EE74  64                 	db	100	;'d'
  5907  00EE75  3F                 	db	63	;'?'
  5908  00EE76  3A                 	db	58	;':'
  5909  00EE77  20                 	db	32
  5910  00EE78  52                 	db	82	;'R'
  5911  00EE79  65                 	db	101	;'e'
  5912  00EE7A  74                 	db	116	;'t'
  5913  00EE7B  75                 	db	117	;'u'
  5914  00EE7C  72                 	db	114	;'r'
  5915  00EE7D  6E                 	db	110	;'n'
  5916  00EE7E  73                 	db	115	;'s'
  5917  00EE7F  20                 	db	32
  5918  00EE80  69                 	db	105	;'i'
  5919  00EE81  66                 	db	102	;'f'
  5920  00EE82  20                 	db	32
  5921  00EE83  74                 	db	116	;'t'
  5922  00EE84  68                 	db	104	;'h'
  5923  00EE85  65                 	db	101	;'e'
  5924  00EE86  20                 	db	32
  5925  00EE87  6F                 	db	111	;'o'
  5926  00EE88  75                 	db	117	;'u'
  5927  00EE89  74                 	db	116	;'t'
  5928  00EE8A  70                 	db	112	;'p'
  5929  00EE8B  75                 	db	117	;'u'
  5930  00EE8C  74                 	db	116	;'t'
  5931  00EE8D  20                 	db	32
  5932  00EE8E  6C                 	db	108	;'l'
  5933  00EE8F  6F                 	db	111	;'o'
  5934  00EE90  61                 	db	97	;'a'
  5935  00EE91  64                 	db	100	;'d'
  5936  00EE92  20                 	db	32
  5937  00EE93  69                 	db	105	;'i'
  5938  00EE94  73                 	db	115	;'s'
  5939  00EE95  20                 	db	32
  5940  00EE96  65                 	db	101	;'e'
  5941  00EE97  6E                 	db	110	;'n'
  5942  00EE98  61                 	db	97	;'a'
  5943  00EE99  62                 	db	98	;'b'
  5944  00EE9A  6C                 	db	108	;'l'
  5945  00EE9B  65                 	db	101	;'e'
  5946  00EE9C  64                 	db	100	;'d'
  5947  00EE9D  20                 	db	32
  5948  00EE9E  6F                 	db	111	;'o'
  5949  00EE9F  72                 	db	114	;'r'
  5950  00EEA0  20                 	db	32
  5951  00EEA1  64                 	db	100	;'d'
  5952  00EEA2  69                 	db	105	;'i'
  5953  00EEA3  73                 	db	115	;'s'
  5954  00EEA4  61                 	db	97	;'a'
  5955  00EEA5  62                 	db	98	;'b'
  5956  00EEA6  6C                 	db	108	;'l'
  5957  00EEA7  65                 	db	101	;'e'
  5958  00EEA8  64                 	db	100	;'d'
  5959  00EEA9  0A                 	db	10
  5960  00EEAA  0D                 	db	13
  5961  00EEAB  20                 	db	32
  5962  00EEAC  20                 	db	32
  5963  00EEAD  20                 	db	32
  5964  00EEAE  44                 	db	68	;'D'
  5965  00EEAF  69                 	db	105	;'i'
  5966  00EEB0  6D                 	db	109	;'m'
  5967  00EEB1  6D                 	db	109	;'m'
  5968  00EEB2  69                 	db	105	;'i'
  5969  00EEB3  6E                 	db	110	;'n'
  5970  00EEB4  67                 	db	103	;'g'
  5971  00EEB5  20                 	db	32
  5972  00EEB6  45                 	db	69	;'E'
  5973  00EEB7  6E                 	db	110	;'n'
  5974  00EEB8  61                 	db	97	;'a'
  5975  00EEB9  62                 	db	98	;'b'
  5976  00EEBA  6C                 	db	108	;'l'
  5977  00EEBB  65                 	db	101	;'e'
  5978  00EEBC  64                 	db	100	;'d'
  5979  00EEBD  3F                 	db	63	;'?'
  5980  00EEBE  3A                 	db	58	;':'
  5981  00EEBF  20                 	db	32
  5982  00EEC0  52                 	db	82	;'R'
  5983  00EEC1  65                 	db	101	;'e'
  5984  00EEC2  74                 	db	116	;'t'
  5985  00EEC3  75                 	db	117	;'u'
  5986  00EEC4  72                 	db	114	;'r'
  5987  00EEC5  6E                 	db	110	;'n'
  5988  00EEC6  73                 	db	115	;'s'
  5989  00EEC7  20                 	db	32
  5990  00EEC8  69                 	db	105	;'i'
  5991  00EEC9  66                 	db	102	;'f'
  5992  00EECA  20                 	db	32
  5993  00EECB  64                 	db	100	;'d'
  5994  00EECC  69                 	db	105	;'i'
  5995  00EECD  6D                 	db	109	;'m'
  5996  00EECE  6D                 	db	109	;'m'
  5997  00EECF  69                 	db	105	;'i'
  5998  00EED0  6E                 	db	110	;'n'
  5999  00EED1  67                 	db	103	;'g'
  6000  00EED2  20                 	db	32
  6001  00EED3  6F                 	db	111	;'o'
  6002  00EED4  66                 	db	102	;'f'
  6003  00EED5  20                 	db	32
  6004  00EED6  74                 	db	116	;'t'
  6005  00EED7  68                 	db	104	;'h'
  6006  00EED8  65                 	db	101	;'e'
  6007  00EED9  20                 	db	32
  6008  00EEDA  6F                 	db	111	;'o'
  6009  00EEDB  75                 	db	117	;'u'
  6010  00EEDC  74                 	db	116	;'t'
  6011  00EEDD  70                 	db	112	;'p'
  6012  00EEDE  75                 	db	117	;'u'
  6013  00EEDF  74                 	db	116	;'t'
  6014  00EEE0  20                 	db	32
  6015  00EEE1  6C                 	db	108	;'l'
  6016  00EEE2  6F                 	db	111	;'o'
  6017  00EEE3  61                 	db	97	;'a'
  6018  00EEE4  64                 	db	100	;'d'
  6019  00EEE5  20                 	db	32
  6020  00EEE6  69                 	db	105	;'i'
  6021  00EEE7  73                 	db	115	;'s'
  6022  00EEE8  20                 	db	32
  6023  00EEE9  65                 	db	101	;'e'
  6024  00EEEA  6E                 	db	110	;'n'
  6025  00EEEB  61                 	db	97	;'a'
  6026  00EEEC  62                 	db	98	;'b'
  6027  00EEED  6C                 	db	108	;'l'
  6028  00EEEE  65                 	db	101	;'e'
  6029  00EEEF  64                 	db	100	;'d'
  6030  00EEF0  20                 	db	32
  6031  00EEF1  6F                 	db	111	;'o'
  6032  00EEF2  72                 	db	114	;'r'
  6033  00EEF3  20                 	db	32
  6034  00EEF4  6E                 	db	110	;'n'
  6035  00EEF5  6F                 	db	111	;'o'
  6036  00EEF6  74                 	db	116	;'t'
  6037  00EEF7  0A                 	db	10
  6038  00EEF8  0D                 	db	13
  6039  00EEF9  20                 	db	32
  6040  00EEFA  20                 	db	32
  6041  00EEFB  20                 	db	32
  6042  00EEFC  53                 	db	83	;'S'
  6043  00EEFD  65                 	db	101	;'e'
  6044  00EEFE  74                 	db	116	;'t'
  6045  00EEFF  20                 	db	32
  6046  00EF00  44                 	db	68	;'D'
  6047  00EF01  69                 	db	105	;'i'
  6048  00EF02  6D                 	db	109	;'m'
  6049  00EF03  6D                 	db	109	;'m'
  6050  00EF04  69                 	db	105	;'i'
  6051  00EF05  6E                 	db	110	;'n'
  6052  00EF06  67                 	db	103	;'g'
  6053  00EF07  20                 	db	32
  6054  00EF08  50                 	db	80	;'P'
  6055  00EF09  65                 	db	101	;'e'
  6056  00EF0A  72                 	db	114	;'r'
  6057  00EF0B  63                 	db	99	;'c'
  6058  00EF0C  65                 	db	101	;'e'
  6059  00EF0D  6E                 	db	110	;'n'
  6060  00EF0E  74                 	db	116	;'t'
  6061  00EF0F  61                 	db	97	;'a'
  6062  00EF10  67                 	db	103	;'g'
  6063  00EF11  65                 	db	101	;'e'
  6064  00EF12  3A                 	db	58	;':'
  6065  00EF13  20                 	db	32
  6066  00EF14  3C                 	db	60	;'<'
  6067  00EF15  78                 	db	120	;'x'
  6068  00EF16  3E                 	db	62	;'>'
  6069  00EF17  3A                 	db	58	;':'
  6070  00EF18  20                 	db	32
  6071  00EF19  53                 	db	83	;'S'
  6072  00EF1A  65                 	db	101	;'e'
  6073  00EF1B  74                 	db	116	;'t'
  6074  00EF1C  73                 	db	115	;'s'
  6075  00EF1D  20                 	db	32
  6076  00EF1E  74                 	db	116	;'t'
  6077  00EF1F  68                 	db	104	;'h'
  6078  00EF20  65                 	db	101	;'e'
  6079  00EF21  20                 	db	32
  6080  00EF22  6F                 	db	111	;'o'
  6081  00EF23  75                 	db	117	;'u'
  6082  00EF24  74                 	db	116	;'t'
  6083  00EF25  70                 	db	112	;'p'
  6084  00EF26  75                 	db	117	;'u'
  6085  00EF27  74                 	db	116	;'t'
  6086  00EF28  20                 	db	32
  6087  00EF29  64                 	db	100	;'d'
  6088  00EF2A  69                 	db	105	;'i'
  6089  00EF2B  6D                 	db	109	;'m'
  6090  00EF2C  6D                 	db	109	;'m'
  6091  00EF2D  69                 	db	105	;'i'
  6092  00EF2E  6E                 	db	110	;'n'
  6093  00EF2F  67                 	db	103	;'g'
  6094  00EF30  20                 	db	32
  6095  00EF31  70                 	db	112	;'p'
  6096  00EF32  65                 	db	101	;'e'
  6097  00EF33  72                 	db	114	;'r'
  6098  00EF34  63                 	db	99	;'c'
  6099  00EF35  65                 	db	101	;'e'
  6100  00EF36  6E                 	db	110	;'n'
  6101  00EF37  74                 	db	116	;'t'
  6102  00EF38  61                 	db	97	;'a'
  6103  00EF39  67                 	db	103	;'g'
  6104  00EF3A  65                 	db	101	;'e'
  6105  00EF3B  20                 	db	32
  6106  00EF3C  61                 	db	97	;'a'
  6107  00EF3D  73                 	db	115	;'s'
  6108  00EF3E  20                 	db	32
  6109  00EF3F  78                 	db	120	;'x'
  6110  00EF40  20                 	db	32
  6111  00EF41  70                 	db	112	;'p'
  6112  00EF42  65                 	db	101	;'e'
  6113  00EF43  72                 	db	114	;'r'
  6114  00EF44  63                 	db	99	;'c'
  6115  00EF45  65                 	db	101	;'e'
  6116  00EF46  6E                 	db	110	;'n'
  6117  00EF47  74                 	db	116	;'t'
  6118  00EF48  0A                 	db	10
  6119  00EF49  0D                 	db	13
  6120  00EF4A  0A                 	db	10
  6121  00EF4B  0D                 	db	13
  6122  00EF4C  00                 	db	0
  6123  00EF4D                     STR_145:
  6124  00EF4D  50                 	db	80	;'P'
  6125  00EF4E  6C                 	db	108	;'l'
  6126  00EF4F  65                 	db	101	;'e'
  6127  00EF50  61                 	db	97	;'a'
  6128  00EF51  73                 	db	115	;'s'
  6129  00EF52  65                 	db	101	;'e'
  6130  00EF53  20                 	db	32
  6131  00EF54  73                 	db	115	;'s'
  6132  00EF55  70                 	db	112	;'p'
  6133  00EF56  65                 	db	101	;'e'
  6134  00EF57  63                 	db	99	;'c'
  6135  00EF58  69                 	db	105	;'i'
  6136  00EF59  66                 	db	102	;'f'
  6137  00EF5A  79                 	db	121	;'y'
  6138  00EF5B  20                 	db	32
  6139  00EF5C  77                 	db	119	;'w'
  6140  00EF5D  68                 	db	104	;'h'
  6141  00EF5E  61                 	db	97	;'a'
  6142  00EF5F  74                 	db	116	;'t'
  6143  00EF60  20                 	db	32
  6144  00EF61  74                 	db	116	;'t'
  6145  00EF62  79                 	db	121	;'y'
  6146  00EF63  70                 	db	112	;'p'
  6147  00EF64  65                 	db	101	;'e'
  6148  00EF65  20                 	db	32
  6149  00EF66  6F                 	db	111	;'o'
  6150  00EF67  66                 	db	102	;'f'
  6151  00EF68  20                 	db	32
  6152  00EF69  63                 	db	99	;'c'
  6153  00EF6A  6F                 	db	111	;'o'
  6154  00EF6B  6D                 	db	109	;'m'
  6155  00EF6C  6D                 	db	109	;'m'
  6156  00EF6D  61                 	db	97	;'a'
  6157  00EF6E  6E                 	db	110	;'n'
  6158  00EF6F  64                 	db	100	;'d'
  6159  00EF70  73                 	db	115	;'s'
  6160  00EF71  20                 	db	32
  6161  00EF72  79                 	db	121	;'y'
  6162  00EF73  6F                 	db	111	;'o'
  6163  00EF74  75                 	db	117	;'u'
  6164  00EF75  27                 	db	39
  6165  00EF76  64                 	db	100	;'d'
  6166  00EF77  20                 	db	32
  6167  00EF78  6C                 	db	108	;'l'
  6168  00EF79  69                 	db	105	;'i'
  6169  00EF7A  6B                 	db	107	;'k'
  6170  00EF7B  65                 	db	101	;'e'
  6171  00EF7C  20                 	db	32
  6172  00EF7D  68                 	db	104	;'h'
  6173  00EF7E  65                 	db	101	;'e'
  6174  00EF7F  6C                 	db	108	;'l'
  6175  00EF80  70                 	db	112	;'p'
  6176  00EF81  20                 	db	32
  6177  00EF82  77                 	db	119	;'w'
  6178  00EF83  69                 	db	105	;'i'
  6179  00EF84  74                 	db	116	;'t'
  6180  00EF85  68                 	db	104	;'h'
  6181  00EF86  3A                 	db	58	;':'
  6182  00EF87  0A                 	db	10
  6183  00EF88  0D                 	db	13
  6184  00EF89  54                 	db	84	;'T'
  6185  00EF8A  72                 	db	114	;'r'
  6186  00EF8B  79                 	db	121	;'y'
  6187  00EF8C  20                 	db	32
  6188  00EF8D  27                 	db	39
  6189  00EF8E  48                 	db	72	;'H'
  6190  00EF8F  65                 	db	101	;'e'
  6191  00EF90  6C                 	db	108	;'l'
  6192  00EF91  70                 	db	112	;'p'
  6193  00EF92  20                 	db	32
  6194  00EF93  3C                 	db	60	;'<'
  6195  00EF94  63                 	db	99	;'c'
  6196  00EF95  6F                 	db	111	;'o'
  6197  00EF96  6D                 	db	109	;'m'
  6198  00EF97  6D                 	db	109	;'m'
  6199  00EF98  61                 	db	97	;'a'
  6200  00EF99  6E                 	db	110	;'n'
  6201  00EF9A  64                 	db	100	;'d'
  6202  00EF9B  20                 	db	32
  6203  00EF9C  73                 	db	115	;'s'
  6204  00EF9D  65                 	db	101	;'e'
  6205  00EF9E  74                 	db	116	;'t'
  6206  00EF9F  3E                 	db	62	;'>'
  6207  00EFA0  27                 	db	39
  6208  00EFA1  0A                 	db	10
  6209  00EFA2  0D                 	db	13
  6210  00EFA3  0A                 	db	10
  6211  00EFA4  0D                 	db	13
  6212  00EFA5  53                 	db	83	;'S'
  6213  00EFA6  75                 	db	117	;'u'
  6214  00EFA7  70                 	db	112	;'p'
  6215  00EFA8  70                 	db	112	;'p'
  6216  00EFA9  6F                 	db	111	;'o'
  6217  00EFAA  72                 	db	114	;'r'
  6218  00EFAB  74                 	db	116	;'t'
  6219  00EFAC  65                 	db	101	;'e'
  6220  00EFAD  64                 	db	100	;'d'
  6221  00EFAE  20                 	db	32
  6222  00EFAF  43                 	db	67	;'C'
  6223  00EFB0  6F                 	db	111	;'o'
  6224  00EFB1  6D                 	db	109	;'m'
  6225  00EFB2  6D                 	db	109	;'m'
  6226  00EFB3  61                 	db	97	;'a'
  6227  00EFB4  6E                 	db	110	;'n'
  6228  00EFB5  64                 	db	100	;'d'
  6229  00EFB6  20                 	db	32
  6230  00EFB7  53                 	db	83	;'S'
  6231  00EFB8  65                 	db	101	;'e'
  6232  00EFB9  74                 	db	116	;'t'
  6233  00EFBA  73                 	db	115	;'s'
  6234  00EFBB  3A                 	db	58	;':'
  6235  00EFBC  0A                 	db	10
  6236  00EFBD  0D                 	db	13
  6237  00EFBE  20                 	db	32
  6238  00EFBF  20                 	db	32
  6239  00EFC0  20                 	db	32
  6240  00EFC1  44                 	db	68	;'D'
  6241  00EFC2  65                 	db	101	;'e'
  6242  00EFC3  76                 	db	118	;'v'
  6243  00EFC4  69                 	db	105	;'i'
  6244  00EFC5  63                 	db	99	;'c'
  6245  00EFC6  65                 	db	101	;'e'
  6246  00EFC7  20                 	db	32
  6247  00EFC8  43                 	db	67	;'C'
  6248  00EFC9  6F                 	db	111	;'o'
  6249  00EFCA  6E                 	db	110	;'n'
  6250  00EFCB  74                 	db	116	;'t'
  6251  00EFCC  72                 	db	114	;'r'
  6252  00EFCD  6F                 	db	111	;'o'
  6253  00EFCE  6C                 	db	108	;'l'
  6254  00EFCF  20                 	db	32
  6255  00EFD0  43                 	db	67	;'C'
  6256  00EFD1  6F                 	db	111	;'o'
  6257  00EFD2  6D                 	db	109	;'m'
  6258  00EFD3  6D                 	db	109	;'m'
  6259  00EFD4  61                 	db	97	;'a'
  6260  00EFD5  6E                 	db	110	;'n'
  6261  00EFD6  64                 	db	100	;'d'
  6262  00EFD7  73                 	db	115	;'s'
  6263  00EFD8  3A                 	db	58	;':'
  6264  00EFD9  20                 	db	32
  6265  00EFDA  43                 	db	67	;'C'
  6266  00EFDB  6F                 	db	111	;'o'
  6267  00EFDC  6D                 	db	109	;'m'
  6268  00EFDD  6D                 	db	109	;'m'
  6269  00EFDE  61                 	db	97	;'a'
  6270  00EFDF  6E                 	db	110	;'n'
  6271  00EFE0  64                 	db	100	;'d'
  6272  00EFE1  73                 	db	115	;'s'
  6273  00EFE2  20                 	db	32
  6274  00EFE3  74                 	db	116	;'t'
  6275  00EFE4  6F                 	db	111	;'o'
  6276  00EFE5  20                 	db	32
  6277  00EFE6  76                 	db	118	;'v'
  6278  00EFE7  69                 	db	105	;'i'
  6279  00EFE8  65                 	db	101	;'e'
  6280  00EFE9  77                 	db	119	;'w'
  6281  00EFEA  20                 	db	32
  6282  00EFEB  61                 	db	97	;'a'
  6283  00EFEC  6E                 	db	110	;'n'
  6284  00EFED  64                 	db	100	;'d'
  6285  00EFEE  20                 	db	32
  6286  00EFEF  63                 	db	99	;'c'
  6287  00EFF0  6F                 	db	111	;'o'
  6288  00EFF1  6E                 	db	110	;'n'
  6289  00EFF2  74                 	db	116	;'t'
  6290  00EFF3  72                 	db	114	;'r'
  6291  00EFF4  6F                 	db	111	;'o'
  6292  00EFF5  6C                 	db	108	;'l'
  6293  00EFF6  20                 	db	32
  6294  00EFF7  6C                 	db	108	;'l'
  6295  00EFF8  6F                 	db	111	;'o'
  6296  00EFF9  77                 	db	119	;'w'
  6297  00EFFA  20                 	db	32
  6298  00EFFB  6C                 	db	108	;'l'
  6299  00EFFC  65                 	db	101	;'e'
  6300  00EFFD  76                 	db	118	;'v'
  6301  00EFFE  65                 	db	101	;'e'
  6302  00EFFF  6C                 	db	108	;'l'
  6303  00F000  20                 	db	32
  6304  00F001  73                 	db	115	;'s'
  6305  00F002  79                 	db	121	;'y'
  6306  00F003  73                 	db	115	;'s'
  6307  00F004  74                 	db	116	;'t'
  6308  00F005  65                 	db	101	;'e'
  6309  00F006  6D                 	db	109	;'m'
  6310  00F007  20                 	db	32
  6311  00F008  66                 	db	102	;'f'
  6312  00F009  75                 	db	117	;'u'
  6313  00F00A  6E                 	db	110	;'n'
  6314  00F00B  63                 	db	99	;'c'
  6315  00F00C  74                 	db	116	;'t'
  6316  00F00D  69                 	db	105	;'i'
  6317  00F00E  6F                 	db	111	;'o'
  6318  00F00F  6E                 	db	110	;'n'
  6319  00F010  61                 	db	97	;'a'
  6320  00F011  6C                 	db	108	;'l'
  6321  00F012  69                 	db	105	;'i'
  6322  00F013  74                 	db	116	;'t'
  6323  00F014  79                 	db	121	;'y'
  6324  00F015  0A                 	db	10
  6325  00F016  0D                 	db	13
  6326  00F017  20                 	db	32
  6327  00F018  20                 	db	32
  6328  00F019  20                 	db	32
  6329  00F01A  44                 	db	68	;'D'
  6330  00F01B  65                 	db	101	;'e'
  6331  00F01C  76                 	db	118	;'v'
  6332  00F01D  69                 	db	105	;'i'
  6333  00F01E  63                 	db	99	;'c'
  6334  00F01F  65                 	db	101	;'e'
  6335  00F020  20                 	db	32
  6336  00F021  4D                 	db	77	;'M'
  6337  00F022  65                 	db	101	;'e'
  6338  00F023  61                 	db	97	;'a'
  6339  00F024  73                 	db	115	;'s'
  6340  00F025  75                 	db	117	;'u'
  6341  00F026  72                 	db	114	;'r'
  6342  00F027  65                 	db	101	;'e'
  6343  00F028  6D                 	db	109	;'m'
  6344  00F029  65                 	db	101	;'e'
  6345  00F02A  6E                 	db	110	;'n'
  6346  00F02B  74                 	db	116	;'t'
  6347  00F02C  20                 	db	32
  6348  00F02D  43                 	db	67	;'C'
  6349  00F02E  6F                 	db	111	;'o'
  6350  00F02F  6D                 	db	109	;'m'
  6351  00F030  6D                 	db	109	;'m'
  6352  00F031  61                 	db	97	;'a'
  6353  00F032  6E                 	db	110	;'n'
  6354  00F033  64                 	db	100	;'d'
  6355  00F034  73                 	db	115	;'s'
  6356  00F035  3A                 	db	58	;':'
  6357  00F036  20                 	db	32
  6358  00F037  56                 	db	86	;'V'
  6359  00F038  69                 	db	105	;'i'
  6360  00F039  65                 	db	101	;'e'
  6361  00F03A  77                 	db	119	;'w'
  6362  00F03B  20                 	db	32
  6363  00F03C  6C                 	db	108	;'l'
  6364  00F03D  6F                 	db	111	;'o'
  6365  00F03E  77                 	db	119	;'w'
  6366  00F03F  20                 	db	32
  6367  00F040  6C                 	db	108	;'l'
  6368  00F041  65                 	db	101	;'e'
  6369  00F042  76                 	db	118	;'v'
  6370  00F043  65                 	db	101	;'e'
  6371  00F044  6C                 	db	108	;'l'
  6372  00F045  20                 	db	32
  6373  00F046  73                 	db	115	;'s'
  6374  00F047  79                 	db	121	;'y'
  6375  00F048  73                 	db	115	;'s'
  6376  00F049  74                 	db	116	;'t'
  6377  00F04A  65                 	db	101	;'e'
  6378  00F04B  6D                 	db	109	;'m'
  6379  00F04C  20                 	db	32
  6380  00F04D  6D                 	db	109	;'m'
  6381  00F04E  65                 	db	101	;'e'
  6382  00F04F  61                 	db	97	;'a'
  6383  00F050  73                 	db	115	;'s'
  6384  00F051  75                 	db	117	;'u'
  6385  00F052  72                 	db	114	;'r'
  6386  00F053  65                 	db	101	;'e'
  6387  00F054  6D                 	db	109	;'m'
  6388  00F055  65                 	db	101	;'e'
  6389  00F056  6E                 	db	110	;'n'
  6390  00F057  74                 	db	116	;'t'
  6391  00F058  73                 	db	115	;'s'
  6392  00F059  0A                 	db	10
  6393  00F05A  0D                 	db	13
  6394  00F05B  20                 	db	32
  6395  00F05C  20                 	db	32
  6396  00F05D  20                 	db	32
  6397  00F05E  50                 	db	80	;'P'
  6398  00F05F  72                 	db	114	;'r'
  6399  00F060  69                 	db	105	;'i'
  6400  00F061  6D                 	db	109	;'m'
  6401  00F062  61                 	db	97	;'a'
  6402  00F063  72                 	db	114	;'r'
  6403  00F064  79                 	db	121	;'y'
  6404  00F065  20                 	db	32
  6405  00F066  4D                 	db	77	;'M'
  6406  00F067  65                 	db	101	;'e'
  6407  00F068  61                 	db	97	;'a'
  6408  00F069  73                 	db	115	;'s'
  6409  00F06A  75                 	db	117	;'u'
  6410  00F06B  72                 	db	114	;'r'
  6411  00F06C  65                 	db	101	;'e'
  6412  00F06D  6D                 	db	109	;'m'
  6413  00F06E  65                 	db	101	;'e'
  6414  00F06F  6E                 	db	110	;'n'
  6415  00F070  74                 	db	116	;'t'
  6416  00F071  20                 	db	32
  6417  00F072  43                 	db	67	;'C'
  6418  00F073  6F                 	db	111	;'o'
  6419  00F074  6D                 	db	109	;'m'
  6420  00F075  6D                 	db	109	;'m'
  6421  00F076  61                 	db	97	;'a'
  6422  00F077  6E                 	db	110	;'n'
  6423  00F078  64                 	db	100	;'d'
  6424  00F079  73                 	db	115	;'s'
  6425  00F07A  3A                 	db	58	;':'
  6426  00F07B  20                 	db	32
  6427  00F07C  56                 	db	86	;'V'
  6428  00F07D  69                 	db	105	;'i'
  6429  00F07E  65                 	db	101	;'e'
  6430  00F07F  77                 	db	119	;'w'
  6431  00F080  20                 	db	32
  6432  00F081  68                 	db	104	;'h'
  6433  00F082  69                 	db	105	;'i'
  6434  00F083  67                 	db	103	;'g'
  6435  00F084  68                 	db	104	;'h'
  6436  00F085  20                 	db	32
  6437  00F086  6C                 	db	108	;'l'
  6438  00F087  65                 	db	101	;'e'
  6439  00F088  76                 	db	118	;'v'
  6440  00F089  65                 	db	101	;'e'
  6441  00F08A  6C                 	db	108	;'l'
  6442  00F08B  20                 	db	32
  6443  00F08C  6F                 	db	111	;'o'
  6444  00F08D  75                 	db	117	;'u'
  6445  00F08E  74                 	db	116	;'t'
  6446  00F08F  70                 	db	112	;'p'
  6447  00F090  75                 	db	117	;'u'
  6448  00F091  74                 	db	116	;'t'
  6449  00F092  20                 	db	32
  6450  00F093  6D                 	db	109	;'m'
  6451  00F094  65                 	db	101	;'e'
  6452  00F095  61                 	db	97	;'a'
  6453  00F096  73                 	db	115	;'s'
  6454  00F097  75                 	db	117	;'u'
  6455  00F098  72                 	db	114	;'r'
  6456  00F099  65                 	db	101	;'e'
  6457  00F09A  6D                 	db	109	;'m'
  6458  00F09B  65                 	db	101	;'e'
  6459  00F09C  6E                 	db	110	;'n'
  6460  00F09D  74                 	db	116	;'t'
  6461  00F09E  73                 	db	115	;'s'
  6462  00F09F  20                 	db	32
  6463  00F0A0  61                 	db	97	;'a'
  6464  00F0A1  6E                 	db	110	;'n'
  6465  00F0A2  64                 	db	100	;'d'
  6466  00F0A3  20                 	db	32
  6467  00F0A4  63                 	db	99	;'c'
  6468  00F0A5  61                 	db	97	;'a'
  6469  00F0A6  6C                 	db	108	;'l'
  6470  00F0A7  63                 	db	99	;'c'
  6471  00F0A8  75                 	db	117	;'u'
  6472  00F0A9  6C                 	db	108	;'l'
  6473  00F0AA  61                 	db	97	;'a'
  6474  00F0AB  74                 	db	116	;'t'
  6475  00F0AC  69                 	db	105	;'i'
  6476  00F0AD  6F                 	db	111	;'o'
  6477  00F0AE  6E                 	db	110	;'n'
  6478  00F0AF  73                 	db	115	;'s'
  6479  00F0B0  0A                 	db	10
  6480  00F0B1  0D                 	db	13
  6481  00F0B2  20                 	db	32
  6482  00F0B3  20                 	db	32
  6483  00F0B4  20                 	db	32
  6484  00F0B5  4F                 	db	79	;'O'
  6485  00F0B6  75                 	db	117	;'u'
  6486  00F0B7  74                 	db	116	;'t'
  6487  00F0B8  70                 	db	112	;'p'
  6488  00F0B9  75                 	db	117	;'u'
  6489  00F0BA  74                 	db	116	;'t'
  6490  00F0BB  20                 	db	32
  6491  00F0BC  43                 	db	67	;'C'
  6492  00F0BD  6F                 	db	111	;'o'
  6493  00F0BE  6E                 	db	110	;'n'
  6494  00F0BF  74                 	db	116	;'t'
  6495  00F0C0  72                 	db	114	;'r'
  6496  00F0C1  6F                 	db	111	;'o'
  6497  00F0C2  6C                 	db	108	;'l'
  6498  00F0C3  20                 	db	32
  6499  00F0C4  43                 	db	67	;'C'
  6500  00F0C5  6F                 	db	111	;'o'
  6501  00F0C6  6D                 	db	109	;'m'
  6502  00F0C7  6D                 	db	109	;'m'
  6503  00F0C8  61                 	db	97	;'a'
  6504  00F0C9  6E                 	db	110	;'n'
  6505  00F0CA  64                 	db	100	;'d'
  6506  00F0CB  73                 	db	115	;'s'
  6507  00F0CC  3A                 	db	58	;':'
  6508  00F0CD  20                 	db	32
  6509  00F0CE  43                 	db	67	;'C'
  6510  00F0CF  6F                 	db	111	;'o'
  6511  00F0D0  6E                 	db	110	;'n'
  6512  00F0D1  74                 	db	116	;'t'
  6513  00F0D2  72                 	db	114	;'r'
  6514  00F0D3  6F                 	db	111	;'o'
  6515  00F0D4  6C                 	db	108	;'l'
  6516  00F0D5  20                 	db	32
  6517  00F0D6  74                 	db	116	;'t'
  6518  00F0D7  68                 	db	104	;'h'
  6519  00F0D8  65                 	db	101	;'e'
  6520  00F0D9  20                 	db	32
  6521  00F0DA  6F                 	db	111	;'o'
  6522  00F0DB  75                 	db	117	;'u'
  6523  00F0DC  74                 	db	116	;'t'
  6524  00F0DD  70                 	db	112	;'p'
  6525  00F0DE  75                 	db	117	;'u'
  6526  00F0DF  74                 	db	116	;'t'
  6527  00F0E0  20                 	db	32
  6528  00F0E1  73                 	db	115	;'s'
  6529  00F0E2  74                 	db	116	;'t'
  6530  00F0E3  61                 	db	97	;'a'
  6531  00F0E4  74                 	db	116	;'t'
  6532  00F0E5  65                 	db	101	;'e'
  6533  00F0E6  20                 	db	32
  6534  00F0E7  61                 	db	97	;'a'
  6535  00F0E8  6E                 	db	110	;'n'
  6536  00F0E9  64                 	db	100	;'d'
  6537  00F0EA  20                 	db	32
  6538  00F0EB  64                 	db	100	;'d'
  6539  00F0EC  69                 	db	105	;'i'
  6540  00F0ED  6D                 	db	109	;'m'
  6541  00F0EE  6D                 	db	109	;'m'
  6542  00F0EF  69                 	db	105	;'i'
  6543  00F0F0  6E                 	db	110	;'n'
  6544  00F0F1  67                 	db	103	;'g'
  6545  00F0F2  20                 	db	32
  6546  00F0F3  66                 	db	102	;'f'
  6547  00F0F4  65                 	db	101	;'e'
  6548  00F0F5  61                 	db	97	;'a'
  6549  00F0F6  74                 	db	116	;'t'
  6550  00F0F7  75                 	db	117	;'u'
  6551  00F0F8  72                 	db	114	;'r'
  6552  00F0F9  65                 	db	101	;'e'
  6553  00F0FA  73                 	db	115	;'s'
  6554  00F0FB  0A                 	db	10
  6555  00F0FC  0D                 	db	13
  6556  00F0FD  0A                 	db	10
  6557  00F0FE  0D                 	db	13
  6558  00F0FF  27                 	db	39
  6559  00F100  48                 	db	72	;'H'
  6560  00F101  65                 	db	101	;'e'
  6561  00F102  6C                 	db	108	;'l'
  6562  00F103  70                 	db	112	;'p'
  6563  00F104  20                 	db	32
  6564  00F105  41                 	db	65	;'A'
  6565  00F106  6C                 	db	108	;'l'
  6566  00F107  6C                 	db	108	;'l'
  6567  00F108  27                 	db	39
  6568  00F109  20                 	db	32
  6569  00F10A  77                 	db	119	;'w'
  6570  00F10B  69                 	db	105	;'i'
  6571  00F10C  6C                 	db	108	;'l'
  6572  00F10D  6C                 	db	108	;'l'
  6573  00F10E  20                 	db	32
  6574  00F10F  6C                 	db	108	;'l'
  6575  00F110  69                 	db	105	;'i'
  6576  00F111  73                 	db	115	;'s'
  6577  00F112  74                 	db	116	;'t'
  6578  00F113  20                 	db	32
  6579  00F114  61                 	db	97	;'a'
  6580  00F115  6C                 	db	108	;'l'
  6581  00F116  6C                 	db	108	;'l'
  6582  00F117  20                 	db	32
  6583  00F118  63                 	db	99	;'c'
  6584  00F119  6F                 	db	111	;'o'
  6585  00F11A  6D                 	db	109	;'m'
  6586  00F11B  6D                 	db	109	;'m'
  6587  00F11C  61                 	db	97	;'a'
  6588  00F11D  6E                 	db	110	;'n'
  6589  00F11E  64                 	db	100	;'d'
  6590  00F11F  73                 	db	115	;'s'
  6591  00F120  0A                 	db	10
  6592  00F121  0D                 	db	13
  6593  00F122  00                 	db	0
  6594  00F123  20                 	db	32
  6595  00F124  20                 	db	32
  6596  00F125  20                 	db	32
  6597  00F126  20                 	db	32
  6598  00F127  42                 	db	66	;'B'
  6599  00F128  6F                 	db	111	;'o'
  6600  00F129  6F                 	db	111	;'o'
  6601  00F12A  74                 	db	116	;'t'
  6602  00F12B  20                 	db	32
  6603  00F12C  63                 	db	99	;'c'
  6604  00F12D  6F                 	db	111	;'o'
  6605  00F12E  6D                 	db	109	;'m'
  6606  00F12F  70                 	db	112	;'p'
  6607  00F130  6C                 	db	108	;'l'
  6608  00F131  65                 	db	101	;'e'
  6609  00F132  74                 	db	116	;'t'
  6610  00F133  65                 	db	101	;'e'
  6611  00F134  0A                 	db	10
  6612  00F135  0D                 	db	13
  6613  00F136  20                 	db	32
  6614  00F137  20                 	db	32
  6615  00F138  20                 	db	32
  6616  00F139  20                 	db	32
  6617  00F13A  50                 	db	80	;'P'
  6618  00F13B  49                 	db	73	;'I'
  6619  00F13C  43                 	db	67	;'C'
  6620  00F13D  31                 	db	49	;'1'
  6621  00F13E  38                 	db	56	;'8'
  6622  00F13F  46                 	db	70	;'F'
  6623  00F140  36                 	db	54	;'6'
  6624  00F141  37                 	db	55	;'7'
  6625  00F142  4B                 	db	75	;'K'
  6626  00F143  34                 	db	52	;'4'
  6627  00F144  30                 	db	48	;'0'
  6628  00F145  20                 	db	32
  6629  00F146  6D                 	db	109	;'m'
  6630  00F147  54                 	db	84	;'T'
  6631  00F148  6F                 	db	111	;'o'
  6632  00F149  75                 	db	117	;'u'
  6633  00F14A  63                 	db	99	;'c'
  6634  00F14B  68                 	db	104	;'h'
  6635  00F14C  20                 	db	32
  6636  00F14D  54                 	db	84	;'T'
  6637  00F14E  65                 	db	101	;'e'
  6638  00F14F  73                 	db	115	;'s'
  6639  00F150  74                 	db	116	;'t'
  6640  00F151  20                 	db	32
  6641  00F152  42                 	db	66	;'B'
  6642  00F153  6F                 	db	111	;'o'
  6643  00F154  61                 	db	97	;'a'
  6644  00F155  72                 	db	114	;'r'
  6645  00F156  64                 	db	100	;'d'
  6646  00F157  0A                 	db	10
  6647  00F158  0D                 	db	13
  6648  00F159  20                 	db	32
  6649  00F15A  20                 	db	32
  6650  00F15B  20                 	db	32
  6651  00F15C  20                 	db	32
  6652  00F15D  45                 	db	69	;'E'
  6653  00F15E  76                 	db	118	;'v'
  6654  00F15F  61                 	db	97	;'a'
  6655  00F160  6C                 	db	108	;'l'
  6656  00F161  75                 	db	117	;'u'
  6657  00F162  61                 	db	97	;'a'
  6658  00F163  74                 	db	116	;'t'
  6659  00F164  65                 	db	101	;'e'
  6660  00F165  73                 	db	115	;'s'
  6661  00F166  20                 	db	32
  6662  00F167  74                 	db	116	;'t'
  6663  00F168  68                 	db	104	;'h'
  6664  00F169  65                 	db	101	;'e'
  6665  00F16A  20                 	db	32
  6666  00F16B  6D                 	db	109	;'m'
  6667  00F16C  54                 	db	84	;'T'
  6668  00F16D  6F                 	db	111	;'o'
  6669  00F16E  75                 	db	117	;'u'
  6670  00F16F  63                 	db	99	;'c'
  6671  00F170  68                 	db	104	;'h'
  6672  00F171  20                 	db	32
  6673  00F172  63                 	db	99	;'c'
  6674  00F173  61                 	db	97	;'a'
  6675  00F174  70                 	db	112	;'p'
  6676  00F175  61                 	db	97	;'a'
  6677  00F176  63                 	db	99	;'c'
  6678  00F177  69                 	db	105	;'i'
  6679  00F178  74                 	db	116	;'t'
  6680  00F179  69                 	db	105	;'i'
  6681  00F17A  76                 	db	118	;'v'
  6682  00F17B  65                 	db	101	;'e'
  6683  00F17C  20                 	db	32
  6684  00F17D  74                 	db	116	;'t'
  6685  00F17E  6F                 	db	111	;'o'
  6686  00F17F  75                 	db	117	;'u'
  6687  00F180  63                 	db	99	;'c'
  6688  00F181  68                 	db	104	;'h'
  6689  00F182  20                 	db	32
  6690  00F183  6C                 	db	108	;'l'
  6691  00F184  69                 	db	105	;'i'
  6692  00F185  62                 	db	98	;'b'
  6693  00F186  72                 	db	114	;'r'
  6694  00F187  61                 	db	97	;'a'
  6695  00F188  72                 	db	114	;'r'
  6696  00F189  79                 	db	121	;'y'
  6697  00F18A  20                 	db	32
  6698  00F18B  64                 	db	100	;'d'
  6699  00F18C  69                 	db	105	;'i'
  6700  00F18D  73                 	db	115	;'s'
  6701  00F18E  74                 	db	116	;'t'
  6702  00F18F  72                 	db	114	;'r'
  6703  00F190  69                 	db	105	;'i'
  6704  00F191  62                 	db	98	;'b'
  6705  00F192  75                 	db	117	;'u'
  6706  00F193  74                 	db	116	;'t'
  6707  00F194  65                 	db	101	;'e'
  6708  00F195  64                 	db	100	;'d'
  6709  00F196  20                 	db	32
  6710  00F197  62                 	db	98	;'b'
  6711  00F198  79                 	db	121	;'y'
  6712  00F199  20                 	db	32
  6713  00F19A  4D                 	db	77	;'M'
  6714  00F19B  69                 	db	105	;'i'
  6715  00F19C  63                 	db	99	;'c'
  6716  00F19D  72                 	db	114	;'r'
  6717  00F19E  6F                 	db	111	;'o'
  6718  00F19F  63                 	db	99	;'c'
  6719  00F1A0  68                 	db	104	;'h'
  6720  00F1A1  69                 	db	105	;'i'
  6721  00F1A2  70                 	db	112	;'p'
  6722  00F1A3  0A                 	db	10
  6723  00F1A4  0D                 	db	13
  6724  00F1A5  20                 	db	32
  6725  00F1A6  20                 	db	32
  6726  00F1A7  20                 	db	32
  6727  00F1A8  20                 	db	32
  6728  00F1A9  53                 	db	83	;'S'
  6729  00F1AA  65                 	db	101	;'e'
  6730  00F1AB  74                 	db	116	;'t'
  6731  00F1AC  73                 	db	115	;'s'
  6732  00F1AD  20                 	db	32
  6733  00F1AE  74                 	db	116	;'t'
  6734  00F1AF  68                 	db	104	;'h'
  6735  00F1B0  65                 	db	101	;'e'
  6736  00F1B1  20                 	db	32
  6737  00F1B2  73                 	db	115	;'s'
  6738  00F1B3  74                 	db	116	;'t'
  6739  00F1B4  61                 	db	97	;'a'
  6740  00F1B5  74                 	db	116	;'t'
  6741  00F1B6  65                 	db	101	;'e'
  6742  00F1B7  20                 	db	32
  6743  00F1B8  6F                 	db	111	;'o'
  6744  00F1B9  66                 	db	102	;'f'
  6745  00F1BA  20                 	db	32
  6746  00F1BB  66                 	db	102	;'f'
  6747  00F1BC  69                 	db	105	;'i'
  6748  00F1BD  76                 	db	118	;'v'
  6749  00F1BE  65                 	db	101	;'e'
  6750  00F1BF  20                 	db	32
  6751  00F1C0  4C                 	db	76	;'L'
  6752  00F1C1  45                 	db	69	;'E'
  6753  00F1C2  44                 	db	68	;'D'
  6754  00F1C3  73                 	db	115	;'s'
  6755  00F1C4  20                 	db	32
  6756  00F1C5  62                 	db	98	;'b'
  6757  00F1C6  61                 	db	97	;'a'
  6758  00F1C7  73                 	db	115	;'s'
  6759  00F1C8  65                 	db	101	;'e'
  6760  00F1C9  64                 	db	100	;'d'
  6761  00F1CA  20                 	db	32
  6762  00F1CB  6F                 	db	111	;'o'
  6763  00F1CC  6E                 	db	110	;'n'
  6764  00F1CD  20                 	db	32
  6765  00F1CE  6D                 	db	109	;'m'
  6766  00F1CF  54                 	db	84	;'T'
  6767  00F1D0  6F                 	db	111	;'o'
  6768  00F1D1  75                 	db	117	;'u'
  6769  00F1D2  63                 	db	99	;'c'
  6770  00F1D3  68                 	db	104	;'h'
  6771  00F1D4  20                 	db	32
  6772  00F1D5  63                 	db	99	;'c'
  6773  00F1D6  61                 	db	97	;'a'
  6774  00F1D7  70                 	db	112	;'p'
  6775  00F1D8  61                 	db	97	;'a'
  6776  00F1D9  63                 	db	99	;'c'
  6777  00F1DA  69                 	db	105	;'i'
  6778  00F1DB  74                 	db	116	;'t'
  6779  00F1DC  69                 	db	105	;'i'
  6780  00F1DD  76                 	db	118	;'v'
  6781  00F1DE  65                 	db	101	;'e'
  6782  00F1DF  20                 	db	32
  6783  00F1E0  70                 	db	112	;'p'
  6784  00F1E1  75                 	db	117	;'u'
  6785  00F1E2  73                 	db	115	;'s'
  6786  00F1E3  68                 	db	104	;'h'
  6787  00F1E4  62                 	db	98	;'b'
  6788  00F1E5  75                 	db	117	;'u'
  6789  00F1E6  74                 	db	116	;'t'
  6790  00F1E7  74                 	db	116	;'t'
  6791  00F1E8  6F                 	db	111	;'o'
  6792  00F1E9  6E                 	db	110	;'n'
  6793  00F1EA  73                 	db	115	;'s'
  6794  00F1EB  0A                 	db	10
  6795  00F1EC  0D                 	db	13
  6796  00F1ED  20                 	db	32
  6797  00F1EE  20                 	db	32
  6798  00F1EF  20                 	db	32
  6799  00F1F0  20                 	db	32
  6800  00F1F1  42                 	db	66	;'B'
  6801  00F1F2  61                 	db	97	;'a'
  6802  00F1F3  75                 	db	117	;'u'
  6803  00F1F4  64                 	db	100	;'d'
  6804  00F1F5  20                 	db	32
  6805  00F1F6  72                 	db	114	;'r'
  6806  00F1F7  61                 	db	97	;'a'
  6807  00F1F8  74                 	db	116	;'t'
  6808  00F1F9  65                 	db	101	;'e'
  6809  00F1FA  3A                 	db	58	;':'
  6810  00F1FB  20                 	db	32
  6811  00F1FC  31                 	db	49	;'1'
  6812  00F1FD  31                 	db	49	;'1'
  6813  00F1FE  35                 	db	53	;'5'
  6814  00F1FF  32                 	db	50	;'2'
  6815  00F200  30                 	db	48	;'0'
  6816  00F201  30                 	db	48	;'0'
  6817  00F202  20                 	db	32
  6818  00F203  62                 	db	98	;'b'
  6819  00F204  70                 	db	112	;'p'
  6820  00F205  73                 	db	115	;'s'
  6821  00F206  0A                 	db	10
  6822  00F207  0D                 	db	13
  6823  00F208  20                 	db	32
  6824  00F209  20                 	db	32
  6825  00F20A  20                 	db	32
  6826  00F20B  20                 	db	32
  6827  00F20C  4E                 	db	78	;'N'
  6828  00F20D  6F                 	db	111	;'o'
  6829  00F20E  20                 	db	32
  6830  00F20F  70                 	db	112	;'p'
  6831  00F210  61                 	db	97	;'a'
  6832  00F211  72                 	db	114	;'r'
  6833  00F212  69                 	db	105	;'i'
  6834  00F213  74                 	db	116	;'t'
  6835  00F214  79                 	db	121	;'y'
  6836  00F215  2C                 	db	44
  6837  00F216  20                 	db	32
  6838  00F217  38                 	db	56	;'8'
  6839  00F218  20                 	db	32
  6840  00F219  62                 	db	98	;'b'
  6841  00F21A  69                 	db	105	;'i'
  6842  00F21B  74                 	db	116	;'t'
  6843  00F21C  73                 	db	115	;'s'
  6844  00F21D  2C                 	db	44
  6845  00F21E  20                 	db	32
  6846  00F21F  6E                 	db	110	;'n'
  6847  00F220  6F                 	db	111	;'o'
  6848  00F221  20                 	db	32
  6849  00F222  66                 	db	102	;'f'
  6850  00F223  6C                 	db	108	;'l'
  6851  00F224  6F                 	db	111	;'o'
  6852  00F225  77                 	db	119	;'w'
  6853  00F226  20                 	db	32
  6854  00F227  63                 	db	99	;'c'
  6855  00F228  6F                 	db	111	;'o'
  6856  00F229  6E                 	db	110	;'n'
  6857  00F22A  74                 	db	116	;'t'
  6858  00F22B  72                 	db	114	;'r'
  6859  00F22C  6F                 	db	111	;'o'
  6860  00F22D  6C                 	db	108	;'l'
  6861  00F22E  2C                 	db	44
  6862  00F22F  20                 	db	32
  6863  00F230  31                 	db	49	;'1'
  6864  00F231  20                 	db	32
  6865  00F232  73                 	db	115	;'s'
  6866  00F233  74                 	db	116	;'t'
  6867  00F234  6F                 	db	111	;'o'
  6868  00F235  70                 	db	112	;'p'
  6869  00F236  20                 	db	32
  6870  00F237  62                 	db	98	;'b'
  6871  00F238  69                 	db	105	;'i'
  6872  00F239  74                 	db	116	;'t'
  6873  00F23A  0A                 	db	10
  6874  00F23B  0D                 	db	13
  6875  00F23C  20                 	db	32
  6876  00F23D  20                 	db	32
  6877  00F23E  20                 	db	32
  6878  00F23F  20                 	db	32
  6879  00F240  43                 	db	67	;'C'
  6880  00F241  6F                 	db	111	;'o'
  6881  00F242  6D                 	db	109	;'m'
  6882  00F243  6D                 	db	109	;'m'
  6883  00F244  61                 	db	97	;'a'
  6884  00F245  6E                 	db	110	;'n'
  6885  00F246  64                 	db	100	;'d'
  6886  00F247  73                 	db	115	;'s'
  6887  00F248  20                 	db	32
  6888  00F249  61                 	db	97	;'a'
  6889  00F24A  72                 	db	114	;'r'
  6890  00F24B  65                 	db	101	;'e'
  6891  00F24C  20                 	db	32
  6892  00F24D  63                 	db	99	;'c'
  6893  00F24E  61                 	db	97	;'a'
  6894  00F24F  73                 	db	115	;'s'
  6895  00F250  65                 	db	101	;'e'
  6896  00F251  20                 	db	32
  6897  00F252  73                 	db	115	;'s'
  6898  00F253  65                 	db	101	;'e'
  6899  00F254  6E                 	db	110	;'n'
  6900  00F255  73                 	db	115	;'s'
  6901  00F256  69                 	db	105	;'i'
  6902  00F257  74                 	db	116	;'t'
  6903  00F258  69                 	db	105	;'i'
  6904  00F259  76                 	db	118	;'v'
  6905  00F25A  65                 	db	101	;'e'
  6906  00F25B  0A                 	db	10
  6907  00F25C  0D                 	db	13
  6908  00F25D  20                 	db	32
  6909  00F25E  20                 	db	32
  6910  00F25F  20                 	db	32
  6911  00F260  20                 	db	32
  6912  00F261  45                 	db	69	;'E'
  6913  00F262  6E                 	db	110	;'n'
  6914  00F263  74                 	db	116	;'t'
  6915  00F264  65                 	db	101	;'e'
  6916  00F265  72                 	db	114	;'r'
  6917  00F266  20                 	db	32
  6918  00F267  61                 	db	97	;'a'
  6919  00F268  20                 	db	32
  6920  00F269  63                 	db	99	;'c'
  6921  00F26A  6F                 	db	111	;'o'
  6922  00F26B  6D                 	db	109	;'m'
  6923  00F26C  6D                 	db	109	;'m'
  6924  00F26D  61                 	db	97	;'a'
  6925  00F26E  6E                 	db	110	;'n'
  6926  00F26F  64                 	db	100	;'d'
  6927  00F270  2C                 	db	44
  6928  00F271  20                 	db	32
  6929  00F272  6F                 	db	111	;'o'
  6930  00F273  72                 	db	114	;'r'
  6931  00F274  20                 	db	32
  6932  00F275  65                 	db	101	;'e'
  6933  00F276  6E                 	db	110	;'n'
  6934  00F277  74                 	db	116	;'t'
  6935  00F278  65                 	db	101	;'e'
  6936  00F279  72                 	db	114	;'r'
  6937  00F27A  20                 	db	32
  6938  00F27B  48                 	db	72	;'H'
  6939  00F27C  65                 	db	101	;'e'
  6940  00F27D  6C                 	db	108	;'l'
  6941  00F27E  70                 	db	112	;'p'
  6942  00F27F  20                 	db	32
  6943  00F280  66                 	db	102	;'f'
  6944  00F281  6F                 	db	111	;'o'
  6945  00F282  72                 	db	114	;'r'
  6946  00F283  20                 	db	32
  6947  00F284  6C                 	db	108	;'l'
  6948  00F285  69                 	db	105	;'i'
  6949  00F286  73                 	db	115	;'s'
  6950  00F287  74                 	db	116	;'t'
  6951  00F288  20                 	db	32
  6952  00F289  6F                 	db	111	;'o'
  6953  00F28A  66                 	db	102	;'f'
  6954  00F28B  20                 	db	32
  6955  00F28C  63                 	db	99	;'c'
  6956  00F28D  6F                 	db	111	;'o'
  6957  00F28E  6D                 	db	109	;'m'
  6958  00F28F  6D                 	db	109	;'m'
  6959  00F290  61                 	db	97	;'a'
  6960  00F291  6E                 	db	110	;'n'
  6961  00F292  64                 	db	100	;'d'
  6962  00F293  73                 	db	115	;'s'
  6963  00F294  0A                 	db	10
  6964  00F295  0D                 	db	13
  6965  00F296  00                 	db	0
  6966  00F297                     STR_111:
  6967  00F297  49                 	db	73	;'I'
  6968  00F298  66                 	db	102	;'f'
  6969  00F299  20                 	db	32
  6970  00F29A  79                 	db	121	;'y'
  6971  00F29B  6F                 	db	111	;'o'
  6972  00F29C  75                 	db	117	;'u'
  6973  00F29D  27                 	db	39
  6974  00F29E  64                 	db	100	;'d'
  6975  00F29F  20                 	db	32
  6976  00F2A0  6C                 	db	108	;'l'
  6977  00F2A1  69                 	db	105	;'i'
  6978  00F2A2  6B                 	db	107	;'k'
  6979  00F2A3  65                 	db	101	;'e'
  6980  00F2A4  20                 	db	32
  6981  00F2A5  74                 	db	116	;'t'
  6982  00F2A6  6F                 	db	111	;'o'
  6983  00F2A7  20                 	db	32
  6984  00F2A8  63                 	db	99	;'c'
  6985  00F2A9  6F                 	db	111	;'o'
  6986  00F2AA  6D                 	db	109	;'m'
  6987  00F2AB  70                 	db	112	;'p'
  6988  00F2AC  6C                 	db	108	;'l'
  6989  00F2AD  65                 	db	101	;'e'
  6990  00F2AE  74                 	db	116	;'t'
  6991  00F2AF  65                 	db	101	;'e'
  6992  00F2B0  6C                 	db	108	;'l'
  6993  00F2B1  79                 	db	121	;'y'
  6994  00F2B2  20                 	db	32
  6995  00F2B3  65                 	db	101	;'e'
  6996  00F2B4  6E                 	db	110	;'n'
  6997  00F2B5  61                 	db	97	;'a'
  6998  00F2B6  62                 	db	98	;'b'
  6999  00F2B7  6C                 	db	108	;'l'
  7000  00F2B8  65                 	db	101	;'e'
  7001  00F2B9  20                 	db	32
  7002  00F2BA  6F                 	db	111	;'o'
  7003  00F2BB  72                 	db	114	;'r'
  7004  00F2BC  20                 	db	32
  7005  00F2BD  64                 	db	100	;'d'
  7006  00F2BE  69                 	db	105	;'i'
  7007  00F2BF  73                 	db	115	;'s'
  7008  00F2C0  61                 	db	97	;'a'
  7009  00F2C1  62                 	db	98	;'b'
  7010  00F2C2  6C                 	db	108	;'l'
  7011  00F2C3  65                 	db	101	;'e'
  7012  00F2C4  20                 	db	32
  7013  00F2C5  74                 	db	116	;'t'
  7014  00F2C6  68                 	db	104	;'h'
  7015  00F2C7  65                 	db	101	;'e'
  7016  00F2C8  20                 	db	32
  7017  00F2C9  6C                 	db	108	;'l'
  7018  00F2CA  6F                 	db	111	;'o'
  7019  00F2CB  61                 	db	97	;'a'
  7020  00F2CC  64                 	db	100	;'d'
  7021  00F2CD  2C                 	db	44
  7022  00F2CE  20                 	db	32
  7023  00F2CF  64                 	db	100	;'d'
  7024  00F2D0  69                 	db	105	;'i'
  7025  00F2D1  73                 	db	115	;'s'
  7026  00F2D2  61                 	db	97	;'a'
  7027  00F2D3  62                 	db	98	;'b'
  7028  00F2D4  6C                 	db	108	;'l'
  7029  00F2D5  65                 	db	101	;'e'
  7030  00F2D6  20                 	db	32
  7031  00F2D7  64                 	db	100	;'d'
  7032  00F2D8  69                 	db	105	;'i'
  7033  00F2D9  6D                 	db	109	;'m'
  7034  00F2DA  6D                 	db	109	;'m'
  7035  00F2DB  69                 	db	105	;'i'
  7036  00F2DC  6E                 	db	110	;'n'
  7037  00F2DD  67                 	db	103	;'g'
  7038  00F2DE  20                 	db	32
  7039  00F2DF  61                 	db	97	;'a'
  7040  00F2E0  6E                 	db	110	;'n'
  7041  00F2E1  64                 	db	100	;'d'
  7042  00F2E2  20                 	db	32
  7043  00F2E3  75                 	db	117	;'u'
  7044  00F2E4  73                 	db	115	;'s'
  7045  00F2E5  65                 	db	101	;'e'
  7046  00F2E6  20                 	db	32
  7047  00F2E7  72                 	db	114	;'r'
  7048  00F2E8  65                 	db	101	;'e'
  7049  00F2E9  73                 	db	115	;'s'
  7050  00F2EA  70                 	db	112	;'p'
  7051  00F2EB  65                 	db	101	;'e'
  7052  00F2EC  63                 	db	99	;'c'
  7053  00F2ED  74                 	db	116	;'t'
  7054  00F2EE  69                 	db	105	;'i'
  7055  00F2EF  76                 	db	118	;'v'
  7056  00F2F0  65                 	db	101	;'e'
  7057  00F2F1  20                 	db	32
  7058  00F2F2  63                 	db	99	;'c'
  7059  00F2F3  6F                 	db	111	;'o'
  7060  00F2F4  6D                 	db	109	;'m'
  7061  00F2F5  6D                 	db	109	;'m'
  7062  00F2F6  61                 	db	97	;'a'
  7063  00F2F7  6E                 	db	110	;'n'
  7064  00F2F8  64                 	db	100	;'d'
  7065  00F2F9  73                 	db	115	;'s'
  7066  00F2FA  0A                 	db	10
  7067  00F2FB  0D                 	db	13
  7068  00F2FC  00                 	db	0
  7069  00F2FD                     STR_110:
  7070  00F2FD  45                 	db	69	;'E'
  7071  00F2FE  52                 	db	82	;'R'
  7072  00F2FF  52                 	db	82	;'R'
  7073  00F300  4F                 	db	79	;'O'
  7074  00F301  52                 	db	82	;'R'
  7075  00F302  3A                 	db	58	;':'
  7076  00F303  20                 	db	32
  7077  00F304  50                 	db	80	;'P'
  7078  00F305  6C                 	db	108	;'l'
  7079  00F306  65                 	db	101	;'e'
  7080  00F307  61                 	db	97	;'a'
  7081  00F308  73                 	db	115	;'s'
  7082  00F309  65                 	db	101	;'e'
  7083  00F30A  20                 	db	32
  7084  00F30B  73                 	db	115	;'s'
  7085  00F30C  65                 	db	101	;'e'
  7086  00F30D  74                 	db	116	;'t'
  7087  00F30E  20                 	db	32
  7088  00F30F  64                 	db	100	;'d'
  7089  00F310  69                 	db	105	;'i'
  7090  00F311  6D                 	db	109	;'m'
  7091  00F312  6D                 	db	109	;'m'
  7092  00F313  69                 	db	105	;'i'
  7093  00F314  6E                 	db	110	;'n'
  7094  00F315  67                 	db	103	;'g'
  7095  00F316  20                 	db	32
  7096  00F317  70                 	db	112	;'p'
  7097  00F318  65                 	db	101	;'e'
  7098  00F319  72                 	db	114	;'r'
  7099  00F31A  63                 	db	99	;'c'
  7100  00F31B  65                 	db	101	;'e'
  7101  00F31C  6E                 	db	110	;'n'
  7102  00F31D  74                 	db	116	;'t'
  7103  00F31E  61                 	db	97	;'a'
  7104  00F31F  67                 	db	103	;'g'
  7105  00F320  65                 	db	101	;'e'
  7106  00F321  20                 	db	32
  7107  00F322  74                 	db	116	;'t'
  7108  00F323  6F                 	db	111	;'o'
  7109  00F324  20                 	db	32
  7110  00F325  61                 	db	97	;'a'
  7111  00F326  6E                 	db	110	;'n'
  7112  00F327  20                 	db	32
  7113  00F328  69                 	db	105	;'i'
  7114  00F329  6E                 	db	110	;'n'
  7115  00F32A  74                 	db	116	;'t'
  7116  00F32B  65                 	db	101	;'e'
  7117  00F32C  67                 	db	103	;'g'
  7118  00F32D  65                 	db	101	;'e'
  7119  00F32E  72                 	db	114	;'r'
  7120  00F32F  20                 	db	32
  7121  00F330  67                 	db	103	;'g'
  7122  00F331  72                 	db	114	;'r'
  7123  00F332  65                 	db	101	;'e'
  7124  00F333  61                 	db	97	;'a'
  7125  00F334  74                 	db	116	;'t'
  7126  00F335  65                 	db	101	;'e'
  7127  00F336  72                 	db	114	;'r'
  7128  00F337  20                 	db	32
  7129  00F338  74                 	db	116	;'t'
  7130  00F339  68                 	db	104	;'h'
  7131  00F33A  61                 	db	97	;'a'
  7132  00F33B  6E                 	db	110	;'n'
  7133  00F33C  20                 	db	32
  7134  00F33D  30                 	db	48	;'0'
  7135  00F33E  20                 	db	32
  7136  00F33F  61                 	db	97	;'a'
  7137  00F340  6E                 	db	110	;'n'
  7138  00F341  64                 	db	100	;'d'
  7139  00F342  20                 	db	32
  7140  00F343  6C                 	db	108	;'l'
  7141  00F344  65                 	db	101	;'e'
  7142  00F345  73                 	db	115	;'s'
  7143  00F346  73                 	db	115	;'s'
  7144  00F347  20                 	db	32
  7145  00F348  74                 	db	116	;'t'
  7146  00F349  68                 	db	104	;'h'
  7147  00F34A  61                 	db	97	;'a'
  7148  00F34B  6E                 	db	110	;'n'
  7149  00F34C  20                 	db	32
  7150  00F34D  31                 	db	49	;'1'
  7151  00F34E  30                 	db	48	;'0'
  7152  00F34F  30                 	db	48	;'0'
  7153  00F350  0A                 	db	10
  7154  00F351  0D                 	db	13
  7155  00F352  00                 	db	0
  7156  00F353                     STR_54:
  7157  00F353  44                 	db	68	;'D'
  7158  00F354  65                 	db	101	;'e'
  7159  00F355  76                 	db	118	;'v'
  7160  00F356  69                 	db	105	;'i'
  7161  00F357  63                 	db	99	;'c'
  7162  00F358  65                 	db	101	;'e'
  7163  00F359  20                 	db	32
  7164  00F35A  49                 	db	73	;'I'
  7165  00F35B  44                 	db	68	;'D'
  7166  00F35C  20                 	db	32
  7167  00F35D  73                 	db	115	;'s'
  7168  00F35E  74                 	db	116	;'t'
  7169  00F35F  6F                 	db	111	;'o'
  7170  00F360  72                 	db	114	;'r'
  7171  00F361  65                 	db	101	;'e'
  7172  00F362  64                 	db	100	;'d'
  7173  00F363  20                 	db	32
  7174  00F364  69                 	db	105	;'i'
  7175  00F365  6E                 	db	110	;'n'
  7176  00F366  20                 	db	32
  7177  00F367  46                 	db	70	;'F'
  7178  00F368  6C                 	db	108	;'l'
  7179  00F369  61                 	db	97	;'a'
  7180  00F36A  73                 	db	115	;'s'
  7181  00F36B  68                 	db	104	;'h'
  7182  00F36C  20                 	db	32
  7183  00F36D  69                 	db	105	;'i'
  7184  00F36E  73                 	db	115	;'s'
  7185  00F36F  3A                 	db	58	;':'
  7186  00F370  20                 	db	32
  7187  00F371  30                 	db	48	;'0'
  7188  00F372  78                 	db	120	;'x'
  7189  00F373  25                 	db	37
  7190  00F374  58                 	db	88	;'X'
  7191  00F375  2E                 	db	46
  7192  00F376  20                 	db	32
  7193  00F377  54                 	db	84	;'T'
  7194  00F378  68                 	db	104	;'h'
  7195  00F379  69                 	db	105	;'i'
  7196  00F37A  73                 	db	115	;'s'
  7197  00F37B  20                 	db	32
  7198  00F37C  63                 	db	99	;'c'
  7199  00F37D  6F                 	db	111	;'o'
  7200  00F37E  72                 	db	114	;'r'
  7201  00F37F  72                 	db	114	;'r'
  7202  00F380  65                 	db	101	;'e'
  7203  00F381  73                 	db	115	;'s'
  7204  00F382  70                 	db	112	;'p'
  7205  00F383  6F                 	db	111	;'o'
  7206  00F384  6E                 	db	110	;'n'
  7207  00F385  64                 	db	100	;'d'
  7208  00F386  73                 	db	115	;'s'
  7209  00F387  20                 	db	32
  7210  00F388  74                 	db	116	;'t'
  7211  00F389  6F                 	db	111	;'o'
  7212  00F38A  20                 	db	32
  7213  00F38B  61                 	db	97	;'a'
  7214  00F38C  20                 	db	32
  7215  00F38D  64                 	db	100	;'d'
  7216  00F38E  65                 	db	101	;'e'
  7217  00F38F  76                 	db	118	;'v'
  7218  00F390  69                 	db	105	;'i'
  7219  00F391  63                 	db	99	;'c'
  7220  00F392  65                 	db	101	;'e'
  7221  00F393  20                 	db	32
  7222  00F394  70                 	db	112	;'p'
  7223  00F395  61                 	db	97	;'a'
  7224  00F396  72                 	db	114	;'r'
  7225  00F397  74                 	db	116	;'t'
  7226  00F398  20                 	db	32
  7227  00F399  6E                 	db	110	;'n'
  7228  00F39A  75                 	db	117	;'u'
  7229  00F39B  6D                 	db	109	;'m'
  7230  00F39C  62                 	db	98	;'b'
  7231  00F39D  65                 	db	101	;'e'
  7232  00F39E  72                 	db	114	;'r'
  7233  00F39F  20                 	db	32
  7234  00F3A0  6F                 	db	111	;'o'
  7235  00F3A1  66                 	db	102	;'f'
  7236  00F3A2  20                 	db	32
  7237  00F3A3  25                 	db	37
  7238  00F3A4  73                 	db	115	;'s'
  7239  00F3A5  0A                 	db	10
  7240  00F3A6  0D                 	db	13
  7241  00F3A7  00                 	db	0
  7242  00F3A8                     STR_115:
  7243  00F3A8  54                 	db	84	;'T'
  7244  00F3A9  68                 	db	104	;'h'
  7245  00F3AA  69                 	db	105	;'i'
  7246  00F3AB  73                 	db	115	;'s'
  7247  00F3AC  20                 	db	32
  7248  00F3AD  63                 	db	99	;'c'
  7249  00F3AE  6F                 	db	111	;'o'
  7250  00F3AF  72                 	db	114	;'r'
  7251  00F3B0  72                 	db	114	;'r'
  7252  00F3B1  65                 	db	101	;'e'
  7253  00F3B2  73                 	db	115	;'s'
  7254  00F3B3  70                 	db	112	;'p'
  7255  00F3B4  6F                 	db	111	;'o'
  7256  00F3B5  6E                 	db	110	;'n'
  7257  00F3B6  64                 	db	100	;'d'
  7258  00F3B7  73                 	db	115	;'s'
  7259  00F3B8  20                 	db	32
  7260  00F3B9  74                 	db	116	;'t'
  7261  00F3BA  6F                 	db	111	;'o'
  7262  00F3BB  20                 	db	32
  7263  00F3BC  61                 	db	97	;'a'
  7264  00F3BD  20                 	db	32
  7265  00F3BE  31                 	db	49	;'1'
  7266  00F3BF  36                 	db	54	;'6'
  7267  00F3C0  20                 	db	32
  7268  00F3C1  62                 	db	98	;'b'
  7269  00F3C2  69                 	db	105	;'i'
  7270  00F3C3  74                 	db	116	;'t'
  7271  00F3C4  20                 	db	32
  7272  00F3C5  74                 	db	116	;'t'
  7273  00F3C6  69                 	db	105	;'i'
  7274  00F3C7  6D                 	db	109	;'m'
  7275  00F3C8  65                 	db	101	;'e'
  7276  00F3C9  72                 	db	114	;'r'
  7277  00F3CA  20                 	db	32
  7278  00F3CB  70                 	db	112	;'p'
  7279  00F3CC  72                 	db	114	;'r'
  7280  00F3CD  65                 	db	101	;'e'
  7281  00F3CE  2D                 	db	45
  7282  00F3CF  6C                 	db	108	;'l'
  7283  00F3D0  6F                 	db	111	;'o'
  7284  00F3D1  61                 	db	97	;'a'
  7285  00F3D2  64                 	db	100	;'d'
  7286  00F3D3  20                 	db	32
  7287  00F3D4  76                 	db	118	;'v'
  7288  00F3D5  61                 	db	97	;'a'
  7289  00F3D6  6C                 	db	108	;'l'
  7290  00F3D7  75                 	db	117	;'u'
  7291  00F3D8  65                 	db	101	;'e'
  7292  00F3D9  20                 	db	32
  7293  00F3DA  6F                 	db	111	;'o'
  7294  00F3DB  66                 	db	102	;'f'
  7295  00F3DC  20                 	db	32
  7296  00F3DD  30                 	db	48	;'0'
  7297  00F3DE  78                 	db	120	;'x'
  7298  00F3DF  25                 	db	37
  7299  00F3E0  58                 	db	88	;'X'
  7300  00F3E1  20                 	db	32
  7301  00F3E2  28                 	db	40
  7302  00F3E3  25                 	db	37
  7303  00F3E4  75                 	db	117	;'u'
  7304  00F3E5  20                 	db	32
  7305  00F3E6  4C                 	db	76	;'L'
  7306  00F3E7  53                 	db	83	;'S'
  7307  00F3E8  42                 	db	66	;'B'
  7308  00F3E9  73                 	db	115	;'s'
  7309  00F3EA  29                 	db	41
  7310  00F3EB  20                 	db	32
  7311  00F3EC  0A                 	db	10
  7312  00F3ED  0D                 	db	13
  7313  00F3EE  00                 	db	0
  7314  00F3EF                     STR_74:
  7315  00F3EF  56                 	db	86	;'V'
  7316  00F3F0  43                 	db	67	;'C'
  7317  00F3F1  43                 	db	67	;'C'
  7318  00F3F2  20                 	db	32
  7319  00F3F3  4F                 	db	79	;'O'
  7320  00F3F4  76                 	db	118	;'v'
  7321  00F3F5  65                 	db	101	;'e'
  7322  00F3F6  72                 	db	114	;'r'
  7323  00F3F7  76                 	db	118	;'v'
  7324  00F3F8  6F                 	db	111	;'o'
  7325  00F3F9  6C                 	db	108	;'l'
  7326  00F3FA  74                 	db	116	;'t'
  7327  00F3FB  61                 	db	97	;'a'
  7328  00F3FC  67                 	db	103	;'g'
  7329  00F3FD  65                 	db	101	;'e'
  7330  00F3FE  20                 	db	32
  7331  00F3FF  63                 	db	99	;'c'
  7332  00F400  6F                 	db	111	;'o'
  7333  00F401  6E                 	db	110	;'n'
  7334  00F402  64                 	db	100	;'d'
  7335  00F403  69                 	db	105	;'i'
  7336  00F404  74                 	db	116	;'t'
  7337  00F405  69                 	db	105	;'i'
  7338  00F406  6F                 	db	111	;'o'
  7339  00F407  6E                 	db	110	;'n'
  7340  00F408  20                 	db	32
  7341  00F409  68                 	db	104	;'h'
  7342  00F40A  61                 	db	97	;'a'
  7343  00F40B  73                 	db	115	;'s'
  7344  00F40C  20                 	db	32
  7345  00F40D  6F                 	db	111	;'o'
  7346  00F40E  63                 	db	99	;'c'
  7347  00F40F  63                 	db	99	;'c'
  7348  00F410  75                 	db	117	;'u'
  7349  00F411  72                 	db	114	;'r'
  7350  00F412  72                 	db	114	;'r'
  7351  00F413  65                 	db	101	;'e'
  7352  00F414  64                 	db	100	;'d'
  7353  00F415  20                 	db	32
  7354  00F416  28                 	db	40
  7355  00F417  56                 	db	86	;'V'
  7356  00F418  43                 	db	67	;'C'
  7357  00F419  43                 	db	67	;'C'
  7358  00F41A  20                 	db	32
  7359  00F41B  68                 	db	104	;'h'
  7360  00F41C  61                 	db	97	;'a'
  7361  00F41D  73                 	db	115	;'s'
  7362  00F41E  20                 	db	32
  7363  00F41F  65                 	db	101	;'e'
  7364  00F420  78                 	db	120	;'x'
  7365  00F421  63                 	db	99	;'c'
  7366  00F422  65                 	db	101	;'e'
  7367  00F423  65                 	db	101	;'e'
  7368  00F424  64                 	db	100	;'d'
  7369  00F425  65                 	db	101	;'e'
  7370  00F426  64                 	db	100	;'d'
  7371  00F427  20                 	db	32
  7372  00F428  33                 	db	51	;'3'
  7373  00F429  2E                 	db	46
  7374  00F42A  36                 	db	54	;'6'
  7375  00F42B  30                 	db	48	;'0'
  7376  00F42C  56                 	db	86	;'V'
  7377  00F42D  29                 	db	41
  7378  00F42E  0A                 	db	10
  7379  00F42F  0D                 	db	13
  7380  00F430  00                 	db	0
  7381  00F431                     STR_58:
  7382  00F431  54                 	db	84	;'T'
  7383  00F432  68                 	db	104	;'h'
  7384  00F433  65                 	db	101	;'e'
  7385  00F434  20                 	db	32
  7386  00F435  66                 	db	102	;'f'
  7387  00F436  6F                 	db	111	;'o'
  7388  00F437  6C                 	db	108	;'l'
  7389  00F438  6C                 	db	108	;'l'
  7390  00F439  6F                 	db	111	;'o'
  7391  00F43A  77                 	db	119	;'w'
  7392  00F43B  69                 	db	105	;'i'
  7393  00F43C  6E                 	db	110	;'n'
  7394  00F43D  67                 	db	103	;'g'
  7395  00F43E  20                 	db	32
  7396  00F43F  55                 	db	85	;'U'
  7397  00F440  73                 	db	115	;'s'
  7398  00F441  65                 	db	101	;'e'
  7399  00F442  72                 	db	114	;'r'
  7400  00F443  20                 	db	32
  7401  00F444  49                 	db	73	;'I'
  7402  00F445  44                 	db	68	;'D'
  7403  00F446  73                 	db	115	;'s'
  7404  00F447  20                 	db	32
  7405  00F448  68                 	db	104	;'h'
  7406  00F449  61                 	db	97	;'a'
  7407  00F44A  76                 	db	118	;'v'
  7408  00F44B  65                 	db	101	;'e'
  7409  00F44C  20                 	db	32
  7410  00F44D  62                 	db	98	;'b'
  7411  00F44E  65                 	db	101	;'e'
  7412  00F44F  65                 	db	101	;'e'
  7413  00F450  6E                 	db	110	;'n'
  7414  00F451  20                 	db	32
  7415  00F452  72                 	db	114	;'r'
  7416  00F453  65                 	db	101	;'e'
  7417  00F454  74                 	db	116	;'t'
  7418  00F455  72                 	db	114	;'r'
  7419  00F456  69                 	db	105	;'i'
  7420  00F457  65                 	db	101	;'e'
  7421  00F458  76                 	db	118	;'v'
  7422  00F459  65                 	db	101	;'e'
  7423  00F45A  64                 	db	100	;'d'
  7424  00F45B  20                 	db	32
  7425  00F45C  66                 	db	102	;'f'
  7426  00F45D  72                 	db	114	;'r'
  7427  00F45E  6F                 	db	111	;'o'
  7428  00F45F  6D                 	db	109	;'m'
  7429  00F460  20                 	db	32
  7430  00F461  66                 	db	102	;'f'
  7431  00F462  6C                 	db	108	;'l'
  7432  00F463  61                 	db	97	;'a'
  7433  00F464  73                 	db	115	;'s'
  7434  00F465  68                 	db	104	;'h'
  7435  00F466  20                 	db	32
  7436  00F467  6D                 	db	109	;'m'
  7437  00F468  65                 	db	101	;'e'
  7438  00F469  6D                 	db	109	;'m'
  7439  00F46A  6F                 	db	111	;'o'
  7440  00F46B  72                 	db	114	;'r'
  7441  00F46C  79                 	db	121	;'y'
  7442  00F46D  3A                 	db	58	;':'
  7443  00F46E  0A                 	db	10
  7444  00F46F  0D                 	db	13
  7445  00F470  00                 	db	0
  7446  00F471                     STR_114:
  7447  00F471  43                 	db	67	;'C'
  7448  00F472  61                 	db	97	;'a'
  7449  00F473  6C                 	db	108	;'l'
  7450  00F474  63                 	db	99	;'c'
  7451  00F475  75                 	db	117	;'u'
  7452  00F476  6C                 	db	108	;'l'
  7453  00F477  61                 	db	97	;'a'
  7454  00F478  74                 	db	116	;'t'
  7455  00F479  65                 	db	101	;'e'
  7456  00F47A  64                 	db	100	;'d'
  7457  00F47B  20                 	db	32
  7458  00F47C  54                 	db	84	;'T'
  7459  00F47D  52                 	db	82	;'R'
  7460  00F47E  49                 	db	73	;'I'
  7461  00F47F  41                 	db	65	;'A'
  7462  00F480  43                 	db	67	;'C'
  7463  00F481  20                 	db	32
  7464  00F482  66                 	db	102	;'f'
  7465  00F483  69                 	db	105	;'i'
  7466  00F484  72                 	db	114	;'r'
  7467  00F485  69                 	db	105	;'i'
  7468  00F486  6E                 	db	110	;'n'
  7469  00F487  67                 	db	103	;'g'
  7470  00F488  20                 	db	32
  7471  00F489  61                 	db	97	;'a'
  7472  00F48A  6E                 	db	110	;'n'
  7473  00F48B  67                 	db	103	;'g'
  7474  00F48C  6C                 	db	108	;'l'
  7475  00F48D  65                 	db	101	;'e'
  7476  00F48E  20                 	db	32
  7477  00F48F  69                 	db	105	;'i'
  7478  00F490  73                 	db	115	;'s'
  7479  00F491  20                 	db	32
  7480  00F492  25                 	db	37
  7481  00F493  2E                 	db	46
  7482  00F494  33                 	db	51	;'3'
  7483  00F495  66                 	db	102	;'f'
  7484  00F496  20                 	db	32
  7485  00F497  72                 	db	114	;'r'
  7486  00F498  61                 	db	97	;'a'
  7487  00F499  64                 	db	100	;'d'
  7488  00F49A  69                 	db	105	;'i'
  7489  00F49B  61                 	db	97	;'a'
  7490  00F49C  6E                 	db	110	;'n'
  7491  00F49D  73                 	db	115	;'s'
  7492  00F49E  20                 	db	32
  7493  00F49F  28                 	db	40
  7494  00F4A0  25                 	db	37
  7495  00F4A1  2E                 	db	46
  7496  00F4A2  33                 	db	51	;'3'
  7497  00F4A3  66                 	db	102	;'f'
  7498  00F4A4  20                 	db	32
  7499  00F4A5  64                 	db	100	;'d'
  7500  00F4A6  65                 	db	101	;'e'
  7501  00F4A7  67                 	db	103	;'g'
  7502  00F4A8  72                 	db	114	;'r'
  7503  00F4A9  65                 	db	101	;'e'
  7504  00F4AA  65                 	db	101	;'e'
  7505  00F4AB  73                 	db	115	;'s'
  7506  00F4AC  29                 	db	41
  7507  00F4AD  0A                 	db	10
  7508  00F4AE  0D                 	db	13
  7509  00F4AF  00                 	db	0
  7510  00F4B0                     STR_147:
  7511  00F4B0  53                 	db	83	;'S'
  7512  00F4B1  79                 	db	121	;'y'
  7513  00F4B2  73                 	db	115	;'s'
  7514  00F4B3  74                 	db	116	;'t'
  7515  00F4B4  65                 	db	101	;'e'
  7516  00F4B5  6D                 	db	109	;'m'
  7517  00F4B6  20                 	db	32
  7518  00F4B7  70                 	db	112	;'p'
  7519  00F4B8  61                 	db	97	;'a'
  7520  00F4B9  72                 	db	114	;'r'
  7521  00F4BA  61                 	db	97	;'a'
  7522  00F4BB  6D                 	db	109	;'m'
  7523  00F4BC  65                 	db	101	;'e'
  7524  00F4BD  74                 	db	116	;'t'
  7525  00F4BE  65                 	db	101	;'e'
  7526  00F4BF  72                 	db	114	;'r'
  7527  00F4C0  73                 	db	115	;'s'
  7528  00F4C1  20                 	db	32
  7529  00F4C2  61                 	db	97	;'a'
  7530  00F4C3  6E                 	db	110	;'n'
  7531  00F4C4  64                 	db	100	;'d'
  7532  00F4C5  20                 	db	32
  7533  00F4C6  61                 	db	97	;'a'
  7534  00F4C7  66                 	db	102	;'f'
  7535  00F4C8  66                 	db	102	;'f'
  7536  00F4C9  69                 	db	105	;'i'
  7537  00F4CA  72                 	db	114	;'r'
  7538  00F4CB  6D                 	db	109	;'m'
  7539  00F4CC  61                 	db	97	;'a'
  7540  00F4CD  74                 	db	116	;'t'
  7541  00F4CE  69                 	db	105	;'i'
  7542  00F4CF  76                 	db	118	;'v'
  7543  00F4D0  65                 	db	101	;'e'
  7544  00F4D1  20                 	db	32
  7545  00F4D2  72                 	db	114	;'r'
  7546  00F4D3  65                 	db	101	;'e'
  7547  00F4D4  73                 	db	115	;'s'
  7548  00F4D5  70                 	db	112	;'p'
  7549  00F4D6  6F                 	db	111	;'o'
  7550  00F4D7  6E                 	db	110	;'n'
  7551  00F4D8  73                 	db	115	;'s'
  7552  00F4D9  65                 	db	101	;'e'
  7553  00F4DA  73                 	db	115	;'s'
  7554  00F4DB  20                 	db	32
  7555  00F4DC  61                 	db	97	;'a'
  7556  00F4DD  70                 	db	112	;'p'
  7557  00F4DE  70                 	db	112	;'p'
  7558  00F4DF  65                 	db	101	;'e'
  7559  00F4E0  61                 	db	97	;'a'
  7560  00F4E1  72                 	db	114	;'r'
  7561  00F4E2  20                 	db	32
  7562  00F4E3  69                 	db	105	;'i'
  7563  00F4E4  6E                 	db	110	;'n'
  7564  00F4E5  20                 	db	32
  7565  00F4E6  67                 	db	103	;'g'
  7566  00F4E7  72                 	db	114	;'r'
  7567  00F4E8  65                 	db	101	;'e'
  7568  00F4E9  65                 	db	101	;'e'
  7569  00F4EA  6E                 	db	110	;'n'
  7570  00F4EB  0A                 	db	10
  7571  00F4EC  0D                 	db	13
  7572  00F4ED  00                 	db	0
  7573  00F4EE                     STR_56:
  7574  00F4EE  44                 	db	68	;'D'
  7575  00F4EF  65                 	db	101	;'e'
  7576  00F4F0  76                 	db	118	;'v'
  7577  00F4F1  69                 	db	105	;'i'
  7578  00F4F2  63                 	db	99	;'c'
  7579  00F4F3  65                 	db	101	;'e'
  7580  00F4F4  20                 	db	32
  7581  00F4F5  73                 	db	115	;'s'
  7582  00F4F6  69                 	db	105	;'i'
  7583  00F4F7  6C                 	db	108	;'l'
  7584  00F4F8  69                 	db	105	;'i'
  7585  00F4F9  63                 	db	99	;'c'
  7586  00F4FA  6F                 	db	111	;'o'
  7587  00F4FB  6E                 	db	110	;'n'
  7588  00F4FC  20                 	db	32
  7589  00F4FD  72                 	db	114	;'r'
  7590  00F4FE  65                 	db	101	;'e'
  7591  00F4FF  76                 	db	118	;'v'
  7592  00F500  69                 	db	105	;'i'
  7593  00F501  73                 	db	115	;'s'
  7594  00F502  69                 	db	105	;'i'
  7595  00F503  6F                 	db	111	;'o'
  7596  00F504  6E                 	db	110	;'n'
  7597  00F505  20                 	db	32
  7598  00F506  49                 	db	73	;'I'
  7599  00F507  44                 	db	68	;'D'
  7600  00F508  20                 	db	32
  7601  00F509  61                 	db	97	;'a'
  7602  00F50A  73                 	db	115	;'s'
  7603  00F50B  20                 	db	32
  7604  00F50C  73                 	db	115	;'s'
  7605  00F50D  74                 	db	116	;'t'
  7606  00F50E  6F                 	db	111	;'o'
  7607  00F50F  72                 	db	114	;'r'
  7608  00F510  65                 	db	101	;'e'
  7609  00F511  64                 	db	100	;'d'
  7610  00F512  20                 	db	32
  7611  00F513  69                 	db	105	;'i'
  7612  00F514  6E                 	db	110	;'n'
  7613  00F515  20                 	db	32
  7614  00F516  46                 	db	70	;'F'
  7615  00F517  6C                 	db	108	;'l'
  7616  00F518  61                 	db	97	;'a'
  7617  00F519  73                 	db	115	;'s'
  7618  00F51A  68                 	db	104	;'h'
  7619  00F51B  20                 	db	32
  7620  00F51C  69                 	db	105	;'i'
  7621  00F51D  73                 	db	115	;'s'
  7622  00F51E  3A                 	db	58	;':'
  7623  00F51F  20                 	db	32
  7624  00F520  25                 	db	37
  7625  00F521  63                 	db	99	;'c'
  7626  00F522  25                 	db	37
  7627  00F523  30                 	db	48	;'0'
  7628  00F524  33                 	db	51	;'3'
  7629  00F525  64                 	db	100	;'d'
  7630  00F526  0A                 	db	10
  7631  00F527  0D                 	db	13
  7632  00F528  00                 	db	0
  7633  00F529                     STR_117:
  7634  00F529  44                 	db	68	;'D'
  7635  00F52A  65                 	db	101	;'e'
  7636  00F52B  76                 	db	118	;'v'
  7637  00F52C  69                 	db	105	;'i'
  7638  00F52D  63                 	db	99	;'c'
  7639  00F52E  65                 	db	101	;'e'
  7640  00F52F  20                 	db	32
  7641  00F530  6F                 	db	111	;'o'
  7642  00F531  6E                 	db	110	;'n'
  7643  00F532  20                 	db	32
  7644  00F533  74                 	db	116	;'t'
  7645  00F534  69                 	db	105	;'i'
  7646  00F535  6D                 	db	109	;'m'
  7647  00F536  65                 	db	101	;'e'
  7648  00F537  20                 	db	32
  7649  00F538  73                 	db	115	;'s'
  7650  00F539  69                 	db	105	;'i'
  7651  00F53A  6E                 	db	110	;'n'
  7652  00F53B  63                 	db	99	;'c'
  7653  00F53C  65                 	db	101	;'e'
  7654  00F53D  20                 	db	32
  7655  00F53E  6C                 	db	108	;'l'
  7656  00F53F  61                 	db	97	;'a'
  7657  00F540  73                 	db	115	;'s'
  7658  00F541  74                 	db	116	;'t'
  7659  00F542  20                 	db	32
  7660  00F543  72                 	db	114	;'r'
  7661  00F544  65                 	db	101	;'e'
  7662  00F545  73                 	db	115	;'s'
  7663  00F546  65                 	db	101	;'e'
  7664  00F547  74                 	db	116	;'t'
  7665  00F548  20                 	db	32
  7666  00F549  63                 	db	99	;'c'
  7667  00F54A  6F                 	db	111	;'o'
  7668  00F54B  6E                 	db	110	;'n'
  7669  00F54C  64                 	db	100	;'d'
  7670  00F54D  69                 	db	105	;'i'
  7671  00F54E  74                 	db	116	;'t'
  7672  00F54F  69                 	db	105	;'i'
  7673  00F550  6F                 	db	111	;'o'
  7674  00F551  6E                 	db	110	;'n'
  7675  00F552  20                 	db	32
  7676  00F553  69                 	db	105	;'i'
  7677  00F554  73                 	db	115	;'s'
  7678  00F555  20                 	db	32
  7679  00F556  25                 	db	37
  7680  00F557  64                 	db	100	;'d'
  7681  00F558  20                 	db	32
  7682  00F559  73                 	db	115	;'s'
  7683  00F55A  65                 	db	101	;'e'
  7684  00F55B  63                 	db	99	;'c'
  7685  00F55C  6F                 	db	111	;'o'
  7686  00F55D  6E                 	db	110	;'n'
  7687  00F55E  64                 	db	100	;'d'
  7688  00F55F  73                 	db	115	;'s'
  7689  00F560  0A                 	db	10
  7690  00F561  0D                 	db	13
  7691  00F562  00                 	db	0
  7692  00F563                     STR_83:
  7693  00F563  46                 	db	70	;'F'
  7694  00F564  69                 	db	105	;'i'
  7695  00F565  78                 	db	120	;'x'
  7696  00F566  65                 	db	101	;'e'
  7697  00F567  64                 	db	100	;'d'
  7698  00F568  20                 	db	32
  7699  00F569  56                 	db	86	;'V'
  7700  00F56A  6F                 	db	111	;'o'
  7701  00F56B  6C                 	db	108	;'l'
  7702  00F56C  74                 	db	116	;'t'
  7703  00F56D  61                 	db	97	;'a'
  7704  00F56E  67                 	db	103	;'g'
  7705  00F56F  65                 	db	101	;'e'
  7706  00F570  20                 	db	32
  7707  00F571  52                 	db	82	;'R'
  7708  00F572  65                 	db	101	;'e'
  7709  00F573  66                 	db	102	;'f'
  7710  00F574  65                 	db	101	;'e'
  7711  00F575  72                 	db	114	;'r'
  7712  00F576  65                 	db	101	;'e'
  7713  00F577  6E                 	db	110	;'n'
  7714  00F578  63                 	db	99	;'c'
  7715  00F579  65                 	db	101	;'e'
  7716  00F57A  20                 	db	32
  7717  00F57B  42                 	db	66	;'B'
  7718  00F57C  75                 	db	117	;'u'
  7719  00F57D  66                 	db	102	;'f'
  7720  00F57E  66                 	db	102	;'f'
  7721  00F57F  65                 	db	101	;'e'
  7722  00F580  72                 	db	114	;'r'
  7723  00F581  20                 	db	32
  7724  00F582  31                 	db	49	;'1'
  7725  00F583  20                 	db	32
  7726  00F584  6D                 	db	109	;'m'
  7727  00F585  65                 	db	101	;'e'
  7728  00F586  61                 	db	97	;'a'
  7729  00F587  73                 	db	115	;'s'
  7730  00F588  75                 	db	117	;'u'
  7731  00F589  72                 	db	114	;'r'
  7732  00F58A  65                 	db	101	;'e'
  7733  00F58B  64                 	db	100	;'d'
  7734  00F58C  20                 	db	32
  7735  00F58D  61                 	db	97	;'a'
  7736  00F58E  73                 	db	115	;'s'
  7737  00F58F  20                 	db	32
  7738  00F590  25                 	db	37
  7739  00F591  2E                 	db	46
  7740  00F592  33                 	db	51	;'3'
  7741  00F593  66                 	db	102	;'f'
  7742  00F594  20                 	db	32
  7743  00F595  56                 	db	86	;'V'
  7744  00F596  6F                 	db	111	;'o'
  7745  00F597  6C                 	db	108	;'l'
  7746  00F598  74                 	db	116	;'t'
  7747  00F599  73                 	db	115	;'s'
  7748  00F59A  0A                 	db	10
  7749  00F59B  0D                 	db	13
  7750  00F59C  00                 	db	0
  7751  00F59D                     STR_93:
  7752  00F59D  4F                 	db	79	;'O'
  7753  00F59E  75                 	db	117	;'u'
  7754  00F59F  74                 	db	116	;'t'
  7755  00F5A0  70                 	db	112	;'p'
  7756  00F5A1  75                 	db	117	;'u'
  7757  00F5A2  74                 	db	116	;'t'
  7758  00F5A3  20                 	db	32
  7759  00F5A4  70                 	db	112	;'p'
  7760  00F5A5  6F                 	db	111	;'o'
  7761  00F5A6  77                 	db	119	;'w'
  7762  00F5A7  65                 	db	101	;'e'
  7763  00F5A8  72                 	db	114	;'r'
  7764  00F5A9  20                 	db	32
  7765  00F5AA  63                 	db	99	;'c'
  7766  00F5AB  61                 	db	97	;'a'
  7767  00F5AC  6C                 	db	108	;'l'
  7768  00F5AD  63                 	db	99	;'c'
  7769  00F5AE  75                 	db	117	;'u'
  7770  00F5AF  6C                 	db	108	;'l'
  7771  00F5B0  61                 	db	97	;'a'
  7772  00F5B1  74                 	db	116	;'t'
  7773  00F5B2  65                 	db	101	;'e'
  7774  00F5B3  64                 	db	100	;'d'
  7775  00F5B4  20                 	db	32
  7776  00F5B5  61                 	db	97	;'a'
  7777  00F5B6  73                 	db	115	;'s'
  7778  00F5B7  20                 	db	32
  7779  00F5B8  25                 	db	37
  7780  00F5B9  2E                 	db	46
  7781  00F5BA  33                 	db	51	;'3'
  7782  00F5BB  66                 	db	102	;'f'
  7783  00F5BC  20                 	db	32
  7784  00F5BD  57                 	db	87	;'W'
  7785  00F5BE  61                 	db	97	;'a'
  7786  00F5BF  74                 	db	116	;'t'
  7787  00F5C0  74                 	db	116	;'t'
  7788  00F5C1  73                 	db	115	;'s'
  7789  00F5C2  20                 	db	32
  7790  00F5C3  66                 	db	102	;'f'
  7791  00F5C4  72                 	db	114	;'r'
  7792  00F5C5  6F                 	db	111	;'o'
  7793  00F5C6  6D                 	db	109	;'m'
  7794  00F5C7  20                 	db	32
  7795  00F5C8  52                 	db	82	;'R'
  7796  00F5C9  4D                 	db	77	;'M'
  7797  00F5CA  53                 	db	83	;'S'
  7798  00F5CB  20                 	db	32
  7799  00F5CC  76                 	db	118	;'v'
  7800  00F5CD  61                 	db	97	;'a'
  7801  00F5CE  6C                 	db	108	;'l'
  7802  00F5CF  75                 	db	117	;'u'
  7803  00F5D0  65                 	db	101	;'e'
  7804  00F5D1  73                 	db	115	;'s'
  7805  00F5D2  0A                 	db	10
  7806  00F5D3  0D                 	db	13
  7807  00F5D4  00                 	db	0
  7808  00F5D5                     STR_146:
  7809  00F5D5  48                 	db	72	;'H'
  7810  00F5D6  65                 	db	101	;'e'
  7811  00F5D7  6C                 	db	108	;'l'
  7812  00F5D8  70                 	db	112	;'p'
  7813  00F5D9  20                 	db	32
  7814  00F5DA  6D                 	db	109	;'m'
  7815  00F5DB  65                 	db	101	;'e'
  7816  00F5DC  73                 	db	115	;'s'
  7817  00F5DD  73                 	db	115	;'s'
  7818  00F5DE  61                 	db	97	;'a'
  7819  00F5DF  67                 	db	103	;'g'
  7820  00F5E0  65                 	db	101	;'e'
  7821  00F5E1  73                 	db	115	;'s'
  7822  00F5E2  20                 	db	32
  7823  00F5E3  61                 	db	97	;'a'
  7824  00F5E4  6E                 	db	110	;'n'
  7825  00F5E5  64                 	db	100	;'d'
  7826  00F5E6  20                 	db	32
  7827  00F5E7  6E                 	db	110	;'n'
  7828  00F5E8  65                 	db	101	;'e'
  7829  00F5E9  75                 	db	117	;'u'
  7830  00F5EA  74                 	db	116	;'t'
  7831  00F5EB  72                 	db	114	;'r'
  7832  00F5EC  61                 	db	97	;'a'
  7833  00F5ED  6C                 	db	108	;'l'
  7834  00F5EE  20                 	db	32
  7835  00F5EF  72                 	db	114	;'r'
  7836  00F5F0  65                 	db	101	;'e'
  7837  00F5F1  73                 	db	115	;'s'
  7838  00F5F2  70                 	db	112	;'p'
  7839  00F5F3  6F                 	db	111	;'o'
  7840  00F5F4  6E                 	db	110	;'n'
  7841  00F5F5  73                 	db	115	;'s'
  7842  00F5F6  65                 	db	101	;'e'
  7843  00F5F7  73                 	db	115	;'s'
  7844  00F5F8  20                 	db	32
  7845  00F5F9  61                 	db	97	;'a'
  7846  00F5FA  70                 	db	112	;'p'
  7847  00F5FB  70                 	db	112	;'p'
  7848  00F5FC  65                 	db	101	;'e'
  7849  00F5FD  61                 	db	97	;'a'
  7850  00F5FE  72                 	db	114	;'r'
  7851  00F5FF  20                 	db	32
  7852  00F600  69                 	db	105	;'i'
  7853  00F601  6E                 	db	110	;'n'
  7854  00F602  20                 	db	32
  7855  00F603  79                 	db	121	;'y'
  7856  00F604  65                 	db	101	;'e'
  7857  00F605  6C                 	db	108	;'l'
  7858  00F606  6C                 	db	108	;'l'
  7859  00F607  6F                 	db	111	;'o'
  7860  00F608  77                 	db	119	;'w'
  7861  00F609  0A                 	db	10
  7862  00F60A  0D                 	db	13
  7863  00F60B  00                 	db	0
  7864  00F60C                     STR_133:
  7865  00F60C  4D                 	db	77	;'M'
  7866  00F60D  61                 	db	97	;'a'
  7867  00F60E  78                 	db	120	;'x'
  7868  00F60F  69                 	db	105	;'i'
  7869  00F610  6D                 	db	109	;'m'
  7870  00F611  75                 	db	117	;'u'
  7871  00F612  6D                 	db	109	;'m'
  7872  00F613  20                 	db	32
  7873  00F614  72                 	db	114	;'r'
  7874  00F615  65                 	db	101	;'e'
  7875  00F616  63                 	db	99	;'c'
  7876  00F617  6F                 	db	111	;'o'
  7877  00F618  72                 	db	114	;'r'
  7878  00F619  64                 	db	100	;'d'
  7879  00F61A  65                 	db	101	;'e'
  7880  00F61B  64                 	db	100	;'d'
  7881  00F61C  20                 	db	32
  7882  00F61D  76                 	db	118	;'v'
  7883  00F61E  61                 	db	97	;'a'
  7884  00F61F  6C                 	db	108	;'l'
  7885  00F620  75                 	db	117	;'u'
  7886  00F621  65                 	db	101	;'e'
  7887  00F622  73                 	db	115	;'s'
  7888  00F623  20                 	db	32
  7889  00F624  65                 	db	101	;'e'
  7890  00F625  72                 	db	114	;'r'
  7891  00F626  61                 	db	97	;'a'
  7892  00F627  73                 	db	115	;'s'
  7893  00F628  65                 	db	101	;'e'
  7894  00F629  64                 	db	100	;'d'
  7895  00F62A  20                 	db	32
  7896  00F62B  66                 	db	102	;'f'
  7897  00F62C  72                 	db	114	;'r'
  7898  00F62D  6F                 	db	111	;'o'
  7899  00F62E  6D                 	db	109	;'m'
  7900  00F62F  20                 	db	32
  7901  00F630  53                 	db	83	;'S'
  7902  00F631  52                 	db	82	;'R'
  7903  00F632  41                 	db	65	;'A'
  7904  00F633  4D                 	db	77	;'M'
  7905  00F634  20                 	db	32
  7906  00F635  61                 	db	97	;'a'
  7907  00F636  6E                 	db	110	;'n'
  7908  00F637  64                 	db	100	;'d'
  7909  00F638  20                 	db	32
  7910  00F639  45                 	db	69	;'E'
  7911  00F63A  45                 	db	69	;'E'
  7912  00F63B  50                 	db	80	;'P'
  7913  00F63C  52                 	db	82	;'R'
  7914  00F63D  4F                 	db	79	;'O'
  7915  00F63E  4D                 	db	77	;'M'
  7916  00F63F  0A                 	db	10
  7917  00F640  0D                 	db	13
  7918  00F641  00                 	db	0
  7919  00F642                     STR_59:
  7920  00F642  20                 	db	32
  7921  00F643  20                 	db	32
  7922  00F644  20                 	db	32
  7923  00F645  20                 	db	32
  7924  00F646  55                 	db	85	;'U'
  7925  00F647  73                 	db	115	;'s'
  7926  00F648  65                 	db	101	;'e'
  7927  00F649  72                 	db	114	;'r'
  7928  00F64A  20                 	db	32
  7929  00F64B  49                 	db	73	;'I'
  7930  00F64C  44                 	db	68	;'D'
  7931  00F64D  20                 	db	32
  7932  00F64E  57                 	db	87	;'W'
  7933  00F64F  6F                 	db	111	;'o'
  7934  00F650  72                 	db	114	;'r'
  7935  00F651  64                 	db	100	;'d'
  7936  00F652  20                 	db	32
  7937  00F653  25                 	db	37
  7938  00F654  64                 	db	100	;'d'
  7939  00F655  20                 	db	32
  7940  00F656  28                 	db	40
  7941  00F657  46                 	db	70	;'F'
  7942  00F658  6C                 	db	108	;'l'
  7943  00F659  61                 	db	97	;'a'
  7944  00F65A  73                 	db	115	;'s'
  7945  00F65B  68                 	db	104	;'h'
  7946  00F65C  20                 	db	32
  7947  00F65D  61                 	db	97	;'a'
  7948  00F65E  64                 	db	100	;'d'
  7949  00F65F  64                 	db	100	;'d'
  7950  00F660  72                 	db	114	;'r'
  7951  00F661  65                 	db	101	;'e'
  7952  00F662  73                 	db	115	;'s'
  7953  00F663  73                 	db	115	;'s'
  7954  00F664  20                 	db	32
  7955  00F665  30                 	db	48	;'0'
  7956  00F666  78                 	db	120	;'x'
  7957  00F667  32                 	db	50	;'2'
  7958  00F668  30                 	db	48	;'0'
  7959  00F669  30                 	db	48	;'0'
  7960  00F66A  30                 	db	48	;'0'
  7961  00F66B  30                 	db	48	;'0'
  7962  00F66C  25                 	db	37
  7963  00F66D  58                 	db	88	;'X'
  7964  00F66E  29                 	db	41
  7965  00F66F  3A                 	db	58	;':'
  7966  00F670  20                 	db	32
  7967  00F671  30                 	db	48	;'0'
  7968  00F672  78                 	db	120	;'x'
  7969  00F673  25                 	db	37
  7970  00F674  58                 	db	88	;'X'
  7971  00F675  0A                 	db	10
  7972  00F676  0D                 	db	13
  7973  00F677  00                 	db	0
  7974  00F678                     STR_131:
  7975  00F678  4D                 	db	77	;'M'
  7976  00F679  61                 	db	97	;'a'
  7977  00F67A  78                 	db	120	;'x'
  7978  00F67B  69                 	db	105	;'i'
  7979  00F67C  6D                 	db	109	;'m'
  7980  00F67D  75                 	db	117	;'u'
  7981  00F67E  6D                 	db	109	;'m'
  7982  00F67F  20                 	db	32
  7983  00F680  72                 	db	114	;'r'
  7984  00F681  65                 	db	101	;'e'
  7985  00F682  63                 	db	99	;'c'
  7986  00F683  6F                 	db	111	;'o'
  7987  00F684  72                 	db	114	;'r'
  7988  00F685  64                 	db	100	;'d'
  7989  00F686  65                 	db	101	;'e'
  7990  00F687  64                 	db	100	;'d'
  7991  00F688  20                 	db	32
  7992  00F689  46                 	db	70	;'F'
  7993  00F68A  56                 	db	86	;'V'
  7994  00F68B  52                 	db	82	;'R'
  7995  00F68C  20                 	db	32
  7996  00F68D  62                 	db	98	;'b'
  7997  00F68E  75                 	db	117	;'u'
  7998  00F68F  66                 	db	102	;'f'
  7999  00F690  66                 	db	102	;'f'
  8000  00F691  65                 	db	101	;'e'
  8001  00F692  72                 	db	114	;'r'
  8002  00F693  20                 	db	32
  8003  00F694  31                 	db	49	;'1'
  8004  00F695  20                 	db	32
  8005  00F696  76                 	db	118	;'v'
  8006  00F697  6F                 	db	111	;'o'
  8007  00F698  6C                 	db	108	;'l'
  8008  00F699  74                 	db	116	;'t'
  8009  00F69A  61                 	db	97	;'a'
  8010  00F69B  67                 	db	103	;'g'
  8011  00F69C  65                 	db	101	;'e'
  8012  00F69D  20                 	db	32
  8013  00F69E  69                 	db	105	;'i'
  8014  00F69F  73                 	db	115	;'s'
  8015  00F6A0  20                 	db	32
  8016  00F6A1  25                 	db	37
  8017  00F6A2  2E                 	db	46
  8018  00F6A3  33                 	db	51	;'3'
  8019  00F6A4  66                 	db	102	;'f'
  8020  00F6A5  20                 	db	32
  8021  00F6A6  56                 	db	86	;'V'
  8022  00F6A7  6F                 	db	111	;'o'
  8023  00F6A8  6C                 	db	108	;'l'
  8024  00F6A9  74                 	db	116	;'t'
  8025  00F6AA  73                 	db	115	;'s'
  8026  00F6AB  0A                 	db	10
  8027  00F6AC  0D                 	db	13
  8028  00F6AD  00                 	db	0
  8029  00F6AE                     STR_105:
  8030  00F6AE  4C                 	db	76	;'L'
  8031  00F6AF  6F                 	db	111	;'o'
  8032  00F6B0  61                 	db	97	;'a'
  8033  00F6B1  64                 	db	100	;'d'
  8034  00F6B2  20                 	db	32
  8035  00F6B3  69                 	db	105	;'i'
  8036  00F6B4  73                 	db	115	;'s'
  8037  00F6B5  20                 	db	32
  8038  00F6B6  63                 	db	99	;'c'
  8039  00F6B7  75                 	db	117	;'u'
  8040  00F6B8  72                 	db	114	;'r'
  8041  00F6B9  72                 	db	114	;'r'
  8042  00F6BA  65                 	db	101	;'e'
  8043  00F6BB  6E                 	db	110	;'n'
  8044  00F6BC  74                 	db	116	;'t'
  8045  00F6BD  6C                 	db	108	;'l'
  8046  00F6BE  79                 	db	121	;'y'
  8047  00F6BF  20                 	db	32
  8048  00F6C0  65                 	db	101	;'e'
  8049  00F6C1  6E                 	db	110	;'n'
  8050  00F6C2  61                 	db	97	;'a'
  8051  00F6C3  62                 	db	98	;'b'
  8052  00F6C4  6C                 	db	108	;'l'
  8053  00F6C5  65                 	db	101	;'e'
  8054  00F6C6  64                 	db	100	;'d'
  8055  00F6C7  2C                 	db	44
  8056  00F6C8  20                 	db	32
  8057  00F6C9  62                 	db	98	;'b'
  8058  00F6CA  75                 	db	117	;'u'
  8059  00F6CB  74                 	db	116	;'t'
  8060  00F6CC  20                 	db	32
  8061  00F6CD  64                 	db	100	;'d'
  8062  00F6CE  69                 	db	105	;'i'
  8063  00F6CF  6D                 	db	109	;'m'
  8064  00F6D0  6D                 	db	109	;'m'
  8065  00F6D1  69                 	db	105	;'i'
  8066  00F6D2  6E                 	db	110	;'n'
  8067  00F6D3  67                 	db	103	;'g'
  8068  00F6D4  20                 	db	32
  8069  00F6D5  69                 	db	105	;'i'
  8070  00F6D6  73                 	db	115	;'s'
  8071  00F6D7  20                 	db	32
  8072  00F6D8  64                 	db	100	;'d'
  8073  00F6D9  69                 	db	105	;'i'
  8074  00F6DA  73                 	db	115	;'s'
  8075  00F6DB  61                 	db	97	;'a'
  8076  00F6DC  62                 	db	98	;'b'
  8077  00F6DD  6C                 	db	108	;'l'
  8078  00F6DE  65                 	db	101	;'e'
  8079  00F6DF  64                 	db	100	;'d'
  8080  00F6E0  0A                 	db	10
  8081  00F6E1  0D                 	db	13
  8082  00F6E2  00                 	db	0
  8083  00F6E3                     STR_119:
  8084  00F6E3  4C                 	db	76	;'L'
  8085  00F6E4  6F                 	db	111	;'o'
  8086  00F6E5  61                 	db	97	;'a'
  8087  00F6E6  64                 	db	100	;'d'
  8088  00F6E7  20                 	db	32
  8089  00F6E8  6F                 	db	111	;'o'
  8090  00F6E9  6E                 	db	110	;'n'
  8091  00F6EA  20                 	db	32
  8092  00F6EB  74                 	db	116	;'t'
  8093  00F6EC  69                 	db	105	;'i'
  8094  00F6ED  6D                 	db	109	;'m'
  8095  00F6EE  65                 	db	101	;'e'
  8096  00F6EF  20                 	db	32
  8097  00F6F0  73                 	db	115	;'s'
  8098  00F6F1  69                 	db	105	;'i'
  8099  00F6F2  6E                 	db	110	;'n'
  8100  00F6F3  63                 	db	99	;'c'
  8101  00F6F4  65                 	db	101	;'e'
  8102  00F6F5  20                 	db	32
  8103  00F6F6  6C                 	db	108	;'l'
  8104  00F6F7  61                 	db	97	;'a'
  8105  00F6F8  73                 	db	115	;'s'
  8106  00F6F9  74                 	db	116	;'t'
  8107  00F6FA  20                 	db	32
  8108  00F6FB  64                 	db	100	;'d'
  8109  00F6FC  65                 	db	101	;'e'
  8110  00F6FD  76                 	db	118	;'v'
  8111  00F6FE  69                 	db	105	;'i'
  8112  00F6FF  63                 	db	99	;'c'
  8113  00F700  65                 	db	101	;'e'
  8114  00F701  20                 	db	32
  8115  00F702  72                 	db	114	;'r'
  8116  00F703  65                 	db	101	;'e'
  8117  00F704  73                 	db	115	;'s'
  8118  00F705  65                 	db	101	;'e'
  8119  00F706  74                 	db	116	;'t'
  8120  00F707  20                 	db	32
  8121  00F708  69                 	db	105	;'i'
  8122  00F709  73                 	db	115	;'s'
  8123  00F70A  20                 	db	32
  8124  00F70B  25                 	db	37
  8125  00F70C  64                 	db	100	;'d'
  8126  00F70D  20                 	db	32
  8127  00F70E  73                 	db	115	;'s'
  8128  00F70F  65                 	db	101	;'e'
  8129  00F710  63                 	db	99	;'c'
  8130  00F711  6F                 	db	111	;'o'
  8131  00F712  6E                 	db	110	;'n'
  8132  00F713  64                 	db	100	;'d'
  8133  00F714  73                 	db	115	;'s'
  8134  00F715  0A                 	db	10
  8135  00F716  0D                 	db	13
  8136  00F717  00                 	db	0
  8137  00F718                     STR_48:
  8138  00F718  54                 	db	84	;'T'
  8139  00F719  68                 	db	104	;'h'
  8140  00F71A  65                 	db	101	;'e'
  8141  00F71B  20                 	db	32
  8142  00F71C  63                 	db	99	;'c'
  8143  00F71D  61                 	db	97	;'a'
  8144  00F71E  75                 	db	117	;'u'
  8145  00F71F  73                 	db	115	;'s'
  8146  00F720  65                 	db	101	;'e'
  8147  00F721  20                 	db	32
  8148  00F722  6F                 	db	111	;'o'
  8149  00F723  66                 	db	102	;'f'
  8150  00F724  20                 	db	32
  8151  00F725  74                 	db	116	;'t'
  8152  00F726  68                 	db	104	;'h'
  8153  00F727  65                 	db	101	;'e'
  8154  00F728  20                 	db	32
  8155  00F729  6D                 	db	109	;'m'
  8156  00F72A  6F                 	db	111	;'o'
  8157  00F72B  73                 	db	115	;'s'
  8158  00F72C  74                 	db	116	;'t'
  8159  00F72D  20                 	db	32
  8160  00F72E  72                 	db	114	;'r'
  8161  00F72F  65                 	db	101	;'e'
  8162  00F730  63                 	db	99	;'c'
  8163  00F731  65                 	db	101	;'e'
  8164  00F732  6E                 	db	110	;'n'
  8165  00F733  74                 	db	116	;'t'
  8166  00F734  20                 	db	32
  8167  00F735  64                 	db	100	;'d'
  8168  00F736  65                 	db	101	;'e'
  8169  00F737  76                 	db	118	;'v'
  8170  00F738  69                 	db	105	;'i'
  8171  00F739  63                 	db	99	;'c'
  8172  00F73A  65                 	db	101	;'e'
  8173  00F73B  20                 	db	32
  8174  00F73C  72                 	db	114	;'r'
  8175  00F73D  65                 	db	101	;'e'
  8176  00F73E  73                 	db	115	;'s'
  8177  00F73F  65                 	db	101	;'e'
  8178  00F740  74                 	db	116	;'t'
  8179  00F741  20                 	db	32
  8180  00F742  77                 	db	119	;'w'
  8181  00F743  61                 	db	97	;'a'
  8182  00F744  73                 	db	115	;'s'
  8183  00F745  3A                 	db	58	;':'
  8184  00F746  20                 	db	32
  8185  00F747  25                 	db	37
  8186  00F748  73                 	db	115	;'s'
  8187  00F749  0A                 	db	10
  8188  00F74A  0D                 	db	13
  8189  00F74B  00                 	db	0
  8190  00F74C                     STR_125:
  8191  00F74C  4D                 	db	77	;'M'
  8192  00F74D  61                 	db	97	;'a'
  8193  00F74E  78                 	db	120	;'x'
  8194  00F74F  69                 	db	105	;'i'
  8195  00F750  6D                 	db	109	;'m'
  8196  00F751  75                 	db	117	;'u'
  8197  00F752  6D                 	db	109	;'m'
  8198  00F753  20                 	db	32
  8199  00F754  72                 	db	114	;'r'
  8200  00F755  65                 	db	101	;'e'
  8201  00F756  63                 	db	99	;'c'
  8202  00F757  6F                 	db	111	;'o'
  8203  00F758  72                 	db	114	;'r'
  8204  00F759  64                 	db	100	;'d'
  8205  00F75A  65                 	db	101	;'e'
  8206  00F75B  64                 	db	100	;'d'
  8207  00F75C  20                 	db	32
  8208  00F75D  2B                 	db	43
  8209  00F75E  33                 	db	51	;'3'
  8210  00F75F  2E                 	db	46
  8211  00F760  33                 	db	51	;'3'
  8212  00F761  56                 	db	86	;'V'
  8213  00F762  20                 	db	32
  8214  00F763  72                 	db	114	;'r'
  8215  00F764  61                 	db	97	;'a'
  8216  00F765  69                 	db	105	;'i'
  8217  00F766  6C                 	db	108	;'l'
  8218  00F767  20                 	db	32
  8219  00F768  76                 	db	118	;'v'
  8220  00F769  6F                 	db	111	;'o'
  8221  00F76A  6C                 	db	108	;'l'
  8222  00F76B  74                 	db	116	;'t'
  8223  00F76C  61                 	db	97	;'a'
  8224  00F76D  67                 	db	103	;'g'
  8225  00F76E  65                 	db	101	;'e'
  8226  00F76F  20                 	db	32
  8227  00F770  69                 	db	105	;'i'
  8228  00F771  73                 	db	115	;'s'
  8229  00F772  20                 	db	32
  8230  00F773  25                 	db	37
  8231  00F774  2E                 	db	46
  8232  00F775  33                 	db	51	;'3'
  8233  00F776  66                 	db	102	;'f'
  8234  00F777  20                 	db	32
  8235  00F778  56                 	db	86	;'V'
  8236  00F779  6F                 	db	111	;'o'
  8237  00F77A  6C                 	db	108	;'l'
  8238  00F77B  74                 	db	116	;'t'
  8239  00F77C  73                 	db	115	;'s'
  8240  00F77D  0A                 	db	10
  8241  00F77E  0D                 	db	13
  8242  00F77F  00                 	db	0
  8243  00F780                     STR_121:
  8244  00F780  4D                 	db	77	;'M'
  8245  00F781  61                 	db	97	;'a'
  8246  00F782  78                 	db	120	;'x'
  8247  00F783  69                 	db	105	;'i'
  8248  00F784  6D                 	db	109	;'m'
  8249  00F785  75                 	db	117	;'u'
  8250  00F786  6D                 	db	109	;'m'
  8251  00F787  20                 	db	32
  8252  00F788  72                 	db	114	;'r'
  8253  00F789  65                 	db	101	;'e'
  8254  00F78A  63                 	db	99	;'c'
  8255  00F78B  6F                 	db	111	;'o'
  8256  00F78C  72                 	db	114	;'r'
  8257  00F78D  64                 	db	100	;'d'
  8258  00F78E  65                 	db	101	;'e'
  8259  00F78F  64                 	db	100	;'d'
  8260  00F790  20                 	db	32
  8261  00F791  52                 	db	82	;'R'
  8262  00F792  4D                 	db	77	;'M'
  8263  00F793  53                 	db	83	;'S'
  8264  00F794  20                 	db	32
  8265  00F795  6F                 	db	111	;'o'
  8266  00F796  75                 	db	117	;'u'
  8267  00F797  74                 	db	116	;'t'
  8268  00F798  70                 	db	112	;'p'
  8269  00F799  75                 	db	117	;'u'
  8270  00F79A  74                 	db	116	;'t'
  8271  00F79B  20                 	db	32
  8272  00F79C  63                 	db	99	;'c'
  8273  00F79D  75                 	db	117	;'u'
  8274  00F79E  72                 	db	114	;'r'
  8275  00F79F  72                 	db	114	;'r'
  8276  00F7A0  65                 	db	101	;'e'
  8277  00F7A1  6E                 	db	110	;'n'
  8278  00F7A2  74                 	db	116	;'t'
  8279  00F7A3  20                 	db	32
  8280  00F7A4  69                 	db	105	;'i'
  8281  00F7A5  73                 	db	115	;'s'
  8282  00F7A6  20                 	db	32
  8283  00F7A7  25                 	db	37
  8284  00F7A8  2E                 	db	46
  8285  00F7A9  33                 	db	51	;'3'
  8286  00F7AA  66                 	db	102	;'f'
  8287  00F7AB  20                 	db	32
  8288  00F7AC  41                 	db	65	;'A'
  8289  00F7AD  72                 	db	114	;'r'
  8290  00F7AE  6D                 	db	109	;'m'
  8291  00F7AF  73                 	db	115	;'s'
  8292  00F7B0  0A                 	db	10
  8293  00F7B1  0D                 	db	13
  8294  00F7B2  00                 	db	0
  8295  00F7B3                     STR_127:
  8296  00F7B3  4D                 	db	77	;'M'
  8297  00F7B4  61                 	db	97	;'a'
  8298  00F7B5  78                 	db	120	;'x'
  8299  00F7B6  69                 	db	105	;'i'
  8300  00F7B7  6D                 	db	109	;'m'
  8301  00F7B8  75                 	db	117	;'u'
  8302  00F7B9  6D                 	db	109	;'m'
  8303  00F7BA  20                 	db	32
  8304  00F7BB  72                 	db	114	;'r'
  8305  00F7BC  65                 	db	101	;'e'
  8306  00F7BD  63                 	db	99	;'c'
  8307  00F7BE  6F                 	db	111	;'o'
  8308  00F7BF  72                 	db	114	;'r'
  8309  00F7C0  64                 	db	100	;'d'
  8310  00F7C1  65                 	db	101	;'e'
  8311  00F7C2  64                 	db	100	;'d'
  8312  00F7C3  20                 	db	32
  8313  00F7C4  2B                 	db	43
  8314  00F7C5  31                 	db	49	;'1'
  8315  00F7C6  32                 	db	50	;'2'
  8316  00F7C7  56                 	db	86	;'V'
  8317  00F7C8  20                 	db	32
  8318  00F7C9  72                 	db	114	;'r'
  8319  00F7CA  61                 	db	97	;'a'
  8320  00F7CB  69                 	db	105	;'i'
  8321  00F7CC  6C                 	db	108	;'l'
  8322  00F7CD  20                 	db	32
  8323  00F7CE  76                 	db	118	;'v'
  8324  00F7CF  6F                 	db	111	;'o'
  8325  00F7D0  6C                 	db	108	;'l'
  8326  00F7D1  74                 	db	116	;'t'
  8327  00F7D2  61                 	db	97	;'a'
  8328  00F7D3  67                 	db	103	;'g'
  8329  00F7D4  65                 	db	101	;'e'
  8330  00F7D5  20                 	db	32
  8331  00F7D6  69                 	db	105	;'i'
  8332  00F7D7  73                 	db	115	;'s'
  8333  00F7D8  20                 	db	32
  8334  00F7D9  25                 	db	37
  8335  00F7DA  2E                 	db	46
  8336  00F7DB  33                 	db	51	;'3'
  8337  00F7DC  66                 	db	102	;'f'
  8338  00F7DD  20                 	db	32
  8339  00F7DE  56                 	db	86	;'V'
  8340  00F7DF  6F                 	db	111	;'o'
  8341  00F7E0  6C                 	db	108	;'l'
  8342  00F7E1  74                 	db	116	;'t'
  8343  00F7E2  73                 	db	115	;'s'
  8344  00F7E3  0A                 	db	10
  8345  00F7E4  0D                 	db	13
  8346  00F7E5  00                 	db	0
  8347  00F7E6                     STR_69:
  8348  00F7E6  54                 	db	84	;'T'
  8349  00F7E7  68                 	db	104	;'h'
  8350  00F7E8  65                 	db	101	;'e'
  8351  00F7E9  20                 	db	32
  8352  00F7EA  66                 	db	102	;'f'
  8353  00F7EB  6F                 	db	111	;'o'
  8354  00F7EC  6C                 	db	108	;'l'
  8355  00F7ED  6C                 	db	108	;'l'
  8356  00F7EE  6F                 	db	111	;'o'
  8357  00F7EF  77                 	db	119	;'w'
  8358  00F7F0  69                 	db	105	;'i'
  8359  00F7F1  6E                 	db	110	;'n'
  8360  00F7F2  67                 	db	103	;'g'
  8361  00F7F3  20                 	db	32
  8362  00F7F4  63                 	db	99	;'c'
  8363  00F7F5  68                 	db	104	;'h'
  8364  00F7F6  61                 	db	97	;'a'
  8365  00F7F7  6E                 	db	110	;'n'
  8366  00F7F8  6E                 	db	110	;'n'
  8367  00F7F9  65                 	db	101	;'e'
  8368  00F7FA  6C                 	db	108	;'l'
  8369  00F7FB  20                 	db	32
  8370  00F7FC  63                 	db	99	;'c'
  8371  00F7FD  61                 	db	97	;'a'
  8372  00F7FE  75                 	db	117	;'u'
  8373  00F7FF  73                 	db	115	;'s'
  8374  00F800  65                 	db	101	;'e'
  8375  00F801  64                 	db	100	;'d'
  8376  00F802  20                 	db	32
  8377  00F803  61                 	db	97	;'a'
  8378  00F804  6E                 	db	110	;'n'
  8379  00F805  20                 	db	32
  8380  00F806  41                 	db	65	;'A'
  8381  00F807  44                 	db	68	;'D'
  8382  00F808  43                 	db	67	;'C'
  8383  00F809  20                 	db	32
  8384  00F80A  65                 	db	101	;'e'
  8385  00F80B  72                 	db	114	;'r'
  8386  00F80C  72                 	db	114	;'r'
  8387  00F80D  6F                 	db	111	;'o'
  8388  00F80E  72                 	db	114	;'r'
  8389  00F80F  3A                 	db	58	;':'
  8390  00F810  20                 	db	32
  8391  00F811  25                 	db	37
  8392  00F812  73                 	db	115	;'s'
  8393  00F813  0A                 	db	10
  8394  00F814  0D                 	db	13
  8395  00F815  00                 	db	0
  8396  00F816                     STR_52:
  8397  00F816  4D                 	db	77	;'M'
  8398  00F817  61                 	db	97	;'a'
  8399  00F818  72                 	db	114	;'r'
  8400  00F819  71                 	db	113	;'q'
  8401  00F81A  75                 	db	117	;'u'
  8402  00F81B  65                 	db	101	;'e'
  8403  00F81C  74                 	db	116	;'t'
  8404  00F81D  74                 	db	116	;'t'
  8405  00F81E  65                 	db	101	;'e'
  8406  00F81F  20                 	db	32
  8407  00F820  55                 	db	85	;'U'
  8408  00F821  6E                 	db	110	;'n'
  8409  00F822  69                 	db	105	;'i'
  8410  00F823  76                 	db	118	;'v'
  8411  00F824  65                 	db	101	;'e'
  8412  00F825  72                 	db	114	;'r'
  8413  00F826  73                 	db	115	;'s'
  8414  00F827  69                 	db	105	;'i'
  8415  00F828  74                 	db	116	;'t'
  8416  00F829  79                 	db	121	;'y'
  8417  00F82A  20                 	db	32
  8418  00F82B  45                 	db	69	;'E'
  8419  00F82C  4C                 	db	76	;'L'
  8420  00F82D  45                 	db	69	;'E'
  8421  00F82E  4E                 	db	78	;'N'
  8422  00F82F  20                 	db	32
  8423  00F830  33                 	db	51	;'3'
  8424  00F831  30                 	db	48	;'0'
  8425  00F832  33                 	db	51	;'3'
  8426  00F833  35                 	db	53	;'5'
  8427  00F834  20                 	db	32
  8428  00F835  46                 	db	70	;'F'
  8429  00F836  69                 	db	105	;'i'
  8430  00F837  6E                 	db	110	;'n'
  8431  00F838  61                 	db	97	;'a'
  8432  00F839  6C                 	db	108	;'l'
  8433  00F83A  20                 	db	32
  8434  00F83B  50                 	db	80	;'P'
  8435  00F83C  72                 	db	114	;'r'
  8436  00F83D  6F                 	db	111	;'o'
  8437  00F83E  6A                 	db	106	;'j'
  8438  00F83F  65                 	db	101	;'e'
  8439  00F840  63                 	db	99	;'c'
  8440  00F841  74                 	db	116	;'t'
  8441  00F842  0A                 	db	10
  8442  00F843  0D                 	db	13
  8443  00F844  00                 	db	0
  8444  00F845                     STR_149:
  8445  00F845  45                 	db	69	;'E'
  8446  00F846  72                 	db	114	;'r'
  8447  00F847  72                 	db	114	;'r'
  8448  00F848  6F                 	db	111	;'o'
  8449  00F849  72                 	db	114	;'r'
  8450  00F84A  73                 	db	115	;'s'
  8451  00F84B  20                 	db	32
  8452  00F84C  61                 	db	97	;'a'
  8453  00F84D  6E                 	db	110	;'n'
  8454  00F84E  64                 	db	100	;'d'
  8455  00F84F  20                 	db	32
  8456  00F850  6E                 	db	110	;'n'
  8457  00F851  65                 	db	101	;'e'
  8458  00F852  67                 	db	103	;'g'
  8459  00F853  61                 	db	97	;'a'
  8460  00F854  74                 	db	116	;'t'
  8461  00F855  69                 	db	105	;'i'
  8462  00F856  76                 	db	118	;'v'
  8463  00F857  65                 	db	101	;'e'
  8464  00F858  20                 	db	32
  8465  00F859  72                 	db	114	;'r'
  8466  00F85A  65                 	db	101	;'e'
  8467  00F85B  73                 	db	115	;'s'
  8468  00F85C  70                 	db	112	;'p'
  8469  00F85D  6F                 	db	111	;'o'
  8470  00F85E  6E                 	db	110	;'n'
  8471  00F85F  73                 	db	115	;'s'
  8472  00F860  65                 	db	101	;'e'
  8473  00F861  73                 	db	115	;'s'
  8474  00F862  20                 	db	32
  8475  00F863  61                 	db	97	;'a'
  8476  00F864  70                 	db	112	;'p'
  8477  00F865  70                 	db	112	;'p'
  8478  00F866  65                 	db	101	;'e'
  8479  00F867  61                 	db	97	;'a'
  8480  00F868  72                 	db	114	;'r'
  8481  00F869  20                 	db	32
  8482  00F86A  69                 	db	105	;'i'
  8483  00F86B  6E                 	db	110	;'n'
  8484  00F86C  20                 	db	32
  8485  00F86D  72                 	db	114	;'r'
  8486  00F86E  65                 	db	101	;'e'
  8487  00F86F  64                 	db	100	;'d'
  8488  00F870  0A                 	db	10
  8489  00F871  0D                 	db	13
  8490  00F872  00                 	db	0
  8491  00F873                     STR_112:
  8492  00F873  45                 	db	69	;'E'
  8493  00F874  6E                 	db	110	;'n'
  8494  00F875  74                 	db	116	;'t'
  8495  00F876  65                 	db	101	;'e'
  8496  00F877  72                 	db	114	;'r'
  8497  00F878  20                 	db	32
  8498  00F879  27                 	db	39
  8499  00F87A  48                 	db	72	;'H'
  8500  00F87B  65                 	db	101	;'e'
  8501  00F87C  6C                 	db	108	;'l'
  8502  00F87D  70                 	db	112	;'p'
  8503  00F87E  27                 	db	39
  8504  00F87F  20                 	db	32
  8505  00F880  66                 	db	102	;'f'
  8506  00F881  6F                 	db	111	;'o'
  8507  00F882  72                 	db	114	;'r'
  8508  00F883  20                 	db	32
  8509  00F884  6C                 	db	108	;'l'
  8510  00F885  69                 	db	105	;'i'
  8511  00F886  73                 	db	115	;'s'
  8512  00F887  74                 	db	116	;'t'
  8513  00F888  20                 	db	32
  8514  00F889  6F                 	db	111	;'o'
  8515  00F88A  66                 	db	102	;'f'
  8516  00F88B  20                 	db	32
  8517  00F88C  61                 	db	97	;'a'
  8518  00F88D  76                 	db	118	;'v'
  8519  00F88E  61                 	db	97	;'a'
  8520  00F88F  69                 	db	105	;'i'
  8521  00F890  6C                 	db	108	;'l'
  8522  00F891  61                 	db	97	;'a'
  8523  00F892  62                 	db	98	;'b'
  8524  00F893  6C                 	db	108	;'l'
  8525  00F894  65                 	db	101	;'e'
  8526  00F895  20                 	db	32
  8527  00F896  63                 	db	99	;'c'
  8528  00F897  6F                 	db	111	;'o'
  8529  00F898  6D                 	db	109	;'m'
  8530  00F899  6D                 	db	109	;'m'
  8531  00F89A  61                 	db	97	;'a'
  8532  00F89B  6E                 	db	110	;'n'
  8533  00F89C  64                 	db	100	;'d'
  8534  00F89D  73                 	db	115	;'s'
  8535  00F89E  0A                 	db	10
  8536  00F89F  0D                 	db	13
  8537  00F8A0  00                 	db	0
  8538  00F8A1                     STR_123:
  8539  00F8A1  4D                 	db	77	;'M'
  8540  00F8A2  61                 	db	97	;'a'
  8541  00F8A3  78                 	db	120	;'x'
  8542  00F8A4  69                 	db	105	;'i'
  8543  00F8A5  6D                 	db	109	;'m'
  8544  00F8A6  75                 	db	117	;'u'
  8545  00F8A7  6D                 	db	109	;'m'
  8546  00F8A8  20                 	db	32
  8547  00F8A9  72                 	db	114	;'r'
  8548  00F8AA  65                 	db	101	;'e'
  8549  00F8AB  63                 	db	99	;'c'
  8550  00F8AC  6F                 	db	111	;'o'
  8551  00F8AD  72                 	db	114	;'r'
  8552  00F8AE  64                 	db	100	;'d'
  8553  00F8AF  65                 	db	101	;'e'
  8554  00F8B0  64                 	db	100	;'d'
  8555  00F8B1  20                 	db	32
  8556  00F8B2  6F                 	db	111	;'o'
  8557  00F8B3  75                 	db	117	;'u'
  8558  00F8B4  74                 	db	116	;'t'
  8559  00F8B5  70                 	db	112	;'p'
  8560  00F8B6  75                 	db	117	;'u'
  8561  00F8B7  74                 	db	116	;'t'
  8562  00F8B8  20                 	db	32
  8563  00F8B9  70                 	db	112	;'p'
  8564  00F8BA  6F                 	db	111	;'o'
  8565  00F8BB  77                 	db	119	;'w'
  8566  00F8BC  65                 	db	101	;'e'
  8567  00F8BD  72                 	db	114	;'r'
  8568  00F8BE  20                 	db	32
  8569  00F8BF  69                 	db	105	;'i'
  8570  00F8C0  73                 	db	115	;'s'
  8571  00F8C1  20                 	db	32
  8572  00F8C2  25                 	db	37
  8573  00F8C3  2E                 	db	46
  8574  00F8C4  33                 	db	51	;'3'
  8575  00F8C5  66                 	db	102	;'f'
  8576  00F8C6  20                 	db	32
  8577  00F8C7  57                 	db	87	;'W'
  8578  00F8C8  61                 	db	97	;'a'
  8579  00F8C9  74                 	db	116	;'t'
  8580  00F8CA  74                 	db	116	;'t'
  8581  00F8CB  73                 	db	115	;'s'
  8582  00F8CC  0A                 	db	10
  8583  00F8CD  0D                 	db	13
  8584  00F8CE  00                 	db	0
  8585  00F8CF                     STR_129:
  8586  00F8CF  4D                 	db	77	;'M'
  8587  00F8D0  61                 	db	97	;'a'
  8588  00F8D1  78                 	db	120	;'x'
  8589  00F8D2  69                 	db	105	;'i'
  8590  00F8D3  6D                 	db	109	;'m'
  8591  00F8D4  75                 	db	117	;'u'
  8592  00F8D5  6D                 	db	109	;'m'
  8593  00F8D6  20                 	db	32
  8594  00F8D7  72                 	db	114	;'r'
  8595  00F8D8  65                 	db	101	;'e'
  8596  00F8D9  63                 	db	99	;'c'
  8597  00F8DA  6F                 	db	111	;'o'
  8598  00F8DB  72                 	db	114	;'r'
  8599  00F8DC  64                 	db	100	;'d'
  8600  00F8DD  65                 	db	101	;'e'
  8601  00F8DE  64                 	db	100	;'d'
  8602  00F8DF  20                 	db	32
  8603  00F8E0  64                 	db	100	;'d'
  8604  00F8E1  69                 	db	105	;'i'
  8605  00F8E2  65                 	db	101	;'e'
  8606  00F8E3  20                 	db	32
  8607  00F8E4  74                 	db	116	;'t'
  8608  00F8E5  65                 	db	101	;'e'
  8609  00F8E6  6D                 	db	109	;'m'
  8610  00F8E7  70                 	db	112	;'p'
  8611  00F8E8  65                 	db	101	;'e'
  8612  00F8E9  72                 	db	114	;'r'
  8613  00F8EA  61                 	db	97	;'a'
  8614  00F8EB  74                 	db	116	;'t'
  8615  00F8EC  75                 	db	117	;'u'
  8616  00F8ED  72                 	db	114	;'r'
  8617  00F8EE  65                 	db	101	;'e'
  8618  00F8EF  20                 	db	32
  8619  00F8F0  69                 	db	105	;'i'
  8620  00F8F1  73                 	db	115	;'s'
  8621  00F8F2  20                 	db	32
  8622  00F8F3  25                 	db	37
  8623  00F8F4  2E                 	db	46
  8624  00F8F5  33                 	db	51	;'3'
  8625  00F8F6  66                 	db	102	;'f'
  8626  00F8F7  20                 	db	32
  8627  00F8F8  43                 	db	67	;'C'
  8628  00F8F9  0A                 	db	10
  8629  00F8FA  0D                 	db	13
  8630  00F8FB  00                 	db	0
  8631  00F8FC                     STR_75:
  8632  00F8FC  56                 	db	86	;'V'
  8633  00F8FD  43                 	db	67	;'C'
  8634  00F8FE  43                 	db	67	;'C'
  8635  00F8FF  20                 	db	32
  8636  00F900  4F                 	db	79	;'O'
  8637  00F901  76                 	db	118	;'v'
  8638  00F902  65                 	db	101	;'e'
  8639  00F903  72                 	db	114	;'r'
  8640  00F904  76                 	db	118	;'v'
  8641  00F905  6F                 	db	111	;'o'
  8642  00F906  6C                 	db	108	;'l'
  8643  00F907  74                 	db	116	;'t'
  8644  00F908  61                 	db	97	;'a'
  8645  00F909  67                 	db	103	;'g'
  8646  00F90A  65                 	db	101	;'e'
  8647  00F90B  20                 	db	32
  8648  00F90C  63                 	db	99	;'c'
  8649  00F90D  6F                 	db	111	;'o'
  8650  00F90E  6E                 	db	110	;'n'
  8651  00F90F  64                 	db	100	;'d'
  8652  00F910  69                 	db	105	;'i'
  8653  00F911  74                 	db	116	;'t'
  8654  00F912  69                 	db	105	;'i'
  8655  00F913  6F                 	db	111	;'o'
  8656  00F914  6E                 	db	110	;'n'
  8657  00F915  20                 	db	32
  8658  00F916  68                 	db	104	;'h'
  8659  00F917  61                 	db	97	;'a'
  8660  00F918  73                 	db	115	;'s'
  8661  00F919  20                 	db	32
  8662  00F91A  6E                 	db	110	;'n'
  8663  00F91B  6F                 	db	111	;'o'
  8664  00F91C  74                 	db	116	;'t'
  8665  00F91D  20                 	db	32
  8666  00F91E  6F                 	db	111	;'o'
  8667  00F91F  63                 	db	99	;'c'
  8668  00F920  63                 	db	99	;'c'
  8669  00F921  75                 	db	117	;'u'
  8670  00F922  72                 	db	114	;'r'
  8671  00F923  72                 	db	114	;'r'
  8672  00F924  65                 	db	101	;'e'
  8673  00F925  64                 	db	100	;'d'
  8674  00F926  0A                 	db	10
  8675  00F927  0D                 	db	13
  8676  00F928  00                 	db	0
  8677  00F929                     STR_99:
  8678  00F929  4C                 	db	76	;'L'
  8679  00F92A  6F                 	db	111	;'o'
  8680  00F92B  61                 	db	97	;'a'
  8681  00F92C  64                 	db	100	;'d'
  8682  00F92D  20                 	db	32
  8683  00F92E  68                 	db	104	;'h'
  8684  00F92F  61                 	db	97	;'a'
  8685  00F930  73                 	db	115	;'s'
  8686  00F931  20                 	db	32
  8687  00F932  62                 	db	98	;'b'
  8688  00F933  65                 	db	101	;'e'
  8689  00F934  65                 	db	101	;'e'
  8690  00F935  6E                 	db	110	;'n'
  8691  00F936  20                 	db	32
  8692  00F937  65                 	db	101	;'e'
  8693  00F938  6E                 	db	110	;'n'
  8694  00F939  61                 	db	97	;'a'
  8695  00F93A  62                 	db	98	;'b'
  8696  00F93B  6C                 	db	108	;'l'
  8697  00F93C  65                 	db	101	;'e'
  8698  00F93D  64                 	db	100	;'d'
  8699  00F93E  2C                 	db	44
  8700  00F93F  20                 	db	32
  8701  00F940  64                 	db	100	;'d'
  8702  00F941  69                 	db	105	;'i'
  8703  00F942  6D                 	db	109	;'m'
  8704  00F943  6D                 	db	109	;'m'
  8705  00F944  69                 	db	105	;'i'
  8706  00F945  6E                 	db	110	;'n'
  8707  00F946  67                 	db	103	;'g'
  8708  00F947  20                 	db	32
  8709  00F948  64                 	db	100	;'d'
  8710  00F949  69                 	db	105	;'i'
  8711  00F94A  73                 	db	115	;'s'
  8712  00F94B  61                 	db	97	;'a'
  8713  00F94C  62                 	db	98	;'b'
  8714  00F94D  6C                 	db	108	;'l'
  8715  00F94E  65                 	db	101	;'e'
  8716  00F94F  64                 	db	100	;'d'
  8717  00F950  0A                 	db	10
  8718  00F951  0D                 	db	13
  8719  00F952  00                 	db	0
  8720  00F953                     STR_106:
  8721  00F953  4C                 	db	76	;'L'
  8722  00F954  6F                 	db	111	;'o'
  8723  00F955  61                 	db	97	;'a'
  8724  00F956  64                 	db	100	;'d'
  8725  00F957  20                 	db	32
  8726  00F958  61                 	db	97	;'a'
  8727  00F959  6E                 	db	110	;'n'
  8728  00F95A  64                 	db	100	;'d'
  8729  00F95B  20                 	db	32
  8730  00F95C  64                 	db	100	;'d'
  8731  00F95D  69                 	db	105	;'i'
  8732  00F95E  6D                 	db	109	;'m'
  8733  00F95F  6D                 	db	109	;'m'
  8734  00F960  69                 	db	105	;'i'
  8735  00F961  6E                 	db	110	;'n'
  8736  00F962  67                 	db	103	;'g'
  8737  00F963  20                 	db	32
  8738  00F964  61                 	db	97	;'a'
  8739  00F965  72                 	db	114	;'r'
  8740  00F966  65                 	db	101	;'e'
  8741  00F967  20                 	db	32
  8742  00F968  63                 	db	99	;'c'
  8743  00F969  75                 	db	117	;'u'
  8744  00F96A  72                 	db	114	;'r'
  8745  00F96B  72                 	db	114	;'r'
  8746  00F96C  65                 	db	101	;'e'
  8747  00F96D  6E                 	db	110	;'n'
  8748  00F96E  74                 	db	116	;'t'
  8749  00F96F  6C                 	db	108	;'l'
  8750  00F970  79                 	db	121	;'y'
  8751  00F971  20                 	db	32
  8752  00F972  64                 	db	100	;'d'
  8753  00F973  69                 	db	105	;'i'
  8754  00F974  73                 	db	115	;'s'
  8755  00F975  61                 	db	97	;'a'
  8756  00F976  62                 	db	98	;'b'
  8757  00F977  6C                 	db	108	;'l'
  8758  00F978  65                 	db	101	;'e'
  8759  00F979  64                 	db	100	;'d'
  8760  00F97A  0A                 	db	10
  8761  00F97B  0D                 	db	13
  8762  00F97C  00                 	db	0
  8763  00F97D                     STR_159:
  8764  00F97D  57                 	db	87	;'W'
  8765  00F97E  69                 	db	105	;'i'
  8766  00F97F  6E                 	db	110	;'n'
  8767  00F980  64                 	db	100	;'d'
  8768  00F981  6F                 	db	111	;'o'
  8769  00F982  77                 	db	119	;'w'
  8770  00F983  65                 	db	101	;'e'
  8771  00F984  64                 	db	100	;'d'
  8772  00F985  20                 	db	32
  8773  00F986  57                 	db	87	;'W'
  8774  00F987  61                 	db	97	;'a'
  8775  00F988  74                 	db	116	;'t'
  8776  00F989  63                 	db	99	;'c'
  8777  00F98A  68                 	db	104	;'h'
  8778  00F98B  20                 	db	32
  8779  00F98C  44                 	db	68	;'D'
  8780  00F98D  6F                 	db	111	;'o'
  8781  00F98E  67                 	db	103	;'g'
  8782  00F98F  20                 	db	32
  8783  00F990  54                 	db	84	;'T'
  8784  00F991  69                 	db	105	;'i'
  8785  00F992  6D                 	db	109	;'m'
  8786  00F993  65                 	db	101	;'e'
  8787  00F994  72                 	db	114	;'r'
  8788  00F995  20                 	db	32
  8789  00F996  56                 	db	86	;'V'
  8790  00F997  69                 	db	105	;'i'
  8791  00F998  6F                 	db	111	;'o'
  8792  00F999  6C                 	db	108	;'l'
  8793  00F99A  61                 	db	97	;'a'
  8794  00F99B  74                 	db	116	;'t'
  8795  00F99C  69                 	db	105	;'i'
  8796  00F99D  6F                 	db	111	;'o'
  8797  00F99E  6E                 	db	110	;'n'
  8798  00F99F  20                 	db	32
  8799  00F9A0  52                 	db	82	;'R'
  8800  00F9A1  65                 	db	101	;'e'
  8801  00F9A2  73                 	db	115	;'s'
  8802  00F9A3  65                 	db	101	;'e'
  8803  00F9A4  74                 	db	116	;'t'
  8804  00F9A5  00                 	db	0
  8805  00F9A6                     STR_97:
  8806  00F9A6  54                 	db	84	;'T'
  8807  00F9A7  52                 	db	82	;'R'
  8808  00F9A8  49                 	db	73	;'I'
  8809  00F9A9  41                 	db	65	;'A'
  8810  00F9AA  43                 	db	67	;'C'
  8811  00F9AB  20                 	db	32
  8812  00F9AC  6F                 	db	111	;'o'
  8813  00F9AD  75                 	db	117	;'u'
  8814  00F9AE  74                 	db	116	;'t'
  8815  00F9AF  70                 	db	112	;'p'
  8816  00F9B0  75                 	db	117	;'u'
  8817  00F9B1  74                 	db	116	;'t'
  8818  00F9B2  20                 	db	32
  8819  00F9B3  64                 	db	100	;'d'
  8820  00F9B4  69                 	db	105	;'i'
  8821  00F9B5  6D                 	db	109	;'m'
  8822  00F9B6  6D                 	db	109	;'m'
  8823  00F9B7  69                 	db	105	;'i'
  8824  00F9B8  6E                 	db	110	;'n'
  8825  00F9B9  67                 	db	103	;'g'
  8826  00F9BA  20                 	db	32
  8827  00F9BB  68                 	db	104	;'h'
  8828  00F9BC  61                 	db	97	;'a'
  8829  00F9BD  73                 	db	115	;'s'
  8830  00F9BE  20                 	db	32
  8831  00F9BF  62                 	db	98	;'b'
  8832  00F9C0  65                 	db	101	;'e'
  8833  00F9C1  65                 	db	101	;'e'
  8834  00F9C2  6E                 	db	110	;'n'
  8835  00F9C3  20                 	db	32
  8836  00F9C4  64                 	db	100	;'d'
  8837  00F9C5  69                 	db	105	;'i'
  8838  00F9C6  73                 	db	115	;'s'
  8839  00F9C7  61                 	db	97	;'a'
  8840  00F9C8  62                 	db	98	;'b'
  8841  00F9C9  6C                 	db	108	;'l'
  8842  00F9CA  65                 	db	101	;'e'
  8843  00F9CB  64                 	db	100	;'d'
  8844  00F9CC  0A                 	db	10
  8845  00F9CD  0D                 	db	13
  8846  00F9CE  00                 	db	0
  8847  00F9CF                     STR_95:
  8848  00F9CF  54                 	db	84	;'T'
  8849  00F9D0  52                 	db	82	;'R'
  8850  00F9D1  49                 	db	73	;'I'
  8851  00F9D2  41                 	db	65	;'A'
  8852  00F9D3  43                 	db	67	;'C'
  8853  00F9D4  20                 	db	32
  8854  00F9D5  6F                 	db	111	;'o'
  8855  00F9D6  75                 	db	117	;'u'
  8856  00F9D7  74                 	db	116	;'t'
  8857  00F9D8  70                 	db	112	;'p'
  8858  00F9D9  75                 	db	117	;'u'
  8859  00F9DA  74                 	db	116	;'t'
  8860  00F9DB  20                 	db	32
  8861  00F9DC  64                 	db	100	;'d'
  8862  00F9DD  69                 	db	105	;'i'
  8863  00F9DE  6D                 	db	109	;'m'
  8864  00F9DF  6D                 	db	109	;'m'
  8865  00F9E0  69                 	db	105	;'i'
  8866  00F9E1  6E                 	db	110	;'n'
  8867  00F9E2  67                 	db	103	;'g'
  8868  00F9E3  20                 	db	32
  8869  00F9E4  68                 	db	104	;'h'
  8870  00F9E5  61                 	db	97	;'a'
  8871  00F9E6  73                 	db	115	;'s'
  8872  00F9E7  20                 	db	32
  8873  00F9E8  62                 	db	98	;'b'
  8874  00F9E9  65                 	db	101	;'e'
  8875  00F9EA  65                 	db	101	;'e'
  8876  00F9EB  6E                 	db	110	;'n'
  8877  00F9EC  20                 	db	32
  8878  00F9ED  65                 	db	101	;'e'
  8879  00F9EE  6E                 	db	110	;'n'
  8880  00F9EF  61                 	db	97	;'a'
  8881  00F9F0  62                 	db	98	;'b'
  8882  00F9F1  6C                 	db	108	;'l'
  8883  00F9F2  65                 	db	101	;'e'
  8884  00F9F3  64                 	db	100	;'d'
  8885  00F9F4  0A                 	db	10
  8886  00F9F5  0D                 	db	13
  8887  00F9F6  00                 	db	0
  8888  00F9F7                     STR_148:
  8889  00F9F7  4D                 	db	77	;'M'
  8890  00F9F8  65                 	db	101	;'e'
  8891  00F9F9  61                 	db	97	;'a'
  8892  00F9FA  73                 	db	115	;'s'
  8893  00F9FB  75                 	db	117	;'u'
  8894  00F9FC  72                 	db	114	;'r'
  8895  00F9FD  65                 	db	101	;'e'
  8896  00F9FE  6D                 	db	109	;'m'
  8897  00F9FF  65                 	db	101	;'e'
  8898  00FA00  6E                 	db	110	;'n'
  8899  00FA01  74                 	db	116	;'t'
  8900  00FA02  20                 	db	32
  8901  00FA03  72                 	db	114	;'r'
  8902  00FA04  65                 	db	101	;'e'
  8903  00FA05  73                 	db	115	;'s'
  8904  00FA06  70                 	db	112	;'p'
  8905  00FA07  6F                 	db	111	;'o'
  8906  00FA08  6E                 	db	110	;'n'
  8907  00FA09  73                 	db	115	;'s'
  8908  00FA0A  65                 	db	101	;'e'
  8909  00FA0B  73                 	db	115	;'s'
  8910  00FA0C  20                 	db	32
  8911  00FA0D  61                 	db	97	;'a'
  8912  00FA0E  70                 	db	112	;'p'
  8913  00FA0F  70                 	db	112	;'p'
  8914  00FA10  65                 	db	101	;'e'
  8915  00FA11  61                 	db	97	;'a'
  8916  00FA12  72                 	db	114	;'r'
  8917  00FA13  20                 	db	32
  8918  00FA14  69                 	db	105	;'i'
  8919  00FA15  6E                 	db	110	;'n'
  8920  00FA16  20                 	db	32
  8921  00FA17  63                 	db	99	;'c'
  8922  00FA18  79                 	db	121	;'y'
  8923  00FA19  61                 	db	97	;'a'
  8924  00FA1A  6E                 	db	110	;'n'
  8925  00FA1B  0A                 	db	10
  8926  00FA1C  0D                 	db	13
  8927  00FA1D  00                 	db	0
  8928  00FA1E                     STR_85:
  8929  00FA1E  41                 	db	65	;'A'
  8930  00FA1F  56                 	db	86	;'V'
  8931  00FA20  53                 	db	83	;'S'
  8932  00FA21  53                 	db	83	;'S'
  8933  00FA22  20                 	db	32
  8934  00FA23  6D                 	db	109	;'m'
  8935  00FA24  65                 	db	101	;'e'
  8936  00FA25  61                 	db	97	;'a'
  8937  00FA26  73                 	db	115	;'s'
  8938  00FA27  75                 	db	117	;'u'
  8939  00FA28  72                 	db	114	;'r'
  8940  00FA29  65                 	db	101	;'e'
  8941  00FA2A  64                 	db	100	;'d'
  8942  00FA2B  20                 	db	32
  8943  00FA2C  61                 	db	97	;'a'
  8944  00FA2D  73                 	db	115	;'s'
  8945  00FA2E  20                 	db	32
  8946  00FA2F  25                 	db	37
  8947  00FA30  2E                 	db	46
  8948  00FA31  33                 	db	51	;'3'
  8949  00FA32  66                 	db	102	;'f'
  8950  00FA33  20                 	db	32
  8951  00FA34  56                 	db	86	;'V'
  8952  00FA35  6F                 	db	111	;'o'
  8953  00FA36  6C                 	db	108	;'l'
  8954  00FA37  74                 	db	116	;'t'
  8955  00FA38  73                 	db	115	;'s'
  8956  00FA39  20                 	db	32
  8957  00FA3A  62                 	db	98	;'b'
  8958  00FA3B  79                 	db	121	;'y'
  8959  00FA3C  20                 	db	32
  8960  00FA3D  41                 	db	65	;'A'
  8961  00FA3E  44                 	db	68	;'D'
  8962  00FA3F  43                 	db	67	;'C'
  8963  00FA40  0A                 	db	10
  8964  00FA41  0D                 	db	13
  8965  00FA42  00                 	db	0
  8966  00FA43                     STR_77:
  8967  00FA43  2B                 	db	43
  8968  00FA44  33                 	db	51	;'3'
  8969  00FA45  2E                 	db	46
  8970  00FA46  33                 	db	51	;'3'
  8971  00FA47  56                 	db	86	;'V'
  8972  00FA48  20                 	db	32
  8973  00FA49  72                 	db	114	;'r'
  8974  00FA4A  61                 	db	97	;'a'
  8975  00FA4B  69                 	db	105	;'i'
  8976  00FA4C  6C                 	db	108	;'l'
  8977  00FA4D  20                 	db	32
  8978  00FA4E  6D                 	db	109	;'m'
  8979  00FA4F  65                 	db	101	;'e'
  8980  00FA50  61                 	db	97	;'a'
  8981  00FA51  73                 	db	115	;'s'
  8982  00FA52  75                 	db	117	;'u'
  8983  00FA53  72                 	db	114	;'r'
  8984  00FA54  65                 	db	101	;'e'
  8985  00FA55  64                 	db	100	;'d'
  8986  00FA56  20                 	db	32
  8987  00FA57  61                 	db	97	;'a'
  8988  00FA58  73                 	db	115	;'s'
  8989  00FA59  20                 	db	32
  8990  00FA5A  2B                 	db	43
  8991  00FA5B  25                 	db	37
  8992  00FA5C  2E                 	db	46
  8993  00FA5D  33                 	db	51	;'3'
  8994  00FA5E  66                 	db	102	;'f'
  8995  00FA5F  20                 	db	32
  8996  00FA60  56                 	db	86	;'V'
  8997  00FA61  6F                 	db	111	;'o'
  8998  00FA62  6C                 	db	108	;'l'
  8999  00FA63  74                 	db	116	;'t'
  9000  00FA64  73                 	db	115	;'s'
  9001  00FA65  0A                 	db	10
  9002  00FA66  0D                 	db	13
  9003  00FA67  00                 	db	0
  9004  00FA68                     STR_113:
  9005  00FA68  44                 	db	68	;'D'
  9006  00FA69  69                 	db	105	;'i'
  9007  00FA6A  6D                 	db	109	;'m'
  9008  00FA6B  6D                 	db	109	;'m'
  9009  00FA6C  69                 	db	105	;'i'
  9010  00FA6D  6E                 	db	110	;'n'
  9011  00FA6E  67                 	db	103	;'g'
  9012  00FA6F  20                 	db	32
  9013  00FA70  68                 	db	104	;'h'
  9014  00FA71  61                 	db	97	;'a'
  9015  00FA72  73                 	db	115	;'s'
  9016  00FA73  20                 	db	32
  9017  00FA74  62                 	db	98	;'b'
  9018  00FA75  65                 	db	101	;'e'
  9019  00FA76  65                 	db	101	;'e'
  9020  00FA77  6E                 	db	110	;'n'
  9021  00FA78  20                 	db	32
  9022  00FA79  73                 	db	115	;'s'
  9023  00FA7A  65                 	db	101	;'e'
  9024  00FA7B  74                 	db	116	;'t'
  9025  00FA7C  20                 	db	32
  9026  00FA7D  74                 	db	116	;'t'
  9027  00FA7E  6F                 	db	111	;'o'
  9028  00FA7F  20                 	db	32
  9029  00FA80  25                 	db	37
  9030  00FA81  64                 	db	100	;'d'
  9031  00FA82  20                 	db	32
  9032  00FA83  70                 	db	112	;'p'
  9033  00FA84  65                 	db	101	;'e'
  9034  00FA85  72                 	db	114	;'r'
  9035  00FA86  63                 	db	99	;'c'
  9036  00FA87  65                 	db	101	;'e'
  9037  00FA88  6E                 	db	110	;'n'
  9038  00FA89  74                 	db	116	;'t'
  9039  00FA8A  0A                 	db	10
  9040  00FA8B  0D                 	db	13
  9041  00FA8C  00                 	db	0
  9042  00FA8D                     STR_81:
  9043  00FA8D  44                 	db	68	;'D'
  9044  00FA8E  69                 	db	105	;'i'
  9045  00FA8F  65                 	db	101	;'e'
  9046  00FA90  20                 	db	32
  9047  00FA91  54                 	db	84	;'T'
  9048  00FA92  65                 	db	101	;'e'
  9049  00FA93  6D                 	db	109	;'m'
  9050  00FA94  70                 	db	112	;'p'
  9051  00FA95  65                 	db	101	;'e'
  9052  00FA96  72                 	db	114	;'r'
  9053  00FA97  61                 	db	97	;'a'
  9054  00FA98  74                 	db	116	;'t'
  9055  00FA99  75                 	db	117	;'u'
  9056  00FA9A  72                 	db	114	;'r'
  9057  00FA9B  65                 	db	101	;'e'
  9058  00FA9C  20                 	db	32
  9059  00FA9D  6D                 	db	109	;'m'
  9060  00FA9E  65                 	db	101	;'e'
  9061  00FA9F  61                 	db	97	;'a'
  9062  00FAA0  73                 	db	115	;'s'
  9063  00FAA1  75                 	db	117	;'u'
  9064  00FAA2  72                 	db	114	;'r'
  9065  00FAA3  65                 	db	101	;'e'
  9066  00FAA4  64                 	db	100	;'d'
  9067  00FAA5  20                 	db	32
  9068  00FAA6  61                 	db	97	;'a'
  9069  00FAA7  73                 	db	115	;'s'
  9070  00FAA8  20                 	db	32
  9071  00FAA9  25                 	db	37
  9072  00FAAA  2E                 	db	46
  9073  00FAAB  33                 	db	51	;'3'
  9074  00FAAC  66                 	db	102	;'f'
  9075  00FAAD  43                 	db	67	;'C'
  9076  00FAAE  0A                 	db	10
  9077  00FAAF  0D                 	db	13
  9078  00FAB0  00                 	db	0
  9079  00FAB1                     STR_79:
  9080  00FAB1  2B                 	db	43
  9081  00FAB2  31                 	db	49	;'1'
  9082  00FAB3  32                 	db	50	;'2'
  9083  00FAB4  56                 	db	86	;'V'
  9084  00FAB5  20                 	db	32
  9085  00FAB6  72                 	db	114	;'r'
  9086  00FAB7  61                 	db	97	;'a'
  9087  00FAB8  69                 	db	105	;'i'
  9088  00FAB9  6C                 	db	108	;'l'
  9089  00FABA  20                 	db	32
  9090  00FABB  6D                 	db	109	;'m'
  9091  00FABC  65                 	db	101	;'e'
  9092  00FABD  61                 	db	97	;'a'
  9093  00FABE  73                 	db	115	;'s'
  9094  00FABF  75                 	db	117	;'u'
  9095  00FAC0  72                 	db	114	;'r'
  9096  00FAC1  65                 	db	101	;'e'
  9097  00FAC2  64                 	db	100	;'d'
  9098  00FAC3  20                 	db	32
  9099  00FAC4  61                 	db	97	;'a'
  9100  00FAC5  73                 	db	115	;'s'
  9101  00FAC6  20                 	db	32
  9102  00FAC7  2B                 	db	43
  9103  00FAC8  25                 	db	37
  9104  00FAC9  2E                 	db	46
  9105  00FACA  33                 	db	51	;'3'
  9106  00FACB  66                 	db	102	;'f'
  9107  00FACC  20                 	db	32
  9108  00FACD  56                 	db	86	;'V'
  9109  00FACE  6F                 	db	111	;'o'
  9110  00FACF  6C                 	db	108	;'l'
  9111  00FAD0  74                 	db	116	;'t'
  9112  00FAD1  73                 	db	115	;'s'
  9113  00FAD2  0A                 	db	10
  9114  00FAD3  0D                 	db	13
  9115  00FAD4  00                 	db	0
  9116  00FAD5                     STR_89:
  9117  00FAD5  52                 	db	82	;'R'
  9118  00FAD6  4D                 	db	77	;'M'
  9119  00FAD7  53                 	db	83	;'S'
  9120  00FAD8  20                 	db	32
  9121  00FAD9  4F                 	db	79	;'O'
  9122  00FADA  75                 	db	117	;'u'
  9123  00FADB  74                 	db	116	;'t'
  9124  00FADC  70                 	db	112	;'p'
  9125  00FADD  75                 	db	117	;'u'
  9126  00FADE  74                 	db	116	;'t'
  9127  00FADF  20                 	db	32
  9128  00FAE0  43                 	db	67	;'C'
  9129  00FAE1  75                 	db	117	;'u'
  9130  00FAE2  72                 	db	114	;'r'
  9131  00FAE3  72                 	db	114	;'r'
  9132  00FAE4  65                 	db	101	;'e'
  9133  00FAE5  6E                 	db	110	;'n'
  9134  00FAE6  74                 	db	116	;'t'
  9135  00FAE7  20                 	db	32
  9136  00FAE8  69                 	db	105	;'i'
  9137  00FAE9  73                 	db	115	;'s'
  9138  00FAEA  20                 	db	32
  9139  00FAEB  25                 	db	37
  9140  00FAEC  2E                 	db	46
  9141  00FAED  33                 	db	51	;'3'
  9142  00FAEE  66                 	db	102	;'f'
  9143  00FAEF  20                 	db	32
  9144  00FAF0  41                 	db	65	;'A'
  9145  00FAF1  72                 	db	114	;'r'
  9146  00FAF2  6D                 	db	109	;'m'
  9147  00FAF3  73                 	db	115	;'s'
  9148  00FAF4  0A                 	db	10
  9149  00FAF5  0D                 	db	13
  9150  00FAF6  00                 	db	0
  9151  00FAF7                     STR_91:
  9152  00FAF7  52                 	db	82	;'R'
  9153  00FAF8  4D                 	db	77	;'M'
  9154  00FAF9  53                 	db	83	;'S'
  9155  00FAFA  20                 	db	32
  9156  00FAFB  4F                 	db	79	;'O'
  9157  00FAFC  75                 	db	117	;'u'
  9158  00FAFD  74                 	db	116	;'t'
  9159  00FAFE  70                 	db	112	;'p'
  9160  00FAFF  75                 	db	117	;'u'
  9161  00FB00  74                 	db	116	;'t'
  9162  00FB01  20                 	db	32
  9163  00FB02  56                 	db	86	;'V'
  9164  00FB03  6F                 	db	111	;'o'
  9165  00FB04  6C                 	db	108	;'l'
  9166  00FB05  74                 	db	116	;'t'
  9167  00FB06  61                 	db	97	;'a'
  9168  00FB07  67                 	db	103	;'g'
  9169  00FB08  65                 	db	101	;'e'
  9170  00FB09  20                 	db	32
  9171  00FB0A  69                 	db	105	;'i'
  9172  00FB0B  73                 	db	115	;'s'
  9173  00FB0C  20                 	db	32
  9174  00FB0D  25                 	db	37
  9175  00FB0E  2E                 	db	46
  9176  00FB0F  33                 	db	51	;'3'
  9177  00FB10  66                 	db	102	;'f'
  9178  00FB11  20                 	db	32
  9179  00FB12  56                 	db	86	;'V'
  9180  00FB13  72                 	db	114	;'r'
  9181  00FB14  6D                 	db	109	;'m'
  9182  00FB15  73                 	db	115	;'s'
  9183  00FB16  0A                 	db	10
  9184  00FB17  0D                 	db	13
  9185  00FB18  00                 	db	0
  9186  00FB19                     STR_138:
  9187  00FB19  48                 	db	72	;'H'
  9188  00FB1A  65                 	db	101	;'e'
  9189  00FB1B  6C                 	db	108	;'l'
  9190  00FB1C  70                 	db	112	;'p'
  9191  00FB1D  20                 	db	32
  9192  00FB1E  50                 	db	80	;'P'
  9193  00FB1F  72                 	db	114	;'r'
  9194  00FB20  69                 	db	105	;'i'
  9195  00FB21  6D                 	db	109	;'m'
  9196  00FB22  61                 	db	97	;'a'
  9197  00FB23  72                 	db	114	;'r'
  9198  00FB24  79                 	db	121	;'y'
  9199  00FB25  20                 	db	32
  9200  00FB26  4D                 	db	77	;'M'
  9201  00FB27  65                 	db	101	;'e'
  9202  00FB28  61                 	db	97	;'a'
  9203  00FB29  73                 	db	115	;'s'
  9204  00FB2A  75                 	db	117	;'u'
  9205  00FB2B  72                 	db	114	;'r'
  9206  00FB2C  65                 	db	101	;'e'
  9207  00FB2D  6D                 	db	109	;'m'
  9208  00FB2E  65                 	db	101	;'e'
  9209  00FB2F  6E                 	db	110	;'n'
  9210  00FB30  74                 	db	116	;'t'
  9211  00FB31  20                 	db	32
  9212  00FB32  43                 	db	67	;'C'
  9213  00FB33  6F                 	db	111	;'o'
  9214  00FB34  6D                 	db	109	;'m'
  9215  00FB35  6D                 	db	109	;'m'
  9216  00FB36  61                 	db	97	;'a'
  9217  00FB37  6E                 	db	110	;'n'
  9218  00FB38  64                 	db	100	;'d'
  9219  00FB39  73                 	db	115	;'s'
  9220  00FB3A  00                 	db	0
  9221  00FB3B                     STR_136:
  9222  00FB3B  48                 	db	72	;'H'
  9223  00FB3C  65                 	db	101	;'e'
  9224  00FB3D  6C                 	db	108	;'l'
  9225  00FB3E  70                 	db	112	;'p'
  9226  00FB3F  20                 	db	32
  9227  00FB40  44                 	db	68	;'D'
  9228  00FB41  65                 	db	101	;'e'
  9229  00FB42  76                 	db	118	;'v'
  9230  00FB43  69                 	db	105	;'i'
  9231  00FB44  63                 	db	99	;'c'
  9232  00FB45  65                 	db	101	;'e'
  9233  00FB46  20                 	db	32
  9234  00FB47  4D                 	db	77	;'M'
  9235  00FB48  65                 	db	101	;'e'
  9236  00FB49  61                 	db	97	;'a'
  9237  00FB4A  73                 	db	115	;'s'
  9238  00FB4B  75                 	db	117	;'u'
  9239  00FB4C  72                 	db	114	;'r'
  9240  00FB4D  65                 	db	101	;'e'
  9241  00FB4E  6D                 	db	109	;'m'
  9242  00FB4F  65                 	db	101	;'e'
  9243  00FB50  6E                 	db	110	;'n'
  9244  00FB51  74                 	db	116	;'t'
  9245  00FB52  20                 	db	32
  9246  00FB53  43                 	db	67	;'C'
  9247  00FB54  6F                 	db	111	;'o'
  9248  00FB55  6D                 	db	109	;'m'
  9249  00FB56  6D                 	db	109	;'m'
  9250  00FB57  61                 	db	97	;'a'
  9251  00FB58  6E                 	db	110	;'n'
  9252  00FB59  64                 	db	100	;'d'
  9253  00FB5A  73                 	db	115	;'s'
  9254  00FB5B  00                 	db	0
  9255  00FB5C                     STR_87:
  9256  00FB5C  4D                 	db	77	;'M'
  9257  00FB5D  65                 	db	101	;'e'
  9258  00FB5E  61                 	db	97	;'a'
  9259  00FB5F  73                 	db	115	;'s'
  9260  00FB60  75                 	db	117	;'u'
  9261  00FB61  72                 	db	114	;'r'
  9262  00FB62  65                 	db	101	;'e'
  9263  00FB63  64                 	db	100	;'d'
  9264  00FB64  20                 	db	32
  9265  00FB65  43                 	db	67	;'C'
  9266  00FB66  75                 	db	117	;'u'
  9267  00FB67  72                 	db	114	;'r'
  9268  00FB68  72                 	db	114	;'r'
  9269  00FB69  65                 	db	101	;'e'
  9270  00FB6A  6E                 	db	110	;'n'
  9271  00FB6B  74                 	db	116	;'t'
  9272  00FB6C  20                 	db	32
  9273  00FB6D  69                 	db	105	;'i'
  9274  00FB6E  73                 	db	115	;'s'
  9275  00FB6F  20                 	db	32
  9276  00FB70  25                 	db	37
  9277  00FB71  2E                 	db	46
  9278  00FB72  33                 	db	51	;'3'
  9279  00FB73  66                 	db	102	;'f'
  9280  00FB74  20                 	db	32
  9281  00FB75  41                 	db	65	;'A'
  9282  00FB76  6D                 	db	109	;'m'
  9283  00FB77  70                 	db	112	;'p'
  9284  00FB78  73                 	db	115	;'s'
  9285  00FB79  0A                 	db	10
  9286  00FB7A  0D                 	db	13
  9287  00FB7B  00                 	db	0
  9288  00FB7C                     STR_104:
  9289  00FB7C  44                 	db	68	;'D'
  9290  00FB7D  69                 	db	105	;'i'
  9291  00FB7E  6D                 	db	109	;'m'
  9292  00FB7F  6D                 	db	109	;'m'
  9293  00FB80  69                 	db	105	;'i'
  9294  00FB81  6E                 	db	110	;'n'
  9295  00FB82  67                 	db	103	;'g'
  9296  00FB83  20                 	db	32
  9297  00FB84  69                 	db	105	;'i'
  9298  00FB85  73                 	db	115	;'s'
  9299  00FB86  20                 	db	32
  9300  00FB87  63                 	db	99	;'c'
  9301  00FB88  75                 	db	117	;'u'
  9302  00FB89  72                 	db	114	;'r'
  9303  00FB8A  72                 	db	114	;'r'
  9304  00FB8B  65                 	db	101	;'e'
  9305  00FB8C  6E                 	db	110	;'n'
  9306  00FB8D  74                 	db	116	;'t'
  9307  00FB8E  6C                 	db	108	;'l'
  9308  00FB8F  79                 	db	121	;'y'
  9309  00FB90  20                 	db	32
  9310  00FB91  65                 	db	101	;'e'
  9311  00FB92  6E                 	db	110	;'n'
  9312  00FB93  61                 	db	97	;'a'
  9313  00FB94  62                 	db	98	;'b'
  9314  00FB95  6C                 	db	108	;'l'
  9315  00FB96  65                 	db	101	;'e'
  9316  00FB97  64                 	db	100	;'d'
  9317  00FB98  0A                 	db	10
  9318  00FB99  0D                 	db	13
  9319  00FB9A  00                 	db	0
  9320  00FB9B                     STR_150:
  9321  00FB9B  55                 	db	85	;'U'
  9322  00FB9C  73                 	db	115	;'s'
  9323  00FB9D  65                 	db	101	;'e'
  9324  00FB9E  72                 	db	114	;'r'
  9325  00FB9F  20                 	db	32
  9326  00FBA0  69                 	db	105	;'i'
  9327  00FBA1  6E                 	db	110	;'n'
  9328  00FBA2  70                 	db	112	;'p'
  9329  00FBA3  75                 	db	117	;'u'
  9330  00FBA4  74                 	db	116	;'t'
  9331  00FBA5  20                 	db	32
  9332  00FBA6  61                 	db	97	;'a'
  9333  00FBA7  70                 	db	112	;'p'
  9334  00FBA8  70                 	db	112	;'p'
  9335  00FBA9  65                 	db	101	;'e'
  9336  00FBAA  61                 	db	97	;'a'
  9337  00FBAB  72                 	db	114	;'r'
  9338  00FBAC  73                 	db	115	;'s'
  9339  00FBAD  20                 	db	32
  9340  00FBAE  69                 	db	105	;'i'
  9341  00FBAF  6E                 	db	110	;'n'
  9342  00FBB0  20                 	db	32
  9343  00FBB1  77                 	db	119	;'w'
  9344  00FBB2  68                 	db	104	;'h'
  9345  00FBB3  69                 	db	105	;'i'
  9346  00FBB4  74                 	db	116	;'t'
  9347  00FBB5  65                 	db	101	;'e'
  9348  00FBB6  0A                 	db	10
  9349  00FBB7  0D                 	db	13
  9350  00FBB8  00                 	db	0
  9351  00FBB9                     STR_102:
  9352  00FBB9  4C                 	db	76	;'L'
  9353  00FBBA  6F                 	db	111	;'o'
  9354  00FBBB  61                 	db	97	;'a'
  9355  00FBBC  64                 	db	100	;'d'
  9356  00FBBD  20                 	db	32
  9357  00FBBE  69                 	db	105	;'i'
  9358  00FBBF  73                 	db	115	;'s'
  9359  00FBC0  20                 	db	32
  9360  00FBC1  63                 	db	99	;'c'
  9361  00FBC2  75                 	db	117	;'u'
  9362  00FBC3  72                 	db	114	;'r'
  9363  00FBC4  72                 	db	114	;'r'
  9364  00FBC5  65                 	db	101	;'e'
  9365  00FBC6  6E                 	db	110	;'n'
  9366  00FBC7  74                 	db	116	;'t'
  9367  00FBC8  6C                 	db	108	;'l'
  9368  00FBC9  79                 	db	121	;'y'
  9369  00FBCA  20                 	db	32
  9370  00FBCB  64                 	db	100	;'d'
  9371  00FBCC  69                 	db	105	;'i'
  9372  00FBCD  73                 	db	115	;'s'
  9373  00FBCE  61                 	db	97	;'a'
  9374  00FBCF  62                 	db	98	;'b'
  9375  00FBD0  6C                 	db	108	;'l'
  9376  00FBD1  65                 	db	101	;'e'
  9377  00FBD2  64                 	db	100	;'d'
  9378  00FBD3  0A                 	db	10
  9379  00FBD4  0D                 	db	13
  9380  00FBD5  00                 	db	0
  9381  00FBD6                     STR_134:
  9382  00FBD6  48                 	db	72	;'H'
  9383  00FBD7  65                 	db	101	;'e'
  9384  00FBD8  6C                 	db	108	;'l'
  9385  00FBD9  70                 	db	112	;'p'
  9386  00FBDA  20                 	db	32
  9387  00FBDB  44                 	db	68	;'D'
  9388  00FBDC  65                 	db	101	;'e'
  9389  00FBDD  76                 	db	118	;'v'
  9390  00FBDE  69                 	db	105	;'i'
  9391  00FBDF  63                 	db	99	;'c'
  9392  00FBE0  65                 	db	101	;'e'
  9393  00FBE1  20                 	db	32
  9394  00FBE2  43                 	db	67	;'C'
  9395  00FBE3  6F                 	db	111	;'o'
  9396  00FBE4  6E                 	db	110	;'n'
  9397  00FBE5  74                 	db	116	;'t'
  9398  00FBE6  72                 	db	114	;'r'
  9399  00FBE7  6F                 	db	111	;'o'
  9400  00FBE8  6C                 	db	108	;'l'
  9401  00FBE9  20                 	db	32
  9402  00FBEA  43                 	db	67	;'C'
  9403  00FBEB  6F                 	db	111	;'o'
  9404  00FBEC  6D                 	db	109	;'m'
  9405  00FBED  6D                 	db	109	;'m'
  9406  00FBEE  61                 	db	97	;'a'
  9407  00FBEF  6E                 	db	110	;'n'
  9408  00FBF0  64                 	db	100	;'d'
  9409  00FBF1  73                 	db	115	;'s'
  9410  00FBF2  00                 	db	0
  9411  00FBF3                     STR_140:
  9412  00FBF3  48                 	db	72	;'H'
  9413  00FBF4  65                 	db	101	;'e'
  9414  00FBF5  6C                 	db	108	;'l'
  9415  00FBF6  70                 	db	112	;'p'
  9416  00FBF7  20                 	db	32
  9417  00FBF8  4F                 	db	79	;'O'
  9418  00FBF9  75                 	db	117	;'u'
  9419  00FBFA  74                 	db	116	;'t'
  9420  00FBFB  70                 	db	112	;'p'
  9421  00FBFC  75                 	db	117	;'u'
  9422  00FBFD  74                 	db	116	;'t'
  9423  00FBFE  20                 	db	32
  9424  00FBFF  43                 	db	67	;'C'
  9425  00FC00  6F                 	db	111	;'o'
  9426  00FC01  6E                 	db	110	;'n'
  9427  00FC02  74                 	db	116	;'t'
  9428  00FC03  72                 	db	114	;'r'
  9429  00FC04  6F                 	db	111	;'o'
  9430  00FC05  6C                 	db	108	;'l'
  9431  00FC06  20                 	db	32
  9432  00FC07  43                 	db	67	;'C'
  9433  00FC08  6F                 	db	111	;'o'
  9434  00FC09  6D                 	db	109	;'m'
  9435  00FC0A  6D                 	db	109	;'m'
  9436  00FC0B  61                 	db	97	;'a'
  9437  00FC0C  6E                 	db	110	;'n'
  9438  00FC0D  64                 	db	100	;'d'
  9439  00FC0E  73                 	db	115	;'s'
  9440  00FC0F  00                 	db	0
  9441  00FC10                     STR_101:
  9442  00FC10  4C                 	db	76	;'L'
  9443  00FC11  6F                 	db	111	;'o'
  9444  00FC12  61                 	db	97	;'a'
  9445  00FC13  64                 	db	100	;'d'
  9446  00FC14  20                 	db	32
  9447  00FC15  69                 	db	105	;'i'
  9448  00FC16  73                 	db	115	;'s'
  9449  00FC17  20                 	db	32
  9450  00FC18  63                 	db	99	;'c'
  9451  00FC19  75                 	db	117	;'u'
  9452  00FC1A  72                 	db	114	;'r'
  9453  00FC1B  72                 	db	114	;'r'
  9454  00FC1C  65                 	db	101	;'e'
  9455  00FC1D  6E                 	db	110	;'n'
  9456  00FC1E  74                 	db	116	;'t'
  9457  00FC1F  6C                 	db	108	;'l'
  9458  00FC20  79                 	db	121	;'y'
  9459  00FC21  20                 	db	32
  9460  00FC22  65                 	db	101	;'e'
  9461  00FC23  6E                 	db	110	;'n'
  9462  00FC24  61                 	db	97	;'a'
  9463  00FC25  62                 	db	98	;'b'
  9464  00FC26  6C                 	db	108	;'l'
  9465  00FC27  65                 	db	101	;'e'
  9466  00FC28  64                 	db	100	;'d'
  9467  00FC29  0A                 	db	10
  9468  00FC2A  0D                 	db	13
  9469  00FC2B  00                 	db	0
  9470  00FC2C                     STR_160:
  9471  00FC2C  52                 	db	82	;'R'
  9472  00FC2D  45                 	db	69	;'E'
  9473  00FC2E  53                 	db	83	;'S'
  9474  00FC2F  45                 	db	69	;'E'
  9475  00FC30  54                 	db	84	;'T'
  9476  00FC31  20                 	db	32
  9477  00FC32  49                 	db	73	;'I'
  9478  00FC33  6E                 	db	110	;'n'
  9479  00FC34  73                 	db	115	;'s'
  9480  00FC35  74                 	db	116	;'t'
  9481  00FC36  72                 	db	114	;'r'
  9482  00FC37  75                 	db	117	;'u'
  9483  00FC38  63                 	db	99	;'c'
  9484  00FC39  74                 	db	116	;'t'
  9485  00FC3A  69                 	db	105	;'i'
  9486  00FC3B  6F                 	db	111	;'o'
  9487  00FC3C  6E                 	db	110	;'n'
  9488  00FC3D  20                 	db	32
  9489  00FC3E  45                 	db	69	;'E'
  9490  00FC3F  78                 	db	120	;'x'
  9491  00FC40  65                 	db	101	;'e'
  9492  00FC41  63                 	db	99	;'c'
  9493  00FC42  75                 	db	117	;'u'
  9494  00FC43  74                 	db	116	;'t'
  9495  00FC44  65                 	db	101	;'e'
  9496  00FC45  64                 	db	100	;'d'
  9497  00FC46  00                 	db	0
  9498  00FC47                     STR_86:
  9499  00FC47  4D                 	db	77	;'M'
  9500  00FC48  65                 	db	101	;'e'
  9501  00FC49  61                 	db	97	;'a'
  9502  00FC4A  73                 	db	115	;'s'
  9503  00FC4B  75                 	db	117	;'u'
  9504  00FC4C  72                 	db	114	;'r'
  9505  00FC4D  65                 	db	101	;'e'
  9506  00FC4E  20                 	db	32
  9507  00FC4F  44                 	db	68	;'D'
  9508  00FC50  65                 	db	101	;'e'
  9509  00FC51  74                 	db	116	;'t'
  9510  00FC52  65                 	db	101	;'e'
  9511  00FC53  63                 	db	99	;'c'
  9512  00FC54  74                 	db	116	;'t'
  9513  00FC55  65                 	db	101	;'e'
  9514  00FC56  64                 	db	100	;'d'
  9515  00FC57  20                 	db	32
  9516  00FC58  43                 	db	67	;'C'
  9517  00FC59  75                 	db	117	;'u'
  9518  00FC5A  72                 	db	114	;'r'
  9519  00FC5B  72                 	db	114	;'r'
  9520  00FC5C  65                 	db	101	;'e'
  9521  00FC5D  6E                 	db	110	;'n'
  9522  00FC5E  74                 	db	116	;'t'
  9523  00FC5F  3F                 	db	63	;'?'
  9524  00FC60  00                 	db	0
  9525  00FC61                     STR_108:
  9526  00FC61  4C                 	db	76	;'L'
  9527  00FC62  6F                 	db	111	;'o'
  9528  00FC63  61                 	db	97	;'a'
  9529  00FC64  64                 	db	100	;'d'
  9530  00FC65  20                 	db	32
  9531  00FC66  68                 	db	104	;'h'
  9532  00FC67  61                 	db	97	;'a'
  9533  00FC68  73                 	db	115	;'s'
  9534  00FC69  20                 	db	32
  9535  00FC6A  62                 	db	98	;'b'
  9536  00FC6B  65                 	db	101	;'e'
  9537  00FC6C  65                 	db	101	;'e'
  9538  00FC6D  6E                 	db	110	;'n'
  9539  00FC6E  20                 	db	32
  9540  00FC6F  64                 	db	100	;'d'
  9541  00FC70  69                 	db	105	;'i'
  9542  00FC71  73                 	db	115	;'s'
  9543  00FC72  61                 	db	97	;'a'
  9544  00FC73  62                 	db	98	;'b'
  9545  00FC74  6C                 	db	108	;'l'
  9546  00FC75  65                 	db	101	;'e'
  9547  00FC76  64                 	db	100	;'d'
  9548  00FC77  0A                 	db	10
  9549  00FC78  0D                 	db	13
  9550  00FC79  00                 	db	0
  9551  00FC7A                     STR_109:
  9552  00FC7A  53                 	db	83	;'S'
  9553  00FC7B  65                 	db	101	;'e'
  9554  00FC7C  74                 	db	116	;'t'
  9555  00FC7D  20                 	db	32
  9556  00FC7E  44                 	db	68	;'D'
  9557  00FC7F  69                 	db	105	;'i'
  9558  00FC80  6D                 	db	109	;'m'
  9559  00FC81  6D                 	db	109	;'m'
  9560  00FC82  69                 	db	105	;'i'
  9561  00FC83  6E                 	db	110	;'n'
  9562  00FC84  67                 	db	103	;'g'
  9563  00FC85  20                 	db	32
  9564  00FC86  50                 	db	80	;'P'
  9565  00FC87  65                 	db	101	;'e'
  9566  00FC88  72                 	db	114	;'r'
  9567  00FC89  63                 	db	99	;'c'
  9568  00FC8A  65                 	db	101	;'e'
  9569  00FC8B  6E                 	db	110	;'n'
  9570  00FC8C  74                 	db	116	;'t'
  9571  00FC8D  61                 	db	97	;'a'
  9572  00FC8E  67                 	db	103	;'g'
  9573  00FC8F  65                 	db	101	;'e'
  9574  00FC90  3A                 	db	58	;':'
  9575  00FC91  20                 	db	32
  9576  00FC92  00                 	db	0
  9577  00FC93                     STR_70:
  9578  00FC93  4E                 	db	78	;'N'
  9579  00FC94  6F                 	db	111	;'o'
  9580  00FC95  20                 	db	32
  9581  00FC96  41                 	db	65	;'A'
  9582  00FC97  44                 	db	68	;'D'
  9583  00FC98  43                 	db	67	;'C'
  9584  00FC99  20                 	db	32
  9585  00FC9A  45                 	db	69	;'E'
  9586  00FC9B  72                 	db	114	;'r'
  9587  00FC9C  72                 	db	114	;'r'
  9588  00FC9D  6F                 	db	111	;'o'
  9589  00FC9E  72                 	db	114	;'r'
  9590  00FC9F  20                 	db	32
  9591  00FCA0  64                 	db	100	;'d'
  9592  00FCA1  65                 	db	101	;'e'
  9593  00FCA2  74                 	db	116	;'t'
  9594  00FCA3  65                 	db	101	;'e'
  9595  00FCA4  63                 	db	99	;'c'
  9596  00FCA5  74                 	db	116	;'t'
  9597  00FCA6  65                 	db	101	;'e'
  9598  00FCA7  64                 	db	100	;'d'
  9599  00FCA8  0A                 	db	10
  9600  00FCA9  0D                 	db	13
  9601  00FCAA  00                 	db	0
  9602  00FCAB                     STR_162:
  9603  00FCAB  53                 	db	83	;'S'
  9604  00FCAC  74                 	db	116	;'t'
  9605  00FCAD  61                 	db	97	;'a'
  9606  00FCAE  63                 	db	99	;'c'
  9607  00FCAF  6B                 	db	107	;'k'
  9608  00FCB0  20                 	db	32
  9609  00FCB1  55                 	db	85	;'U'
  9610  00FCB2  6E                 	db	110	;'n'
  9611  00FCB3  64                 	db	100	;'d'
  9612  00FCB4  65                 	db	101	;'e'
  9613  00FCB5  72                 	db	114	;'r'
  9614  00FCB6  66                 	db	102	;'f'
  9615  00FCB7  6C                 	db	108	;'l'
  9616  00FCB8  6F                 	db	111	;'o'
  9617  00FCB9  77                 	db	119	;'w'
  9618  00FCBA  20                 	db	32
  9619  00FCBB  52                 	db	82	;'R'
  9620  00FCBC  65                 	db	101	;'e'
  9621  00FCBD  73                 	db	115	;'s'
  9622  00FCBE  65                 	db	101	;'e'
  9623  00FCBF  74                 	db	116	;'t'
  9624  00FCC0  00                 	db	0
  9625  00FCC1                     STR_67:
  9626  00FCC1  49                 	db	73	;'I'
  9627  00FCC2  6E                 	db	110	;'n'
  9628  00FCC3  74                 	db	116	;'t'
  9629  00FCC4  65                 	db	101	;'e'
  9630  00FCC5  72                 	db	114	;'r'
  9631  00FCC6  6E                 	db	110	;'n'
  9632  00FCC7  61                 	db	97	;'a'
  9633  00FCC8  6C                 	db	108	;'l'
  9634  00FCC9  20                 	db	32
  9635  00FCCA  46                 	db	70	;'F'
  9636  00FCCB  56                 	db	86	;'V'
  9637  00FCCC  52                 	db	82	;'R'
  9638  00FCCD  20                 	db	32
  9639  00FCCE  42                 	db	66	;'B'
  9640  00FCCF  75                 	db	117	;'u'
  9641  00FCD0  66                 	db	102	;'f'
  9642  00FCD1  66                 	db	102	;'f'
  9643  00FCD2  65                 	db	101	;'e'
  9644  00FCD3  72                 	db	114	;'r'
  9645  00FCD4  20                 	db	32
  9646  00FCD5  31                 	db	49	;'1'
  9647  00FCD6  00                 	db	0
  9648  00FCD7                     STR_161:
  9649  00FCD7  53                 	db	83	;'S'
  9650  00FCD8  74                 	db	116	;'t'
  9651  00FCD9  61                 	db	97	;'a'
  9652  00FCDA  63                 	db	99	;'c'
  9653  00FCDB  6B                 	db	107	;'k'
  9654  00FCDC  20                 	db	32
  9655  00FCDD  4F                 	db	79	;'O'
  9656  00FCDE  76                 	db	118	;'v'
  9657  00FCDF  65                 	db	101	;'e'
  9658  00FCE0  72                 	db	114	;'r'
  9659  00FCE1  66                 	db	102	;'f'
  9660  00FCE2  6C                 	db	108	;'l'
  9661  00FCE3  6F                 	db	111	;'o'
  9662  00FCE4  77                 	db	119	;'w'
  9663  00FCE5  20                 	db	32
  9664  00FCE6  52                 	db	82	;'R'
  9665  00FCE7  65                 	db	101	;'e'
  9666  00FCE8  73                 	db	115	;'s'
  9667  00FCE9  65                 	db	101	;'e'
  9668  00FCEA  74                 	db	116	;'t'
  9669  00FCEB  00                 	db	0
  9670  00FCEC                     STR_72:
  9671  00FCEC  43                 	db	67	;'C'
  9672  00FCED  6C                 	db	108	;'l'
  9673  00FCEE  65                 	db	101	;'e'
  9674  00FCEF  61                 	db	97	;'a'
  9675  00FCF0  72                 	db	114	;'r'
  9676  00FCF1  69                 	db	105	;'i'
  9677  00FCF2  6E                 	db	110	;'n'
  9678  00FCF3  67                 	db	103	;'g'
  9679  00FCF4  20                 	db	32
  9680  00FCF5  41                 	db	65	;'A'
  9681  00FCF6  44                 	db	68	;'D'
  9682  00FCF7  43                 	db	67	;'C'
  9683  00FCF8  20                 	db	32
  9684  00FCF9  45                 	db	69	;'E'
  9685  00FCFA  72                 	db	114	;'r'
  9686  00FCFB  72                 	db	114	;'r'
  9687  00FCFC  6F                 	db	111	;'o'
  9688  00FCFD  72                 	db	114	;'r'
  9689  00FCFE  0A                 	db	10
  9690  00FCFF  0D                 	db	13
  9691  00FD00  00                 	db	0
  9692  00FD01                     STR_90:
  9693  00FD01  4D                 	db	77	;'M'
  9694  00FD02  65                 	db	101	;'e'
  9695  00FD03  61                 	db	97	;'a'
  9696  00FD04  73                 	db	115	;'s'
  9697  00FD05  75                 	db	117	;'u'
  9698  00FD06  72                 	db	114	;'r'
  9699  00FD07  65                 	db	101	;'e'
  9700  00FD08  20                 	db	32
  9701  00FD09  52                 	db	82	;'R'
  9702  00FD0A  4D                 	db	77	;'M'
  9703  00FD0B  53                 	db	83	;'S'
  9704  00FD0C  20                 	db	32
  9705  00FD0D  56                 	db	86	;'V'
  9706  00FD0E  6F                 	db	111	;'o'
  9707  00FD0F  6C                 	db	108	;'l'
  9708  00FD10  74                 	db	116	;'t'
  9709  00FD11  61                 	db	97	;'a'
  9710  00FD12  67                 	db	103	;'g'
  9711  00FD13  65                 	db	101	;'e'
  9712  00FD14  3F                 	db	63	;'?'
  9713  00FD15  00                 	db	0
  9714  00FD16                     STR_88:
  9715  00FD16  4D                 	db	77	;'M'
  9716  00FD17  65                 	db	101	;'e'
  9717  00FD18  61                 	db	97	;'a'
  9718  00FD19  73                 	db	115	;'s'
  9719  00FD1A  75                 	db	117	;'u'
  9720  00FD1B  72                 	db	114	;'r'
  9721  00FD1C  65                 	db	101	;'e'
  9722  00FD1D  20                 	db	32
  9723  00FD1E  52                 	db	82	;'R'
  9724  00FD1F  4D                 	db	77	;'M'
  9725  00FD20  53                 	db	83	;'S'
  9726  00FD21  20                 	db	32
  9727  00FD22  43                 	db	67	;'C'
  9728  00FD23  75                 	db	117	;'u'
  9729  00FD24  72                 	db	114	;'r'
  9730  00FD25  72                 	db	114	;'r'
  9731  00FD26  65                 	db	101	;'e'
  9732  00FD27  6E                 	db	110	;'n'
  9733  00FD28  74                 	db	116	;'t'
  9734  00FD29  3F                 	db	63	;'?'
  9735  00FD2A  00                 	db	0
  9736  00FD2B                     STR_124:
  9737  00FD2B  4D                 	db	77	;'M'
  9738  00FD2C  61                 	db	97	;'a'
  9739  00FD2D  78                 	db	120	;'x'
  9740  00FD2E  20                 	db	32
  9741  00FD2F  50                 	db	80	;'P'
  9742  00FD30  4F                 	db	79	;'O'
  9743  00FD31  53                 	db	83	;'S'
  9744  00FD32  33                 	db	51	;'3'
  9745  00FD33  50                 	db	80	;'P'
  9746  00FD34  33                 	db	51	;'3'
  9747  00FD35  20                 	db	32
  9748  00FD36  56                 	db	86	;'V'
  9749  00FD37  6F                 	db	111	;'o'
  9750  00FD38  6C                 	db	108	;'l'
  9751  00FD39  74                 	db	116	;'t'
  9752  00FD3A  61                 	db	97	;'a'
  9753  00FD3B  67                 	db	103	;'g'
  9754  00FD3C  65                 	db	101	;'e'
  9755  00FD3D  3F                 	db	63	;'?'
  9756  00FD3E  00                 	db	0
  9757  00FD3F                     STR_157:
  9758  00FD3F  4D                 	db	77	;'M'
  9759  00FD40  61                 	db	97	;'a'
  9760  00FD41  73                 	db	115	;'s'
  9761  00FD42  74                 	db	116	;'t'
  9762  00FD43  65                 	db	101	;'e'
  9763  00FD44  72                 	db	114	;'r'
  9764  00FD45  20                 	db	32
  9765  00FD46  43                 	db	67	;'C'
  9766  00FD47  6C                 	db	108	;'l'
  9767  00FD48  65                 	db	101	;'e'
  9768  00FD49  61                 	db	97	;'a'
  9769  00FD4A  72                 	db	114	;'r'
  9770  00FD4B  20                 	db	32
  9771  00FD4C  52                 	db	82	;'R'
  9772  00FD4D  65                 	db	101	;'e'
  9773  00FD4E  73                 	db	115	;'s'
  9774  00FD4F  65                 	db	101	;'e'
  9775  00FD50  74                 	db	116	;'t'
  9776  00FD51  00                 	db	0
  9777  00FD52                     STR_126:
  9778  00FD52  4D                 	db	77	;'M'
  9779  00FD53  61                 	db	97	;'a'
  9780  00FD54  78                 	db	120	;'x'
  9781  00FD55  20                 	db	32
  9782  00FD56  50                 	db	80	;'P'
  9783  00FD57  4F                 	db	79	;'O'
  9784  00FD58  53                 	db	83	;'S'
  9785  00FD59  31                 	db	49	;'1'
  9786  00FD5A  32                 	db	50	;'2'
  9787  00FD5B  20                 	db	32
  9788  00FD5C  56                 	db	86	;'V'
  9789  00FD5D  6F                 	db	111	;'o'
  9790  00FD5E  6C                 	db	108	;'l'
  9791  00FD5F  74                 	db	116	;'t'
  9792  00FD60  61                 	db	97	;'a'
  9793  00FD61  67                 	db	103	;'g'
  9794  00FD62  65                 	db	101	;'e'
  9795  00FD63  3F                 	db	63	;'?'
  9796  00FD64  00                 	db	0
  9797  00FD65                     STR_80:
  9798  00FD65  4D                 	db	77	;'M'
  9799  00FD66  65                 	db	101	;'e'
  9800  00FD67  61                 	db	97	;'a'
  9801  00FD68  73                 	db	115	;'s'
  9802  00FD69  75                 	db	117	;'u'
  9803  00FD6A  72                 	db	114	;'r'
  9804  00FD6B  65                 	db	101	;'e'
  9805  00FD6C  20                 	db	32
  9806  00FD6D  44                 	db	68	;'D'
  9807  00FD6E  69                 	db	105	;'i'
  9808  00FD6F  65                 	db	101	;'e'
  9809  00FD70  20                 	db	32
  9810  00FD71  54                 	db	84	;'T'
  9811  00FD72  65                 	db	101	;'e'
  9812  00FD73  6D                 	db	109	;'m'
  9813  00FD74  70                 	db	112	;'p'
  9814  00FD75  3F                 	db	63	;'?'
  9815  00FD76  00                 	db	0
  9816  00FD77                     STR_165:
  9817  00FD77  30                 	db	48	;'0'
  9818  00FD78  31                 	db	49	;'1'
  9819  00FD79  32                 	db	50	;'2'
  9820  00FD7A  33                 	db	51	;'3'
  9821  00FD7B  34                 	db	52	;'4'
  9822  00FD7C  35                 	db	53	;'5'
  9823  00FD7D  36                 	db	54	;'6'
  9824  00FD7E  37                 	db	55	;'7'
  9825  00FD7F  38                 	db	56	;'8'
  9826  00FD80  39                 	db	57	;'9'
  9827  00FD81  41                 	db	65	;'A'
  9828  00FD82  42                 	db	66	;'B'
  9829  00FD83  43                 	db	67	;'C'
  9830  00FD84  44                 	db	68	;'D'
  9831  00FD85  45                 	db	69	;'E'
  9832  00FD86  46                 	db	70	;'F'
  9833  00FD87  00                 	db	0
  9834  00FD88                     STR_51:
  9835  00FD88  41                 	db	65	;'A'
  9836  00FD89  43                 	db	67	;'C'
  9837  00FD8A  20                 	db	32
  9838  00FD8B  50                 	db	80	;'P'
  9839  00FD8C  6F                 	db	111	;'o'
  9840  00FD8D  77                 	db	119	;'w'
  9841  00FD8E  65                 	db	101	;'e'
  9842  00FD8F  72                 	db	114	;'r'
  9843  00FD90  20                 	db	32
  9844  00FD91  4D                 	db	77	;'M'
  9845  00FD92  65                 	db	101	;'e'
  9846  00FD93  74                 	db	116	;'t'
  9847  00FD94  65                 	db	101	;'e'
  9848  00FD95  72                 	db	114	;'r'
  9849  00FD96  0A                 	db	10
  9850  00FD97  0D                 	db	13
  9851  00FD98  00                 	db	0
  9852  00FD99                     STR_103:
  9853  00FD99  44                 	db	68	;'D'
  9854  00FD9A  69                 	db	105	;'i'
  9855  00FD9B  6D                 	db	109	;'m'
  9856  00FD9C  6D                 	db	109	;'m'
  9857  00FD9D  69                 	db	105	;'i'
  9858  00FD9E  6E                 	db	110	;'n'
  9859  00FD9F  67                 	db	103	;'g'
  9860  00FDA0  20                 	db	32
  9861  00FDA1  45                 	db	69	;'E'
  9862  00FDA2  6E                 	db	110	;'n'
  9863  00FDA3  61                 	db	97	;'a'
  9864  00FDA4  62                 	db	98	;'b'
  9865  00FDA5  6C                 	db	108	;'l'
  9866  00FDA6  65                 	db	101	;'e'
  9867  00FDA7  64                 	db	100	;'d'
  9868  00FDA8  3F                 	db	63	;'?'
  9869  00FDA9  00                 	db	0
  9870  00FDAA                     STR_130:
  9871  00FDAA  4D                 	db	77	;'M'
  9872  00FDAB  61                 	db	97	;'a'
  9873  00FDAC  78                 	db	120	;'x'
  9874  00FDAD  20                 	db	32
  9875  00FDAE  46                 	db	70	;'F'
  9876  00FDAF  56                 	db	86	;'V'
  9877  00FDB0  52                 	db	82	;'R'
  9878  00FDB1  20                 	db	32
  9879  00FDB2  56                 	db	86	;'V'
  9880  00FDB3  6F                 	db	111	;'o'
  9881  00FDB4  6C                 	db	108	;'l'
  9882  00FDB5  74                 	db	116	;'t'
  9883  00FDB6  61                 	db	97	;'a'
  9884  00FDB7  67                 	db	103	;'g'
  9885  00FDB8  65                 	db	101	;'e'
  9886  00FDB9  3F                 	db	63	;'?'
  9887  00FDBA  00                 	db	0
  9888  00FDBB                     STR_73:
  9889  00FDBB  56                 	db	86	;'V'
  9890  00FDBC  43                 	db	67	;'C'
  9891  00FDBD  43                 	db	67	;'C'
  9892  00FDBE  20                 	db	32
  9893  00FDBF  4F                 	db	79	;'O'
  9894  00FDC0  76                 	db	118	;'v'
  9895  00FDC1  65                 	db	101	;'e'
  9896  00FDC2  72                 	db	114	;'r'
  9897  00FDC3  76                 	db	118	;'v'
  9898  00FDC4  6F                 	db	111	;'o'
  9899  00FDC5  6C                 	db	108	;'l'
  9900  00FDC6  74                 	db	116	;'t'
  9901  00FDC7  61                 	db	97	;'a'
  9902  00FDC8  67                 	db	103	;'g'
  9903  00FDC9  65                 	db	101	;'e'
  9904  00FDCA  3F                 	db	63	;'?'
  9905  00FDCB  00                 	db	0
  9906  00FDCC                     STR_120:
  9907  00FDCC  4D                 	db	77	;'M'
  9908  00FDCD  61                 	db	97	;'a'
  9909  00FDCE  78                 	db	120	;'x'
  9910  00FDCF  20                 	db	32
  9911  00FDD0  52                 	db	82	;'R'
  9912  00FDD1  4D                 	db	77	;'M'
  9913  00FDD2  53                 	db	83	;'S'
  9914  00FDD3  20                 	db	32
  9915  00FDD4  43                 	db	67	;'C'
  9916  00FDD5  75                 	db	117	;'u'
  9917  00FDD6  72                 	db	114	;'r'
  9918  00FDD7  72                 	db	114	;'r'
  9919  00FDD8  65                 	db	101	;'e'
  9920  00FDD9  6E                 	db	110	;'n'
  9921  00FDDA  74                 	db	116	;'t'
  9922  00FDDB  3F                 	db	63	;'?'
  9923  00FDDC  00                 	db	0
  9924  00FDDD                     STR_132:
  9925  00FDDD  43                 	db	67	;'C'
  9926  00FDDE  6C                 	db	108	;'l'
  9927  00FDDF  65                 	db	101	;'e'
  9928  00FDE0  61                 	db	97	;'a'
  9929  00FDE1  72                 	db	114	;'r'
  9930  00FDE2  20                 	db	32
  9931  00FDE3  4D                 	db	77	;'M'
  9932  00FDE4  61                 	db	97	;'a'
  9933  00FDE5  78                 	db	120	;'x'
  9934  00FDE6  20                 	db	32
  9935  00FDE7  56                 	db	86	;'V'
  9936  00FDE8  61                 	db	97	;'a'
  9937  00FDE9  6C                 	db	108	;'l'
  9938  00FDEA  75                 	db	117	;'u'
  9939  00FDEB  65                 	db	101	;'e'
  9940  00FDEC  73                 	db	115	;'s'
  9941  00FDED  00                 	db	0
  9942  00FDEE                     STR_154:
  9943  00FDEE  55                 	db	85	;'U'
  9944  00FDEF  6E                 	db	110	;'n'
  9945  00FDF0  64                 	db	100	;'d'
  9946  00FDF1  65                 	db	101	;'e'
  9947  00FDF2  66                 	db	102	;'f'
  9948  00FDF3  69                 	db	105	;'i'
  9949  00FDF4  6E                 	db	110	;'n'
  9950  00FDF5  65                 	db	101	;'e'
  9951  00FDF6  64                 	db	100	;'d'
  9952  00FDF7  20                 	db	32
  9953  00FDF8  52                 	db	82	;'R'
  9954  00FDF9  65                 	db	101	;'e'
  9955  00FDFA  73                 	db	115	;'s'
  9956  00FDFB  65                 	db	101	;'e'
  9957  00FDFC  74                 	db	116	;'t'
  9958  00FDFD  00                 	db	0
  9959  00FDFE                     STR_156:
  9960  00FDFE  42                 	db	66	;'B'
  9961  00FDFF  72                 	db	114	;'r'
  9962  00FE00  6F                 	db	111	;'o'
  9963  00FE01  77                 	db	119	;'w'
  9964  00FE02  6E                 	db	110	;'n'
  9965  00FE03  20                 	db	32
  9966  00FE04  4F                 	db	79	;'O'
  9967  00FE05  75                 	db	117	;'u'
  9968  00FE06  74                 	db	116	;'t'
  9969  00FE07  20                 	db	32
  9970  00FE08  52                 	db	82	;'R'
  9971  00FE09  65                 	db	101	;'e'
  9972  00FE0A  73                 	db	115	;'s'
  9973  00FE0B  65                 	db	101	;'e'
  9974  00FE0C  74                 	db	116	;'t'
  9975  00FE0D  00                 	db	0
  9976  00FE0E                     STR_76:
  9977  00FE0E  4D                 	db	77	;'M'
  9978  00FE0F  65                 	db	101	;'e'
  9979  00FE10  61                 	db	97	;'a'
  9980  00FE11  73                 	db	115	;'s'
  9981  00FE12  75                 	db	117	;'u'
  9982  00FE13  72                 	db	114	;'r'
  9983  00FE14  65                 	db	101	;'e'
  9984  00FE15  20                 	db	32
  9985  00FE16  50                 	db	80	;'P'
  9986  00FE17  4F                 	db	79	;'O'
  9987  00FE18  53                 	db	83	;'S'
  9988  00FE19  33                 	db	51	;'3'
  9989  00FE1A  50                 	db	80	;'P'
  9990  00FE1B  33                 	db	51	;'3'
  9991  00FE1C  3F                 	db	63	;'?'
  9992  00FE1D  00                 	db	0
  9993  00FE1E                     STR_116:
  9994  00FE1E  44                 	db	68	;'D'
  9995  00FE1F  65                 	db	101	;'e'
  9996  00FE20  76                 	db	118	;'v'
  9997  00FE21  69                 	db	105	;'i'
  9998  00FE22  63                 	db	99	;'c'
  9999  00FE23  65                 	db	101	;'e'
 10000  00FE24  20                 	db	32
 10001  00FE25  4F                 	db	79	;'O'
 10002  00FE26  6E                 	db	110	;'n'
 10003  00FE27  20                 	db	32
 10004  00FE28  54                 	db	84	;'T'
 10005  00FE29  69                 	db	105	;'i'
 10006  00FE2A  6D                 	db	109	;'m'
 10007  00FE2B  65                 	db	101	;'e'
 10008  00FE2C  3F                 	db	63	;'?'
 10009  00FE2D  00                 	db	0
 10010  00FE2E                     STR_47:
 10011  00FE2E  43                 	db	67	;'C'
 10012  00FE2F  61                 	db	97	;'a'
 10013  00FE30  75                 	db	117	;'u'
 10014  00FE31  73                 	db	115	;'s'
 10015  00FE32  65                 	db	101	;'e'
 10016  00FE33  20                 	db	32
 10017  00FE34  6F                 	db	111	;'o'
 10018  00FE35  66                 	db	102	;'f'
 10019  00FE36  20                 	db	32
 10020  00FE37  52                 	db	82	;'R'
 10021  00FE38  65                 	db	101	;'e'
 10022  00FE39  73                 	db	115	;'s'
 10023  00FE3A  65                 	db	101	;'e'
 10024  00FE3B  74                 	db	116	;'t'
 10025  00FE3C  3F                 	db	63	;'?'
 10026  00FE3D  00                 	db	0
 10027  00FE3E                     STR_96:
 10028  00FE3E  44                 	db	68	;'D'
 10029  00FE3F  69                 	db	105	;'i'
 10030  00FE40  73                 	db	115	;'s'
 10031  00FE41  61                 	db	97	;'a'
 10032  00FE42  62                 	db	98	;'b'
 10033  00FE43  6C                 	db	108	;'l'
 10034  00FE44  65                 	db	101	;'e'
 10035  00FE45  20                 	db	32
 10036  00FE46  44                 	db	68	;'D'
 10037  00FE47  69                 	db	105	;'i'
 10038  00FE48  6D                 	db	109	;'m'
 10039  00FE49  6D                 	db	109	;'m'
 10040  00FE4A  69                 	db	105	;'i'
 10041  00FE4B  6E                 	db	110	;'n'
 10042  00FE4C  67                 	db	103	;'g'
 10043  00FE4D  00                 	db	0
 10044  00FE4E                     STR_71:
 10045  00FE4E  43                 	db	67	;'C'
 10046  00FE4F  6C                 	db	108	;'l'
 10047  00FE50  65                 	db	101	;'e'
 10048  00FE51  61                 	db	97	;'a'
 10049  00FE52  72                 	db	114	;'r'
 10050  00FE53  20                 	db	32
 10051  00FE54  41                 	db	65	;'A'
 10052  00FE55  44                 	db	68	;'D'
 10053  00FE56  43                 	db	67	;'C'
 10054  00FE57  20                 	db	32
 10055  00FE58  45                 	db	69	;'E'
 10056  00FE59  72                 	db	114	;'r'
 10057  00FE5A  72                 	db	114	;'r'
 10058  00FE5B  6F                 	db	111	;'o'
 10059  00FE5C  72                 	db	114	;'r'
 10060  00FE5D  00                 	db	0
 10061  00FE5E                     STR_155:
 10062  00FE5E  50                 	db	80	;'P'
 10063  00FE5F  6F                 	db	111	;'o'
 10064  00FE60  77                 	db	119	;'w'
 10065  00FE61  65                 	db	101	;'e'
 10066  00FE62  72                 	db	114	;'r'
 10067  00FE63  20                 	db	32
 10068  00FE64  4F                 	db	79	;'O'
 10069  00FE65  6E                 	db	110	;'n'
 10070  00FE66  20                 	db	32
 10071  00FE67  52                 	db	82	;'R'
 10072  00FE68  65                 	db	101	;'e'
 10073  00FE69  73                 	db	115	;'s'
 10074  00FE6A  65                 	db	101	;'e'
 10075  00FE6B  74                 	db	116	;'t'
 10076  00FE6C  00                 	db	0
 10077  00FE6D                     STR_78:
 10078  00FE6D  4D                 	db	77	;'M'
 10079  00FE6E  65                 	db	101	;'e'
 10080  00FE6F  61                 	db	97	;'a'
 10081  00FE70  73                 	db	115	;'s'
 10082  00FE71  75                 	db	117	;'u'
 10083  00FE72  72                 	db	114	;'r'
 10084  00FE73  65                 	db	101	;'e'
 10085  00FE74  20                 	db	32
 10086  00FE75  50                 	db	80	;'P'
 10087  00FE76  4F                 	db	79	;'O'
 10088  00FE77  53                 	db	83	;'S'
 10089  00FE78  31                 	db	49	;'1'
 10090  00FE79  32                 	db	50	;'2'
 10091  00FE7A  3F                 	db	63	;'?'
 10092  00FE7B  00                 	db	0
 10093  00FE7C                     STR_92:
 10094  00FE7C  4D                 	db	77	;'M'
 10095  00FE7D  65                 	db	101	;'e'
 10096  00FE7E  61                 	db	97	;'a'
 10097  00FE7F  73                 	db	115	;'s'
 10098  00FE80  75                 	db	117	;'u'
 10099  00FE81  72                 	db	114	;'r'
 10100  00FE82  65                 	db	101	;'e'
 10101  00FE83  20                 	db	32
 10102  00FE84  50                 	db	80	;'P'
 10103  00FE85  6F                 	db	111	;'o'
 10104  00FE86  77                 	db	119	;'w'
 10105  00FE87  65                 	db	101	;'e'
 10106  00FE88  72                 	db	114	;'r'
 10107  00FE89  3F                 	db	63	;'?'
 10108  00FE8A  00                 	db	0
 10109  00FE8B                     STR_94:
 10110  00FE8B  45                 	db	69	;'E'
 10111  00FE8C  6E                 	db	110	;'n'
 10112  00FE8D  61                 	db	97	;'a'
 10113  00FE8E  62                 	db	98	;'b'
 10114  00FE8F  6C                 	db	108	;'l'
 10115  00FE90  65                 	db	101	;'e'
 10116  00FE91  20                 	db	32
 10117  00FE92  44                 	db	68	;'D'
 10118  00FE93  69                 	db	105	;'i'
 10119  00FE94  6D                 	db	109	;'m'
 10120  00FE95  6D                 	db	109	;'m'
 10121  00FE96  69                 	db	105	;'i'
 10122  00FE97  6E                 	db	110	;'n'
 10123  00FE98  67                 	db	103	;'g'
 10124  00FE99  00                 	db	0
 10125  00FE9A                     STR_66:
 10126  00FE9A  49                 	db	73	;'I'
 10127  00FE9B  6E                 	db	110	;'n'
 10128  00FE9C  74                 	db	116	;'t'
 10129  00FE9D  65                 	db	101	;'e'
 10130  00FE9E  72                 	db	114	;'r'
 10131  00FE9F  6E                 	db	110	;'n'
 10132  00FEA0  61                 	db	97	;'a'
 10133  00FEA1  6C                 	db	108	;'l'
 10134  00FEA2  20                 	db	32
 10135  00FEA3  44                 	db	68	;'D'
 10136  00FEA4  41                 	db	65	;'A'
 10137  00FEA5  43                 	db	67	;'C'
 10138  00FEA6  31                 	db	49	;'1'
 10139  00FEA7  00                 	db	0
 10140  00FEA8                     STR_84:
 10141  00FEA8  4D                 	db	77	;'M'
 10142  00FEA9  65                 	db	101	;'e'
 10143  00FEAA  61                 	db	97	;'a'
 10144  00FEAB  73                 	db	115	;'s'
 10145  00FEAC  75                 	db	117	;'u'
 10146  00FEAD  72                 	db	114	;'r'
 10147  00FEAE  65                 	db	101	;'e'
 10148  00FEAF  20                 	db	32
 10149  00FEB0  41                 	db	65	;'A'
 10150  00FEB1  56                 	db	86	;'V'
 10151  00FEB2  53                 	db	83	;'S'
 10152  00FEB3  53                 	db	83	;'S'
 10153  00FEB4  3F                 	db	63	;'?'
 10154  00FEB5  00                 	db	0
 10155  00FEB6                     STR_100:
 10156  00FEB6  4C                 	db	76	;'L'
 10157  00FEB7  6F                 	db	111	;'o'
 10158  00FEB8  61                 	db	97	;'a'
 10159  00FEB9  64                 	db	100	;'d'
 10160  00FEBA  20                 	db	32
 10161  00FEBB  45                 	db	69	;'E'
 10162  00FEBC  6E                 	db	110	;'n'
 10163  00FEBD  61                 	db	97	;'a'
 10164  00FEBE  62                 	db	98	;'b'
 10165  00FEBF  6C                 	db	108	;'l'
 10166  00FEC0  65                 	db	101	;'e'
 10167  00FEC1  64                 	db	100	;'d'
 10168  00FEC2  3F                 	db	63	;'?'
 10169  00FEC3  00                 	db	0
 10170  00FEC4                     STR_118:
 10171  00FEC4  4C                 	db	76	;'L'
 10172  00FEC5  6F                 	db	111	;'o'
 10173  00FEC6  61                 	db	97	;'a'
 10174  00FEC7  64                 	db	100	;'d'
 10175  00FEC8  20                 	db	32
 10176  00FEC9  4F                 	db	79	;'O'
 10177  00FECA  6E                 	db	110	;'n'
 10178  00FECB  20                 	db	32
 10179  00FECC  54                 	db	84	;'T'
 10180  00FECD  69                 	db	105	;'i'
 10181  00FECE  6D                 	db	109	;'m'
 10182  00FECF  65                 	db	101	;'e'
 10183  00FED0  3F                 	db	63	;'?'
 10184  00FED1  00                 	db	0
 10185  00FED2                     STR_128:
 10186  00FED2  4D                 	db	77	;'M'
 10187  00FED3  61                 	db	97	;'a'
 10188  00FED4  78                 	db	120	;'x'
 10189  00FED5  20                 	db	32
 10190  00FED6  44                 	db	68	;'D'
 10191  00FED7  69                 	db	105	;'i'
 10192  00FED8  65                 	db	101	;'e'
 10193  00FED9  20                 	db	32
 10194  00FEDA  54                 	db	84	;'T'
 10195  00FEDB  65                 	db	101	;'e'
 10196  00FEDC  6D                 	db	109	;'m'
 10197  00FEDD  70                 	db	112	;'p'
 10198  00FEDE  3F                 	db	63	;'?'
 10199  00FEDF  00                 	db	0
 10200  00FEE0                     STR_64:
 10201  00FEE0  49                 	db	73	;'I'
 10202  00FEE1  6E                 	db	110	;'n'
 10203  00FEE2  74                 	db	116	;'t'
 10204  00FEE3  65                 	db	101	;'e'
 10205  00FEE4  72                 	db	114	;'r'
 10206  00FEE5  6E                 	db	110	;'n'
 10207  00FEE6  61                 	db	97	;'a'
 10208  00FEE7  6C                 	db	108	;'l'
 10209  00FEE8  20                 	db	32
 10210  00FEE9  41                 	db	65	;'A'
 10211  00FEEA  56                 	db	86	;'V'
 10212  00FEEB  53                 	db	83	;'S'
 10213  00FEEC  53                 	db	83	;'S'
 10214  00FEED  00                 	db	0
 10215  00FEEE                     STR_65:
 10216  00FEEE  49                 	db	73	;'I'
 10217  00FEEF  6E                 	db	110	;'n'
 10218  00FEF0  74                 	db	116	;'t'
 10219  00FEF1  65                 	db	101	;'e'
 10220  00FEF2  72                 	db	114	;'r'
 10221  00FEF3  6E                 	db	110	;'n'
 10222  00FEF4  61                 	db	97	;'a'
 10223  00FEF5  6C                 	db	108	;'l'
 10224  00FEF6  20                 	db	32
 10225  00FEF7  54                 	db	84	;'T'
 10226  00FEF8  65                 	db	101	;'e'
 10227  00FEF9  6D                 	db	109	;'m'
 10228  00FEFA  70                 	db	112	;'p'
 10229  00FEFB  00                 	db	0
 10230  00FEFC                     STR_152:
 10231  00FEFC  50                 	db	80	;'P'
 10232  00FEFD  49                 	db	73	;'I'
 10233  00FEFE  43                 	db	67	;'C'
 10234  00FEFF  31                 	db	49	;'1'
 10235  00FF00  38                 	db	56	;'8'
 10236  00FF01  4C                 	db	76	;'L'
 10237  00FF02  46                 	db	70	;'F'
 10238  00FF03  36                 	db	54	;'6'
 10239  00FF04  37                 	db	55	;'7'
 10240  00FF05  4B                 	db	75	;'K'
 10241  00FF06  34                 	db	52	;'4'
 10242  00FF07  30                 	db	48	;'0'
 10243  00FF08  00                 	db	0
 10244  00FF09                     STR_55:
 10245  00FF09  52                 	db	82	;'R'
 10246  00FF0A  65                 	db	101	;'e'
 10247  00FF0B  76                 	db	118	;'v'
 10248  00FF0C  69                 	db	105	;'i'
 10249  00FF0D  73                 	db	115	;'s'
 10250  00FF0E  69                 	db	105	;'i'
 10251  00FF0F  6F                 	db	111	;'o'
 10252  00FF10  6E                 	db	110	;'n'
 10253  00FF11  20                 	db	32
 10254  00FF12  49                 	db	73	;'I'
 10255  00FF13  44                 	db	68	;'D'
 10256  00FF14  3F                 	db	63	;'?'
 10257  00FF15  00                 	db	0
 10258  00FF16                     STR_82:
 10259  00FF16  4D                 	db	77	;'M'
 10260  00FF17  65                 	db	101	;'e'
 10261  00FF18  61                 	db	97	;'a'
 10262  00FF19  73                 	db	115	;'s'
 10263  00FF1A  75                 	db	117	;'u'
 10264  00FF1B  72                 	db	114	;'r'
 10265  00FF1C  65                 	db	101	;'e'
 10266  00FF1D  20                 	db	32
 10267  00FF1E  46                 	db	70	;'F'
 10268  00FF1F  56                 	db	86	;'V'
 10269  00FF20  52                 	db	82	;'R'
 10270  00FF21  3F                 	db	63	;'?'
 10271  00FF22  00                 	db	0
 10272  00FF23                     STR_107:
 10273  00FF23  44                 	db	68	;'D'
 10274  00FF24  69                 	db	105	;'i'
 10275  00FF25  73                 	db	115	;'s'
 10276  00FF26  61                 	db	97	;'a'
 10277  00FF27  62                 	db	98	;'b'
 10278  00FF28  6C                 	db	108	;'l'
 10279  00FF29  65                 	db	101	;'e'
 10280  00FF2A  20                 	db	32
 10281  00FF2B  4C                 	db	76	;'L'
 10282  00FF2C  6F                 	db	111	;'o'
 10283  00FF2D  61                 	db	97	;'a'
 10284  00FF2E  64                 	db	100	;'d'
 10285  00FF2F  00                 	db	0
 10286  00FF30                     STR_151:
 10287  00FF30  50                 	db	80	;'P'
 10288  00FF31  49                 	db	73	;'I'
 10289  00FF32  43                 	db	67	;'C'
 10290  00FF33  31                 	db	49	;'1'
 10291  00FF34  38                 	db	56	;'8'
 10292  00FF35  46                 	db	70	;'F'
 10293  00FF36  36                 	db	54	;'6'
 10294  00FF37  37                 	db	55	;'7'
 10295  00FF38  4B                 	db	75	;'K'
 10296  00FF39  34                 	db	52	;'4'
 10297  00FF3A  30                 	db	48	;'0'
 10298  00FF3B  00                 	db	0
 10299  00FF3C                     STR_98:
 10300  00FF3C  45                 	db	69	;'E'
 10301  00FF3D  6E                 	db	110	;'n'
 10302  00FF3E  61                 	db	97	;'a'
 10303  00FF3F  62                 	db	98	;'b'
 10304  00FF40  6C                 	db	108	;'l'
 10305  00FF41  65                 	db	101	;'e'
 10306  00FF42  20                 	db	32
 10307  00FF43  4C                 	db	76	;'L'
 10308  00FF44  6F                 	db	111	;'o'
 10309  00FF45  61                 	db	97	;'a'
 10310  00FF46  64                 	db	100	;'d'
 10311  00FF47  00                 	db	0
 10312  00FF48                     STR_53:
 10313  00FF48  44                 	db	68	;'D'
 10314  00FF49  65                 	db	101	;'e'
 10315  00FF4A  76                 	db	118	;'v'
 10316  00FF4B  69                 	db	105	;'i'
 10317  00FF4C  63                 	db	99	;'c'
 10318  00FF4D  65                 	db	101	;'e'
 10319  00FF4E  20                 	db	32
 10320  00FF4F  49                 	db	73	;'I'
 10321  00FF50  44                 	db	68	;'D'
 10322  00FF51  3F                 	db	63	;'?'
 10323  00FF52  00                 	db	0
 10324  00FF53                     STR_122:
 10325  00FF53  4D                 	db	77	;'M'
 10326  00FF54  61                 	db	97	;'a'
 10327  00FF55  78                 	db	120	;'x'
 10328  00FF56  20                 	db	32
 10329  00FF57  50                 	db	80	;'P'
 10330  00FF58  6F                 	db	111	;'o'
 10331  00FF59  77                 	db	119	;'w'
 10332  00FF5A  65                 	db	101	;'e'
 10333  00FF5B  72                 	db	114	;'r'
 10334  00FF5C  3F                 	db	63	;'?'
 10335  00FF5D  00                 	db	0
 10336  00FF5E                     STR_60:
 10337  00FF5E  41                 	db	65	;'A'
 10338  00FF5F  44                 	db	68	;'D'
 10339  00FF60  43                 	db	67	;'C'
 10340  00FF61  20                 	db	32
 10341  00FF62  45                 	db	69	;'E'
 10342  00FF63  72                 	db	114	;'r'
 10343  00FF64  72                 	db	114	;'r'
 10344  00FF65  6F                 	db	111	;'o'
 10345  00FF66  72                 	db	114	;'r'
 10346  00FF67  3F                 	db	63	;'?'
 10347  00FF68  00                 	db	0
 10348  00FF69                     STR_57:
 10349  00FF69  55                 	db	85	;'U'
 10350  00FF6A  73                 	db	115	;'s'
 10351  00FF6B  65                 	db	101	;'e'
 10352  00FF6C  72                 	db	114	;'r'
 10353  00FF6D  20                 	db	32
 10354  00FF6E  49                 	db	73	;'I'
 10355  00FF6F  44                 	db	68	;'D'
 10356  00FF70  73                 	db	115	;'s'
 10357  00FF71  3F                 	db	63	;'?'
 10358  00FF72  00                 	db	0
 10359  00FF73                     STR_68:
 10360  00FF73  55                 	db	85	;'U'
 10361  00FF74  6E                 	db	110	;'n'
 10362  00FF75  64                 	db	100	;'d'
 10363  00FF76  65                 	db	101	;'e'
 10364  00FF77  66                 	db	102	;'f'
 10365  00FF78  69                 	db	105	;'i'
 10366  00FF79  6E                 	db	110	;'n'
 10367  00FF7A  65                 	db	101	;'e'
 10368  00FF7B  64                 	db	100	;'d'
 10369  00FF7C  00                 	db	0
 10370  00FF7D                     STR_142:
 10371  00FF7D  48                 	db	72	;'H'
 10372  00FF7E  65                 	db	101	;'e'
 10373  00FF7F  6C                 	db	108	;'l'
 10374  00FF80  70                 	db	112	;'p'
 10375  00FF81  20                 	db	32
 10376  00FF82  41                 	db	65	;'A'
 10377  00FF83  6C                 	db	108	;'l'
 10378  00FF84  6C                 	db	108	;'l'
 10379  00FF85  00                 	db	0
 10380  00FF86                     STR_164:
 10381  00FF86  28                 	db	40
 10382  00FF87  6E                 	db	110	;'n'
 10383  00FF88  75                 	db	117	;'u'
 10384  00FF89  6C                 	db	108	;'l'
 10385  00FF8A  6C                 	db	108	;'l'
 10386  00FF8B  29                 	db	41
 10387  00FF8C  00                 	db	0
 10388  00FF8D                     STR_63:
 10389  00FF8D  50                 	db	80	;'P'
 10390  00FF8E  4F                 	db	79	;'O'
 10391  00FF8F  53                 	db	83	;'S'
 10392  00FF90  33                 	db	51	;'3'
 10393  00FF91  50                 	db	80	;'P'
 10394  00FF92  33                 	db	51	;'3'
 10395  00FF93  00                 	db	0
 10396  00FF94                     STR_62:
 10397  00FF94  50                 	db	80	;'P'
 10398  00FF95  4F                 	db	79	;'O'
 10399  00FF96  53                 	db	83	;'S'
 10400  00FF97  31                 	db	49	;'1'
 10401  00FF98  32                 	db	50	;'2'
 10402  00FF99  00                 	db	0
 10403  00FF9A                     STR_49:
 10404  00FF9A  2A                 	db	42
 10405  00FF9B  49                 	db	73	;'I'
 10406  00FF9C  44                 	db	68	;'D'
 10407  00FF9D  4E                 	db	78	;'N'
 10408  00FF9E  3F                 	db	63	;'?'
 10409  00FF9F  00                 	db	0
 10410  00FFA0                     STR_44:
 10411  00FFA0  43                 	db	67	;'C'
 10412  00FFA1  6C                 	db	108	;'l'
 10413  00FFA2  65                 	db	101	;'e'
 10414  00FFA3  61                 	db	97	;'a'
 10415  00FFA4  72                 	db	114	;'r'
 10416  00FFA5  00                 	db	0
 10417  00FFA6                     STR_61:
 10418  00FFA6  49                 	db	73	;'I'
 10419  00FFA7  53                 	db	83	;'S'
 10420  00FFA8  4E                 	db	78	;'N'
 10421  00FFA9  53                 	db	83	;'S'
 10422  00FFAA  00                 	db	0
 10423  00FFAB                     STR_144:
 10424  00FFAB  48                 	db	72	;'H'
 10425  00FFAC  65                 	db	101	;'e'
 10426  00FFAD  6C                 	db	108	;'l'
 10427  00FFAE  70                 	db	112	;'p'
 10428  00FFAF  00                 	db	0
 10429  00FFB0                     STR_2:
 10430  00FFB0  1B                 	db	27
 10431  00FFB1  5B                 	db	91	;'['
 10432  00FFB2  32                 	db	50	;'2'
 10433  00FFB3  4A                 	db	74	;'J'
 10434  00FFB4  00                 	db	0
 10435  00FFB5                     STR_50:
 10436  00FFB5  49                 	db	73	;'I'
 10437  00FFB6  44                 	db	68	;'D'
 10438  00FFB7  4E                 	db	78	;'N'
 10439  00FFB8  00                 	db	0
 10440  00FFB9                     STR_3:
 10441  00FFB9  1B                 	db	27
 10442  00FFBA  5B                 	db	91	;'['
 10443  00FFBB  48                 	db	72	;'H'
 10444  00FFBC  00                 	db	0
 10445  00FFBD  1B                 	db	27
 10446  00FFBE  5B                 	db	91	;'['
 10447  00FFBF  73                 	db	115	;'s'
 10448  00FFC0  00                 	db	0
 10449  00FFC1  1B                 	db	27
 10450  00FFC2  5B                 	db	91	;'['
 10451  00FFC3  75                 	db	117	;'u'
 10452  00FFC4  00                 	db	0
 10453  00FFC5                     STR_1:
 10454  00FFC5  1B                 	db	27
 10455  00FFC6  5B                 	db	91	;'['
 10456  00FFC7  4B                 	db	75	;'K'
 10457  00FFC8  00                 	db	0
 10458  00FFC9                     STR_20:
 10459  00FFC9  33                 	db	51	;'3'
 10460  00FFCA  30                 	db	48	;'0'
 10461  00FFCB  00                 	db	0
 10462  00FFCC                     STR_21:
 10463  00FFCC  33                 	db	51	;'3'
 10464  00FFCD  31                 	db	49	;'1'
 10465  00FFCE  00                 	db	0
 10466  00FFCF                     STR_31:
 10467  00FFCF  34                 	db	52	;'4'
 10468  00FFD0  31                 	db	49	;'1'
 10469  00FFD1  00                 	db	0
 10470  00FFD2                     STR_22:
 10471  00FFD2  33                 	db	51	;'3'
 10472  00FFD3  32                 	db	50	;'2'
 10473  00FFD4  00                 	db	0
 10474  00FFD5                     STR_32:
 10475  00FFD5  34                 	db	52	;'4'
 10476  00FFD6  32                 	db	50	;'2'
 10477  00FFD7  00                 	db	0
 10478  00FFD8                     STR_23:
 10479  00FFD8  33                 	db	51	;'3'
 10480  00FFD9  33                 	db	51	;'3'
 10481  00FFDA  00                 	db	0
 10482  00FFDB                     STR_33:
 10483  00FFDB  34                 	db	52	;'4'
 10484  00FFDC  33                 	db	51	;'3'
 10485  00FFDD  00                 	db	0
 10486  00FFDE                     STR_24:
 10487  00FFDE  33                 	db	51	;'3'
 10488  00FFDF  34                 	db	52	;'4'
 10489  00FFE0  00                 	db	0
 10490  00FFE1                     STR_34:
 10491  00FFE1  34                 	db	52	;'4'
 10492  00FFE2  34                 	db	52	;'4'
 10493  00FFE3  00                 	db	0
 10494  00FFE4                     STR_25:
 10495  00FFE4  33                 	db	51	;'3'
 10496  00FFE5  35                 	db	53	;'5'
 10497  00FFE6  00                 	db	0
 10498  00FFE7                     STR_35:
 10499  00FFE7  34                 	db	52	;'4'
 10500  00FFE8  35                 	db	53	;'5'
 10501  00FFE9  00                 	db	0
 10502  00FFEA                     STR_26:
 10503  00FFEA  33                 	db	51	;'3'
 10504  00FFEB  36                 	db	54	;'6'
 10505  00FFEC  00                 	db	0
 10506  00FFED                     STR_36:
 10507  00FFED  34                 	db	52	;'4'
 10508  00FFEE  36                 	db	54	;'6'
 10509  00FFEF  00                 	db	0
 10510  00FFF0                     STR_27:
 10511  00FFF0  33                 	db	51	;'3'
 10512  00FFF1  37                 	db	55	;'7'
 10513  00FFF2  00                 	db	0
 10514  00FFF3                     STR_37:
 10515  00FFF3  34                 	db	52	;'4'
 10516  00FFF4  37                 	db	55	;'7'
 10517  00FFF5  00                 	db	0
 10518  00FFF6                     STR_11:
 10519  00FFF6  1B                 	db	27
 10520  00FFF7  5B                 	db	91	;'['
 10521  00FFF8  00                 	db	0
 10522  00FFF9                     STR_17:
 10523  00FFF9  38                 	db	56	;'8'
 10524  00FFFA  00                 	db	0
 10525  00FFFB                     STR_19:
 10526  00FFFB  3B                 	db	59	;';'
 10527  00FFFC  00                 	db	0
 10528  00FFFD                     STR_39:
 10529  00FFFD  6D                 	db	109	;'m'
 10530  00FFFE  00                 	db	0
 10531  0000                     
 10532                           ; #config settings
 10533  00FFFF  00                 	db	0	; dummy byte at the end
 10534  0000                     
 10535                           	psect	nvBANK2
 10536  0002FA                     __pnvBANK2:
 10537                           	opt stack 0
 10538  0002FA                     _reset_cause:
 10539                           	opt stack 0
 10540  0002FA                     	ds	1
 10541  0000                     _INT0PPS	set	3568
 10542  0000                     _HLVDCON0bits	set	3778
 10543  0000                     _HLVDCON0	set	3778
 10544  0000                     _HLVDCON1	set	3779
 10545  0000                     _PIR8bits	set	3643
 10546  0000                     _FVRCONbits	set	3780
 10547  0000                     _FVRCON	set	3780
 10548  0000                     _RC2REG	set	3825
 10549  0000                     _RC2STAbits	set	3829
 10550  0000                     _TX2REG	set	3826
 10551  0000                     _TX2STAbits	set	3830
 10552  0000                     _SP2BRGH	set	3828
 10553  0000                     _SP2BRGL	set	3827
 10554  0000                     _TX2STA	set	3830
 10555  0000                     _RC2STA	set	3829
 10556  0000                     _BAUD2CON	set	3831
 10557  0000                     _PIR2bits	set	3637
 10558  0000                     _PIE2bits	set	3627
 10559  0000                     _PIR1bits	set	3636
 10560  0000                     _PIE1bits	set	3626
 10561  0000                     _PIR5bits	set	3640
 10562  0000                     _PIE5bits	set	3630
 10563  0000                     _PIR3bits	set	3638
 10564  0000                     _PIE3bits	set	3628
 10565  0000                     _PIR0bits	set	3635
 10566  0000                     _PIE0bits	set	3625
 10567  0000                     _IPR2bits	set	3617
 10568  0000                     _IPR1bits	set	3616
 10569  0000                     _IPR5bits	set	3620
 10570  0000                     _IPR3bits	set	3618
 10571  0000                     _IPR0bits	set	3615
 10572  0000                     _RX2PPS	set	3601
 10573  0000                     _RG7PPS	set	3721
 10574  0000                     _SLRCONH	set	3774
 10575  0000                     _SLRCONG	set	3769
 10576  0000                     _SLRCONF	set	3761
 10577  0000                     _SLRCONE	set	3756
 10578  0000                     _SLRCOND	set	3748
 10579  0000                     _SLRCONC	set	3743
 10580  0000                     _SLRCONB	set	3735
 10581  0000                     _SLRCONA	set	3727
 10582  0000                     _ODCOND	set	3749
 10583  0000                     _ODCONC	set	3744
 10584  0000                     _ODCONH	set	3775
 10585  0000                     _ODCONB	set	3736
 10586  0000                     _ODCONG	set	3770
 10587  0000                     _ODCONA	set	3728
 10588  0000                     _ODCONF	set	3762
 10589  0000                     _ODCONE	set	3757
 10590  0000                     _WPUH	set	3776
 10591  0000                     _WPUC	set	3745
 10592  0000                     _WPUA	set	3729
 10593  0000                     _WPUG	set	3771
 10594  0000                     _WPUB	set	3737
 10595  0000                     _WPUE	set	3758
 10596  0000                     _WPUF	set	3763
 10597  0000                     _WPUD	set	3750
 10598  0000                     _ANSELA	set	3730
 10599  0000                     _ANSELF	set	3764
 10600  0000                     _ANSELG	set	3772
 10601  0000                     _ANSELE	set	3759
 10602  0000                     _ANSELB	set	3738
 10603  0000                     _ANSELD	set	3751
 10604  0000                     _PMD5	set	3665
 10605  0000                     _PMD4	set	3664
 10606  0000                     _PMD3	set	3663
 10607  0000                     _PMD2	set	3662
 10608  0000                     _PMD1	set	3661
 10609  0000                     _PMD0	set	3660
 10610  0000                     _OSCTUNE	set	3656
 10611  0000                     _OSCFRQ	set	3657
 10612  0000                     _OSCEN	set	3655
 10613  0000                     _OSCCON3	set	3653
 10614  0000                     _OSCCON1	set	3651
 10615  0000                     _PLLR	set	29232
 10616  0000                     _T7GCONbits	set	3889
 10617  0000                     _T7CONbits	set	3888
 10618  0000                     _T7CON	set	3888
 10619  0000                     _TMR7L	set	3886
 10620  0000                     _TMR7H	set	3887
 10621  0000                     _T7CLK	set	3891
 10622  0000                     _T7GATE	set	3890
 10623  0000                     _T7GCON	set	3889
 10624  0000                     _ADCON1bits	set	3929
 10625  0000                     _ADCON2bits	set	3930
 10626  0000                     _ADPRE	set	3934
 10627  0000                     _ADCON3bits	set	3931
 10628  0000                     _ADACQ	set	3932
 10629  0000                     _ADCLK	set	3927
 10630  0000                     _ADACT	set	3926
 10631  0000                     _ADREF	set	3928
 10632  0000                     _ADCON3	set	3931
 10633  0000                     _ADCON2	set	3930
 10634  0000                     _ADCON1	set	3929
 10635  0000                     _ADCAP	set	3933
 10636  0000                     _ADPCH	set	3935
 10637  0000                     _PCON0bits	set	4055
 10638  0000                     _LATGbits	set	3967
 10639  0000                     _NVMDAT	set	3958
 10640  0000                     _NVMADRL	set	3956
 10641  0000                     _NVMADRH	set	3957
 10642  0000                     _NVMCON2	set	3960
 10643  0000                     _TABLAT	set	4085
 10644  0000                     _TBLPTRL	set	4086
 10645  0000                     _TBLPTRH	set	4087
 10646  0000                     _TBLPTRU	set	4088
 10647  0000                     _NVMCON1bits	set	3959
 10648  0000                     _T5GCONbits	set	4036
 10649  0000                     _T5CONbits	set	4035
 10650  0000                     _T5CON	set	4035
 10651  0000                     _TMR5L	set	4033
 10652  0000                     _TMR5H	set	4034
 10653  0000                     _T5CLK	set	4038
 10654  0000                     _T5GATE	set	4037
 10655  0000                     _T5GCON	set	4036
 10656  0000                     _ADERRL	set	3950
 10657  0000                     _ADERRH	set	3951
 10658  0000                     _ADPREVL	set	3937
 10659  0000                     _ADPREVH	set	3938
 10660  0000                     _ADFLTRL	set	3954
 10661  0000                     _ADFLTRH	set	3955
 10662  0000                     _ADSTATbits	set	3941
 10663  0000                     _ADACCL	set	3952
 10664  0000                     _ADACCH	set	3953
 10665  0000                     _ADCNT	set	3943
 10666  0000                     _ADRESL	set	3939
 10667  0000                     _ADRESH	set	3940
 10668  0000                     _ADCON0bits	set	3936
 10669  0000                     _ADCON0	set	3936
 10670  0000                     _ADSTAT	set	3941
 10671  0000                     _ADRPT	set	3942
 10672  0000                     _ADSTPTH	set	3945
 10673  0000                     _ADSTPTL	set	3944
 10674  0000                     _ADUTHH	set	3949
 10675  0000                     _ADUTHL	set	3948
 10676  0000                     _ADLTHH	set	3947
 10677  0000                     _ADLTHL	set	3946
 10678  0000                     _LATFbits	set	3966
 10679  0000                     _PR6	set	4016
 10680  0000                     _TMR6	set	4015
 10681  0000                     _T6CONbits	set	4017
 10682  0000                     _T6RSTbits	set	4020
 10683  0000                     _T6HLTbits	set	4018
 10684  0000                     _T6CON	set	4017
 10685  0000                     _T6TMR	set	4015
 10686  0000                     _T6PR	set	4016
 10687  0000                     _T6RST	set	4020
 10688  0000                     _T6HLT	set	4018
 10689  0000                     _T6CLKCON	set	4019
 10690  0000                     _INTCONbits	set	4082
 10691  0000                     _TRISD	set	3972
 10692  0000                     _TRISC	set	3971
 10693  0000                     _TRISH	set	3976
 10694  0000                     _TRISB	set	3970
 10695  0000                     _TRISG	set	3975
 10696  0000                     _TRISA	set	3969
 10697  0000                     _TRISF	set	3974
 10698  0000                     _TRISE	set	3973
 10699  0000                     _LATH	set	3968
 10700  0000                     _LATC	set	3963
 10701  0000                     _LATG	set	3967
 10702  0000                     _LATB	set	3962
 10703  0000                     _LATF	set	3966
 10704  0000                     _LATA	set	3961
 10705  0000                     _LATD	set	3964
 10706  0000                     _LATE	set	3965
 10707                           
 10708                           	psect	cinit
 10709  0180A4                     __pcinit:
 10710                           	opt stack 0
 10711  0180A4                     start_initialization:
 10712                           	opt stack 0
 10713  0180A4                     __initialization:
 10714                           	opt stack 0
 10715                           
 10716                           ; Initialize objects allocated to BANK2 (36 bytes)
 10717                           ; load TBLPTR registers with __pidataBANK2
 10718  0180A4  0E84               	movlw	low __pidataBANK2
 10719  0180A6  6EF6               	movwf	tblptrl,c
 10720  0180A8  0E91               	movlw	high __pidataBANK2
 10721  0180AA  6EF7               	movwf	tblptrh,c
 10722  0180AC  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 10723  0180AE  6EF8               	movwf	tblptru,c
 10724  0180B0  EE02  F0D6         	lfsr	0,__pdataBANK2
 10725  0180B4  EE10 F024          	lfsr	1,36
 10726  0180B8                     copy_data0:
 10727  0180B8  0009               	tblrd		*+
 10728  0180BA  CFF5 FFEE          	movff	tablat,postinc0
 10729  0180BE  50E5               	movf	postdec1,w,c
 10730  0180C0  50E1               	movf	fsr1l,w,c
 10731  0180C2  E1FA               	bnz	copy_data0
 10732                           
 10733                           ; Initialize objects allocated to BANK1 (1 bytes)
 10734                           ; load TBLPTR registers with __pidataBANK1
 10735  0180C4  0E80               	movlw	low __pidataBANK1
 10736  0180C6  6EF6               	movwf	tblptrl,c
 10737  0180C8  0E94               	movlw	high __pidataBANK1
 10738  0180CA  6EF7               	movwf	tblptrh,c
 10739  0180CC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
 10740  0180CE  6EF8               	movwf	tblptru,c
 10741  0180D0  0009               	tblrd		*+	;fetch initializer
 10742  0180D2  CFF5 F1E8          	movff	tablat,__pdataBANK1
 10743                           
 10744                           ; Initialize objects allocated to BANK0 (6 bytes)
 10745                           ; load TBLPTR registers with __pidataBANK0
 10746  0180D6  0E4E               	movlw	low __pidataBANK0
 10747  0180D8  6EF6               	movwf	tblptrl,c
 10748  0180DA  0E94               	movlw	high __pidataBANK0
 10749  0180DC  6EF7               	movwf	tblptrh,c
 10750  0180DE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 10751  0180E0  6EF8               	movwf	tblptru,c
 10752  0180E2  EE00  F0F0         	lfsr	0,__pdataBANK0
 10753  0180E6  EE10 F006          	lfsr	1,6
 10754  0180EA                     copy_data1:
 10755  0180EA  0009               	tblrd		*+
 10756  0180EC  CFF5 FFEE          	movff	tablat,postinc0
 10757  0180F0  50E5               	movf	postdec1,w,c
 10758  0180F2  50E1               	movf	fsr1l,w,c
 10759  0180F4  E1FA               	bnz	copy_data1
 10760                           
 10761                           ; Clear objects allocated to BANK3 (192 bytes)
 10762  0180F6  EE03  F000         	lfsr	0,__pbssBANK3
 10763  0180FA  0EC0               	movlw	192
 10764  0180FC                     clear_0:
 10765  0180FC  6AEE               	clrf	postinc0,c
 10766  0180FE  06E8               	decf	wreg,f,c
 10767  018100  E1FD               	bnz	clear_0
 10768                           
 10769                           ; Clear objects allocated to BANK2 (131 bytes)
 10770  018102  EE02  F000         	lfsr	0,__pbssBANK2
 10771  018106  0E83               	movlw	131
 10772  018108                     clear_1:
 10773  018108  6AEE               	clrf	postinc0,c
 10774  01810A  06E8               	decf	wreg,f,c
 10775  01810C  E1FD               	bnz	clear_1
 10776                           
 10777                           ; Clear objects allocated to BANK1 (45 bytes)
 10778  01810E  EE01  F0BB         	lfsr	0,__pbssBANK1
 10779  018112  0E2D               	movlw	45
 10780  018114                     clear_2:
 10781  018114  6AEE               	clrf	postinc0,c
 10782  018116  06E8               	decf	wreg,f,c
 10783  018118  E1FD               	bnz	clear_2
 10784                           
 10785                           ; Clear objects allocated to BITBANK0 (1 bytes)
 10786  01811A  0100               	movlb	0
 10787  01811C  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
 10788                           
 10789                           ; Clear objects allocated to BANK0 (5 bytes)
 10790  01811E  0100               	movlb	0
 10791  018120  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
 10792  018122  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
 10793  018124  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
 10794  018126  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
 10795  018128  6BF6               	clrf	__pbssBANK0& (0+255),b
 10796                           
 10797                           ; Clear objects allocated to BITCOMRAM (1 bytes)
 10798  01812A  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
 10799  01812C                     end_of_initialization:
 10800                           	opt stack 0
 10801  01812C                     __end_of__initialization:
 10802                           	opt stack 0
 10803  01812C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10804  01812E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10805  018130  0100               	movlb	0
 10806  018132  EF47  F0BF         	goto	_main	;jump to C main() function
 10807                           tblptru	equ	0xFF8
 10808                           tblptrh	equ	0xFF7
 10809                           tblptrl	equ	0xFF6
 10810                           tablat	equ	0xFF5
 10811                           postinc0	equ	0xFEE
 10812                           wreg	equ	0xFE8
 10813                           postdec1	equ	0xFE5
 10814                           fsr1l	equ	0xFE1
 10815                           
 10816                           	psect	bitbssCOMRAM
 10817  0002F0                     __pbitbssCOMRAM:
 10818                           	opt stack 0
 10819  0002F0                     _adc_error_flag:
 10820                           	opt stack 0
 10821  0002F0                     	ds	1
 10822  0002F1                     _load_enable:
 10823                           	opt stack 0
 10824  0002F1                     	ds	1
 10825  0002F2                     _VCC_overvoltage_flag:
 10826                           	opt stack 0
 10827  0002F2                     	ds	1
 10828                           tblptru	equ	0xFF8
 10829                           tblptrh	equ	0xFF7
 10830                           tblptrl	equ	0xFF6
 10831                           tablat	equ	0xFF5
 10832                           postinc0	equ	0xFEE
 10833                           wreg	equ	0xFE8
 10834                           postdec1	equ	0xFE5
 10835                           fsr1l	equ	0xFE1
 10836                           
 10837                           	psect	bitbssBANK0
 10838  0007D8                     __pbitbssBANK0:
 10839                           	opt stack 0
 10840  0007D8                     _eusart2RxStringReady:
 10841                           	opt stack 0
 10842  0007D8                     	ds	1
 10843                           tblptru	equ	0xFF8
 10844                           tblptrh	equ	0xFF7
 10845                           tblptrl	equ	0xFF6
 10846                           tablat	equ	0xFF5
 10847                           postinc0	equ	0xFEE
 10848                           wreg	equ	0xFE8
 10849                           postdec1	equ	0xFE5
 10850                           fsr1l	equ	0xFE1
 10851                           
 10852                           	psect	bssBANK0
 10853  0000F6                     __pbssBANK0:
 10854                           	opt stack 0
 10855  0000F6                     _Ipk:
 10856                           	opt stack 0
 10857  0000F6                     	ds	4
 10858  0000FA                     _eusart2RxHead:
 10859                           	opt stack 0
 10860  0000FA                     	ds	1
 10861                           tblptru	equ	0xFF8
 10862                           tblptrh	equ	0xFF7
 10863                           tblptrl	equ	0xFF6
 10864                           tablat	equ	0xFF5
 10865                           postinc0	equ	0xFEE
 10866                           wreg	equ	0xFE8
 10867                           postdec1	equ	0xFE5
 10868                           fsr1l	equ	0xFE1
 10869                           
 10870                           	psect	dataBANK0
 10871  0000F0                     __pdataBANK0:
 10872                           	opt stack 0
 10873  0000F0                     _dimming_period:
 10874                           	opt stack 0
 10875  0000F0                     	ds	2
 10876  0000F2                     _TRIAC_Firing_Angle:
 10877                           	opt stack 0
 10878  0000F2                     	ds	4
 10879                           tblptru	equ	0xFF8
 10880                           tblptrh	equ	0xFF7
 10881                           tblptrl	equ	0xFF6
 10882                           tablat	equ	0xFF5
 10883                           postinc0	equ	0xFEE
 10884                           wreg	equ	0xFE8
 10885                           postdec1	equ	0xFE5
 10886                           fsr1l	equ	0xFE1
 10887                           
 10888                           	psect	bssBANK1
 10889  0001BB                     __pbssBANK1:
 10890                           	opt stack 0
 10891  0001BB                     _Avg_Power:
 10892                           	opt stack 0
 10893  0001BB                     	ds	4
 10894  0001BF                     _Vrms:
 10895                           	opt stack 0
 10896  0001BF                     	ds	4
 10897  0001C3                     _Irms:
 10898                           	opt stack 0
 10899  0001C3                     	ds	4
 10900  0001C7                     _Imeas:
 10901                           	opt stack 0
 10902  0001C7                     	ds	4
 10903  0001CB                     _Temp_ADC_Result:
 10904                           	opt stack 0
 10905  0001CB                     	ds	4
 10906  0001CF                     _POS12_ADC_Result:
 10907                           	opt stack 0
 10908  0001CF                     	ds	4
 10909  0001D3                     _POS3P3_ADC_Result:
 10910                           	opt stack 0
 10911  0001D3                     	ds	4
 10912  0001D7                     _AVSS_ADC_Result:
 10913                           	opt stack 0
 10914  0001D7                     	ds	4
 10915  0001DB                     _timer5ReloadVal:
 10916                           	opt stack 0
 10917  0001DB                     	ds	2
 10918  0001DD                     _timer7ReloadVal:
 10919                           	opt stack 0
 10920  0001DD                     	ds	2
 10921  0001DF                     _eusart2RxCount:
 10922                           	opt stack 0
 10923  0001DF                     	ds	1
 10924  0001E0                     _eusart2RxTail:
 10925                           	opt stack 0
 10926  0001E0                     	ds	1
 10927  0001E1                     _eusart2TxBufferRemaining:
 10928                           	opt stack 0
 10929  0001E1                     	ds	1
 10930  0001E2                     _eusart2TxTail:
 10931                           	opt stack 0
 10932  0001E2                     	ds	1
 10933  0001E3                     _eusart2TxHead:
 10934                           	opt stack 0
 10935  0001E3                     	ds	1
 10936  0001E4                     _FVR_ADC_Result:
 10937                           	opt stack 0
 10938  0001E4                     	ds	4
 10939                           tblptru	equ	0xFF8
 10940                           tblptrh	equ	0xFF7
 10941                           tblptrl	equ	0xFF6
 10942                           tablat	equ	0xFF5
 10943                           postinc0	equ	0xFEE
 10944                           wreg	equ	0xFE8
 10945                           postdec1	equ	0xFE5
 10946                           fsr1l	equ	0xFE1
 10947                           
 10948                           	psect	dataBANK1
 10949  0001E8                     __pdataBANK1:
 10950                           	opt stack 0
 10951  0001E8                     _next_channel:
 10952                           	opt stack 0
 10953  0001E8                     	ds	1
 10954                           tblptru	equ	0xFF8
 10955                           tblptrh	equ	0xFF7
 10956                           tblptrl	equ	0xFF6
 10957                           tablat	equ	0xFF5
 10958                           postinc0	equ	0xFEE
 10959                           wreg	equ	0xFE8
 10960                           postdec1	equ	0xFE5
 10961                           fsr1l	equ	0xFE1
 10962                           
 10963                           	psect	bssBANK2
 10964  000200                     __pbssBANK2:
 10965                           	opt stack 0
 10966  000200                     _max_FVR_ADC_Result:
 10967                           	opt stack 0
 10968  000200                     	ds	4
 10969  000204                     _max_Temp_ADC_Result:
 10970                           	opt stack 0
 10971  000204                     	ds	4
 10972  000208                     _max_POS12_ADC_Result:
 10973                           	opt stack 0
 10974  000208                     	ds	4
 10975  00020C                     _max_POS3P3_ADC_Result:
 10976                           	opt stack 0
 10977  00020C                     	ds	4
 10978  000210                     _max_Power:
 10979                           	opt stack 0
 10980  000210                     	ds	4
 10981  000214                     _max_Irms:
 10982                           	opt stack 0
 10983  000214                     	ds	4
 10984  000218                     _load_on_time:
 10985                           	opt stack 0
 10986  000218                     	ds	4
 10987  00021C                     _dev_on_time:
 10988                           	opt stack 0
 10989  00021C                     	ds	4
 10990  000220                     _Vpk:
 10991                           	opt stack 0
 10992  000220                     	ds	4
 10993  000224                     _ADC_Result_Scaling:
 10994                           	opt stack 0
 10995  000224                     	ds	4
 10996  000228                     _INT0_InterruptHandler:
 10997                           	opt stack 0
 10998  000228                     	ds	3
 10999  00022B                     _TMR5_InterruptHandler:
 11000                           	opt stack 0
 11001  00022B                     	ds	3
 11002  00022E                     _TMR7_InterruptHandler:
 11003                           	opt stack 0
 11004  00022E                     	ds	3
 11005  000231                     _ADCC_ADTI_InterruptHandler:
 11006                           	opt stack 0
 11007  000231                     	ds	3
 11008  000234                     _TMR6_InterruptHandler:
 11009                           	opt stack 0
 11010  000234                     	ds	3
 11011  000237                     _EUSART2_RxDefaultInterruptHandler:
 11012                           	opt stack 0
 11013  000237                     	ds	3
 11014  00023A                     _EUSART2_TxDefaultInterruptHandler:
 11015                           	opt stack 0
 11016  00023A                     	ds	3
 11017  00023D                     _errno:
 11018                           	opt stack 0
 11019  00023D                     	ds	2
 11020  00023F                     _current_adc_channel:
 11021                           	opt stack 0
 11022  00023F                     	ds	1
 11023  000240                     _background_color:
 11024                           	opt stack 0
 11025  000240                     	ds	1
 11026  000241                     _foreground_color:
 11027                           	opt stack 0
 11028  000241                     	ds	1
 11029  000242                     _attribute:
 11030                           	opt stack 0
 11031  000242                     	ds	1
 11032  000243                     _line:
 11033                           	opt stack 0
 11034  000243                     	ds	64
 11035                           tblptru	equ	0xFF8
 11036                           tblptrh	equ	0xFF7
 11037                           tblptrl	equ	0xFF6
 11038                           tablat	equ	0xFF5
 11039                           postinc0	equ	0xFEE
 11040                           wreg	equ	0xFE8
 11041                           postdec1	equ	0xFE5
 11042                           fsr1l	equ	0xFE1
 11043                           
 11044                           	psect	dataBANK2
 11045  0002D6                     __pdataBANK2:
 11046                           	opt stack 0
 11047  0002D6                     getCauseOfResetString@strings:
 11048                           	opt stack 0
 11049  0002D6                     	ds	18
 11050  0002E8                     getDeviceIDString@F17550:
 11051                           	opt stack 0
 11052  0002E8                     	ds	6
 11053  0002EE                     _Irms_offset:
 11054                           	opt stack 0
 11055  0002EE                     	ds	4
 11056  0002F2                     _Vpk_const:
 11057                           	opt stack 0
 11058  0002F2                     	ds	4
 11059  0002F6                     _Temp_ADC_Offset:
 11060                           	opt stack 0
 11061  0002F6                     	ds	4
 11062                           tblptru	equ	0xFF8
 11063                           tblptrh	equ	0xFF7
 11064                           tblptrl	equ	0xFF6
 11065                           tablat	equ	0xFF5
 11066                           postinc0	equ	0xFEE
 11067                           wreg	equ	0xFE8
 11068                           postdec1	equ	0xFE5
 11069                           fsr1l	equ	0xFE1
 11070                           
 11071                           	psect	bssBANK3
 11072  000300                     __pbssBANK3:
 11073                           	opt stack 0
 11074  000300                     _eusart2TxBuffer:
 11075                           	opt stack 0
 11076  000300                     	ds	128
 11077  000380                     _eusart2RxBuffer:
 11078                           	opt stack 0
 11079  000380                     	ds	64
 11080                           tblptru	equ	0xFF8
 11081                           tblptrh	equ	0xFF7
 11082                           tblptrl	equ	0xFF6
 11083                           tablat	equ	0xFF5
 11084                           postinc0	equ	0xFEE
 11085                           wreg	equ	0xFE8
 11086                           postdec1	equ	0xFE5
 11087                           fsr1l	equ	0xFE1
 11088                           
 11089                           	psect	cstackBANK2
 11090  000283                     __pcstackBANK2:
 11091                           	opt stack 0
 11092  000283                     terminal_textAttributes@foreground_color:
 11093                           	opt stack 0
 11094                           
 11095                           ; 1 bytes @ 0x0
 11096  000283                     	ds	1
 11097  000284                     terminal_textAttributes@output_buff:
 11098                           	opt stack 0
 11099                           
 11100                           ; 15 bytes @ 0x1
 11101  000284                     	ds	15
 11102  000293                     ringBufferLUT@channel_name:
 11103                           	opt stack 0
 11104                           
 11105                           ; 22 bytes @ 0x10
 11106  000293                     	ds	22
 11107  0002A9                     ringBufferLUT@angle_degrees:
 11108                           	opt stack 0
 11109                           
 11110                           ; 4 bytes @ 0x26
 11111  0002A9                     	ds	4
 11112  0002AD                     ringBufferLUT@max_current_print:
 11113                           	opt stack 0
 11114                           
 11115                           ; 4 bytes @ 0x2A
 11116  0002AD                     	ds	4
 11117  0002B1                     ringBufferLUT@max_Power_print:
 11118                           	opt stack 0
 11119                           
 11120                           ; 4 bytes @ 0x2E
 11121  0002B1                     	ds	4
 11122  0002B5                     ringBufferLUT@max_voltage_print:
 11123                           	opt stack 0
 11124                           
 11125                           ; 4 bytes @ 0x32
 11126  0002B5                     	ds	4
 11127  0002B9                     ringBufferLUT@max_voltage_print_2870:
 11128                           	opt stack 0
 11129                           
 11130                           ; 4 bytes @ 0x36
 11131  0002B9                     	ds	4
 11132  0002BD                     ringBufferLUT@max_temp_print:
 11133                           	opt stack 0
 11134                           
 11135                           ; 4 bytes @ 0x3A
 11136  0002BD                     	ds	4
 11137  0002C1                     ringBufferLUT@max_voltage_print_2876:
 11138                           	opt stack 0
 11139                           
 11140                           ; 4 bytes @ 0x3E
 11141  0002C1                     	ds	4
 11142  0002C5                     ringBufferLUT@arg_buff:
 11143                           	opt stack 0
 11144                           
 11145                           ; 3 bytes @ 0x42
 11146  0002C5                     	ds	3
 11147  0002C8                     ringBufferLUT@index:
 11148                           	opt stack 0
 11149                           
 11150                           ; 2 bytes @ 0x45
 11151  0002C8                     	ds	2
 11152  0002CA                     ringBufferLUT@percentage:
 11153                           	opt stack 0
 11154                           
 11155                           ; 2 bytes @ 0x47
 11156  0002CA                     	ds	2
 11157  0002CC                     ringBufferLUT@userID:
 11158                           	opt stack 0
 11159                           
 11160                           ; 2 bytes @ 0x49
 11161  0002CC                     	ds	2
 11162  0002CE                     terminal_ringBufferPull@charNumber:
 11163                           	opt stack 0
 11164                           
 11165                           ; 2 bytes @ 0x4B
 11166  0002CE                     	ds	2
 11167  0002D0                     terminal_ringBufferPull@index_2527:
 11168                           	opt stack 0
 11169                           
 11170                           ; 2 bytes @ 0x4D
 11171  0002D0                     	ds	2
 11172  0002D2                     terminal_ringBufferPull@index:
 11173                           	opt stack 0
 11174                           
 11175                           ; 2 bytes @ 0x4F
 11176  0002D2                     	ds	2
 11177  0002D4                     ??_main:
 11178                           
 11179                           ; 1 bytes @ 0x51
 11180  0002D4                     	ds	2
 11181                           tblptru	equ	0xFF8
 11182                           tblptrh	equ	0xFF7
 11183                           tblptrl	equ	0xFF6
 11184                           tablat	equ	0xFF5
 11185                           postinc0	equ	0xFEE
 11186                           wreg	equ	0xFE8
 11187                           postdec1	equ	0xFE5
 11188                           fsr1l	equ	0xFE1
 11189                           
 11190                           	psect	cstackBANK1
 11191  000100                     __pcstackBANK1:
 11192                           	opt stack 0
 11193  000100                     ??_heartbeatTimerCallback:
 11194  000100                     ADCC_StartConversion@channel:
 11195                           	opt stack 0
 11196  000100                     TMR7_WriteTimer@timerVal:
 11197                           	opt stack 0
 11198                           
 11199                           ; 2 bytes @ 0x0
 11200  000100                     	ds	1
 11201  000101                     
 11202                           ; 1 bytes @ 0x1
 11203  000101                     	ds	1
 11204  000102                     ??_INTERRUPT_InterruptManagerLow:
 11205  000102                     
 11206                           ; 1 bytes @ 0x2
 11207  000102                     	ds	21
 11208  000117                     ??_isdigit:
 11209  000117                     ?_strlen:
 11210                           	opt stack 0
 11211  000117                     ?_strcmp:
 11212                           	opt stack 0
 11213  000117                     ?_getCauseOfResetString:
 11214                           	opt stack 0
 11215  000117                     ?_strchr:
 11216                           	opt stack 0
 11217  000117                     ?___wmul:
 11218                           	opt stack 0
 11219  000117                     ?___awmod:
 11220                           	opt stack 0
 11221  000117                     ?__tdiv_to_l_:
 11222                           	opt stack 0
 11223  000117                     ?__div_to_l_:
 11224                           	opt stack 0
 11225  000117                     ?___lldiv:
 11226                           	opt stack 0
 11227  000117                     ?___xxtofl:
 11228                           	opt stack 0
 11229  000117                     EUSART2_Read@readValue:
 11230                           	opt stack 0
 11231  000117                     EUSART2_Write@txData:
 11232                           	opt stack 0
 11233  000117                     getCauseOfReset@return_reset_cause:
 11234                           	opt stack 0
 11235  000117                     DATAEE_WriteByte@bAdd:
 11236                           	opt stack 0
 11237  000117                     DATAEE_ReadByte@bAdd:
 11238                           	opt stack 0
 11239  000117                     ___wmul@multiplier:
 11240                           	opt stack 0
 11241  000117                     ___awmod@dividend:
 11242                           	opt stack 0
 11243  000117                     strcat@to:
 11244                           	opt stack 0
 11245  000117                     strcmp@s1:
 11246                           	opt stack 0
 11247  000117                     strcpy@to:
 11248                           	opt stack 0
 11249  000117                     strlen@s:
 11250                           	opt stack 0
 11251  000117                     strncpy@to:
 11252                           	opt stack 0
 11253  000117                     strchr@ptr:
 11254                           	opt stack 0
 11255  000117                     TMR6_SetInterruptHandler@InterruptHandler:
 11256                           	opt stack 0
 11257  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
 11258                           	opt stack 0
 11259  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
 11260                           	opt stack 0
 11261  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
 11262                           	opt stack 0
 11263  000117                     TMR7_SetInterruptHandler@InterruptHandler:
 11264                           	opt stack 0
 11265  000117                     TMR5_SetInterruptHandler@InterruptHandler:
 11266                           	opt stack 0
 11267  000117                     INT0_SetInterruptHandler@InterruptHandler:
 11268                           	opt stack 0
 11269  000117                     __tdiv_to_l_@f1:
 11270                           	opt stack 0
 11271  000117                     FLASH_ReadByte@flashAddr:
 11272                           	opt stack 0
 11273  000117                     __div_to_l_@f1:
 11274                           	opt stack 0
 11275  000117                     ___flge@ff1:
 11276                           	opt stack 0
 11277  000117                     ___lldiv@dividend:
 11278                           	opt stack 0
 11279  000117                     ___xxtofl@val:
 11280                           	opt stack 0
 11281                           
 11282                           ; 4 bytes @ 0x17
 11283  000117                     	ds	1
 11284  000118                     putch@txData:
 11285                           	opt stack 0
 11286  000118                     _isdigit$3443:
 11287                           	opt stack 0
 11288                           
 11289                           ; 1 bytes @ 0x18
 11290  000118                     	ds	1
 11291  000119                     ??_strlen:
 11292  000119                     ?_readDoubleFromEEPROM:
 11293                           	opt stack 0
 11294  000119                     DATAEE_WriteByte@bData:
 11295                           	opt stack 0
 11296  000119                     getCauseOfResetString@r:
 11297                           	opt stack 0
 11298  000119                     isdigit@c:
 11299                           	opt stack 0
 11300  000119                     readDoubleFromEEPROM@starting_address:
 11301                           	opt stack 0
 11302  000119                     ___wmul@multiplicand:
 11303                           	opt stack 0
 11304  000119                     ___awmod@divisor:
 11305                           	opt stack 0
 11306  000119                     strcat@from:
 11307                           	opt stack 0
 11308  000119                     strcmp@s2:
 11309                           	opt stack 0
 11310  000119                     strcpy@from:
 11311                           	opt stack 0
 11312  000119                     strncpy@from:
 11313                           	opt stack 0
 11314  000119                     strchr@chr:
 11315                           	opt stack 0
 11316                           
 11317                           ; 2 bytes @ 0x19
 11318  000119                     	ds	1
 11319  00011A                     ??_TMR7_Initialize:
 11320  00011A                     ??_TMR5_Initialize:
 11321  00011A                     DATAEE_WriteByte@GIEBitValue:
 11322                           	opt stack 0
 11323  00011A                     __tdiv_to_l_@f2:
 11324                           	opt stack 0
 11325                           
 11326                           ; 3 bytes @ 0x1A
 11327  00011A                     	ds	1
 11328  00011B                     ??_strcmp:
 11329  00011B                     ??___xxtofl:
 11330  00011B                     ?_FLASH_ReadWord:
 11331                           	opt stack 0
 11332  00011B                     ___awmod@counter:
 11333                           	opt stack 0
 11334  00011B                     ___wmul@product:
 11335                           	opt stack 0
 11336  00011B                     strcat@cp:
 11337                           	opt stack 0
 11338  00011B                     strcpy@cp:
 11339                           	opt stack 0
 11340  00011B                     strlen@cp:
 11341                           	opt stack 0
 11342  00011B                     strncpy@size:
 11343                           	opt stack 0
 11344  00011B                     FLASH_ReadWord@flashAddr:
 11345                           	opt stack 0
 11346  00011B                     writeDoubleToEEPROM@input_double:
 11347                           	opt stack 0
 11348  00011B                     __div_to_l_@f2:
 11349                           	opt stack 0
 11350  00011B                     ___flge@ff2:
 11351                           	opt stack 0
 11352  00011B                     ___lldiv@divisor:
 11353                           	opt stack 0
 11354                           
 11355                           ; 4 bytes @ 0x1B
 11356  00011B                     	ds	1
 11357  00011C                     ___awmod@sign:
 11358                           	opt stack 0
 11359  00011C                     strcmp@r:
 11360                           	opt stack 0
 11361                           
 11362                           ; 1 bytes @ 0x1C
 11363  00011C                     	ds	1
 11364  00011D                     ??__tdiv_to_l_:
 11365  00011D                     ?_atoi:
 11366                           	opt stack 0
 11367  00011D                     ?_strncmp:
 11368                           	opt stack 0
 11369  00011D                     ?___awdiv:
 11370                           	opt stack 0
 11371  00011D                     atoi@s:
 11372                           	opt stack 0
 11373  00011D                     ___awdiv@dividend:
 11374                           	opt stack 0
 11375  00011D                     strncpy@cp:
 11376                           	opt stack 0
 11377  00011D                     strncmp@s1:
 11378                           	opt stack 0
 11379  00011D                     readDoubleFromEEPROM@output_data:
 11380                           	opt stack 0
 11381                           
 11382                           ; 4 bytes @ 0x1D
 11383  00011D                     	ds	2
 11384  00011F                     ??_atoi:
 11385  00011F                     ??_FLASH_ReadWord:
 11386  00011F                     ??___flge:
 11387  00011F                     ___lldiv@counter:
 11388                           	opt stack 0
 11389  00011F                     ___xxtofl@sign:
 11390                           	opt stack 0
 11391  00011F                     writeDoubleToEEPROM@starting_address:
 11392                           	opt stack 0
 11393  00011F                     ___awdiv@divisor:
 11394                           	opt stack 0
 11395  00011F                     strncmp@s2:
 11396                           	opt stack 0
 11397  00011F                     __div_to_l_@quot:
 11398                           	opt stack 0
 11399                           
 11400                           ; 4 bytes @ 0x1F
 11401  00011F                     	ds	1
 11402  000120                     ___xxtofl@exp:
 11403                           	opt stack 0
 11404  000120                     __tdiv_to_l_@quot:
 11405                           	opt stack 0
 11406  000120                     ___lldiv@quotient:
 11407                           	opt stack 0
 11408                           
 11409                           ; 4 bytes @ 0x20
 11410  000120                     	ds	1
 11411  000121                     atoi@sign:
 11412                           	opt stack 0
 11413  000121                     ___awdiv@counter:
 11414                           	opt stack 0
 11415  000121                     readDoubleFromEEPROM@byte_index:
 11416                           	opt stack 0
 11417  000121                     strncmp@len:
 11418                           	opt stack 0
 11419  000121                     writeDoubleToEEPROM@input_data:
 11420                           	opt stack 0
 11421  000121                     ___xxtofl@arg:
 11422                           	opt stack 0
 11423                           
 11424                           ; 4 bytes @ 0x21
 11425  000121                     	ds	1
 11426  000122                     ??_getMajorRevisionID:
 11427  000122                     ?_getDeviceID:
 11428                           	opt stack 0
 11429  000122                     ?_getUserID:
 11430                           	opt stack 0
 11431  000122                     ___awdiv@sign:
 11432                           	opt stack 0
 11433  000122                     getMinorRevisionID@REVID_RAW:
 11434                           	opt stack 0
 11435  000122                     atoi@a:
 11436                           	opt stack 0
 11437                           
 11438                           ; 2 bytes @ 0x22
 11439  000122                     	ds	1
 11440  000123                     ??_strncmp:
 11441  000123                     __div_to_l_@cntr:
 11442                           	opt stack 0
 11443  000123                     ___awdiv@quotient:
 11444                           	opt stack 0
 11445                           
 11446                           ; 2 bytes @ 0x23
 11447  000123                     	ds	1
 11448  000124                     ?_getDeviceIDString:
 11449                           	opt stack 0
 11450  000124                     ?___llmod:
 11451                           	opt stack 0
 11452  000124                     getUserID@inputUserID:
 11453                           	opt stack 0
 11454  000124                     __div_to_l_@exp1:
 11455                           	opt stack 0
 11456  000124                     __tdiv_to_l_@cntr:
 11457                           	opt stack 0
 11458  000124                     getDeviceIDString@inputDevID:
 11459                           	opt stack 0
 11460  000124                     ___llmod@dividend:
 11461                           	opt stack 0
 11462                           
 11463                           ; 4 bytes @ 0x24
 11464  000124                     	ds	1
 11465  000125                     ?___flneg:
 11466                           	opt stack 0
 11467  000125                     __tdiv_to_l_@exp1:
 11468                           	opt stack 0
 11469  000125                     getMajorRevisionID@REVID_RAW:
 11470                           	opt stack 0
 11471  000125                     writeDoubleToEEPROM@byte_index:
 11472                           	opt stack 0
 11473  000125                     getUserID@initialOffset:
 11474                           	opt stack 0
 11475  000125                     ___flneg@f1:
 11476                           	opt stack 0
 11477                           
 11478                           ; 4 bytes @ 0x25
 11479  000125                     	ds	1
 11480  000126                     ??_getDeviceIDString:
 11481  000126                     ?_strstr:
 11482                           	opt stack 0
 11483  000126                     strstr@s1:
 11484                           	opt stack 0
 11485                           
 11486                           ; 2 bytes @ 0x26
 11487  000126                     	ds	1
 11488  000127                     
 11489                           ; 1 bytes @ 0x27
 11490  000127                     	ds	1
 11491  000128                     strstr@s2:
 11492                           	opt stack 0
 11493  000128                     ___llmod@divisor:
 11494                           	opt stack 0
 11495  000128                     getDeviceIDString@strings:
 11496                           	opt stack 0
 11497                           
 11498                           ; 6 bytes @ 0x28
 11499  000128                     	ds	1
 11500  000129                     ?___fladd:
 11501                           	opt stack 0
 11502  000129                     getUserID@IDOffset:
 11503                           	opt stack 0
 11504  000129                     ___fladd@b:
 11505                           	opt stack 0
 11506                           
 11507                           ; 4 bytes @ 0x29
 11508  000129                     	ds	1
 11509  00012A                     
 11510                           ; 1 bytes @ 0x2A
 11511  00012A                     	ds	2
 11512  00012C                     ___llmod@counter:
 11513                           	opt stack 0
 11514                           
 11515                           ; 1 bytes @ 0x2C
 11516  00012C                     	ds	1
 11517  00012D                     ___fladd@a:
 11518                           	opt stack 0
 11519                           
 11520                           ; 4 bytes @ 0x2D
 11521  00012D                     	ds	4
 11522  000131                     ??___fladd:
 11523                           
 11524                           ; 1 bytes @ 0x31
 11525  000131                     	ds	8
 11526  000139                     ___fladd@signs:
 11527                           	opt stack 0
 11528                           
 11529                           ; 1 bytes @ 0x39
 11530  000139                     	ds	1
 11531  00013A                     ___fladd@aexp:
 11532                           	opt stack 0
 11533                           
 11534                           ; 1 bytes @ 0x3A
 11535  00013A                     	ds	1
 11536  00013B                     ___fladd@bexp:
 11537                           	opt stack 0
 11538                           
 11539                           ; 1 bytes @ 0x3B
 11540  00013B                     	ds	1
 11541  00013C                     ___fladd@grs:
 11542                           	opt stack 0
 11543                           
 11544                           ; 1 bytes @ 0x3C
 11545  00013C                     	ds	1
 11546  00013D                     ?___fldiv:
 11547                           	opt stack 0
 11548  00013D                     ?___flsub:
 11549                           	opt stack 0
 11550  00013D                     ___flsub@b:
 11551                           	opt stack 0
 11552  00013D                     ___fldiv@b:
 11553                           	opt stack 0
 11554                           
 11555                           ; 4 bytes @ 0x3D
 11556  00013D                     	ds	4
 11557  000141                     ___flsub@a:
 11558                           	opt stack 0
 11559  000141                     ___fldiv@a:
 11560                           	opt stack 0
 11561                           
 11562                           ; 4 bytes @ 0x41
 11563  000141                     	ds	4
 11564  000145                     ??___fldiv:
 11565  000145                     
 11566                           ; 1 bytes @ 0x45
 11567  000145                     	ds	4
 11568  000149                     ___fldiv@sign:
 11569                           	opt stack 0
 11570                           
 11571                           ; 1 bytes @ 0x49
 11572  000149                     	ds	1
 11573  00014A                     ___fldiv@rem:
 11574                           	opt stack 0
 11575                           
 11576                           ; 4 bytes @ 0x4A
 11577  00014A                     	ds	4
 11578  00014E                     ___fldiv@new_exp:
 11579                           	opt stack 0
 11580                           
 11581                           ; 2 bytes @ 0x4E
 11582  00014E                     	ds	2
 11583  000150                     ___fldiv@grs:
 11584                           	opt stack 0
 11585                           
 11586                           ; 4 bytes @ 0x50
 11587  000150                     	ds	4
 11588  000154                     ___fldiv@bexp:
 11589                           	opt stack 0
 11590                           
 11591                           ; 1 bytes @ 0x54
 11592  000154                     	ds	1
 11593  000155                     ___fldiv@aexp:
 11594                           	opt stack 0
 11595                           
 11596                           ; 1 bytes @ 0x55
 11597  000155                     	ds	1
 11598  000156                     ?___flmul:
 11599                           	opt stack 0
 11600  000156                     ___flmul@b:
 11601                           	opt stack 0
 11602                           
 11603                           ; 4 bytes @ 0x56
 11604  000156                     	ds	4
 11605  00015A                     ___flmul@a:
 11606                           	opt stack 0
 11607                           
 11608                           ; 4 bytes @ 0x5A
 11609  00015A                     	ds	4
 11610  00015E                     ??___flmul:
 11611                           
 11612                           ; 1 bytes @ 0x5E
 11613  00015E                     	ds	4
 11614  000162                     ___flmul@sign:
 11615                           	opt stack 0
 11616                           
 11617                           ; 1 bytes @ 0x62
 11618  000162                     	ds	1
 11619  000163                     ___flmul@aexp:
 11620                           	opt stack 0
 11621                           
 11622                           ; 1 bytes @ 0x63
 11623  000163                     	ds	1
 11624  000164                     ___flmul@bexp:
 11625                           	opt stack 0
 11626                           
 11627                           ; 1 bytes @ 0x64
 11628  000164                     	ds	1
 11629  000165                     ___flmul@grs:
 11630                           	opt stack 0
 11631                           
 11632                           ; 4 bytes @ 0x65
 11633  000165                     	ds	4
 11634  000169                     ___flmul@prod:
 11635                           	opt stack 0
 11636                           
 11637                           ; 4 bytes @ 0x69
 11638  000169                     	ds	4
 11639  00016D                     ___flmul@temp:
 11640                           	opt stack 0
 11641                           
 11642                           ; 2 bytes @ 0x6D
 11643  00016D                     	ds	2
 11644  00016F                     ?_fround:
 11645                           	opt stack 0
 11646  00016F                     ?_scale:
 11647                           	opt stack 0
 11648                           
 11649                           ; 4 bytes @ 0x6F
 11650  00016F                     	ds	4
 11651  000173                     _fround$4167:
 11652                           	opt stack 0
 11653  000173                     _scale$4168:
 11654                           	opt stack 0
 11655                           
 11656                           ; 4 bytes @ 0x73
 11657  000173                     	ds	4
 11658  000177                     scale@scl:
 11659                           	opt stack 0
 11660  000177                     _fround$4166:
 11661                           	opt stack 0
 11662                           
 11663                           ; 4 bytes @ 0x77
 11664  000177                     	ds	1
 11665  000178                     ?___fltol:
 11666                           	opt stack 0
 11667  000178                     ___fltol@f1:
 11668                           	opt stack 0
 11669                           
 11670                           ; 4 bytes @ 0x78
 11671  000178                     	ds	3
 11672  00017B                     fround@prec:
 11673                           	opt stack 0
 11674                           
 11675                           ; 1 bytes @ 0x7B
 11676  00017B                     	ds	1
 11677  00017C                     ??___fltol:
 11678                           
 11679                           ; 1 bytes @ 0x7C
 11680  00017C                     	ds	4
 11681  000180                     ___fltol@sign1:
 11682                           	opt stack 0
 11683                           
 11684                           ; 1 bytes @ 0x80
 11685  000180                     	ds	1
 11686  000181                     ___fltol@exp1:
 11687                           	opt stack 0
 11688                           
 11689                           ; 1 bytes @ 0x81
 11690  000181                     	ds	1
 11691  000182                     ?_printf:
 11692                           	opt stack 0
 11693  000182                     printf@f:
 11694                           	opt stack 0
 11695                           
 11696                           ; 2 bytes @ 0x82
 11697  000182                     	ds	10
 11698  00018C                     ??_printf:
 11699                           
 11700                           ; 1 bytes @ 0x8C
 11701  00018C                     	ds	6
 11702  000192                     _printf$4169:
 11703                           	opt stack 0
 11704                           
 11705                           ; 4 bytes @ 0x92
 11706  000192                     	ds	4
 11707  000196                     printf@idx:
 11708                           	opt stack 0
 11709                           
 11710                           ; 1 bytes @ 0x96
 11711  000196                     	ds	1
 11712  000197                     printf@cp:
 11713                           	opt stack 0
 11714                           
 11715                           ; 2 bytes @ 0x97
 11716  000197                     	ds	2
 11717  000199                     printf@len:
 11718                           	opt stack 0
 11719                           
 11720                           ; 2 bytes @ 0x99
 11721  000199                     	ds	2
 11722  00019B                     printf@ap:
 11723                           	opt stack 0
 11724                           
 11725                           ; 2 bytes @ 0x9B
 11726  00019B                     	ds	2
 11727  00019D                     printf@tmpval:
 11728                           	opt stack 0
 11729                           
 11730                           ; 4 bytes @ 0x9D
 11731  00019D                     	ds	4
 11732  0001A1                     printf@exp:
 11733                           	opt stack 0
 11734                           
 11735                           ; 2 bytes @ 0xA1
 11736  0001A1                     	ds	2
 11737  0001A3                     printf@fval:
 11738                           	opt stack 0
 11739                           
 11740                           ; 4 bytes @ 0xA3
 11741  0001A3                     	ds	4
 11742  0001A7                     printf@val:
 11743                           	opt stack 0
 11744                           
 11745                           ; 4 bytes @ 0xA7
 11746  0001A7                     	ds	4
 11747  0001AB                     printf@flag:
 11748                           	opt stack 0
 11749                           
 11750                           ; 2 bytes @ 0xAB
 11751  0001AB                     	ds	2
 11752  0001AD                     printf@width:
 11753                           	opt stack 0
 11754                           
 11755                           ; 2 bytes @ 0xAD
 11756  0001AD                     	ds	2
 11757  0001AF                     printf@prec:
 11758                           	opt stack 0
 11759                           
 11760                           ; 2 bytes @ 0xAF
 11761  0001AF                     	ds	2
 11762  0001B1                     printf@c:
 11763                           	opt stack 0
 11764                           
 11765                           ; 1 bytes @ 0xB1
 11766  0001B1                     	ds	1
 11767  0001B2                     terminal_textAttributes@background_color:
 11768                           	opt stack 0
 11769                           
 11770                           ; 1 bytes @ 0xB2
 11771  0001B2                     	ds	1
 11772  0001B3                     terminal_textAttributes@input_attribute:
 11773                           	opt stack 0
 11774                           
 11775                           ; 1 bytes @ 0xB3
 11776  0001B3                     	ds	1
 11777  0001B4                     ringBufferLUT@line:
 11778                           	opt stack 0
 11779                           
 11780                           ; 2 bytes @ 0xB4
 11781  0001B4                     	ds	2
 11782  0001B6                     ??_ringBufferLUT:
 11783                           
 11784                           ; 1 bytes @ 0xB6
 11785  0001B6                     	ds	2
 11786  0001B8                     ??_terminal_ringBufferPull:
 11787                           
 11788                           ; 1 bytes @ 0xB8
 11789  0001B8                     	ds	3
 11790                           tblptru	equ	0xFF8
 11791                           tblptrh	equ	0xFF7
 11792                           tblptrl	equ	0xFF6
 11793                           tablat	equ	0xFF5
 11794                           postinc0	equ	0xFEE
 11795                           wreg	equ	0xFE8
 11796                           postdec1	equ	0xFE5
 11797                           fsr1l	equ	0xFE1
 11798                           
 11799                           	psect	cstackBANK0
 11800  000060                     __pcstackBANK0:
 11801                           	opt stack 0
 11802  000060                     ??i2___fladd:
 11803                           
 11804                           ; 1 bytes @ 0x0
 11805  000060                     	ds	8
 11806  000068                     i2___fladd@signs:
 11807                           	opt stack 0
 11808                           
 11809                           ; 1 bytes @ 0x8
 11810  000068                     	ds	1
 11811  000069                     i2___fladd@aexp:
 11812                           	opt stack 0
 11813                           
 11814                           ; 1 bytes @ 0x9
 11815  000069                     	ds	1
 11816  00006A                     i2___fladd@bexp:
 11817                           	opt stack 0
 11818                           
 11819                           ; 1 bytes @ 0xA
 11820  00006A                     	ds	1
 11821  00006B                     i2___fladd@grs:
 11822                           	opt stack 0
 11823                           
 11824                           ; 1 bytes @ 0xB
 11825  00006B                     	ds	1
 11826  00006C                     ?_sqrt:
 11827                           	opt stack 0
 11828  00006C                     ?_eval_poly:
 11829                           	opt stack 0
 11830  00006C                     ?i2___fltol:
 11831                           	opt stack 0
 11832  00006C                     eval_poly@x:
 11833                           	opt stack 0
 11834  00006C                     sqrt@a:
 11835                           	opt stack 0
 11836  00006C                     i2___fltol@f1:
 11837                           	opt stack 0
 11838                           
 11839                           ; 4 bytes @ 0xC
 11840  00006C                     	ds	4
 11841  000070                     ??_sqrt:
 11842  000070                     ??i2___fltol:
 11843  000070                     eval_poly@d:
 11844                           	opt stack 0
 11845                           
 11846                           ; 2 bytes @ 0x10
 11847  000070                     	ds	2
 11848  000072                     eval_poly@n:
 11849                           	opt stack 0
 11850                           
 11851                           ; 2 bytes @ 0x12
 11852  000072                     	ds	2
 11853  000074                     ??_eval_poly:
 11854  000074                     sqrt@sign:
 11855                           	opt stack 0
 11856  000074                     i2___fltol@sign1:
 11857                           	opt stack 0
 11858                           
 11859                           ; 1 bytes @ 0x14
 11860  000074                     	ds	1
 11861  000075                     sqrt@i:
 11862                           	opt stack 0
 11863  000075                     i2___fltol@exp1:
 11864                           	opt stack 0
 11865                           
 11866                           ; 1 bytes @ 0x15
 11867  000075                     	ds	1
 11868  000076                     ?_abs:
 11869                           	opt stack 0
 11870  000076                     ?_floor:
 11871                           	opt stack 0
 11872  000076                     abs@a:
 11873                           	opt stack 0
 11874  000076                     sqrt@tfrac:
 11875                           	opt stack 0
 11876  000076                     floor@x:
 11877                           	opt stack 0
 11878                           
 11879                           ; 4 bytes @ 0x16
 11880  000076                     	ds	2
 11881  000078                     ??_abs:
 11882  000078                     eval_poly@res:
 11883                           	opt stack 0
 11884                           
 11885                           ; 4 bytes @ 0x18
 11886  000078                     	ds	2
 11887  00007A                     sqrt@p:
 11888                           	opt stack 0
 11889  00007A                     floor@i:
 11890                           	opt stack 0
 11891                           
 11892                           ; 4 bytes @ 0x1A
 11893  00007A                     	ds	1
 11894  00007B                     sqrt@grs:
 11895                           	opt stack 0
 11896                           
 11897                           ; 4 bytes @ 0x1B
 11898  00007B                     	ds	1
 11899  00007C                     ?_atan:
 11900                           	opt stack 0
 11901  00007C                     atan@f:
 11902                           	opt stack 0
 11903                           
 11904                           ; 4 bytes @ 0x1C
 11905  00007C                     	ds	2
 11906  00007E                     floor@expon:
 11907                           	opt stack 0
 11908                           
 11909                           ; 2 bytes @ 0x1E
 11910  00007E                     	ds	1
 11911  00007F                     sqrt@exp:
 11912                           	opt stack 0
 11913                           
 11914                           ; 2 bytes @ 0x1F
 11915  00007F                     	ds	1
 11916  000080                     ?i2___flsub:
 11917                           	opt stack 0
 11918  000080                     atan@y:
 11919                           	opt stack 0
 11920  000080                     i2___flsub@b:
 11921                           	opt stack 0
 11922                           
 11923                           ; 4 bytes @ 0x20
 11924  000080                     	ds	1
 11925  000081                     sqrt@root:
 11926                           	opt stack 0
 11927                           
 11928                           ; 4 bytes @ 0x21
 11929  000081                     	ds	3
 11930  000084                     atan@x:
 11931                           	opt stack 0
 11932  000084                     i2___flsub@a:
 11933                           	opt stack 0
 11934                           
 11935                           ; 4 bytes @ 0x24
 11936  000084                     	ds	1
 11937  000085                     sqrt@frac:
 11938                           	opt stack 0
 11939                           
 11940                           ; 4 bytes @ 0x25
 11941  000085                     	ds	3
 11942  000088                     ?i2_printf:
 11943                           	opt stack 0
 11944  000088                     ?_sin:
 11945                           	opt stack 0
 11946  000088                     atan@recip:
 11947                           	opt stack 0
 11948  000088                     i2printf@f:
 11949                           	opt stack 0
 11950  000088                     sin@f:
 11951                           	opt stack 0
 11952                           
 11953                           ; 4 bytes @ 0x28
 11954  000088                     	ds	1
 11955  000089                     atan@val_squared:
 11956                           	opt stack 0
 11957                           
 11958                           ; 4 bytes @ 0x29
 11959  000089                     	ds	1
 11960  00008A                     ??i2_printf:
 11961                           
 11962                           ; 1 bytes @ 0x2A
 11963  00008A                     	ds	2
 11964  00008C                     sin@y:
 11965                           	opt stack 0
 11966                           
 11967                           ; 4 bytes @ 0x2C
 11968  00008C                     	ds	1
 11969  00008D                     atan@val:
 11970                           	opt stack 0
 11971                           
 11972                           ; 4 bytes @ 0x2D
 11973  00008D                     	ds	3
 11974  000090                     _sin$4372:
 11975                           	opt stack 0
 11976  000090                     i2_printf$4376:
 11977                           	opt stack 0
 11978                           
 11979                           ; 4 bytes @ 0x30
 11980  000090                     	ds	1
 11981  000091                     ?_asin:
 11982                           	opt stack 0
 11983  000091                     asin@x:
 11984                           	opt stack 0
 11985                           
 11986                           ; 4 bytes @ 0x31
 11987  000091                     	ds	3
 11988  000094                     i2printf@idx:
 11989                           	opt stack 0
 11990  000094                     sin@x2:
 11991                           	opt stack 0
 11992                           
 11993                           ; 4 bytes @ 0x34
 11994  000094                     	ds	1
 11995  000095                     i2printf@cp:
 11996                           	opt stack 0
 11997  000095                     asin@sgn:
 11998                           	opt stack 0
 11999                           
 12000                           ; 4 bytes @ 0x35
 12001  000095                     	ds	2
 12002  000097                     i2printf@len:
 12003                           	opt stack 0
 12004                           
 12005                           ; 2 bytes @ 0x37
 12006  000097                     	ds	1
 12007  000098                     sin@sgn:
 12008                           	opt stack 0
 12009                           
 12010                           ; 1 bytes @ 0x38
 12011  000098                     	ds	1
 12012  000099                     ?_currentMeasuredToPeak:
 12013                           	opt stack 0
 12014  000099                     i2printf@ap:
 12015                           	opt stack 0
 12016  000099                     currentMeasuredToPeak@Measured:
 12017                           	opt stack 0
 12018  000099                     _asin$4371:
 12019                           	opt stack 0
 12020                           
 12021                           ; 4 bytes @ 0x39
 12022  000099                     	ds	2
 12023  00009B                     i2printf@tmpval:
 12024                           	opt stack 0
 12025                           
 12026                           ; 4 bytes @ 0x3B
 12027  00009B                     	ds	2
 12028  00009D                     currentMeasuredToPeak@Angle:
 12029                           	opt stack 0
 12030  00009D                     _asin$4370:
 12031                           	opt stack 0
 12032                           
 12033                           ; 4 bytes @ 0x3D
 12034  00009D                     	ds	2
 12035  00009F                     i2printf@exp:
 12036                           	opt stack 0
 12037                           
 12038                           ; 2 bytes @ 0x3F
 12039  00009F                     	ds	2
 12040  0000A1                     currentMeasuredToPeak@Peak:
 12041                           	opt stack 0
 12042  0000A1                     asin@y:
 12043                           	opt stack 0
 12044  0000A1                     i2printf@val:
 12045                           	opt stack 0
 12046                           
 12047                           ; 4 bytes @ 0x41
 12048  0000A1                     	ds	4
 12049  0000A5                     i2printf@fval:
 12050                           	opt stack 0
 12051  0000A5                     _asin$4369:
 12052                           	opt stack 0
 12053                           
 12054                           ; 4 bytes @ 0x45
 12055  0000A5                     	ds	4
 12056  0000A9                     ?_acos:
 12057                           	opt stack 0
 12058  0000A9                     i2printf@flag:
 12059                           	opt stack 0
 12060  0000A9                     acos@x:
 12061                           	opt stack 0
 12062                           
 12063                           ; 4 bytes @ 0x49
 12064  0000A9                     	ds	2
 12065  0000AB                     i2printf@width:
 12066                           	opt stack 0
 12067                           
 12068                           ; 2 bytes @ 0x4B
 12069  0000AB                     	ds	2
 12070  0000AD                     i2printf@prec:
 12071                           	opt stack 0
 12072  0000AD                     _acos$4368:
 12073                           	opt stack 0
 12074                           
 12075                           ; 4 bytes @ 0x4D
 12076  0000AD                     	ds	2
 12077  0000AF                     i2printf@c:
 12078                           	opt stack 0
 12079                           
 12080                           ; 1 bytes @ 0x4F
 12081  0000AF                     	ds	2
 12082  0000B1                     ?_peakToRMS:
 12083                           	opt stack 0
 12084  0000B1                     peakToRMS@Peak:
 12085                           	opt stack 0
 12086                           
 12087                           ; 4 bytes @ 0x51
 12088  0000B1                     	ds	4
 12089  0000B5                     peakToRMS@Angle:
 12090                           	opt stack 0
 12091                           
 12092                           ; 4 bytes @ 0x55
 12093  0000B5                     	ds	4
 12094  0000B9                     _peakToRMS$4361:
 12095                           	opt stack 0
 12096                           
 12097                           ; 4 bytes @ 0x59
 12098  0000B9                     	ds	4
 12099  0000BD                     _peakToRMS$4362:
 12100                           	opt stack 0
 12101                           
 12102                           ; 4 bytes @ 0x5D
 12103  0000BD                     	ds	4
 12104  0000C1                     _peakToRMS$4360:
 12105                           	opt stack 0
 12106                           
 12107                           ; 4 bytes @ 0x61
 12108  0000C1                     	ds	4
 12109  0000C5                     peakToRMS@RMS:
 12110                           	opt stack 0
 12111                           
 12112                           ; 4 bytes @ 0x65
 12113  0000C5                     	ds	4
 12114  0000C9                     _ADCPostProcessingCallback$4365:
 12115                           	opt stack 0
 12116                           
 12117                           ; 4 bytes @ 0x69
 12118  0000C9                     	ds	4
 12119  0000CD                     _ADCPostProcessingCallback$4366:
 12120                           	opt stack 0
 12121                           
 12122                           ; 4 bytes @ 0x6D
 12123  0000CD                     	ds	4
 12124  0000D1                     _ADCPostProcessingCallback$4367:
 12125                           	opt stack 0
 12126                           
 12127                           ; 4 bytes @ 0x71
 12128  0000D1                     	ds	4
 12129  0000D5                     ADCPostProcessingCallback@current_adc_channel:
 12130                           	opt stack 0
 12131                           
 12132                           ; 1 bytes @ 0x75
 12133  0000D5                     	ds	1
 12134  0000D6                     _ADCPostProcessingCallback$4363:
 12135                           	opt stack 0
 12136                           
 12137                           ; 4 bytes @ 0x76
 12138  0000D6                     	ds	4
 12139  0000DA                     _ADCPostProcessingCallback$4364:
 12140                           	opt stack 0
 12141                           
 12142                           ; 4 bytes @ 0x7A
 12143  0000DA                     	ds	4
 12144  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
 12145                           
 12146                           ; 1 bytes @ 0x7E
 12147  0000DE                     	ds	18
 12148                           tblptru	equ	0xFF8
 12149                           tblptrh	equ	0xFF7
 12150                           tblptrl	equ	0xFF6
 12151                           tablat	equ	0xFF5
 12152                           postinc0	equ	0xFEE
 12153                           wreg	equ	0xFE8
 12154                           postdec1	equ	0xFE5
 12155                           fsr1l	equ	0xFE1
 12156                           
 12157                           	psect	cstackCOMRAM
 12158  000001                     __pcstackCOMRAM:
 12159                           	opt stack 0
 12160  000001                     ??i2_isdigit:
 12161  000001                     ?_ADCC_GetConversionResult:
 12162                           	opt stack 0
 12163  000001                     ?_ADCC_GetFilterValue:
 12164                           	opt stack 0
 12165  000001                     ?i2___wmul:
 12166                           	opt stack 0
 12167  000001                     ?i2___awmod:
 12168                           	opt stack 0
 12169  000001                     ?i2__div_to_l_:
 12170                           	opt stack 0
 12171  000001                     ?i2__tdiv_to_l_:
 12172                           	opt stack 0
 12173  000001                     ?i2___lldiv:
 12174                           	opt stack 0
 12175  000001                     i2EUSART2_Write@txData:
 12176                           	opt stack 0
 12177  000001                     TMR5_WriteTimer@timerVal:
 12178                           	opt stack 0
 12179  000001                     i2___wmul@multiplier:
 12180                           	opt stack 0
 12181  000001                     i2___awmod@dividend:
 12182                           	opt stack 0
 12183  000001                     i2__tdiv_to_l_@f1:
 12184                           	opt stack 0
 12185  000001                     frexp@value:
 12186                           	opt stack 0
 12187  000001                     i2__div_to_l_@f1:
 12188                           	opt stack 0
 12189  000001                     i2___lldiv@dividend:
 12190                           	opt stack 0
 12191                           
 12192                           ; 4 bytes @ 0x0
 12193  000001                     	ds	1
 12194  000002                     i2putch@txData:
 12195                           	opt stack 0
 12196  000002                     i2_isdigit$3443:
 12197                           	opt stack 0
 12198                           
 12199                           ; 1 bytes @ 0x1
 12200  000002                     	ds	1
 12201  000003                     ??_ADCC_GetConversionResult:
 12202  000003                     ??_ADCC_GetFilterValue:
 12203  000003                     i2isdigit@c:
 12204                           	opt stack 0
 12205  000003                     i2___wmul@multiplicand:
 12206                           	opt stack 0
 12207  000003                     i2___awmod@divisor:
 12208                           	opt stack 0
 12209                           
 12210                           ; 2 bytes @ 0x2
 12211  000003                     	ds	1
 12212  000004                     i2__tdiv_to_l_@f2:
 12213                           	opt stack 0
 12214                           
 12215                           ; 3 bytes @ 0x3
 12216  000004                     	ds	1
 12217  000005                     ?i2___xxtofl:
 12218                           	opt stack 0
 12219  000005                     i2___awmod@counter:
 12220                           	opt stack 0
 12221  000005                     frexp@eptr:
 12222                           	opt stack 0
 12223  000005                     i2___wmul@product:
 12224                           	opt stack 0
 12225  000005                     i2__div_to_l_@f2:
 12226                           	opt stack 0
 12227  000005                     i2___lldiv@divisor:
 12228                           	opt stack 0
 12229  000005                     i2___xxtofl@val:
 12230                           	opt stack 0
 12231                           
 12232                           ; 4 bytes @ 0x4
 12233  000005                     	ds	1
 12234  000006                     i2___awmod@sign:
 12235                           	opt stack 0
 12236                           
 12237                           ; 1 bytes @ 0x5
 12238  000006                     	ds	1
 12239  000007                     ??_frexp:
 12240  000007                     ??i2__tdiv_to_l_:
 12241  000007                     ?i2___awdiv:
 12242                           	opt stack 0
 12243  000007                     i2___awdiv@dividend:
 12244                           	opt stack 0
 12245                           
 12246                           ; 2 bytes @ 0x6
 12247  000007                     	ds	2
 12248  000009                     ??i2___xxtofl:
 12249  000009                     i2___awdiv@divisor:
 12250                           	opt stack 0
 12251  000009                     i2__div_to_l_@quot:
 12252                           	opt stack 0
 12253  000009                     i2___lldiv@quotient:
 12254                           	opt stack 0
 12255                           
 12256                           ; 4 bytes @ 0x8
 12257  000009                     	ds	1
 12258  00000A                     i2__tdiv_to_l_@quot:
 12259                           	opt stack 0
 12260                           
 12261                           ; 4 bytes @ 0x9
 12262  00000A                     	ds	1
 12263  00000B                     i2___awdiv@counter:
 12264                           	opt stack 0
 12265                           
 12266                           ; 1 bytes @ 0xA
 12267  00000B                     	ds	1
 12268  00000C                     i2___awdiv@sign:
 12269                           	opt stack 0
 12270                           
 12271                           ; 1 bytes @ 0xB
 12272  00000C                     	ds	1
 12273  00000D                     i2__div_to_l_@cntr:
 12274                           	opt stack 0
 12275  00000D                     i2___lldiv@counter:
 12276                           	opt stack 0
 12277  00000D                     i2___xxtofl@sign:
 12278                           	opt stack 0
 12279  00000D                     i2___awdiv@quotient:
 12280                           	opt stack 0
 12281                           
 12282                           ; 2 bytes @ 0xC
 12283  00000D                     	ds	1
 12284  00000E                     ?i2___llmod:
 12285                           	opt stack 0
 12286  00000E                     i2__div_to_l_@exp1:
 12287                           	opt stack 0
 12288  00000E                     i2__tdiv_to_l_@cntr:
 12289                           	opt stack 0
 12290  00000E                     i2___xxtofl@exp:
 12291                           	opt stack 0
 12292  00000E                     i2___llmod@dividend:
 12293                           	opt stack 0
 12294                           
 12295                           ; 4 bytes @ 0xD
 12296  00000E                     	ds	1
 12297  00000F                     i2__tdiv_to_l_@exp1:
 12298                           	opt stack 0
 12299  00000F                     i2___xxtofl@arg:
 12300                           	opt stack 0
 12301                           
 12302                           ; 4 bytes @ 0xE
 12303  00000F                     	ds	3
 12304  000012                     i2___llmod@divisor:
 12305                           	opt stack 0
 12306                           
 12307                           ; 4 bytes @ 0x11
 12308  000012                     	ds	1
 12309  000013                     ?i2___fldiv:
 12310                           	opt stack 0
 12311  000013                     i2___fldiv@b:
 12312                           	opt stack 0
 12313                           
 12314                           ; 4 bytes @ 0x12
 12315  000013                     	ds	3
 12316  000016                     i2___llmod@counter:
 12317                           	opt stack 0
 12318                           
 12319                           ; 1 bytes @ 0x15
 12320  000016                     	ds	1
 12321  000017                     i2___fldiv@a:
 12322                           	opt stack 0
 12323                           
 12324                           ; 4 bytes @ 0x16
 12325  000017                     	ds	4
 12326  00001B                     ??i2___fldiv:
 12327                           
 12328                           ; 1 bytes @ 0x1A
 12329  00001B                     	ds	4
 12330  00001F                     i2___fldiv@sign:
 12331                           	opt stack 0
 12332                           
 12333                           ; 1 bytes @ 0x1E
 12334  00001F                     	ds	1
 12335  000020                     i2___fldiv@rem:
 12336                           	opt stack 0
 12337                           
 12338                           ; 4 bytes @ 0x1F
 12339  000020                     	ds	4
 12340  000024                     i2___fldiv@new_exp:
 12341                           	opt stack 0
 12342                           
 12343                           ; 2 bytes @ 0x23
 12344  000024                     	ds	2
 12345  000026                     i2___fldiv@grs:
 12346                           	opt stack 0
 12347                           
 12348                           ; 4 bytes @ 0x25
 12349  000026                     	ds	4
 12350  00002A                     i2___fldiv@bexp:
 12351                           	opt stack 0
 12352                           
 12353                           ; 1 bytes @ 0x29
 12354  00002A                     	ds	1
 12355  00002B                     i2___fldiv@aexp:
 12356                           	opt stack 0
 12357                           
 12358                           ; 1 bytes @ 0x2A
 12359  00002B                     	ds	1
 12360  00002C                     ?i2___flneg:
 12361                           	opt stack 0
 12362  00002C                     i2___flneg@f1:
 12363                           	opt stack 0
 12364                           
 12365                           ; 4 bytes @ 0x2B
 12366  00002C                     	ds	4
 12367  000030                     ?_fabs:
 12368                           	opt stack 0
 12369  000030                     ?i2___flmul:
 12370                           	opt stack 0
 12371  000030                     fabs@d:
 12372                           	opt stack 0
 12373  000030                     i2___flmul@b:
 12374                           	opt stack 0
 12375                           
 12376                           ; 4 bytes @ 0x2F
 12377  000030                     	ds	4
 12378  000034                     i2___flge@ff1:
 12379                           	opt stack 0
 12380  000034                     i2___flmul@a:
 12381                           	opt stack 0
 12382                           
 12383                           ; 4 bytes @ 0x33
 12384  000034                     	ds	4
 12385  000038                     ??i2___flmul:
 12386  000038                     i2___flge@ff2:
 12387                           	opt stack 0
 12388                           
 12389                           ; 4 bytes @ 0x37
 12390  000038                     	ds	4
 12391  00003C                     ??i2___flge:
 12392  00003C                     i2___flmul@sign:
 12393                           	opt stack 0
 12394                           
 12395                           ; 1 bytes @ 0x3B
 12396  00003C                     	ds	1
 12397  00003D                     i2___flmul@aexp:
 12398                           	opt stack 0
 12399                           
 12400                           ; 1 bytes @ 0x3C
 12401  00003D                     	ds	1
 12402  00003E                     i2___flmul@grs:
 12403                           	opt stack 0
 12404                           
 12405                           ; 4 bytes @ 0x3D
 12406  00003E                     	ds	4
 12407  000042                     i2___flmul@bexp:
 12408                           	opt stack 0
 12409                           
 12410                           ; 1 bytes @ 0x41
 12411  000042                     	ds	1
 12412  000043                     i2___flmul@prod:
 12413                           	opt stack 0
 12414                           
 12415                           ; 4 bytes @ 0x42
 12416  000043                     	ds	4
 12417  000047                     i2___flmul@temp:
 12418                           	opt stack 0
 12419                           
 12420                           ; 2 bytes @ 0x46
 12421  000047                     	ds	2
 12422  000049                     ?i2_fround:
 12423                           	opt stack 0
 12424  000049                     ?i2_scale:
 12425                           	opt stack 0
 12426                           
 12427                           ; 4 bytes @ 0x48
 12428  000049                     	ds	4
 12429  00004D                     i2_fround$4374:
 12430                           	opt stack 0
 12431  00004D                     i2_scale$4375:
 12432                           	opt stack 0
 12433                           
 12434                           ; 4 bytes @ 0x4C
 12435  00004D                     	ds	4
 12436  000051                     i2scale@scl:
 12437                           	opt stack 0
 12438  000051                     i2_fround$4373:
 12439                           	opt stack 0
 12440                           
 12441                           ; 4 bytes @ 0x50
 12442  000051                     	ds	4
 12443  000055                     i2fround@prec:
 12444                           	opt stack 0
 12445                           
 12446                           ; 1 bytes @ 0x54
 12447  000055                     	ds	1
 12448  000056                     ?i2___fladd:
 12449                           	opt stack 0
 12450  000056                     i2___fladd@b:
 12451                           	opt stack 0
 12452                           
 12453                           ; 4 bytes @ 0x55
 12454  000056                     	ds	4
 12455  00005A                     i2___fladd@a:
 12456                           	opt stack 0
 12457                           
 12458                           ; 4 bytes @ 0x59
 12459  00005A                     	ds	4
 12460  00005E                     tblptru	equ	0xFF8
 12461                           tblptrh	equ	0xFF7
 12462                           tblptrl	equ	0xFF6
 12463                           tablat	equ	0xFF5
 12464                           postinc0	equ	0xFEE
 12465                           wreg	equ	0xFE8
 12466                           postdec1	equ	0xFE5
 12467                           fsr1l	equ	0xFE1
 12468                           
 12469                           ; 1 bytes @ 0x5D
 12470 ;;
 12471 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 12472 ;;
 12473 ;; *************** function _main *****************
 12474 ;; Defined at:
 12475 ;;		line 473 in file "main.c"
 12476 ;; Parameters:    Size  Location     Type
 12477 ;;		None
 12478 ;; Auto vars:     Size  Location     Type
 12479 ;;		None
 12480 ;; Return value:  Size  Location     Type
 12481 ;;                  1    wreg      void 
 12482 ;; Registers used:
 12483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12491 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 12492 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 12493 ;;Total ram usage:        2 bytes
 12494 ;; Hardware stack levels required when called:   20
 12495 ;; This function calls:
 12496 ;;		_ADCC_SetADTIInterruptHandler
 12497 ;;		_INT0_SetInterruptHandler
 12498 ;;		_SYSTEM_Initialize
 12499 ;;		_TMR5_SetInterruptHandler
 12500 ;;		_TMR5_StopTimer
 12501 ;;		_TMR6_SetInterruptHandler
 12502 ;;		_TMR7_SetInterruptHandler
 12503 ;;		_getCauseOfReset
 12504 ;;		_recoverSRAMMaxFromEEPROM
 12505 ;;		_saveSRAMMaxToEEPROM
 12506 ;;		_terminal_clearTerminal
 12507 ;;		_terminal_ringBufferPull
 12508 ;;		_terminal_setCursorHome
 12509 ;;		_terminal_textAttributesReset
 12510 ;; This function is called by:
 12511 ;;		Startup code after reset
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           	psect	text0
 12516  017E8E                     __ptext0:
 12517                           	opt stack 0
 12518  017E8E                     _main:
 12519                           	opt stack 11
 12520                           
 12521                           ;main.c: 477: reset_cause = getCauseOfReset();
 12522                           
 12523                           ;incstack = 0
 12524  017E8E  ECD9  F0C4         	call	_getCauseOfReset	;wreg free
 12525  017E92  0102               	movlb	2	; () banked
 12526  017E94  6FFA               	movwf	_reset_cause& (0+255),b
 12527                           
 12528                           ; BSR set to: 2
 12529                           ;main.c: 481: _delay((unsigned long)((250)*(64000000/4000.0)));
 12530  017E96  0E15               	movlw	21
 12531  017E98  0102               	movlb	2	; () banked
 12532  017E9A  6FD5               	movwf	(??_main+1)& (0+255),b
 12533  017E9C  0E4B               	movlw	75
 12534  017E9E  6FD4               	movwf	??_main& (0+255),b
 12535  017EA0  0EBE               	movlw	190
 12536  017EA2                     u27297:
 12537  017EA2  2EE8               	decfsz	wreg,f,c
 12538  017EA4  D7FE               	bra	u27297
 12539  017EA6  2FD4               	decfsz	??_main& (0+255),f,b
 12540  017EA8  D7FC               	bra	u27297
 12541  017EAA  2FD5               	decfsz	(??_main+1)& (0+255),f,b
 12542  017EAC  D7FA               	bra	u27297
 12543  017EAE  F000               	nop	
 12544                           
 12545                           ;main.c: 484: SYSTEM_Initialize();
 12546  017EB0  ECBF  F0C7         	call	_SYSTEM_Initialize	;wreg free
 12547                           
 12548                           ;main.c: 487: LATGbits.LATG0 = 0;
 12549  017EB4  907F               	bcf	3967,0,c	;volatile
 12550                           
 12551                           ;main.c: 488: LATGbits.LATG1 = 0;
 12552  017EB6  927F               	bcf	3967,1,c	;volatile
 12553                           
 12554                           ;main.c: 489: load_enable = 0;
 12555  017EB8  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 12556                           
 12557                           ;main.c: 492: ADCON2bits.ADCRS = 7;
 12558  017EBA  010F               	movlb	15	; () banked
 12559  017EBC  895A               	bsf	90,4,b	;volatile
 12560  017EBE  8B5A               	bsf	90,5,b	;volatile
 12561  017EC0  8D5A               	bsf	90,6,b	;volatile
 12562                           
 12563                           ; BSR set to: 15
 12564                           ;main.c: 493: ADCAP = 20;
 12565  017EC2  0E14               	movlw	20
 12566  017EC4  6F5D               	movwf	93,b	;volatile
 12567                           
 12568                           ; BSR set to: 15
 12569                           ;main.c: 496: TMR6_SetInterruptHandler(heartbeatTimerCallback);
 12570  017EC6  0E7C               	movlw	low _heartbeatTimerCallback
 12571  017EC8  0101               	movlb	1	; () banked
 12572  017ECA  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 12573  017ECC  0E8D               	movlw	high _heartbeatTimerCallback
 12574  017ECE  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12575  017ED0  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
 12576  017ED2  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12577  017ED4  ECD4  F0C9         	call	_TMR6_SetInterruptHandler	;wreg free
 12578                           
 12579                           ;main.c: 499: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
 12580  017ED8  0E30               	movlw	low _ADCPostProcessingCallback
 12581  017EDA  0101               	movlb	1	; () banked
 12582  017EDC  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 12583  017EDE  0E2F               	movlw	high _ADCPostProcessingCallback
 12584  017EE0  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 12585  017EE2  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
 12586  017EE4  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 12587  017EE6  ECF7  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 12588                           
 12589                           ;main.c: 502: TMR7_SetInterruptHandler(acquisitionTimerCallback);
 12590  017EEA  0E3A               	movlw	low _acquisitionTimerCallback
 12591  017EEC  0101               	movlb	1	; () banked
 12592  017EEE  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 12593  017EF0  0E93               	movlw	high _acquisitionTimerCallback
 12594  017EF2  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12595  017EF4  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
 12596  017EF6  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12597  017EF8  ECCD  F0C9         	call	_TMR7_SetInterruptHandler	;wreg free
 12598                           
 12599                           ;main.c: 505: INT0_SetInterruptHandler(dimmingOffTimeCallback);
 12600  017EFC  0ED2               	movlw	low _dimmingOffTimeCallback
 12601  017EFE  0101               	movlb	1	; () banked
 12602  017F00  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 12603  017F02  0E92               	movlw	high _dimmingOffTimeCallback
 12604  017F04  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12605  017F06  0E01               	movlw	low (_dimmingOffTimeCallback shr (0+16))
 12606  017F08  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12607  017F0A  ECE2  F0C9         	call	_INT0_SetInterruptHandler	;wreg free
 12608                           
 12609                           ;main.c: 508: TMR5_SetInterruptHandler(dimmingOnTimeCallback);
 12610  017F0E  0E0A               	movlw	low _dimmingOnTimeCallback
 12611  017F10  0101               	movlb	1	; () banked
 12612  017F12  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 12613  017F14  0E94               	movlw	high _dimmingOnTimeCallback
 12614  017F16  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12615  017F18  0E01               	movlw	low (_dimmingOnTimeCallback shr (0+16))
 12616  017F1A  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12617  017F1C  ECDB  F0C9         	call	_TMR5_SetInterruptHandler	;wreg free
 12618                           
 12619                           ;main.c: 511: TMR5_StopTimer();
 12620  017F20  EC33  F0CA         	call	_TMR5_StopTimer	;wreg free
 12621                           
 12622                           ;main.c: 512: PIE0bits.INT0IE = 0;
 12623  017F24  010E               	movlb	14	; () banked
 12624  017F26  9129               	bcf	41,0,b	;volatile
 12625                           
 12626                           ; BSR set to: 14
 12627                           ;main.c: 516: recoverSRAMMaxFromEEPROM();
 12628  017F28  EC8C  F0BC         	call	_recoverSRAMMaxFromEEPROM	;wreg free
 12629                           
 12630                           ;main.c: 519: (INTCONbits.GIEH = 1);
 12631  017F2C  8EF2               	bsf	intcon,7,c	;volatile
 12632                           
 12633                           ;main.c: 522: (INTCONbits.GIEL = 1);
 12634  017F2E  8CF2               	bsf	intcon,6,c	;volatile
 12635                           
 12636                           ;main.c: 525: terminal_clearTerminal();
 12637  017F30  ECB6  F0C9         	call	_terminal_clearTerminal	;wreg free
 12638                           
 12639                           ;main.c: 526: terminal_setCursorHome();
 12640  017F34  ECA6  F0C9         	call	_terminal_setCursorHome	;wreg free
 12641                           
 12642                           ;main.c: 527: terminal_textAttributesReset();
 12643  017F38  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 12644  017F3C                     
 12645                           ;main.c: 531: {
 12646                           ;main.c: 534: if (eusart2RxStringReady) {
 12647  017F3C  0100               	movlb	0	; () banked
 12648  017F3E  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 12649                           
 12650                           ; BSR set to: 0
 12651                           ;main.c: 536: terminal_ringBufferPull();
 12652  017F40  EC50  F0BA         	call	_terminal_ringBufferPull	;wreg free
 12653                           
 12654                           ;main.c: 538: }
 12655                           ;main.c: 541: saveSRAMMaxToEEPROM();
 12656  017F44  EC2F  F0B3         	call	_saveSRAMMaxToEEPROM	;wreg free
 12657  017F48  D7F9               	goto	l1070
 12658  017F4A                     __end_of_main:
 12659                           	opt stack 0
 12660                           tblptru	equ	0xFF8
 12661                           tblptrh	equ	0xFF7
 12662                           tblptrl	equ	0xFF6
 12663                           tablat	equ	0xFF5
 12664                           intcon	equ	0xFF2
 12665                           postinc0	equ	0xFEE
 12666                           wreg	equ	0xFE8
 12667                           postdec1	equ	0xFE5
 12668                           fsr1l	equ	0xFE1
 12669                           
 12670 ;; *************** function _terminal_setCursorHome *****************
 12671 ;; Defined at:
 12672 ;;		line 85 in file "ring_buffer_interface.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;		None
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;		None
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  1    wreg      void 
 12679 ;; Registers used:
 12680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12690 ;;Total ram usage:        0 bytes
 12691 ;; Hardware stack levels used:    1
 12692 ;; Hardware stack levels required when called:   16
 12693 ;; This function calls:
 12694 ;;		_printf
 12695 ;; This function is called by:
 12696 ;;		_main
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           	psect	text1
 12701  01934C                     __ptext1:
 12702                           	opt stack 0
 12703  01934C                     _terminal_setCursorHome:
 12704                           	opt stack 14
 12705                           
 12706                           ;ring_buffer_interface.c: 86: printf("\033[H");
 12707                           
 12708                           ;incstack = 0
 12709  01934C  0EB9               	movlw	low STR_3
 12710  01934E  0101               	movlb	1	; () banked
 12711  019350  6F82               	movwf	printf@f& (0+255),b
 12712  019352  0EFF               	movlw	high STR_3
 12713  019354  6F83               	movwf	(printf@f+1)& (0+255),b
 12714  019356  ECCF  F089         	call	_printf	;wreg free
 12715  01935A  0012               	return		;funcret
 12716  01935C                     __end_of_terminal_setCursorHome:
 12717                           	opt stack 0
 12718                           tblptru	equ	0xFF8
 12719                           tblptrh	equ	0xFF7
 12720                           tblptrl	equ	0xFF6
 12721                           tablat	equ	0xFF5
 12722                           intcon	equ	0xFF2
 12723                           postinc0	equ	0xFEE
 12724                           wreg	equ	0xFE8
 12725                           postdec1	equ	0xFE5
 12726                           fsr1l	equ	0xFE1
 12727                           
 12728 ;; *************** function _terminal_ringBufferPull *****************
 12729 ;; Defined at:
 12730 ;;		line 12 in file "ring_buffer_interface.c"
 12731 ;; Parameters:    Size  Location     Type
 12732 ;;		None
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;  index           2   77[BANK2 ] int 
 12735 ;;  index           2   79[BANK2 ] int 
 12736 ;;  charNumber      2   75[BANK2 ] int 
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      void 
 12739 ;; Registers used:
 12740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12747 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 12748 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12749 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
 12750 ;;Total ram usage:        9 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:   19
 12753 ;; This function calls:
 12754 ;;		_EUSART2_Read
 12755 ;;		_ringBufferLUT
 12756 ;;		_strlen
 12757 ;; This function is called by:
 12758 ;;		_main
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text2
 12763  0174A0                     __ptext2:
 12764                           	opt stack 0
 12765  0174A0                     _terminal_ringBufferPull:
 12766                           	opt stack 11
 12767                           
 12768                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
 12769                           
 12770                           ;incstack = 0
 12771  0174A0  C1DF  F2CE         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 12772  0174A4  0102               	movlb	2	; () banked
 12773  0174A6  6BCF               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 12774                           
 12775                           ; BSR set to: 2
 12776                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
 12777  0174A8  0E00               	movlw	0
 12778  0174AA  6FD3               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 12779  0174AC  0E00               	movlw	0
 12780  0174AE  6FD2               	movwf	terminal_ringBufferPull@index& (0+255),b
 12781  0174B0                     l20248:
 12782                           
 12783                           ; BSR set to: 2
 12784  0174B0  BFD3               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 12785  0174B2  D006               	goto	l1109
 12786  0174B4  51D3               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 12787  0174B6  E10F               	bnz	l20258
 12788  0174B8  0E40               	movlw	64
 12789  0174BA  5DD2               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 12790  0174BC  B0D8               	btfsc	status,0,c
 12791  0174BE  D00B               	goto	u27040
 12792  0174C0                     l1109:
 12793                           
 12794                           ; BSR set to: 2
 12795                           ;ring_buffer_interface.c: 19: line[index] = '\0';
 12796                           
 12797                           ; BSR set to: 2
 12798  0174C0  0E43               	movlw	low _line
 12799  0174C2  25D2               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 12800  0174C4  6ED9               	movwf	fsr2l,c
 12801  0174C6  0E02               	movlw	high _line
 12802  0174C8  21D3               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 12803  0174CA  6EDA               	movwf	fsr2h,c
 12804  0174CC  0E00               	movlw	0
 12805  0174CE  6EDF               	movwf	indf2,c
 12806                           
 12807                           ; BSR set to: 2
 12808  0174D0  4BD2               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 12809  0174D2  2BD3               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 12810  0174D4  D7ED               	goto	l20248
 12811  0174D6                     u27040:
 12812  0174D6                     l20258:
 12813                           
 12814                           ; BSR set to: 2
 12815                           ;ring_buffer_interface.c: 21: }
 12816                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
 12817  0174D6  0E00               	movlw	0
 12818  0174D8  6FD1               	movwf	(terminal_ringBufferPull@index_2527+1)& (0+255),b
 12819  0174DA  0E00               	movlw	0
 12820  0174DC  6FD0               	movwf	terminal_ringBufferPull@index_2527& (0+255),b
 12821  0174DE  D00F               	goto	l1111
 12822  0174E0                     
 12823                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
 12824                           
 12825                           ; BSR set to: 2
 12826  0174E0  EC0F  F0C6         	call	_EUSART2_Read	;wreg free
 12827  0174E4  0101               	movlb	1	; () banked
 12828  0174E6  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12829  0174E8  0E43               	movlw	low _line
 12830  0174EA  0102               	movlb	2	; () banked
 12831  0174EC  25D0               	addwf	terminal_ringBufferPull@index_2527& (0+255),w,b
 12832  0174EE  6ED9               	movwf	fsr2l,c
 12833  0174F0  0E02               	movlw	high _line
 12834  0174F2  21D1               	addwfc	(terminal_ringBufferPull@index_2527+1)& (0+255),w,b
 12835  0174F4  6EDA               	movwf	fsr2h,c
 12836  0174F6  C1B8  FFDF         	movff	??_terminal_ringBufferPull,indf2
 12837                           
 12838                           ; BSR set to: 2
 12839  0174FA  4BD0               	infsnz	terminal_ringBufferPull@index_2527& (0+255),f,b
 12840  0174FC  2BD1               	incf	(terminal_ringBufferPull@index_2527+1)& (0+255),f,b
 12841  0174FE                     l1111:
 12842                           
 12843                           ; BSR set to: 2
 12844                           
 12845                           ; BSR set to: 2
 12846  0174FE  51CE               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 12847  017500  5DD0               	subwf	terminal_ringBufferPull@index_2527& (0+255),w,b
 12848  017502  51D1               	movf	(terminal_ringBufferPull@index_2527+1)& (0+255),w,b
 12849  017504  0A80               	xorlw	128
 12850  017506  0101               	movlb	1	; () banked
 12851  017508  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12852  01750A  0102               	movlb	2	; () banked
 12853  01750C  51CF               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 12854  01750E  0A80               	xorlw	128
 12855  017510  0101               	movlb	1	; () banked
 12856  017512  59B8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 12857  017514  A0D8               	btfss	status,0,c
 12858  017516  D7E4               	goto	l1112
 12859                           
 12860                           ; BSR set to: 1
 12861                           ;ring_buffer_interface.c: 28: }
 12862                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
 12863  017518  C0FA  F1E0         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 12864                           
 12865                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
 12866                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
 12867  01751C  D017               	goto	l1114
 12868  01751E                     
 12869                           ; BSR set to: 1
 12870                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
 12871                           
 12872                           ; BSR set to: 1
 12873  01751E  0EFF               	movlw	255
 12874  017520  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12875  017522  0EFF               	movlw	255
 12876  017524  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 12877  017526  0E43               	movlw	low _line
 12878  017528  6F17               	movwf	strlen@s& (0+255),b
 12879  01752A  0E02               	movlw	high _line
 12880  01752C  6F18               	movwf	(strlen@s+1)& (0+255),b
 12881  01752E  EC84  F0C4         	call	_strlen	;wreg free
 12882  017532  0101               	movlb	1	; () banked
 12883  017534  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 12884  017536  2717               	addwf	?_strlen& (0+255),f,b
 12885  017538  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 12886  01753A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 12887  01753C  0E43               	movlw	low _line
 12888  01753E  2517               	addwf	?_strlen& (0+255),w,b
 12889  017540  6ED9               	movwf	fsr2l,c
 12890  017542  0E02               	movlw	high _line
 12891  017544  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 12892  017546  6EDA               	movwf	fsr2h,c
 12893  017548  0E00               	movlw	0
 12894  01754A  6EDF               	movwf	indf2,c
 12895  01754C                     l1114:
 12896                           
 12897                           ; BSR set to: 1
 12898  01754C  0EFF               	movlw	255
 12899  01754E  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12900  017550  0EFF               	movlw	255
 12901  017552  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 12902  017554  0E43               	movlw	low _line
 12903  017556  6F17               	movwf	strlen@s& (0+255),b
 12904  017558  0E02               	movlw	high _line
 12905  01755A  6F18               	movwf	(strlen@s+1)& (0+255),b
 12906  01755C  EC84  F0C4         	call	_strlen	;wreg free
 12907  017560  0101               	movlb	1	; () banked
 12908  017562  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 12909  017564  2717               	addwf	?_strlen& (0+255),f,b
 12910  017566  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 12911  017568  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 12912  01756A  0E43               	movlw	low _line
 12913  01756C  2517               	addwf	?_strlen& (0+255),w,b
 12914  01756E  6ED9               	movwf	fsr2l,c
 12915  017570  0E02               	movlw	high _line
 12916  017572  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 12917  017574  6EDA               	movwf	fsr2h,c
 12918  017576  0E0A               	movlw	10
 12919  017578  18DE               	xorwf	postinc2,w,c
 12920  01757A  B4D8               	btfsc	status,2,c
 12921  01757C  D7D0               	goto	l1115
 12922                           
 12923                           ; BSR set to: 1
 12924  01757E  0EFF               	movlw	255
 12925  017580  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 12926  017582  0EFF               	movlw	255
 12927  017584  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 12928  017586  0E43               	movlw	low _line
 12929  017588  6F17               	movwf	strlen@s& (0+255),b
 12930  01758A  0E02               	movlw	high _line
 12931  01758C  6F18               	movwf	(strlen@s+1)& (0+255),b
 12932  01758E  EC84  F0C4         	call	_strlen	;wreg free
 12933  017592  0101               	movlb	1	; () banked
 12934  017594  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 12935  017596  2717               	addwf	?_strlen& (0+255),f,b
 12936  017598  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 12937  01759A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 12938  01759C  0E43               	movlw	low _line
 12939  01759E  2517               	addwf	?_strlen& (0+255),w,b
 12940  0175A0  6ED9               	movwf	fsr2l,c
 12941  0175A2  0E02               	movlw	high _line
 12942  0175A4  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 12943  0175A6  6EDA               	movwf	fsr2h,c
 12944  0175A8  0E0D               	movlw	13
 12945  0175AA  18DE               	xorwf	postinc2,w,c
 12946  0175AC  B4D8               	btfsc	status,2,c
 12947  0175AE  D7B7               	goto	l1115
 12948                           
 12949                           ; BSR set to: 1
 12950                           ;ring_buffer_interface.c: 40: }
 12951                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
 12952  0175B0  0100               	movlb	0	; () banked
 12953  0175B2  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
 12957  0175B4  0E43               	movlw	low _line
 12958  0175B6  0101               	movlb	1	; () banked
 12959  0175B8  6FB4               	movwf	ringBufferLUT@line& (0+255),b
 12960  0175BA  0E02               	movlw	high _line
 12961  0175BC  6FB5               	movwf	(ringBufferLUT@line+1)& (0+255),b
 12962  0175BE  EC00  F080         	call	_ringBufferLUT	;wreg free
 12963  0175C2  0012               	return		;funcret
 12964  0175C4                     __end_of_terminal_ringBufferPull:
 12965                           	opt stack 0
 12966                           tblptru	equ	0xFF8
 12967                           tblptrh	equ	0xFF7
 12968                           tblptrl	equ	0xFF6
 12969                           tablat	equ	0xFF5
 12970                           intcon	equ	0xFF2
 12971                           postinc0	equ	0xFEE
 12972                           wreg	equ	0xFE8
 12973                           postdec1	equ	0xFE5
 12974                           fsr1l	equ	0xFE1
 12975                           indf2	equ	0xFDF
 12976                           postinc2	equ	0xFDE
 12977                           fsr2h	equ	0xFDA
 12978                           fsr2l	equ	0xFD9
 12979                           status	equ	0xFD8
 12980                           
 12981 ;; *************** function _ringBufferLUT *****************
 12982 ;; Defined at:
 12983 ;;		line 60 in file "ring_buffer_LUT.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;  line            2  180[BANK1 ] PTR unsigned char 
 12986 ;;		 -> line(64), 
 12987 ;; Auto vars:     Size  Location     Type
 12988 ;;  angle_degree    4   38[BANK2 ] PTR unsigned char 
 12989 ;;  index           2   69[BANK2 ] int 
 12990 ;;  channel_name   22   16[BANK2 ] unsigned char [22]
 12991 ;;  userID          2   73[BANK2 ] int 
 12992 ;;  max_voltage_    4   62[BANK2 ] int 
 12993 ;;  max_temp_pri    4   58[BANK2 ] int 
 12994 ;;  max_voltage_    4   54[BANK2 ] int 
 12995 ;;  max_voltage_    4   50[BANK2 ] int 
 12996 ;;  max_Power_pr    4   46[BANK2 ] int 
 12997 ;;  max_current_    4   42[BANK2 ] int 
 12998 ;;  arg_buff        3   66[BANK2 ] unsigned char [3]
 12999 ;;  percentage      2   71[BANK2 ] int 
 13000 ;; Return value:  Size  Location     Type
 13001 ;;                  1    wreg      void 
 13002 ;; Registers used:
 13003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13004 ;; Tracked objects:
 13005 ;;		On entry : 0/0
 13006 ;;		On exit  : 0/0
 13007 ;;		Unchanged: 0/0
 13008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13009 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13010 ;;      Locals:         0       0       0      59       0       0       0       0       0       0       0       0       
      +0       0       0
 13011 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13012 ;;      Totals:         0       0       4      59       0       0       0       0       0       0       0       0       
      +0       0       0
 13013 ;;Total ram usage:       63 bytes
 13014 ;; Hardware stack levels used:    1
 13015 ;; Hardware stack levels required when called:   18
 13016 ;; This function calls:
 13017 ;;		_TMR5_StopTimer
 13018 ;;		_TMR7_StopTimer
 13019 ;;		___fladd
 13020 ;;		___fldiv
 13021 ;;		___flmul
 13022 ;;		___flneg
 13023 ;;		___wmul
 13024 ;;		___xxtofl
 13025 ;;		_atoi
 13026 ;;		_getCauseOfResetString
 13027 ;;		_getDeviceID
 13028 ;;		_getDeviceIDString
 13029 ;;		_getMajorRevisionID
 13030 ;;		_getMinorRevisionID
 13031 ;;		_getUserID
 13032 ;;		_printf
 13033 ;;		_readDoubleFromEEPROM
 13034 ;;		_strcmp
 13035 ;;		_strcpy
 13036 ;;		_strstr
 13037 ;;		_terminal_printNewline
 13038 ;;		_terminal_textAttributes
 13039 ;;		_terminal_textAttributesReset
 13040 ;;		_writeDoubleToEEPROM
 13041 ;; This function is called by:
 13042 ;;		_terminal_ringBufferPull
 13043 ;; This function uses a non-reentrant model
 13044 ;;
 13045                           
 13046                           	psect	text3
 13047  010000                     __ptext3:
 13048                           	opt stack 0
 13049  010000                     _ringBufferLUT:
 13050                           	opt stack 11
 13051                           
 13052                           ;ring_buffer_LUT.c: 66: if((0 == strcmp(line, "Reset"))) {
 13053                           
 13054                           ;incstack = 0
 13055  010000  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13056  010004  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13057  010008  0EF8               	movlw	low (STR_154+10)
 13058  01000A  0101               	movlb	1	; () banked
 13059  01000C  6F19               	movwf	strcmp@s2& (0+255),b
 13060  01000E  0EFD               	movlw	high (STR_154+10)
 13061  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13062  010012  EC02  F0C5         	call	_strcmp	;wreg free
 13063  010016  0101               	movlb	1	; () banked
 13064  010018  5117               	movf	?_strcmp& (0+255),w,b
 13065  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13066  01001C  A4D8               	btfss	status,2,c
 13067  01001E  D00F               	goto	l1290
 13068                           
 13069                           ; BSR set to: 1
 13070                           ;ring_buffer_LUT.c: 69: printf("\033[2J");
 13071  010020  0EB0               	movlw	low STR_2
 13072  010022  6F82               	movwf	printf@f& (0+255),b
 13073  010024  0EFF               	movlw	high STR_2
 13074  010026  6F83               	movwf	(printf@f+1)& (0+255),b
 13075  010028  ECCF  F089         	call	_printf	;wreg free
 13076                           
 13077                           ;ring_buffer_LUT.c: 72: printf("\033[H");
 13078  01002C  0EB9               	movlw	low STR_3
 13079  01002E  0101               	movlb	1	; () banked
 13080  010030  6F82               	movwf	printf@f& (0+255),b
 13081  010032  0EFF               	movlw	high STR_3
 13082  010034  6F83               	movwf	(printf@f+1)& (0+255),b
 13083  010036  ECCF  F089         	call	_printf	;wreg free
 13084  01003A  00FF               	reset		;# 
 13085                           
 13086                           ;ring_buffer_LUT.c: 77: }
 13087  01003C  0012               	return	
 13088  01003E                     l1290:
 13089                           
 13090                           ;ring_buffer_LUT.c: 80: else if((0 == strcmp(line, "Clear"))) {
 13091  01003E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13092  010042  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13093  010046  0EA0               	movlw	low STR_44
 13094  010048  0101               	movlb	1	; () banked
 13095  01004A  6F19               	movwf	strcmp@s2& (0+255),b
 13096  01004C  0EFF               	movlw	high STR_44
 13097  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13098  010050  EC02  F0C5         	call	_strcmp	;wreg free
 13099  010054  0101               	movlb	1	; () banked
 13100  010056  5117               	movf	?_strcmp& (0+255),w,b
 13101  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13102  01005A  A4D8               	btfss	status,2,c
 13103  01005C  D00E               	goto	l1292
 13104                           
 13105                           ; BSR set to: 1
 13106                           ;ring_buffer_LUT.c: 83: printf("\033[2J");
 13107  01005E  0EB0               	movlw	low STR_2
 13108  010060  6F82               	movwf	printf@f& (0+255),b
 13109  010062  0EFF               	movlw	high STR_2
 13110  010064  6F83               	movwf	(printf@f+1)& (0+255),b
 13111  010066  ECCF  F089         	call	_printf	;wreg free
 13112                           
 13113                           ;ring_buffer_LUT.c: 86: printf("\033[H");
 13114  01006A  0EB9               	movlw	low STR_3
 13115  01006C  0101               	movlb	1	; () banked
 13116  01006E  6F82               	movwf	printf@f& (0+255),b
 13117  010070  0EFF               	movlw	high STR_3
 13118  010072  6F83               	movwf	(printf@f+1)& (0+255),b
 13119  010074  ECCF  F089         	call	_printf	;wreg free
 13120                           
 13121                           ;ring_buffer_LUT.c: 88: }
 13122  010078  0012               	return	
 13123  01007A                     l1292:
 13124                           
 13125                           ;ring_buffer_LUT.c: 91: else if((0 == strcmp(line, "Cause of Reset?"))) {
 13126  01007A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13127  01007E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13128  010082  0E2E               	movlw	low STR_47
 13129  010084  0101               	movlb	1	; () banked
 13130  010086  6F19               	movwf	strcmp@s2& (0+255),b
 13131  010088  0EFE               	movlw	high STR_47
 13132  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13133  01008C  EC02  F0C5         	call	_strcmp	;wreg free
 13134  010090  0101               	movlb	1	; () banked
 13135  010092  5117               	movf	?_strcmp& (0+255),w,b
 13136  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13137  010096  A4D8               	btfss	status,2,c
 13138  010098  D019               	goto	l1294
 13139                           
 13140                           ; BSR set to: 1
 13141                           ;ring_buffer_LUT.c: 93: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13142  01009A  0E00               	movlw	0
 13143  01009C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13144  01009E  0E00               	movlw	0
 13145  0100A0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13146  0100A2  0E02               	movlw	2
 13147  0100A4  EC1A  F0A1         	call	_terminal_textAttributes
 13148                           
 13149                           ;ring_buffer_LUT.c: 96: printf("The cause of the most recent device reset was: %s\n\r",
 13150                           ;ring_buffer_LUT.c: 97: getCauseOfResetString(reset_cause));
 13151  0100A8  0E18               	movlw	low STR_48
 13152  0100AA  0101               	movlb	1	; () banked
 13153  0100AC  6F82               	movwf	printf@f& (0+255),b
 13154  0100AE  0EF7               	movlw	high STR_48
 13155  0100B0  6F83               	movwf	(printf@f+1)& (0+255),b
 13156  0100B2  0102               	movlb	2	; () banked
 13157  0100B4  51FA               	movf	_reset_cause& (0+255),w,b
 13158  0100B6  ECF1  F0C7         	call	_getCauseOfResetString
 13159  0100BA  C117  F184         	movff	?_getCauseOfResetString,?_printf+2
 13160  0100BE  C118  F185         	movff	?_getCauseOfResetString+1,?_printf+3
 13161  0100C2  ECCF  F089         	call	_printf	;wreg free
 13162                           
 13163                           ;ring_buffer_LUT.c: 99: terminal_textAttributesReset();
 13164  0100C6  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13165                           
 13166                           ;ring_buffer_LUT.c: 101: }
 13167  0100CA  0012               	return	
 13168  0100CC                     l1294:
 13169                           
 13170                           ;ring_buffer_LUT.c: 104: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN
      +                          "))) {
 13171  0100CC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13172  0100D0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13173  0100D4  0E9A               	movlw	low STR_49
 13174  0100D6  0101               	movlb	1	; () banked
 13175  0100D8  6F19               	movwf	strcmp@s2& (0+255),b
 13176  0100DA  0EFF               	movlw	high STR_49
 13177  0100DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13178  0100DE  EC02  F0C5         	call	_strcmp	;wreg free
 13179  0100E2  0101               	movlb	1	; () banked
 13180  0100E4  5117               	movf	?_strcmp& (0+255),w,b
 13181  0100E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13182  0100E8  B4D8               	btfsc	status,2,c
 13183  0100EA  D00F               	goto	u26370
 13184                           
 13185                           ; BSR set to: 1
 13186  0100EC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13187  0100F0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13188  0100F4  0EB5               	movlw	low STR_50
 13189  0100F6  6F19               	movwf	strcmp@s2& (0+255),b
 13190  0100F8  0EFF               	movlw	high STR_50
 13191  0100FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13192  0100FC  EC02  F0C5         	call	_strcmp	;wreg free
 13193  010100  0101               	movlb	1	; () banked
 13194  010102  5117               	movf	?_strcmp& (0+255),w,b
 13195  010104  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13196  010106  A4D8               	btfss	status,2,c
 13197  010108  D018               	goto	l1296
 13198  01010A                     u26370:
 13199                           
 13200                           ; BSR set to: 1
 13201                           ;ring_buffer_LUT.c: 106: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13202                           
 13203                           ; BSR set to: 1
 13204  01010A  0E00               	movlw	0
 13205  01010C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13206  01010E  0E00               	movlw	0
 13207  010110  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13208  010112  0E02               	movlw	2
 13209  010114  EC1A  F0A1         	call	_terminal_textAttributes
 13210                           
 13211                           ;ring_buffer_LUT.c: 107: printf("AC Power Meter\n\r");
 13212  010118  0E88               	movlw	low STR_51
 13213  01011A  0101               	movlb	1	; () banked
 13214  01011C  6F82               	movwf	printf@f& (0+255),b
 13215  01011E  0EFD               	movlw	high STR_51
 13216  010120  6F83               	movwf	(printf@f+1)& (0+255),b
 13217  010122  ECCF  F089         	call	_printf	;wreg free
 13218                           
 13219                           ;ring_buffer_LUT.c: 108: printf("Marquette University ELEN 3035 Final Project\n\r");
 13220  010126  0E16               	movlw	low STR_52
 13221  010128  0101               	movlb	1	; () banked
 13222  01012A  6F82               	movwf	printf@f& (0+255),b
 13223  01012C  0EF8               	movlw	high STR_52
 13224  01012E  6F83               	movwf	(printf@f+1)& (0+255),b
 13225  010130  ECCF  F089         	call	_printf	;wreg free
 13226                           
 13227                           ;ring_buffer_LUT.c: 109: terminal_textAttributesReset();
 13228  010134  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13229                           
 13230                           ;ring_buffer_LUT.c: 111: }
 13231  010138  0012               	return	
 13232  01013A                     l1296:
 13233                           
 13234                           ;ring_buffer_LUT.c: 114: else if((0 == strcmp(line, "Device ID?"))) {
 13235  01013A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13236  01013E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13237  010142  0E48               	movlw	low STR_53
 13238  010144  0101               	movlb	1	; () banked
 13239  010146  6F19               	movwf	strcmp@s2& (0+255),b
 13240  010148  0EFF               	movlw	high STR_53
 13241  01014A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13242  01014C  EC02  F0C5         	call	_strcmp	;wreg free
 13243  010150  0101               	movlb	1	; () banked
 13244  010152  5117               	movf	?_strcmp& (0+255),w,b
 13245  010154  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13246  010156  A4D8               	btfss	status,2,c
 13247  010158  D023               	goto	l1300
 13248                           
 13249                           ; BSR set to: 1
 13250                           ;ring_buffer_LUT.c: 116: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13251  01015A  0E00               	movlw	0
 13252  01015C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13253  01015E  0E00               	movlw	0
 13254  010160  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13255  010162  0E02               	movlw	2
 13256  010164  EC1A  F0A1         	call	_terminal_textAttributes
 13257                           
 13258                           ;ring_buffer_LUT.c: 119: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 13259                           ;ring_buffer_LUT.c: 120: "part number of %s\n\r",
 13260                           ;ring_buffer_LUT.c: 121: getDeviceID(),
 13261                           ;ring_buffer_LUT.c: 122: getDeviceIDString(getDeviceID()));
 13262  010168  0E53               	movlw	low STR_54
 13263  01016A  0101               	movlb	1	; () banked
 13264  01016C  6F82               	movwf	printf@f& (0+255),b
 13265  01016E  0EF3               	movlw	high STR_54
 13266  010170  6F83               	movwf	(printf@f+1)& (0+255),b
 13267  010172  ECF7  F0C8         	call	_getDeviceID	;wreg free
 13268  010176  C122  F184         	movff	?_getDeviceID,?_printf+2
 13269  01017A  C123  F185         	movff	?_getDeviceID+1,?_printf+3
 13270  01017E  ECF7  F0C8         	call	_getDeviceID	;wreg free
 13271  010182  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 13272  010186  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 13273  01018A  EC24  F0C4         	call	_getDeviceIDString	;wreg free
 13274  01018E  C124  F186         	movff	?_getDeviceIDString,?_printf+4
 13275  010192  C125  F187         	movff	?_getDeviceIDString+1,?_printf+5
 13276  010196  ECCF  F089         	call	_printf	;wreg free
 13277                           
 13278                           ;ring_buffer_LUT.c: 124: terminal_textAttributesReset();
 13279  01019A  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13280                           
 13281                           ;ring_buffer_LUT.c: 126: }
 13282  01019E  0012               	return	
 13283  0101A0                     l1300:
 13284                           
 13285                           ;ring_buffer_LUT.c: 129: else if((0 == strcmp(line, "Revision ID?"))) {
 13286  0101A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13287  0101A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13288  0101A8  0E09               	movlw	low STR_55
 13289  0101AA  0101               	movlb	1	; () banked
 13290  0101AC  6F19               	movwf	strcmp@s2& (0+255),b
 13291  0101AE  0EFF               	movlw	high STR_55
 13292  0101B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13293  0101B2  EC02  F0C5         	call	_strcmp	;wreg free
 13294  0101B6  0101               	movlb	1	; () banked
 13295  0101B8  5117               	movf	?_strcmp& (0+255),w,b
 13296  0101BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13297  0101BC  A4D8               	btfss	status,2,c
 13298  0101BE  D022               	goto	l1302
 13299                           
 13300                           ; BSR set to: 1
 13301                           ;ring_buffer_LUT.c: 131: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13302  0101C0  0E00               	movlw	0
 13303  0101C2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13304  0101C4  0E00               	movlw	0
 13305  0101C6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13306  0101C8  0E02               	movlw	2
 13307  0101CA  EC1A  F0A1         	call	_terminal_textAttributes
 13308                           
 13309                           ;ring_buffer_LUT.c: 134: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 13310                           ;ring_buffer_LUT.c: 135: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 13311  0101CE  0EEE               	movlw	low STR_56
 13312  0101D0  0101               	movlb	1	; () banked
 13313  0101D2  6F82               	movwf	printf@f& (0+255),b
 13314  0101D4  0EF4               	movlw	high STR_56
 13315  0101D6  6F83               	movwf	(printf@f+1)& (0+255),b
 13316  0101D8  ECFD  F0C6         	call	_getMajorRevisionID	;wreg free
 13317  0101DC  0101               	movlb	1	; () banked
 13318  0101DE  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 13319  0101E0  0E41               	movlw	65
 13320  0101E2  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 13321  0101E4  6F84               	movwf	(?_printf+2)& (0+255),b
 13322  0101E6  6B85               	clrf	(?_printf+3)& (0+255),b
 13323  0101E8  0E00               	movlw	0
 13324  0101EA  2385               	addwfc	(?_printf+3)& (0+255),f,b
 13325  0101EC  EC89  F0C8         	call	_getMinorRevisionID	;wreg free
 13326  0101F0  0101               	movlb	1	; () banked
 13327  0101F2  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 13328  0101F4  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 13329  0101F6  6F86               	movwf	(?_printf+4)& (0+255),b
 13330  0101F8  6B87               	clrf	(?_printf+5)& (0+255),b
 13331  0101FA  ECCF  F089         	call	_printf	;wreg free
 13332                           
 13333                           ;ring_buffer_LUT.c: 137: terminal_textAttributesReset();
 13334  0101FE  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13335                           
 13336                           ;ring_buffer_LUT.c: 139: }
 13337  010202  0012               	return	
 13338  010204                     l1302:
 13339                           
 13340                           ;ring_buffer_LUT.c: 142: else if((0 == strcmp(line, "User IDs?"))) {
 13341  010204  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13342  010208  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13343  01020C  0E69               	movlw	low STR_57
 13344  01020E  0101               	movlb	1	; () banked
 13345  010210  6F19               	movwf	strcmp@s2& (0+255),b
 13346  010212  0EFF               	movlw	high STR_57
 13347  010214  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13348  010216  EC02  F0C5         	call	_strcmp	;wreg free
 13349  01021A  0101               	movlb	1	; () banked
 13350  01021C  5117               	movf	?_strcmp& (0+255),w,b
 13351  01021E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13352  010220  A4D8               	btfss	status,2,c
 13353  010222  D03E               	goto	l1304
 13354                           
 13355                           ; BSR set to: 1
 13356                           ;ring_buffer_LUT.c: 144: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13357  010224  0E00               	movlw	0
 13358  010226  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13359  010228  0E00               	movlw	0
 13360  01022A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13361  01022C  0E02               	movlw	2
 13362  01022E  EC1A  F0A1         	call	_terminal_textAttributes
 13363                           
 13364                           ;ring_buffer_LUT.c: 146: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 13365  010232  0E31               	movlw	low STR_58
 13366  010234  0101               	movlb	1	; () banked
 13367  010236  6F82               	movwf	printf@f& (0+255),b
 13368  010238  0EF4               	movlw	high STR_58
 13369  01023A  6F83               	movwf	(printf@f+1)& (0+255),b
 13370  01023C  ECCF  F089         	call	_printf	;wreg free
 13371                           
 13372                           ;ring_buffer_LUT.c: 149: for (int userID = 0; userID <= 7; userID++) {
 13373  010240  0E00               	movlw	0
 13374  010242  0102               	movlb	2	; () banked
 13375  010244  6FCD               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 13376  010246  0E00               	movlw	0
 13377  010248  6FCC               	movwf	ringBufferLUT@userID& (0+255),b
 13378  01024A                     l19866:
 13379                           
 13380                           ; BSR set to: 2
 13381  01024A  BFCD               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 13382  01024C  D006               	goto	l1305
 13383  01024E  51CD               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 13384  010250  E124               	bnz	l19876
 13385  010252  0E08               	movlw	8
 13386  010254  5DCC               	subwf	ringBufferLUT@userID& (0+255),w,b
 13387  010256  B0D8               	btfsc	status,0,c
 13388  010258  D020               	goto	u26420
 13389  01025A                     l1305:
 13390                           
 13391                           ; BSR set to: 2
 13392                           ;ring_buffer_LUT.c: 151: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 13393                           ;ring_buffer_LUT.c: 152: userID,
 13394                           ;ring_buffer_LUT.c: 153: (2 * userID),
 13395                           ;ring_buffer_LUT.c: 154: getUserID(userID));
 13396                           
 13397                           ; BSR set to: 2
 13398  01025A  0E42               	movlw	low STR_59
 13399  01025C  0101               	movlb	1	; () banked
 13400  01025E  6F82               	movwf	printf@f& (0+255),b
 13401  010260  0EF6               	movlw	high STR_59
 13402  010262  6F83               	movwf	(printf@f+1)& (0+255),b
 13403  010264  C2CC  F184         	movff	ringBufferLUT@userID,?_printf+2
 13404  010268  C2CD  F185         	movff	ringBufferLUT@userID+1,?_printf+3
 13405  01026C  90D8               	bcf	status,0,c
 13406  01026E  0102               	movlb	2	; () banked
 13407  010270  35CC               	rlcf	ringBufferLUT@userID& (0+255),w,b
 13408  010272  0101               	movlb	1	; () banked
 13409  010274  6F86               	movwf	(?_printf+4)& (0+255),b
 13410  010276  0102               	movlb	2	; () banked
 13411  010278  35CD               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 13412  01027A  0101               	movlb	1	; () banked
 13413  01027C  6F87               	movwf	(?_printf+5)& (0+255),b
 13414  01027E  0102               	movlb	2	; () banked
 13415  010280  51CC               	movf	ringBufferLUT@userID& (0+255),w,b
 13416  010282  EC7B  F0C6         	call	_getUserID
 13417  010286  C122  F188         	movff	?_getUserID,?_printf+6
 13418  01028A  C123  F189         	movff	?_getUserID+1,?_printf+7
 13419  01028E  ECCF  F089         	call	_printf	;wreg free
 13420  010292  0102               	movlb	2	; () banked
 13421  010294  4BCC               	infsnz	ringBufferLUT@userID& (0+255),f,b
 13422  010296  2BCD               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 13423  010298  D7D8               	goto	l19866
 13424  01029A                     u26420:
 13425  01029A                     l19876:
 13426                           
 13427                           ; BSR set to: 2
 13428                           ;ring_buffer_LUT.c: 156: }
 13429                           ;ring_buffer_LUT.c: 158: terminal_textAttributesReset();
 13430  01029A  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13431                           
 13432                           ;ring_buffer_LUT.c: 160: }
 13433  01029E  0012               	return	
 13434  0102A0                     l1304:
 13435                           
 13436                           ;ring_buffer_LUT.c: 163: else if((0 == strcmp(line, "ADC Error?"))) {
 13437  0102A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13438  0102A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13439  0102A8  0E5E               	movlw	low STR_60
 13440  0102AA  0101               	movlb	1	; () banked
 13441  0102AC  6F19               	movwf	strcmp@s2& (0+255),b
 13442  0102AE  0EFF               	movlw	high STR_60
 13443  0102B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13444  0102B2  EC02  F0C5         	call	_strcmp	;wreg free
 13445  0102B6  0101               	movlb	1	; () banked
 13446  0102B8  5117               	movf	?_strcmp& (0+255),w,b
 13447  0102BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13448  0102BC  A4D8               	btfss	status,2,c
 13449  0102BE  D0A4               	goto	l1308
 13450                           
 13451                           ; BSR set to: 1
 13452                           ;ring_buffer_LUT.c: 165: if (adc_error_flag) {
 13453  0102C0  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 13454  0102C2  D090               	goto	l1309
 13455                           
 13456                           ; BSR set to: 1
 13457                           ;ring_buffer_LUT.c: 167: terminal_textAttributes(RED, BLACK, NORMAL);
 13458  0102C4  0E00               	movlw	0
 13459  0102C6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13460  0102C8  0E00               	movlw	0
 13461  0102CA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13462  0102CC  0E01               	movlw	1
 13463  0102CE  EC1A  F0A1         	call	_terminal_textAttributes
 13464                           
 13465                           ;ring_buffer_LUT.c: 170: current_adc_channel = ADPCH;
 13466  0102D2  CF5F F23F          	movff	3935,_current_adc_channel	;volatile
 13467                           
 13468                           ;ring_buffer_LUT.c: 173: char channel_name[22];
 13469                           ;ring_buffer_LUT.c: 175: switch (current_adc_channel) {
 13470  0102D6  D060               	goto	l1310
 13471  0102D8                     
 13472                           ;ring_buffer_LUT.c: 178: strcpy(channel_name, "ISNS");
 13473  0102D8  0E93               	movlw	low ringBufferLUT@channel_name
 13474  0102DA  0101               	movlb	1	; () banked
 13475  0102DC  6F17               	movwf	strcpy@to& (0+255),b
 13476  0102DE  0E02               	movlw	high ringBufferLUT@channel_name
 13477  0102E0  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13478  0102E2  0EA6               	movlw	low STR_61
 13479  0102E4  6F19               	movwf	strcpy@from& (0+255),b
 13480  0102E6  0EFF               	movlw	high STR_61
 13481  0102E8  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13482  0102EA  EC55  F0C7         	call	_strcpy	;wreg free
 13483                           
 13484                           ;ring_buffer_LUT.c: 179: break;
 13485  0102EE  D06C               	goto	l1312
 13486  0102F0                     
 13487                           ;ring_buffer_LUT.c: 182: strcpy(channel_name, "POS12");
 13488  0102F0  0E93               	movlw	low ringBufferLUT@channel_name
 13489  0102F2  0101               	movlb	1	; () banked
 13490  0102F4  6F17               	movwf	strcpy@to& (0+255),b
 13491  0102F6  0E02               	movlw	high ringBufferLUT@channel_name
 13492  0102F8  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13493  0102FA  0E94               	movlw	low STR_62
 13494  0102FC  6F19               	movwf	strcpy@from& (0+255),b
 13495  0102FE  0EFF               	movlw	high STR_62
 13496  010300  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13497  010302  EC55  F0C7         	call	_strcpy	;wreg free
 13498                           
 13499                           ;ring_buffer_LUT.c: 183: break;
 13500  010306  D060               	goto	l1312
 13501  010308                     
 13502                           ;ring_buffer_LUT.c: 186: strcpy(channel_name, "POS3P3");
 13503  010308  0E93               	movlw	low ringBufferLUT@channel_name
 13504  01030A  0101               	movlb	1	; () banked
 13505  01030C  6F17               	movwf	strcpy@to& (0+255),b
 13506  01030E  0E02               	movlw	high ringBufferLUT@channel_name
 13507  010310  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13508  010312  0E8D               	movlw	low STR_63
 13509  010314  6F19               	movwf	strcpy@from& (0+255),b
 13510  010316  0EFF               	movlw	high STR_63
 13511  010318  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13512  01031A  EC55  F0C7         	call	_strcpy	;wreg free
 13513                           
 13514                           ;ring_buffer_LUT.c: 187: break;
 13515  01031E  D054               	goto	l1312
 13516  010320                     
 13517                           ;ring_buffer_LUT.c: 190: strcpy(channel_name, "Internal AVSS");
 13518  010320  0E93               	movlw	low ringBufferLUT@channel_name
 13519  010322  0101               	movlb	1	; () banked
 13520  010324  6F17               	movwf	strcpy@to& (0+255),b
 13521  010326  0E02               	movlw	high ringBufferLUT@channel_name
 13522  010328  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13523  01032A  0EE0               	movlw	low STR_64
 13524  01032C  6F19               	movwf	strcpy@from& (0+255),b
 13525  01032E  0EFE               	movlw	high STR_64
 13526  010330  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13527  010332  EC55  F0C7         	call	_strcpy	;wreg free
 13528                           
 13529                           ;ring_buffer_LUT.c: 191: break;
 13530  010336  D048               	goto	l1312
 13531  010338                     
 13532                           ;ring_buffer_LUT.c: 194: strcpy(channel_name, "Internal Temp");
 13533  010338  0E93               	movlw	low ringBufferLUT@channel_name
 13534  01033A  0101               	movlb	1	; () banked
 13535  01033C  6F17               	movwf	strcpy@to& (0+255),b
 13536  01033E  0E02               	movlw	high ringBufferLUT@channel_name
 13537  010340  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13538  010342  0EEE               	movlw	low STR_65
 13539  010344  6F19               	movwf	strcpy@from& (0+255),b
 13540  010346  0EFE               	movlw	high STR_65
 13541  010348  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13542  01034A  EC55  F0C7         	call	_strcpy	;wreg free
 13543                           
 13544                           ;ring_buffer_LUT.c: 195: break;
 13545  01034E  D03C               	goto	l1312
 13546  010350                     
 13547                           ;ring_buffer_LUT.c: 198: strcpy(channel_name, "Internal DAC1");
 13548  010350  0E93               	movlw	low ringBufferLUT@channel_name
 13549  010352  0101               	movlb	1	; () banked
 13550  010354  6F17               	movwf	strcpy@to& (0+255),b
 13551  010356  0E02               	movlw	high ringBufferLUT@channel_name
 13552  010358  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13553  01035A  0E9A               	movlw	low STR_66
 13554  01035C  6F19               	movwf	strcpy@from& (0+255),b
 13555  01035E  0EFE               	movlw	high STR_66
 13556  010360  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13557  010362  EC55  F0C7         	call	_strcpy	;wreg free
 13558                           
 13559                           ;ring_buffer_LUT.c: 199: break;
 13560  010366  D030               	goto	l1312
 13561  010368                     
 13562                           ;ring_buffer_LUT.c: 202: strcpy(channel_name, "Internal FVR Buffer 1");
 13563  010368  0E93               	movlw	low ringBufferLUT@channel_name
 13564  01036A  0101               	movlb	1	; () banked
 13565  01036C  6F17               	movwf	strcpy@to& (0+255),b
 13566  01036E  0E02               	movlw	high ringBufferLUT@channel_name
 13567  010370  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13568  010372  0EC1               	movlw	low STR_67
 13569  010374  6F19               	movwf	strcpy@from& (0+255),b
 13570  010376  0EFC               	movlw	high STR_67
 13571  010378  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13572  01037A  EC55  F0C7         	call	_strcpy	;wreg free
 13573                           
 13574                           ;ring_buffer_LUT.c: 203: break;
 13575  01037E  D024               	goto	l1312
 13576  010380                     
 13577                           ;ring_buffer_LUT.c: 206: strcpy(channel_name, "Undefined");
 13578  010380  0E93               	movlw	low ringBufferLUT@channel_name
 13579  010382  0101               	movlb	1	; () banked
 13580  010384  6F17               	movwf	strcpy@to& (0+255),b
 13581  010386  0E02               	movlw	high ringBufferLUT@channel_name
 13582  010388  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13583  01038A  0E73               	movlw	low STR_68
 13584  01038C  6F19               	movwf	strcpy@from& (0+255),b
 13585  01038E  0EFF               	movlw	high STR_68
 13586  010390  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13587  010392  EC55  F0C7         	call	_strcpy	;wreg free
 13588                           
 13589                           ;ring_buffer_LUT.c: 209: }
 13590                           
 13591                           ;ring_buffer_LUT.c: 207: break;
 13592  010396  D018               	goto	l1312
 13593  010398                     l1310:
 13594  010398  0102               	movlb	2	; () banked
 13595  01039A  513F               	movf	_current_adc_channel& (0+255),w,b
 13596                           
 13597                           ; Switch size 1, requested type "space"
 13598                           ; Number of cases is 7, Range of values is 0 to 63
 13599                           ; switch strategies available:
 13600                           ; Name         Instructions Cycles
 13601                           ; simple_byte           22    12 (average)
 13602                           ;	Chosen strategy is simple_byte
 13603  01039C  0A00               	xorlw	0	; case 0
 13604  01039E  B4D8               	btfsc	status,2,c
 13605  0103A0  D79B               	goto	l1311
 13606  0103A2  0A04               	xorlw	4	; case 4
 13607  0103A4  B4D8               	btfsc	status,2,c
 13608  0103A6  D7A4               	goto	l1313
 13609  0103A8  0A26               	xorlw	38	; case 34
 13610  0103AA  B4D8               	btfsc	status,2,c
 13611  0103AC  D7AD               	goto	l1314
 13612  0103AE  0A1E               	xorlw	30	; case 60
 13613  0103B0  B4D8               	btfsc	status,2,c
 13614  0103B2  D7B6               	goto	l1315
 13615  0103B4  0A01               	xorlw	1	; case 61
 13616  0103B6  B4D8               	btfsc	status,2,c
 13617  0103B8  D7BF               	goto	l1316
 13618  0103BA  0A03               	xorlw	3	; case 62
 13619  0103BC  B4D8               	btfsc	status,2,c
 13620  0103BE  D7C8               	goto	l1317
 13621  0103C0  0A01               	xorlw	1	; case 63
 13622  0103C2  B4D8               	btfsc	status,2,c
 13623  0103C4  D7D1               	goto	l1318
 13624  0103C6  D7DC               	goto	l1319
 13625  0103C8                     l1312:
 13626                           
 13627                           ;ring_buffer_LUT.c: 212: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
 13628                           
 13629                           ; BSR set to: 2
 13630  0103C8  0EE6               	movlw	low STR_69
 13631  0103CA  0101               	movlb	1	; () banked
 13632  0103CC  6F82               	movwf	printf@f& (0+255),b
 13633  0103CE  0EF7               	movlw	high STR_69
 13634  0103D0  6F83               	movwf	(printf@f+1)& (0+255),b
 13635  0103D2  0E93               	movlw	low ringBufferLUT@channel_name
 13636  0103D4  6F84               	movwf	(?_printf+2)& (0+255),b
 13637  0103D6  0E02               	movlw	high ringBufferLUT@channel_name
 13638  0103D8  6F85               	movwf	(?_printf+3)& (0+255),b
 13639  0103DA  ECCF  F089         	call	_printf	;wreg free
 13640                           
 13641                           ;ring_buffer_LUT.c: 213: terminal_textAttributesReset();
 13642  0103DE  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13643                           
 13644                           ;ring_buffer_LUT.c: 215: }
 13645  0103E2  0012               	return	
 13646  0103E4                     l1309:
 13647                           
 13648                           ;ring_buffer_LUT.c: 217: else {
 13649                           ;ring_buffer_LUT.c: 219: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13650  0103E4  0E00               	movlw	0
 13651  0103E6  0101               	movlb	1	; () banked
 13652  0103E8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13653  0103EA  0E00               	movlw	0
 13654  0103EC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13655  0103EE  0E02               	movlw	2
 13656  0103F0  EC1A  F0A1         	call	_terminal_textAttributes
 13657                           
 13658                           ;ring_buffer_LUT.c: 220: printf("No ADC Error detected\n\r");
 13659  0103F4  0E93               	movlw	low STR_70
 13660  0103F6  0101               	movlb	1	; () banked
 13661  0103F8  6F82               	movwf	printf@f& (0+255),b
 13662  0103FA  0EFC               	movlw	high STR_70
 13663  0103FC  6F83               	movwf	(printf@f+1)& (0+255),b
 13664  0103FE  ECCF  F089         	call	_printf	;wreg free
 13665                           
 13666                           ;ring_buffer_LUT.c: 221: terminal_textAttributesReset();
 13667  010402  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13668                           
 13669                           ;ring_buffer_LUT.c: 223: }
 13670                           ;ring_buffer_LUT.c: 225: }
 13671  010406  0012               	return	
 13672  010408                     l1308:
 13673                           
 13674                           ;ring_buffer_LUT.c: 228: else if((0 == strcmp(line, "Clear ADC Error"))) {
 13675  010408  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13676  01040C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13677  010410  0E4E               	movlw	low STR_71
 13678  010412  0101               	movlb	1	; () banked
 13679  010414  6F19               	movwf	strcmp@s2& (0+255),b
 13680  010416  0EFE               	movlw	high STR_71
 13681  010418  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13682  01041A  EC02  F0C5         	call	_strcmp	;wreg free
 13683  01041E  0101               	movlb	1	; () banked
 13684  010420  5117               	movf	?_strcmp& (0+255),w,b
 13685  010422  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13686  010424  A4D8               	btfss	status,2,c
 13687  010426  D018               	goto	l1322
 13688                           
 13689                           ; BSR set to: 1
 13690                           ;ring_buffer_LUT.c: 230: LATFbits.LATF3 = 0;
 13691  010428  967E               	bcf	3966,3,c	;volatile
 13692                           
 13693                           ;ring_buffer_LUT.c: 231: adc_error_flag = 0;
 13694  01042A  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 13695                           
 13696                           ;ring_buffer_LUT.c: 233: PIE5bits.TMR7IE = 1;
 13697  01042C  010E               	movlb	14	; () banked
 13698  01042E  8D2E               	bsf	46,6,b	;volatile
 13699                           
 13700                           ; BSR set to: 14
 13701                           ;ring_buffer_LUT.c: 234: TMR7_StopTimer();
 13702  010430  EC2A  F0CA         	call	_TMR7_StopTimer	;wreg free
 13703                           
 13704                           ;ring_buffer_LUT.c: 236: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13705  010434  0E00               	movlw	0
 13706  010436  0101               	movlb	1	; () banked
 13707  010438  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13708  01043A  0E00               	movlw	0
 13709  01043C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13710  01043E  0E02               	movlw	2
 13711  010440  EC1A  F0A1         	call	_terminal_textAttributes
 13712                           
 13713                           ;ring_buffer_LUT.c: 237: printf("Clearing ADC Error\n\r");
 13714  010444  0EEC               	movlw	low STR_72
 13715  010446  0101               	movlb	1	; () banked
 13716  010448  6F82               	movwf	printf@f& (0+255),b
 13717  01044A  0EFC               	movlw	high STR_72
 13718  01044C  6F83               	movwf	(printf@f+1)& (0+255),b
 13719  01044E  ECCF  F089         	call	_printf	;wreg free
 13720                           
 13721                           ;ring_buffer_LUT.c: 238: terminal_textAttributesReset();
 13722  010452  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13723                           
 13724                           ;ring_buffer_LUT.c: 240: }
 13725  010456  0012               	return	
 13726  010458                     l1322:
 13727                           
 13728                           ;ring_buffer_LUT.c: 243: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
 13729  010458  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13730  01045C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13731  010460  0EBB               	movlw	low STR_73
 13732  010462  0101               	movlb	1	; () banked
 13733  010464  6F19               	movwf	strcmp@s2& (0+255),b
 13734  010466  0EFD               	movlw	high STR_73
 13735  010468  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13736  01046A  EC02  F0C5         	call	_strcmp	;wreg free
 13737  01046E  0101               	movlb	1	; () banked
 13738  010470  5117               	movf	?_strcmp& (0+255),w,b
 13739  010472  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13740  010474  A4D8               	btfss	status,2,c
 13741  010476  D026               	goto	l1324
 13742                           
 13743                           ; BSR set to: 1
 13744                           ;ring_buffer_LUT.c: 246: if (VCC_overvoltage_flag == 1) {
 13745  010478  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 13746  01047A  D012               	goto	l1325
 13747                           
 13748                           ; BSR set to: 1
 13749                           ;ring_buffer_LUT.c: 248: terminal_textAttributes(RED, BLACK, NORMAL);
 13750  01047C  0E00               	movlw	0
 13751  01047E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13752  010480  0E00               	movlw	0
 13753  010482  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13754  010484  0E01               	movlw	1
 13755  010486  EC1A  F0A1         	call	_terminal_textAttributes
 13756                           
 13757                           ;ring_buffer_LUT.c: 249: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
 13758  01048A  0EEF               	movlw	low STR_74
 13759  01048C  0101               	movlb	1	; () banked
 13760  01048E  6F82               	movwf	printf@f& (0+255),b
 13761  010490  0EF3               	movlw	high STR_74
 13762  010492  6F83               	movwf	(printf@f+1)& (0+255),b
 13763  010494  ECCF  F089         	call	_printf	;wreg free
 13764                           
 13765                           ;ring_buffer_LUT.c: 250: terminal_textAttributesReset();
 13766  010498  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13767                           
 13768                           ;ring_buffer_LUT.c: 253: VCC_overvoltage_flag = 0;
 13769  01049C  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 13770                           
 13771                           ;ring_buffer_LUT.c: 255: }
 13772  01049E  0012               	return	
 13773  0104A0                     l1325:
 13774                           
 13775                           ;ring_buffer_LUT.c: 257: else {
 13776                           ;ring_buffer_LUT.c: 259: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13777  0104A0  0E00               	movlw	0
 13778  0104A2  0101               	movlb	1	; () banked
 13779  0104A4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13780  0104A6  0E00               	movlw	0
 13781  0104A8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13782  0104AA  0E02               	movlw	2
 13783  0104AC  EC1A  F0A1         	call	_terminal_textAttributes
 13784                           
 13785                           ;ring_buffer_LUT.c: 260: printf("VCC Overvoltage condition has not occurred\n\r");
 13786  0104B0  0EFC               	movlw	low STR_75
 13787  0104B2  0101               	movlb	1	; () banked
 13788  0104B4  6F82               	movwf	printf@f& (0+255),b
 13789  0104B6  0EF8               	movlw	high STR_75
 13790  0104B8  6F83               	movwf	(printf@f+1)& (0+255),b
 13791  0104BA  ECCF  F089         	call	_printf	;wreg free
 13792                           
 13793                           ;ring_buffer_LUT.c: 261: terminal_textAttributesReset();
 13794  0104BE  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13795                           
 13796                           ;ring_buffer_LUT.c: 263: }
 13797                           ;ring_buffer_LUT.c: 265: }
 13798  0104C2  0012               	return	
 13799  0104C4                     l1324:
 13800                           
 13801                           ;ring_buffer_LUT.c: 268: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 13802  0104C4  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13803  0104C8  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13804  0104CC  0E0E               	movlw	low STR_76
 13805  0104CE  0101               	movlb	1	; () banked
 13806  0104D0  6F19               	movwf	strcmp@s2& (0+255),b
 13807  0104D2  0EFE               	movlw	high STR_76
 13808  0104D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13809  0104D6  EC02  F0C5         	call	_strcmp	;wreg free
 13810  0104DA  0101               	movlb	1	; () banked
 13811  0104DC  5117               	movf	?_strcmp& (0+255),w,b
 13812  0104DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13813  0104E0  A4D8               	btfss	status,2,c
 13814  0104E2  D019               	goto	l1328
 13815                           
 13816                           ; BSR set to: 1
 13817                           ;ring_buffer_LUT.c: 270: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13818  0104E4  0E00               	movlw	0
 13819  0104E6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13820  0104E8  0E00               	movlw	0
 13821  0104EA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13822  0104EC  0E06               	movlw	6
 13823  0104EE  EC1A  F0A1         	call	_terminal_textAttributes
 13824                           
 13825                           ;ring_buffer_LUT.c: 271: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 13826  0104F2  0E43               	movlw	low STR_77
 13827  0104F4  0101               	movlb	1	; () banked
 13828  0104F6  6F82               	movwf	printf@f& (0+255),b
 13829  0104F8  0EFA               	movlw	high STR_77
 13830  0104FA  6F83               	movwf	(printf@f+1)& (0+255),b
 13831  0104FC  C1D3  F184         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 13832  010500  C1D4  F185         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 13833  010504  C1D5  F186         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 13834  010508  C1D6  F187         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 13835  01050C  ECCF  F089         	call	_printf	;wreg free
 13836                           
 13837                           ;ring_buffer_LUT.c: 272: terminal_textAttributesReset();
 13838  010510  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13839                           
 13840                           ;ring_buffer_LUT.c: 274: }
 13841  010514  0012               	return	
 13842  010516                     l1328:
 13843                           
 13844                           ;ring_buffer_LUT.c: 277: else if((0 == strcmp(line, "Measure POS12?"))) {
 13845  010516  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13846  01051A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13847  01051E  0E6D               	movlw	low STR_78
 13848  010520  0101               	movlb	1	; () banked
 13849  010522  6F19               	movwf	strcmp@s2& (0+255),b
 13850  010524  0EFE               	movlw	high STR_78
 13851  010526  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13852  010528  EC02  F0C5         	call	_strcmp	;wreg free
 13853  01052C  0101               	movlb	1	; () banked
 13854  01052E  5117               	movf	?_strcmp& (0+255),w,b
 13855  010530  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13856  010532  A4D8               	btfss	status,2,c
 13857  010534  D019               	goto	l1330
 13858                           
 13859                           ; BSR set to: 1
 13860                           ;ring_buffer_LUT.c: 279: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13861  010536  0E00               	movlw	0
 13862  010538  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13863  01053A  0E00               	movlw	0
 13864  01053C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13865  01053E  0E06               	movlw	6
 13866  010540  EC1A  F0A1         	call	_terminal_textAttributes
 13867                           
 13868                           ;ring_buffer_LUT.c: 280: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 13869  010544  0EB1               	movlw	low STR_79
 13870  010546  0101               	movlb	1	; () banked
 13871  010548  6F82               	movwf	printf@f& (0+255),b
 13872  01054A  0EFA               	movlw	high STR_79
 13873  01054C  6F83               	movwf	(printf@f+1)& (0+255),b
 13874  01054E  C1CF  F184         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 13875  010552  C1D0  F185         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 13876  010556  C1D1  F186         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 13877  01055A  C1D2  F187         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 13878  01055E  ECCF  F089         	call	_printf	;wreg free
 13879                           
 13880                           ;ring_buffer_LUT.c: 281: terminal_textAttributesReset();
 13881  010562  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13882                           
 13883                           ;ring_buffer_LUT.c: 283: }
 13884  010566  0012               	return	
 13885  010568                     l1330:
 13886                           
 13887                           ;ring_buffer_LUT.c: 286: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 13888  010568  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13889  01056C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13890  010570  0E65               	movlw	low STR_80
 13891  010572  0101               	movlb	1	; () banked
 13892  010574  6F19               	movwf	strcmp@s2& (0+255),b
 13893  010576  0EFD               	movlw	high STR_80
 13894  010578  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13895  01057A  EC02  F0C5         	call	_strcmp	;wreg free
 13896  01057E  0101               	movlb	1	; () banked
 13897  010580  5117               	movf	?_strcmp& (0+255),w,b
 13898  010582  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13899  010584  A4D8               	btfss	status,2,c
 13900  010586  D019               	goto	l1332
 13901                           
 13902                           ; BSR set to: 1
 13903                           ;ring_buffer_LUT.c: 288: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13904  010588  0E00               	movlw	0
 13905  01058A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13906  01058C  0E00               	movlw	0
 13907  01058E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13908  010590  0E06               	movlw	6
 13909  010592  EC1A  F0A1         	call	_terminal_textAttributes
 13910                           
 13911                           ;ring_buffer_LUT.c: 289: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 13912  010596  0E8D               	movlw	low STR_81
 13913  010598  0101               	movlb	1	; () banked
 13914  01059A  6F82               	movwf	printf@f& (0+255),b
 13915  01059C  0EFA               	movlw	high STR_81
 13916  01059E  6F83               	movwf	(printf@f+1)& (0+255),b
 13917  0105A0  C1CB  F184         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 13918  0105A4  C1CC  F185         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 13919  0105A8  C1CD  F186         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 13920  0105AC  C1CE  F187         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 13921  0105B0  ECCF  F089         	call	_printf	;wreg free
 13922                           
 13923                           ;ring_buffer_LUT.c: 290: terminal_textAttributesReset();
 13924  0105B4  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13925                           
 13926                           ;ring_buffer_LUT.c: 294: }
 13927  0105B8  0012               	return	
 13928  0105BA                     l1332:
 13929                           
 13930                           ;ring_buffer_LUT.c: 297: else if((0 == strcmp(line, "Measure FVR?"))) {
 13931  0105BA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13932  0105BE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13933  0105C2  0E16               	movlw	low STR_82
 13934  0105C4  0101               	movlb	1	; () banked
 13935  0105C6  6F19               	movwf	strcmp@s2& (0+255),b
 13936  0105C8  0EFF               	movlw	high STR_82
 13937  0105CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13938  0105CC  EC02  F0C5         	call	_strcmp	;wreg free
 13939  0105D0  0101               	movlb	1	; () banked
 13940  0105D2  5117               	movf	?_strcmp& (0+255),w,b
 13941  0105D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13942  0105D6  A4D8               	btfss	status,2,c
 13943  0105D8  D019               	goto	l1334
 13944                           
 13945                           ; BSR set to: 1
 13946                           ;ring_buffer_LUT.c: 299: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13947  0105DA  0E00               	movlw	0
 13948  0105DC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13949  0105DE  0E00               	movlw	0
 13950  0105E0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13951  0105E2  0E06               	movlw	6
 13952  0105E4  EC1A  F0A1         	call	_terminal_textAttributes
 13953                           
 13954                           ;ring_buffer_LUT.c: 300: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 13955  0105E8  0E63               	movlw	low STR_83
 13956  0105EA  0101               	movlb	1	; () banked
 13957  0105EC  6F82               	movwf	printf@f& (0+255),b
 13958  0105EE  0EF5               	movlw	high STR_83
 13959  0105F0  6F83               	movwf	(printf@f+1)& (0+255),b
 13960  0105F2  C1E4  F184         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 13961  0105F6  C1E5  F185         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 13962  0105FA  C1E6  F186         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 13963  0105FE  C1E7  F187         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 13964  010602  ECCF  F089         	call	_printf	;wreg free
 13965                           
 13966                           ;ring_buffer_LUT.c: 301: terminal_textAttributesReset();
 13967  010606  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 13968                           
 13969                           ;ring_buffer_LUT.c: 303: }
 13970  01060A  0012               	return	
 13971  01060C                     l1334:
 13972                           
 13973                           ;ring_buffer_LUT.c: 306: else if((0 == strcmp(line, "Measure AVSS?"))) {
 13974  01060C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13975  010610  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13976  010614  0EA8               	movlw	low STR_84
 13977  010616  0101               	movlb	1	; () banked
 13978  010618  6F19               	movwf	strcmp@s2& (0+255),b
 13979  01061A  0EFE               	movlw	high STR_84
 13980  01061C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13981  01061E  EC02  F0C5         	call	_strcmp	;wreg free
 13982  010622  0101               	movlb	1	; () banked
 13983  010624  5117               	movf	?_strcmp& (0+255),w,b
 13984  010626  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13985  010628  A4D8               	btfss	status,2,c
 13986  01062A  D019               	goto	l1336
 13987                           
 13988                           ; BSR set to: 1
 13989                           ;ring_buffer_LUT.c: 308: terminal_textAttributes(CYAN, BLACK, NORMAL);
 13990  01062C  0E00               	movlw	0
 13991  01062E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13992  010630  0E00               	movlw	0
 13993  010632  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13994  010634  0E06               	movlw	6
 13995  010636  EC1A  F0A1         	call	_terminal_textAttributes
 13996                           
 13997                           ;ring_buffer_LUT.c: 309: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 13998  01063A  0E1E               	movlw	low STR_85
 13999  01063C  0101               	movlb	1	; () banked
 14000  01063E  6F82               	movwf	printf@f& (0+255),b
 14001  010640  0EFA               	movlw	high STR_85
 14002  010642  6F83               	movwf	(printf@f+1)& (0+255),b
 14003  010644  C1D7  F184         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 14004  010648  C1D8  F185         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 14005  01064C  C1D9  F186         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 14006  010650  C1DA  F187         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 14007  010654  ECCF  F089         	call	_printf	;wreg free
 14008                           
 14009                           ;ring_buffer_LUT.c: 310: terminal_textAttributesReset();
 14010  010658  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14011                           
 14012                           ;ring_buffer_LUT.c: 312: }
 14013  01065C  0012               	return	
 14014  01065E                     l1336:
 14015                           
 14016                           ;ring_buffer_LUT.c: 315: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 14017  01065E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14018  010662  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14019  010666  0E47               	movlw	low STR_86
 14020  010668  0101               	movlb	1	; () banked
 14021  01066A  6F19               	movwf	strcmp@s2& (0+255),b
 14022  01066C  0EFC               	movlw	high STR_86
 14023  01066E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14024  010670  EC02  F0C5         	call	_strcmp	;wreg free
 14025  010674  0101               	movlb	1	; () banked
 14026  010676  5117               	movf	?_strcmp& (0+255),w,b
 14027  010678  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14028  01067A  A4D8               	btfss	status,2,c
 14029  01067C  D019               	goto	l1338
 14030                           
 14031                           ; BSR set to: 1
 14032                           ;ring_buffer_LUT.c: 317: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14033  01067E  0E00               	movlw	0
 14034  010680  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14035  010682  0E00               	movlw	0
 14036  010684  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14037  010686  0E06               	movlw	6
 14038  010688  EC1A  F0A1         	call	_terminal_textAttributes
 14039                           
 14040                           ;ring_buffer_LUT.c: 318: printf("Measured Current is %.3f Amps\n\r", Imeas);
 14041  01068C  0E5C               	movlw	low STR_87
 14042  01068E  0101               	movlb	1	; () banked
 14043  010690  6F82               	movwf	printf@f& (0+255),b
 14044  010692  0EFB               	movlw	high STR_87
 14045  010694  6F83               	movwf	(printf@f+1)& (0+255),b
 14046  010696  C1C7  F184         	movff	_Imeas,?_printf+2	;volatile
 14047  01069A  C1C8  F185         	movff	_Imeas+1,?_printf+3	;volatile
 14048  01069E  C1C9  F186         	movff	_Imeas+2,?_printf+4	;volatile
 14049  0106A2  C1CA  F187         	movff	_Imeas+3,?_printf+5	;volatile
 14050  0106A6  ECCF  F089         	call	_printf	;wreg free
 14051                           
 14052                           ;ring_buffer_LUT.c: 319: terminal_textAttributesReset();
 14053  0106AA  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14054                           
 14055                           ;ring_buffer_LUT.c: 321: }
 14056  0106AE  0012               	return	
 14057  0106B0                     l1338:
 14058                           
 14059                           ;ring_buffer_LUT.c: 324: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 14060  0106B0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14061  0106B4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14062  0106B8  0E16               	movlw	low STR_88
 14063  0106BA  0101               	movlb	1	; () banked
 14064  0106BC  6F19               	movwf	strcmp@s2& (0+255),b
 14065  0106BE  0EFD               	movlw	high STR_88
 14066  0106C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14067  0106C2  EC02  F0C5         	call	_strcmp	;wreg free
 14068  0106C6  0101               	movlb	1	; () banked
 14069  0106C8  5117               	movf	?_strcmp& (0+255),w,b
 14070  0106CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14071  0106CC  A4D8               	btfss	status,2,c
 14072  0106CE  D019               	goto	l1340
 14073                           
 14074                           ; BSR set to: 1
 14075                           ;ring_buffer_LUT.c: 326: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14076  0106D0  0E00               	movlw	0
 14077  0106D2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14078  0106D4  0E00               	movlw	0
 14079  0106D6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14080  0106D8  0E06               	movlw	6
 14081  0106DA  EC1A  F0A1         	call	_terminal_textAttributes
 14082                           
 14083                           ;ring_buffer_LUT.c: 327: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 14084  0106DE  0ED5               	movlw	low STR_89
 14085  0106E0  0101               	movlb	1	; () banked
 14086  0106E2  6F82               	movwf	printf@f& (0+255),b
 14087  0106E4  0EFA               	movlw	high STR_89
 14088  0106E6  6F83               	movwf	(printf@f+1)& (0+255),b
 14089  0106E8  C1C3  F184         	movff	_Irms,?_printf+2	;volatile
 14090  0106EC  C1C4  F185         	movff	_Irms+1,?_printf+3	;volatile
 14091  0106F0  C1C5  F186         	movff	_Irms+2,?_printf+4	;volatile
 14092  0106F4  C1C6  F187         	movff	_Irms+3,?_printf+5	;volatile
 14093  0106F8  ECCF  F089         	call	_printf	;wreg free
 14094                           
 14095                           ;ring_buffer_LUT.c: 328: terminal_textAttributesReset();
 14096  0106FC  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14097                           
 14098                           ;ring_buffer_LUT.c: 330: }
 14099  010700  0012               	return	
 14100  010702                     l1340:
 14101                           
 14102                           ;ring_buffer_LUT.c: 333: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 14103  010702  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14104  010706  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14105  01070A  0E01               	movlw	low STR_90
 14106  01070C  0101               	movlb	1	; () banked
 14107  01070E  6F19               	movwf	strcmp@s2& (0+255),b
 14108  010710  0EFD               	movlw	high STR_90
 14109  010712  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14110  010714  EC02  F0C5         	call	_strcmp	;wreg free
 14111  010718  0101               	movlb	1	; () banked
 14112  01071A  5117               	movf	?_strcmp& (0+255),w,b
 14113  01071C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14114  01071E  A4D8               	btfss	status,2,c
 14115  010720  D019               	goto	l1342
 14116                           
 14117                           ; BSR set to: 1
 14118                           ;ring_buffer_LUT.c: 335: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14119  010722  0E00               	movlw	0
 14120  010724  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14121  010726  0E00               	movlw	0
 14122  010728  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14123  01072A  0E06               	movlw	6
 14124  01072C  EC1A  F0A1         	call	_terminal_textAttributes
 14125                           
 14126                           ;ring_buffer_LUT.c: 336: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 14127  010730  0EF7               	movlw	low STR_91
 14128  010732  0101               	movlb	1	; () banked
 14129  010734  6F82               	movwf	printf@f& (0+255),b
 14130  010736  0EFA               	movlw	high STR_91
 14131  010738  6F83               	movwf	(printf@f+1)& (0+255),b
 14132  01073A  C1BF  F184         	movff	_Vrms,?_printf+2	;volatile
 14133  01073E  C1C0  F185         	movff	_Vrms+1,?_printf+3	;volatile
 14134  010742  C1C1  F186         	movff	_Vrms+2,?_printf+4	;volatile
 14135  010746  C1C2  F187         	movff	_Vrms+3,?_printf+5	;volatile
 14136  01074A  ECCF  F089         	call	_printf	;wreg free
 14137                           
 14138                           ;ring_buffer_LUT.c: 337: terminal_textAttributesReset();
 14139  01074E  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14140                           
 14141                           ;ring_buffer_LUT.c: 339: }
 14142  010752  0012               	return	
 14143  010754                     l1342:
 14144                           
 14145                           ;ring_buffer_LUT.c: 342: else if ((0 == strcmp(line, "Measure Power?"))) {
 14146  010754  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14147  010758  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14148  01075C  0E7C               	movlw	low STR_92
 14149  01075E  0101               	movlb	1	; () banked
 14150  010760  6F19               	movwf	strcmp@s2& (0+255),b
 14151  010762  0EFE               	movlw	high STR_92
 14152  010764  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14153  010766  EC02  F0C5         	call	_strcmp	;wreg free
 14154  01076A  0101               	movlb	1	; () banked
 14155  01076C  5117               	movf	?_strcmp& (0+255),w,b
 14156  01076E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14157  010770  A4D8               	btfss	status,2,c
 14158  010772  D019               	goto	l1344
 14159                           
 14160                           ; BSR set to: 1
 14161                           ;ring_buffer_LUT.c: 344: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14162  010774  0E00               	movlw	0
 14163  010776  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14164  010778  0E00               	movlw	0
 14165  01077A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14166  01077C  0E06               	movlw	6
 14167  01077E  EC1A  F0A1         	call	_terminal_textAttributes
 14168                           
 14169                           ;ring_buffer_LUT.c: 345: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 14170  010782  0E9D               	movlw	low STR_93
 14171  010784  0101               	movlb	1	; () banked
 14172  010786  6F82               	movwf	printf@f& (0+255),b
 14173  010788  0EF5               	movlw	high STR_93
 14174  01078A  6F83               	movwf	(printf@f+1)& (0+255),b
 14175  01078C  C1BB  F184         	movff	_Avg_Power,?_printf+2	;volatile
 14176  010790  C1BC  F185         	movff	_Avg_Power+1,?_printf+3	;volatile
 14177  010794  C1BD  F186         	movff	_Avg_Power+2,?_printf+4	;volatile
 14178  010798  C1BE  F187         	movff	_Avg_Power+3,?_printf+5	;volatile
 14179  01079C  ECCF  F089         	call	_printf	;wreg free
 14180                           
 14181                           ;ring_buffer_LUT.c: 346: terminal_textAttributesReset();
 14182  0107A0  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14183                           
 14184                           ;ring_buffer_LUT.c: 348: }
 14185  0107A4  0012               	return	
 14186  0107A6                     l1344:
 14187                           
 14188                           ;ring_buffer_LUT.c: 351: else if ((0 == strcmp(line, "Enable Dimming"))) {
 14189  0107A6  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14190  0107AA  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14191  0107AE  0E8B               	movlw	low STR_94
 14192  0107B0  0101               	movlb	1	; () banked
 14193  0107B2  6F19               	movwf	strcmp@s2& (0+255),b
 14194  0107B4  0EFE               	movlw	high STR_94
 14195  0107B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14196  0107B8  EC02  F0C5         	call	_strcmp	;wreg free
 14197  0107BC  0101               	movlb	1	; () banked
 14198  0107BE  5117               	movf	?_strcmp& (0+255),w,b
 14199  0107C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14200  0107C2  A4D8               	btfss	status,2,c
 14201  0107C4  D015               	goto	l1346
 14202                           
 14203                           ; BSR set to: 1
 14204                           ;ring_buffer_LUT.c: 354: LATGbits.LATG0 = 0;
 14205  0107C6  907F               	bcf	3967,0,c	;volatile
 14206                           
 14207                           ;ring_buffer_LUT.c: 357: PIE0bits.INT0IE = 1;
 14208  0107C8  010E               	movlb	14	; () banked
 14209  0107CA  8129               	bsf	41,0,b	;volatile
 14210                           
 14211                           ; BSR set to: 14
 14212                           ;ring_buffer_LUT.c: 359: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14213  0107CC  0E00               	movlw	0
 14214  0107CE  0101               	movlb	1	; () banked
 14215  0107D0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14216  0107D2  0E00               	movlw	0
 14217  0107D4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14218  0107D6  0E02               	movlw	2
 14219  0107D8  EC1A  F0A1         	call	_terminal_textAttributes
 14220                           
 14221                           ;ring_buffer_LUT.c: 360: printf("TRIAC output dimming has been enabled\n\r");
 14222  0107DC  0ECF               	movlw	low STR_95
 14223  0107DE  0101               	movlb	1	; () banked
 14224  0107E0  6F82               	movwf	printf@f& (0+255),b
 14225  0107E2  0EF9               	movlw	high STR_95
 14226  0107E4  6F83               	movwf	(printf@f+1)& (0+255),b
 14227  0107E6  ECCF  F089         	call	_printf	;wreg free
 14228                           
 14229                           ;ring_buffer_LUT.c: 361: terminal_textAttributesReset();
 14230  0107EA  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14231                           
 14232                           ;ring_buffer_LUT.c: 363: }
 14233  0107EE  0012               	return	
 14234  0107F0                     l1346:
 14235                           
 14236                           ;ring_buffer_LUT.c: 366: else if ((0 == strcmp(line, "Disable Dimming"))) {
 14237  0107F0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14238  0107F4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14239  0107F8  0E3E               	movlw	low STR_96
 14240  0107FA  0101               	movlb	1	; () banked
 14241  0107FC  6F19               	movwf	strcmp@s2& (0+255),b
 14242  0107FE  0EFE               	movlw	high STR_96
 14243  010800  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14244  010802  EC02  F0C5         	call	_strcmp	;wreg free
 14245  010806  0101               	movlb	1	; () banked
 14246  010808  5117               	movf	?_strcmp& (0+255),w,b
 14247  01080A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14248  01080C  A4D8               	btfss	status,2,c
 14249  01080E  D017               	goto	l1348
 14250                           
 14251                           ; BSR set to: 1
 14252                           ;ring_buffer_LUT.c: 369: LATGbits.LATG0 = 1;
 14253  010810  807F               	bsf	3967,0,c	;volatile
 14254                           
 14255                           ;ring_buffer_LUT.c: 372: PIE0bits.INT0IE = 0;
 14256  010812  010E               	movlb	14	; () banked
 14257  010814  9129               	bcf	41,0,b	;volatile
 14258                           
 14259                           ; BSR set to: 14
 14260                           ;ring_buffer_LUT.c: 373: TMR5_StopTimer();
 14261  010816  EC33  F0CA         	call	_TMR5_StopTimer	;wreg free
 14262                           
 14263                           ;ring_buffer_LUT.c: 375: terminal_textAttributes(RED, BLACK, NORMAL);
 14264  01081A  0E00               	movlw	0
 14265  01081C  0101               	movlb	1	; () banked
 14266  01081E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14267  010820  0E00               	movlw	0
 14268  010822  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14269  010824  0E01               	movlw	1
 14270  010826  EC1A  F0A1         	call	_terminal_textAttributes
 14271                           
 14272                           ;ring_buffer_LUT.c: 376: printf("TRIAC output dimming has been disabled\n\r");
 14273  01082A  0EA6               	movlw	low STR_97
 14274  01082C  0101               	movlb	1	; () banked
 14275  01082E  6F82               	movwf	printf@f& (0+255),b
 14276  010830  0EF9               	movlw	high STR_97
 14277  010832  6F83               	movwf	(printf@f+1)& (0+255),b
 14278  010834  ECCF  F089         	call	_printf	;wreg free
 14279                           
 14280                           ;ring_buffer_LUT.c: 377: terminal_textAttributesReset();
 14281  010838  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14282                           
 14283                           ;ring_buffer_LUT.c: 379: }
 14284  01083C  0012               	return	
 14285  01083E                     l1348:
 14286                           
 14287                           ;ring_buffer_LUT.c: 382: else if ((0 == strcmp(line, "Enable Load"))) {
 14288  01083E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14289  010842  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14290  010846  0E3C               	movlw	low STR_98
 14291  010848  0101               	movlb	1	; () banked
 14292  01084A  6F19               	movwf	strcmp@s2& (0+255),b
 14293  01084C  0EFF               	movlw	high STR_98
 14294  01084E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14295  010850  EC02  F0C5         	call	_strcmp	;wreg free
 14296  010854  0101               	movlb	1	; () banked
 14297  010856  5117               	movf	?_strcmp& (0+255),w,b
 14298  010858  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14299  01085A  A4D8               	btfss	status,2,c
 14300  01085C  D014               	goto	l1350
 14301                           
 14302                           ; BSR set to: 1
 14303                           ;ring_buffer_LUT.c: 384: LATGbits.LATG0 = 1;
 14304  01085E  807F               	bsf	3967,0,c	;volatile
 14305                           
 14306                           ;ring_buffer_LUT.c: 385: LATGbits.LATG1 = 0;
 14307  010860  927F               	bcf	3967,1,c	;volatile
 14308                           
 14309                           ;ring_buffer_LUT.c: 386: load_enable = 1;
 14310  010862  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14311                           
 14312                           ; BSR set to: 1
 14313                           ;ring_buffer_LUT.c: 388: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14314  010864  0E00               	movlw	0
 14315  010866  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14316  010868  0E00               	movlw	0
 14317  01086A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14318  01086C  0E02               	movlw	2
 14319  01086E  EC1A  F0A1         	call	_terminal_textAttributes
 14320                           
 14321                           ;ring_buffer_LUT.c: 389: printf("Load has been enabled, dimming disabled\n\r");
 14322  010872  0E29               	movlw	low STR_99
 14323  010874  0101               	movlb	1	; () banked
 14324  010876  6F82               	movwf	printf@f& (0+255),b
 14325  010878  0EF9               	movlw	high STR_99
 14326  01087A  6F83               	movwf	(printf@f+1)& (0+255),b
 14327  01087C  ECCF  F089         	call	_printf	;wreg free
 14328                           
 14329                           ;ring_buffer_LUT.c: 390: terminal_textAttributesReset();
 14330  010880  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14331                           
 14332                           ;ring_buffer_LUT.c: 392: }
 14333  010884  0012               	return	
 14334  010886                     l1350:
 14335                           
 14336                           ;ring_buffer_LUT.c: 395: else if ((0 == strcmp(line, "Load Enabled?"))) {
 14337  010886  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14338  01088A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14339  01088E  0EB6               	movlw	low STR_100
 14340  010890  0101               	movlb	1	; () banked
 14341  010892  6F19               	movwf	strcmp@s2& (0+255),b
 14342  010894  0EFE               	movlw	high STR_100
 14343  010896  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14344  010898  EC02  F0C5         	call	_strcmp	;wreg free
 14345  01089C  0101               	movlb	1	; () banked
 14346  01089E  5117               	movf	?_strcmp& (0+255),w,b
 14347  0108A0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14348  0108A2  A4D8               	btfss	status,2,c
 14349  0108A4  D025               	goto	l1352
 14350                           
 14351                           ; BSR set to: 1
 14352                           ;ring_buffer_LUT.c: 397: if (load_enable == 1) {
 14353  0108A6  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14354  0108A8  D011               	goto	l1353
 14355                           
 14356                           ; BSR set to: 1
 14357                           ;ring_buffer_LUT.c: 399: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14358  0108AA  0E00               	movlw	0
 14359  0108AC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14360  0108AE  0E00               	movlw	0
 14361  0108B0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14362  0108B2  0E02               	movlw	2
 14363  0108B4  EC1A  F0A1         	call	_terminal_textAttributes
 14364                           
 14365                           ;ring_buffer_LUT.c: 400: printf("Load is currently enabled\n\r");
 14366  0108B8  0E10               	movlw	low STR_101
 14367  0108BA  0101               	movlb	1	; () banked
 14368  0108BC  6F82               	movwf	printf@f& (0+255),b
 14369  0108BE  0EFC               	movlw	high STR_101
 14370  0108C0  6F83               	movwf	(printf@f+1)& (0+255),b
 14371  0108C2  ECCF  F089         	call	_printf	;wreg free
 14372                           
 14373                           ;ring_buffer_LUT.c: 401: terminal_textAttributesReset();
 14374  0108C6  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14375                           
 14376                           ;ring_buffer_LUT.c: 403: }
 14377  0108CA  0012               	return	
 14378  0108CC                     l1353:
 14379                           
 14380                           ;ring_buffer_LUT.c: 405: else {
 14381                           ;ring_buffer_LUT.c: 407: terminal_textAttributes(RED, BLACK, NORMAL);
 14382  0108CC  0E00               	movlw	0
 14383  0108CE  0101               	movlb	1	; () banked
 14384  0108D0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14385  0108D2  0E00               	movlw	0
 14386  0108D4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14387  0108D6  0E01               	movlw	1
 14388  0108D8  EC1A  F0A1         	call	_terminal_textAttributes
 14389                           
 14390                           ;ring_buffer_LUT.c: 408: printf("Load is currently disabled\n\r");
 14391  0108DC  0EB9               	movlw	low STR_102
 14392  0108DE  0101               	movlb	1	; () banked
 14393  0108E0  6F82               	movwf	printf@f& (0+255),b
 14394  0108E2  0EFB               	movlw	high STR_102
 14395  0108E4  6F83               	movwf	(printf@f+1)& (0+255),b
 14396  0108E6  ECCF  F089         	call	_printf	;wreg free
 14397                           
 14398                           ;ring_buffer_LUT.c: 409: terminal_textAttributesReset();
 14399  0108EA  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14400                           
 14401                           ;ring_buffer_LUT.c: 412: }
 14402                           ;ring_buffer_LUT.c: 414: }
 14403  0108EE  0012               	return	
 14404  0108F0                     l1352:
 14405                           
 14406                           ;ring_buffer_LUT.c: 417: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 14407  0108F0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14408  0108F4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14409  0108F8  0E99               	movlw	low STR_103
 14410  0108FA  0101               	movlb	1	; () banked
 14411  0108FC  6F19               	movwf	strcmp@s2& (0+255),b
 14412  0108FE  0EFD               	movlw	high STR_103
 14413  010900  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14414  010902  EC02  F0C5         	call	_strcmp	;wreg free
 14415  010906  0101               	movlb	1	; () banked
 14416  010908  5117               	movf	?_strcmp& (0+255),w,b
 14417  01090A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14418  01090C  A4D8               	btfss	status,2,c
 14419  01090E  D039               	goto	l1356
 14420                           
 14421                           ; BSR set to: 1
 14422                           ;ring_buffer_LUT.c: 419: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 14423  010910  B25E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14424                           
 14425                           ; BSR set to: 1
 14426  010912  B07F               	btfsc	3967,0,c	;volatile
 14427  010914  D011               	goto	l1357
 14428                           
 14429                           ; BSR set to: 1
 14430                           ;ring_buffer_LUT.c: 421: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14431  010916  0E00               	movlw	0
 14432  010918  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14433  01091A  0E00               	movlw	0
 14434  01091C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14435  01091E  0E02               	movlw	2
 14436  010920  EC1A  F0A1         	call	_terminal_textAttributes
 14437                           
 14438                           ;ring_buffer_LUT.c: 422: printf("Dimming is currently enabled\n\r");
 14439  010924  0E7C               	movlw	low STR_104
 14440  010926  0101               	movlb	1	; () banked
 14441  010928  6F82               	movwf	printf@f& (0+255),b
 14442  01092A  0EFB               	movlw	high STR_104
 14443  01092C  6F83               	movwf	(printf@f+1)& (0+255),b
 14444  01092E  ECCF  F089         	call	_printf	;wreg free
 14445                           
 14446                           ;ring_buffer_LUT.c: 423: terminal_textAttributesReset();
 14447  010932  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14448                           
 14449                           ;ring_buffer_LUT.c: 425: }
 14450  010936  0012               	return	
 14451  010938                     l1357:
 14452                           
 14453                           ; BSR set to: 1
 14454                           ;ring_buffer_LUT.c: 427: else if (load_enable == 1){
 14455  010938  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14456  01093A  D011               	goto	l1359
 14457                           
 14458                           ; BSR set to: 1
 14459                           ;ring_buffer_LUT.c: 429: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 14460  01093C  0E00               	movlw	0
 14461  01093E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14462  010940  0E00               	movlw	0
 14463  010942  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14464  010944  0E03               	movlw	3
 14465  010946  EC1A  F0A1         	call	_terminal_textAttributes
 14466                           
 14467                           ;ring_buffer_LUT.c: 430: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 14468  01094A  0EAE               	movlw	low STR_105
 14469  01094C  0101               	movlb	1	; () banked
 14470  01094E  6F82               	movwf	printf@f& (0+255),b
 14471  010950  0EF6               	movlw	high STR_105
 14472  010952  6F83               	movwf	(printf@f+1)& (0+255),b
 14473  010954  ECCF  F089         	call	_printf	;wreg free
 14474                           
 14475                           ;ring_buffer_LUT.c: 431: terminal_textAttributesReset();
 14476  010958  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14477                           
 14478                           ;ring_buffer_LUT.c: 433: }
 14479  01095C  0012               	return	
 14480  01095E                     l1359:
 14481                           
 14482                           ;ring_buffer_LUT.c: 435: else {
 14483                           ;ring_buffer_LUT.c: 437: terminal_textAttributes(RED, BLACK, NORMAL);
 14484  01095E  0E00               	movlw	0
 14485  010960  0101               	movlb	1	; () banked
 14486  010962  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14487  010964  0E00               	movlw	0
 14488  010966  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14489  010968  0E01               	movlw	1
 14490  01096A  EC1A  F0A1         	call	_terminal_textAttributes
 14491                           
 14492                           ;ring_buffer_LUT.c: 438: printf("Load and dimming are currently disabled\n\r");
 14493  01096E  0E53               	movlw	low STR_106
 14494  010970  0101               	movlb	1	; () banked
 14495  010972  6F82               	movwf	printf@f& (0+255),b
 14496  010974  0EF9               	movlw	high STR_106
 14497  010976  6F83               	movwf	(printf@f+1)& (0+255),b
 14498  010978  ECCF  F089         	call	_printf	;wreg free
 14499                           
 14500                           ;ring_buffer_LUT.c: 439: terminal_textAttributesReset();
 14501  01097C  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14502                           
 14503                           ;ring_buffer_LUT.c: 441: }
 14504                           ;ring_buffer_LUT.c: 445: }
 14505  010980  0012               	return	
 14506  010982                     l1356:
 14507                           
 14508                           ;ring_buffer_LUT.c: 450: else if ((0 == strcmp(line, "Disable Load"))) {
 14509  010982  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14510  010986  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14511  01098A  0E23               	movlw	low STR_107
 14512  01098C  0101               	movlb	1	; () banked
 14513  01098E  6F19               	movwf	strcmp@s2& (0+255),b
 14514  010990  0EFF               	movlw	high STR_107
 14515  010992  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14516  010994  EC02  F0C5         	call	_strcmp	;wreg free
 14517  010998  0101               	movlb	1	; () banked
 14518  01099A  5117               	movf	?_strcmp& (0+255),w,b
 14519  01099C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14520  01099E  A4D8               	btfss	status,2,c
 14521  0109A0  D014               	goto	l1362
 14522                           
 14523                           ; BSR set to: 1
 14524                           ;ring_buffer_LUT.c: 452: LATGbits.LATG1 = 0;
 14525  0109A2  927F               	bcf	3967,1,c	;volatile
 14526                           
 14527                           ;ring_buffer_LUT.c: 453: LATGbits.LATG0 = 0;
 14528  0109A4  907F               	bcf	3967,0,c	;volatile
 14529                           
 14530                           ;ring_buffer_LUT.c: 454: load_enable = 0;
 14531  0109A6  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14532                           
 14533                           ; BSR set to: 1
 14534                           ;ring_buffer_LUT.c: 456: terminal_textAttributes(RED, BLACK, NORMAL);
 14535  0109A8  0E00               	movlw	0
 14536  0109AA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14537  0109AC  0E00               	movlw	0
 14538  0109AE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14539  0109B0  0E01               	movlw	1
 14540  0109B2  EC1A  F0A1         	call	_terminal_textAttributes
 14541                           
 14542                           ;ring_buffer_LUT.c: 457: printf("Load has been disabled\n\r");
 14543  0109B6  0E61               	movlw	low STR_108
 14544  0109B8  0101               	movlb	1	; () banked
 14545  0109BA  6F82               	movwf	printf@f& (0+255),b
 14546  0109BC  0EFC               	movlw	high STR_108
 14547  0109BE  6F83               	movwf	(printf@f+1)& (0+255),b
 14548  0109C0  ECCF  F089         	call	_printf	;wreg free
 14549                           
 14550                           ;ring_buffer_LUT.c: 458: terminal_textAttributesReset();
 14551  0109C4  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14552                           
 14553                           ;ring_buffer_LUT.c: 460: }
 14554  0109C8  0012               	return	
 14555  0109CA                     l1362:
 14556                           
 14557                           ;ring_buffer_LUT.c: 463: else if ((strstr(line, "Set Dimming Percentage: "))) {
 14558  0109CA  C1B4  F126         	movff	ringBufferLUT@line,strstr@s1
 14559  0109CE  C1B5  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 14560  0109D2  0E7A               	movlw	low STR_109
 14561  0109D4  0101               	movlb	1	; () banked
 14562  0109D6  6F28               	movwf	strstr@s2& (0+255),b
 14563  0109D8  0EFC               	movlw	high STR_109
 14564  0109DA  6F29               	movwf	(strstr@s2+1)& (0+255),b
 14565  0109DC  ECE3  F0C0         	call	_strstr	;wreg free
 14566  0109E0  0101               	movlb	1	; () banked
 14567  0109E2  5126               	movf	?_strstr& (0+255),w,b
 14568  0109E4  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 14569  0109E6  B4D8               	btfsc	status,2,c
 14570  0109E8  D127               	goto	l1364
 14571                           
 14572                           ; BSR set to: 1
 14573                           ;ring_buffer_LUT.c: 466: char arg_buff[3];
 14574                           ;ring_buffer_LUT.c: 469: for (int index = 0; index < 3; index++) {
 14575  0109EA  0E00               	movlw	0
 14576  0109EC  0102               	movlb	2	; () banked
 14577  0109EE  6FC9               	movwf	(ringBufferLUT@index+1)& (0+255),b
 14578  0109F0  0E00               	movlw	0
 14579  0109F2  6FC8               	movwf	ringBufferLUT@index& (0+255),b
 14580  0109F4                     l20022:
 14581                           
 14582                           ; BSR set to: 2
 14583  0109F4  BFC9               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 14584  0109F6  D006               	goto	l1365
 14585  0109F8  51C9               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 14586  0109FA  E11F               	bnz	l20032
 14587  0109FC  0E03               	movlw	3
 14588  0109FE  5DC8               	subwf	ringBufferLUT@index& (0+255),w,b
 14589  010A00  B0D8               	btfsc	status,0,c
 14590  010A02  D01B               	goto	u26690
 14591  010A04                     l1365:
 14592                           
 14593                           ; BSR set to: 2
 14594                           ;ring_buffer_LUT.c: 471: arg_buff[index] = line[index + 24];
 14595                           
 14596                           ; BSR set to: 2
 14597  010A04  0E18               	movlw	24
 14598  010A06  25C8               	addwf	ringBufferLUT@index& (0+255),w,b
 14599  010A08  0101               	movlb	1	; () banked
 14600  010A0A  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 14601  010A0C  0E00               	movlw	0
 14602  010A0E  0102               	movlb	2	; () banked
 14603  010A10  21C9               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 14604  010A12  0101               	movlb	1	; () banked
 14605  010A14  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 14606  010A16  51B6               	movf	??_ringBufferLUT& (0+255),w,b
 14607  010A18  25B4               	addwf	ringBufferLUT@line& (0+255),w,b
 14608  010A1A  6ED9               	movwf	fsr2l,c
 14609  010A1C  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 14610  010A1E  21B5               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 14611  010A20  6EDA               	movwf	fsr2h,c
 14612  010A22  0EC5               	movlw	low ringBufferLUT@arg_buff
 14613  010A24  0102               	movlb	2	; () banked
 14614  010A26  25C8               	addwf	ringBufferLUT@index& (0+255),w,b
 14615  010A28  6EE1               	movwf	fsr1l,c
 14616  010A2A  0E02               	movlw	high ringBufferLUT@arg_buff
 14617  010A2C  21C9               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 14618  010A2E  6EE2               	movwf	fsr1h,c
 14619  010A30  CFDF FFE7          	movff	indf2,indf1
 14620                           
 14621                           ; BSR set to: 2
 14622  010A34  4BC8               	infsnz	ringBufferLUT@index& (0+255),f,b
 14623  010A36  2BC9               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 14624  010A38  D7DD               	goto	l20022
 14625  010A3A                     u26690:
 14626  010A3A                     l20032:
 14627                           
 14628                           ; BSR set to: 2
 14629                           ;ring_buffer_LUT.c: 473: }
 14630                           ;ring_buffer_LUT.c: 475: int percentage = atoi(arg_buff);
 14631  010A3A  0EC5               	movlw	low ringBufferLUT@arg_buff
 14632  010A3C  0101               	movlb	1	; () banked
 14633  010A3E  6F1D               	movwf	atoi@s& (0+255),b
 14634  010A40  0E02               	movlw	high ringBufferLUT@arg_buff
 14635  010A42  6F1E               	movwf	(atoi@s+1)& (0+255),b
 14636  010A44  EC6F  F0BE         	call	_atoi	;wreg free
 14637  010A48  C11D  F2CA         	movff	?_atoi,ringBufferLUT@percentage
 14638  010A4C  C11E  F2CB         	movff	?_atoi+1,ringBufferLUT@percentage+1
 14639                           
 14640                           ;ring_buffer_LUT.c: 478: if ( (percentage >= 100) ||
 14641                           ;ring_buffer_LUT.c: 479: (percentage <= 0)) {
 14642  010A50  0102               	movlb	2	; () banked
 14643  010A52  BFCB               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 14644  010A54  D006               	goto	u26700
 14645  010A56  51CB               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 14646  010A58  E10B               	bnz	l20038
 14647  010A5A  0E64               	movlw	100
 14648  010A5C  5DCA               	subwf	ringBufferLUT@percentage& (0+255),w,b
 14649  010A5E  B0D8               	btfsc	status,0,c
 14650  010A60  D007               	goto	u26710
 14651  010A62                     u26700:
 14652                           
 14653                           ; BSR set to: 2
 14654  010A62  BFCB               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 14655  010A64  D005               	goto	u26710
 14656  010A66  51CB               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 14657  010A68  E12B               	bnz	l20040
 14658  010A6A  05CA               	decf	ringBufferLUT@percentage& (0+255),w,b
 14659  010A6C  B0D8               	btfsc	status,0,c
 14660  010A6E  D028               	goto	l1367
 14661  010A70                     u26710:
 14662  010A70                     l20038:
 14663                           
 14664                           ; BSR set to: 2
 14665                           ;ring_buffer_LUT.c: 481: terminal_textAttributes(RED, BLACK, NORMAL);
 14666  010A70  0E00               	movlw	0
 14667  010A72  0101               	movlb	1	; () banked
 14668  010A74  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14669  010A76  0E00               	movlw	0
 14670  010A78  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14671  010A7A  0E01               	movlw	1
 14672  010A7C  EC1A  F0A1         	call	_terminal_textAttributes
 14673                           
 14674                           ;ring_buffer_LUT.c: 482: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 14675  010A80  0EFD               	movlw	low STR_110
 14676  010A82  0101               	movlb	1	; () banked
 14677  010A84  6F82               	movwf	printf@f& (0+255),b
 14678  010A86  0EF2               	movlw	high STR_110
 14679  010A88  6F83               	movwf	(printf@f+1)& (0+255),b
 14680  010A8A  ECCF  F089         	call	_printf	;wreg free
 14681                           
 14682                           ;ring_buffer_LUT.c: 483: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 14683  010A8E  0E00               	movlw	0
 14684  010A90  0101               	movlb	1	; () banked
 14685  010A92  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14686  010A94  0E00               	movlw	0
 14687  010A96  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14688  010A98  0E03               	movlw	3
 14689  010A9A  EC1A  F0A1         	call	_terminal_textAttributes
 14690                           
 14691                           ;ring_buffer_LUT.c: 484: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 14692  010A9E  0E97               	movlw	low STR_111
 14693  010AA0  0101               	movlb	1	; () banked
 14694  010AA2  6F82               	movwf	printf@f& (0+255),b
 14695  010AA4  0EF2               	movlw	high STR_111
 14696  010AA6  6F83               	movwf	(printf@f+1)& (0+255),b
 14697  010AA8  ECCF  F089         	call	_printf	;wreg free
 14698                           
 14699                           ;ring_buffer_LUT.c: 485: printf("Enter 'Help' for list of available commands\n\r");
 14700  010AAC  0E73               	movlw	low STR_112
 14701  010AAE  0101               	movlb	1	; () banked
 14702  010AB0  6F82               	movwf	printf@f& (0+255),b
 14703  010AB2  0EF8               	movlw	high STR_112
 14704  010AB4  6F83               	movwf	(printf@f+1)& (0+255),b
 14705  010AB6  ECCF  F089         	call	_printf	;wreg free
 14706                           
 14707                           ;ring_buffer_LUT.c: 486: terminal_textAttributesReset();
 14708  010ABA  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14709                           
 14710                           ;ring_buffer_LUT.c: 488: }
 14711  010ABE  0012               	return	
 14712  010AC0                     l1367:
 14713  010AC0                     l20040:
 14714                           
 14715                           ;ring_buffer_LUT.c: 491: else {
 14716                           ;ring_buffer_LUT.c: 494: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 14717  010AC0  0E00               	movlw	0
 14718  010AC2  0101               	movlb	1	; () banked
 14719  010AC4  6F41               	movwf	___fldiv@a& (0+255),b
 14720  010AC6  0E00               	movlw	0
 14721  010AC8  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 14722  010ACA  0EC8               	movlw	200
 14723  010ACC  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 14724  010ACE  0E42               	movlw	66
 14725  010AD0  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 14726  010AD2  0E00               	movlw	0
 14727  010AD4  6F2D               	movwf	___fladd@a& (0+255),b
 14728  010AD6  0E00               	movlw	0
 14729  010AD8  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 14730  010ADA  0EC8               	movlw	200
 14731  010ADC  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 14732  010ADE  0E42               	movlw	66
 14733  010AE0  6F30               	movwf	(___fladd@a+3)& (0+255),b
 14734  010AE2  C2CA  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 14735  010AE6  C2CB  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 14736  010AEA  0E00               	movlw	0
 14737  010AEC  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 14738  010AEE  0EFF               	movlw	-1
 14739  010AF0  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 14740  010AF2  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 14741  010AF4  0E01               	movlw	1
 14742  010AF6  ECA2  F0B6         	call	___xxtofl
 14743  010AFA  C117  F125         	movff	?___xxtofl,___flneg@f1
 14744  010AFE  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 14745  010B02  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 14746  010B06  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 14747  010B0A  EC09  F0C8         	call	___flneg	;wreg free
 14748  010B0E  C125  F129         	movff	?___flneg,___fladd@b
 14749  010B12  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 14750  010B16  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 14751  010B1A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 14752  010B1E  EC1F  F0A6         	call	___fladd	;wreg free
 14753  010B22  C129  F13D         	movff	?___fladd,___fldiv@b
 14754  010B26  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 14755  010B2A  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 14756  010B2E  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 14757  010B32  EC23  F0AF         	call	___fldiv	;wreg free
 14758  010B36  C13D  F156         	movff	?___fldiv,___flmul@b
 14759  010B3A  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 14760  010B3E  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 14761  010B42  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 14762  010B46  0EDB               	movlw	219
 14763  010B48  0101               	movlb	1	; () banked
 14764  010B4A  6F5A               	movwf	___flmul@a& (0+255),b
 14765  010B4C  0E0F               	movlw	15
 14766  010B4E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 14767  010B50  0E49               	movlw	73
 14768  010B52  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 14769  010B54  0E40               	movlw	64
 14770  010B56  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 14771  010B58  ECCE  F0A2         	call	___flmul	;wreg free
 14772  010B5C  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 14773  010B60  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 14774  010B64  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 14775  010B68  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 14776                           
 14777                           ;ring_buffer_LUT.c: 495: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 14778  010B6C  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 14779  010B70  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 14780  010B74  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 14781  010B78  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 14782  010B7C  0EE1               	movlw	225
 14783  010B7E  0101               	movlb	1	; () banked
 14784  010B80  6F5A               	movwf	___flmul@a& (0+255),b
 14785  010B82  0E2E               	movlw	46
 14786  010B84  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 14787  010B86  0E65               	movlw	101
 14788  010B88  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 14789  010B8A  0E42               	movlw	66
 14790  010B8C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 14791  010B8E  ECCE  F0A2         	call	___flmul	;wreg free
 14792  010B92  C156  F2A9         	movff	?___flmul,ringBufferLUT@angle_degrees
 14793  010B96  C157  F2AA         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 14794  010B9A  C158  F2AB         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 14795  010B9E  C159  F2AC         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 14796                           
 14797                           ;ring_buffer_LUT.c: 496: dimming_period = (percentage) * (0xFFFF / 100);
 14798  010BA2  C2CA  F117         	movff	ringBufferLUT@percentage,___wmul@multiplier
 14799  010BA6  C2CB  F118         	movff	ringBufferLUT@percentage+1,___wmul@multiplier+1
 14800  010BAA  0E02               	movlw	2
 14801  010BAC  0101               	movlb	1	; () banked
 14802  010BAE  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14803  010BB0  0E8F               	movlw	143
 14804  010BB2  6F19               	movwf	___wmul@multiplicand& (0+255),b
 14805  010BB4  EC4D  F0C8         	call	___wmul	;wreg free
 14806  010BB8  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 14807  010BBC  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 14808                           
 14809                           ;ring_buffer_LUT.c: 498: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14810  010BC0  0E00               	movlw	0
 14811  010BC2  0101               	movlb	1	; () banked
 14812  010BC4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14813  010BC6  0E00               	movlw	0
 14814  010BC8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14815  010BCA  0E02               	movlw	2
 14816  010BCC  EC1A  F0A1         	call	_terminal_textAttributes
 14817                           
 14818                           ;ring_buffer_LUT.c: 499: printf("Dimming has been set to %d percent\n\r", percentage);
 14819  010BD0  0E68               	movlw	low STR_113
 14820  010BD2  0101               	movlb	1	; () banked
 14821  010BD4  6F82               	movwf	printf@f& (0+255),b
 14822  010BD6  0EFA               	movlw	high STR_113
 14823  010BD8  6F83               	movwf	(printf@f+1)& (0+255),b
 14824  010BDA  C2CA  F184         	movff	ringBufferLUT@percentage,?_printf+2
 14825  010BDE  C2CB  F185         	movff	ringBufferLUT@percentage+1,?_printf+3
 14826  010BE2  ECCF  F089         	call	_printf	;wreg free
 14827                           
 14828                           ;ring_buffer_LUT.c: 500: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 14829  010BE6  0E71               	movlw	low STR_114
 14830  010BE8  0101               	movlb	1	; () banked
 14831  010BEA  6F82               	movwf	printf@f& (0+255),b
 14832  010BEC  0EF4               	movlw	high STR_114
 14833  010BEE  6F83               	movwf	(printf@f+1)& (0+255),b
 14834  010BF0  C0F2  F184         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 14835  010BF4  C0F3  F185         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 14836  010BF8  C0F4  F186         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 14837  010BFC  C0F5  F187         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 14838  010C00  C2A9  F188         	movff	ringBufferLUT@angle_degrees,?_printf+6
 14839  010C04  C2AA  F189         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 14840  010C08  C2AB  F18A         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 14841  010C0C  C2AC  F18B         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 14842  010C10  ECCF  F089         	call	_printf	;wreg free
 14843                           
 14844                           ;ring_buffer_LUT.c: 501: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 14845  010C14  0EA8               	movlw	low STR_115
 14846  010C16  0101               	movlb	1	; () banked
 14847  010C18  6F82               	movwf	printf@f& (0+255),b
 14848  010C1A  0EF3               	movlw	high STR_115
 14849  010C1C  6F83               	movwf	(printf@f+1)& (0+255),b
 14850  010C1E  C0F0  F184         	movff	_dimming_period,?_printf+2	;volatile
 14851  010C22  C0F1  F185         	movff	_dimming_period+1,?_printf+3	;volatile
 14852  010C26  C0F0  F186         	movff	_dimming_period,?_printf+4	;volatile
 14853  010C2A  C0F1  F187         	movff	_dimming_period+1,?_printf+5	;volatile
 14854  010C2E  ECCF  F089         	call	_printf	;wreg free
 14855                           
 14856                           ;ring_buffer_LUT.c: 502: terminal_textAttributesReset();
 14857  010C32  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14858                           
 14859                           ;ring_buffer_LUT.c: 504: }
 14860                           ;ring_buffer_LUT.c: 506: }
 14861  010C36  0012               	return	
 14862  010C38                     l1364:
 14863                           
 14864                           ;ring_buffer_LUT.c: 509: else if((0 == strcmp(line, "Device On Time?"))) {
 14865  010C38  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14866  010C3C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14867  010C40  0E1E               	movlw	low STR_116
 14868  010C42  0101               	movlb	1	; () banked
 14869  010C44  6F19               	movwf	strcmp@s2& (0+255),b
 14870  010C46  0EFE               	movlw	high STR_116
 14871  010C48  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14872  010C4A  EC02  F0C5         	call	_strcmp	;wreg free
 14873  010C4E  0101               	movlb	1	; () banked
 14874  010C50  5117               	movf	?_strcmp& (0+255),w,b
 14875  010C52  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14876  010C54  A4D8               	btfss	status,2,c
 14877  010C56  D019               	goto	l1372
 14878                           
 14879                           ; BSR set to: 1
 14880                           ;ring_buffer_LUT.c: 511: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14881  010C58  0E00               	movlw	0
 14882  010C5A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14883  010C5C  0E00               	movlw	0
 14884  010C5E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14885  010C60  0E02               	movlw	2
 14886  010C62  EC1A  F0A1         	call	_terminal_textAttributes
 14887                           
 14888                           ;ring_buffer_LUT.c: 512: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 14889  010C66  0E29               	movlw	low STR_117
 14890  010C68  0101               	movlb	1	; () banked
 14891  010C6A  6F82               	movwf	printf@f& (0+255),b
 14892  010C6C  0EF5               	movlw	high STR_117
 14893  010C6E  6F83               	movwf	(printf@f+1)& (0+255),b
 14894  010C70  C21C  F184         	movff	_dev_on_time,?_printf+2	;volatile
 14895  010C74  C21D  F185         	movff	_dev_on_time+1,?_printf+3	;volatile
 14896  010C78  C21E  F186         	movff	_dev_on_time+2,?_printf+4	;volatile
 14897  010C7C  C21F  F187         	movff	_dev_on_time+3,?_printf+5	;volatile
 14898  010C80  ECCF  F089         	call	_printf	;wreg free
 14899                           
 14900                           ;ring_buffer_LUT.c: 513: terminal_textAttributesReset();
 14901  010C84  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14902                           
 14903                           ;ring_buffer_LUT.c: 515: }
 14904  010C88  0012               	return	
 14905  010C8A                     l1372:
 14906                           
 14907                           ;ring_buffer_LUT.c: 518: else if((0 == strcmp(line, "Load On Time?"))) {
 14908  010C8A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14909  010C8E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14910  010C92  0EC4               	movlw	low STR_118
 14911  010C94  0101               	movlb	1	; () banked
 14912  010C96  6F19               	movwf	strcmp@s2& (0+255),b
 14913  010C98  0EFE               	movlw	high STR_118
 14914  010C9A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14915  010C9C  EC02  F0C5         	call	_strcmp	;wreg free
 14916  010CA0  0101               	movlb	1	; () banked
 14917  010CA2  5117               	movf	?_strcmp& (0+255),w,b
 14918  010CA4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14919  010CA6  A4D8               	btfss	status,2,c
 14920  010CA8  D019               	goto	l1374
 14921                           
 14922                           ; BSR set to: 1
 14923                           ;ring_buffer_LUT.c: 520: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14924  010CAA  0E00               	movlw	0
 14925  010CAC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14926  010CAE  0E00               	movlw	0
 14927  010CB0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14928  010CB2  0E02               	movlw	2
 14929  010CB4  EC1A  F0A1         	call	_terminal_textAttributes
 14930                           
 14931                           ;ring_buffer_LUT.c: 521: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 14932  010CB8  0EE3               	movlw	low STR_119
 14933  010CBA  0101               	movlb	1	; () banked
 14934  010CBC  6F82               	movwf	printf@f& (0+255),b
 14935  010CBE  0EF6               	movlw	high STR_119
 14936  010CC0  6F83               	movwf	(printf@f+1)& (0+255),b
 14937  010CC2  C218  F184         	movff	_load_on_time,?_printf+2	;volatile
 14938  010CC6  C219  F185         	movff	_load_on_time+1,?_printf+3	;volatile
 14939  010CCA  C21A  F186         	movff	_load_on_time+2,?_printf+4	;volatile
 14940  010CCE  C21B  F187         	movff	_load_on_time+3,?_printf+5	;volatile
 14941  010CD2  ECCF  F089         	call	_printf	;wreg free
 14942                           
 14943                           ;ring_buffer_LUT.c: 522: terminal_textAttributesReset();
 14944  010CD6  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 14945                           
 14946                           ;ring_buffer_LUT.c: 524: }
 14947  010CDA  0012               	return	
 14948  010CDC                     l1374:
 14949                           
 14950                           ;ring_buffer_LUT.c: 527: else if((0 == strcmp(line, "Max RMS Current?"))) {
 14951  010CDC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14952  010CE0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14953  010CE4  0ECC               	movlw	low STR_120
 14954  010CE6  0101               	movlb	1	; () banked
 14955  010CE8  6F19               	movwf	strcmp@s2& (0+255),b
 14956  010CEA  0EFD               	movlw	high STR_120
 14957  010CEC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14958  010CEE  EC02  F0C5         	call	_strcmp	;wreg free
 14959  010CF2  0101               	movlb	1	; () banked
 14960  010CF4  5117               	movf	?_strcmp& (0+255),w,b
 14961  010CF6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14962  010CF8  A4D8               	btfss	status,2,c
 14963  010CFA  D030               	goto	l1376
 14964                           
 14965                           ; BSR set to: 1
 14966                           ;ring_buffer_LUT.c: 530: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 14967  010CFC  0EFD               	movlw	low _max_Irms_address
 14968  010CFE  6EF6               	movwf	tblptrl,c
 14969  010D00                     	if	1	;There is more than 1 active tblptr byte
 14970  010D00  0ED8               	movlw	high _max_Irms_address
 14971  010D02  6EF7               	movwf	tblptrh,c
 14972  010D04                     	endif
 14973  010D04                     	if	1	;There are 3 active tblptr bytes
 14974  010D04  0E00               	movlw	low (_max_Irms_address shr (0+16))
 14975  010D06  6EF8               	movwf	tblptru,c
 14976  010D08                     	endif
 14977  010D08  0009               	tblrd		*+
 14978  010D0A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 14979  010D0E  000A               	tblrd		*-
 14980  010D10  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 14981  010D14  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 14982  010D18  C119  F2AD         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 14983  010D1C  C11A  F2AE         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 14984  010D20  C11B  F2AF         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 14985  010D24  C11C  F2B0         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 14986                           
 14987                           ;ring_buffer_LUT.c: 532: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14988  010D28  0E00               	movlw	0
 14989  010D2A  0101               	movlb	1	; () banked
 14990  010D2C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14991  010D2E  0E00               	movlw	0
 14992  010D30  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14993  010D32  0E06               	movlw	6
 14994  010D34  EC1A  F0A1         	call	_terminal_textAttributes
 14995                           
 14996                           ;ring_buffer_LUT.c: 533: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 14997  010D38  0E80               	movlw	low STR_121
 14998  010D3A  0101               	movlb	1	; () banked
 14999  010D3C  6F82               	movwf	printf@f& (0+255),b
 15000  010D3E  0EF7               	movlw	high STR_121
 15001  010D40  6F83               	movwf	(printf@f+1)& (0+255),b
 15002  010D42  C2AD  F184         	movff	ringBufferLUT@max_current_print,?_printf+2
 15003  010D46  C2AE  F185         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 15004  010D4A  C2AF  F186         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 15005  010D4E  C2B0  F187         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 15006  010D52  ECCF  F089         	call	_printf	;wreg free
 15007                           
 15008                           ;ring_buffer_LUT.c: 534: terminal_textAttributesReset();
 15009  010D56  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15010                           
 15011                           ;ring_buffer_LUT.c: 536: }
 15012  010D5A  0012               	return	
 15013  010D5C                     l1376:
 15014                           
 15015                           ;ring_buffer_LUT.c: 539: else if((0 == strcmp(line, "Max Power?"))) {
 15016  010D5C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15017  010D60  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15018  010D64  0E53               	movlw	low STR_122
 15019  010D66  0101               	movlb	1	; () banked
 15020  010D68  6F19               	movwf	strcmp@s2& (0+255),b
 15021  010D6A  0EFF               	movlw	high STR_122
 15022  010D6C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15023  010D6E  EC02  F0C5         	call	_strcmp	;wreg free
 15024  010D72  0101               	movlb	1	; () banked
 15025  010D74  5117               	movf	?_strcmp& (0+255),w,b
 15026  010D76  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15027  010D78  A4D8               	btfss	status,2,c
 15028  010D7A  D030               	goto	l1378
 15029                           
 15030                           ; BSR set to: 1
 15031                           ;ring_buffer_LUT.c: 542: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 15032  010D7C  0EFB               	movlw	low _max_Power_address
 15033  010D7E  6EF6               	movwf	tblptrl,c
 15034  010D80                     	if	1	;There is more than 1 active tblptr byte
 15035  010D80  0ED8               	movlw	high _max_Power_address
 15036  010D82  6EF7               	movwf	tblptrh,c
 15037  010D84                     	endif
 15038  010D84                     	if	1	;There are 3 active tblptr bytes
 15039  010D84  0E00               	movlw	low (_max_Power_address shr (0+16))
 15040  010D86  6EF8               	movwf	tblptru,c
 15041  010D88                     	endif
 15042  010D88  0009               	tblrd		*+
 15043  010D8A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15044  010D8E  000A               	tblrd		*-
 15045  010D90  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15046  010D94  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 15047  010D98  C119  F2B1         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 15048  010D9C  C11A  F2B2         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 15049  010DA0  C11B  F2B3         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 15050  010DA4  C11C  F2B4         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 15051                           
 15052                           ;ring_buffer_LUT.c: 544: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15053  010DA8  0E00               	movlw	0
 15054  010DAA  0101               	movlb	1	; () banked
 15055  010DAC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15056  010DAE  0E00               	movlw	0
 15057  010DB0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15058  010DB2  0E06               	movlw	6
 15059  010DB4  EC1A  F0A1         	call	_terminal_textAttributes
 15060                           
 15061                           ;ring_buffer_LUT.c: 545: printf("Maximum recorded output power is %.3f Watts\n\r", max_P
      +                          ower_print);
 15062  010DB8  0EA1               	movlw	low STR_123
 15063  010DBA  0101               	movlb	1	; () banked
 15064  010DBC  6F82               	movwf	printf@f& (0+255),b
 15065  010DBE  0EF8               	movlw	high STR_123
 15066  010DC0  6F83               	movwf	(printf@f+1)& (0+255),b
 15067  010DC2  C2B1  F184         	movff	ringBufferLUT@max_Power_print,?_printf+2
 15068  010DC6  C2B2  F185         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 15069  010DCA  C2B3  F186         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 15070  010DCE  C2B4  F187         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 15071  010DD2  ECCF  F089         	call	_printf	;wreg free
 15072                           
 15073                           ;ring_buffer_LUT.c: 546: terminal_textAttributesReset();
 15074  010DD6  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15075                           
 15076                           ;ring_buffer_LUT.c: 548: }
 15077  010DDA  0012               	return	
 15078  010DDC                     l1378:
 15079                           
 15080                           ;ring_buffer_LUT.c: 551: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 15081  010DDC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15082  010DE0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15083  010DE4  0E2B               	movlw	low STR_124
 15084  010DE6  0101               	movlb	1	; () banked
 15085  010DE8  6F19               	movwf	strcmp@s2& (0+255),b
 15086  010DEA  0EFD               	movlw	high STR_124
 15087  010DEC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15088  010DEE  EC02  F0C5         	call	_strcmp	;wreg free
 15089  010DF2  0101               	movlb	1	; () banked
 15090  010DF4  5117               	movf	?_strcmp& (0+255),w,b
 15091  010DF6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15092  010DF8  A4D8               	btfss	status,2,c
 15093  010DFA  D030               	goto	l1380
 15094                           
 15095                           ; BSR set to: 1
 15096                           ;ring_buffer_LUT.c: 554: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 15097  010DFC  0EF9               	movlw	low _max_POS3P3_ADC_Result_address
 15098  010DFE  6EF6               	movwf	tblptrl,c
 15099  010E00                     	if	1	;There is more than 1 active tblptr byte
 15100  010E00  0ED8               	movlw	high _max_POS3P3_ADC_Result_address
 15101  010E02  6EF7               	movwf	tblptrh,c
 15102  010E04                     	endif
 15103  010E04                     	if	1	;There are 3 active tblptr bytes
 15104  010E04  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 15105  010E06  6EF8               	movwf	tblptru,c
 15106  010E08                     	endif
 15107  010E08  0009               	tblrd		*+
 15108  010E0A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15109  010E0E  000A               	tblrd		*-
 15110  010E10  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15111  010E14  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 15112  010E18  C119  F2B5         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 15113  010E1C  C11A  F2B6         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 15114  010E20  C11B  F2B7         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 15115  010E24  C11C  F2B8         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 15116                           
 15117                           ;ring_buffer_LUT.c: 556: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15118  010E28  0E00               	movlw	0
 15119  010E2A  0101               	movlb	1	; () banked
 15120  010E2C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15121  010E2E  0E00               	movlw	0
 15122  010E30  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15123  010E32  0E06               	movlw	6
 15124  010E34  EC1A  F0A1         	call	_terminal_textAttributes
 15125                           
 15126                           ;ring_buffer_LUT.c: 557: printf("Maximum recorded +3.3V rail voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 15127  010E38  0E4C               	movlw	low STR_125
 15128  010E3A  0101               	movlb	1	; () banked
 15129  010E3C  6F82               	movwf	printf@f& (0+255),b
 15130  010E3E  0EF7               	movlw	high STR_125
 15131  010E40  6F83               	movwf	(printf@f+1)& (0+255),b
 15132  010E42  C2B5  F184         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 15133  010E46  C2B6  F185         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 15134  010E4A  C2B7  F186         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 15135  010E4E  C2B8  F187         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 15136  010E52  ECCF  F089         	call	_printf	;wreg free
 15137                           
 15138                           ;ring_buffer_LUT.c: 558: terminal_textAttributesReset();
 15139  010E56  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15140                           
 15141                           ;ring_buffer_LUT.c: 560: }
 15142  010E5A  0012               	return	
 15143  010E5C                     l1380:
 15144                           
 15145                           ;ring_buffer_LUT.c: 563: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 15146  010E5C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15147  010E60  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15148  010E64  0E52               	movlw	low STR_126
 15149  010E66  0101               	movlb	1	; () banked
 15150  010E68  6F19               	movwf	strcmp@s2& (0+255),b
 15151  010E6A  0EFD               	movlw	high STR_126
 15152  010E6C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15153  010E6E  EC02  F0C5         	call	_strcmp	;wreg free
 15154  010E72  0101               	movlb	1	; () banked
 15155  010E74  5117               	movf	?_strcmp& (0+255),w,b
 15156  010E76  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15157  010E78  A4D8               	btfss	status,2,c
 15158  010E7A  D030               	goto	l1382
 15159                           
 15160                           ; BSR set to: 1
 15161                           ;ring_buffer_LUT.c: 566: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 15162  010E7C  0EF7               	movlw	low _max_POS12_ADC_Result_address
 15163  010E7E  6EF6               	movwf	tblptrl,c
 15164  010E80                     	if	1	;There is more than 1 active tblptr byte
 15165  010E80  0ED8               	movlw	high _max_POS12_ADC_Result_address
 15166  010E82  6EF7               	movwf	tblptrh,c
 15167  010E84                     	endif
 15168  010E84                     	if	1	;There are 3 active tblptr bytes
 15169  010E84  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 15170  010E86  6EF8               	movwf	tblptru,c
 15171  010E88                     	endif
 15172  010E88  0009               	tblrd		*+
 15173  010E8A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15174  010E8E  000A               	tblrd		*-
 15175  010E90  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15176  010E94  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 15177  010E98  C119  F2B9         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_2870
 15178  010E9C  C11A  F2BA         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_2870+1
 15179  010EA0  C11B  F2BB         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_2870+2
 15180  010EA4  C11C  F2BC         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_2870+3
 15181                           
 15182                           ;ring_buffer_LUT.c: 568: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15183  010EA8  0E00               	movlw	0
 15184  010EAA  0101               	movlb	1	; () banked
 15185  010EAC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15186  010EAE  0E00               	movlw	0
 15187  010EB0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15188  010EB2  0E06               	movlw	6
 15189  010EB4  EC1A  F0A1         	call	_terminal_textAttributes
 15190                           
 15191                           ;ring_buffer_LUT.c: 569: printf("Maximum recorded +12V rail voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 15192  010EB8  0EB3               	movlw	low STR_127
 15193  010EBA  0101               	movlb	1	; () banked
 15194  010EBC  6F82               	movwf	printf@f& (0+255),b
 15195  010EBE  0EF7               	movlw	high STR_127
 15196  010EC0  6F83               	movwf	(printf@f+1)& (0+255),b
 15197  010EC2  C2B9  F184         	movff	ringBufferLUT@max_voltage_print_2870,?_printf+2
 15198  010EC6  C2BA  F185         	movff	ringBufferLUT@max_voltage_print_2870+1,?_printf+3
 15199  010ECA  C2BB  F186         	movff	ringBufferLUT@max_voltage_print_2870+2,?_printf+4
 15200  010ECE  C2BC  F187         	movff	ringBufferLUT@max_voltage_print_2870+3,?_printf+5
 15201  010ED2  ECCF  F089         	call	_printf	;wreg free
 15202                           
 15203                           ;ring_buffer_LUT.c: 570: terminal_textAttributesReset();
 15204  010ED6  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15205                           
 15206                           ;ring_buffer_LUT.c: 572: }
 15207  010EDA  0012               	return	
 15208  010EDC                     l1382:
 15209                           
 15210                           ;ring_buffer_LUT.c: 575: else if((0 == strcmp(line, "Max Die Temp?"))) {
 15211  010EDC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15212  010EE0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15213  010EE4  0ED2               	movlw	low STR_128
 15214  010EE6  0101               	movlb	1	; () banked
 15215  010EE8  6F19               	movwf	strcmp@s2& (0+255),b
 15216  010EEA  0EFE               	movlw	high STR_128
 15217  010EEC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15218  010EEE  EC02  F0C5         	call	_strcmp	;wreg free
 15219  010EF2  0101               	movlb	1	; () banked
 15220  010EF4  5117               	movf	?_strcmp& (0+255),w,b
 15221  010EF6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15222  010EF8  A4D8               	btfss	status,2,c
 15223  010EFA  D030               	goto	l1384
 15224                           
 15225                           ; BSR set to: 1
 15226                           ;ring_buffer_LUT.c: 578: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 15227  010EFC  0EF5               	movlw	low _max_Temp_ADC_Result_address
 15228  010EFE  6EF6               	movwf	tblptrl,c
 15229  010F00                     	if	1	;There is more than 1 active tblptr byte
 15230  010F00  0ED8               	movlw	high _max_Temp_ADC_Result_address
 15231  010F02  6EF7               	movwf	tblptrh,c
 15232  010F04                     	endif
 15233  010F04                     	if	1	;There are 3 active tblptr bytes
 15234  010F04  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 15235  010F06  6EF8               	movwf	tblptru,c
 15236  010F08                     	endif
 15237  010F08  0009               	tblrd		*+
 15238  010F0A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15239  010F0E  000A               	tblrd		*-
 15240  010F10  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15241  010F14  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 15242  010F18  C119  F2BD         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 15243  010F1C  C11A  F2BE         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 15244  010F20  C11B  F2BF         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 15245  010F24  C11C  F2C0         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 15246                           
 15247                           ;ring_buffer_LUT.c: 580: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15248  010F28  0E00               	movlw	0
 15249  010F2A  0101               	movlb	1	; () banked
 15250  010F2C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15251  010F2E  0E00               	movlw	0
 15252  010F30  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15253  010F32  0E06               	movlw	6
 15254  010F34  EC1A  F0A1         	call	_terminal_textAttributes
 15255                           
 15256                           ;ring_buffer_LUT.c: 581: printf("Maximum recorded die temperature is %.3f C\n\r", max_te
      +                          mp_print);
 15257  010F38  0ECF               	movlw	low STR_129
 15258  010F3A  0101               	movlb	1	; () banked
 15259  010F3C  6F82               	movwf	printf@f& (0+255),b
 15260  010F3E  0EF8               	movlw	high STR_129
 15261  010F40  6F83               	movwf	(printf@f+1)& (0+255),b
 15262  010F42  C2BD  F184         	movff	ringBufferLUT@max_temp_print,?_printf+2
 15263  010F46  C2BE  F185         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 15264  010F4A  C2BF  F186         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 15265  010F4E  C2C0  F187         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 15266  010F52  ECCF  F089         	call	_printf	;wreg free
 15267                           
 15268                           ;ring_buffer_LUT.c: 582: terminal_textAttributesReset();
 15269  010F56  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15270                           
 15271                           ;ring_buffer_LUT.c: 584: }
 15272  010F5A  0012               	return	
 15273  010F5C                     l1384:
 15274                           
 15275                           ;ring_buffer_LUT.c: 587: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 15276  010F5C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15277  010F60  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15278  010F64  0EAA               	movlw	low STR_130
 15279  010F66  0101               	movlb	1	; () banked
 15280  010F68  6F19               	movwf	strcmp@s2& (0+255),b
 15281  010F6A  0EFD               	movlw	high STR_130
 15282  010F6C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15283  010F6E  EC02  F0C5         	call	_strcmp	;wreg free
 15284  010F72  0101               	movlb	1	; () banked
 15285  010F74  5117               	movf	?_strcmp& (0+255),w,b
 15286  010F76  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15287  010F78  A4D8               	btfss	status,2,c
 15288  010F7A  D030               	goto	l1386
 15289                           
 15290                           ; BSR set to: 1
 15291                           ;ring_buffer_LUT.c: 590: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 15292  010F7C  0EF3               	movlw	low _max_FVR_ADC_Result_address
 15293  010F7E  6EF6               	movwf	tblptrl,c
 15294  010F80                     	if	1	;There is more than 1 active tblptr byte
 15295  010F80  0ED8               	movlw	high _max_FVR_ADC_Result_address
 15296  010F82  6EF7               	movwf	tblptrh,c
 15297  010F84                     	endif
 15298  010F84                     	if	1	;There are 3 active tblptr bytes
 15299  010F84  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 15300  010F86  6EF8               	movwf	tblptru,c
 15301  010F88                     	endif
 15302  010F88  0009               	tblrd		*+
 15303  010F8A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15304  010F8E  000A               	tblrd		*-
 15305  010F90  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15306  010F94  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 15307  010F98  C119  F2C1         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_2876
 15308  010F9C  C11A  F2C2         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_2876+1
 15309  010FA0  C11B  F2C3         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_2876+2
 15310  010FA4  C11C  F2C4         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_2876+3
 15311                           
 15312                           ;ring_buffer_LUT.c: 592: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15313  010FA8  0E00               	movlw	0
 15314  010FAA  0101               	movlb	1	; () banked
 15315  010FAC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15316  010FAE  0E00               	movlw	0
 15317  010FB0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15318  010FB2  0E06               	movlw	6
 15319  010FB4  EC1A  F0A1         	call	_terminal_textAttributes
 15320                           
 15321                           ;ring_buffer_LUT.c: 593: printf("Maximum recorded FVR buffer 1 voltage is %.3f Volts\n\r
      +                          ", max_voltage_print);
 15322  010FB8  0E78               	movlw	low STR_131
 15323  010FBA  0101               	movlb	1	; () banked
 15324  010FBC  6F82               	movwf	printf@f& (0+255),b
 15325  010FBE  0EF6               	movlw	high STR_131
 15326  010FC0  6F83               	movwf	(printf@f+1)& (0+255),b
 15327  010FC2  C2C1  F184         	movff	ringBufferLUT@max_voltage_print_2876,?_printf+2
 15328  010FC6  C2C2  F185         	movff	ringBufferLUT@max_voltage_print_2876+1,?_printf+3
 15329  010FCA  C2C3  F186         	movff	ringBufferLUT@max_voltage_print_2876+2,?_printf+4
 15330  010FCE  C2C4  F187         	movff	ringBufferLUT@max_voltage_print_2876+3,?_printf+5
 15331  010FD2  ECCF  F089         	call	_printf	;wreg free
 15332                           
 15333                           ;ring_buffer_LUT.c: 594: terminal_textAttributesReset();
 15334  010FD6  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15335                           
 15336                           ;ring_buffer_LUT.c: 596: }
 15337  010FDA  0012               	return	
 15338  010FDC                     l1386:
 15339                           
 15340                           ;ring_buffer_LUT.c: 599: else if((0 == strcmp(line, "Clear Max Values"))) {
 15341  010FDC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15342  010FE0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15343  010FE4  0EDD               	movlw	low STR_132
 15344  010FE6  0101               	movlb	1	; () banked
 15345  010FE8  6F19               	movwf	strcmp@s2& (0+255),b
 15346  010FEA  0EFD               	movlw	high STR_132
 15347  010FEC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15348  010FEE  EC02  F0C5         	call	_strcmp	;wreg free
 15349  010FF2  0101               	movlb	1	; () banked
 15350  010FF4  5117               	movf	?_strcmp& (0+255),w,b
 15351  010FF6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15352  010FF8  A4D8               	btfss	status,2,c
 15353  010FFA  D0CC               	goto	l1388
 15354                           
 15355                           ; BSR set to: 1
 15356                           ;ring_buffer_LUT.c: 602: writeDoubleToEEPROM(0.0, max_Irms_address);
 15357  010FFC  0E00               	movlw	0
 15358  010FFE  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15359  011000  0E00               	movlw	0
 15360  011002  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15361  011004  0E00               	movlw	0
 15362  011006  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15363  011008  0E00               	movlw	0
 15364  01100A  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15365  01100C  0EFD               	movlw	low _max_Irms_address
 15366  01100E  6EF6               	movwf	tblptrl,c
 15367  011010                     	if	1	;There is more than 1 active tblptr byte
 15368  011010  0ED8               	movlw	high _max_Irms_address
 15369  011012  6EF7               	movwf	tblptrh,c
 15370  011014                     	endif
 15371  011014                     	if	1	;There are 3 active tblptr bytes
 15372  011014  0E00               	movlw	low (_max_Irms_address shr (0+16))
 15373  011016  6EF8               	movwf	tblptru,c
 15374  011018                     	endif
 15375  011018  0009               	tblrd		*+
 15376  01101A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15377  01101E  000A               	tblrd		*-
 15378  011020  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15379  011024  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15380                           
 15381                           ;ring_buffer_LUT.c: 603: writeDoubleToEEPROM(0.0, max_Power_address);
 15382  011028  0E00               	movlw	0
 15383  01102A  0101               	movlb	1	; () banked
 15384  01102C  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15385  01102E  0E00               	movlw	0
 15386  011030  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15387  011032  0E00               	movlw	0
 15388  011034  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15389  011036  0E00               	movlw	0
 15390  011038  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15391  01103A  0EFB               	movlw	low _max_Power_address
 15392  01103C  6EF6               	movwf	tblptrl,c
 15393  01103E                     	if	1	;There is more than 1 active tblptr byte
 15394  01103E  0ED8               	movlw	high _max_Power_address
 15395  011040  6EF7               	movwf	tblptrh,c
 15396  011042                     	endif
 15397  011042                     	if	1	;There are 3 active tblptr bytes
 15398  011042  0E00               	movlw	low (_max_Power_address shr (0+16))
 15399  011044  6EF8               	movwf	tblptru,c
 15400  011046                     	endif
 15401  011046  0009               	tblrd		*+
 15402  011048  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15403  01104C  000A               	tblrd		*-
 15404  01104E  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15405  011052  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15406                           
 15407                           ;ring_buffer_LUT.c: 604: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 15408  011056  0E00               	movlw	0
 15409  011058  0101               	movlb	1	; () banked
 15410  01105A  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15411  01105C  0E00               	movlw	0
 15412  01105E  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15413  011060  0E00               	movlw	0
 15414  011062  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15415  011064  0E00               	movlw	0
 15416  011066  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15417  011068  0EF9               	movlw	low _max_POS3P3_ADC_Result_address
 15418  01106A  6EF6               	movwf	tblptrl,c
 15419  01106C                     	if	1	;There is more than 1 active tblptr byte
 15420  01106C  0ED8               	movlw	high _max_POS3P3_ADC_Result_address
 15421  01106E  6EF7               	movwf	tblptrh,c
 15422  011070                     	endif
 15423  011070                     	if	1	;There are 3 active tblptr bytes
 15424  011070  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 15425  011072  6EF8               	movwf	tblptru,c
 15426  011074                     	endif
 15427  011074  0009               	tblrd		*+
 15428  011076  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15429  01107A  000A               	tblrd		*-
 15430  01107C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15431  011080  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15432                           
 15433                           ;ring_buffer_LUT.c: 605: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 15434  011084  0E00               	movlw	0
 15435  011086  0101               	movlb	1	; () banked
 15436  011088  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15437  01108A  0E00               	movlw	0
 15438  01108C  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15439  01108E  0E00               	movlw	0
 15440  011090  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15441  011092  0E00               	movlw	0
 15442  011094  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15443  011096  0EF7               	movlw	low _max_POS12_ADC_Result_address
 15444  011098  6EF6               	movwf	tblptrl,c
 15445  01109A                     	if	1	;There is more than 1 active tblptr byte
 15446  01109A  0ED8               	movlw	high _max_POS12_ADC_Result_address
 15447  01109C  6EF7               	movwf	tblptrh,c
 15448  01109E                     	endif
 15449  01109E                     	if	1	;There are 3 active tblptr bytes
 15450  01109E  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 15451  0110A0  6EF8               	movwf	tblptru,c
 15452  0110A2                     	endif
 15453  0110A2  0009               	tblrd		*+
 15454  0110A4  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15455  0110A8  000A               	tblrd		*-
 15456  0110AA  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15457  0110AE  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15458                           
 15459                           ;ring_buffer_LUT.c: 606: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 15460  0110B2  0E00               	movlw	0
 15461  0110B4  0101               	movlb	1	; () banked
 15462  0110B6  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15463  0110B8  0E00               	movlw	0
 15464  0110BA  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15465  0110BC  0E00               	movlw	0
 15466  0110BE  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15467  0110C0  0E00               	movlw	0
 15468  0110C2  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15469  0110C4  0EF5               	movlw	low _max_Temp_ADC_Result_address
 15470  0110C6  6EF6               	movwf	tblptrl,c
 15471  0110C8                     	if	1	;There is more than 1 active tblptr byte
 15472  0110C8  0ED8               	movlw	high _max_Temp_ADC_Result_address
 15473  0110CA  6EF7               	movwf	tblptrh,c
 15474  0110CC                     	endif
 15475  0110CC                     	if	1	;There are 3 active tblptr bytes
 15476  0110CC  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 15477  0110CE  6EF8               	movwf	tblptru,c
 15478  0110D0                     	endif
 15479  0110D0  0009               	tblrd		*+
 15480  0110D2  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15481  0110D6  000A               	tblrd		*-
 15482  0110D8  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15483  0110DC  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15484                           
 15485                           ;ring_buffer_LUT.c: 607: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 15486  0110E0  0E00               	movlw	0
 15487  0110E2  0101               	movlb	1	; () banked
 15488  0110E4  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15489  0110E6  0E00               	movlw	0
 15490  0110E8  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15491  0110EA  0E00               	movlw	0
 15492  0110EC  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15493  0110EE  0E00               	movlw	0
 15494  0110F0  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15495  0110F2  0EF3               	movlw	low _max_FVR_ADC_Result_address
 15496  0110F4  6EF6               	movwf	tblptrl,c
 15497  0110F6                     	if	1	;There is more than 1 active tblptr byte
 15498  0110F6  0ED8               	movlw	high _max_FVR_ADC_Result_address
 15499  0110F8  6EF7               	movwf	tblptrh,c
 15500  0110FA                     	endif
 15501  0110FA                     	if	1	;There are 3 active tblptr bytes
 15502  0110FA  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 15503  0110FC  6EF8               	movwf	tblptru,c
 15504  0110FE                     	endif
 15505  0110FE  0009               	tblrd		*+
 15506  011100  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15507  011104  000A               	tblrd		*-
 15508  011106  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15509  01110A  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 15510                           
 15511                           ;ring_buffer_LUT.c: 610: max_Irms = 0.0;
 15512  01110E  0E00               	movlw	0
 15513  011110  0102               	movlb	2	; () banked
 15514  011112  6F14               	movwf	_max_Irms& (0+255),b	;volatile
 15515  011114  0E00               	movlw	0
 15516  011116  6F15               	movwf	(_max_Irms+1)& (0+255),b	;volatile
 15517  011118  0E00               	movlw	0
 15518  01111A  6F16               	movwf	(_max_Irms+2)& (0+255),b	;volatile
 15519  01111C  0E00               	movlw	0
 15520  01111E  6F17               	movwf	(_max_Irms+3)& (0+255),b	;volatile
 15521                           
 15522                           ; BSR set to: 2
 15523                           ;ring_buffer_LUT.c: 611: max_Power = 0.0;
 15524  011120  0E00               	movlw	0
 15525  011122  6F10               	movwf	_max_Power& (0+255),b	;volatile
 15526  011124  0E00               	movlw	0
 15527  011126  6F11               	movwf	(_max_Power+1)& (0+255),b	;volatile
 15528  011128  0E00               	movlw	0
 15529  01112A  6F12               	movwf	(_max_Power+2)& (0+255),b	;volatile
 15530  01112C  0E00               	movlw	0
 15531  01112E  6F13               	movwf	(_max_Power+3)& (0+255),b	;volatile
 15532                           
 15533                           ; BSR set to: 2
 15534                           ;ring_buffer_LUT.c: 612: max_POS3P3_ADC_Result = 0.0;
 15535  011130  0E00               	movlw	0
 15536  011132  6F0C               	movwf	_max_POS3P3_ADC_Result& (0+255),b	;volatile
 15537  011134  0E00               	movlw	0
 15538  011136  6F0D               	movwf	(_max_POS3P3_ADC_Result+1)& (0+255),b	;volatile
 15539  011138  0E00               	movlw	0
 15540  01113A  6F0E               	movwf	(_max_POS3P3_ADC_Result+2)& (0+255),b	;volatile
 15541  01113C  0E00               	movlw	0
 15542  01113E  6F0F               	movwf	(_max_POS3P3_ADC_Result+3)& (0+255),b	;volatile
 15543                           
 15544                           ; BSR set to: 2
 15545                           ;ring_buffer_LUT.c: 613: max_POS12_ADC_Result = 0.0;
 15546  011140  0E00               	movlw	0
 15547  011142  6F08               	movwf	_max_POS12_ADC_Result& (0+255),b	;volatile
 15548  011144  0E00               	movlw	0
 15549  011146  6F09               	movwf	(_max_POS12_ADC_Result+1)& (0+255),b	;volatile
 15550  011148  0E00               	movlw	0
 15551  01114A  6F0A               	movwf	(_max_POS12_ADC_Result+2)& (0+255),b	;volatile
 15552  01114C  0E00               	movlw	0
 15553  01114E  6F0B               	movwf	(_max_POS12_ADC_Result+3)& (0+255),b	;volatile
 15554                           
 15555                           ; BSR set to: 2
 15556                           ;ring_buffer_LUT.c: 614: max_Temp_ADC_Result = 0.0;
 15557  011150  0E00               	movlw	0
 15558  011152  6F04               	movwf	_max_Temp_ADC_Result& (0+255),b	;volatile
 15559  011154  0E00               	movlw	0
 15560  011156  6F05               	movwf	(_max_Temp_ADC_Result+1)& (0+255),b	;volatile
 15561  011158  0E00               	movlw	0
 15562  01115A  6F06               	movwf	(_max_Temp_ADC_Result+2)& (0+255),b	;volatile
 15563  01115C  0E00               	movlw	0
 15564  01115E  6F07               	movwf	(_max_Temp_ADC_Result+3)& (0+255),b	;volatile
 15565                           
 15566                           ; BSR set to: 2
 15567                           ;ring_buffer_LUT.c: 615: max_FVR_ADC_Result = 0.0;
 15568  011160  0E00               	movlw	0
 15569  011162  6F00               	movwf	_max_FVR_ADC_Result& (0+255),b	;volatile
 15570  011164  0E00               	movlw	0
 15571  011166  6F01               	movwf	(_max_FVR_ADC_Result+1)& (0+255),b	;volatile
 15572  011168  0E00               	movlw	0
 15573  01116A  6F02               	movwf	(_max_FVR_ADC_Result+2)& (0+255),b	;volatile
 15574  01116C  0E00               	movlw	0
 15575  01116E  6F03               	movwf	(_max_FVR_ADC_Result+3)& (0+255),b	;volatile
 15576                           
 15577                           ; BSR set to: 2
 15578                           ;ring_buffer_LUT.c: 617: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15579  011170  0E00               	movlw	0
 15580  011172  0101               	movlb	1	; () banked
 15581  011174  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15582  011176  0E00               	movlw	0
 15583  011178  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15584  01117A  0E02               	movlw	2
 15585  01117C  EC1A  F0A1         	call	_terminal_textAttributes
 15586                           
 15587                           ;ring_buffer_LUT.c: 618: printf("Maximum recorded values erased from SRAM and EEPROM\n\r
      +                          ");
 15588  011180  0E0C               	movlw	low STR_133
 15589  011182  0101               	movlb	1	; () banked
 15590  011184  6F82               	movwf	printf@f& (0+255),b
 15591  011186  0EF6               	movlw	high STR_133
 15592  011188  6F83               	movwf	(printf@f+1)& (0+255),b
 15593  01118A  ECCF  F089         	call	_printf	;wreg free
 15594                           
 15595                           ;ring_buffer_LUT.c: 619: terminal_textAttributesReset();
 15596  01118E  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15597                           
 15598                           ;ring_buffer_LUT.c: 621: }
 15599  011192  0012               	return	
 15600  011194                     l1388:
 15601                           
 15602                           ;ring_buffer_LUT.c: 625: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 15603  011194  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15604  011198  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15605  01119C  0ED6               	movlw	low STR_134
 15606  01119E  0101               	movlb	1	; () banked
 15607  0111A0  6F19               	movwf	strcmp@s2& (0+255),b
 15608  0111A2  0EFB               	movlw	high STR_134
 15609  0111A4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15610  0111A6  EC02  F0C5         	call	_strcmp	;wreg free
 15611  0111AA  0101               	movlb	1	; () banked
 15612  0111AC  5117               	movf	?_strcmp& (0+255),w,b
 15613  0111AE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15614  0111B0  A4D8               	btfss	status,2,c
 15615  0111B2  D011               	goto	l1390
 15616                           
 15617                           ; BSR set to: 1
 15618                           ;ring_buffer_LUT.c: 627: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15619  0111B4  0E00               	movlw	0
 15620  0111B6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15621  0111B8  0E00               	movlw	0
 15622  0111BA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15623  0111BC  0E03               	movlw	3
 15624  0111BE  EC1A  F0A1         	call	_terminal_textAttributes
 15625                           
 15626                           ;ring_buffer_LUT.c: 628: printf("List of supported Device Control Commands:\n\r"
 15627                           ;ring_buffer_LUT.c: 630: "   Reset: Clears the terminal and resets the micro\n\r"
 15628                           ;ring_buffer_LUT.c: 631: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 15629                           ;ring_buffer_LUT.c: 632: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 15630                           ;ring_buffer_LUT.c: 633: "   *IDN?: Returns device identification string\n\r"
 15631                           ;ring_buffer_LUT.c: 634: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 15632  0111C2  0E9A               	movlw	low STR_135
 15633  0111C4  0101               	movlb	1	; () banked
 15634  0111C6  6F82               	movwf	printf@f& (0+255),b
 15635  0111C8  0EE4               	movlw	high STR_135
 15636  0111CA  6F83               	movwf	(printf@f+1)& (0+255),b
 15637  0111CC  ECCF  F089         	call	_printf	;wreg free
 15638                           
 15639                           ;ring_buffer_LUT.c: 645: terminal_textAttributesReset();
 15640  0111D0  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15641                           
 15642                           ;ring_buffer_LUT.c: 647: }
 15643  0111D4  0012               	return	
 15644  0111D6                     l1390:
 15645                           
 15646                           ;ring_buffer_LUT.c: 650: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 15647  0111D6  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15648  0111DA  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15649  0111DE  0E3B               	movlw	low STR_136
 15650  0111E0  0101               	movlb	1	; () banked
 15651  0111E2  6F19               	movwf	strcmp@s2& (0+255),b
 15652  0111E4  0EFB               	movlw	high STR_136
 15653  0111E6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15654  0111E8  EC02  F0C5         	call	_strcmp	;wreg free
 15655  0111EC  0101               	movlb	1	; () banked
 15656  0111EE  5117               	movf	?_strcmp& (0+255),w,b
 15657  0111F0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15658  0111F2  A4D8               	btfss	status,2,c
 15659  0111F4  D011               	goto	l1392
 15660                           
 15661                           ; BSR set to: 1
 15662                           ;ring_buffer_LUT.c: 652: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15663  0111F6  0E00               	movlw	0
 15664  0111F8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15665  0111FA  0E00               	movlw	0
 15666  0111FC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15667  0111FE  0E03               	movlw	3
 15668  011200  EC1A  F0A1         	call	_terminal_textAttributes
 15669                           
 15670                           ;ring_buffer_LUT.c: 653: printf("List of supported Device Measurement Commands:\n\r"
 15671                           ;ring_buffer_LUT.c: 655: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 15672                           ;ring_buffer_LUT.c: 656: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 15673                           ;ring_buffer_LUT.c: 657: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 15674                           ;ring_buffer_LUT.c: 658: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 15675                           ;ring_buffer_LUT.c: 659: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 15676  011204  0E34               	movlw	low STR_137
 15677  011206  0101               	movlb	1	; () banked
 15678  011208  6F82               	movwf	printf@f& (0+255),b
 15679  01120A  0EE8               	movlw	high STR_137
 15680  01120C  6F83               	movwf	(printf@f+1)& (0+255),b
 15681  01120E  ECCF  F089         	call	_printf	;wreg free
 15682                           
 15683                           ;ring_buffer_LUT.c: 666: terminal_textAttributesReset();
 15684  011212  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15685                           
 15686                           ;ring_buffer_LUT.c: 668: }
 15687  011216  0012               	return	
 15688  011218                     l1392:
 15689                           
 15690                           ;ring_buffer_LUT.c: 671: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 15691  011218  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15692  01121C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15693  011220  0E19               	movlw	low STR_138
 15694  011222  0101               	movlb	1	; () banked
 15695  011224  6F19               	movwf	strcmp@s2& (0+255),b
 15696  011226  0EFB               	movlw	high STR_138
 15697  011228  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15698  01122A  EC02  F0C5         	call	_strcmp	;wreg free
 15699  01122E  0101               	movlb	1	; () banked
 15700  011230  5117               	movf	?_strcmp& (0+255),w,b
 15701  011232  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15702  011234  A4D8               	btfss	status,2,c
 15703  011236  D011               	goto	l1394
 15704                           
 15705                           ; BSR set to: 1
 15706                           ;ring_buffer_LUT.c: 673: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15707  011238  0E00               	movlw	0
 15708  01123A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15709  01123C  0E00               	movlw	0
 15710  01123E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15711  011240  0E03               	movlw	3
 15712  011242  EC1A  F0A1         	call	_terminal_textAttributes
 15713                           
 15714                           ;ring_buffer_LUT.c: 674: printf("List of supported Primary Measurement Commands:\n\r"
 15715                           ;ring_buffer_LUT.c: 676: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 15716                           ;ring_buffer_LUT.c: 677: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 15717                           ;ring_buffer_LUT.c: 678: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 15718                           ;ring_buffer_LUT.c: 679: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 15719  011246  0E04               	movlw	low STR_139
 15720  011248  0101               	movlb	1	; () banked
 15721  01124A  6F82               	movwf	printf@f& (0+255),b
 15722  01124C  0EEB               	movlw	high STR_139
 15723  01124E  6F83               	movwf	(printf@f+1)& (0+255),b
 15724  011250  ECCF  F089         	call	_printf	;wreg free
 15725                           
 15726                           ;ring_buffer_LUT.c: 685: terminal_textAttributesReset();
 15727  011254  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15728                           
 15729                           ;ring_buffer_LUT.c: 687: }
 15730  011258  0012               	return	
 15731  01125A                     l1394:
 15732                           
 15733                           ;ring_buffer_LUT.c: 690: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 15734  01125A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15735  01125E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15736  011262  0EF3               	movlw	low STR_140
 15737  011264  0101               	movlb	1	; () banked
 15738  011266  6F19               	movwf	strcmp@s2& (0+255),b
 15739  011268  0EFB               	movlw	high STR_140
 15740  01126A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15741  01126C  EC02  F0C5         	call	_strcmp	;wreg free
 15742  011270  0101               	movlb	1	; () banked
 15743  011272  5117               	movf	?_strcmp& (0+255),w,b
 15744  011274  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15745  011276  A4D8               	btfss	status,2,c
 15746  011278  D011               	goto	l1396
 15747                           
 15748                           ; BSR set to: 1
 15749                           ;ring_buffer_LUT.c: 692: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15750  01127A  0E00               	movlw	0
 15751  01127C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15752  01127E  0E00               	movlw	0
 15753  011280  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15754  011282  0E03               	movlw	3
 15755  011284  EC1A  F0A1         	call	_terminal_textAttributes
 15756                           
 15757                           ;ring_buffer_LUT.c: 693: printf("List of supported Output Control Commands:\n\r"
 15758                           ;ring_buffer_LUT.c: 695: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 15759                           ;ring_buffer_LUT.c: 696: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 15760                           ;ring_buffer_LUT.c: 697: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 15761                           ;ring_buffer_LUT.c: 698: "   Disable Load: Disables the output TRIAC completely\n\r"
 15762                           ;ring_buffer_LUT.c: 699: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 15763  011288  0E61               	movlw	low STR_141
 15764  01128A  0101               	movlb	1	; () banked
 15765  01128C  6F82               	movwf	printf@f& (0+255),b
 15766  01128E  0EED               	movlw	high STR_141
 15767  011290  6F83               	movwf	(printf@f+1)& (0+255),b
 15768  011292  ECCF  F089         	call	_printf	;wreg free
 15769                           
 15770                           ;ring_buffer_LUT.c: 704: terminal_textAttributesReset();
 15771  011296  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15772                           
 15773                           ;ring_buffer_LUT.c: 706: }
 15774  01129A  0012               	return	
 15775  01129C                     l1396:
 15776                           
 15777                           ;ring_buffer_LUT.c: 709: else if((0 == strcmp(line, "Help All"))) {
 15778  01129C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15779  0112A0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15780  0112A4  0E7D               	movlw	low STR_142
 15781  0112A6  0101               	movlb	1	; () banked
 15782  0112A8  6F19               	movwf	strcmp@s2& (0+255),b
 15783  0112AA  0EFF               	movlw	high STR_142
 15784  0112AC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15785  0112AE  EC02  F0C5         	call	_strcmp	;wreg free
 15786  0112B2  0101               	movlb	1	; () banked
 15787  0112B4  5117               	movf	?_strcmp& (0+255),w,b
 15788  0112B6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15789  0112B8  A4D8               	btfss	status,2,c
 15790  0112BA  D011               	goto	l1398
 15791                           
 15792                           ; BSR set to: 1
 15793                           ;ring_buffer_LUT.c: 711: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15794  0112BC  0E00               	movlw	0
 15795  0112BE  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15796  0112C0  0E00               	movlw	0
 15797  0112C2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15798  0112C4  0E03               	movlw	3
 15799  0112C6  EC1A  F0A1         	call	_terminal_textAttributes
 15800                           
 15801                           ;ring_buffer_LUT.c: 712: printf("List of all supported commands:\n\r"
 15802                           ;ring_buffer_LUT.c: 714: "Device Control Commands: Commands to view and control low leve
      +                          l system functionality\n\r"
 15803                           ;ring_buffer_LUT.c: 715: "   Reset: Clears the terminal and resets the micro\n\r"
 15804                           ;ring_buffer_LUT.c: 716: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 15805                           ;ring_buffer_LUT.c: 717: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 15806                           ;ring_buffer_LUT.c: 718: "   *IDN?: Returns device identification string\n\r"
 15807  0112CA  0E4F               	movlw	low STR_143
 15808  0112CC  0101               	movlb	1	; () banked
 15809  0112CE  6F82               	movwf	printf@f& (0+255),b
 15810  0112D0  0ED9               	movlw	high STR_143
 15811  0112D2  6F83               	movwf	(printf@f+1)& (0+255),b
 15812  0112D4  ECCF  F089         	call	_printf	;wreg free
 15813                           
 15814                           ;ring_buffer_LUT.c: 760: terminal_textAttributesReset();
 15815  0112D8  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15816                           
 15817                           ;ring_buffer_LUT.c: 762: }
 15818  0112DC  0012               	return	
 15819  0112DE                     l1398:
 15820                           
 15821                           ;ring_buffer_LUT.c: 766: else if((0 == strcmp(line, "Help"))) {
 15822  0112DE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15823  0112E2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15824  0112E6  0EAB               	movlw	low STR_144
 15825  0112E8  0101               	movlb	1	; () banked
 15826  0112EA  6F19               	movwf	strcmp@s2& (0+255),b
 15827  0112EC  0EFF               	movlw	high STR_144
 15828  0112EE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15829  0112F0  EC02  F0C5         	call	_strcmp	;wreg free
 15830  0112F4  0101               	movlb	1	; () banked
 15831  0112F6  5117               	movf	?_strcmp& (0+255),w,b
 15832  0112F8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15833  0112FA  A4D8               	btfss	status,2,c
 15834  0112FC  0012               	return	
 15835                           
 15836                           ; BSR set to: 1
 15837                           ;ring_buffer_LUT.c: 768: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15838  0112FE  0E00               	movlw	0
 15839  011300  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15840  011302  0E00               	movlw	0
 15841  011304  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15842  011306  0E03               	movlw	3
 15843  011308  EC1A  F0A1         	call	_terminal_textAttributes
 15844                           
 15845                           ;ring_buffer_LUT.c: 769: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 15846                           ;ring_buffer_LUT.c: 770: "Try 'Help <command set>'\n\r\n\r"
 15847                           ;ring_buffer_LUT.c: 772: "Supported Command Sets:\n\r"
 15848                           ;ring_buffer_LUT.c: 773: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 15849                           ;ring_buffer_LUT.c: 774: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 15850                           ;ring_buffer_LUT.c: 775: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 15851  01130C  0E4D               	movlw	low STR_145
 15852  01130E  0101               	movlb	1	; () banked
 15853  011310  6F82               	movwf	printf@f& (0+255),b
 15854  011312  0EEF               	movlw	high STR_145
 15855  011314  6F83               	movwf	(printf@f+1)& (0+255),b
 15856  011316  ECCF  F089         	call	_printf	;wreg free
 15857                           
 15858                           ;ring_buffer_LUT.c: 782: terminal_printNewline();
 15859  01131A  ECAE  F0C9         	call	_terminal_printNewline	;wreg free
 15860                           
 15861                           ;ring_buffer_LUT.c: 783: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 15862  01131E  0ED5               	movlw	low STR_146
 15863  011320  0101               	movlb	1	; () banked
 15864  011322  6F82               	movwf	printf@f& (0+255),b
 15865  011324  0EF5               	movlw	high STR_146
 15866  011326  6F83               	movwf	(printf@f+1)& (0+255),b
 15867  011328  ECCF  F089         	call	_printf	;wreg free
 15868                           
 15869                           ;ring_buffer_LUT.c: 785: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15870  01132C  0E00               	movlw	0
 15871  01132E  0101               	movlb	1	; () banked
 15872  011330  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15873  011332  0E00               	movlw	0
 15874  011334  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15875  011336  0E02               	movlw	2
 15876  011338  EC1A  F0A1         	call	_terminal_textAttributes
 15877                           
 15878                           ;ring_buffer_LUT.c: 786: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 15879  01133C  0EB0               	movlw	low STR_147
 15880  01133E  0101               	movlb	1	; () banked
 15881  011340  6F82               	movwf	printf@f& (0+255),b
 15882  011342  0EF4               	movlw	high STR_147
 15883  011344  6F83               	movwf	(printf@f+1)& (0+255),b
 15884  011346  ECCF  F089         	call	_printf	;wreg free
 15885                           
 15886                           ;ring_buffer_LUT.c: 787: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15887  01134A  0E00               	movlw	0
 15888  01134C  0101               	movlb	1	; () banked
 15889  01134E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15890  011350  0E00               	movlw	0
 15891  011352  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15892  011354  0E06               	movlw	6
 15893  011356  EC1A  F0A1         	call	_terminal_textAttributes
 15894                           
 15895                           ;ring_buffer_LUT.c: 788: printf("Measurement responses appear in cyan\n\r");
 15896  01135A  0EF7               	movlw	low STR_148
 15897  01135C  0101               	movlb	1	; () banked
 15898  01135E  6F82               	movwf	printf@f& (0+255),b
 15899  011360  0EF9               	movlw	high STR_148
 15900  011362  6F83               	movwf	(printf@f+1)& (0+255),b
 15901  011364  ECCF  F089         	call	_printf	;wreg free
 15902                           
 15903                           ;ring_buffer_LUT.c: 789: terminal_textAttributes(RED, BLACK, NORMAL);
 15904  011368  0E00               	movlw	0
 15905  01136A  0101               	movlb	1	; () banked
 15906  01136C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15907  01136E  0E00               	movlw	0
 15908  011370  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15909  011372  0E01               	movlw	1
 15910  011374  EC1A  F0A1         	call	_terminal_textAttributes
 15911                           
 15912                           ;ring_buffer_LUT.c: 790: printf("Errors and negative responses appear in red\n\r");
 15913  011378  0E45               	movlw	low STR_149
 15914  01137A  0101               	movlb	1	; () banked
 15915  01137C  6F82               	movwf	printf@f& (0+255),b
 15916  01137E  0EF8               	movlw	high STR_149
 15917  011380  6F83               	movwf	(printf@f+1)& (0+255),b
 15918  011382  ECCF  F089         	call	_printf	;wreg free
 15919                           
 15920                           ;ring_buffer_LUT.c: 791: terminal_textAttributesReset();
 15921  011386  EC94  F0C9         	call	_terminal_textAttributesReset	;wreg free
 15922                           
 15923                           ;ring_buffer_LUT.c: 792: printf("User input appears in white\n\r");
 15924  01138A  0E9B               	movlw	low STR_150
 15925  01138C  0101               	movlb	1	; () banked
 15926  01138E  6F82               	movwf	printf@f& (0+255),b
 15927  011390  0EFB               	movlw	high STR_150
 15928  011392  6F83               	movwf	(printf@f+1)& (0+255),b
 15929  011394  ECCF  F089         	call	_printf	;wreg free
 15930                           
 15931                           ;ring_buffer_LUT.c: 795: terminal_printNewline();
 15932  011398  ECAE  F0C9         	call	_terminal_printNewline	;wreg free
 15933  01139C  0012               	return	
 15934  01139E                     __end_of_ringBufferLUT:
 15935                           	opt stack 0
 15936                           tblptru	equ	0xFF8
 15937                           tblptrh	equ	0xFF7
 15938                           tblptrl	equ	0xFF6
 15939                           tablat	equ	0xFF5
 15940                           intcon	equ	0xFF2
 15941                           postinc0	equ	0xFEE
 15942                           wreg	equ	0xFE8
 15943                           indf1	equ	0xFE7
 15944                           postdec1	equ	0xFE5
 15945                           fsr1h	equ	0xFE2
 15946                           fsr1l	equ	0xFE1
 15947                           indf2	equ	0xFDF
 15948                           postinc2	equ	0xFDE
 15949                           fsr2h	equ	0xFDA
 15950                           fsr2l	equ	0xFD9
 15951                           status	equ	0xFD8
 15952                           
 15953 ;; *************** function _terminal_textAttributesReset *****************
 15954 ;; Defined at:
 15955 ;;		line 223 in file "ring_buffer_interface.c"
 15956 ;; Parameters:    Size  Location     Type
 15957 ;;		None
 15958 ;; Auto vars:     Size  Location     Type
 15959 ;;		None
 15960 ;; Return value:  Size  Location     Type
 15961 ;;                  1    wreg      void 
 15962 ;; Registers used:
 15963 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15964 ;; Tracked objects:
 15965 ;;		On entry : 0/0
 15966 ;;		On exit  : 0/0
 15967 ;;		Unchanged: 0/0
 15968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15973 ;;Total ram usage:        0 bytes
 15974 ;; Hardware stack levels used:    1
 15975 ;; Hardware stack levels required when called:   17
 15976 ;; This function calls:
 15977 ;;		_terminal_textAttributes
 15978 ;; This function is called by:
 15979 ;;		_main
 15980 ;;		_ringBufferLUT
 15981 ;; This function uses a non-reentrant model
 15982 ;;
 15983                           
 15984                           	psect	text4
 15985  019328                     __ptext4:
 15986                           	opt stack 0
 15987  019328                     _terminal_textAttributesReset:
 15988                           	opt stack 13
 15989                           
 15990                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 15991                           
 15992                           ;incstack = 0
 15993  019328  0E00               	movlw	0
 15994  01932A  0101               	movlb	1	; () banked
 15995  01932C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15996  01932E  0E00               	movlw	0
 15997  019330  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15998  019332  0E07               	movlw	7
 15999  019334  EC1A  F0A1         	call	_terminal_textAttributes
 16000  019338  0012               	return		;funcret
 16001  01933A                     __end_of_terminal_textAttributesReset:
 16002                           	opt stack 0
 16003                           tblptru	equ	0xFF8
 16004                           tblptrh	equ	0xFF7
 16005                           tblptrl	equ	0xFF6
 16006                           tablat	equ	0xFF5
 16007                           intcon	equ	0xFF2
 16008                           postinc0	equ	0xFEE
 16009                           wreg	equ	0xFE8
 16010                           indf1	equ	0xFE7
 16011                           postdec1	equ	0xFE5
 16012                           fsr1h	equ	0xFE2
 16013                           fsr1l	equ	0xFE1
 16014                           indf2	equ	0xFDF
 16015                           postinc2	equ	0xFDE
 16016                           fsr2h	equ	0xFDA
 16017                           fsr2l	equ	0xFD9
 16018                           status	equ	0xFD8
 16019                           
 16020 ;; *************** function _terminal_textAttributes *****************
 16021 ;; Defined at:
 16022 ;;		line 115 in file "ring_buffer_interface.c"
 16023 ;; Parameters:    Size  Location     Type
 16024 ;;  foreground_c    1    wreg     enum E17908
 16025 ;;  background_c    1  178[BANK1 ] enum E17908
 16026 ;;  input_attrib    1  179[BANK1 ] enum E17900
 16027 ;; Auto vars:     Size  Location     Type
 16028 ;;  foreground_c    1    0[BANK2 ] enum E17908
 16029 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 16030 ;; Return value:  Size  Location     Type
 16031 ;;                  1    wreg      void 
 16032 ;; Registers used:
 16033 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16034 ;; Tracked objects:
 16035 ;;		On entry : 0/0
 16036 ;;		On exit  : 0/0
 16037 ;;		Unchanged: 0/0
 16038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16039 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16040 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 16041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16042 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 16043 ;;Total ram usage:       18 bytes
 16044 ;; Hardware stack levels used:    1
 16045 ;; Hardware stack levels required when called:   16
 16046 ;; This function calls:
 16047 ;;		_printf
 16048 ;;		_strcat
 16049 ;;		_strncpy
 16050 ;; This function is called by:
 16051 ;;		_terminal_textAttributesReset
 16052 ;;		_ringBufferLUT
 16053 ;; This function uses a non-reentrant model
 16054 ;;
 16055                           
 16056                           	psect	text5
 16057  014234                     __ptext5:
 16058                           	opt stack 0
 16059  014234                     _terminal_textAttributes:
 16060                           	opt stack 13
 16061                           
 16062                           ;incstack = 0
 16063                           ;terminal_textAttributes@foreground_color stored from wreg
 16064  014234  0102               	movlb	2	; () banked
 16065  014236  6F83               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 16066                           
 16067                           ;ring_buffer_interface.c: 119: char output_buff[15];
 16068                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 16069  014238  0E84               	movlw	low terminal_textAttributes@output_buff
 16070  01423A  0101               	movlb	1	; () banked
 16071  01423C  6F17               	movwf	strncpy@to& (0+255),b
 16072  01423E  0E02               	movlw	high terminal_textAttributes@output_buff
 16073  014240  6F18               	movwf	(strncpy@to+1)& (0+255),b
 16074  014242  0EF6               	movlw	low STR_11
 16075  014244  6F19               	movwf	strncpy@from& (0+255),b
 16076  014246  0EFF               	movlw	high STR_11
 16077  014248  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 16078  01424A  0E00               	movlw	0
 16079  01424C  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 16080  01424E  0E0F               	movlw	15
 16081  014250  6F1B               	movwf	strncpy@size& (0+255),b
 16082  014252  EC89  F0C3         	call	_strncpy	;wreg free
 16083                           
 16084                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 16085  014256  D054               	goto	l1138
 16086  014258                     
 16087                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 16088  014258  0E84               	movlw	low terminal_textAttributes@output_buff
 16089  01425A  0101               	movlb	1	; () banked
 16090  01425C  6F17               	movwf	strcat@to& (0+255),b
 16091  01425E  0E02               	movlw	high terminal_textAttributes@output_buff
 16092  014260  6F18               	movwf	(strcat@to+1)& (0+255),b
 16093  014262  0ECA               	movlw	low (STR_20+1)
 16094  014264  6F19               	movwf	strcat@from& (0+255),b
 16095  014266  0EFF               	movlw	high (STR_20+1)
 16096  014268  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16097  01426A  EC79  F0C5         	call	_strcat	;wreg free
 16098                           
 16099                           ;ring_buffer_interface.c: 127: break;
 16100  01426E  D05D               	goto	l1140
 16101  014270                     
 16102                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 16103  014270  0E84               	movlw	low terminal_textAttributes@output_buff
 16104  014272  0101               	movlb	1	; () banked
 16105  014274  6F17               	movwf	strcat@to& (0+255),b
 16106  014276  0E02               	movlw	high terminal_textAttributes@output_buff
 16107  014278  6F18               	movwf	(strcat@to+1)& (0+255),b
 16108  01427A  0ED5               	movlw	low (STR_67+20)
 16109  01427C  6F19               	movwf	strcat@from& (0+255),b
 16110  01427E  0EFC               	movlw	high (STR_67+20)
 16111  014280  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16112  014282  EC79  F0C5         	call	_strcat	;wreg free
 16113                           
 16114                           ;ring_buffer_interface.c: 130: break;
 16115  014286  D051               	goto	l1140
 16116  014288                     
 16117                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 16118  014288  0E84               	movlw	low terminal_textAttributes@output_buff
 16119  01428A  0101               	movlb	1	; () banked
 16120  01428C  6F17               	movwf	strcat@to& (0+255),b
 16121  01428E  0E02               	movlw	high terminal_textAttributes@output_buff
 16122  014290  6F18               	movwf	(strcat@to+1)& (0+255),b
 16123  014292  0EDF               	movlw	low (STR_24+1)
 16124  014294  6F19               	movwf	strcat@from& (0+255),b
 16125  014296  0EFF               	movlw	high (STR_24+1)
 16126  014298  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16127  01429A  EC79  F0C5         	call	_strcat	;wreg free
 16128                           
 16129                           ;ring_buffer_interface.c: 133: break;
 16130  01429E  D045               	goto	l1140
 16131  0142A0                     
 16132                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 16133  0142A0  0E84               	movlw	low terminal_textAttributes@output_buff
 16134  0142A2  0101               	movlb	1	; () banked
 16135  0142A4  6F17               	movwf	strcat@to& (0+255),b
 16136  0142A6  0E02               	movlw	high terminal_textAttributes@output_buff
 16137  0142A8  6F18               	movwf	(strcat@to+1)& (0+255),b
 16138  0142AA  0EE5               	movlw	low (STR_25+1)
 16139  0142AC  6F19               	movwf	strcat@from& (0+255),b
 16140  0142AE  0EFF               	movlw	high (STR_25+1)
 16141  0142B0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16142  0142B2  EC79  F0C5         	call	_strcat	;wreg free
 16143                           
 16144                           ;ring_buffer_interface.c: 136: break;
 16145  0142B6  D039               	goto	l1140
 16146  0142B8                     
 16147                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 16148  0142B8  0E84               	movlw	low terminal_textAttributes@output_buff
 16149  0142BA  0101               	movlb	1	; () banked
 16150  0142BC  6F17               	movwf	strcat@to& (0+255),b
 16151  0142BE  0E02               	movlw	high terminal_textAttributes@output_buff
 16152  0142C0  6F18               	movwf	(strcat@to+1)& (0+255),b
 16153  0142C2  0EF1               	movlw	low (STR_27+1)
 16154  0142C4  6F19               	movwf	strcat@from& (0+255),b
 16155  0142C6  0EFF               	movlw	high (STR_27+1)
 16156  0142C8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16157  0142CA  EC79  F0C5         	call	_strcat	;wreg free
 16158                           
 16159                           ;ring_buffer_interface.c: 139: break;
 16160  0142CE  D02D               	goto	l1140
 16161  0142D0                     
 16162                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 16163  0142D0  0E84               	movlw	low terminal_textAttributes@output_buff
 16164  0142D2  0101               	movlb	1	; () banked
 16165  0142D4  6F17               	movwf	strcat@to& (0+255),b
 16166  0142D6  0E02               	movlw	high terminal_textAttributes@output_buff
 16167  0142D8  6F18               	movwf	(strcat@to+1)& (0+255),b
 16168  0142DA  0EF9               	movlw	low STR_17
 16169  0142DC  6F19               	movwf	strcat@from& (0+255),b
 16170  0142DE  0EFF               	movlw	high STR_17
 16171  0142E0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16172  0142E2  EC79  F0C5         	call	_strcat	;wreg free
 16173                           
 16174                           ;ring_buffer_interface.c: 142: break;
 16175  0142E6  D021               	goto	l1140
 16176  0142E8                     
 16177                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 16178  0142E8  0E84               	movlw	low terminal_textAttributes@output_buff
 16179  0142EA  0101               	movlb	1	; () banked
 16180  0142EC  6F17               	movwf	strcat@to& (0+255),b
 16181  0142EE  0E02               	movlw	high terminal_textAttributes@output_buff
 16182  0142F0  6F18               	movwf	(strcat@to+1)& (0+255),b
 16183  0142F2  0ECA               	movlw	low (STR_20+1)
 16184  0142F4  6F19               	movwf	strcat@from& (0+255),b
 16185  0142F6  0EFF               	movlw	high (STR_20+1)
 16186  0142F8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16187  0142FA  EC79  F0C5         	call	_strcat	;wreg free
 16188                           
 16189                           ;ring_buffer_interface.c: 147: }
 16190                           
 16191                           ;ring_buffer_interface.c: 146: break;
 16192  0142FE  D015               	goto	l1140
 16193  014300                     l1138:
 16194  014300  0101               	movlb	1	; () banked
 16195  014302  51B3               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 16196                           
 16197                           ; Switch size 1, requested type "space"
 16198                           ; Number of cases is 6, Range of values is 0 to 5
 16199                           ; switch strategies available:
 16200                           ; Name         Instructions Cycles
 16201                           ; simple_byte           19    10 (average)
 16202                           ;	Chosen strategy is simple_byte
 16203  014304  0A00               	xorlw	0	; case 0
 16204  014306  B4D8               	btfsc	status,2,c
 16205  014308  D7A7               	goto	l1139
 16206  01430A  0A01               	xorlw	1	; case 1
 16207  01430C  B4D8               	btfsc	status,2,c
 16208  01430E  D7B0               	goto	l1141
 16209  014310  0A03               	xorlw	3	; case 2
 16210  014312  B4D8               	btfsc	status,2,c
 16211  014314  D7B9               	goto	l1142
 16212  014316  0A01               	xorlw	1	; case 3
 16213  014318  B4D8               	btfsc	status,2,c
 16214  01431A  D7C2               	goto	l1143
 16215  01431C  0A07               	xorlw	7	; case 4
 16216  01431E  B4D8               	btfsc	status,2,c
 16217  014320  D7CB               	goto	l1144
 16218  014322  0A01               	xorlw	1	; case 5
 16219  014324  B4D8               	btfsc	status,2,c
 16220  014326  D7D4               	goto	l1145
 16221  014328  D7DF               	goto	l1146
 16222  01432A                     l1140:
 16223                           
 16224                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 16225                           
 16226                           ; BSR set to: 1
 16227  01432A  0E84               	movlw	low terminal_textAttributes@output_buff
 16228  01432C  0101               	movlb	1	; () banked
 16229  01432E  6F17               	movwf	strcat@to& (0+255),b
 16230  014330  0E02               	movlw	high terminal_textAttributes@output_buff
 16231  014332  6F18               	movwf	(strcat@to+1)& (0+255),b
 16232  014334  0EFB               	movlw	low STR_19
 16233  014336  6F19               	movwf	strcat@from& (0+255),b
 16234  014338  0EFF               	movlw	high STR_19
 16235  01433A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16236  01433C  EC79  F0C5         	call	_strcat	;wreg free
 16237                           
 16238                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 16239  014340  D06C               	goto	l1147
 16240  014342                     
 16241                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 16242  014342  0E84               	movlw	low terminal_textAttributes@output_buff
 16243  014344  0101               	movlb	1	; () banked
 16244  014346  6F17               	movwf	strcat@to& (0+255),b
 16245  014348  0E02               	movlw	high terminal_textAttributes@output_buff
 16246  01434A  6F18               	movwf	(strcat@to+1)& (0+255),b
 16247  01434C  0EC9               	movlw	low STR_20
 16248  01434E  6F19               	movwf	strcat@from& (0+255),b
 16249  014350  0EFF               	movlw	high STR_20
 16250  014352  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16251  014354  EC79  F0C5         	call	_strcat	;wreg free
 16252                           
 16253                           ;ring_buffer_interface.c: 155: break;
 16254  014358  D07B               	goto	l1149
 16255  01435A                     
 16256                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 16257  01435A  0E84               	movlw	low terminal_textAttributes@output_buff
 16258  01435C  0101               	movlb	1	; () banked
 16259  01435E  6F17               	movwf	strcat@to& (0+255),b
 16260  014360  0E02               	movlw	high terminal_textAttributes@output_buff
 16261  014362  6F18               	movwf	(strcat@to+1)& (0+255),b
 16262  014364  0ECC               	movlw	low STR_21
 16263  014366  6F19               	movwf	strcat@from& (0+255),b
 16264  014368  0EFF               	movlw	high STR_21
 16265  01436A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16266  01436C  EC79  F0C5         	call	_strcat	;wreg free
 16267                           
 16268                           ;ring_buffer_interface.c: 158: break;
 16269  014370  D06F               	goto	l1149
 16270  014372                     
 16271                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 16272  014372  0E84               	movlw	low terminal_textAttributes@output_buff
 16273  014374  0101               	movlb	1	; () banked
 16274  014376  6F17               	movwf	strcat@to& (0+255),b
 16275  014378  0E02               	movlw	high terminal_textAttributes@output_buff
 16276  01437A  6F18               	movwf	(strcat@to+1)& (0+255),b
 16277  01437C  0ED2               	movlw	low STR_22
 16278  01437E  6F19               	movwf	strcat@from& (0+255),b
 16279  014380  0EFF               	movlw	high STR_22
 16280  014382  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16281  014384  EC79  F0C5         	call	_strcat	;wreg free
 16282                           
 16283                           ;ring_buffer_interface.c: 161: break;
 16284  014388  D063               	goto	l1149
 16285  01438A                     
 16286                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 16287  01438A  0E84               	movlw	low terminal_textAttributes@output_buff
 16288  01438C  0101               	movlb	1	; () banked
 16289  01438E  6F17               	movwf	strcat@to& (0+255),b
 16290  014390  0E02               	movlw	high terminal_textAttributes@output_buff
 16291  014392  6F18               	movwf	(strcat@to+1)& (0+255),b
 16292  014394  0ED8               	movlw	low STR_23
 16293  014396  6F19               	movwf	strcat@from& (0+255),b
 16294  014398  0EFF               	movlw	high STR_23
 16295  01439A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16296  01439C  EC79  F0C5         	call	_strcat	;wreg free
 16297                           
 16298                           ;ring_buffer_interface.c: 164: break;
 16299  0143A0  D057               	goto	l1149
 16300  0143A2                     
 16301                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 16302  0143A2  0E84               	movlw	low terminal_textAttributes@output_buff
 16303  0143A4  0101               	movlb	1	; () banked
 16304  0143A6  6F17               	movwf	strcat@to& (0+255),b
 16305  0143A8  0E02               	movlw	high terminal_textAttributes@output_buff
 16306  0143AA  6F18               	movwf	(strcat@to+1)& (0+255),b
 16307  0143AC  0EDE               	movlw	low STR_24
 16308  0143AE  6F19               	movwf	strcat@from& (0+255),b
 16309  0143B0  0EFF               	movlw	high STR_24
 16310  0143B2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16311  0143B4  EC79  F0C5         	call	_strcat	;wreg free
 16312                           
 16313                           ;ring_buffer_interface.c: 167: break;
 16314  0143B8  D04B               	goto	l1149
 16315  0143BA                     
 16316                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 16317  0143BA  0E84               	movlw	low terminal_textAttributes@output_buff
 16318  0143BC  0101               	movlb	1	; () banked
 16319  0143BE  6F17               	movwf	strcat@to& (0+255),b
 16320  0143C0  0E02               	movlw	high terminal_textAttributes@output_buff
 16321  0143C2  6F18               	movwf	(strcat@to+1)& (0+255),b
 16322  0143C4  0EE4               	movlw	low STR_25
 16323  0143C6  6F19               	movwf	strcat@from& (0+255),b
 16324  0143C8  0EFF               	movlw	high STR_25
 16325  0143CA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16326  0143CC  EC79  F0C5         	call	_strcat	;wreg free
 16327                           
 16328                           ;ring_buffer_interface.c: 170: break;
 16329  0143D0  D03F               	goto	l1149
 16330  0143D2                     
 16331                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 16332  0143D2  0E84               	movlw	low terminal_textAttributes@output_buff
 16333  0143D4  0101               	movlb	1	; () banked
 16334  0143D6  6F17               	movwf	strcat@to& (0+255),b
 16335  0143D8  0E02               	movlw	high terminal_textAttributes@output_buff
 16336  0143DA  6F18               	movwf	(strcat@to+1)& (0+255),b
 16337  0143DC  0EEA               	movlw	low STR_26
 16338  0143DE  6F19               	movwf	strcat@from& (0+255),b
 16339  0143E0  0EFF               	movlw	high STR_26
 16340  0143E2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16341  0143E4  EC79  F0C5         	call	_strcat	;wreg free
 16342                           
 16343                           ;ring_buffer_interface.c: 173: break;
 16344  0143E8  D033               	goto	l1149
 16345  0143EA                     
 16346                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 16347  0143EA  0E84               	movlw	low terminal_textAttributes@output_buff
 16348  0143EC  0101               	movlb	1	; () banked
 16349  0143EE  6F17               	movwf	strcat@to& (0+255),b
 16350  0143F0  0E02               	movlw	high terminal_textAttributes@output_buff
 16351  0143F2  6F18               	movwf	(strcat@to+1)& (0+255),b
 16352  0143F4  0EF0               	movlw	low STR_27
 16353  0143F6  6F19               	movwf	strcat@from& (0+255),b
 16354  0143F8  0EFF               	movlw	high STR_27
 16355  0143FA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16356  0143FC  EC79  F0C5         	call	_strcat	;wreg free
 16357                           
 16358                           ;ring_buffer_interface.c: 176: break;
 16359  014400  D027               	goto	l1149
 16360  014402                     
 16361                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 16362  014402  0E84               	movlw	low terminal_textAttributes@output_buff
 16363  014404  0101               	movlb	1	; () banked
 16364  014406  6F17               	movwf	strcat@to& (0+255),b
 16365  014408  0E02               	movlw	high terminal_textAttributes@output_buff
 16366  01440A  6F18               	movwf	(strcat@to+1)& (0+255),b
 16367  01440C  0EF0               	movlw	low STR_27
 16368  01440E  6F19               	movwf	strcat@from& (0+255),b
 16369  014410  0EFF               	movlw	high STR_27
 16370  014412  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16371  014414  EC79  F0C5         	call	_strcat	;wreg free
 16372                           
 16373                           ;ring_buffer_interface.c: 181: }
 16374                           
 16375                           ;ring_buffer_interface.c: 180: break;
 16376  014418  D01B               	goto	l1149
 16377  01441A                     l1147:
 16378  01441A  0102               	movlb	2	; () banked
 16379  01441C  5183               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 16380                           
 16381                           ; Switch size 1, requested type "space"
 16382                           ; Number of cases is 8, Range of values is 0 to 7
 16383                           ; switch strategies available:
 16384                           ; Name         Instructions Cycles
 16385                           ; simple_byte           25    13 (average)
 16386                           ;	Chosen strategy is simple_byte
 16387  01441E  0A00               	xorlw	0	; case 0
 16388  014420  B4D8               	btfsc	status,2,c
 16389  014422  D78F               	goto	l1148
 16390  014424  0A01               	xorlw	1	; case 1
 16391  014426  B4D8               	btfsc	status,2,c
 16392  014428  D798               	goto	l1150
 16393  01442A  0A03               	xorlw	3	; case 2
 16394  01442C  B4D8               	btfsc	status,2,c
 16395  01442E  D7A1               	goto	l1151
 16396  014430  0A01               	xorlw	1	; case 3
 16397  014432  B4D8               	btfsc	status,2,c
 16398  014434  D7AA               	goto	l1152
 16399  014436  0A07               	xorlw	7	; case 4
 16400  014438  B4D8               	btfsc	status,2,c
 16401  01443A  D7B3               	goto	l1153
 16402  01443C  0A01               	xorlw	1	; case 5
 16403  01443E  B4D8               	btfsc	status,2,c
 16404  014440  D7BC               	goto	l1154
 16405  014442  0A03               	xorlw	3	; case 6
 16406  014444  B4D8               	btfsc	status,2,c
 16407  014446  D7C5               	goto	l1155
 16408  014448  0A01               	xorlw	1	; case 7
 16409  01444A  B4D8               	btfsc	status,2,c
 16410  01444C  D7CE               	goto	l1156
 16411  01444E  D7D9               	goto	l1157
 16412  014450                     l1149:
 16413                           
 16414                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 16415                           
 16416                           ; BSR set to: 2
 16417  014450  0E84               	movlw	low terminal_textAttributes@output_buff
 16418  014452  0101               	movlb	1	; () banked
 16419  014454  6F17               	movwf	strcat@to& (0+255),b
 16420  014456  0E02               	movlw	high terminal_textAttributes@output_buff
 16421  014458  6F18               	movwf	(strcat@to+1)& (0+255),b
 16422  01445A  0EFB               	movlw	low STR_19
 16423  01445C  6F19               	movwf	strcat@from& (0+255),b
 16424  01445E  0EFF               	movlw	high STR_19
 16425  014460  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16426  014462  EC79  F0C5         	call	_strcat	;wreg free
 16427                           
 16428                           ;ring_buffer_interface.c: 185: switch (background_color) {
 16429  014466  D06C               	goto	l1158
 16430  014468                     
 16431                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 16432  014468  0E84               	movlw	low terminal_textAttributes@output_buff
 16433  01446A  0101               	movlb	1	; () banked
 16434  01446C  6F17               	movwf	strcat@to& (0+255),b
 16435  01446E  0E02               	movlw	high terminal_textAttributes@output_buff
 16436  014470  6F18               	movwf	(strcat@to+1)& (0+255),b
 16437  014472  0E39               	movlw	low (STR_151+9)
 16438  014474  6F19               	movwf	strcat@from& (0+255),b
 16439  014476  0EFF               	movlw	high (STR_151+9)
 16440  014478  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16441  01447A  EC79  F0C5         	call	_strcat	;wreg free
 16442                           
 16443                           ;ring_buffer_interface.c: 189: break;
 16444  01447E  D07B               	goto	l1160
 16445  014480                     
 16446                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 16447  014480  0E84               	movlw	low terminal_textAttributes@output_buff
 16448  014482  0101               	movlb	1	; () banked
 16449  014484  6F17               	movwf	strcat@to& (0+255),b
 16450  014486  0E02               	movlw	high terminal_textAttributes@output_buff
 16451  014488  6F18               	movwf	(strcat@to+1)& (0+255),b
 16452  01448A  0ECF               	movlw	low STR_31
 16453  01448C  6F19               	movwf	strcat@from& (0+255),b
 16454  01448E  0EFF               	movlw	high STR_31
 16455  014490  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16456  014492  EC79  F0C5         	call	_strcat	;wreg free
 16457                           
 16458                           ;ring_buffer_interface.c: 192: break;
 16459  014496  D06F               	goto	l1160
 16460  014498                     
 16461                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 16462  014498  0E84               	movlw	low terminal_textAttributes@output_buff
 16463  01449A  0101               	movlb	1	; () banked
 16464  01449C  6F17               	movwf	strcat@to& (0+255),b
 16465  01449E  0E02               	movlw	high terminal_textAttributes@output_buff
 16466  0144A0  6F18               	movwf	(strcat@to+1)& (0+255),b
 16467  0144A2  0ED5               	movlw	low STR_32
 16468  0144A4  6F19               	movwf	strcat@from& (0+255),b
 16469  0144A6  0EFF               	movlw	high STR_32
 16470  0144A8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16471  0144AA  EC79  F0C5         	call	_strcat	;wreg free
 16472                           
 16473                           ;ring_buffer_interface.c: 195: break;
 16474  0144AE  D063               	goto	l1160
 16475  0144B0                     
 16476                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 16477  0144B0  0E84               	movlw	low terminal_textAttributes@output_buff
 16478  0144B2  0101               	movlb	1	; () banked
 16479  0144B4  6F17               	movwf	strcat@to& (0+255),b
 16480  0144B6  0E02               	movlw	high terminal_textAttributes@output_buff
 16481  0144B8  6F18               	movwf	(strcat@to+1)& (0+255),b
 16482  0144BA  0EDB               	movlw	low STR_33
 16483  0144BC  6F19               	movwf	strcat@from& (0+255),b
 16484  0144BE  0EFF               	movlw	high STR_33
 16485  0144C0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16486  0144C2  EC79  F0C5         	call	_strcat	;wreg free
 16487                           
 16488                           ;ring_buffer_interface.c: 198: break;
 16489  0144C6  D057               	goto	l1160
 16490  0144C8                     
 16491                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 16492  0144C8  0E84               	movlw	low terminal_textAttributes@output_buff
 16493  0144CA  0101               	movlb	1	; () banked
 16494  0144CC  6F17               	movwf	strcat@to& (0+255),b
 16495  0144CE  0E02               	movlw	high terminal_textAttributes@output_buff
 16496  0144D0  6F18               	movwf	(strcat@to+1)& (0+255),b
 16497  0144D2  0EE1               	movlw	low STR_34
 16498  0144D4  6F19               	movwf	strcat@from& (0+255),b
 16499  0144D6  0EFF               	movlw	high STR_34
 16500  0144D8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16501  0144DA  EC79  F0C5         	call	_strcat	;wreg free
 16502                           
 16503                           ;ring_buffer_interface.c: 201: break;
 16504  0144DE  D04B               	goto	l1160
 16505  0144E0                     
 16506                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 16507  0144E0  0E84               	movlw	low terminal_textAttributes@output_buff
 16508  0144E2  0101               	movlb	1	; () banked
 16509  0144E4  6F17               	movwf	strcat@to& (0+255),b
 16510  0144E6  0E02               	movlw	high terminal_textAttributes@output_buff
 16511  0144E8  6F18               	movwf	(strcat@to+1)& (0+255),b
 16512  0144EA  0EE7               	movlw	low STR_35
 16513  0144EC  6F19               	movwf	strcat@from& (0+255),b
 16514  0144EE  0EFF               	movlw	high STR_35
 16515  0144F0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16516  0144F2  EC79  F0C5         	call	_strcat	;wreg free
 16517                           
 16518                           ;ring_buffer_interface.c: 204: break;
 16519  0144F6  D03F               	goto	l1160
 16520  0144F8                     
 16521                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 16522  0144F8  0E84               	movlw	low terminal_textAttributes@output_buff
 16523  0144FA  0101               	movlb	1	; () banked
 16524  0144FC  6F17               	movwf	strcat@to& (0+255),b
 16525  0144FE  0E02               	movlw	high terminal_textAttributes@output_buff
 16526  014500  6F18               	movwf	(strcat@to+1)& (0+255),b
 16527  014502  0EED               	movlw	low STR_36
 16528  014504  6F19               	movwf	strcat@from& (0+255),b
 16529  014506  0EFF               	movlw	high STR_36
 16530  014508  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16531  01450A  EC79  F0C5         	call	_strcat	;wreg free
 16532                           
 16533                           ;ring_buffer_interface.c: 207: break;
 16534  01450E  D033               	goto	l1160
 16535  014510                     
 16536                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 16537  014510  0E84               	movlw	low terminal_textAttributes@output_buff
 16538  014512  0101               	movlb	1	; () banked
 16539  014514  6F17               	movwf	strcat@to& (0+255),b
 16540  014516  0E02               	movlw	high terminal_textAttributes@output_buff
 16541  014518  6F18               	movwf	(strcat@to+1)& (0+255),b
 16542  01451A  0EF3               	movlw	low STR_37
 16543  01451C  6F19               	movwf	strcat@from& (0+255),b
 16544  01451E  0EFF               	movlw	high STR_37
 16545  014520  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16546  014522  EC79  F0C5         	call	_strcat	;wreg free
 16547                           
 16548                           ;ring_buffer_interface.c: 210: break;
 16549  014526  D027               	goto	l1160
 16550  014528                     
 16551                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 16552  014528  0E84               	movlw	low terminal_textAttributes@output_buff
 16553  01452A  0101               	movlb	1	; () banked
 16554  01452C  6F17               	movwf	strcat@to& (0+255),b
 16555  01452E  0E02               	movlw	high terminal_textAttributes@output_buff
 16556  014530  6F18               	movwf	(strcat@to+1)& (0+255),b
 16557  014532  0EF3               	movlw	low STR_37
 16558  014534  6F19               	movwf	strcat@from& (0+255),b
 16559  014536  0EFF               	movlw	high STR_37
 16560  014538  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16561  01453A  EC79  F0C5         	call	_strcat	;wreg free
 16562                           
 16563                           ;ring_buffer_interface.c: 215: }
 16564                           
 16565                           ;ring_buffer_interface.c: 214: break;
 16566  01453E  D01B               	goto	l1160
 16567  014540                     l1158:
 16568  014540  0101               	movlb	1	; () banked
 16569  014542  51B2               	movf	terminal_textAttributes@background_color& (0+255),w,b
 16570                           
 16571                           ; Switch size 1, requested type "space"
 16572                           ; Number of cases is 8, Range of values is 0 to 7
 16573                           ; switch strategies available:
 16574                           ; Name         Instructions Cycles
 16575                           ; simple_byte           25    13 (average)
 16576                           ;	Chosen strategy is simple_byte
 16577  014544  0A00               	xorlw	0	; case 0
 16578  014546  B4D8               	btfsc	status,2,c
 16579  014548  D78F               	goto	l1159
 16580  01454A  0A01               	xorlw	1	; case 1
 16581  01454C  B4D8               	btfsc	status,2,c
 16582  01454E  D798               	goto	l1161
 16583  014550  0A03               	xorlw	3	; case 2
 16584  014552  B4D8               	btfsc	status,2,c
 16585  014554  D7A1               	goto	l1162
 16586  014556  0A01               	xorlw	1	; case 3
 16587  014558  B4D8               	btfsc	status,2,c
 16588  01455A  D7AA               	goto	l1163
 16589  01455C  0A07               	xorlw	7	; case 4
 16590  01455E  B4D8               	btfsc	status,2,c
 16591  014560  D7B3               	goto	l1164
 16592  014562  0A01               	xorlw	1	; case 5
 16593  014564  B4D8               	btfsc	status,2,c
 16594  014566  D7BC               	goto	l1165
 16595  014568  0A03               	xorlw	3	; case 6
 16596  01456A  B4D8               	btfsc	status,2,c
 16597  01456C  D7C5               	goto	l1166
 16598  01456E  0A01               	xorlw	1	; case 7
 16599  014570  B4D8               	btfsc	status,2,c
 16600  014572  D7CE               	goto	l1167
 16601  014574  D7D9               	goto	l1168
 16602  014576                     l1160:
 16603                           
 16604                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 16605                           
 16606                           ; BSR set to: 1
 16607  014576  0E84               	movlw	low terminal_textAttributes@output_buff
 16608  014578  0101               	movlb	1	; () banked
 16609  01457A  6F17               	movwf	strcat@to& (0+255),b
 16610  01457C  0E02               	movlw	high terminal_textAttributes@output_buff
 16611  01457E  6F18               	movwf	(strcat@to+1)& (0+255),b
 16612  014580  0EFD               	movlw	low STR_39
 16613  014582  6F19               	movwf	strcat@from& (0+255),b
 16614  014584  0EFF               	movlw	high STR_39
 16615  014586  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16616  014588  EC79  F0C5         	call	_strcat	;wreg free
 16617                           
 16618                           ;ring_buffer_interface.c: 219: printf(output_buff);
 16619  01458C  0E84               	movlw	low terminal_textAttributes@output_buff
 16620  01458E  0101               	movlb	1	; () banked
 16621  014590  6F82               	movwf	printf@f& (0+255),b
 16622  014592  0E02               	movlw	high terminal_textAttributes@output_buff
 16623  014594  6F83               	movwf	(printf@f+1)& (0+255),b
 16624  014596  ECCF  F089         	call	_printf	;wreg free
 16625  01459A  0012               	return		;funcret
 16626  01459C                     __end_of_terminal_textAttributes:
 16627                           	opt stack 0
 16628                           tblptru	equ	0xFF8
 16629                           tblptrh	equ	0xFF7
 16630                           tblptrl	equ	0xFF6
 16631                           tablat	equ	0xFF5
 16632                           intcon	equ	0xFF2
 16633                           postinc0	equ	0xFEE
 16634                           wreg	equ	0xFE8
 16635                           indf1	equ	0xFE7
 16636                           postdec1	equ	0xFE5
 16637                           fsr1h	equ	0xFE2
 16638                           fsr1l	equ	0xFE1
 16639                           indf2	equ	0xFDF
 16640                           postinc2	equ	0xFDE
 16641                           fsr2h	equ	0xFDA
 16642                           fsr2l	equ	0xFD9
 16643                           status	equ	0xFD8
 16644                           
 16645 ;; *************** function _strncpy *****************
 16646 ;; Defined at:
 16647 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 16648 ;; Parameters:    Size  Location     Type
 16649 ;;  to              2   23[BANK1 ] PTR unsigned char 
 16650 ;;		 -> terminal_textAttributes@output_buff(15), 
 16651 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 16652 ;;		 -> STR_11(3), 
 16653 ;;  size            2   27[BANK1 ] unsigned int 
 16654 ;; Auto vars:     Size  Location     Type
 16655 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 16656 ;;		 -> terminal_textAttributes@output_buff(15), 
 16657 ;; Return value:  Size  Location     Type
 16658 ;;                  2   23[BANK1 ] PTR unsigned char 
 16659 ;; Registers used:
 16660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16661 ;; Tracked objects:
 16662 ;;		On entry : 0/0
 16663 ;;		On exit  : 0/0
 16664 ;;		Unchanged: 0/0
 16665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16666 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16667 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16669 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16670 ;;Total ram usage:        8 bytes
 16671 ;; Hardware stack levels used:    1
 16672 ;; Hardware stack levels required when called:   13
 16673 ;; This function calls:
 16674 ;;		Nothing
 16675 ;; This function is called by:
 16676 ;;		_terminal_textAttributes
 16677 ;; This function uses a non-reentrant model
 16678 ;;
 16679                           
 16680                           	psect	text6
 16681  018712                     __ptext6:
 16682                           	opt stack 0
 16683  018712                     _strncpy:
 16684                           	opt stack 15
 16685                           
 16686                           ;incstack = 0
 16687  018712  C117  F11D         	movff	strncpy@to,strncpy@cp
 16688  018716  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 16689  01871A  D018               	goto	l2391
 16690  01871C  0101               	movlb	1	; () banked
 16691  01871E  071B               	decf	strncpy@size& (0+255),f,b
 16692  018720  A0D8               	btfss	status,0,c
 16693  018722  071C               	decf	(strncpy@size+1)& (0+255),f,b
 16694                           
 16695                           ; BSR set to: 1
 16696  018724  C119  FFF6         	movff	strncpy@from,tblptrl
 16697  018728  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 16698  01872C  4B19               	infsnz	strncpy@from& (0+255),f,b
 16699  01872E  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 16700  018730                     	if	0	;tblptru may be non-zero
 16701  018730                     	endif
 16702  018730                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16703  018730  0E00               	movlw	low (__mediumconst shr (0+16))
 16704  018732  6EF8               	movwf	tblptru,c
 16705  018734                     	endif
 16706  018734  C11D  FFD9         	movff	strncpy@cp,fsr2l
 16707  018738  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 16708  01873C  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 16709  01873E  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 16710  018740  0008               	tblrd		*
 16711  018742  CFF5 FFDF          	movff	tablat,indf2
 16712  018746  50DF               	movf	indf2,w,c
 16713  018748  B4D8               	btfsc	status,2,c
 16714  01874A  D00E               	goto	l2393
 16715  01874C                     l2391:
 16716                           
 16717                           ; BSR set to: 1
 16718                           
 16719                           ; BSR set to: 1
 16720  01874C  0101               	movlb	1	; () banked
 16721  01874E  511B               	movf	strncpy@size& (0+255),w,b
 16722  018750  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 16723  018752  B4D8               	btfsc	status,2,c
 16724  018754  D009               	goto	l2393
 16725  018756  D7E2               	goto	l2390
 16726  018758                     l19338:
 16727                           
 16728                           ; BSR set to: 1
 16729  018758  C11D  FFD9         	movff	strncpy@cp,fsr2l
 16730  01875C  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 16731  018760  0E00               	movlw	0
 16732  018762  6EDF               	movwf	indf2,c
 16733                           
 16734                           ; BSR set to: 1
 16735  018764  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 16736  018766  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 16737  018768                     l2393:
 16738                           
 16739                           ; BSR set to: 1
 16740                           
 16741                           ; BSR set to: 1
 16742  018768  071B               	decf	strncpy@size& (0+255),f,b
 16743  01876A  A0D8               	btfss	status,0,c
 16744  01876C  071C               	decf	(strncpy@size+1)& (0+255),f,b
 16745  01876E  291B               	incf	strncpy@size& (0+255),w,b
 16746  018770  E1F3               	bnz	l19338
 16747  018772  291C               	incf	(strncpy@size+1)& (0+255),w,b
 16748  018774  B4D8               	btfsc	status,2,c
 16749  018776  0012               	return	
 16750  018778  D7EF               	goto	l2394
 16751  01877A                     __end_of_strncpy:
 16752                           	opt stack 0
 16753                           tblptru	equ	0xFF8
 16754                           tblptrh	equ	0xFF7
 16755                           tblptrl	equ	0xFF6
 16756                           tablat	equ	0xFF5
 16757                           intcon	equ	0xFF2
 16758                           postinc0	equ	0xFEE
 16759                           wreg	equ	0xFE8
 16760                           indf1	equ	0xFE7
 16761                           postdec1	equ	0xFE5
 16762                           fsr1h	equ	0xFE2
 16763                           fsr1l	equ	0xFE1
 16764                           indf2	equ	0xFDF
 16765                           postinc2	equ	0xFDE
 16766                           fsr2h	equ	0xFDA
 16767                           fsr2l	equ	0xFD9
 16768                           status	equ	0xFD8
 16769                           
 16770 ;; *************** function _strcat *****************
 16771 ;; Defined at:
 16772 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;  to              2   23[BANK1 ] PTR unsigned char 
 16775 ;;		 -> terminal_textAttributes@output_buff(15), 
 16776 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 16777 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 16778 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 16779 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 16780 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 16781 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 16782 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 16783 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 16784 ;; Auto vars:     Size  Location     Type
 16785 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 16786 ;;		 -> terminal_textAttributes@output_buff(15), 
 16787 ;; Return value:  Size  Location     Type
 16788 ;;                  2   23[BANK1 ] PTR unsigned char 
 16789 ;; Registers used:
 16790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16791 ;; Tracked objects:
 16792 ;;		On entry : 0/0
 16793 ;;		On exit  : 0/0
 16794 ;;		Unchanged: 0/0
 16795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16796 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16797 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16799 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16800 ;;Total ram usage:        6 bytes
 16801 ;; Hardware stack levels used:    1
 16802 ;; Hardware stack levels required when called:   13
 16803 ;; This function calls:
 16804 ;;		Nothing
 16805 ;; This function is called by:
 16806 ;;		_terminal_textAttributes
 16807 ;; This function uses a non-reentrant model
 16808 ;;
 16809                           
 16810                           	psect	text7
 16811  018AF2                     __ptext7:
 16812                           	opt stack 0
 16813  018AF2                     _strcat:
 16814                           	opt stack 15
 16815                           
 16816                           ; BSR set to: 1
 16817                           ;incstack = 0
 16818  018AF2  C117  F11B         	movff	strcat@to,strcat@cp
 16819  018AF6  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 16820  018AFA  D003               	goto	l2360
 16821  018AFC  0101               	movlb	1	; () banked
 16822  018AFE  4B1B               	infsnz	strcat@cp& (0+255),f,b
 16823  018B00  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 16824  018B02                     l2360:
 16825                           
 16826                           ; BSR set to: 1
 16827  018B02  C11B  FFD9         	movff	strcat@cp,fsr2l
 16828  018B06  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 16829  018B0A  50DF               	movf	indf2,w,c
 16830  018B0C  B4D8               	btfsc	status,2,c
 16831  018B0E  D006               	goto	l2363
 16832  018B10  D7F5               	goto	l2361
 16833  018B12  0101               	movlb	1	; () banked
 16834  018B14  4B1B               	infsnz	strcat@cp& (0+255),f,b
 16835  018B16  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 16836  018B18  4B19               	infsnz	strcat@from& (0+255),f,b
 16837  018B1A  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 16838  018B1C                     l2363:
 16839                           
 16840                           ; BSR set to: 1
 16841  018B1C  C119  FFF6         	movff	strcat@from,tblptrl
 16842  018B20  C11A  FFF7         	movff	strcat@from+1,tblptrh
 16843  018B24                     	if	0	;tblptru may be non-zero
 16844  018B24                     	endif
 16845  018B24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16846  018B24  0E00               	movlw	low (__mediumconst shr (0+16))
 16847  018B26  6EF8               	movwf	tblptru,c
 16848  018B28                     	endif
 16849  018B28  C11B  FFD9         	movff	strcat@cp,fsr2l
 16850  018B2C  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 16851  018B30  0008               	tblrd		*
 16852  018B32  CFF5 FFDF          	movff	tablat,indf2
 16853  018B36  50DF               	movf	indf2,w,c
 16854  018B38  B4D8               	btfsc	status,2,c
 16855  018B3A  0012               	return	
 16856  018B3C  D7EA               	goto	l2364
 16857  018B3E                     __end_of_strcat:
 16858                           	opt stack 0
 16859                           tblptru	equ	0xFF8
 16860                           tblptrh	equ	0xFF7
 16861                           tblptrl	equ	0xFF6
 16862                           tablat	equ	0xFF5
 16863                           intcon	equ	0xFF2
 16864                           postinc0	equ	0xFEE
 16865                           wreg	equ	0xFE8
 16866                           indf1	equ	0xFE7
 16867                           postdec1	equ	0xFE5
 16868                           fsr1h	equ	0xFE2
 16869                           fsr1l	equ	0xFE1
 16870                           indf2	equ	0xFDF
 16871                           postinc2	equ	0xFDE
 16872                           fsr2h	equ	0xFDA
 16873                           fsr2l	equ	0xFD9
 16874                           status	equ	0xFD8
 16875                           
 16876 ;; *************** function _terminal_printNewline *****************
 16877 ;; Defined at:
 16878 ;;		line 230 in file "ring_buffer_interface.c"
 16879 ;; Parameters:    Size  Location     Type
 16880 ;;		None
 16881 ;; Auto vars:     Size  Location     Type
 16882 ;;		None
 16883 ;; Return value:  Size  Location     Type
 16884 ;;                  1    wreg      void 
 16885 ;; Registers used:
 16886 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16887 ;; Tracked objects:
 16888 ;;		On entry : 0/0
 16889 ;;		On exit  : 0/0
 16890 ;;		Unchanged: 0/0
 16891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16896 ;;Total ram usage:        0 bytes
 16897 ;; Hardware stack levels used:    1
 16898 ;; Hardware stack levels required when called:   16
 16899 ;; This function calls:
 16900 ;;		_printf
 16901 ;; This function is called by:
 16902 ;;		_ringBufferLUT
 16903 ;; This function uses a non-reentrant model
 16904 ;;
 16905                           
 16906                           	psect	text8
 16907  01935C                     __ptext8:
 16908                           	opt stack 0
 16909  01935C                     _terminal_printNewline:
 16910                           	opt stack 12
 16911                           
 16912                           ;ring_buffer_interface.c: 232: printf("\n\r");
 16913                           
 16914                           ;incstack = 0
 16915  01935C  0E01               	movlw	low (STR_137+717)
 16916  01935E  0101               	movlb	1	; () banked
 16917  019360  6F82               	movwf	printf@f& (0+255),b
 16918  019362  0EEB               	movlw	high (STR_137+717)
 16919  019364  6F83               	movwf	(printf@f+1)& (0+255),b
 16920  019366  ECCF  F089         	call	_printf	;wreg free
 16921  01936A  0012               	return		;funcret
 16922  01936C                     __end_of_terminal_printNewline:
 16923                           	opt stack 0
 16924                           tblptru	equ	0xFF8
 16925                           tblptrh	equ	0xFF7
 16926                           tblptrl	equ	0xFF6
 16927                           tablat	equ	0xFF5
 16928                           intcon	equ	0xFF2
 16929                           postinc0	equ	0xFEE
 16930                           wreg	equ	0xFE8
 16931                           indf1	equ	0xFE7
 16932                           postdec1	equ	0xFE5
 16933                           fsr1h	equ	0xFE2
 16934                           fsr1l	equ	0xFE1
 16935                           indf2	equ	0xFDF
 16936                           postinc2	equ	0xFDE
 16937                           fsr2h	equ	0xFDA
 16938                           fsr2l	equ	0xFD9
 16939                           status	equ	0xFD8
 16940                           
 16941 ;; *************** function _strstr *****************
 16942 ;; Defined at:
 16943 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 16944 ;; Parameters:    Size  Location     Type
 16945 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 16946 ;;		 -> NULL(0), line(64), 
 16947 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 16948 ;;		 -> STR_109(25), 
 16949 ;; Auto vars:     Size  Location     Type
 16950 ;;		None
 16951 ;; Return value:  Size  Location     Type
 16952 ;;                  2   38[BANK1 ] PTR unsigned char 
 16953 ;; Registers used:
 16954 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16955 ;; Tracked objects:
 16956 ;;		On entry : 0/0
 16957 ;;		On exit  : 0/0
 16958 ;;		Unchanged: 0/0
 16959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16960 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16963 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16964 ;;Total ram usage:        4 bytes
 16965 ;; Hardware stack levels used:    1
 16966 ;; Hardware stack levels required when called:   14
 16967 ;; This function calls:
 16968 ;;		_strchr
 16969 ;;		_strlen
 16970 ;;		_strncmp
 16971 ;; This function is called by:
 16972 ;;		_ringBufferLUT
 16973 ;; This function uses a non-reentrant model
 16974 ;;
 16975                           
 16976                           	psect	text9
 16977  0181C6                     __ptext9:
 16978                           	opt stack 0
 16979  0181C6                     _strstr:
 16980                           	opt stack 14
 16981                           
 16982                           ;incstack = 0
 16983  0181C6  D034               	goto	l2405
 16984  0181C8  C126  F11D         	movff	strstr@s1,strncmp@s1
 16985  0181CC  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 16986  0181D0  C128  F11F         	movff	strstr@s2,strncmp@s2
 16987  0181D4  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 16988  0181D8  C128  F117         	movff	strstr@s2,strlen@s
 16989  0181DC  C129  F118         	movff	strstr@s2+1,strlen@s+1
 16990  0181E0  EC84  F0C4         	call	_strlen	;wreg free
 16991  0181E4  C117  F121         	movff	?_strlen,strncmp@len
 16992  0181E8  C118  F122         	movff	?_strlen+1,strncmp@len+1
 16993  0181EC  EC9B  F0C0         	call	_strncmp	;wreg free
 16994  0181F0  0101               	movlb	1	; () banked
 16995  0181F2  511D               	movf	?_strncmp& (0+255),w,b
 16996  0181F4  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 16997  0181F6  A4D8               	btfss	status,2,c
 16998  0181F8  D005               	goto	l2407
 16999                           
 17000                           ; BSR set to: 1
 17001  0181FA  C126  F126         	movff	strstr@s1,?_strstr
 17002  0181FE  C127  F127         	movff	strstr@s1+1,?_strstr+1
 17003                           
 17004                           ; BSR set to: 1
 17005  018202  0012               	return	
 17006  018204                     l2407:
 17007                           
 17008                           ; BSR set to: 1
 17009                           
 17010                           ; BSR set to: 1
 17011  018204  0E01               	movlw	1
 17012  018206  2526               	addwf	strstr@s1& (0+255),w,b
 17013  018208  6F17               	movwf	strchr@ptr& (0+255),b
 17014  01820A  0E00               	movlw	0
 17015  01820C  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 17016  01820E  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 17017  018210  C128  FFF6         	movff	strstr@s2,tblptrl
 17018  018214  C129  FFF7         	movff	strstr@s2+1,tblptrh
 17019  018218                     	if	0	;tblptru may be non-zero
 17020  018218                     	endif
 17021  018218                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17022  018218  0E00               	movlw	low (__mediumconst shr (0+16))
 17023  01821A  6EF8               	movwf	tblptru,c
 17024  01821C                     	endif
 17025  01821C  0008               	tblrd		*
 17026  01821E  50F5               	movf	tablat,w,c
 17027  018220  6F19               	movwf	strchr@chr& (0+255),b
 17028  018222  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 17029  018224  EC39  F0C7         	call	_strchr	;wreg free
 17030  018228  C117  F126         	movff	?_strchr,strstr@s1
 17031  01822C  C118  F127         	movff	?_strchr+1,strstr@s1+1
 17032  018230                     l2405:
 17033  018230  0101               	movlb	1	; () banked
 17034  018232  5126               	movf	strstr@s1& (0+255),w,b
 17035  018234  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 17036  018236  B4D8               	btfsc	status,2,c
 17037  018238  D007               	goto	u26010
 17038                           
 17039                           ; BSR set to: 1
 17040  01823A  C126  FFD9         	movff	strstr@s1,fsr2l
 17041  01823E  C127  FFDA         	movff	strstr@s1+1,fsr2h
 17042  018242  50DF               	movf	indf2,w,c
 17043  018244  A4D8               	btfss	status,2,c
 17044  018246  D7C0               	goto	l2406
 17045  018248                     u26010:
 17046                           
 17047                           ; BSR set to: 1
 17048                           
 17049                           ; BSR set to: 1
 17050                           
 17051                           ; BSR set to: 1
 17052  018248  0E00               	movlw	0
 17053  01824A  6F26               	movwf	?_strstr& (0+255),b
 17054  01824C  0E00               	movlw	0
 17055  01824E  6F27               	movwf	(?_strstr+1)& (0+255),b
 17056  018250  0012               	return	
 17057  018252                     __end_of_strstr:
 17058                           	opt stack 0
 17059                           tblptru	equ	0xFF8
 17060                           tblptrh	equ	0xFF7
 17061                           tblptrl	equ	0xFF6
 17062                           tablat	equ	0xFF5
 17063                           intcon	equ	0xFF2
 17064                           postinc0	equ	0xFEE
 17065                           wreg	equ	0xFE8
 17066                           indf1	equ	0xFE7
 17067                           postdec1	equ	0xFE5
 17068                           fsr1h	equ	0xFE2
 17069                           fsr1l	equ	0xFE1
 17070                           indf2	equ	0xFDF
 17071                           postinc2	equ	0xFDE
 17072                           fsr2h	equ	0xFDA
 17073                           fsr2l	equ	0xFD9
 17074                           status	equ	0xFD8
 17075                           
 17076 ;; *************** function _strncmp *****************
 17077 ;; Defined at:
 17078 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 17079 ;; Parameters:    Size  Location     Type
 17080 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 17081 ;;		 -> NULL(0), line(64), 
 17082 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 17083 ;;		 -> STR_109(25), 
 17084 ;;  len             2   33[BANK1 ] unsigned int 
 17085 ;; Auto vars:     Size  Location     Type
 17086 ;;		None
 17087 ;; Return value:  Size  Location     Type
 17088 ;;                  2   29[BANK1 ] int 
 17089 ;; Registers used:
 17090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17091 ;; Tracked objects:
 17092 ;;		On entry : 0/0
 17093 ;;		On exit  : 0/0
 17094 ;;		Unchanged: 0/0
 17095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17096 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17098 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17099 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17100 ;;Total ram usage:        9 bytes
 17101 ;; Hardware stack levels used:    1
 17102 ;; Hardware stack levels required when called:   13
 17103 ;; This function calls:
 17104 ;;		Nothing
 17105 ;; This function is called by:
 17106 ;;		_strstr
 17107 ;; This function uses a non-reentrant model
 17108 ;;
 17109                           
 17110                           	psect	text10
 17111  018136                     __ptext10:
 17112                           	opt stack 0
 17113  018136                     _strncmp:
 17114                           	opt stack 14
 17115                           
 17116                           ; BSR set to: 1
 17117                           ;incstack = 0
 17118  018136  D039               	goto	l2464
 17119  018138                     l19478:
 17120  018138  C11D  FFD9         	movff	strncmp@s1,fsr2l
 17121  01813C  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 17122  018140  50DF               	movf	indf2,w,c
 17123  018142  B4D8               	btfsc	status,2,c
 17124  018144  D012               	goto	u25850
 17125  018146  C11D  FFD9         	movff	strncmp@s1,fsr2l
 17126  01814A  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 17127  01814E  50DF               	movf	indf2,w,c
 17128  018150  0101               	movlb	1	; () banked
 17129  018152  6F23               	movwf	??_strncmp& (0+255),b
 17130  018154  C11F  FFF6         	movff	strncmp@s2,tblptrl
 17131  018158  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 17132  01815C                     	if	0	;tblptru may be non-zero
 17133  01815C                     	endif
 17134  01815C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17135  01815C  0E00               	movlw	low (__mediumconst shr (0+16))
 17136  01815E  6EF8               	movwf	tblptru,c
 17137  018160                     	endif
 17138  018160  0008               	tblrd		*
 17139  018162  50F5               	movf	tablat,w,c
 17140  018164  1923               	xorwf	??_strncmp& (0+255),w,b
 17141  018166  B4D8               	btfsc	status,2,c
 17142  018168  D01C               	goto	l2466
 17143  01816A                     u25850:
 17144                           
 17145                           ; BSR set to: 1
 17146  01816A  C11F  FFF6         	movff	strncmp@s2,tblptrl
 17147  01816E  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 17148  018172                     	if	0	;tblptru may be non-zero
 17149  018172                     	endif
 17150  018172                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17151  018172  0E00               	movlw	low (__mediumconst shr (0+16))
 17152  018174  6EF8               	movwf	tblptru,c
 17153  018176                     	endif
 17154  018176  0008               	tblrd		*
 17155  018178  50F5               	movf	tablat,w,c
 17156  01817A  0101               	movlb	1	; () banked
 17157  01817C  6F23               	movwf	??_strncmp& (0+255),b
 17158  01817E  6B24               	clrf	(??_strncmp+1)& (0+255),b
 17159  018180  1F23               	comf	??_strncmp& (0+255),f,b
 17160  018182  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 17161  018184  4B23               	infsnz	??_strncmp& (0+255),f,b
 17162  018186  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 17163  018188  C11D  FFD9         	movff	strncmp@s1,fsr2l
 17164  01818C  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 17165  018190  50DF               	movf	indf2,w,c
 17166  018192  6F25               	movwf	(??_strncmp+2)& (0+255),b
 17167  018194  5125               	movf	(??_strncmp+2)& (0+255),w,b
 17168  018196  2523               	addwf	??_strncmp& (0+255),w,b
 17169  018198  6F1D               	movwf	?_strncmp& (0+255),b
 17170  01819A  0E00               	movlw	0
 17171  01819C  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 17172  01819E  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 17173                           
 17174                           ; BSR set to: 1
 17175  0181A0  0012               	return	
 17176  0181A2                     l2466:
 17177                           
 17178                           ; BSR set to: 1
 17179                           
 17180                           ; BSR set to: 1
 17181  0181A2  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 17182  0181A4  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 17183  0181A6  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 17184  0181A8  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 17185  0181AA                     l2464:
 17186                           
 17187                           ; BSR set to: 1
 17188  0181AA  0101               	movlb	1	; () banked
 17189  0181AC  0721               	decf	strncmp@len& (0+255),f,b
 17190  0181AE  A0D8               	btfss	status,0,c
 17191  0181B0  0722               	decf	(strncmp@len+1)& (0+255),f,b
 17192  0181B2  2921               	incf	strncmp@len& (0+255),w,b
 17193  0181B4  E1C1               	bnz	l19478
 17194  0181B6  2922               	incf	(strncmp@len+1)& (0+255),w,b
 17195  0181B8  A4D8               	btfss	status,2,c
 17196  0181BA  D7BE               	goto	l2465
 17197                           
 17198                           ; BSR set to: 1
 17199                           
 17200                           ; BSR set to: 1
 17201  0181BC  0E00               	movlw	0
 17202  0181BE  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 17203  0181C0  0E00               	movlw	0
 17204  0181C2  6F1D               	movwf	?_strncmp& (0+255),b
 17205  0181C4  0012               	return	
 17206  0181C6                     __end_of_strncmp:
 17207                           	opt stack 0
 17208                           tblptru	equ	0xFF8
 17209                           tblptrh	equ	0xFF7
 17210                           tblptrl	equ	0xFF6
 17211                           tablat	equ	0xFF5
 17212                           intcon	equ	0xFF2
 17213                           postinc0	equ	0xFEE
 17214                           wreg	equ	0xFE8
 17215                           indf1	equ	0xFE7
 17216                           postdec1	equ	0xFE5
 17217                           fsr1h	equ	0xFE2
 17218                           fsr1l	equ	0xFE1
 17219                           indf2	equ	0xFDF
 17220                           postinc2	equ	0xFDE
 17221                           fsr2h	equ	0xFDA
 17222                           fsr2l	equ	0xFD9
 17223                           status	equ	0xFD8
 17224                           
 17225 ;; *************** function _strlen *****************
 17226 ;; Defined at:
 17227 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 17228 ;; Parameters:    Size  Location     Type
 17229 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 17230 ;;		 -> STR_109(25), line(64), 
 17231 ;; Auto vars:     Size  Location     Type
 17232 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 17233 ;;		 -> STR_109(25), line(64), 
 17234 ;; Return value:  Size  Location     Type
 17235 ;;                  2   23[BANK1 ] unsigned int 
 17236 ;; Registers used:
 17237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17238 ;; Tracked objects:
 17239 ;;		On entry : 0/0
 17240 ;;		On exit  : 0/0
 17241 ;;		Unchanged: 0/0
 17242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17243 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17244 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17245 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17246 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17247 ;;Total ram usage:        6 bytes
 17248 ;; Hardware stack levels used:    1
 17249 ;; Hardware stack levels required when called:   13
 17250 ;; This function calls:
 17251 ;;		Nothing
 17252 ;; This function is called by:
 17253 ;;		_terminal_ringBufferPull
 17254 ;;		_strstr
 17255 ;; This function uses a non-reentrant model
 17256 ;;
 17257                           
 17258                           	psect	text11
 17259  018908                     __ptext11:
 17260                           	opt stack 0
 17261  018908                     _strlen:
 17262                           	opt stack 16
 17263                           
 17264                           ; BSR set to: 1
 17265                           ;incstack = 0
 17266  018908  C117  F11B         	movff	strlen@s,strlen@cp
 17267  01890C  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 17268  018910  D003               	goto	l2383
 17269  018912  0101               	movlb	1	; () banked
 17270  018914  4B1B               	infsnz	strlen@cp& (0+255),f,b
 17271  018916  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 17272  018918                     l2383:
 17273                           
 17274                           ; BSR set to: 1
 17275  018918  C11B  FFF6         	movff	strlen@cp,tblptrl
 17276  01891C  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 17277  018920  0E00               	movlw	low (__mediumconst shr (0+16))
 17278  018922  6EF8               	movwf	tblptru,c
 17279  018924  0E0D               	movlw	(high __ramtop+-1)
 17280  018926  64F7               	cpfsgt	tblptrh,c
 17281  018928  D003               	bra	u25827
 17282  01892A  0008               	tblrd		*
 17283  01892C  50F5               	movf	tablat,w,c
 17284  01892E  D005               	bra	u25820
 17285  018930                     u25827:
 17286  018930  CFF6 FFE9          	movff	tblptrl,fsr0l
 17287  018934  CFF7 FFEA          	movff	tblptrh,fsr0h
 17288  018938  50EF               	movf	indf0,w,c
 17289  01893A                     u25820:
 17290  01893A  0900               	iorlw	0
 17291  01893C  A4D8               	btfss	status,2,c
 17292  01893E  D7E9               	goto	l2384
 17293  018940  C117  F119         	movff	strlen@s,??_strlen
 17294  018944  C118  F11A         	movff	strlen@s+1,??_strlen+1
 17295  018948  0101               	movlb	1	; () banked
 17296  01894A  1F19               	comf	??_strlen& (0+255),f,b
 17297  01894C  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 17298  01894E  4B19               	infsnz	??_strlen& (0+255),f,b
 17299  018950  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 17300  018952  511B               	movf	strlen@cp& (0+255),w,b
 17301  018954  2519               	addwf	??_strlen& (0+255),w,b
 17302  018956  6F17               	movwf	?_strlen& (0+255),b
 17303  018958  511C               	movf	(strlen@cp+1)& (0+255),w,b
 17304  01895A  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 17305  01895C  6F18               	movwf	(?_strlen+1)& (0+255),b
 17306  01895E  0012               	return	
 17307  018960                     __end_of_strlen:
 17308                           	opt stack 0
 17309                           tblptru	equ	0xFF8
 17310                           tblptrh	equ	0xFF7
 17311                           tblptrl	equ	0xFF6
 17312                           tablat	equ	0xFF5
 17313                           intcon	equ	0xFF2
 17314                           indf0	equ	0xFEF
 17315                           postinc0	equ	0xFEE
 17316                           fsr0h	equ	0xFEA
 17317                           fsr0l	equ	0xFE9
 17318                           wreg	equ	0xFE8
 17319                           indf1	equ	0xFE7
 17320                           postdec1	equ	0xFE5
 17321                           fsr1h	equ	0xFE2
 17322                           fsr1l	equ	0xFE1
 17323                           indf2	equ	0xFDF
 17324                           postinc2	equ	0xFDE
 17325                           fsr2h	equ	0xFDA
 17326                           fsr2l	equ	0xFD9
 17327                           status	equ	0xFD8
 17328                           
 17329 ;; *************** function _strchr *****************
 17330 ;; Defined at:
 17331 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 17332 ;; Parameters:    Size  Location     Type
 17333 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 17334 ;;		 -> NULL(0), line(64), 
 17335 ;;  chr             2   25[BANK1 ] int 
 17336 ;; Auto vars:     Size  Location     Type
 17337 ;;		None
 17338 ;; Return value:  Size  Location     Type
 17339 ;;                  2   23[BANK1 ] PTR unsigned char 
 17340 ;; Registers used:
 17341 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17342 ;; Tracked objects:
 17343 ;;		On entry : 0/0
 17344 ;;		On exit  : 0/0
 17345 ;;		Unchanged: 0/0
 17346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17347 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17349 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17350 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17351 ;;Total ram usage:        5 bytes
 17352 ;; Hardware stack levels used:    1
 17353 ;; Hardware stack levels required when called:   13
 17354 ;; This function calls:
 17355 ;;		Nothing
 17356 ;; This function is called by:
 17357 ;;		_strstr
 17358 ;; This function uses a non-reentrant model
 17359 ;;
 17360                           
 17361                           	psect	text12
 17362  018E72                     __ptext12:
 17363                           	opt stack 0
 17364  018E72                     _strchr:
 17365                           	opt stack 14
 17366                           
 17367                           ; BSR set to: 1
 17368                           ;incstack = 0
 17369  018E72  C117  FFD9         	movff	strchr@ptr,fsr2l
 17370  018E76  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 17371  018E7A  0101               	movlb	1	; () banked
 17372  018E7C  5119               	movf	strchr@chr& (0+255),w,b
 17373  018E7E  18DE               	xorwf	postinc2,w,c
 17374  018E80  A4D8               	btfss	status,2,c
 17375  018E82  D005               	goto	l2459
 17376                           
 17377                           ; BSR set to: 1
 17378  018E84  C117  F117         	movff	strchr@ptr,?_strchr
 17379  018E88  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 17380                           
 17381                           ; BSR set to: 1
 17382  018E8C  0012               	return	
 17383  018E8E                     l2459:
 17384                           
 17385                           ; BSR set to: 1
 17386                           
 17387                           ; BSR set to: 1
 17388  018E8E  C117  FFD9         	movff	strchr@ptr,fsr2l
 17389  018E92  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 17390  018E96  4B17               	infsnz	strchr@ptr& (0+255),f,b
 17391  018E98  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 17392  018E9A  50DF               	movf	indf2,w,c
 17393  018E9C  A4D8               	btfss	status,2,c
 17394  018E9E  D7E9               	goto	_strchr
 17395                           
 17396                           ; BSR set to: 1
 17397                           
 17398                           ; BSR set to: 1
 17399  018EA0  0E00               	movlw	0
 17400  018EA2  6F17               	movwf	?_strchr& (0+255),b
 17401  018EA4  0E00               	movlw	0
 17402  018EA6  6F18               	movwf	(?_strchr+1)& (0+255),b
 17403  018EA8  0012               	return	
 17404  018EAA                     __end_of_strchr:
 17405                           	opt stack 0
 17406                           tblptru	equ	0xFF8
 17407                           tblptrh	equ	0xFF7
 17408                           tblptrl	equ	0xFF6
 17409                           tablat	equ	0xFF5
 17410                           intcon	equ	0xFF2
 17411                           indf0	equ	0xFEF
 17412                           postinc0	equ	0xFEE
 17413                           fsr0h	equ	0xFEA
 17414                           fsr0l	equ	0xFE9
 17415                           wreg	equ	0xFE8
 17416                           indf1	equ	0xFE7
 17417                           postdec1	equ	0xFE5
 17418                           fsr1h	equ	0xFE2
 17419                           fsr1l	equ	0xFE1
 17420                           indf2	equ	0xFDF
 17421                           postinc2	equ	0xFDE
 17422                           fsr2h	equ	0xFDA
 17423                           fsr2l	equ	0xFD9
 17424                           status	equ	0xFD8
 17425                           
 17426 ;; *************** function _strcpy *****************
 17427 ;; Defined at:
 17428 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;  to              2   23[BANK1 ] PTR unsigned char 
 17431 ;;		 -> ringBufferLUT@channel_name(22), 
 17432 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 17433 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 17434 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 17435 ;; Auto vars:     Size  Location     Type
 17436 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 17437 ;;		 -> ringBufferLUT@channel_name(22), 
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  2   23[BANK1 ] PTR unsigned char 
 17440 ;; Registers used:
 17441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17447 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17448 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17450 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17451 ;;Total ram usage:        6 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; Hardware stack levels required when called:   13
 17454 ;; This function calls:
 17455 ;;		Nothing
 17456 ;; This function is called by:
 17457 ;;		_ringBufferLUT
 17458 ;; This function uses a non-reentrant model
 17459 ;;
 17460                           
 17461                           	psect	text13
 17462  018EAA                     __ptext13:
 17463                           	opt stack 0
 17464  018EAA                     _strcpy:
 17465                           	opt stack 15
 17466                           
 17467                           ; BSR set to: 1
 17468                           ;incstack = 0
 17469  018EAA  C117  F11B         	movff	strcpy@to,strcpy@cp
 17470  018EAE  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 17471  018EB2  D005               	goto	l2377
 17472  018EB4  0101               	movlb	1	; () banked
 17473  018EB6  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 17474  018EB8  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 17475  018EBA  4B19               	infsnz	strcpy@from& (0+255),f,b
 17476  018EBC  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 17477  018EBE                     l2377:
 17478                           
 17479                           ; BSR set to: 1
 17480  018EBE  C119  FFF6         	movff	strcpy@from,tblptrl
 17481  018EC2  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 17482  018EC6                     	if	0	;tblptru may be non-zero
 17483  018EC6                     	endif
 17484  018EC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17485  018EC6  0E00               	movlw	low (__mediumconst shr (0+16))
 17486  018EC8  6EF8               	movwf	tblptru,c
 17487  018ECA                     	endif
 17488  018ECA  C11B  FFD9         	movff	strcpy@cp,fsr2l
 17489  018ECE  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 17490  018ED2  0008               	tblrd		*
 17491  018ED4  CFF5 FFDF          	movff	tablat,indf2
 17492  018ED8  50DF               	movf	indf2,w,c
 17493  018EDA  B4D8               	btfsc	status,2,c
 17494  018EDC  0012               	return	
 17495  018EDE  D7EA               	goto	l2378
 17496  018EE0                     __end_of_strcpy:
 17497                           	opt stack 0
 17498                           tblptru	equ	0xFF8
 17499                           tblptrh	equ	0xFF7
 17500                           tblptrl	equ	0xFF6
 17501                           tablat	equ	0xFF5
 17502                           intcon	equ	0xFF2
 17503                           indf0	equ	0xFEF
 17504                           postinc0	equ	0xFEE
 17505                           fsr0h	equ	0xFEA
 17506                           fsr0l	equ	0xFE9
 17507                           wreg	equ	0xFE8
 17508                           indf1	equ	0xFE7
 17509                           postdec1	equ	0xFE5
 17510                           fsr1h	equ	0xFE2
 17511                           fsr1l	equ	0xFE1
 17512                           indf2	equ	0xFDF
 17513                           postinc2	equ	0xFDE
 17514                           fsr2h	equ	0xFDA
 17515                           fsr2l	equ	0xFD9
 17516                           status	equ	0xFD8
 17517                           
 17518 ;; *************** function _strcmp *****************
 17519 ;; Defined at:
 17520 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 17521 ;; Parameters:    Size  Location     Type
 17522 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 17523 ;;		 -> line(64), 
 17524 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 17525 ;;		 -> STR_144(5), STR_142(9), STR_140(29), STR_138(34), 
 17526 ;;		 -> STR_136(33), STR_134(29), STR_132(17), STR_130(17), 
 17527 ;;		 -> STR_128(14), STR_126(19), STR_124(20), STR_122(11), 
 17528 ;;		 -> STR_120(17), STR_118(14), STR_116(16), STR_107(13), 
 17529 ;;		 -> STR_103(17), STR_100(14), STR_98(12), STR_96(16), 
 17530 ;;		 -> STR_94(15), STR_92(15), STR_90(21), STR_88(21), 
 17531 ;;		 -> STR_86(26), STR_84(14), STR_82(13), STR_80(18), 
 17532 ;;		 -> STR_78(15), STR_76(16), STR_73(17), STR_71(16), 
 17533 ;;		 -> STR_60(11), STR_57(10), STR_55(13), STR_53(11), 
 17534 ;;		 -> STR_50(4), STR_49(6), STR_47(16), STR_44(6), 
 17535 ;;		 -> STR_41(6), 
 17536 ;; Auto vars:     Size  Location     Type
 17537 ;;  r               1   28[BANK1 ] char 
 17538 ;; Return value:  Size  Location     Type
 17539 ;;                  2   23[BANK1 ] int 
 17540 ;; Registers used:
 17541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17542 ;; Tracked objects:
 17543 ;;		On entry : 0/0
 17544 ;;		On exit  : 0/0
 17545 ;;		Unchanged: 0/0
 17546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17547 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17548 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17549 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17550 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17551 ;;Total ram usage:        6 bytes
 17552 ;; Hardware stack levels used:    1
 17553 ;; Hardware stack levels required when called:   13
 17554 ;; This function calls:
 17555 ;;		Nothing
 17556 ;; This function is called by:
 17557 ;;		_ringBufferLUT
 17558 ;; This function uses a non-reentrant model
 17559 ;;
 17560                           
 17561                           	psect	text14
 17562  018A04                     __ptext14:
 17563                           	opt stack 0
 17564  018A04                     _strcmp:
 17565                           	opt stack 15
 17566                           
 17567                           ;incstack = 0
 17568  018A04  D005               	goto	l2369
 17569  018A06  0101               	movlb	1	; () banked
 17570  018A08  4B17               	infsnz	strcmp@s1& (0+255),f,b
 17571  018A0A  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 17572  018A0C  4B19               	infsnz	strcmp@s2& (0+255),f,b
 17573  018A0E  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 17574  018A10                     l2369:
 17575                           
 17576                           ; BSR set to: 1
 17577  018A10  C117  FFD9         	movff	strcmp@s1,fsr2l
 17578  018A14  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 17579  018A18  50DF               	movf	indf2,w,c
 17580  018A1A  0101               	movlb	1	; () banked
 17581  018A1C  6F1B               	movwf	??_strcmp& (0+255),b
 17582  018A1E  C119  FFF6         	movff	strcmp@s2,tblptrl
 17583  018A22  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 17584  018A26                     	if	0	;tblptru may be non-zero
 17585  018A26                     	endif
 17586  018A26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17587  018A26  0E00               	movlw	low (__mediumconst shr (0+16))
 17588  018A28  6EF8               	movwf	tblptru,c
 17589  018A2A                     	endif
 17590  018A2A  0008               	tblrd		*
 17591  018A2C  50F5               	movf	tablat,w,c
 17592  018A2E  0800               	sublw	0
 17593  018A30  251B               	addwf	??_strcmp& (0+255),w,b
 17594  018A32  6F1C               	movwf	strcmp@r& (0+255),b
 17595  018A34  511C               	movf	strcmp@r& (0+255),w,b
 17596  018A36  A4D8               	btfss	status,2,c
 17597  018A38  D007               	goto	u25940
 17598                           
 17599                           ; BSR set to: 1
 17600  018A3A  C117  FFD9         	movff	strcmp@s1,fsr2l
 17601  018A3E  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 17602  018A42  50DF               	movf	indf2,w,c
 17603  018A44  A4D8               	btfss	status,2,c
 17604  018A46  D7DF               	goto	l2370
 17605  018A48                     u25940:
 17606                           
 17607                           ; BSR set to: 1
 17608                           
 17609                           ; BSR set to: 1
 17610                           
 17611                           ; BSR set to: 1
 17612  018A48  511C               	movf	strcmp@r& (0+255),w,b
 17613  018A4A  6F17               	movwf	?_strcmp& (0+255),b
 17614  018A4C  6B18               	clrf	(?_strcmp+1)& (0+255),b
 17615  018A4E  BF17               	btfsc	?_strcmp& (0+255),7,b
 17616  018A50  0718               	decf	(?_strcmp+1)& (0+255),f,b
 17617  018A52  0012               	return	
 17618  018A54                     __end_of_strcmp:
 17619                           	opt stack 0
 17620                           tblptru	equ	0xFF8
 17621                           tblptrh	equ	0xFF7
 17622                           tblptrl	equ	0xFF6
 17623                           tablat	equ	0xFF5
 17624                           intcon	equ	0xFF2
 17625                           indf0	equ	0xFEF
 17626                           postinc0	equ	0xFEE
 17627                           fsr0h	equ	0xFEA
 17628                           fsr0l	equ	0xFE9
 17629                           wreg	equ	0xFE8
 17630                           indf1	equ	0xFE7
 17631                           postdec1	equ	0xFE5
 17632                           fsr1h	equ	0xFE2
 17633                           fsr1l	equ	0xFE1
 17634                           indf2	equ	0xFDF
 17635                           postinc2	equ	0xFDE
 17636                           fsr2h	equ	0xFDA
 17637                           fsr2l	equ	0xFD9
 17638                           status	equ	0xFD8
 17639                           
 17640 ;; *************** function _getUserID *****************
 17641 ;; Defined at:
 17642 ;;		line 65 in file "device_IDs.c"
 17643 ;; Parameters:    Size  Location     Type
 17644 ;;  inputUserID     1    wreg     unsigned char 
 17645 ;; Auto vars:     Size  Location     Type
 17646 ;;  inputUserID     1   36[BANK1 ] unsigned char 
 17647 ;;  initialOffse    4   37[BANK1 ] unsigned long 
 17648 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 17649 ;; Return value:  Size  Location     Type
 17650 ;;                  2   34[BANK1 ] unsigned int 
 17651 ;; Registers used:
 17652 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17653 ;; Tracked objects:
 17654 ;;		On entry : 0/0
 17655 ;;		On exit  : 0/0
 17656 ;;		Unchanged: 0/0
 17657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17658 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17659 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17661 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17662 ;;Total ram usage:        8 bytes
 17663 ;; Hardware stack levels used:    1
 17664 ;; Hardware stack levels required when called:   15
 17665 ;; This function calls:
 17666 ;;		_FLASH_ReadWord
 17667 ;; This function is called by:
 17668 ;;		_ringBufferLUT
 17669 ;; This function uses a non-reentrant model
 17670 ;;
 17671                           
 17672                           	psect	text15
 17673  018CF6                     __ptext15:
 17674                           	opt stack 0
 17675  018CF6                     _getUserID:
 17676                           	opt stack 13
 17677                           
 17678                           ; BSR set to: 1
 17679                           ;incstack = 0
 17680                           ;getUserID@inputUserID stored from wreg
 17681  018CF6  0101               	movlb	1	; () banked
 17682  018CF8  6F24               	movwf	getUserID@inputUserID& (0+255),b
 17683                           
 17684                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 17685  018CFA  0E00               	movlw	0
 17686  018CFC  0101               	movlb	1	; () banked
 17687  018CFE  6F25               	movwf	getUserID@initialOffset& (0+255),b
 17688  018D00  0E00               	movlw	0
 17689  018D02  6F26               	movwf	(getUserID@initialOffset+1)& (0+255),b
 17690  018D04  0E20               	movlw	32
 17691  018D06  6F27               	movwf	(getUserID@initialOffset+2)& (0+255),b
 17692  018D08  0E00               	movlw	0
 17693  018D0A  6F28               	movwf	(getUserID@initialOffset+3)& (0+255),b
 17694                           
 17695                           ; BSR set to: 1
 17696                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 17697  018D0C  5124               	movf	getUserID@inputUserID& (0+255),w,b
 17698  018D0E  0D02               	mullw	2
 17699  018D10  CFF3 F129          	movff	prodl,getUserID@IDOffset
 17700                           
 17701                           ; BSR set to: 1
 17702                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 17703  018D14  5129               	movf	getUserID@IDOffset& (0+255),w,b
 17704  018D16  2525               	addwf	getUserID@initialOffset& (0+255),w,b
 17705  018D18  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 17706  018D1A  0E00               	movlw	0
 17707  018D1C  2126               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 17708  018D1E  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 17709  018D20  0E00               	movlw	0
 17710  018D22  2127               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 17711  018D24  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 17712  018D26  0E00               	movlw	0
 17713  018D28  2128               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 17714  018D2A  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 17715  018D2C  EC9D  F0C6         	call	_FLASH_ReadWord	;wreg free
 17716  018D30  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 17717  018D34  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 17718  018D38  0012               	return	
 17719  018D3A                     __end_of_getUserID:
 17720                           	opt stack 0
 17721                           tblptru	equ	0xFF8
 17722                           tblptrh	equ	0xFF7
 17723                           tblptrl	equ	0xFF6
 17724                           tablat	equ	0xFF5
 17725                           prodl	equ	0xFF3
 17726                           intcon	equ	0xFF2
 17727                           indf0	equ	0xFEF
 17728                           postinc0	equ	0xFEE
 17729                           fsr0h	equ	0xFEA
 17730                           fsr0l	equ	0xFE9
 17731                           wreg	equ	0xFE8
 17732                           indf1	equ	0xFE7
 17733                           postdec1	equ	0xFE5
 17734                           fsr1h	equ	0xFE2
 17735                           fsr1l	equ	0xFE1
 17736                           indf2	equ	0xFDF
 17737                           postinc2	equ	0xFDE
 17738                           fsr2h	equ	0xFDA
 17739                           fsr2l	equ	0xFD9
 17740                           status	equ	0xFD8
 17741                           
 17742 ;; *************** function _getMinorRevisionID *****************
 17743 ;; Defined at:
 17744 ;;		line 23 in file "device_IDs.c"
 17745 ;; Parameters:    Size  Location     Type
 17746 ;;		None
 17747 ;; Auto vars:     Size  Location     Type
 17748 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 17749 ;; Return value:  Size  Location     Type
 17750 ;;                  1    wreg      unsigned char 
 17751 ;; Registers used:
 17752 ;;		wreg, status,2, status,0, cstack
 17753 ;; Tracked objects:
 17754 ;;		On entry : 0/0
 17755 ;;		On exit  : 0/0
 17756 ;;		Unchanged: 0/0
 17757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17759 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17761 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17762 ;;Total ram usage:        2 bytes
 17763 ;; Hardware stack levels used:    1
 17764 ;; Hardware stack levels required when called:   15
 17765 ;; This function calls:
 17766 ;;		_FLASH_ReadWord
 17767 ;; This function is called by:
 17768 ;;		_ringBufferLUT
 17769 ;; This function uses a non-reentrant model
 17770 ;;
 17771                           
 17772                           	psect	text16
 17773  019112                     __ptext16:
 17774                           	opt stack 0
 17775  019112                     _getMinorRevisionID:
 17776                           	opt stack 13
 17777                           
 17778                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 17779                           
 17780                           ;incstack = 0
 17781  019112  0EFC               	movlw	252
 17782  019114  0101               	movlb	1	; () banked
 17783  019116  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 17784  019118  0EFF               	movlw	255
 17785  01911A  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 17786  01911C  0E3F               	movlw	63
 17787  01911E  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 17788  019120  0E00               	movlw	0
 17789  019122  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 17790  019124  EC9D  F0C6         	call	_FLASH_ReadWord	;wreg free
 17791  019128  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 17792  01912C  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 17793                           
 17794                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 17795  019130  0101               	movlb	1	; () banked
 17796  019132  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 17797  019134  0B1F               	andlw	31
 17798  019136  0012               	return	
 17799  019138                     __end_of_getMinorRevisionID:
 17800                           	opt stack 0
 17801                           tblptru	equ	0xFF8
 17802                           tblptrh	equ	0xFF7
 17803                           tblptrl	equ	0xFF6
 17804                           tablat	equ	0xFF5
 17805                           prodl	equ	0xFF3
 17806                           intcon	equ	0xFF2
 17807                           indf0	equ	0xFEF
 17808                           postinc0	equ	0xFEE
 17809                           fsr0h	equ	0xFEA
 17810                           fsr0l	equ	0xFE9
 17811                           wreg	equ	0xFE8
 17812                           indf1	equ	0xFE7
 17813                           postdec1	equ	0xFE5
 17814                           fsr1h	equ	0xFE2
 17815                           fsr1l	equ	0xFE1
 17816                           indf2	equ	0xFDF
 17817                           postinc2	equ	0xFDE
 17818                           fsr2h	equ	0xFDA
 17819                           fsr2l	equ	0xFD9
 17820                           status	equ	0xFD8
 17821                           
 17822 ;; *************** function _getMajorRevisionID *****************
 17823 ;; Defined at:
 17824 ;;		line 12 in file "device_IDs.c"
 17825 ;; Parameters:    Size  Location     Type
 17826 ;;		None
 17827 ;; Auto vars:     Size  Location     Type
 17828 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 17829 ;; Return value:  Size  Location     Type
 17830 ;;                  1    wreg      unsigned char 
 17831 ;; Registers used:
 17832 ;;		wreg, status,2, status,0, cstack
 17833 ;; Tracked objects:
 17834 ;;		On entry : 0/0
 17835 ;;		On exit  : 0/0
 17836 ;;		Unchanged: 0/0
 17837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17839 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17840 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17841 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17842 ;;Total ram usage:        5 bytes
 17843 ;; Hardware stack levels used:    1
 17844 ;; Hardware stack levels required when called:   15
 17845 ;; This function calls:
 17846 ;;		_FLASH_ReadWord
 17847 ;; This function is called by:
 17848 ;;		_ringBufferLUT
 17849 ;; This function uses a non-reentrant model
 17850 ;;
 17851                           
 17852                           	psect	text17
 17853  018DFA                     __ptext17:
 17854                           	opt stack 0
 17855  018DFA                     _getMajorRevisionID:
 17856                           	opt stack 13
 17857                           
 17858                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 17859                           
 17860                           ; BSR set to: 1
 17861                           ;incstack = 0
 17862  018DFA  0EFC               	movlw	252
 17863  018DFC  0101               	movlb	1	; () banked
 17864  018DFE  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 17865  018E00  0EFF               	movlw	255
 17866  018E02  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 17867  018E04  0E3F               	movlw	63
 17868  018E06  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 17869  018E08  0E00               	movlw	0
 17870  018E0A  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 17871  018E0C  EC9D  F0C6         	call	_FLASH_ReadWord	;wreg free
 17872  018E10  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 17873  018E14  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 17874                           
 17875                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 17876  018E18  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 17877  018E1C  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 17878  018E20  0E06               	movlw	6
 17879  018E22  0101               	movlb	1	; () banked
 17880  018E24  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 17881  018E26                     u25975:
 17882  018E26  90D8               	bcf	status,0,c
 17883  018E28  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 17884  018E2A  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 17885  018E2C  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 17886  018E2E  D7FB               	goto	u25975
 17887  018E30  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 17888  018E32  0B1F               	andlw	31
 17889  018E34  0012               	return	
 17890  018E36                     __end_of_getMajorRevisionID:
 17891                           	opt stack 0
 17892                           tblptru	equ	0xFF8
 17893                           tblptrh	equ	0xFF7
 17894                           tblptrl	equ	0xFF6
 17895                           tablat	equ	0xFF5
 17896                           prodl	equ	0xFF3
 17897                           intcon	equ	0xFF2
 17898                           indf0	equ	0xFEF
 17899                           postinc0	equ	0xFEE
 17900                           fsr0h	equ	0xFEA
 17901                           fsr0l	equ	0xFE9
 17902                           wreg	equ	0xFE8
 17903                           indf1	equ	0xFE7
 17904                           postdec1	equ	0xFE5
 17905                           fsr1h	equ	0xFE2
 17906                           fsr1l	equ	0xFE1
 17907                           indf2	equ	0xFDF
 17908                           postinc2	equ	0xFDE
 17909                           fsr2h	equ	0xFDA
 17910                           fsr2l	equ	0xFD9
 17911                           status	equ	0xFD8
 17912                           
 17913 ;; *************** function _getDeviceIDString *****************
 17914 ;; Defined at:
 17915 ;;		line 34 in file "device_IDs.c"
 17916 ;; Parameters:    Size  Location     Type
 17917 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 17918 ;; Auto vars:     Size  Location     Type
 17919 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 17920 ;;		 -> STR_153(10), STR_152(13), STR_151(12), 
 17921 ;; Return value:  Size  Location     Type
 17922 ;;                  2   36[BANK1 ] PTR inline unsigned char
 17923 ;; Registers used:
 17924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17925 ;; Tracked objects:
 17926 ;;		On entry : 0/0
 17927 ;;		On exit  : 0/0
 17928 ;;		Unchanged: 0/0
 17929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17930 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17931 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17932 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17933 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17934 ;;Total ram usage:       10 bytes
 17935 ;; Hardware stack levels used:    1
 17936 ;; Hardware stack levels required when called:   13
 17937 ;; This function calls:
 17938 ;;		Nothing
 17939 ;; This function is called by:
 17940 ;;		_ringBufferLUT
 17941 ;; This function uses a non-reentrant model
 17942 ;;
 17943                           
 17944                           	psect	text18
 17945  018848                     __ptext18:
 17946                           	opt stack 0
 17947  018848                     _getDeviceIDString:
 17948                           	opt stack 15
 17949                           
 17950                           ;device_IDs.c: 37: const char *strings[] = {
 17951                           ;device_IDs.c: 39: "PIC18F67K40",
 17952                           ;device_IDs.c: 40: "PIC18LF67K40",
 17953                           ;device_IDs.c: 41: "Undefined"
 17954                           ;device_IDs.c: 43: };
 17955                           
 17956                           ; BSR set to: 1
 17957                           ;incstack = 0
 17958  018848  EE22  F0E8         	lfsr	2,getDeviceIDString@F17550
 17959  01884C  EE11  F028         	lfsr	1,getDeviceIDString@strings
 17960  018850  0E05               	movlw	5
 17961  018852                     u25961:
 17962  018852  CFDB FFE3          	movff	plusw2,plusw1
 17963  018856  06E8               	decf	wreg,f,c
 17964  018858  E2FC               	bc	u25961
 17965                           
 17966                           ;device_IDs.c: 47: switch (inputDevID) {
 17967  01885A  D00F               	goto	l1417
 17968  01885C                     
 17969                           ;device_IDs.c: 50: return strings[0];
 17970  01885C  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 17971  018860  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 17972                           
 17973                           ;device_IDs.c: 51: break;
 17974  018864  0012               	return	
 17975  018866                     
 17976                           ;device_IDs.c: 54: return strings[1];
 17977  018866  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 17978  01886A  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 17979                           
 17980                           ;device_IDs.c: 55: break;
 17981  01886E  0012               	return	
 17982  018870                     
 17983                           ;device_IDs.c: 58: return strings[2];
 17984  018870  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 17985  018874  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 17986                           
 17987                           ;device_IDs.c: 61: }
 17988                           
 17989                           ;device_IDs.c: 59: break;
 17990  018878  0012               	return	
 17991  01887A                     l1417:
 17992  01887A  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 17993  01887E  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 17994                           
 17995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 17996                           ; Switch size 1, requested type "space"
 17997                           ; Number of cases is 2, Range of values is 106 to 107
 17998                           ; switch strategies available:
 17999                           ; Name         Instructions Cycles
 18000                           ; simple_byte            7     4 (average)
 18001                           ;	Chosen strategy is simple_byte
 18002  018882  0101               	movlb	1	; () banked
 18003  018884  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 18004  018886  0A6A               	xorlw	106	; case 106
 18005  018888  B4D8               	btfsc	status,2,c
 18006  01888A  D004               	goto	l20424
 18007  01888C  0A01               	xorlw	1	; case 107
 18008  01888E  B4D8               	btfsc	status,2,c
 18009  018890  D006               	goto	l20426
 18010  018892  D7EE               	goto	l1422
 18011  018894                     l20424:
 18012                           
 18013                           ; BSR set to: 1
 18014                           ; Switch size 1, requested type "space"
 18015                           ; Number of cases is 1, Range of values is 192 to 192
 18016                           ; switch strategies available:
 18017                           ; Name         Instructions Cycles
 18018                           ; simple_byte            4     3 (average)
 18019                           ;	Chosen strategy is simple_byte
 18020  018894  5126               	movf	??_getDeviceIDString& (0+255),w,b
 18021  018896  0AC0               	xorlw	192	; case 192
 18022  018898  B4D8               	btfsc	status,2,c
 18023  01889A  D7E0               	goto	l1418
 18024  01889C  D7E9               	goto	l1422
 18025  01889E                     l20426:
 18026                           
 18027                           ; BSR set to: 1
 18028                           ; Switch size 1, requested type "space"
 18029                           ; Number of cases is 1, Range of values is 32 to 32
 18030                           ; switch strategies available:
 18031                           ; Name         Instructions Cycles
 18032                           ; simple_byte            4     3 (average)
 18033                           ;	Chosen strategy is simple_byte
 18034  01889E  5126               	movf	??_getDeviceIDString& (0+255),w,b
 18035  0188A0  0A20               	xorlw	32	; case 32
 18036  0188A2  B4D8               	btfsc	status,2,c
 18037  0188A4  D7E0               	goto	l1421
 18038  0188A6  D7E4               	goto	l1422
 18039  0188A8                     __end_of_getDeviceIDString:
 18040                           	opt stack 0
 18041                           tblptru	equ	0xFF8
 18042                           tblptrh	equ	0xFF7
 18043                           tblptrl	equ	0xFF6
 18044                           tablat	equ	0xFF5
 18045                           prodl	equ	0xFF3
 18046                           intcon	equ	0xFF2
 18047                           indf0	equ	0xFEF
 18048                           postinc0	equ	0xFEE
 18049                           fsr0h	equ	0xFEA
 18050                           fsr0l	equ	0xFE9
 18051                           wreg	equ	0xFE8
 18052                           indf1	equ	0xFE7
 18053                           postdec1	equ	0xFE5
 18054                           plusw1	equ	0xFE3
 18055                           fsr1h	equ	0xFE2
 18056                           fsr1l	equ	0xFE1
 18057                           indf2	equ	0xFDF
 18058                           postinc2	equ	0xFDE
 18059                           plusw2	equ	0xFDB
 18060                           fsr2h	equ	0xFDA
 18061                           fsr2l	equ	0xFD9
 18062                           status	equ	0xFD8
 18063                           
 18064 ;; *************** function _getDeviceID *****************
 18065 ;; Defined at:
 18066 ;;		line 4 in file "device_IDs.c"
 18067 ;; Parameters:    Size  Location     Type
 18068 ;;		None
 18069 ;; Auto vars:     Size  Location     Type
 18070 ;;		None
 18071 ;; Return value:  Size  Location     Type
 18072 ;;                  2   34[BANK1 ] unsigned int 
 18073 ;; Registers used:
 18074 ;;		wreg, status,2, status,0, cstack
 18075 ;; Tracked objects:
 18076 ;;		On entry : 0/0
 18077 ;;		On exit  : 0/0
 18078 ;;		Unchanged: 0/0
 18079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18080 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18083 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18084 ;;Total ram usage:        2 bytes
 18085 ;; Hardware stack levels used:    1
 18086 ;; Hardware stack levels required when called:   15
 18087 ;; This function calls:
 18088 ;;		_FLASH_ReadWord
 18089 ;; This function is called by:
 18090 ;;		_ringBufferLUT
 18091 ;; This function uses a non-reentrant model
 18092 ;;
 18093                           
 18094                           	psect	text19
 18095  0191EE                     __ptext19:
 18096                           	opt stack 0
 18097  0191EE                     _getDeviceID:
 18098                           	opt stack 13
 18099                           
 18100                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 18101                           
 18102                           ;incstack = 0
 18103  0191EE  0EFE               	movlw	254
 18104  0191F0  0101               	movlb	1	; () banked
 18105  0191F2  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 18106  0191F4  0EFF               	movlw	255
 18107  0191F6  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 18108  0191F8  0E3F               	movlw	63
 18109  0191FA  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 18110  0191FC  0E00               	movlw	0
 18111  0191FE  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 18112  019200  EC9D  F0C6         	call	_FLASH_ReadWord	;wreg free
 18113  019204  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 18114  019208  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 18115  01920C  0012               	return	
 18116  01920E                     __end_of_getDeviceID:
 18117                           	opt stack 0
 18118                           tblptru	equ	0xFF8
 18119                           tblptrh	equ	0xFF7
 18120                           tblptrl	equ	0xFF6
 18121                           tablat	equ	0xFF5
 18122                           prodl	equ	0xFF3
 18123                           intcon	equ	0xFF2
 18124                           indf0	equ	0xFEF
 18125                           postinc0	equ	0xFEE
 18126                           fsr0h	equ	0xFEA
 18127                           fsr0l	equ	0xFE9
 18128                           wreg	equ	0xFE8
 18129                           indf1	equ	0xFE7
 18130                           postdec1	equ	0xFE5
 18131                           plusw1	equ	0xFE3
 18132                           fsr1h	equ	0xFE2
 18133                           fsr1l	equ	0xFE1
 18134                           indf2	equ	0xFDF
 18135                           postinc2	equ	0xFDE
 18136                           plusw2	equ	0xFDB
 18137                           fsr2h	equ	0xFDA
 18138                           fsr2l	equ	0xFD9
 18139                           status	equ	0xFD8
 18140                           
 18141 ;; *************** function _FLASH_ReadWord *****************
 18142 ;; Defined at:
 18143 ;;		line 71 in file "mcc_generated_files/memory.c"
 18144 ;; Parameters:    Size  Location     Type
 18145 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 18146 ;; Auto vars:     Size  Location     Type
 18147 ;;		None
 18148 ;; Return value:  Size  Location     Type
 18149 ;;                  2   27[BANK1 ] unsigned int 
 18150 ;; Registers used:
 18151 ;;		wreg, status,2, status,0, cstack
 18152 ;; Tracked objects:
 18153 ;;		On entry : 0/0
 18154 ;;		On exit  : 0/0
 18155 ;;		Unchanged: 0/0
 18156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18157 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18159 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18160 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18161 ;;Total ram usage:        7 bytes
 18162 ;; Hardware stack levels used:    1
 18163 ;; Hardware stack levels required when called:   14
 18164 ;; This function calls:
 18165 ;;		_FLASH_ReadByte
 18166 ;; This function is called by:
 18167 ;;		_getDeviceID
 18168 ;;		_getMajorRevisionID
 18169 ;;		_getMinorRevisionID
 18170 ;;		_getUserID
 18171 ;; This function uses a non-reentrant model
 18172 ;;
 18173                           
 18174                           	psect	text20
 18175  018D3A                     __ptext20:
 18176                           	opt stack 0
 18177  018D3A                     _FLASH_ReadWord:
 18178                           	opt stack 13
 18179                           
 18180                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 18181                           
 18182                           ;incstack = 0
 18183  018D3A  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 18184  018D3E  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 18185  018D42  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 18186  018D46  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 18187  018D4A  EC4F  F0C9         	call	_FLASH_ReadByte	;wreg free
 18188  018D4E  0101               	movlb	1	; () banked
 18189  018D50  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 18190  018D52  0E01               	movlw	1
 18191  018D54  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 18192  018D56  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 18193  018D58  0E00               	movlw	0
 18194  018D5A  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 18195  018D5C  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 18196  018D5E  0E00               	movlw	0
 18197  018D60  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 18198  018D62  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 18199  018D64  0E00               	movlw	0
 18200  018D66  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 18201  018D68  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 18202  018D6A  EC4F  F0C9         	call	_FLASH_ReadByte	;wreg free
 18203  018D6E  0101               	movlb	1	; () banked
 18204  018D70  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 18205  018D72  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 18206  018D74  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 18207  018D76  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 18208  018D7A  0012               	return	
 18209  018D7C                     __end_of_FLASH_ReadWord:
 18210                           	opt stack 0
 18211                           tblptru	equ	0xFF8
 18212                           tblptrh	equ	0xFF7
 18213                           tblptrl	equ	0xFF6
 18214                           tablat	equ	0xFF5
 18215                           prodl	equ	0xFF3
 18216                           intcon	equ	0xFF2
 18217                           indf0	equ	0xFEF
 18218                           postinc0	equ	0xFEE
 18219                           fsr0h	equ	0xFEA
 18220                           fsr0l	equ	0xFE9
 18221                           wreg	equ	0xFE8
 18222                           indf1	equ	0xFE7
 18223                           postdec1	equ	0xFE5
 18224                           plusw1	equ	0xFE3
 18225                           fsr1h	equ	0xFE2
 18226                           fsr1l	equ	0xFE1
 18227                           indf2	equ	0xFDF
 18228                           postinc2	equ	0xFDE
 18229                           plusw2	equ	0xFDB
 18230                           fsr2h	equ	0xFDA
 18231                           fsr2l	equ	0xFD9
 18232                           status	equ	0xFD8
 18233                           
 18234 ;; *************** function _FLASH_ReadByte *****************
 18235 ;; Defined at:
 18236 ;;		line 59 in file "mcc_generated_files/memory.c"
 18237 ;; Parameters:    Size  Location     Type
 18238 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 18239 ;; Auto vars:     Size  Location     Type
 18240 ;;		None
 18241 ;; Return value:  Size  Location     Type
 18242 ;;                  1    wreg      unsigned char 
 18243 ;; Registers used:
 18244 ;;		wreg, status,2
 18245 ;; Tracked objects:
 18246 ;;		On entry : 0/0
 18247 ;;		On exit  : 0/0
 18248 ;;		Unchanged: 0/0
 18249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18250 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18253 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18254 ;;Total ram usage:        4 bytes
 18255 ;; Hardware stack levels used:    1
 18256 ;; Hardware stack levels required when called:   13
 18257 ;; This function calls:
 18258 ;;		Nothing
 18259 ;; This function is called by:
 18260 ;;		_FLASH_ReadWord
 18261 ;;		_FLASH_WriteByte
 18262 ;; This function uses a non-reentrant model
 18263 ;;
 18264                           
 18265                           	psect	text21
 18266  01929E                     __ptext21:
 18267                           	opt stack 0
 18268  01929E                     _FLASH_ReadByte:
 18269                           	opt stack 13
 18270                           
 18271                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 18272                           
 18273                           ; BSR set to: 1
 18274                           ;incstack = 0
 18275  01929E  5077               	movf	3959,w,c	;volsfr
 18276  0192A0  0B3F               	andlw	-193
 18277  0192A2  0980               	iorlw	128
 18278  0192A4  6E77               	movwf	3959,c	;volsfr
 18279                           
 18280                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 18281  0192A6  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 18282                           
 18283                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 18284  0192AA  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 18285                           
 18286                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 18287  0192AE  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 18288  0192B2  0008               	tblrd		*	;# 
 18289                           
 18290                           ;memory.c: 68: return (TABLAT);
 18291  0192B4  50F5               	movf	tablat,w,c	;volatile
 18292  0192B6  0012               	return	
 18293  0192B8                     __end_of_FLASH_ReadByte:
 18294                           	opt stack 0
 18295                           tblptru	equ	0xFF8
 18296                           tblptrh	equ	0xFF7
 18297                           tblptrl	equ	0xFF6
 18298                           tablat	equ	0xFF5
 18299                           prodl	equ	0xFF3
 18300                           intcon	equ	0xFF2
 18301                           indf0	equ	0xFEF
 18302                           postinc0	equ	0xFEE
 18303                           fsr0h	equ	0xFEA
 18304                           fsr0l	equ	0xFE9
 18305                           wreg	equ	0xFE8
 18306                           indf1	equ	0xFE7
 18307                           postdec1	equ	0xFE5
 18308                           plusw1	equ	0xFE3
 18309                           fsr1h	equ	0xFE2
 18310                           fsr1l	equ	0xFE1
 18311                           indf2	equ	0xFDF
 18312                           postinc2	equ	0xFDE
 18313                           plusw2	equ	0xFDB
 18314                           fsr2h	equ	0xFDA
 18315                           fsr2l	equ	0xFD9
 18316                           status	equ	0xFD8
 18317                           
 18318 ;; *************** function _getCauseOfResetString *****************
 18319 ;; Defined at:
 18320 ;;		line 81 in file "cause_of_reset.c"
 18321 ;; Parameters:    Size  Location     Type
 18322 ;;  r               1    wreg     enum E17455
 18323 ;; Auto vars:     Size  Location     Type
 18324 ;;  r               1   25[BANK1 ] enum E17455
 18325 ;; Return value:  Size  Location     Type
 18326 ;;                  2   23[BANK1 ] PTR inline unsigned char
 18327 ;; Registers used:
 18328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18329 ;; Tracked objects:
 18330 ;;		On entry : 0/0
 18331 ;;		On exit  : 0/0
 18332 ;;		Unchanged: 0/0
 18333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18334 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18335 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18337 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18338 ;;Total ram usage:        3 bytes
 18339 ;; Hardware stack levels used:    1
 18340 ;; Hardware stack levels required when called:   13
 18341 ;; This function calls:
 18342 ;;		Nothing
 18343 ;; This function is called by:
 18344 ;;		_ringBufferLUT
 18345 ;; This function uses a non-reentrant model
 18346 ;;
 18347                           
 18348                           	psect	text22
 18349  018FE2                     __ptext22:
 18350                           	opt stack 0
 18351  018FE2                     _getCauseOfResetString:
 18352                           	opt stack 15
 18353                           
 18354                           ;incstack = 0
 18355                           ;getCauseOfResetString@r stored from wreg
 18356  018FE2  0101               	movlb	1	; () banked
 18357  018FE4  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 18358                           
 18359                           ;cause_of_reset.c: 84: static char *strings[] = {
 18360                           ;cause_of_reset.c: 85: "Undefined Reset",
 18361                           ;cause_of_reset.c: 86: "Power On Reset",
 18362                           ;cause_of_reset.c: 87: "Brown Out Reset",
 18363                           ;cause_of_reset.c: 88: "Master Clear Reset",
 18364                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 18365                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 18366                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 18367                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 18368                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 18369                           ;cause_of_reset.c: 94: };
 18370  018FE6  0E09               	movlw	9
 18371  018FE8  0101               	movlb	1	; () banked
 18372  018FEA  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 18373  018FEC  D00D               	goto	l1449
 18374                           
 18375                           ; BSR set to: 1
 18376                           ;cause_of_reset.c: 99: return strings[r];
 18377  018FEE  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 18378  018FF0  0D02               	mullw	2
 18379  018FF2  0ED6               	movlw	low getCauseOfResetString@strings
 18380  018FF4  24F3               	addwf	prodl,w,c
 18381  018FF6  6ED9               	movwf	fsr2l,c
 18382  018FF8  0E02               	movlw	high getCauseOfResetString@strings
 18383  018FFA  20F4               	addwfc	prodh,w,c
 18384  018FFC  6EDA               	movwf	fsr2h,c
 18385  018FFE  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 18386  019002  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 18387                           
 18388                           ; BSR set to: 1
 18389                           ;cause_of_reset.c: 101: }
 18390                           
 18391                           ; BSR set to: 1
 18392  019006  0012               	return	
 18393  019008                     l1449:
 18394                           
 18395                           ; BSR set to: 1
 18396                           ;cause_of_reset.c: 103: else {
 18397                           ;cause_of_reset.c: 105: return "Undefined Reset";
 18398                           
 18399                           ; BSR set to: 1
 18400  019008  0EEE               	movlw	low STR_154
 18401  01900A  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 18402  01900C  0EFD               	movlw	high STR_154
 18403  01900E  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 18404                           
 18405                           ; BSR set to: 1
 18406  019010  0012               	return	
 18407  019012                     __end_of_getCauseOfResetString:
 18408                           	opt stack 0
 18409                           tblptru	equ	0xFF8
 18410                           tblptrh	equ	0xFF7
 18411                           tblptrl	equ	0xFF6
 18412                           tablat	equ	0xFF5
 18413                           prodh	equ	0xFF4
 18414                           prodl	equ	0xFF3
 18415                           intcon	equ	0xFF2
 18416                           indf0	equ	0xFEF
 18417                           postinc0	equ	0xFEE
 18418                           fsr0h	equ	0xFEA
 18419                           fsr0l	equ	0xFE9
 18420                           wreg	equ	0xFE8
 18421                           indf1	equ	0xFE7
 18422                           postdec1	equ	0xFE5
 18423                           plusw1	equ	0xFE3
 18424                           fsr1h	equ	0xFE2
 18425                           fsr1l	equ	0xFE1
 18426                           indf2	equ	0xFDF
 18427                           postinc2	equ	0xFDE
 18428                           postdec2	equ	0xFDD
 18429                           plusw2	equ	0xFDB
 18430                           fsr2h	equ	0xFDA
 18431                           fsr2l	equ	0xFD9
 18432                           status	equ	0xFD8
 18433                           
 18434 ;; *************** function _atoi *****************
 18435 ;; Defined at:
 18436 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 18437 ;; Parameters:    Size  Location     Type
 18438 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 18439 ;;		 -> ringBufferLUT@arg_buff(3), 
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  a               2   34[BANK1 ] int 
 18442 ;;  sign            1   33[BANK1 ] unsigned char 
 18443 ;; Return value:  Size  Location     Type
 18444 ;;                  2   29[BANK1 ] int 
 18445 ;; Registers used:
 18446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18447 ;; Tracked objects:
 18448 ;;		On entry : 0/0
 18449 ;;		On exit  : 0/0
 18450 ;;		Unchanged: 0/0
 18451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18452 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18453 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18454 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18455 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18456 ;;Total ram usage:        7 bytes
 18457 ;; Hardware stack levels used:    1
 18458 ;; Hardware stack levels required when called:   14
 18459 ;; This function calls:
 18460 ;;		___wmul
 18461 ;;		_isdigit
 18462 ;; This function is called by:
 18463 ;;		_ringBufferLUT
 18464 ;; This function uses a non-reentrant model
 18465 ;;
 18466                           
 18467                           	psect	text23
 18468  017CDE                     __ptext23:
 18469                           	opt stack 0
 18470  017CDE                     _atoi:
 18471                           	opt stack 14
 18472                           
 18473                           ; BSR set to: 1
 18474                           ;incstack = 0
 18475  017CDE  D003               	goto	l1871
 18476  017CE0  0101               	movlb	1	; () banked
 18477  017CE2  4B1D               	infsnz	atoi@s& (0+255),f,b
 18478  017CE4  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 18479  017CE6                     l1871:
 18480                           
 18481                           ; BSR set to: 1
 18482  017CE6  C11D  FFD9         	movff	atoi@s,fsr2l
 18483  017CEA  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18484  017CEE  0E20               	movlw	32
 18485  017CF0  18DE               	xorwf	postinc2,w,c
 18486  017CF2  B4D8               	btfsc	status,2,c
 18487  017CF4  D7F5               	goto	l1872
 18488  017CF6  C11D  FFD9         	movff	atoi@s,fsr2l
 18489  017CFA  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18490  017CFE  0E09               	movlw	9
 18491  017D00  18DE               	xorwf	postinc2,w,c
 18492  017D02  B4D8               	btfsc	status,2,c
 18493  017D04  D7ED               	goto	l1872
 18494  017D06  0E00               	movlw	0
 18495  017D08  0101               	movlb	1	; () banked
 18496  017D0A  6F23               	movwf	(atoi@a+1)& (0+255),b
 18497  017D0C  0E00               	movlw	0
 18498  017D0E  6F22               	movwf	atoi@a& (0+255),b
 18499  017D10  0E00               	movlw	0
 18500  017D12  6F21               	movwf	atoi@sign& (0+255),b
 18501                           
 18502                           ; BSR set to: 1
 18503  017D14  C11D  FFD9         	movff	atoi@s,fsr2l
 18504  017D18  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18505  017D1C  0E2D               	movlw	45
 18506  017D1E  18DE               	xorwf	postinc2,w,c
 18507  017D20  A4D8               	btfss	status,2,c
 18508  017D22  D002               	goto	l1874
 18509                           
 18510                           ; BSR set to: 1
 18511  017D24  2B21               	incf	atoi@sign& (0+255),f,b
 18512  017D26  D026               	goto	l19664
 18513  017D28                     l1874:
 18514                           
 18515                           ; BSR set to: 1
 18516                           
 18517                           ; BSR set to: 1
 18518  017D28  C11D  FFD9         	movff	atoi@s,fsr2l
 18519  017D2C  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18520  017D30  0E2B               	movlw	43
 18521  017D32  18DE               	xorwf	postinc2,w,c
 18522  017D34  A4D8               	btfss	status,2,c
 18523  017D36  D020               	goto	l1877
 18524  017D38  D01D               	goto	l19664
 18525  017D3A                     
 18526                           ; BSR set to: 1
 18527  017D3A  C122  F117         	movff	atoi@a,___wmul@multiplier
 18528  017D3E  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 18529  017D42  0E00               	movlw	0
 18530  017D44  0101               	movlb	1	; () banked
 18531  017D46  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18532  017D48  0E0A               	movlw	10
 18533  017D4A  6F19               	movwf	___wmul@multiplicand& (0+255),b
 18534  017D4C  EC4D  F0C8         	call	___wmul	;wreg free
 18535  017D50  C11D  FFD9         	movff	atoi@s,fsr2l
 18536  017D54  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18537  017D58  50DF               	movf	indf2,w,c
 18538  017D5A  0101               	movlb	1	; () banked
 18539  017D5C  6F1F               	movwf	??_atoi& (0+255),b
 18540  017D5E  6B20               	clrf	(??_atoi+1)& (0+255),b
 18541  017D60  5117               	movf	?___wmul& (0+255),w,b
 18542  017D62  271F               	addwf	??_atoi& (0+255),f,b
 18543  017D64  5118               	movf	(?___wmul+1)& (0+255),w,b
 18544  017D66  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 18545  017D68  0ED0               	movlw	208
 18546  017D6A  251F               	addwf	??_atoi& (0+255),w,b
 18547  017D6C  6F22               	movwf	atoi@a& (0+255),b
 18548  017D6E  0EFF               	movlw	255
 18549  017D70  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 18550  017D72  6F23               	movwf	(atoi@a+1)& (0+255),b
 18551  017D74                     l19664:
 18552                           
 18553                           ; BSR set to: 1
 18554  017D74  4B1D               	infsnz	atoi@s& (0+255),f,b
 18555  017D76  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 18556  017D78                     l1877:
 18557                           
 18558                           ; BSR set to: 1
 18559                           
 18560                           ; BSR set to: 1
 18561  017D78  C11D  FFD9         	movff	atoi@s,fsr2l
 18562  017D7C  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18563  017D80  50DF               	movf	indf2,w,c
 18564  017D82  ECE6  F0C8         	call	_isdigit
 18565  017D86  B0D8               	btfsc	status,0,c
 18566  017D88  D7D8               	goto	l1878
 18567  017D8A  0101               	movlb	1	; () banked
 18568  017D8C  5121               	movf	atoi@sign& (0+255),w,b
 18569  017D8E  B4D8               	btfsc	status,2,c
 18570  017D90  D00D               	goto	l1880
 18571                           
 18572                           ; BSR set to: 1
 18573  017D92  C122  F11F         	movff	atoi@a,??_atoi
 18574  017D96  C123  F120         	movff	atoi@a+1,??_atoi+1
 18575  017D9A  1F1F               	comf	??_atoi& (0+255),f,b
 18576  017D9C  1F20               	comf	(??_atoi+1)& (0+255),f,b
 18577  017D9E  4B1F               	infsnz	??_atoi& (0+255),f,b
 18578  017DA0  2B20               	incf	(??_atoi+1)& (0+255),f,b
 18579  017DA2  C11F  F11D         	movff	??_atoi,?_atoi
 18580  017DA6  C120  F11E         	movff	??_atoi+1,?_atoi+1
 18581  017DAA  0012               	return	
 18582  017DAC                     l1880:
 18583                           
 18584                           ; BSR set to: 1
 18585  017DAC  C122  F11D         	movff	atoi@a,?_atoi
 18586  017DB0  C123  F11E         	movff	atoi@a+1,?_atoi+1
 18587                           
 18588                           ; BSR set to: 1
 18589  017DB4  0012               	return		;funcret
 18590  017DB6                     __end_of_atoi:
 18591                           	opt stack 0
 18592                           tblptru	equ	0xFF8
 18593                           tblptrh	equ	0xFF7
 18594                           tblptrl	equ	0xFF6
 18595                           tablat	equ	0xFF5
 18596                           prodh	equ	0xFF4
 18597                           prodl	equ	0xFF3
 18598                           intcon	equ	0xFF2
 18599                           indf0	equ	0xFEF
 18600                           postinc0	equ	0xFEE
 18601                           fsr0h	equ	0xFEA
 18602                           fsr0l	equ	0xFE9
 18603                           wreg	equ	0xFE8
 18604                           indf1	equ	0xFE7
 18605                           postdec1	equ	0xFE5
 18606                           plusw1	equ	0xFE3
 18607                           fsr1h	equ	0xFE2
 18608                           fsr1l	equ	0xFE1
 18609                           indf2	equ	0xFDF
 18610                           postinc2	equ	0xFDE
 18611                           postdec2	equ	0xFDD
 18612                           plusw2	equ	0xFDB
 18613                           fsr2h	equ	0xFDA
 18614                           fsr2l	equ	0xFD9
 18615                           status	equ	0xFD8
 18616                           
 18617 ;; *************** function ___fldiv *****************
 18618 ;; Defined at:
 18619 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 18620 ;; Parameters:    Size  Location     Type
 18621 ;;  b               4   61[BANK1 ] int 
 18622 ;;  a               4   65[BANK1 ] int 
 18623 ;; Auto vars:     Size  Location     Type
 18624 ;;  grs             4   80[BANK1 ] unsigned long 
 18625 ;;  rem             4   74[BANK1 ] unsigned long 
 18626 ;;  new_exp         2   78[BANK1 ] int 
 18627 ;;  aexp            1   85[BANK1 ] unsigned char 
 18628 ;;  bexp            1   84[BANK1 ] unsigned char 
 18629 ;;  sign            1   73[BANK1 ] unsigned char 
 18630 ;; Return value:  Size  Location     Type
 18631 ;;                  4   61[BANK1 ] unsigned char 
 18632 ;; Registers used:
 18633 ;;		wreg, status,2, status,0
 18634 ;; Tracked objects:
 18635 ;;		On entry : 0/0
 18636 ;;		On exit  : 0/0
 18637 ;;		Unchanged: 0/0
 18638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18639 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18640 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18641 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18642 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18643 ;;Total ram usage:       25 bytes
 18644 ;; Hardware stack levels used:    1
 18645 ;; Hardware stack levels required when called:   13
 18646 ;; This function calls:
 18647 ;;		Nothing
 18648 ;; This function is called by:
 18649 ;;		_ringBufferLUT
 18650 ;; This function uses a non-reentrant model
 18651 ;;
 18652                           
 18653                           	psect	text24
 18654  015E46                     __ptext24:
 18655                           	opt stack 0
 18656  015E46                     ___fldiv:
 18657                           	opt stack 15
 18658                           
 18659                           ; BSR set to: 1
 18660                           ;incstack = 0
 18661  015E46  0101               	movlb	1	; () banked
 18662  015E48  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 18663  015E4A  0B80               	andlw	128
 18664  015E4C  6F49               	movwf	___fldiv@sign& (0+255),b
 18665  015E4E  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 18666  015E50  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 18667  015E52  6F54               	movwf	___fldiv@bexp& (0+255),b
 18668                           
 18669                           ; BSR set to: 1
 18670  015E54  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 18671                           
 18672                           ; BSR set to: 1
 18673  015E56  8154               	bsf	___fldiv@bexp& (0+255),0,b
 18674                           
 18675                           ; BSR set to: 1
 18676                           
 18677                           ; BSR set to: 1
 18678  015E58  5154               	movf	___fldiv@bexp& (0+255),w,b
 18679  015E5A  B4D8               	btfsc	status,2,c
 18680  015E5C  D00D               	goto	l2278
 18681                           
 18682                           ; BSR set to: 1
 18683  015E5E  2954               	incf	___fldiv@bexp& (0+255),w,b
 18684  015E60  A4D8               	btfss	status,2,c
 18685  015E62  D008               	goto	l2279
 18686                           
 18687                           ; BSR set to: 1
 18688  015E64  0E00               	movlw	0
 18689  015E66  6F3D               	movwf	___fldiv@b& (0+255),b
 18690  015E68  0E00               	movlw	0
 18691  015E6A  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18692  015E6C  0E00               	movlw	0
 18693  015E6E  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18694  015E70  0E00               	movlw	0
 18695  015E72  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18696  015E74                     l2279:
 18697                           
 18698                           ; BSR set to: 1
 18699                           
 18700                           ; BSR set to: 1
 18701  015E74  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 18702  015E76  D006               	goto	L1
 18703  015E78                     l2278:
 18704                           
 18705                           ; BSR set to: 1
 18706                           
 18707                           ; BSR set to: 1
 18708  015E78  0E00               	movlw	0
 18709  015E7A  6F3D               	movwf	___fldiv@b& (0+255),b
 18710  015E7C  0E00               	movlw	0
 18711  015E7E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18712  015E80  0E00               	movlw	0
 18713  015E82  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18714  015E84                     L1:
 18715  015E84  0E00               	movlw	0
 18716  015E86  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18717                           
 18718                           ; BSR set to: 1
 18719                           
 18720                           ; BSR set to: 1
 18721  015E88  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 18722  015E8A  0B80               	andlw	128
 18723  015E8C  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 18724                           
 18725                           ; BSR set to: 1
 18726  015E8E  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 18727  015E90  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 18728  015E92  6F55               	movwf	___fldiv@aexp& (0+255),b
 18729                           
 18730                           ; BSR set to: 1
 18731  015E94  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 18732                           
 18733                           ; BSR set to: 1
 18734  015E96  8155               	bsf	___fldiv@aexp& (0+255),0,b
 18735                           
 18736                           ; BSR set to: 1
 18737                           
 18738                           ; BSR set to: 1
 18739  015E98  5155               	movf	___fldiv@aexp& (0+255),w,b
 18740  015E9A  B4D8               	btfsc	status,2,c
 18741  015E9C  D00D               	goto	l2282
 18742                           
 18743                           ; BSR set to: 1
 18744  015E9E  2955               	incf	___fldiv@aexp& (0+255),w,b
 18745  015EA0  A4D8               	btfss	status,2,c
 18746  015EA2  D008               	goto	l2283
 18747                           
 18748                           ; BSR set to: 1
 18749  015EA4  0E00               	movlw	0
 18750  015EA6  6F41               	movwf	___fldiv@a& (0+255),b
 18751  015EA8  0E00               	movlw	0
 18752  015EAA  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 18753  015EAC  0E00               	movlw	0
 18754  015EAE  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 18755  015EB0  0E00               	movlw	0
 18756  015EB2  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 18757  015EB4                     l2283:
 18758                           
 18759                           ; BSR set to: 1
 18760                           
 18761                           ; BSR set to: 1
 18762  015EB4  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 18763  015EB6  D006               	goto	L2
 18764  015EB8                     l2282:
 18765                           
 18766                           ; BSR set to: 1
 18767                           
 18768                           ; BSR set to: 1
 18769  015EB8  0E00               	movlw	0
 18770  015EBA  6F41               	movwf	___fldiv@a& (0+255),b
 18771  015EBC  0E00               	movlw	0
 18772  015EBE  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 18773  015EC0  0E00               	movlw	0
 18774  015EC2  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 18775  015EC4                     L2:
 18776  015EC4  0E00               	movlw	0
 18777  015EC6  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 18778                           
 18779                           ; BSR set to: 1
 18780                           
 18781                           ; BSR set to: 1
 18782  015EC8  5141               	movf	___fldiv@a& (0+255),w,b
 18783  015ECA  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 18784  015ECC  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 18785  015ECE  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 18786  015ED0  A4D8               	btfss	status,2,c
 18787  015ED2  D015               	goto	l2285
 18788                           
 18789                           ; BSR set to: 1
 18790  015ED4  0E00               	movlw	0
 18791  015ED6  6F3D               	movwf	___fldiv@b& (0+255),b
 18792  015ED8  0E00               	movlw	0
 18793  015EDA  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18794  015EDC  0E00               	movlw	0
 18795  015EDE  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18796  015EE0  0E00               	movlw	0
 18797  015EE2  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18798                           
 18799                           ; BSR set to: 1
 18800  015EE4  0E80               	movlw	128
 18801  015EE6  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 18802  015EE8  0E7F               	movlw	127
 18803  015EEA  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 18804                           
 18805                           ; BSR set to: 1
 18806  015EEC  C13D  F13D         	movff	___fldiv@b,?___fldiv
 18807  015EF0  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 18808  015EF4  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 18809  015EF8  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 18810                           
 18811                           ; BSR set to: 1
 18812  015EFC  0012               	return	
 18813  015EFE                     l2285:
 18814                           
 18815                           ; BSR set to: 1
 18816                           
 18817                           ; BSR set to: 1
 18818  015EFE  5154               	movf	___fldiv@bexp& (0+255),w,b
 18819  015F00  A4D8               	btfss	status,2,c
 18820  015F02  D011               	goto	l2287
 18821                           
 18822                           ; BSR set to: 1
 18823  015F04  0E00               	movlw	0
 18824  015F06  6F3D               	movwf	___fldiv@b& (0+255),b
 18825  015F08  0E00               	movlw	0
 18826  015F0A  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18827  015F0C  0E00               	movlw	0
 18828  015F0E  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18829  015F10  0E00               	movlw	0
 18830  015F12  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18831                           
 18832                           ; BSR set to: 1
 18833  015F14  C13D  F13D         	movff	___fldiv@b,?___fldiv
 18834  015F18  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 18835  015F1C  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 18836  015F20  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 18837                           
 18838                           ; BSR set to: 1
 18839  015F24  0012               	return	
 18840  015F26                     l2287:
 18841                           
 18842                           ; BSR set to: 1
 18843                           
 18844                           ; BSR set to: 1
 18845  015F26  5155               	movf	___fldiv@aexp& (0+255),w,b
 18846  015F28  6F45               	movwf	??___fldiv& (0+255),b
 18847  015F2A  6B46               	clrf	(??___fldiv+1)& (0+255),b
 18848  015F2C  1F45               	comf	??___fldiv& (0+255),f,b
 18849  015F2E  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 18850  015F30  4B45               	infsnz	??___fldiv& (0+255),f,b
 18851  015F32  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 18852  015F34  5154               	movf	___fldiv@bexp& (0+255),w,b
 18853  015F36  6F47               	movwf	(??___fldiv+2)& (0+255),b
 18854  015F38  6B48               	clrf	(??___fldiv+3)& (0+255),b
 18855  015F3A  5145               	movf	??___fldiv& (0+255),w,b
 18856  015F3C  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 18857  015F3E  5146               	movf	(??___fldiv+1)& (0+255),w,b
 18858  015F40  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 18859  015F42  0E7F               	movlw	127
 18860  015F44  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 18861  015F46  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 18862  015F48  0E00               	movlw	0
 18863  015F4A  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 18864  015F4C  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18865                           
 18866                           ; BSR set to: 1
 18867  015F4E  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 18868  015F52  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 18869  015F56  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 18870  015F5A  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 18871                           
 18872                           ; BSR set to: 1
 18873  015F5E  0E00               	movlw	0
 18874  015F60  6F3D               	movwf	___fldiv@b& (0+255),b
 18875  015F62  0E00               	movlw	0
 18876  015F64  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 18877  015F66  0E00               	movlw	0
 18878  015F68  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 18879  015F6A  0E00               	movlw	0
 18880  015F6C  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 18881                           
 18882                           ; BSR set to: 1
 18883  015F6E  0E00               	movlw	0
 18884  015F70  6F50               	movwf	___fldiv@grs& (0+255),b
 18885  015F72  0E00               	movlw	0
 18886  015F74  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 18887  015F76  0E00               	movlw	0
 18888  015F78  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 18889  015F7A  0E00               	movlw	0
 18890  015F7C  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 18891                           
 18892                           ; BSR set to: 1
 18893  015F7E  0E00               	movlw	0
 18894  015F80  6F55               	movwf	___fldiv@aexp& (0+255),b
 18895  015F82  D028               	goto	l2288
 18896  015F84                     
 18897                           ; BSR set to: 1
 18898                           
 18899                           ; BSR set to: 1
 18900  015F84  5155               	movf	___fldiv@aexp& (0+255),w,b
 18901  015F86  B4D8               	btfsc	status,2,c
 18902  015F88  D011               	goto	l2290
 18903                           
 18904                           ; BSR set to: 1
 18905  015F8A  90D8               	bcf	status,0,c
 18906  015F8C  374A               	rlcf	___fldiv@rem& (0+255),f,b
 18907  015F8E  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 18908  015F90  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 18909  015F92  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 18910  015F94  90D8               	bcf	status,0,c
 18911  015F96  373D               	rlcf	___fldiv@b& (0+255),f,b
 18912  015F98  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18913  015F9A  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18914  015F9C  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18915                           
 18916                           ; BSR set to: 1
 18917  015F9E  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 18918                           
 18919                           ; BSR set to: 1
 18920  015FA0  813D               	bsf	___fldiv@b& (0+255),0,b
 18921                           
 18922                           ; BSR set to: 1
 18923  015FA2  90D8               	bcf	status,0,c
 18924  015FA4  3750               	rlcf	___fldiv@grs& (0+255),f,b
 18925  015FA6  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 18926  015FA8  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 18927  015FAA  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 18928  015FAC                     l2290:
 18929                           
 18930                           ; BSR set to: 1
 18931                           
 18932                           ; BSR set to: 1
 18933  015FAC  5141               	movf	___fldiv@a& (0+255),w,b
 18934  015FAE  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 18935  015FB0  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 18936  015FB2  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 18937  015FB4  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 18938  015FB6  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 18939  015FB8  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 18940  015FBA  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 18941  015FBC  A0D8               	btfss	status,0,c
 18942  015FBE  D009               	goto	l2292
 18943                           
 18944                           ; BSR set to: 1
 18945  015FC0  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 18946                           
 18947                           ; BSR set to: 1
 18948  015FC2  5141               	movf	___fldiv@a& (0+255),w,b
 18949  015FC4  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 18950  015FC6  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 18951  015FC8  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 18952  015FCA  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 18953  015FCC  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 18954  015FCE  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 18955  015FD0  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 18956  015FD2                     l2292:
 18957                           
 18958                           ; BSR set to: 1
 18959                           
 18960                           ; BSR set to: 1
 18961  015FD2  2B55               	incf	___fldiv@aexp& (0+255),f,b
 18962  015FD4                     l2288:
 18963                           
 18964                           ; BSR set to: 1
 18965  015FD4  0E19               	movlw	25
 18966  015FD6  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 18967  015FD8  D7D5               	goto	l2289
 18968                           
 18969                           ; BSR set to: 1
 18970                           
 18971                           ; BSR set to: 1
 18972  015FDA  514A               	movf	___fldiv@rem& (0+255),w,b
 18973  015FDC  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 18974  015FDE  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 18975  015FE0  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 18976  015FE2  B4D8               	btfsc	status,2,c
 18977  015FE4  D011               	goto	l2295
 18978                           
 18979                           ; BSR set to: 1
 18980  015FE6  8150               	bsf	___fldiv@grs& (0+255),0,b
 18981                           
 18982                           ; BSR set to: 1
 18983  015FE8  D00F               	goto	l2295
 18984  015FEA                     
 18985                           ; BSR set to: 1
 18986                           
 18987                           ; BSR set to: 1
 18988  015FEA  90D8               	bcf	status,0,c
 18989  015FEC  373D               	rlcf	___fldiv@b& (0+255),f,b
 18990  015FEE  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18991  015FF0  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18992  015FF2  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18993                           
 18994                           ; BSR set to: 1
 18995  015FF4  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 18996                           
 18997                           ; BSR set to: 1
 18998  015FF6  813D               	bsf	___fldiv@b& (0+255),0,b
 18999                           
 19000                           ; BSR set to: 1
 19001  015FF8  90D8               	bcf	status,0,c
 19002  015FFA  3750               	rlcf	___fldiv@grs& (0+255),f,b
 19003  015FFC  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19004  015FFE  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19005  016000  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19006  016002  074E               	decf	___fldiv@new_exp& (0+255),f,b
 19007  016004  A0D8               	btfss	status,0,c
 19008  016006  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 19009  016008                     l2295:
 19010                           
 19011                           ; BSR set to: 1
 19012                           
 19013                           ; BSR set to: 1
 19014  016008  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 19015  01600A  D7EF               	goto	l2296
 19016                           
 19017                           ; BSR set to: 1
 19018                           
 19019                           ; BSR set to: 1
 19020  01600C  0E00               	movlw	0
 19021  01600E  6F55               	movwf	___fldiv@aexp& (0+255),b
 19022                           
 19023                           ; BSR set to: 1
 19024  016010  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19025  016012  D016               	goto	l2302
 19026                           
 19027                           ; BSR set to: 1
 19028  016014  0EFF               	movlw	255
 19029  016016  1550               	andwf	___fldiv@grs& (0+255),w,b
 19030  016018  6F45               	movwf	??___fldiv& (0+255),b
 19031  01601A  0EFF               	movlw	255
 19032  01601C  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 19033  01601E  6F46               	movwf	(??___fldiv+1)& (0+255),b
 19034  016020  0EFF               	movlw	255
 19035  016022  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 19036  016024  6F47               	movwf	(??___fldiv+2)& (0+255),b
 19037  016026  0E7F               	movlw	127
 19038  016028  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 19039  01602A  6F48               	movwf	(??___fldiv+3)& (0+255),b
 19040  01602C  5145               	movf	??___fldiv& (0+255),w,b
 19041  01602E  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 19042  016030  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 19043  016032  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 19044  016034  A4D8               	btfss	status,2,c
 19045  016036  D002               	goto	u26250
 19046                           
 19047                           ; BSR set to: 1
 19048                           
 19049                           ; BSR set to: 1
 19050  016038  A13D               	btfss	___fldiv@b& (0+255),0,b
 19051  01603A  D002               	goto	l2302
 19052  01603C                     u26250:
 19053                           
 19054                           ; BSR set to: 1
 19055  01603C  0E01               	movlw	1
 19056  01603E  6F55               	movwf	___fldiv@aexp& (0+255),b
 19057  016040                     l2302:
 19058                           
 19059                           ; BSR set to: 1
 19060                           
 19061                           ; BSR set to: 1
 19062                           
 19063                           ; BSR set to: 1
 19064  016040  5155               	movf	___fldiv@aexp& (0+255),w,b
 19065  016042  B4D8               	btfsc	status,2,c
 19066  016044  D01F               	goto	l2304
 19067                           
 19068                           ; BSR set to: 1
 19069  016046  0E01               	movlw	1
 19070  016048  273D               	addwf	___fldiv@b& (0+255),f,b
 19071  01604A  0E00               	movlw	0
 19072  01604C  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 19073  01604E  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 19074  016050  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 19075                           
 19076                           ; BSR set to: 1
 19077  016052  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 19078  016054  D017               	goto	l2304
 19079                           
 19080                           ; BSR set to: 1
 19081  016056  C13D  F145         	movff	___fldiv@b,??___fldiv
 19082  01605A  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 19083  01605E  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 19084  016062  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 19085  016066  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 19086  016068  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 19087  01606A  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 19088  01606C  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 19089  01606E  3345               	rrcf	??___fldiv& (0+255),f,b
 19090  016070  C145  F13D         	movff	??___fldiv,___fldiv@b
 19091  016074  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 19092  016078  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 19093  01607C  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 19094                           
 19095                           ; BSR set to: 1
 19096  016080  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 19097  016082  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 19098  016084                     l2304:
 19099                           
 19100                           ; BSR set to: 1
 19101                           
 19102                           ; BSR set to: 1
 19103                           
 19104                           ; BSR set to: 1
 19105  016084  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19106  016086  D010               	goto	l2305
 19107  016088  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19108  01608A  E103               	bnz	u26280
 19109  01608C  294E               	incf	___fldiv@new_exp& (0+255),w,b
 19110  01608E  A0D8               	btfss	status,0,c
 19111  016090  D00B               	goto	l2305
 19112  016092                     u26280:
 19113                           
 19114                           ; BSR set to: 1
 19115  016092  0E00               	movlw	0
 19116  016094  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19117  016096  694E               	setf	___fldiv@new_exp& (0+255),b
 19118  016098  0E00               	movlw	0
 19119  01609A  6F3D               	movwf	___fldiv@b& (0+255),b
 19120  01609C  0E00               	movlw	0
 19121  01609E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19122  0160A0  0E00               	movlw	0
 19123  0160A2  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19124  0160A4  0E00               	movlw	0
 19125  0160A6  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19126  0160A8                     l2305:
 19127                           
 19128                           ; BSR set to: 1
 19129                           
 19130                           ; BSR set to: 1
 19131  0160A8  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19132  0160AA  D005               	goto	u26290
 19133  0160AC  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19134  0160AE  E111               	bnz	l19792
 19135  0160B0  054E               	decf	___fldiv@new_exp& (0+255),w,b
 19136  0160B2  B0D8               	btfsc	status,0,c
 19137  0160B4  D00E               	goto	l2306
 19138  0160B6                     u26290:
 19139                           
 19140                           ; BSR set to: 1
 19141  0160B6  0E00               	movlw	0
 19142  0160B8  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19143  0160BA  0E00               	movlw	0
 19144  0160BC  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 19145  0160BE  0E00               	movlw	0
 19146  0160C0  6F3D               	movwf	___fldiv@b& (0+255),b
 19147  0160C2  0E00               	movlw	0
 19148  0160C4  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19149  0160C6  0E00               	movlw	0
 19150  0160C8  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19151  0160CA  0E00               	movlw	0
 19152  0160CC  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19153  0160CE  0E00               	movlw	0
 19154  0160D0  6F49               	movwf	___fldiv@sign& (0+255),b
 19155  0160D2                     l2306:
 19156  0160D2                     l19792:
 19157                           
 19158                           ; BSR set to: 1
 19159  0160D2  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 19160                           
 19161                           ; BSR set to: 1
 19162  0160D6  A154               	btfss	___fldiv@bexp& (0+255),0,b
 19163  0160D8  D002               	goto	l2307
 19164                           
 19165                           ; BSR set to: 1
 19166  0160DA  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 19167  0160DC  D001               	goto	l2308
 19168  0160DE                     l2307:
 19169                           
 19170                           ; BSR set to: 1
 19171                           
 19172                           ; BSR set to: 1
 19173  0160DE  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 19174  0160E0                     l2308:
 19175                           
 19176                           ; BSR set to: 1
 19177                           
 19178                           ; BSR set to: 1
 19179  0160E0  90D8               	bcf	status,0,c
 19180  0160E2  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 19181  0160E4  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19182                           
 19183                           ; BSR set to: 1
 19184  0160E6  5149               	movf	___fldiv@sign& (0+255),w,b
 19185  0160E8  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 19186                           
 19187                           ; BSR set to: 1
 19188  0160EA  C13D  F13D         	movff	___fldiv@b,?___fldiv
 19189  0160EE  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 19190  0160F2  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 19191  0160F6  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 19192  0160FA  0012               	return	
 19193  0160FC                     __end_of___fldiv:
 19194                           	opt stack 0
 19195                           tblptru	equ	0xFF8
 19196                           tblptrh	equ	0xFF7
 19197                           tblptrl	equ	0xFF6
 19198                           tablat	equ	0xFF5
 19199                           prodh	equ	0xFF4
 19200                           prodl	equ	0xFF3
 19201                           intcon	equ	0xFF2
 19202                           indf0	equ	0xFEF
 19203                           postinc0	equ	0xFEE
 19204                           fsr0h	equ	0xFEA
 19205                           fsr0l	equ	0xFE9
 19206                           wreg	equ	0xFE8
 19207                           indf1	equ	0xFE7
 19208                           postdec1	equ	0xFE5
 19209                           plusw1	equ	0xFE3
 19210                           fsr1h	equ	0xFE2
 19211                           fsr1l	equ	0xFE1
 19212                           indf2	equ	0xFDF
 19213                           postinc2	equ	0xFDE
 19214                           postdec2	equ	0xFDD
 19215                           plusw2	equ	0xFDB
 19216                           fsr2h	equ	0xFDA
 19217                           fsr2l	equ	0xFD9
 19218                           status	equ	0xFD8
 19219                           
 19220 ;; *************** function _TMR7_StopTimer *****************
 19221 ;; Defined at:
 19222 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 19223 ;; Parameters:    Size  Location     Type
 19224 ;;		None
 19225 ;; Auto vars:     Size  Location     Type
 19226 ;;		None
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  1    wreg      void 
 19229 ;; Registers used:
 19230 ;;		None
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19240 ;;Total ram usage:        0 bytes
 19241 ;; Hardware stack levels used:    1
 19242 ;; Hardware stack levels required when called:   13
 19243 ;; This function calls:
 19244 ;;		Nothing
 19245 ;; This function is called by:
 19246 ;;		_ringBufferLUT
 19247 ;; This function uses a non-reentrant model
 19248 ;;
 19249                           
 19250                           	psect	text25
 19251  019454                     __ptext25:
 19252                           	opt stack 0
 19253  019454                     _TMR7_StopTimer:
 19254                           	opt stack 15
 19255                           
 19256                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 19257                           
 19258                           ; BSR set to: 1
 19259                           ;incstack = 0
 19260  019454  010F               	movlb	15	; () banked
 19261  019456  9130               	bcf	48,0,b	;volatile
 19262                           
 19263                           ; BSR set to: 15
 19264  019458  0012               	return		;funcret
 19265  01945A                     __end_of_TMR7_StopTimer:
 19266                           	opt stack 0
 19267                           tblptru	equ	0xFF8
 19268                           tblptrh	equ	0xFF7
 19269                           tblptrl	equ	0xFF6
 19270                           tablat	equ	0xFF5
 19271                           prodh	equ	0xFF4
 19272                           prodl	equ	0xFF3
 19273                           intcon	equ	0xFF2
 19274                           indf0	equ	0xFEF
 19275                           postinc0	equ	0xFEE
 19276                           fsr0h	equ	0xFEA
 19277                           fsr0l	equ	0xFE9
 19278                           wreg	equ	0xFE8
 19279                           indf1	equ	0xFE7
 19280                           postdec1	equ	0xFE5
 19281                           plusw1	equ	0xFE3
 19282                           fsr1h	equ	0xFE2
 19283                           fsr1l	equ	0xFE1
 19284                           indf2	equ	0xFDF
 19285                           postinc2	equ	0xFDE
 19286                           postdec2	equ	0xFDD
 19287                           plusw2	equ	0xFDB
 19288                           fsr2h	equ	0xFDA
 19289                           fsr2l	equ	0xFD9
 19290                           status	equ	0xFD8
 19291                           
 19292 ;; *************** function _TMR5_StopTimer *****************
 19293 ;; Defined at:
 19294 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 19295 ;; Parameters:    Size  Location     Type
 19296 ;;		None
 19297 ;; Auto vars:     Size  Location     Type
 19298 ;;		None
 19299 ;; Return value:  Size  Location     Type
 19300 ;;                  1    wreg      void 
 19301 ;; Registers used:
 19302 ;;		None
 19303 ;; Tracked objects:
 19304 ;;		On entry : 0/0
 19305 ;;		On exit  : 0/0
 19306 ;;		Unchanged: 0/0
 19307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19312 ;;Total ram usage:        0 bytes
 19313 ;; Hardware stack levels used:    1
 19314 ;; Hardware stack levels required when called:   13
 19315 ;; This function calls:
 19316 ;;		Nothing
 19317 ;; This function is called by:
 19318 ;;		_main
 19319 ;;		_ringBufferLUT
 19320 ;; This function uses a non-reentrant model
 19321 ;;
 19322                           
 19323                           	psect	text26
 19324  019466                     __ptext26:
 19325                           	opt stack 0
 19326  019466                     _TMR5_StopTimer:
 19327                           	opt stack 15
 19328                           
 19329                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 19330                           
 19331                           ; BSR set to: 15
 19332                           ;incstack = 0
 19333  019466  90C3               	bcf	4035,0,c	;volatile
 19334  019468  0012               	return		;funcret
 19335  01946A                     __end_of_TMR5_StopTimer:
 19336                           	opt stack 0
 19337                           tblptru	equ	0xFF8
 19338                           tblptrh	equ	0xFF7
 19339                           tblptrl	equ	0xFF6
 19340                           tablat	equ	0xFF5
 19341                           prodh	equ	0xFF4
 19342                           prodl	equ	0xFF3
 19343                           intcon	equ	0xFF2
 19344                           indf0	equ	0xFEF
 19345                           postinc0	equ	0xFEE
 19346                           fsr0h	equ	0xFEA
 19347                           fsr0l	equ	0xFE9
 19348                           wreg	equ	0xFE8
 19349                           indf1	equ	0xFE7
 19350                           postdec1	equ	0xFE5
 19351                           plusw1	equ	0xFE3
 19352                           fsr1h	equ	0xFE2
 19353                           fsr1l	equ	0xFE1
 19354                           indf2	equ	0xFDF
 19355                           postinc2	equ	0xFDE
 19356                           postdec2	equ	0xFDD
 19357                           plusw2	equ	0xFDB
 19358                           fsr2h	equ	0xFDA
 19359                           fsr2l	equ	0xFD9
 19360                           status	equ	0xFD8
 19361                           
 19362 ;; *************** function _EUSART2_Read *****************
 19363 ;; Defined at:
 19364 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19365 ;; Parameters:    Size  Location     Type
 19366 ;;		None
 19367 ;; Auto vars:     Size  Location     Type
 19368 ;;  readValue       1   23[BANK1 ] unsigned char 
 19369 ;; Return value:  Size  Location     Type
 19370 ;;                  1    wreg      unsigned char 
 19371 ;; Registers used:
 19372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19373 ;; Tracked objects:
 19374 ;;		On entry : 0/0
 19375 ;;		On exit  : 0/0
 19376 ;;		Unchanged: 0/0
 19377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19379 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19381 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19382 ;;Total ram usage:        1 bytes
 19383 ;; Hardware stack levels used:    1
 19384 ;; Hardware stack levels required when called:   13
 19385 ;; This function calls:
 19386 ;;		Nothing
 19387 ;; This function is called by:
 19388 ;;		_terminal_ringBufferPull
 19389 ;;		_getch
 19390 ;; This function uses a non-reentrant model
 19391 ;;
 19392                           
 19393                           	psect	text27
 19394  018C1E                     __ptext27:
 19395                           	opt stack 0
 19396  018C1E                     _EUSART2_Read:
 19397                           	opt stack 16
 19398                           
 19399                           ;eusart2.c: 139: uint8_t readValue = 0;
 19400                           
 19401                           ;incstack = 0
 19402  018C1E  0E00               	movlw	0
 19403  018C20  0101               	movlb	1	; () banked
 19404  018C22  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 19405                           
 19406                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 19407  018C24  D002               	goto	l395
 19408  018C26                     l396:
 19409                           
 19410                           ; BSR set to: 1
 19411  018C26  0004               	clrwdt		;# 
 19412                           
 19413                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 19414  018C28  827E               	bsf	3966,1,c	;volatile
 19415  018C2A                     l395:
 19416  018C2A  0101               	movlb	1	; () banked
 19417  018C2C  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 19418  018C2E  B4D8               	btfsc	status,2,c
 19419  018C30  D7FA               	goto	l396
 19420                           
 19421                           ; BSR set to: 1
 19422                           ;eusart2.c: 145: }
 19423                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 19424  018C32  927E               	bcf	3966,1,c	;volatile
 19425                           
 19426                           ; BSR set to: 1
 19427                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 19428  018C34  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 19429  018C36  0D01               	mullw	1
 19430  018C38  0E80               	movlw	low _eusart2RxBuffer
 19431  018C3A  24F3               	addwf	prodl,w,c
 19432  018C3C  6ED9               	movwf	fsr2l,c
 19433  018C3E  0E03               	movlw	high _eusart2RxBuffer
 19434  018C40  20F4               	addwfc	prodh,w,c
 19435  018C42  6EDA               	movwf	fsr2h,c
 19436  018C44  50DF               	movf	indf2,w,c
 19437  018C46  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 19438                           
 19439                           ; BSR set to: 1
 19440  018C48  2BE0               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 19441                           
 19442                           ; BSR set to: 1
 19443                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 19444  018C4A  0E3F               	movlw	63
 19445  018C4C  65E0               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 19446  018C4E  D002               	goto	l398
 19447                           
 19448                           ; BSR set to: 1
 19449                           ;eusart2.c: 151: {
 19450                           ;eusart2.c: 152: eusart2RxTail = 0;
 19451  018C50  0E00               	movlw	0
 19452  018C52  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 19453  018C54                     l398:
 19454                           
 19455                           ; BSR set to: 1
 19456                           ;eusart2.c: 153: }
 19457                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 19458                           
 19459                           ; BSR set to: 1
 19460  018C54  010E               	movlb	14	; () banked
 19461  018C56  9F2C               	bcf	44,7,b	;volatile
 19462                           
 19463                           ; BSR set to: 14
 19464                           ;eusart2.c: 155: eusart2RxCount--;
 19465  018C58  0101               	movlb	1	; () banked
 19466  018C5A  07DF               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 19467                           
 19468                           ; BSR set to: 1
 19469                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 19470  018C5C  010E               	movlb	14	; () banked
 19471  018C5E  8F2C               	bsf	44,7,b	;volatile
 19472                           
 19473                           ; BSR set to: 14
 19474                           ;eusart2.c: 158: return readValue;
 19475  018C60  0101               	movlb	1	; () banked
 19476  018C62  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 19477  018C64  0012               	return	
 19478  018C66                     __end_of_EUSART2_Read:
 19479                           	opt stack 0
 19480                           tblptru	equ	0xFF8
 19481                           tblptrh	equ	0xFF7
 19482                           tblptrl	equ	0xFF6
 19483                           tablat	equ	0xFF5
 19484                           prodh	equ	0xFF4
 19485                           prodl	equ	0xFF3
 19486                           intcon	equ	0xFF2
 19487                           indf0	equ	0xFEF
 19488                           postinc0	equ	0xFEE
 19489                           fsr0h	equ	0xFEA
 19490                           fsr0l	equ	0xFE9
 19491                           wreg	equ	0xFE8
 19492                           indf1	equ	0xFE7
 19493                           postdec1	equ	0xFE5
 19494                           plusw1	equ	0xFE3
 19495                           fsr1h	equ	0xFE2
 19496                           fsr1l	equ	0xFE1
 19497                           indf2	equ	0xFDF
 19498                           postinc2	equ	0xFDE
 19499                           postdec2	equ	0xFDD
 19500                           plusw2	equ	0xFDB
 19501                           fsr2h	equ	0xFDA
 19502                           fsr2l	equ	0xFD9
 19503                           status	equ	0xFD8
 19504                           
 19505 ;; *************** function _terminal_clearTerminal *****************
 19506 ;; Defined at:
 19507 ;;		line 80 in file "ring_buffer_interface.c"
 19508 ;; Parameters:    Size  Location     Type
 19509 ;;		None
 19510 ;; Auto vars:     Size  Location     Type
 19511 ;;		None
 19512 ;; Return value:  Size  Location     Type
 19513 ;;                  1    wreg      void 
 19514 ;; Registers used:
 19515 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19516 ;; Tracked objects:
 19517 ;;		On entry : 0/0
 19518 ;;		On exit  : 0/0
 19519 ;;		Unchanged: 0/0
 19520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19525 ;;Total ram usage:        0 bytes
 19526 ;; Hardware stack levels used:    1
 19527 ;; Hardware stack levels required when called:   16
 19528 ;; This function calls:
 19529 ;;		_printf
 19530 ;; This function is called by:
 19531 ;;		_main
 19532 ;; This function uses a non-reentrant model
 19533 ;;
 19534                           
 19535                           	psect	text28
 19536  01936C                     __ptext28:
 19537                           	opt stack 0
 19538  01936C                     _terminal_clearTerminal:
 19539                           	opt stack 14
 19540                           
 19541                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 19542                           
 19543                           ; BSR set to: 1
 19544                           ;incstack = 0
 19545  01936C  0EB0               	movlw	low STR_2
 19546  01936E  0101               	movlb	1	; () banked
 19547  019370  6F82               	movwf	printf@f& (0+255),b
 19548  019372  0EFF               	movlw	high STR_2
 19549  019374  6F83               	movwf	(printf@f+1)& (0+255),b
 19550  019376  ECCF  F089         	call	_printf	;wreg free
 19551  01937A  0012               	return		;funcret
 19552  01937C                     __end_of_terminal_clearTerminal:
 19553                           	opt stack 0
 19554                           tblptru	equ	0xFF8
 19555                           tblptrh	equ	0xFF7
 19556                           tblptrl	equ	0xFF6
 19557                           tablat	equ	0xFF5
 19558                           prodh	equ	0xFF4
 19559                           prodl	equ	0xFF3
 19560                           intcon	equ	0xFF2
 19561                           indf0	equ	0xFEF
 19562                           postinc0	equ	0xFEE
 19563                           fsr0h	equ	0xFEA
 19564                           fsr0l	equ	0xFE9
 19565                           wreg	equ	0xFE8
 19566                           indf1	equ	0xFE7
 19567                           postdec1	equ	0xFE5
 19568                           plusw1	equ	0xFE3
 19569                           fsr1h	equ	0xFE2
 19570                           fsr1l	equ	0xFE1
 19571                           indf2	equ	0xFDF
 19572                           postinc2	equ	0xFDE
 19573                           postdec2	equ	0xFDD
 19574                           plusw2	equ	0xFDB
 19575                           fsr2h	equ	0xFDA
 19576                           fsr2l	equ	0xFD9
 19577                           status	equ	0xFD8
 19578                           
 19579 ;; *************** function _printf *****************
 19580 ;; Defined at:
 19581 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19582 ;; Parameters:    Size  Location     Type
 19583 ;;  f               2  130[BANK1 ] PTR const unsigned char 
 19584 ;;		 -> STR_150(30), STR_149(46), STR_148(39), STR_147(62), 
 19585 ;;		 -> STR_146(55), STR_145(470), STR_143(2891), STR_141(492), 
 19586 ;;		 -> STR_139(605), STR_137(720), STR_135(922), STR_133(54), 
 19587 ;;		 -> STR_131(54), STR_129(45), STR_127(51), STR_125(52), 
 19588 ;;		 -> STR_123(46), STR_121(51), STR_119(53), STR_117(58), 
 19589 ;;		 -> STR_115(71), STR_114(63), STR_113(37), STR_112(46), 
 19590 ;;		 -> STR_111(102), STR_110(86), STR_108(25), STR_106(42), 
 19591 ;;		 -> STR_105(53), STR_104(31), STR_102(29), STR_101(28), 
 19592 ;;		 -> STR_99(42), STR_97(41), STR_95(40), STR_93(56), 
 19593 ;;		 -> STR_91(34), STR_89(34), STR_87(32), STR_85(37), 
 19594 ;;		 -> STR_83(58), STR_81(36), STR_79(36), STR_77(37), 
 19595 ;;		 -> STR_75(45), STR_74(66), STR_72(21), STR_70(24), 
 19596 ;;		 -> STR_69(48), STR_59(54), STR_58(64), STR_56(59), 
 19597 ;;		 -> STR_54(85), STR_52(47), STR_51(17), STR_48(52), 
 19598 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 19599 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 19600 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 19601 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 19602 ;; Auto vars:     Size  Location     Type
 19603 ;;  idx             1  150[BANK1 ] unsigned char 
 19604 ;;  val             4  167[BANK1 ] unsigned long 
 19605 ;;  fval            4  163[BANK1 ] unsigned long 
 19606 ;;  tmpval          4  157[BANK1 ] struct .
 19607 ;;  prec            2  175[BANK1 ] int 
 19608 ;;  width           2  173[BANK1 ] int 
 19609 ;;  flag            2  171[BANK1 ] unsigned short 
 19610 ;;  exp             2  161[BANK1 ] int 
 19611 ;;  ap              2  155[BANK1 ] PTR void [1]
 19612 ;;		 -> ?i2_printf(2), ?_printf(2), 
 19613 ;;  len             2  153[BANK1 ] unsigned int 
 19614 ;;  cp              2  151[BANK1 ] PTR const unsigned char 
 19615 ;;		 -> STR_164(7), printf@c(1), STR_163(16), STR_162(22), 
 19616 ;;		 -> STR_161(21), STR_160(27), STR_159(41), STR_158(32), 
 19617 ;;		 -> STR_157(19), STR_156(16), STR_155(15), STR_154(16), 
 19618 ;;		 -> STR_153(10), STR_152(13), STR_151(12), ringBufferLUT@channel_name(22), 
 19619 ;;		 -> TRIAC_Firing_Angle(4), 
 19620 ;;  c               1  177[BANK1 ] char 
 19621 ;;  d               1    0        unsigned char 
 19622 ;; Return value:  Size  Location     Type
 19623 ;;                  2  130[BANK1 ] int 
 19624 ;; Registers used:
 19625 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19626 ;; Tracked objects:
 19627 ;;		On entry : 0/0
 19628 ;;		On exit  : 0/0
 19629 ;;		Unchanged: 0/0
 19630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19631 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19632 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19633 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19634 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19635 ;;Total ram usage:       48 bytes
 19636 ;; Hardware stack levels used:    1
 19637 ;; Hardware stack levels required when called:   15
 19638 ;; This function calls:
 19639 ;;		___awdiv
 19640 ;;		___fladd
 19641 ;;		___flge
 19642 ;;		___flmul
 19643 ;;		___flneg
 19644 ;;		___flsub
 19645 ;;		___fltol
 19646 ;;		___lldiv
 19647 ;;		___llmod
 19648 ;;		___wmul
 19649 ;;		___xxtofl
 19650 ;;		__div_to_l_
 19651 ;;		__tdiv_to_l_
 19652 ;;		_fround
 19653 ;;		_isdigit
 19654 ;;		_putch
 19655 ;;		_scale
 19656 ;; This function is called by:
 19657 ;;		_terminal_clearTerminal
 19658 ;;		_terminal_setCursorHome
 19659 ;;		_terminal_textAttributes
 19660 ;;		_terminal_printNewline
 19661 ;;		_ringBufferLUT
 19662 ;;		_terminal_printResetMessage
 19663 ;;		_terminal_clearLine
 19664 ;;		_terminal_saveCursor
 19665 ;;		_terminal_returnCursor
 19666 ;; This function uses a non-reentrant model
 19667 ;;
 19668                           
 19669                           	psect	text29
 19670  01139E                     __ptext29:
 19671                           	opt stack 0
 19672  01139E                     _printf:
 19673                           	opt stack 13
 19674                           
 19675                           ;doprnt.c: 466: va_list ap;
 19676                           ;doprnt.c: 499: signed char c;
 19677                           ;doprnt.c: 501: int width;
 19678                           ;doprnt.c: 504: int prec;
 19679                           ;doprnt.c: 508: unsigned short flag;
 19680                           ;doprnt.c: 515: char d;
 19681                           ;doprnt.c: 516: double fval;
 19682                           ;doprnt.c: 517: int exp;
 19683                           ;doprnt.c: 523: union {
 19684                           ;doprnt.c: 524: unsigned long vd;
 19685                           ;doprnt.c: 525: double integ;
 19686                           ;doprnt.c: 526: } tmpval;
 19687                           ;doprnt.c: 528: unsigned long val;
 19688                           ;doprnt.c: 529: unsigned len;
 19689                           ;doprnt.c: 530: const char * cp;
 19690                           ;doprnt.c: 533: *ap = __va_start();
 19691                           
 19692                           ;incstack = 0
 19693  01139E  0E84               	movlw	low (?_printf+2)
 19694  0113A0  0101               	movlb	1	; () banked
 19695  0113A2  6F9B               	movwf	printf@ap& (0+255),b
 19696  0113A4  0E01               	movlw	high (?_printf+2)
 19697  0113A6  6F9C               	movwf	(printf@ap+1)& (0+255),b
 19698                           
 19699                           ;doprnt.c: 536: while(c = *f++) {
 19700  0113A8  EF97  F090         	goto	u25720
 19701  0113AC                     
 19702                           ; BSR set to: 1
 19703                           ;doprnt.c: 538: if(c != '%')
 19704                           
 19705                           ; BSR set to: 1
 19706  0113AC  0E25               	movlw	37
 19707  0113AE  19B1               	xorwf	printf@c& (0+255),w,b
 19708  0113B0  B4D8               	btfsc	status,2,c
 19709  0113B2  D005               	goto	l1532
 19710                           
 19711                           ; BSR set to: 1
 19712                           ;doprnt.c: 540: {
 19713                           ;doprnt.c: 541: (putch(c) );
 19714  0113B4  51B1               	movf	printf@c& (0+255),w,b
 19715  0113B6  ECC6  F0C9         	call	_putch
 19716                           
 19717                           ;doprnt.c: 542: continue;
 19718  0113BA  EF97  F090         	goto	u25720
 19719  0113BE                     l1532:
 19720                           
 19721                           ;doprnt.c: 543: }
 19722                           ;doprnt.c: 546: width = 0;
 19723  0113BE  0E00               	movlw	0
 19724  0113C0  0101               	movlb	1	; () banked
 19725  0113C2  6FAE               	movwf	(printf@width+1)& (0+255),b
 19726  0113C4  0E00               	movlw	0
 19727  0113C6  6FAD               	movwf	printf@width& (0+255),b
 19728                           
 19729                           ;doprnt.c: 548: flag = 0;
 19730  0113C8  0E00               	movlw	0
 19731  0113CA  6FAC               	movwf	(printf@flag+1)& (0+255),b
 19732  0113CC  0E00               	movlw	0
 19733  0113CE  6FAB               	movwf	printf@flag& (0+255),b
 19734                           
 19735                           ; BSR set to: 1
 19736                           ;doprnt.c: 551: switch(*f) {
 19737                           
 19738                           ;doprnt.c: 550: for(;;) {
 19739  0113D0  D004               	goto	l1534
 19740  0113D2                     
 19741                           ;doprnt.c: 580: flag |= 0x04;
 19742                           
 19743                           ; BSR set to: 1
 19744  0113D2  0101               	movlb	1	; () banked
 19745  0113D4  85AB               	bsf	printf@flag& (0+255),2,b
 19746                           
 19747                           ;doprnt.c: 581: f++;
 19748  0113D6  4B82               	infsnz	printf@f& (0+255),f,b
 19749  0113D8  2B83               	incf	(printf@f+1)& (0+255),f,b
 19750  0113DA                     l1534:
 19751                           
 19752                           ; BSR set to: 1
 19753  0113DA  C182  FFF6         	movff	printf@f,tblptrl
 19754  0113DE  C183  FFF7         	movff	printf@f+1,tblptrh
 19755  0113E2  0E00               	movlw	low (__mediumconst shr (0+16))
 19756  0113E4  6EF8               	movwf	tblptru,c
 19757  0113E6  0E0D               	movlw	(high __ramtop+-1)
 19758  0113E8  64F7               	cpfsgt	tblptrh,c
 19759  0113EA  D003               	bra	u24987
 19760  0113EC  0008               	tblrd		*
 19761  0113EE  50F5               	movf	tablat,w,c
 19762  0113F0  D005               	bra	u24980
 19763  0113F2                     u24987:
 19764  0113F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 19765  0113F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 19766  0113FA  50EF               	movf	indf0,w,c
 19767  0113FC                     u24980:
 19768                           
 19769                           ; Switch size 1, requested type "space"
 19770                           ; Number of cases is 1, Range of values is 48 to 48
 19771                           ; switch strategies available:
 19772                           ; Name         Instructions Cycles
 19773                           ; simple_byte            4     3 (average)
 19774                           ;	Chosen strategy is simple_byte
 19775  0113FC  0A30               	xorlw	48	; case 48
 19776  0113FE  B4D8               	btfsc	status,2,c
 19777  011400  D7E8               	goto	l1535
 19778                           
 19779                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 19780                           
 19781                           ;doprnt.c: 586: }
 19782                           
 19783                           ;doprnt.c: 585: break;
 19784  011402  C182  FFF6         	movff	printf@f,tblptrl
 19785  011406  C183  FFF7         	movff	printf@f+1,tblptrh
 19786  01140A  0E00               	movlw	low (__mediumconst shr (0+16))
 19787  01140C  6EF8               	movwf	tblptru,c
 19788  01140E  0E0D               	movlw	(high __ramtop+-1)
 19789  011410  64F7               	cpfsgt	tblptrh,c
 19790  011412  D003               	bra	u24997
 19791  011414  0008               	tblrd		*
 19792  011416  50F5               	movf	tablat,w,c
 19793  011418  D005               	bra	u24990
 19794  01141A                     u24997:
 19795  01141A  CFF6 FFE9          	movff	tblptrl,fsr0l
 19796  01141E  CFF7 FFEA          	movff	tblptrh,fsr0h
 19797  011422  50EF               	movf	indf0,w,c
 19798  011424                     u24990:
 19799  011424  ECE6  F0C8         	call	_isdigit
 19800  011428  A0D8               	btfss	status,0,c
 19801  01142A  D04C               	goto	u25030
 19802                           
 19803                           ;doprnt.c: 598: width = 0;
 19804  01142C  0E00               	movlw	0
 19805  01142E  0101               	movlb	1	; () banked
 19806  011430  6FAE               	movwf	(printf@width+1)& (0+255),b
 19807  011432  0E00               	movlw	0
 19808  011434  6FAD               	movwf	printf@width& (0+255),b
 19809  011436                     
 19810                           ;doprnt.c: 600: width *= 10;
 19811                           
 19812                           ; BSR set to: 1
 19813  011436  C1AD  F117         	movff	printf@width,___wmul@multiplier
 19814  01143A  C1AE  F118         	movff	printf@width+1,___wmul@multiplier+1
 19815  01143E  0E00               	movlw	0
 19816  011440  0101               	movlb	1	; () banked
 19817  011442  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19818  011444  0E0A               	movlw	10
 19819  011446  6F19               	movwf	___wmul@multiplicand& (0+255),b
 19820  011448  EC4D  F0C8         	call	___wmul	;wreg free
 19821  01144C  C117  F1AD         	movff	?___wmul,printf@width
 19822  011450  C118  F1AE         	movff	?___wmul+1,printf@width+1
 19823                           
 19824                           ;doprnt.c: 601: width += *f++ - '0';
 19825  011454  0ED0               	movlw	208
 19826  011456  0101               	movlb	1	; () banked
 19827  011458  6F8C               	movwf	??_printf& (0+255),b
 19828  01145A  0EFF               	movlw	255
 19829  01145C  6F8D               	movwf	(??_printf+1)& (0+255),b
 19830  01145E  C182  FFF6         	movff	printf@f,tblptrl
 19831  011462  C183  FFF7         	movff	printf@f+1,tblptrh
 19832  011466  0E00               	movlw	low (__mediumconst shr (0+16))
 19833  011468  6EF8               	movwf	tblptru,c
 19834  01146A  0E0D               	movlw	(high __ramtop+-1)
 19835  01146C  64F7               	cpfsgt	tblptrh,c
 19836  01146E  D003               	bra	u25017
 19837  011470  0008               	tblrd		*
 19838  011472  50F5               	movf	tablat,w,c
 19839  011474  D005               	bra	u25010
 19840  011476                     u25017:
 19841  011476  CFF6 FFE9          	movff	tblptrl,fsr0l
 19842  01147A  CFF7 FFEA          	movff	tblptrh,fsr0h
 19843  01147E  50EF               	movf	indf0,w,c
 19844  011480                     u25010:
 19845  011480  0101               	movlb	1	; () banked
 19846  011482  6F8E               	movwf	(??_printf+2)& (0+255),b
 19847  011484  6B8F               	clrf	(??_printf+3)& (0+255),b
 19848  011486  518C               	movf	??_printf& (0+255),w,b
 19849  011488  278E               	addwf	(??_printf+2)& (0+255),f,b
 19850  01148A  518D               	movf	(??_printf+1)& (0+255),w,b
 19851  01148C  238F               	addwfc	(??_printf+3)& (0+255),f,b
 19852  01148E  518E               	movf	(??_printf+2)& (0+255),w,b
 19853  011490  27AD               	addwf	printf@width& (0+255),f,b
 19854  011492  518F               	movf	(??_printf+3)& (0+255),w,b
 19855  011494  23AE               	addwfc	(printf@width+1)& (0+255),f,b
 19856                           
 19857                           ; BSR set to: 1
 19858  011496  4B82               	infsnz	printf@f& (0+255),f,b
 19859  011498  2B83               	incf	(printf@f+1)& (0+255),f,b
 19860                           
 19861                           ; BSR set to: 1
 19862                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 19863  01149A  C182  FFF6         	movff	printf@f,tblptrl
 19864  01149E  C183  FFF7         	movff	printf@f+1,tblptrh
 19865  0114A2  0E00               	movlw	low (__mediumconst shr (0+16))
 19866  0114A4  6EF8               	movwf	tblptru,c
 19867  0114A6  0E0D               	movlw	(high __ramtop+-1)
 19868  0114A8  64F7               	cpfsgt	tblptrh,c
 19869  0114AA  D003               	bra	u25027
 19870  0114AC  0008               	tblrd		*
 19871  0114AE  50F5               	movf	tablat,w,c
 19872  0114B0  D005               	bra	u25020
 19873  0114B2                     u25027:
 19874  0114B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 19875  0114B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 19876  0114BA  50EF               	movf	indf0,w,c
 19877  0114BC                     u25020:
 19878  0114BC  ECE6  F0C8         	call	_isdigit
 19879  0114C0  B0D8               	btfsc	status,0,c
 19880  0114C2  D7B9               	goto	l1540
 19881  0114C4                     u25030:
 19882                           
 19883                           ;doprnt.c: 608: }
 19884                           ;doprnt.c: 611: if(*f == '.') {
 19885  0114C4  C182  FFF6         	movff	printf@f,tblptrl
 19886  0114C8  C183  FFF7         	movff	printf@f+1,tblptrh
 19887  0114CC  0E00               	movlw	low (__mediumconst shr (0+16))
 19888  0114CE  6EF8               	movwf	tblptru,c
 19889  0114D0  0E0D               	movlw	(high __ramtop+-1)
 19890  0114D2  64F7               	cpfsgt	tblptrh,c
 19891  0114D4  D003               	bra	u25047
 19892  0114D6  0008               	tblrd		*
 19893  0114D8  50F5               	movf	tablat,w,c
 19894  0114DA  D005               	bra	u25040
 19895  0114DC                     u25047:
 19896  0114DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 19897  0114E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 19898  0114E4  50EF               	movf	indf0,w,c
 19899  0114E6                     u25040:
 19900  0114E6  0A2E               	xorlw	46
 19901  0114E8  A4D8               	btfss	status,2,c
 19902  0114EA  D049               	goto	l1542
 19903                           
 19904                           ;doprnt.c: 612: flag |= 0x4000;
 19905  0114EC  0101               	movlb	1	; () banked
 19906  0114EE  8DAC               	bsf	(printf@flag+1)& (0+255),6,b
 19907                           
 19908                           ;doprnt.c: 613: f++;
 19909  0114F0  4B82               	infsnz	printf@f& (0+255),f,b
 19910  0114F2  2B83               	incf	(printf@f+1)& (0+255),f,b
 19911                           
 19912                           ; BSR set to: 1
 19913                           ;doprnt.c: 620: {
 19914                           ;doprnt.c: 621: prec = 0;
 19915  0114F4  0E00               	movlw	0
 19916  0114F6  6FB0               	movwf	(printf@prec+1)& (0+255),b
 19917  0114F8  0E00               	movlw	0
 19918  0114FA  6FAF               	movwf	printf@prec& (0+255),b
 19919                           
 19920                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 19921  0114FC  D02A               	goto	l1543
 19922  0114FE                     
 19923                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 19924                           
 19925                           ; BSR set to: 1
 19926  0114FE  C1AF  F117         	movff	printf@prec,___wmul@multiplier
 19927  011502  C1B0  F118         	movff	printf@prec+1,___wmul@multiplier+1
 19928  011506  0E00               	movlw	0
 19929  011508  0101               	movlb	1	; () banked
 19930  01150A  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19931  01150C  0E0A               	movlw	10
 19932  01150E  6F19               	movwf	___wmul@multiplicand& (0+255),b
 19933  011510  EC4D  F0C8         	call	___wmul	;wreg free
 19934  011514  C182  FFF6         	movff	printf@f,tblptrl
 19935  011518  C183  FFF7         	movff	printf@f+1,tblptrh
 19936  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 19937  01151E  6EF8               	movwf	tblptru,c
 19938  011520  0E0D               	movlw	(high __ramtop+-1)
 19939  011522  64F7               	cpfsgt	tblptrh,c
 19940  011524  D003               	bra	u25067
 19941  011526  0008               	tblrd		*
 19942  011528  50F5               	movf	tablat,w,c
 19943  01152A  D005               	bra	u25060
 19944  01152C                     u25067:
 19945  01152C  CFF6 FFE9          	movff	tblptrl,fsr0l
 19946  011530  CFF7 FFEA          	movff	tblptrh,fsr0h
 19947  011534  50EF               	movf	indf0,w,c
 19948  011536                     u25060:
 19949  011536  0101               	movlb	1	; () banked
 19950  011538  6F8C               	movwf	??_printf& (0+255),b
 19951  01153A  518C               	movf	??_printf& (0+255),w,b
 19952  01153C  2717               	addwf	?___wmul& (0+255),f,b
 19953  01153E  0E00               	movlw	0
 19954  011540  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 19955  011542  0ED0               	movlw	208
 19956  011544  2517               	addwf	?___wmul& (0+255),w,b
 19957  011546  6FAF               	movwf	printf@prec& (0+255),b
 19958  011548  0EFF               	movlw	255
 19959  01154A  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 19960  01154C  6FB0               	movwf	(printf@prec+1)& (0+255),b
 19961                           
 19962                           ; BSR set to: 1
 19963  01154E  4B82               	infsnz	printf@f& (0+255),f,b
 19964  011550  2B83               	incf	(printf@f+1)& (0+255),f,b
 19965  011552                     l1543:
 19966                           
 19967                           ; BSR set to: 1
 19968                           
 19969                           ; BSR set to: 1
 19970  011552  C182  FFF6         	movff	printf@f,tblptrl
 19971  011556  C183  FFF7         	movff	printf@f+1,tblptrh
 19972  01155A  0E00               	movlw	low (__mediumconst shr (0+16))
 19973  01155C  6EF8               	movwf	tblptru,c
 19974  01155E  0E0D               	movlw	(high __ramtop+-1)
 19975  011560  64F7               	cpfsgt	tblptrh,c
 19976  011562  D003               	bra	u25077
 19977  011564  0008               	tblrd		*
 19978  011566  50F5               	movf	tablat,w,c
 19979  011568  D005               	bra	u25070
 19980  01156A                     u25077:
 19981  01156A  CFF6 FFE9          	movff	tblptrl,fsr0l
 19982  01156E  CFF7 FFEA          	movff	tblptrh,fsr0h
 19983  011572  50EF               	movf	indf0,w,c
 19984  011574                     u25070:
 19985  011574  ECE6  F0C8         	call	_isdigit
 19986  011578  A0D8               	btfss	status,0,c
 19987  01157A  D0A4               	goto	l1547
 19988  01157C  D7C0               	goto	l1544
 19989  01157E                     l1542:
 19990                           
 19991                           ;doprnt.c: 626: prec = 0;
 19992  01157E  0E00               	movlw	0
 19993  011580  0101               	movlb	1	; () banked
 19994  011582  6FB0               	movwf	(printf@prec+1)& (0+255),b
 19995  011584  0E00               	movlw	0
 19996  011586  6FAF               	movwf	printf@prec& (0+255),b
 19997                           
 19998                           ; BSR set to: 1
 19999                           ;doprnt.c: 628: flag |= 0x1000;
 20000  011588  89AC               	bsf	(printf@flag+1)& (0+255),4,b
 20001                           
 20002                           ; BSR set to: 1
 20003                           ;doprnt.c: 630: }
 20004                           ;doprnt.c: 635: switch(c = *f++) {
 20005  01158A  D09C               	goto	l1547
 20006  01158C                     
 20007                           ; BSR set to: 1
 20008                           ;doprnt.c: 663: flag |= 0x400;
 20009                           
 20010                           ; BSR set to: 1
 20011  01158C  85AC               	bsf	(printf@flag+1)& (0+255),2,b
 20012                           
 20013                           ; BSR set to: 1
 20014                           ;doprnt.c: 698: case 'i':
 20015                           ;doprnt.c: 699: break;
 20016                           
 20017                           ; BSR set to: 1
 20018                           
 20019                           ;doprnt.c: 697: case 'd':
 20020                           
 20021                           ;doprnt.c: 664: break;
 20022  01158E  D0D1               	goto	l1551
 20023  011590                     
 20024                           ; BSR set to: 1
 20025                           ;doprnt.c: 718: case 'x':
 20026                           ;doprnt.c: 721: flag |= 0x80;
 20027                           
 20028                           ; BSR set to: 1
 20029                           
 20030                           ; BSR set to: 1
 20031  011590  8FAB               	bsf	printf@flag& (0+255),7,b
 20032                           
 20033                           ;doprnt.c: 723: break;
 20034  011592  D0CF               	goto	l1551
 20035  011594                     
 20036                           ; BSR set to: 1
 20037                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 20038                           
 20039                           ; BSR set to: 1
 20040  011594  C19B  FFD9         	movff	printf@ap,fsr2l
 20041  011598  C19C  FFDA         	movff	printf@ap+1,fsr2h
 20042  01159C  CFDE F197          	movff	postinc2,printf@cp
 20043  0115A0  CFDD F198          	movff	postdec2,printf@cp+1
 20044                           
 20045                           ; BSR set to: 1
 20046  0115A4  0E02               	movlw	2
 20047  0115A6  279B               	addwf	printf@ap& (0+255),f,b
 20048  0115A8  0E00               	movlw	0
 20049  0115AA  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 20050                           
 20051                           ; BSR set to: 1
 20052                           ;doprnt.c: 740: if(!cp)
 20053  0115AC  5197               	movf	printf@cp& (0+255),w,b
 20054  0115AE  1198               	iorwf	(printf@cp+1)& (0+255),w,b
 20055  0115B0  A4D8               	btfss	status,2,c
 20056  0115B2  D004               	goto	l1557
 20057                           
 20058                           ; BSR set to: 1
 20059                           ;doprnt.c: 741: cp = "(null)";
 20060  0115B4  0E86               	movlw	low STR_164
 20061  0115B6  6F97               	movwf	printf@cp& (0+255),b
 20062  0115B8  0EFF               	movlw	high STR_164
 20063  0115BA  6F98               	movwf	(printf@cp+1)& (0+255),b
 20064  0115BC                     l1557:
 20065                           
 20066                           ; BSR set to: 1
 20067                           ;doprnt.c: 745: len = 0;
 20068                           
 20069                           ; BSR set to: 1
 20070  0115BC  0E00               	movlw	0
 20071  0115BE  6F9A               	movwf	(printf@len+1)& (0+255),b
 20072  0115C0  0E00               	movlw	0
 20073  0115C2  6F99               	movwf	printf@len& (0+255),b
 20074                           
 20075                           ;doprnt.c: 746: while(cp[len])
 20076  0115C4  D003               	goto	l1558
 20077  0115C6                     
 20078                           ;doprnt.c: 747: len++;
 20079                           
 20080                           ; BSR set to: 1
 20081  0115C6  0101               	movlb	1	; () banked
 20082  0115C8  4B99               	infsnz	printf@len& (0+255),f,b
 20083  0115CA  2B9A               	incf	(printf@len+1)& (0+255),f,b
 20084  0115CC                     l1558:
 20085                           
 20086                           ; BSR set to: 1
 20087                           
 20088                           ; BSR set to: 1
 20089  0115CC  5199               	movf	printf@len& (0+255),w,b
 20090  0115CE  2597               	addwf	printf@cp& (0+255),w,b
 20091  0115D0  6F8C               	movwf	??_printf& (0+255),b
 20092  0115D2  519A               	movf	(printf@len+1)& (0+255),w,b
 20093  0115D4  2198               	addwfc	(printf@cp+1)& (0+255),w,b
 20094  0115D6  6F8D               	movwf	(??_printf+1)& (0+255),b
 20095  0115D8  C18C  FFF6         	movff	??_printf,tblptrl
 20096  0115DC  C18D  FFF7         	movff	??_printf+1,tblptrh
 20097  0115E0  0E00               	movlw	low (__mediumconst shr (0+16))
 20098  0115E2  6EF8               	movwf	tblptru,c
 20099  0115E4  0E0D               	movlw	(high __ramtop+-1)
 20100  0115E6  64F7               	cpfsgt	tblptrh,c
 20101  0115E8  D003               	bra	u25107
 20102  0115EA  0008               	tblrd		*
 20103  0115EC  50F5               	movf	tablat,w,c
 20104  0115EE  D005               	bra	u25100
 20105  0115F0                     u25107:
 20106  0115F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 20107  0115F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 20108  0115F8  50EF               	movf	indf0,w,c
 20109  0115FA                     u25100:
 20110  0115FA  0900               	iorlw	0
 20111  0115FC  A4D8               	btfss	status,2,c
 20112  0115FE  D7E3               	goto	l1559
 20113  011600                     u25110:
 20114                           
 20115                           ;doprnt.c: 753: if(prec && prec < len)
 20116                           
 20117                           ;doprnt.c: 750: dostring:
 20118  011600  0101               	movlb	1	; () banked
 20119  011602  51AF               	movf	printf@prec& (0+255),w,b
 20120  011604  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 20121  011606  B4D8               	btfsc	status,2,c
 20122  011608  D00A               	goto	l1562
 20123                           
 20124                           ; BSR set to: 1
 20125  01160A  5199               	movf	printf@len& (0+255),w,b
 20126  01160C  5DAF               	subwf	printf@prec& (0+255),w,b
 20127  01160E  519A               	movf	(printf@len+1)& (0+255),w,b
 20128  011610  59B0               	subwfb	(printf@prec+1)& (0+255),w,b
 20129  011612  B0D8               	btfsc	status,0,c
 20130  011614  D004               	goto	l1562
 20131                           
 20132                           ; BSR set to: 1
 20133                           ;doprnt.c: 754: len = prec;
 20134  011616  C1AF  F199         	movff	printf@prec,printf@len
 20135  01161A  C1B0  F19A         	movff	printf@prec+1,printf@len+1
 20136  01161E                     l1562:
 20137                           
 20138                           ; BSR set to: 1
 20139                           ;doprnt.c: 757: if(width > len)
 20140                           
 20141                           ; BSR set to: 1
 20142  01161E  51AD               	movf	printf@width& (0+255),w,b
 20143  011620  5D99               	subwf	printf@len& (0+255),w,b
 20144  011622  51AE               	movf	(printf@width+1)& (0+255),w,b
 20145  011624  599A               	subwfb	(printf@len+1)& (0+255),w,b
 20146  011626  B0D8               	btfsc	status,0,c
 20147  011628  D005               	goto	l1563
 20148                           
 20149                           ; BSR set to: 1
 20150                           ;doprnt.c: 758: width -= len;
 20151  01162A  5199               	movf	printf@len& (0+255),w,b
 20152  01162C  5FAD               	subwf	printf@width& (0+255),f,b
 20153  01162E  519A               	movf	(printf@len+1)& (0+255),w,b
 20154  011630  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 20155  011632  D008               	goto	l1565
 20156  011634                     l1563:
 20157                           
 20158                           ; BSR set to: 1
 20159                           ;doprnt.c: 759: else
 20160                           ;doprnt.c: 760: width = 0;
 20161                           
 20162                           ; BSR set to: 1
 20163  011634  0E00               	movlw	0
 20164  011636  6FAE               	movwf	(printf@width+1)& (0+255),b
 20165  011638  0E00               	movlw	0
 20166  01163A  6FAD               	movwf	printf@width& (0+255),b
 20167                           
 20168                           ; BSR set to: 1
 20169                           ;doprnt.c: 764: while(width--)
 20170  01163C  D003               	goto	l1565
 20171  01163E                     l19012:
 20172                           
 20173                           ; BSR set to: 1
 20174                           ;doprnt.c: 765: (putch(' ') );
 20175  01163E  0E20               	movlw	32
 20176  011640  ECC6  F0C9         	call	_putch
 20177  011644                     l1565:
 20178  011644  0101               	movlb	1	; () banked
 20179  011646  07AD               	decf	printf@width& (0+255),f,b
 20180  011648  A0D8               	btfss	status,0,c
 20181  01164A  07AE               	decf	(printf@width+1)& (0+255),f,b
 20182  01164C  29AD               	incf	printf@width& (0+255),w,b
 20183  01164E  E1F7               	bnz	l19012
 20184  011650  29AE               	incf	(printf@width+1)& (0+255),w,b
 20185  011652  B4D8               	btfsc	status,2,c
 20186  011654  D017               	goto	l1568
 20187  011656  D7F3               	goto	l1566
 20188  011658                     l19016:
 20189                           
 20190                           ; BSR set to: 1
 20191                           ;doprnt.c: 768: (putch(*cp++) );
 20192  011658  C197  FFF6         	movff	printf@cp,tblptrl
 20193  01165C  C198  FFF7         	movff	printf@cp+1,tblptrh
 20194  011660  0E00               	movlw	low (__mediumconst shr (0+16))
 20195  011662  6EF8               	movwf	tblptru,c
 20196  011664  0E0D               	movlw	(high __ramtop+-1)
 20197  011666  64F7               	cpfsgt	tblptrh,c
 20198  011668  D003               	bra	u25167
 20199  01166A  0008               	tblrd		*
 20200  01166C  50F5               	movf	tablat,w,c
 20201  01166E  D005               	bra	u25160
 20202  011670                     u25167:
 20203  011670  CFF6 FFE9          	movff	tblptrl,fsr0l
 20204  011674  CFF7 FFEA          	movff	tblptrh,fsr0h
 20205  011678  50EF               	movf	indf0,w,c
 20206  01167A                     u25160:
 20207  01167A  ECC6  F0C9         	call	_putch
 20208  01167E  0101               	movlb	1	; () banked
 20209  011680  4B97               	infsnz	printf@cp& (0+255),f,b
 20210  011682  2B98               	incf	(printf@cp+1)& (0+255),f,b
 20211  011684                     l1568:
 20212                           
 20213                           ; BSR set to: 1
 20214                           
 20215                           ; BSR set to: 1
 20216  011684  0799               	decf	printf@len& (0+255),f,b
 20217  011686  A0D8               	btfss	status,0,c
 20218  011688  079A               	decf	(printf@len+1)& (0+255),f,b
 20219  01168A  2999               	incf	printf@len& (0+255),w,b
 20220  01168C  E1E5               	bnz	l19016
 20221  01168E  299A               	incf	(printf@len+1)& (0+255),w,b
 20222  011690  B4D8               	btfsc	status,2,c
 20223  011692  EF97  F090         	goto	u25720
 20224  011696  D7E0               	goto	l1569
 20225  011698                     
 20226                           ; BSR set to: 1
 20227                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20228                           
 20229                           ; BSR set to: 1
 20230  011698  C19B  FFD9         	movff	printf@ap,fsr2l
 20231  01169C  C19C  FFDA         	movff	printf@ap+1,fsr2h
 20232  0116A0  50DF               	movf	indf2,w,c
 20233  0116A2  6FB1               	movwf	printf@c& (0+255),b
 20234                           
 20235                           ; BSR set to: 1
 20236  0116A4  0E02               	movlw	2
 20237  0116A6  279B               	addwf	printf@ap& (0+255),f,b
 20238  0116A8  0E00               	movlw	0
 20239  0116AA  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 20240  0116AC                     
 20241                           ; BSR set to: 1
 20242                           ;doprnt.c: 805: cp = (char *)&c;
 20243                           
 20244                           ; BSR set to: 1
 20245  0116AC  0EB1               	movlw	low printf@c
 20246  0116AE  6F97               	movwf	printf@cp& (0+255),b
 20247  0116B0  0E01               	movlw	high printf@c
 20248  0116B2  6F98               	movwf	(printf@cp+1)& (0+255),b
 20249                           
 20250                           ; BSR set to: 1
 20251                           ;doprnt.c: 806: len = 1;
 20252  0116B4  0E00               	movlw	0
 20253  0116B6  6F9A               	movwf	(printf@len+1)& (0+255),b
 20254  0116B8  0E01               	movlw	1
 20255  0116BA  6F99               	movwf	printf@len& (0+255),b
 20256                           
 20257                           ;doprnt.c: 807: goto dostring;
 20258  0116BC  D7A1               	goto	u25110
 20259  0116BE                     
 20260                           ; BSR set to: 1
 20261                           ;doprnt.c: 818: flag |= 0xC0;
 20262                           
 20263                           ; BSR set to: 1
 20264  0116BE  0EC0               	movlw	192
 20265  0116C0  13AB               	iorwf	printf@flag& (0+255),f,b
 20266                           
 20267                           ; BSR set to: 1
 20268                           ;doprnt.c: 822: }
 20269                           
 20270                           ;doprnt.c: 819: break;
 20271  0116C2  D037               	goto	l1551
 20272  0116C4                     l1547:
 20273                           
 20274                           ; BSR set to: 1
 20275  0116C4  0101               	movlb	1	; () banked
 20276  0116C6  5182               	movf	printf@f& (0+255),w,b
 20277  0116C8  6F8C               	movwf	??_printf& (0+255),b
 20278  0116CA  5183               	movf	(printf@f+1)& (0+255),w,b
 20279  0116CC  6F8D               	movwf	(??_printf+1)& (0+255),b
 20280  0116CE  4B82               	infsnz	printf@f& (0+255),f,b
 20281  0116D0  2B83               	incf	(printf@f+1)& (0+255),f,b
 20282  0116D2  C18C  FFF6         	movff	??_printf,tblptrl
 20283  0116D6  C18D  FFF7         	movff	??_printf+1,tblptrh
 20284  0116DA  0E00               	movlw	low (__mediumconst shr (0+16))
 20285  0116DC  6EF8               	movwf	tblptru,c
 20286  0116DE  0E0D               	movlw	(high __ramtop+-1)
 20287  0116E0  64F7               	cpfsgt	tblptrh,c
 20288  0116E2  D003               	bra	u25187
 20289  0116E4  0008               	tblrd		*
 20290  0116E6  50F5               	movf	tablat,w,c
 20291  0116E8  D005               	bra	u25180
 20292  0116EA                     u25187:
 20293  0116EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 20294  0116EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 20295  0116F2  50EF               	movf	indf0,w,c
 20296  0116F4                     u25180:
 20297  0116F4  0101               	movlb	1	; () banked
 20298  0116F6  6FB1               	movwf	printf@c& (0+255),b
 20299  0116F8  51B1               	movf	printf@c& (0+255),w,b
 20300                           
 20301                           ; Switch size 1, requested type "space"
 20302                           ; Number of cases is 9, Range of values is 0 to 120
 20303                           ; switch strategies available:
 20304                           ; Name         Instructions Cycles
 20305                           ; simple_byte           28    15 (average)
 20306                           ;	Chosen strategy is simple_byte
 20307  0116FA  0A00               	xorlw	0	; case 0
 20308  0116FC  B4D8               	btfsc	status,2,c
 20309  0116FE  0012               	return	
 20310  011700  0A58               	xorlw	88	; case 88
 20311  011702  B4D8               	btfsc	status,2,c
 20312  011704  D745               	goto	l1554
 20313  011706  0A3B               	xorlw	59	; case 99
 20314  011708  B4D8               	btfsc	status,2,c
 20315  01170A  D7C6               	goto	l1571
 20316  01170C  0A07               	xorlw	7	; case 100
 20317  01170E  B4D8               	btfsc	status,2,c
 20318  011710  D010               	goto	l1551
 20319  011712  0A02               	xorlw	2	; case 102
 20320  011714  B4D8               	btfsc	status,2,c
 20321  011716  D73A               	goto	l1550
 20322  011718  0A0F               	xorlw	15	; case 105
 20323  01171A  B4D8               	btfsc	status,2,c
 20324  01171C  D00A               	goto	l1551
 20325  01171E  0A1A               	xorlw	26	; case 115
 20326  011720  B4D8               	btfsc	status,2,c
 20327  011722  D738               	goto	l1556
 20328  011724  0A06               	xorlw	6	; case 117
 20329  011726  B4D8               	btfsc	status,2,c
 20330  011728  D7CA               	goto	l1573
 20331  01172A  0A0D               	xorlw	13	; case 120
 20332  01172C  B4D8               	btfsc	status,2,c
 20333  01172E  D730               	goto	l1554
 20334  011730  D7BD               	goto	l1572
 20335  011732                     l1551:
 20336                           
 20337                           ; BSR set to: 1
 20338                           ;doprnt.c: 825: if(flag & (0x700)) {
 20339                           
 20340                           ; BSR set to: 1
 20341  011732  0E07               	movlw	7
 20342  011734  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 20343  011736  B4D8               	btfsc	status,2,c
 20344  011738  D33D               	goto	l1574
 20345                           
 20346                           ; BSR set to: 1
 20347                           ;doprnt.c: 827: if(flag & 0x1000)
 20348  01173A  A9AC               	btfss	(printf@flag+1)& (0+255),4,b
 20349  01173C  D004               	goto	l1575
 20350                           
 20351                           ; BSR set to: 1
 20352                           ;doprnt.c: 829: prec = 6;
 20353  01173E  0E00               	movlw	0
 20354  011740  6FB0               	movwf	(printf@prec+1)& (0+255),b
 20355  011742  0E06               	movlw	6
 20356  011744  6FAF               	movwf	printf@prec& (0+255),b
 20357  011746                     l1575:
 20358                           
 20359                           ; BSR set to: 1
 20360                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 20361                           
 20362                           ; BSR set to: 1
 20363  011746  C19B  FFD9         	movff	printf@ap,fsr2l
 20364  01174A  C19C  FFDA         	movff	printf@ap+1,fsr2h
 20365  01174E  CFDE F1A3          	movff	postinc2,printf@fval
 20366  011752  CFDE F1A4          	movff	postinc2,printf@fval+1
 20367  011756  CFDE F1A5          	movff	postinc2,printf@fval+2
 20368  01175A  CFDE F1A6          	movff	postinc2,printf@fval+3
 20369                           
 20370                           ; BSR set to: 1
 20371  01175E  0E04               	movlw	4
 20372  011760  279B               	addwf	printf@ap& (0+255),f,b
 20373  011762  0E00               	movlw	0
 20374  011764  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 20375                           
 20376                           ; BSR set to: 1
 20377                           ;doprnt.c: 831: if(fval < 0.0) {
 20378  011766  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 20379  011768  D015               	goto	l1576
 20380                           
 20381                           ; BSR set to: 1
 20382                           ;doprnt.c: 832: fval = -fval;
 20383  01176A  C1A3  F125         	movff	printf@fval,___flneg@f1
 20384  01176E  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 20385  011772  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 20386  011776  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 20387  01177A  EC09  F0C8         	call	___flneg	;wreg free
 20388  01177E  C125  F1A3         	movff	?___flneg,printf@fval
 20389  011782  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 20390  011786  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 20391  01178A  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 20392                           
 20393                           ;doprnt.c: 833: flag |= 0x03;
 20394  01178E  0E03               	movlw	3
 20395  011790  0101               	movlb	1	; () banked
 20396  011792  13AB               	iorwf	printf@flag& (0+255),f,b
 20397  011794                     l1576:
 20398                           
 20399                           ; BSR set to: 1
 20400                           ;doprnt.c: 834: }
 20401                           ;doprnt.c: 835: exp = 0;
 20402                           
 20403                           ; BSR set to: 1
 20404  011794  0E00               	movlw	0
 20405  011796  6FA2               	movwf	(printf@exp+1)& (0+255),b
 20406  011798  0E00               	movlw	0
 20407  01179A  6FA1               	movwf	printf@exp& (0+255),b
 20408                           
 20409                           ; BSR set to: 1
 20410                           ;doprnt.c: 836: if( fval!=0) {
 20411  01179C  51A3               	movf	printf@fval& (0+255),w,b
 20412  01179E  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 20413  0117A0  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 20414  0117A2  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 20415  0117A4  B4D8               	btfsc	status,2,c
 20416  0117A6  D084               	goto	l1581
 20417                           
 20418                           ; BSR set to: 1
 20419                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 20420  0117A8  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 20421  0117AA  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 20422  0117AC  0F82               	addlw	130
 20423  0117AE  6FA1               	movwf	printf@exp& (0+255),b
 20424  0117B0  6BA2               	clrf	(printf@exp+1)& (0+255),b
 20425  0117B2  0EFF               	movlw	255
 20426  0117B4  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 20427                           
 20428                           ; BSR set to: 1
 20429                           ;doprnt.c: 838: exp--;
 20430  0117B6  07A1               	decf	printf@exp& (0+255),f,b
 20431  0117B8  A0D8               	btfss	status,0,c
 20432  0117BA  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20433                           
 20434                           ; BSR set to: 1
 20435                           ;doprnt.c: 839: exp *= 3;
 20436  0117BC  C1A1  F117         	movff	printf@exp,___wmul@multiplier
 20437  0117C0  C1A2  F118         	movff	printf@exp+1,___wmul@multiplier+1
 20438  0117C4  0E00               	movlw	0
 20439  0117C6  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20440  0117C8  0E03               	movlw	3
 20441  0117CA  6F19               	movwf	___wmul@multiplicand& (0+255),b
 20442  0117CC  EC4D  F0C8         	call	___wmul	;wreg free
 20443  0117D0  C117  F1A1         	movff	?___wmul,printf@exp
 20444  0117D4  C118  F1A2         	movff	?___wmul+1,printf@exp+1
 20445                           
 20446                           ;doprnt.c: 840: exp /= 10;
 20447  0117D8  C1A1  F11D         	movff	printf@exp,___awdiv@dividend
 20448  0117DC  C1A2  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 20449  0117E0  0E00               	movlw	0
 20450  0117E2  0101               	movlb	1	; () banked
 20451  0117E4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 20452  0117E6  0E0A               	movlw	10
 20453  0117E8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 20454  0117EA  EC29  F0C1         	call	___awdiv	;wreg free
 20455  0117EE  C11D  F1A1         	movff	?___awdiv,printf@exp
 20456  0117F2  C11E  F1A2         	movff	?___awdiv+1,printf@exp+1
 20457                           
 20458                           ;doprnt.c: 841: if(exp < 0)
 20459  0117F6  0101               	movlb	1	; () banked
 20460  0117F8  AFA2               	btfss	(printf@exp+1)& (0+255),7,b
 20461  0117FA  D003               	goto	l1578
 20462                           
 20463                           ; BSR set to: 1
 20464                           ;doprnt.c: 842: exp--;
 20465  0117FC  07A1               	decf	printf@exp& (0+255),f,b
 20466  0117FE  A0D8               	btfss	status,0,c
 20467  011800  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20468  011802                     l1578:
 20469                           
 20470                           ; BSR set to: 1
 20471                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 20472                           
 20473                           ; BSR set to: 1
 20474  011802  51A1               	movf	printf@exp& (0+255),w,b
 20475  011804  0800               	sublw	0
 20476  011806  EC88  F09C         	call	_scale
 20477  01180A  C16F  F19D         	movff	?_scale,printf@tmpval
 20478  01180E  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 20479  011812  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 20480  011816  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 20481                           
 20482                           ;doprnt.c: 847: tmpval.integ *= fval;
 20483  01181A  C19D  F156         	movff	printf@tmpval,___flmul@b
 20484  01181E  C19E  F157         	movff	printf@tmpval+1,___flmul@b+1
 20485  011822  C19F  F158         	movff	printf@tmpval+2,___flmul@b+2
 20486  011826  C1A0  F159         	movff	printf@tmpval+3,___flmul@b+3
 20487  01182A  C1A3  F15A         	movff	printf@fval,___flmul@a
 20488  01182E  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 20489  011832  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 20490  011836  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 20491  01183A  ECCE  F0A2         	call	___flmul	;wreg free
 20492  01183E  C156  F19D         	movff	?___flmul,printf@tmpval
 20493  011842  C157  F19E         	movff	?___flmul+1,printf@tmpval+1
 20494  011846  C158  F19F         	movff	?___flmul+2,printf@tmpval+2
 20495  01184A  C159  F1A0         	movff	?___flmul+3,printf@tmpval+3
 20496                           
 20497                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 20498  01184E  C19D  F117         	movff	printf@tmpval,___flge@ff1
 20499  011852  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 20500  011856  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 20501  01185A  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 20502  01185E  0E00               	movlw	0
 20503  011860  0101               	movlb	1	; () banked
 20504  011862  6F1B               	movwf	___flge@ff2& (0+255),b
 20505  011864  0E00               	movlw	0
 20506  011866  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20507  011868  0E80               	movlw	128
 20508  01186A  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20509  01186C  0E3F               	movlw	63
 20510  01186E  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20511  011870  ECE2  F0BA         	call	___flge	;wreg free
 20512  011874  0101               	movlb	1	; () banked
 20513  011876  B0D8               	btfsc	status,0,c
 20514  011878  D004               	goto	l1579
 20515                           
 20516                           ; BSR set to: 1
 20517                           ;doprnt.c: 849: exp--;
 20518  01187A  07A1               	decf	printf@exp& (0+255),f,b
 20519  01187C  A0D8               	btfss	status,0,c
 20520  01187E  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20521  011880  D017               	goto	l1581
 20522  011882                     l1579:
 20523                           
 20524                           ; BSR set to: 1
 20525                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 20526                           
 20527                           ; BSR set to: 1
 20528  011882  C19D  F117         	movff	printf@tmpval,___flge@ff1
 20529  011886  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 20530  01188A  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 20531  01188E  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 20532  011892  0E00               	movlw	0
 20533  011894  6F1B               	movwf	___flge@ff2& (0+255),b
 20534  011896  0E00               	movlw	0
 20535  011898  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20536  01189A  0E20               	movlw	32
 20537  01189C  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20538  01189E  0E41               	movlw	65
 20539  0118A0  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20540  0118A2  ECE2  F0BA         	call	___flge	;wreg free
 20541  0118A6  0101               	movlb	1	; () banked
 20542  0118A8  A0D8               	btfss	status,0,c
 20543  0118AA  D002               	goto	l1581
 20544                           
 20545                           ; BSR set to: 1
 20546                           ;doprnt.c: 851: exp++;
 20547  0118AC  4BA1               	infsnz	printf@exp& (0+255),f,b
 20548  0118AE  2BA2               	incf	(printf@exp+1)& (0+255),f,b
 20549  0118B0                     l1581:
 20550                           
 20551                           ; BSR set to: 1
 20552                           ;doprnt.c: 852: }
 20553                           ;doprnt.c: 1112: if(prec <= 12)
 20554                           
 20555                           ; BSR set to: 1
 20556                           
 20557                           ; BSR set to: 1
 20558                           
 20559                           ; BSR set to: 1
 20560  0118B0  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 20561  0118B2  D006               	goto	u25260
 20562  0118B4  51B0               	movf	(printf@prec+1)& (0+255),w,b
 20563  0118B6  E121               	bnz	l19084
 20564  0118B8  0E0D               	movlw	13
 20565  0118BA  5DAF               	subwf	printf@prec& (0+255),w,b
 20566  0118BC  B0D8               	btfsc	status,0,c
 20567  0118BE  D01D               	goto	l1582
 20568  0118C0                     u25260:
 20569                           
 20570                           ; BSR set to: 1
 20571                           ;doprnt.c: 1113: fval += fround(prec);
 20572  0118C0  C1A3  F129         	movff	printf@fval,___fladd@b
 20573  0118C4  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 20574  0118C8  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 20575  0118CC  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 20576  0118D0  51AF               	movf	printf@prec& (0+255),w,b
 20577  0118D2  ECC0  F0AD         	call	_fround
 20578  0118D6  C16F  F12D         	movff	?_fround,___fladd@a
 20579  0118DA  C170  F12E         	movff	?_fround+1,___fladd@a+1
 20580  0118DE  C171  F12F         	movff	?_fround+2,___fladd@a+2
 20581  0118E2  C172  F130         	movff	?_fround+3,___fladd@a+3
 20582  0118E6  EC1F  F0A6         	call	___fladd	;wreg free
 20583  0118EA  C129  F1A3         	movff	?___fladd,printf@fval
 20584  0118EE  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 20585  0118F2  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 20586  0118F6  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 20587  0118FA                     l1582:
 20588  0118FA                     l19084:
 20589                           
 20590                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 20591  0118FA  0101               	movlb	1	; () banked
 20592  0118FC  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 20593  0118FE  D006               	goto	u25270
 20594  011900  51A2               	movf	(printf@exp+1)& (0+255),w,b
 20595  011902  E122               	bnz	l19092
 20596  011904  0E0A               	movlw	10
 20597  011906  5DA1               	subwf	printf@exp& (0+255),w,b
 20598  011908  B0D8               	btfsc	status,0,c
 20599  01190A  D01E               	goto	u25300
 20600  01190C                     u25270:
 20601                           
 20602                           ; BSR set to: 1
 20603  01190C  51A3               	movf	printf@fval& (0+255),w,b
 20604  01190E  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 20605  011910  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 20606  011912  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 20607  011914  B4D8               	btfsc	status,2,c
 20608  011916  D062               	goto	l1583
 20609                           
 20610                           ; BSR set to: 1
 20611  011918  C1A3  F178         	movff	printf@fval,___fltol@f1
 20612  01191C  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 20613  011920  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 20614  011924  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 20615  011928  EC91  F0BD         	call	___fltol	;wreg free
 20616  01192C  0101               	movlb	1	; () banked
 20617  01192E  5178               	movf	?___fltol& (0+255),w,b
 20618  011930  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 20619  011932  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 20620  011934  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 20621  011936  B4D8               	btfsc	status,2,c
 20622                           
 20623                           ; BSR set to: 1
 20624  011938  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 20625  01193A  D050               	goto	l1583
 20626  01193C  51A2               	movf	(printf@exp+1)& (0+255),w,b
 20627  01193E  E104               	bnz	l19092
 20628  011940  0E02               	movlw	2
 20629  011942  5DA1               	subwf	printf@exp& (0+255),w,b
 20630  011944  A0D8               	btfss	status,0,c
 20631  011946  D04A               	goto	l1583
 20632  011948                     u25300:
 20633  011948                     l19092:
 20634                           
 20635                           ; BSR set to: 1
 20636                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 20637  011948  C19D  F117         	movff	printf@tmpval,___flge@ff1
 20638  01194C  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 20639  011950  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 20640  011954  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 20641  011958  0E5F               	movlw	95
 20642  01195A  6F1B               	movwf	___flge@ff2& (0+255),b
 20643  01195C  0E70               	movlw	112
 20644  01195E  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20645  011960  0E89               	movlw	137
 20646  011962  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20647  011964  0E40               	movlw	64
 20648  011966  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20649  011968  ECE2  F0BA         	call	___flge	;wreg free
 20650  01196C  0101               	movlb	1	; () banked
 20651  01196E  B0D8               	btfsc	status,0,c
 20652  011970  D002               	goto	l1586
 20653                           
 20654                           ; BSR set to: 1
 20655                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 20656  011972  0EF7               	movlw	247
 20657  011974  D001               	goto	L3
 20658  011976                     l1586:
 20659                           
 20660                           ; BSR set to: 1
 20661                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 20662                           
 20663                           ; BSR set to: 1
 20664  011976  0EF8               	movlw	248
 20665  011978                     L3:
 20666  011978  27A1               	addwf	printf@exp& (0+255),f,b
 20667  01197A  0EFF               	movlw	255
 20668  01197C  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 20669                           
 20670                           ; BSR set to: 1
 20671                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 20672                           
 20673                           ; BSR set to: 1
 20674  01197E  51A1               	movf	printf@exp& (0+255),w,b
 20675  011980  EC88  F09C         	call	_scale
 20676  011984  C16F  F19D         	movff	?_scale,printf@tmpval
 20677  011988  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 20678  01198C  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 20679  011990  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 20680  011994  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 20681  011998  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 20682  01199C  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 20683  0119A0  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 20684  0119A4  C19D  F11B         	movff	printf@tmpval,__div_to_l_@f2
 20685  0119A8  C19E  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 20686  0119AC  C19F  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 20687  0119B0  C1A0  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 20688  0119B4  EC27  F0B9         	call	__div_to_l_	;wreg free
 20689  0119B8  C117  F1A7         	movff	?__div_to_l_,printf@val
 20690  0119BC  C118  F1A8         	movff	?__div_to_l_+1,printf@val+1
 20691  0119C0  C119  F1A9         	movff	?__div_to_l_+2,printf@val+2
 20692  0119C4  C11A  F1AA         	movff	?__div_to_l_+3,printf@val+3
 20693                           
 20694                           ;doprnt.c: 1129: fval = 0.0;
 20695  0119C8  0E00               	movlw	0
 20696  0119CA  0101               	movlb	1	; () banked
 20697  0119CC  6FA3               	movwf	printf@fval& (0+255),b
 20698  0119CE  0E00               	movlw	0
 20699  0119D0  6FA4               	movwf	(printf@fval+1)& (0+255),b
 20700  0119D2  0E00               	movlw	0
 20701  0119D4  6FA5               	movwf	(printf@fval+2)& (0+255),b
 20702  0119D6  0E00               	movlw	0
 20703  0119D8  6FA6               	movwf	(printf@fval+3)& (0+255),b
 20704                           
 20705                           ;doprnt.c: 1130: } else {
 20706  0119DA  D03C               	goto	l1592
 20707  0119DC                     l1583:
 20708                           
 20709                           ; BSR set to: 1
 20710                           ;doprnt.c: 1131: val = (unsigned long)fval;
 20711                           
 20712                           ; BSR set to: 1
 20713  0119DC  C1A3  F178         	movff	printf@fval,___fltol@f1
 20714  0119E0  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 20715  0119E4  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 20716  0119E8  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 20717  0119EC  EC91  F0BD         	call	___fltol	;wreg free
 20718  0119F0  C178  F1A7         	movff	?___fltol,printf@val
 20719  0119F4  C179  F1A8         	movff	?___fltol+1,printf@val+1
 20720  0119F8  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 20721  0119FC  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 20722                           
 20723                           ;doprnt.c: 1132: fval -= (double)val;
 20724  011A00  C1A3  F13D         	movff	printf@fval,___flsub@b
 20725  011A04  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 20726  011A08  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 20727  011A0C  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 20728  011A10  C1A7  F117         	movff	printf@val,___xxtofl@val
 20729  011A14  C1A8  F118         	movff	printf@val+1,___xxtofl@val+1
 20730  011A18  C1A9  F119         	movff	printf@val+2,___xxtofl@val+2
 20731  011A1C  C1AA  F11A         	movff	printf@val+3,___xxtofl@val+3
 20732  011A20  0E00               	movlw	0
 20733  011A22  ECA2  F0B6         	call	___xxtofl
 20734  011A26  C117  F141         	movff	?___xxtofl,___flsub@a
 20735  011A2A  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 20736  011A2E  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 20737  011A32  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 20738  011A36  EC33  F0C6         	call	___flsub	;wreg free
 20739  011A3A  C13D  F1A3         	movff	?___flsub,printf@fval
 20740  011A3E  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 20741  011A42  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 20742  011A46  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 20743                           
 20744                           ;doprnt.c: 1133: exp = 0;
 20745  011A4A  0E00               	movlw	0
 20746  011A4C  0101               	movlb	1	; () banked
 20747  011A4E  6FA2               	movwf	(printf@exp+1)& (0+255),b
 20748  011A50  0E00               	movlw	0
 20749  011A52  6FA1               	movwf	printf@exp& (0+255),b
 20750  011A54                     l1592:
 20751                           
 20752                           ; BSR set to: 1
 20753                           ;doprnt.c: 1134: }
 20754                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 20755                           
 20756                           ; BSR set to: 1
 20757  011A54  0E01               	movlw	1
 20758  011A56  6FB1               	movwf	printf@c& (0+255),b
 20759  011A58                     l19112:
 20760                           
 20761                           ; BSR set to: 1
 20762  011A58  0E0A               	movlw	10
 20763  011A5A  19B1               	xorwf	printf@c& (0+255),w,b
 20764  011A5C  B4D8               	btfsc	status,2,c
 20765  011A5E  D01B               	goto	u25340
 20766                           
 20767                           ; BSR set to: 1
 20768                           ;doprnt.c: 1137: if(val < dpowers[c])
 20769                           
 20770                           ; BSR set to: 1
 20771                           
 20772                           ; BSR set to: 1
 20773  011A60  51B1               	movf	printf@c& (0+255),w,b
 20774  011A62  0D04               	mullw	4
 20775  011A64  0EAB               	movlw	low _dpowers
 20776  011A66  24F3               	addwf	prodl,w,c
 20777  011A68  6EF6               	movwf	tblptrl,c
 20778  011A6A  0ED8               	movlw	high _dpowers
 20779  011A6C  20F4               	addwfc	prodh,w,c
 20780  011A6E  6EF7               	movwf	tblptrh,c
 20781  011A70                     	if	1	;There are 3 active tblptr bytes
 20782  011A70  6AF8               	clrf	tblptru,c
 20783  011A72  0E00               	movlw	low (__mediumconst shr (0+16))
 20784  011A74  22F8               	addwfc	tblptru,f,c
 20785  011A76                     	endif
 20786  011A76  0009               	tblrd		*+
 20787  011A78  50F5               	movf	tablat,w,c
 20788  011A7A  5DA7               	subwf	printf@val& (0+255),w,b
 20789  011A7C  0009               	tblrd		*+
 20790  011A7E  50F5               	movf	tablat,w,c
 20791  011A80  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 20792  011A82  0009               	tblrd		*+
 20793  011A84  50F5               	movf	tablat,w,c
 20794  011A86  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 20795  011A88  0009               	tblrd		*+
 20796  011A8A  50F5               	movf	tablat,w,c
 20797  011A8C  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 20798  011A8E  A0D8               	btfss	status,0,c
 20799  011A90  D002               	goto	u25340
 20800                           
 20801                           ; BSR set to: 1
 20802                           
 20803                           ; BSR set to: 1
 20804                           
 20805                           ; BSR set to: 1
 20806                           ;doprnt.c: 1138: break;
 20807  011A92  2BB1               	incf	printf@c& (0+255),f,b
 20808  011A94  D7E1               	goto	l19112
 20809  011A96                     u25340:
 20810                           
 20811                           ; BSR set to: 1
 20812                           ;doprnt.c: 1142: width -= prec + c + exp;
 20813                           
 20814                           ; BSR set to: 1
 20815  011A96  C1B1  F18C         	movff	printf@c,??_printf
 20816  011A9A  6B8D               	clrf	(??_printf+1)& (0+255),b
 20817  011A9C  BF8C               	btfsc	??_printf& (0+255),7,b
 20818  011A9E  078D               	decf	(??_printf+1)& (0+255),f,b
 20819  011AA0  51AF               	movf	printf@prec& (0+255),w,b
 20820  011AA2  278C               	addwf	??_printf& (0+255),f,b
 20821  011AA4  51B0               	movf	(printf@prec+1)& (0+255),w,b
 20822  011AA6  238D               	addwfc	(??_printf+1)& (0+255),f,b
 20823  011AA8  51A1               	movf	printf@exp& (0+255),w,b
 20824  011AAA  278C               	addwf	??_printf& (0+255),f,b
 20825  011AAC  51A2               	movf	(printf@exp+1)& (0+255),w,b
 20826  011AAE  238D               	addwfc	(??_printf+1)& (0+255),f,b
 20827  011AB0  518C               	movf	??_printf& (0+255),w,b
 20828  011AB2  5FAD               	subwf	printf@width& (0+255),f,b
 20829  011AB4  518D               	movf	(??_printf+1)& (0+255),w,b
 20830  011AB6  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 20831                           
 20832                           ;doprnt.c: 1143: if(
 20833                           ;doprnt.c: 1147: prec)
 20834  011AB8  51AF               	movf	printf@prec& (0+255),w,b
 20835  011ABA  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 20836  011ABC  B4D8               	btfsc	status,2,c
 20837  011ABE  D003               	goto	l1596
 20838                           
 20839                           ; BSR set to: 1
 20840                           ;doprnt.c: 1148: width--;
 20841  011AC0  07AD               	decf	printf@width& (0+255),f,b
 20842  011AC2  A0D8               	btfss	status,0,c
 20843  011AC4  07AE               	decf	(printf@width+1)& (0+255),f,b
 20844  011AC6                     l1596:
 20845                           
 20846                           ; BSR set to: 1
 20847                           ;doprnt.c: 1149: if(flag & 0x03)
 20848                           
 20849                           ; BSR set to: 1
 20850  011AC6  0E03               	movlw	3
 20851  011AC8  15AB               	andwf	printf@flag& (0+255),w,b
 20852  011ACA  6F8C               	movwf	??_printf& (0+255),b
 20853  011ACC  0E00               	movlw	0
 20854  011ACE  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 20855  011AD0  6F8D               	movwf	(??_printf+1)& (0+255),b
 20856  011AD2  518C               	movf	??_printf& (0+255),w,b
 20857  011AD4  118D               	iorwf	(??_printf+1)& (0+255),w,b
 20858  011AD6  B4D8               	btfsc	status,2,c
 20859  011AD8  D003               	goto	l1597
 20860                           
 20861                           ; BSR set to: 1
 20862                           ;doprnt.c: 1150: width--;
 20863  011ADA  07AD               	decf	printf@width& (0+255),f,b
 20864  011ADC  A0D8               	btfss	status,0,c
 20865  011ADE  07AE               	decf	(printf@width+1)& (0+255),f,b
 20866  011AE0                     l1597:
 20867                           
 20868                           ; BSR set to: 1
 20869                           ;doprnt.c: 1153: if(flag & 0x04) {
 20870                           
 20871                           ; BSR set to: 1
 20872  011AE0  A5AB               	btfss	printf@flag& (0+255),2,b
 20873  011AE2  D025               	goto	l1604
 20874                           
 20875                           ; BSR set to: 1
 20876                           ;doprnt.c: 1157: if(flag & 0x03)
 20877  011AE4  0E03               	movlw	3
 20878  011AE6  15AB               	andwf	printf@flag& (0+255),w,b
 20879  011AE8  6F8C               	movwf	??_printf& (0+255),b
 20880  011AEA  0E00               	movlw	0
 20881  011AEC  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 20882  011AEE  6F8D               	movwf	(??_printf+1)& (0+255),b
 20883  011AF0  518C               	movf	??_printf& (0+255),w,b
 20884  011AF2  118D               	iorwf	(??_printf+1)& (0+255),w,b
 20885  011AF4  B4D8               	btfsc	status,2,c
 20886  011AF6  D00B               	goto	l1600
 20887                           
 20888                           ; BSR set to: 1
 20889                           ;doprnt.c: 1159: (putch('-') );
 20890  011AF8  0E2D               	movlw	45
 20891  011AFA  ECC6  F0C9         	call	_putch
 20892                           
 20893                           ;doprnt.c: 1168: while(width > 0) {
 20894  011AFE  D007               	goto	l1600
 20895  011B00                     l19138:
 20896                           
 20897                           ;doprnt.c: 1169: (putch('0') );
 20898  011B00  0E30               	movlw	48
 20899  011B02  ECC6  F0C9         	call	_putch
 20900                           
 20901                           ;doprnt.c: 1170: width--;
 20902  011B06  0101               	movlb	1	; () banked
 20903  011B08  07AD               	decf	printf@width& (0+255),f,b
 20904  011B0A  A0D8               	btfss	status,0,c
 20905  011B0C  07AE               	decf	(printf@width+1)& (0+255),f,b
 20906  011B0E                     l1600:
 20907                           
 20908                           ; BSR set to: 1
 20909  011B0E  0101               	movlb	1	; () banked
 20910  011B10  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 20911  011B12  D06C               	goto	l1608
 20912  011B14  51AE               	movf	(printf@width+1)& (0+255),w,b
 20913  011B16  E1F4               	bnz	l19138
 20914  011B18  05AD               	decf	printf@width& (0+255),w,b
 20915  011B1A  A0D8               	btfss	status,0,c
 20916  011B1C  D067               	goto	l1608
 20917  011B1E  D7F0               	goto	l1601
 20918  011B20                     l19144:
 20919                           
 20920                           ; BSR set to: 1
 20921                           ;doprnt.c: 1181: (putch(' ') );
 20922  011B20  0E20               	movlw	32
 20923  011B22  ECC6  F0C9         	call	_putch
 20924                           
 20925                           ;doprnt.c: 1182: width--;
 20926  011B26  0101               	movlb	1	; () banked
 20927  011B28  07AD               	decf	printf@width& (0+255),f,b
 20928  011B2A  A0D8               	btfss	status,0,c
 20929  011B2C  07AE               	decf	(printf@width+1)& (0+255),f,b
 20930  011B2E                     l1604:
 20931                           
 20932                           ; BSR set to: 1
 20933                           
 20934                           ; BSR set to: 1
 20935  011B2E  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 20936  011B30  D005               	goto	u25400
 20937  011B32  51AE               	movf	(printf@width+1)& (0+255),w,b
 20938  011B34  E1F5               	bnz	l19144
 20939  011B36  05AD               	decf	printf@width& (0+255),w,b
 20940  011B38  B0D8               	btfsc	status,0,c
 20941  011B3A  D7F2               	goto	l1605
 20942  011B3C                     u25400:
 20943                           
 20944                           ; BSR set to: 1
 20945                           ;doprnt.c: 1183: }
 20946                           ;doprnt.c: 1188: if(flag & 0x03)
 20947                           
 20948                           ; BSR set to: 1
 20949  011B3C  0E03               	movlw	3
 20950  011B3E  15AB               	andwf	printf@flag& (0+255),w,b
 20951  011B40  6F8C               	movwf	??_printf& (0+255),b
 20952  011B42  0E00               	movlw	0
 20953  011B44  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 20954  011B46  6F8D               	movwf	(??_printf+1)& (0+255),b
 20955  011B48  518C               	movf	??_printf& (0+255),w,b
 20956  011B4A  118D               	iorwf	(??_printf+1)& (0+255),w,b
 20957  011B4C  B4D8               	btfsc	status,2,c
 20958  011B4E  D04E               	goto	l1608
 20959                           
 20960                           ; BSR set to: 1
 20961                           ;doprnt.c: 1190: (putch('-') );
 20962  011B50  0E2D               	movlw	45
 20963  011B52  ECC6  F0C9         	call	_putch
 20964                           
 20965                           ;doprnt.c: 1195: }
 20966                           ;doprnt.c: 1196: while(c--) {
 20967  011B56  D04A               	goto	l1608
 20968  011B58                     
 20969                           ;doprnt.c: 1200: {
 20970                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 20971  011B58  C1A7  F117         	movff	printf@val,___lldiv@dividend
 20972  011B5C  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 20973  011B60  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 20974  011B64  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 20975  011B68  0101               	movlb	1	; () banked
 20976  011B6A  51B1               	movf	printf@c& (0+255),w,b
 20977  011B6C  0D04               	mullw	4
 20978  011B6E  0EAB               	movlw	low _dpowers
 20979  011B70  24F3               	addwf	prodl,w,c
 20980  011B72  6EF6               	movwf	tblptrl,c
 20981  011B74  0ED8               	movlw	high _dpowers
 20982  011B76  20F4               	addwfc	prodh,w,c
 20983  011B78  6EF7               	movwf	tblptrh,c
 20984  011B7A                     	if	1	;There are 3 active tblptr bytes
 20985  011B7A  6AF8               	clrf	tblptru,c
 20986  011B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 20987  011B7E  22F8               	addwfc	tblptru,f,c
 20988  011B80                     	endif
 20989  011B80  0009               	tblrd		*+
 20990  011B82  CFF5 F11B          	movff	tablat,___lldiv@divisor
 20991  011B86  0009               	tblrd		*+
 20992  011B88  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 20993  011B8C  0009               	tblrd		*+
 20994  011B8E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 20995  011B92  000A               	tblrd		*-
 20996  011B94  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 20997  011B98  EC6C  F0C1         	call	___lldiv	;wreg free
 20998  011B9C  C117  F19D         	movff	?___lldiv,printf@tmpval
 20999  011BA0  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 21000  011BA4  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 21001  011BA8  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 21002                           
 21003                           ;doprnt.c: 1202: tmpval.vd %= 10;
 21004  011BAC  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 21005  011BB0  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 21006  011BB4  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 21007  011BB8  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 21008  011BBC  0E0A               	movlw	10
 21009  011BBE  0101               	movlb	1	; () banked
 21010  011BC0  6F28               	movwf	___llmod@divisor& (0+255),b
 21011  011BC2  0E00               	movlw	0
 21012  011BC4  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 21013  011BC6  0E00               	movlw	0
 21014  011BC8  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 21015  011BCA  0E00               	movlw	0
 21016  011BCC  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 21017  011BCE  ECBD  F0C3         	call	___llmod	;wreg free
 21018  011BD2  C124  F19D         	movff	?___llmod,printf@tmpval
 21019  011BD6  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 21020  011BDA  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 21021  011BDE  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 21022                           
 21023                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 21024  011BE2  0101               	movlb	1	; () banked
 21025  011BE4  519D               	movf	printf@tmpval& (0+255),w,b
 21026  011BE6  0F30               	addlw	48
 21027  011BE8  ECC6  F0C9         	call	_putch
 21028  011BEC                     l1608:
 21029  011BEC  0101               	movlb	1	; () banked
 21030  011BEE  07B1               	decf	printf@c& (0+255),f,b
 21031  011BF0  29B1               	incf	printf@c& (0+255),w,b
 21032  011BF2  B4D8               	btfsc	status,2,c
 21033  011BF4  D008               	goto	l1611
 21034  011BF6  D7B0               	goto	l1609
 21035  011BF8                     l19162:
 21036                           
 21037                           ; BSR set to: 1
 21038                           ;doprnt.c: 1208: (putch('0') );
 21039  011BF8  0E30               	movlw	48
 21040  011BFA  ECC6  F0C9         	call	_putch
 21041                           
 21042                           ;doprnt.c: 1209: exp--;
 21043  011BFE  0101               	movlb	1	; () banked
 21044  011C00  07A1               	decf	printf@exp& (0+255),f,b
 21045  011C02  A0D8               	btfss	status,0,c
 21046  011C04  07A2               	decf	(printf@exp+1)& (0+255),f,b
 21047  011C06                     l1611:
 21048                           
 21049                           ; BSR set to: 1
 21050                           
 21051                           ; BSR set to: 1
 21052  011C06  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 21053  011C08  D005               	goto	u25430
 21054  011C0A  51A2               	movf	(printf@exp+1)& (0+255),w,b
 21055  011C0C  E1F5               	bnz	l19162
 21056  011C0E  05A1               	decf	printf@exp& (0+255),w,b
 21057  011C10  B0D8               	btfsc	status,0,c
 21058  011C12  D7F2               	goto	l1612
 21059  011C14                     u25430:
 21060                           
 21061                           ; BSR set to: 1
 21062                           ;doprnt.c: 1210: }
 21063                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 21064                           
 21065                           ; BSR set to: 1
 21066  011C14  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 21067  011C16  D009               	goto	l1614
 21068  011C18  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21069  011C1A  E104               	bnz	u25440
 21070  011C1C  0E09               	movlw	9
 21071  011C1E  5DAF               	subwf	printf@prec& (0+255),w,b
 21072  011C20  A0D8               	btfss	status,0,c
 21073  011C22  D003               	goto	l1614
 21074  011C24                     u25440:
 21075                           
 21076                           ; BSR set to: 1
 21077                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 21078  011C24  0E08               	movlw	8
 21079  011C26  6FB1               	movwf	printf@c& (0+255),b
 21080  011C28  D002               	goto	l1615
 21081  011C2A                     l1614:
 21082                           
 21083                           ; BSR set to: 1
 21084                           ;doprnt.c: 1213: else
 21085                           ;doprnt.c: 1214: c = prec;
 21086  011C2A  C1AF  F1B1         	movff	printf@prec,printf@c
 21087  011C2E                     l1615:
 21088                           
 21089                           ; BSR set to: 1
 21090                           ;doprnt.c: 1215: prec -= c;
 21091                           
 21092                           ; BSR set to: 1
 21093  011C2E  51B1               	movf	printf@c& (0+255),w,b
 21094  011C30  5FAF               	subwf	printf@prec& (0+255),f,b
 21095  011C32  0E00               	movlw	0
 21096  011C34  BFB1               	btfsc	printf@c& (0+255),7,b
 21097  011C36  0EFF               	movlw	255
 21098  011C38  5BB0               	subwfb	(printf@prec+1)& (0+255),f,b
 21099                           
 21100                           ; BSR set to: 1
 21101                           ;doprnt.c: 1219: if(c)
 21102  011C3A  51B1               	movf	printf@c& (0+255),w,b
 21103  011C3C  B4D8               	btfsc	status,2,c
 21104  011C3E  D003               	goto	l1616
 21105                           
 21106                           ; BSR set to: 1
 21107                           ;doprnt.c: 1221: (putch('.') );
 21108  011C40  0E2E               	movlw	46
 21109  011C42  ECC6  F0C9         	call	_putch
 21110  011C46                     l1616:
 21111                           
 21112                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 21113  011C46  0101               	movlb	1	; () banked
 21114  011C48  51B1               	movf	printf@c& (0+255),w,b
 21115  011C4A  EC88  F09C         	call	_scale
 21116  011C4E  C16F  F192         	movff	?_scale,_printf$4169
 21117  011C52  C170  F193         	movff	?_scale+1,_printf$4169+1
 21118  011C56  C171  F194         	movff	?_scale+2,_printf$4169+2
 21119  011C5A  C172  F195         	movff	?_scale+3,_printf$4169+3
 21120                           
 21121                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 21122  011C5E  C1A3  F15A         	movff	printf@fval,___flmul@a
 21123  011C62  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 21124  011C66  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 21125  011C6A  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 21126  011C6E  C192  F156         	movff	_printf$4169,___flmul@b
 21127  011C72  C193  F157         	movff	_printf$4169+1,___flmul@b+1
 21128  011C76  C194  F158         	movff	_printf$4169+2,___flmul@b+2
 21129  011C7A  C195  F159         	movff	_printf$4169+3,___flmul@b+3
 21130  011C7E  ECCE  F0A2         	call	___flmul	;wreg free
 21131  011C82  C156  F178         	movff	?___flmul,___fltol@f1
 21132  011C86  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 21133  011C8A  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 21134  011C8E  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 21135  011C92  EC91  F0BD         	call	___fltol	;wreg free
 21136  011C96  C178  F1A7         	movff	?___fltol,printf@val
 21137  011C9A  C179  F1A8         	movff	?___fltol+1,printf@val+1
 21138  011C9E  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 21139  011CA2  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 21140                           
 21141                           ;doprnt.c: 1228: while(c--) {
 21142  011CA6  D074               	goto	l1617
 21143  011CA8                     
 21144                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 21145  011CA8  C1A7  F117         	movff	printf@val,___lldiv@dividend
 21146  011CAC  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 21147  011CB0  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 21148  011CB4  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 21149  011CB8  0101               	movlb	1	; () banked
 21150  011CBA  51B1               	movf	printf@c& (0+255),w,b
 21151  011CBC  0D04               	mullw	4
 21152  011CBE  0EAB               	movlw	low _dpowers
 21153  011CC0  24F3               	addwf	prodl,w,c
 21154  011CC2  6EF6               	movwf	tblptrl,c
 21155  011CC4  0ED8               	movlw	high _dpowers
 21156  011CC6  20F4               	addwfc	prodh,w,c
 21157  011CC8  6EF7               	movwf	tblptrh,c
 21158  011CCA                     	if	1	;There are 3 active tblptr bytes
 21159  011CCA  6AF8               	clrf	tblptru,c
 21160  011CCC  0E00               	movlw	low (__mediumconst shr (0+16))
 21161  011CCE  22F8               	addwfc	tblptru,f,c
 21162  011CD0                     	endif
 21163  011CD0  0009               	tblrd		*+
 21164  011CD2  CFF5 F11B          	movff	tablat,___lldiv@divisor
 21165  011CD6  0009               	tblrd		*+
 21166  011CD8  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 21167  011CDC  0009               	tblrd		*+
 21168  011CDE  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 21169  011CE2  000A               	tblrd		*-
 21170  011CE4  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 21171  011CE8  EC6C  F0C1         	call	___lldiv	;wreg free
 21172  011CEC  C117  F19D         	movff	?___lldiv,printf@tmpval
 21173  011CF0  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 21174  011CF4  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 21175  011CF8  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 21176                           
 21177                           ;doprnt.c: 1230: tmpval.vd %= 10;
 21178  011CFC  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 21179  011D00  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 21180  011D04  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 21181  011D08  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 21182  011D0C  0E0A               	movlw	10
 21183  011D0E  0101               	movlb	1	; () banked
 21184  011D10  6F28               	movwf	___llmod@divisor& (0+255),b
 21185  011D12  0E00               	movlw	0
 21186  011D14  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 21187  011D16  0E00               	movlw	0
 21188  011D18  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 21189  011D1A  0E00               	movlw	0
 21190  011D1C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 21191  011D1E  ECBD  F0C3         	call	___llmod	;wreg free
 21192  011D22  C124  F19D         	movff	?___llmod,printf@tmpval
 21193  011D26  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 21194  011D2A  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 21195  011D2E  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 21196                           
 21197                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 21198  011D32  0101               	movlb	1	; () banked
 21199  011D34  519D               	movf	printf@tmpval& (0+255),w,b
 21200  011D36  0F30               	addlw	48
 21201  011D38  ECC6  F0C9         	call	_putch
 21202                           
 21203                           ;doprnt.c: 1232: val %= dpowers[c];
 21204  011D3C  C1A7  F124         	movff	printf@val,___llmod@dividend
 21205  011D40  C1A8  F125         	movff	printf@val+1,___llmod@dividend+1
 21206  011D44  C1A9  F126         	movff	printf@val+2,___llmod@dividend+2
 21207  011D48  C1AA  F127         	movff	printf@val+3,___llmod@dividend+3
 21208  011D4C  0101               	movlb	1	; () banked
 21209  011D4E  51B1               	movf	printf@c& (0+255),w,b
 21210  011D50  0D04               	mullw	4
 21211  011D52  0EAB               	movlw	low _dpowers
 21212  011D54  24F3               	addwf	prodl,w,c
 21213  011D56  6EF6               	movwf	tblptrl,c
 21214  011D58  0ED8               	movlw	high _dpowers
 21215  011D5A  20F4               	addwfc	prodh,w,c
 21216  011D5C  6EF7               	movwf	tblptrh,c
 21217  011D5E                     	if	1	;There are 3 active tblptr bytes
 21218  011D5E  6AF8               	clrf	tblptru,c
 21219  011D60  0E00               	movlw	low (__mediumconst shr (0+16))
 21220  011D62  22F8               	addwfc	tblptru,f,c
 21221  011D64                     	endif
 21222  011D64  0009               	tblrd		*+
 21223  011D66  CFF5 F128          	movff	tablat,___llmod@divisor
 21224  011D6A  0009               	tblrd		*+
 21225  011D6C  CFF5 F129          	movff	tablat,___llmod@divisor+1
 21226  011D70  0009               	tblrd		*+
 21227  011D72  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 21228  011D76  000A               	tblrd		*-
 21229  011D78  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 21230  011D7C  ECBD  F0C3         	call	___llmod	;wreg free
 21231  011D80  C124  F1A7         	movff	?___llmod,printf@val
 21232  011D84  C125  F1A8         	movff	?___llmod+1,printf@val+1
 21233  011D88  C126  F1A9         	movff	?___llmod+2,printf@val+2
 21234  011D8C  C127  F1AA         	movff	?___llmod+3,printf@val+3
 21235  011D90                     l1617:
 21236  011D90  0101               	movlb	1	; () banked
 21237  011D92  07B1               	decf	printf@c& (0+255),f,b
 21238  011D94  29B1               	incf	printf@c& (0+255),w,b
 21239  011D96  B4D8               	btfsc	status,2,c
 21240  011D98  D008               	goto	l1620
 21241  011D9A  D786               	goto	l1618
 21242  011D9C                     
 21243                           ; BSR set to: 1
 21244                           ;doprnt.c: 1236: (putch('0') );
 21245                           
 21246                           ; BSR set to: 1
 21247  011D9C  0E30               	movlw	48
 21248  011D9E  ECC6  F0C9         	call	_putch
 21249                           
 21250                           ;doprnt.c: 1237: prec--;
 21251  011DA2  0101               	movlb	1	; () banked
 21252  011DA4  07AF               	decf	printf@prec& (0+255),f,b
 21253  011DA6  A0D8               	btfss	status,0,c
 21254  011DA8  07B0               	decf	(printf@prec+1)& (0+255),f,b
 21255  011DAA                     l1620:
 21256                           
 21257                           ; BSR set to: 1
 21258                           
 21259                           ; BSR set to: 1
 21260  011DAA  51AF               	movf	printf@prec& (0+255),w,b
 21261  011DAC  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 21262  011DAE  B4D8               	btfsc	status,2,c
 21263  011DB0  D1BE               	goto	u25720
 21264  011DB2  D7F4               	goto	l1621
 21265  011DB4                     l1574:
 21266                           
 21267                           ; BSR set to: 1
 21268                           ;doprnt.c: 1246: }
 21269                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 21270                           
 21271                           ; BSR set to: 1
 21272  011DB4  0EC0               	movlw	192
 21273  011DB6  15AB               	andwf	printf@flag& (0+255),w,b
 21274  011DB8  6F8C               	movwf	??_printf& (0+255),b
 21275  011DBA  0E00               	movlw	0
 21276  011DBC  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21277  011DBE  6F8D               	movwf	(??_printf+1)& (0+255),b
 21278  011DC0  518C               	movf	??_printf& (0+255),w,b
 21279  011DC2  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21280  011DC4  A4D8               	btfss	status,2,c
 21281  011DC6  D01E               	goto	l1623
 21282                           
 21283                           ; BSR set to: 1
 21284                           ;doprnt.c: 1253: {
 21285                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 21286  011DC8  C19B  FFD9         	movff	printf@ap,fsr2l
 21287  011DCC  C19C  FFDA         	movff	printf@ap+1,fsr2h
 21288  011DD0  CFDE F1A7          	movff	postinc2,printf@val
 21289  011DD4  CFDD F1A8          	movff	postdec2,printf@val+1
 21290  011DD8  0E00               	movlw	0
 21291  011DDA  BFA8               	btfsc	(printf@val+1)& (0+255),7,b
 21292  011DDC  0EFF               	movlw	-1
 21293  011DDE  6FA9               	movwf	(printf@val+2)& (0+255),b
 21294  011DE0  6FAA               	movwf	(printf@val+3)& (0+255),b
 21295                           
 21296                           ; BSR set to: 1
 21297  011DE2  0E02               	movlw	2
 21298  011DE4  279B               	addwf	printf@ap& (0+255),f,b
 21299  011DE6  0E00               	movlw	0
 21300  011DE8  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 21301                           
 21302                           ; BSR set to: 1
 21303                           ;doprnt.c: 1261: if((long)val < 0) {
 21304  011DEA  AFAA               	btfss	(printf@val+3)& (0+255),7,b
 21305  011DEC  D01D               	goto	l1625
 21306                           
 21307                           ; BSR set to: 1
 21308                           ;doprnt.c: 1262: flag |= 0x03;
 21309  011DEE  0E03               	movlw	3
 21310  011DF0  13AB               	iorwf	printf@flag& (0+255),f,b
 21311                           
 21312                           ; BSR set to: 1
 21313                           ;doprnt.c: 1263: val = -val;
 21314  011DF2  1FAA               	comf	(printf@val+3)& (0+255),f,b
 21315  011DF4  1FA9               	comf	(printf@val+2)& (0+255),f,b
 21316  011DF6  1FA8               	comf	(printf@val+1)& (0+255),f,b
 21317  011DF8  6DA7               	negf	printf@val& (0+255),b
 21318  011DFA  0E00               	movlw	0
 21319  011DFC  23A8               	addwfc	(printf@val+1)& (0+255),f,b
 21320  011DFE  23A9               	addwfc	(printf@val+2)& (0+255),f,b
 21321  011E00  23AA               	addwfc	(printf@val+3)& (0+255),f,b
 21322                           
 21323                           ; BSR set to: 1
 21324                           ;doprnt.c: 1264: }
 21325                           ;doprnt.c: 1266: }
 21326  011E02  D012               	goto	l1625
 21327  011E04                     l1623:
 21328                           
 21329                           ; BSR set to: 1
 21330                           ;doprnt.c: 1268: else
 21331                           ;doprnt.c: 1273: {
 21332                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 21333                           
 21334                           ; BSR set to: 1
 21335  011E04  C19B  FFD9         	movff	printf@ap,fsr2l
 21336  011E08  C19C  FFDA         	movff	printf@ap+1,fsr2h
 21337  011E0C  CFDE F18C          	movff	postinc2,??_printf
 21338  011E10  CFDD F18D          	movff	postdec2,??_printf+1
 21339  011E14  C18C  F1A7         	movff	??_printf,printf@val
 21340  011E18  C18D  F1A8         	movff	??_printf+1,printf@val+1
 21341  011E1C  6BA9               	clrf	(printf@val+2)& (0+255),b
 21342  011E1E  6BAA               	clrf	(printf@val+3)& (0+255),b
 21343                           
 21344                           ; BSR set to: 1
 21345  011E20  0E02               	movlw	2
 21346  011E22  279B               	addwf	printf@ap& (0+255),f,b
 21347  011E24  0E00               	movlw	0
 21348  011E26  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 21349  011E28                     l1625:
 21350                           
 21351                           ; BSR set to: 1
 21352                           ;doprnt.c: 1287: }
 21353                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 21354                           
 21355                           ; BSR set to: 1
 21356  011E28  51AF               	movf	printf@prec& (0+255),w,b
 21357  011E2A  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 21358  011E2C  A4D8               	btfss	status,2,c
 21359  011E2E  D04B               	goto	l1627
 21360                           
 21361                           ; BSR set to: 1
 21362  011E30  51A7               	movf	printf@val& (0+255),w,b
 21363  011E32  11A8               	iorwf	(printf@val+1)& (0+255),w,b
 21364  011E34  11A9               	iorwf	(printf@val+2)& (0+255),w,b
 21365  011E36  11AA               	iorwf	(printf@val+3)& (0+255),w,b
 21366  011E38  A4D8               	btfss	status,2,c
 21367  011E3A  D045               	goto	l1627
 21368                           
 21369                           ; BSR set to: 1
 21370                           ;doprnt.c: 1291: prec++;
 21371  011E3C  4BAF               	infsnz	printf@prec& (0+255),f,b
 21372  011E3E  2BB0               	incf	(printf@prec+1)& (0+255),f,b
 21373                           
 21374                           ; BSR set to: 1
 21375                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 21376  011E40  D042               	goto	l1627
 21377  011E42                     
 21378                           ; BSR set to: 1
 21379                           ;doprnt.c: 1302: case 0xC0:
 21380                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 21381                           
 21382                           ; BSR set to: 1
 21383                           
 21384                           ; BSR set to: 1
 21385  011E42  0E01               	movlw	1
 21386  011E44  6FB1               	movwf	printf@c& (0+255),b
 21387  011E46                     l19222:
 21388                           
 21389                           ; BSR set to: 1
 21390  011E46  0E0A               	movlw	10
 21391  011E48  19B1               	xorwf	printf@c& (0+255),w,b
 21392  011E4A  B4D8               	btfsc	status,2,c
 21393  011E4C  D047               	goto	l1633
 21394                           
 21395                           ; BSR set to: 1
 21396                           ;doprnt.c: 1306: if(val < dpowers[c])
 21397                           
 21398                           ; BSR set to: 1
 21399                           
 21400                           ; BSR set to: 1
 21401  011E4E  51B1               	movf	printf@c& (0+255),w,b
 21402  011E50  0D04               	mullw	4
 21403  011E52  0EAB               	movlw	low _dpowers
 21404  011E54  24F3               	addwf	prodl,w,c
 21405  011E56  6EF6               	movwf	tblptrl,c
 21406  011E58  0ED8               	movlw	high _dpowers
 21407  011E5A  20F4               	addwfc	prodh,w,c
 21408  011E5C  6EF7               	movwf	tblptrh,c
 21409  011E5E                     	if	1	;There are 3 active tblptr bytes
 21410  011E5E  6AF8               	clrf	tblptru,c
 21411  011E60  0E00               	movlw	low (__mediumconst shr (0+16))
 21412  011E62  22F8               	addwfc	tblptru,f,c
 21413  011E64                     	endif
 21414  011E64  0009               	tblrd		*+
 21415  011E66  50F5               	movf	tablat,w,c
 21416  011E68  5DA7               	subwf	printf@val& (0+255),w,b
 21417  011E6A  0009               	tblrd		*+
 21418  011E6C  50F5               	movf	tablat,w,c
 21419  011E6E  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 21420  011E70  0009               	tblrd		*+
 21421  011E72  50F5               	movf	tablat,w,c
 21422  011E74  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 21423  011E76  0009               	tblrd		*+
 21424  011E78  50F5               	movf	tablat,w,c
 21425  011E7A  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 21426  011E7C  A0D8               	btfss	status,0,c
 21427  011E7E  D02E               	goto	l1633
 21428                           
 21429                           ; BSR set to: 1
 21430                           
 21431                           ; BSR set to: 1
 21432                           
 21433                           ; BSR set to: 1
 21434                           ;doprnt.c: 1307: break;
 21435  011E80  2BB1               	incf	printf@c& (0+255),f,b
 21436  011E82  D7E1               	goto	l19222
 21437  011E84                     
 21438                           ; BSR set to: 1
 21439                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 21440                           
 21441                           ; BSR set to: 1
 21442  011E84  0E01               	movlw	1
 21443  011E86  6FB1               	movwf	printf@c& (0+255),b
 21444  011E88                     l19236:
 21445                           
 21446                           ; BSR set to: 1
 21447  011E88  0E08               	movlw	8
 21448  011E8A  19B1               	xorwf	printf@c& (0+255),w,b
 21449  011E8C  B4D8               	btfsc	status,2,c
 21450  011E8E  D026               	goto	l1633
 21451                           
 21452                           ; BSR set to: 1
 21453                           ;doprnt.c: 1317: if(val < hexpowers[c])
 21454                           
 21455                           ; BSR set to: 1
 21456                           
 21457                           ; BSR set to: 1
 21458  011E90  51B1               	movf	printf@c& (0+255),w,b
 21459  011E92  0D04               	mullw	4
 21460  011E94  0ED3               	movlw	low _hexpowers
 21461  011E96  24F3               	addwf	prodl,w,c
 21462  011E98  6EF6               	movwf	tblptrl,c
 21463  011E9A  0ED8               	movlw	high _hexpowers
 21464  011E9C  20F4               	addwfc	prodh,w,c
 21465  011E9E  6EF7               	movwf	tblptrh,c
 21466  011EA0                     	if	1	;There are 3 active tblptr bytes
 21467  011EA0  6AF8               	clrf	tblptru,c
 21468  011EA2  0E00               	movlw	low (__mediumconst shr (0+16))
 21469  011EA4  22F8               	addwfc	tblptru,f,c
 21470  011EA6                     	endif
 21471  011EA6  0009               	tblrd		*+
 21472  011EA8  50F5               	movf	tablat,w,c
 21473  011EAA  5DA7               	subwf	printf@val& (0+255),w,b
 21474  011EAC  0009               	tblrd		*+
 21475  011EAE  50F5               	movf	tablat,w,c
 21476  011EB0  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 21477  011EB2  0009               	tblrd		*+
 21478  011EB4  50F5               	movf	tablat,w,c
 21479  011EB6  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 21480  011EB8  0009               	tblrd		*+
 21481  011EBA  50F5               	movf	tablat,w,c
 21482  011EBC  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 21483  011EBE  A0D8               	btfss	status,0,c
 21484  011EC0  D00D               	goto	l1633
 21485                           
 21486                           ; BSR set to: 1
 21487                           
 21488                           ; BSR set to: 1
 21489                           
 21490                           ; BSR set to: 1
 21491                           ;doprnt.c: 1318: break;
 21492  011EC2  2BB1               	incf	printf@c& (0+255),f,b
 21493  011EC4  D7E1               	goto	l19236
 21494  011EC6                     l1627:
 21495                           
 21496                           ; BSR set to: 1
 21497                           
 21498                           ; BSR set to: 1
 21499  011EC6  51AB               	movf	printf@flag& (0+255),w,b
 21500  011EC8  0BC0               	andlw	192
 21501                           
 21502                           ; Switch size 1, requested type "space"
 21503                           ; Number of cases is 3, Range of values is 0 to 192
 21504                           ; switch strategies available:
 21505                           ; Name         Instructions Cycles
 21506                           ; simple_byte           10     6 (average)
 21507                           ;	Chosen strategy is simple_byte
 21508  011ECA  0A00               	xorlw	0	; case 0
 21509  011ECC  B4D8               	btfsc	status,2,c
 21510  011ECE  D7B9               	goto	l1628
 21511  011ED0  0A80               	xorlw	128	; case 128
 21512  011ED2  B4D8               	btfsc	status,2,c
 21513  011ED4  D7D7               	goto	l1634
 21514  011ED6  0A40               	xorlw	64	; case 192
 21515  011ED8  B4D8               	btfsc	status,2,c
 21516  011EDA  D7B3               	goto	l1628
 21517  011EDC                     l1633:
 21518                           
 21519                           ; BSR set to: 1
 21520                           ;doprnt.c: 1339: if(c < prec)
 21521                           
 21522                           ; BSR set to: 1
 21523  011EDC  0E80               	movlw	128
 21524  011EDE  BFB1               	btfsc	printf@c& (0+255),7,b
 21525  011EE0  0E7F               	movlw	127
 21526  011EE2  6F8C               	movwf	??_printf& (0+255),b
 21527  011EE4  51AF               	movf	printf@prec& (0+255),w,b
 21528  011EE6  5DB1               	subwf	printf@c& (0+255),w,b
 21529  011EE8  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21530  011EEA  0A80               	xorlw	128
 21531  011EEC  598C               	subwfb	??_printf& (0+255),w,b
 21532  011EEE  B0D8               	btfsc	status,0,c
 21533  011EF0  D003               	goto	l1638
 21534                           
 21535                           ; BSR set to: 1
 21536                           ;doprnt.c: 1340: c = prec;
 21537  011EF2  C1AF  F1B1         	movff	printf@prec,printf@c
 21538  011EF6  D010               	goto	l1640
 21539  011EF8                     l1638:
 21540                           
 21541                           ; BSR set to: 1
 21542                           ;doprnt.c: 1341: else if(prec < c)
 21543                           
 21544                           ; BSR set to: 1
 21545  011EF8  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21546  011EFA  0A80               	xorlw	128
 21547  011EFC  6F8C               	movwf	??_printf& (0+255),b
 21548  011EFE  51B1               	movf	printf@c& (0+255),w,b
 21549  011F00  5DAF               	subwf	printf@prec& (0+255),w,b
 21550  011F02  0E80               	movlw	128
 21551  011F04  BFB1               	btfsc	printf@c& (0+255),7,b
 21552  011F06  0E7F               	movlw	127
 21553  011F08  598C               	subwfb	??_printf& (0+255),w,b
 21554  011F0A  B0D8               	btfsc	status,0,c
 21555  011F0C  D005               	goto	l1640
 21556                           
 21557                           ; BSR set to: 1
 21558                           ;doprnt.c: 1342: prec = c;
 21559  011F0E  51B1               	movf	printf@c& (0+255),w,b
 21560  011F10  6FAF               	movwf	printf@prec& (0+255),b
 21561  011F12  6BB0               	clrf	(printf@prec+1)& (0+255),b
 21562  011F14  BFAF               	btfsc	printf@prec& (0+255),7,b
 21563  011F16  07B0               	decf	(printf@prec+1)& (0+255),f,b
 21564  011F18                     l1640:
 21565                           
 21566                           ; BSR set to: 1
 21567                           ;doprnt.c: 1345: if(width && flag & 0x03)
 21568                           
 21569                           ; BSR set to: 1
 21570                           
 21571                           ; BSR set to: 1
 21572  011F18  51AD               	movf	printf@width& (0+255),w,b
 21573  011F1A  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 21574  011F1C  B4D8               	btfsc	status,2,c
 21575  011F1E  D00D               	goto	l1641
 21576                           
 21577                           ; BSR set to: 1
 21578  011F20  0E03               	movlw	3
 21579  011F22  15AB               	andwf	printf@flag& (0+255),w,b
 21580  011F24  6F8C               	movwf	??_printf& (0+255),b
 21581  011F26  0E00               	movlw	0
 21582  011F28  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21583  011F2A  6F8D               	movwf	(??_printf+1)& (0+255),b
 21584  011F2C  518C               	movf	??_printf& (0+255),w,b
 21585  011F2E  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21586  011F30  B4D8               	btfsc	status,2,c
 21587  011F32  D003               	goto	l1641
 21588                           
 21589                           ; BSR set to: 1
 21590                           ;doprnt.c: 1346: width--;
 21591  011F34  07AD               	decf	printf@width& (0+255),f,b
 21592  011F36  A0D8               	btfss	status,0,c
 21593  011F38  07AE               	decf	(printf@width+1)& (0+255),f,b
 21594  011F3A                     l1641:
 21595                           
 21596                           ; BSR set to: 1
 21597                           ;doprnt.c: 1348: if(flag & 0x4000) {
 21598                           
 21599                           ; BSR set to: 1
 21600  011F3A  ADAC               	btfss	(printf@flag+1)& (0+255),6,b
 21601  011F3C  D013               	goto	l1644
 21602                           
 21603                           ; BSR set to: 1
 21604                           ;doprnt.c: 1349: if(width > prec)
 21605  011F3E  51AD               	movf	printf@width& (0+255),w,b
 21606  011F40  5DAF               	subwf	printf@prec& (0+255),w,b
 21607  011F42  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21608  011F44  0A80               	xorlw	128
 21609  011F46  6F8C               	movwf	??_printf& (0+255),b
 21610  011F48  51AE               	movf	(printf@width+1)& (0+255),w,b
 21611  011F4A  0A80               	xorlw	128
 21612  011F4C  598C               	subwfb	??_printf& (0+255),w,b
 21613  011F4E  B0D8               	btfsc	status,0,c
 21614  011F50  D005               	goto	l1643
 21615                           
 21616                           ; BSR set to: 1
 21617                           ;doprnt.c: 1350: width -= prec;
 21618  011F52  51AF               	movf	printf@prec& (0+255),w,b
 21619  011F54  5FAD               	subwf	printf@width& (0+255),f,b
 21620  011F56  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21621  011F58  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 21622  011F5A  D004               	goto	l1644
 21623  011F5C                     l1643:
 21624                           
 21625                           ; BSR set to: 1
 21626                           ;doprnt.c: 1351: else
 21627                           ;doprnt.c: 1352: width = 0;
 21628                           
 21629                           ; BSR set to: 1
 21630  011F5C  0E00               	movlw	0
 21631  011F5E  6FAE               	movwf	(printf@width+1)& (0+255),b
 21632  011F60  0E00               	movlw	0
 21633  011F62  6FAD               	movwf	printf@width& (0+255),b
 21634  011F64                     l1644:
 21635                           
 21636                           ; BSR set to: 1
 21637                           ;doprnt.c: 1353: }
 21638                           ;doprnt.c: 1381: if(width > c)
 21639                           
 21640                           ; BSR set to: 1
 21641                           
 21642                           ; BSR set to: 1
 21643  011F64  0E80               	movlw	128
 21644  011F66  BFB1               	btfsc	printf@c& (0+255),7,b
 21645  011F68  0E7F               	movlw	127
 21646  011F6A  6F8C               	movwf	??_printf& (0+255),b
 21647  011F6C  51AD               	movf	printf@width& (0+255),w,b
 21648  011F6E  5DB1               	subwf	printf@c& (0+255),w,b
 21649  011F70  51AE               	movf	(printf@width+1)& (0+255),w,b
 21650  011F72  0A80               	xorlw	128
 21651  011F74  598C               	subwfb	??_printf& (0+255),w,b
 21652  011F76  B0D8               	btfsc	status,0,c
 21653  011F78  D007               	goto	l1645
 21654                           
 21655                           ; BSR set to: 1
 21656                           ;doprnt.c: 1382: width -= c;
 21657  011F7A  51B1               	movf	printf@c& (0+255),w,b
 21658  011F7C  5FAD               	subwf	printf@width& (0+255),f,b
 21659  011F7E  0E00               	movlw	0
 21660  011F80  BFB1               	btfsc	printf@c& (0+255),7,b
 21661  011F82  0EFF               	movlw	255
 21662  011F84  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 21663  011F86  D004               	goto	l1646
 21664  011F88                     l1645:
 21665                           
 21666                           ; BSR set to: 1
 21667                           ;doprnt.c: 1383: else
 21668                           ;doprnt.c: 1384: width = 0;
 21669                           
 21670                           ; BSR set to: 1
 21671  011F88  0E00               	movlw	0
 21672  011F8A  6FAE               	movwf	(printf@width+1)& (0+255),b
 21673  011F8C  0E00               	movlw	0
 21674  011F8E  6FAD               	movwf	printf@width& (0+255),b
 21675  011F90                     l1646:
 21676                           
 21677                           ; BSR set to: 1
 21678                           ;doprnt.c: 1387: if(flag & 0x04) {
 21679                           
 21680                           ; BSR set to: 1
 21681  011F90  A5AB               	btfss	printf@flag& (0+255),2,b
 21682  011F92  D01A               	goto	l1647
 21683                           
 21684                           ; BSR set to: 1
 21685                           ;doprnt.c: 1392: if(flag & 0x03)
 21686  011F94  0E03               	movlw	3
 21687  011F96  15AB               	andwf	printf@flag& (0+255),w,b
 21688  011F98  6F8C               	movwf	??_printf& (0+255),b
 21689  011F9A  0E00               	movlw	0
 21690  011F9C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21691  011F9E  6F8D               	movwf	(??_printf+1)& (0+255),b
 21692  011FA0  518C               	movf	??_printf& (0+255),w,b
 21693  011FA2  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21694  011FA4  B4D8               	btfsc	status,2,c
 21695  011FA6  D003               	goto	l1648
 21696                           
 21697                           ; BSR set to: 1
 21698                           ;doprnt.c: 1393: (putch('-') );
 21699  011FA8  0E2D               	movlw	45
 21700  011FAA  ECC6  F0C9         	call	_putch
 21701  011FAE                     l1648:
 21702                           
 21703                           ;doprnt.c: 1415: if(width)
 21704  011FAE  0101               	movlb	1	; () banked
 21705  011FB0  51AD               	movf	printf@width& (0+255),w,b
 21706  011FB2  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 21707  011FB4  B4D8               	btfsc	status,2,c
 21708  011FB6  D0B2               	goto	l1657
 21709                           
 21710                           ; BSR set to: 1
 21711                           ;doprnt.c: 1417: (putch('0') );
 21712                           
 21713                           ; BSR set to: 1
 21714                           
 21715                           ;doprnt.c: 1416: do
 21716  011FB8  0E30               	movlw	48
 21717  011FBA  ECC6  F0C9         	call	_putch
 21718                           
 21719                           ;doprnt.c: 1418: while(--width);
 21720  011FBE  0101               	movlb	1	; () banked
 21721  011FC0  07AD               	decf	printf@width& (0+255),f,b
 21722  011FC2  A0D8               	btfss	status,0,c
 21723  011FC4  07AE               	decf	(printf@width+1)& (0+255),f,b
 21724  011FC6  D7F4               	goto	L25
 21725  011FC8                     l1647:
 21726                           
 21727                           ; BSR set to: 1
 21728                           ;doprnt.c: 1422: {
 21729                           ;doprnt.c: 1424: if(width
 21730                           ;doprnt.c: 1428: )
 21731                           
 21732                           ; BSR set to: 1
 21733  011FC8  51AD               	movf	printf@width& (0+255),w,b
 21734  011FCA  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 21735  011FCC  B4D8               	btfsc	status,2,c
 21736  011FCE  D00B               	goto	u25700
 21737  011FD0                     u25690:
 21738                           
 21739                           ; BSR set to: 1
 21740                           ;doprnt.c: 1430: (putch(' ') );
 21741                           
 21742                           ; BSR set to: 1
 21743                           
 21744                           ;doprnt.c: 1429: do
 21745  011FD0  0E20               	movlw	32
 21746  011FD2  ECC6  F0C9         	call	_putch
 21747                           
 21748                           ;doprnt.c: 1431: while(--width);
 21749  011FD6  0101               	movlb	1	; () banked
 21750  011FD8  07AD               	decf	printf@width& (0+255),f,b
 21751  011FDA  A0D8               	btfss	status,0,c
 21752  011FDC  07AE               	decf	(printf@width+1)& (0+255),f,b
 21753  011FDE  51AD               	movf	printf@width& (0+255),w,b
 21754  011FE0  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 21755  011FE2  A4D8               	btfss	status,2,c
 21756  011FE4  D7F5               	goto	u25690
 21757  011FE6                     u25700:
 21758                           
 21759                           ; BSR set to: 1
 21760                           ;doprnt.c: 1438: if(flag & 0x03)
 21761                           
 21762                           ; BSR set to: 1
 21763                           
 21764                           ; BSR set to: 1
 21765  011FE6  0E03               	movlw	3
 21766  011FE8  15AB               	andwf	printf@flag& (0+255),w,b
 21767  011FEA  6F8C               	movwf	??_printf& (0+255),b
 21768  011FEC  0E00               	movlw	0
 21769  011FEE  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21770  011FF0  6F8D               	movwf	(??_printf+1)& (0+255),b
 21771  011FF2  518C               	movf	??_printf& (0+255),w,b
 21772  011FF4  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21773  011FF6  B4D8               	btfsc	status,2,c
 21774  011FF8  D091               	goto	l1657
 21775                           
 21776                           ; BSR set to: 1
 21777                           ;doprnt.c: 1439: (putch('-') );
 21778  011FFA  0E2D               	movlw	45
 21779  011FFC  ECC6  F0C9         	call	_putch
 21780                           
 21781                           ;doprnt.c: 1469: }
 21782                           ;doprnt.c: 1474: while(prec--) {
 21783  012000  D08D               	goto	l1657
 21784  012002                     
 21785                           ;doprnt.c: 1486: case 0xC0:
 21786                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 21787  012002  C1AF  F18C         	movff	printf@prec,??_printf
 21788  012006  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 21789  01200A  0101               	movlb	1	; () banked
 21790  01200C  90D8               	bcf	status,0,c
 21791  01200E  378C               	rlcf	??_printf& (0+255),f,b
 21792  012010  378D               	rlcf	(??_printf+1)& (0+255),f,b
 21793  012012  90D8               	bcf	status,0,c
 21794  012014  378C               	rlcf	??_printf& (0+255),f,b
 21795  012016  378D               	rlcf	(??_printf+1)& (0+255),f,b
 21796  012018  0EAB               	movlw	low _dpowers
 21797  01201A  258C               	addwf	??_printf& (0+255),w,b
 21798  01201C  6EF6               	movwf	tblptrl,c
 21799  01201E  0ED8               	movlw	high _dpowers
 21800  012020  218D               	addwfc	(??_printf+1)& (0+255),w,b
 21801  012022  6EF7               	movwf	tblptrh,c
 21802  012024                     	if	1	;There are 3 active tblptr bytes
 21803  012024  6AF8               	clrf	tblptru,c
 21804  012026  0E00               	movlw	low (__mediumconst shr (0+16))
 21805  012028  22F8               	addwfc	tblptru,f,c
 21806  01202A                     	endif
 21807  01202A  0009               	tblrd		*+
 21808  01202C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 21809  012030  0009               	tblrd		*+
 21810  012032  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 21811  012036  0009               	tblrd		*+
 21812  012038  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 21813  01203C  000A               	tblrd		*-
 21814  01203E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 21815  012042  C1A7  F117         	movff	printf@val,___lldiv@dividend
 21816  012046  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 21817  01204A  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 21818  01204E  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 21819  012052  EC6C  F0C1         	call	___lldiv	;wreg free
 21820  012056  C117  F124         	movff	?___lldiv,___llmod@dividend
 21821  01205A  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 21822  01205E  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 21823  012062  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 21824  012066  0E0A               	movlw	10
 21825  012068  0101               	movlb	1	; () banked
 21826  01206A  6F28               	movwf	___llmod@divisor& (0+255),b
 21827  01206C  0E00               	movlw	0
 21828  01206E  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 21829  012070  0E00               	movlw	0
 21830  012072  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 21831  012074  0E00               	movlw	0
 21832  012076  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 21833  012078  ECBD  F0C3         	call	___llmod	;wreg free
 21834  01207C  0101               	movlb	1	; () banked
 21835  01207E  5124               	movf	?___llmod& (0+255),w,b
 21836  012080  0F30               	addlw	48
 21837  012082  6FB1               	movwf	printf@c& (0+255),b
 21838                           
 21839                           ;doprnt.c: 1491: break;
 21840  012084  D048               	goto	l1662
 21841  012086                     
 21842                           ; BSR set to: 1
 21843                           ;doprnt.c: 1499: {
 21844                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 21845                           
 21846                           ; BSR set to: 1
 21847  012086  C1A7  F117         	movff	printf@val,___lldiv@dividend
 21848  01208A  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 21849  01208E  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 21850  012092  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 21851  012096  C1AF  F18C         	movff	printf@prec,??_printf
 21852  01209A  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 21853  01209E  90D8               	bcf	status,0,c
 21854  0120A0  378C               	rlcf	??_printf& (0+255),f,b
 21855  0120A2  378D               	rlcf	(??_printf+1)& (0+255),f,b
 21856  0120A4  90D8               	bcf	status,0,c
 21857  0120A6  378C               	rlcf	??_printf& (0+255),f,b
 21858  0120A8  378D               	rlcf	(??_printf+1)& (0+255),f,b
 21859  0120AA  0ED3               	movlw	low _hexpowers
 21860  0120AC  258C               	addwf	??_printf& (0+255),w,b
 21861  0120AE  6EF6               	movwf	tblptrl,c
 21862  0120B0  0ED8               	movlw	high _hexpowers
 21863  0120B2  218D               	addwfc	(??_printf+1)& (0+255),w,b
 21864  0120B4  6EF7               	movwf	tblptrh,c
 21865  0120B6                     	if	1	;There are 3 active tblptr bytes
 21866  0120B6  6AF8               	clrf	tblptru,c
 21867  0120B8  0E00               	movlw	low (__mediumconst shr (0+16))
 21868  0120BA  22F8               	addwfc	tblptru,f,c
 21869  0120BC                     	endif
 21870  0120BC  0009               	tblrd		*+
 21871  0120BE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 21872  0120C2  0009               	tblrd		*+
 21873  0120C4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 21874  0120C8  0009               	tblrd		*+
 21875  0120CA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 21876  0120CE  000A               	tblrd		*-
 21877  0120D0  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 21878  0120D4  EC6C  F0C1         	call	___lldiv	;wreg free
 21879  0120D8  0101               	movlb	1	; () banked
 21880  0120DA  5117               	movf	?___lldiv& (0+255),w,b
 21881  0120DC  0B0F               	andlw	15
 21882  0120DE  6F96               	movwf	printf@idx& (0+255),b
 21883                           
 21884                           ; BSR set to: 1
 21885                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 21886  0120E0  5196               	movf	printf@idx& (0+255),w,b
 21887  0120E2  0D01               	mullw	1
 21888  0120E4  0E77               	movlw	low STR_165
 21889  0120E6  24F3               	addwf	prodl,w,c
 21890  0120E8  6EF6               	movwf	tblptrl,c
 21891  0120EA  0EFD               	movlw	high STR_165
 21892  0120EC  20F4               	addwfc	prodh,w,c
 21893  0120EE  6EF7               	movwf	tblptrh,c
 21894  0120F0                     	if	1	;There are 3 active tblptr bytes
 21895  0120F0  6AF8               	clrf	tblptru,c
 21896  0120F2  0E00               	movlw	low (__mediumconst shr (0+16))
 21897  0120F4  22F8               	addwfc	tblptru,f,c
 21898  0120F6                     	endif
 21899  0120F6  0008               	tblrd		*
 21900  0120F8  CFF5 F1B1          	movff	tablat,printf@c
 21901                           
 21902                           ; BSR set to: 1
 21903                           ;doprnt.c: 1523: }
 21904                           
 21905                           ;doprnt.c: 1508: }
 21906                           ;doprnt.c: 1510: break;
 21907  0120FC  D00C               	goto	l1662
 21908  0120FE                     l19310:
 21909  0120FE  0101               	movlb	1	; () banked
 21910  012100  51AB               	movf	printf@flag& (0+255),w,b
 21911  012102  0BC0               	andlw	192
 21912                           
 21913                           ; Switch size 1, requested type "space"
 21914                           ; Number of cases is 3, Range of values is 0 to 192
 21915                           ; switch strategies available:
 21916                           ; Name         Instructions Cycles
 21917                           ; simple_byte           10     6 (average)
 21918                           ;	Chosen strategy is simple_byte
 21919  012104  0A00               	xorlw	0	; case 0
 21920  012106  B4D8               	btfsc	status,2,c
 21921  012108  D77C               	goto	l1660
 21922  01210A  0A80               	xorlw	128	; case 128
 21923  01210C  B4D8               	btfsc	status,2,c
 21924  01210E  D7BB               	goto	l1663
 21925  012110  0A40               	xorlw	64	; case 192
 21926  012112  B4D8               	btfsc	status,2,c
 21927  012114  D776               	goto	l1660
 21928  012116                     l1662:
 21929                           
 21930                           ; BSR set to: 1
 21931                           ;doprnt.c: 1524: (putch(c) );
 21932                           
 21933                           ; BSR set to: 1
 21934  012116  51B1               	movf	printf@c& (0+255),w,b
 21935  012118  ECC6  F0C9         	call	_putch
 21936  01211C                     l1657:
 21937  01211C  0101               	movlb	1	; () banked
 21938  01211E  07AF               	decf	printf@prec& (0+255),f,b
 21939  012120  A0D8               	btfss	status,0,c
 21940  012122  07B0               	decf	(printf@prec+1)& (0+255),f,b
 21941  012124  29AF               	incf	printf@prec& (0+255),w,b
 21942  012126  E1EB               	bnz	l19310
 21943  012128  29B0               	incf	(printf@prec+1)& (0+255),w,b
 21944  01212A  A4D8               	btfss	status,2,c
 21945  01212C  D7E8               	goto	l1659
 21946  01212E                     u25720:
 21947                           
 21948                           ; BSR set to: 1
 21949                           
 21950                           ; BSR set to: 1
 21951  01212E  0101               	movlb	1	; () banked
 21952  012130  5182               	movf	printf@f& (0+255),w,b
 21953  012132  6F8C               	movwf	??_printf& (0+255),b
 21954  012134  5183               	movf	(printf@f+1)& (0+255),w,b
 21955  012136  6F8D               	movwf	(??_printf+1)& (0+255),b
 21956  012138  4B82               	infsnz	printf@f& (0+255),f,b
 21957  01213A  2B83               	incf	(printf@f+1)& (0+255),f,b
 21958  01213C  C18C  FFF6         	movff	??_printf,tblptrl
 21959  012140  C18D  FFF7         	movff	??_printf+1,tblptrh
 21960  012144  0E00               	movlw	low (__mediumconst shr (0+16))
 21961  012146  6EF8               	movwf	tblptru,c
 21962  012148  0E0D               	movlw	(high __ramtop+-1)
 21963  01214A  64F7               	cpfsgt	tblptrh,c
 21964  01214C  D003               	bra	u25737
 21965  01214E  0008               	tblrd		*
 21966  012150  50F5               	movf	tablat,w,c
 21967  012152  D005               	bra	u25730
 21968  012154                     u25737:
 21969  012154  CFF6 FFE9          	movff	tblptrl,fsr0l
 21970  012158  CFF7 FFEA          	movff	tblptrh,fsr0h
 21971  01215C  50EF               	movf	indf0,w,c
 21972  01215E                     u25730:
 21973  01215E  0101               	movlb	1	; () banked
 21974  012160  6FB1               	movwf	printf@c& (0+255),b
 21975  012162  51B1               	movf	printf@c& (0+255),w,b
 21976  012164  B4D8               	btfsc	status,2,c
 21977  012166  0012               	return	
 21978  012168  EFD6  F089         	goto	l1531
 21979  01216C                     __end_of_printf:
 21980                           	opt stack 0
 21981                           tblptru	equ	0xFF8
 21982                           tblptrh	equ	0xFF7
 21983                           tblptrl	equ	0xFF6
 21984                           tablat	equ	0xFF5
 21985                           prodh	equ	0xFF4
 21986                           prodl	equ	0xFF3
 21987                           intcon	equ	0xFF2
 21988                           indf0	equ	0xFEF
 21989                           postinc0	equ	0xFEE
 21990                           fsr0h	equ	0xFEA
 21991                           fsr0l	equ	0xFE9
 21992                           wreg	equ	0xFE8
 21993                           indf1	equ	0xFE7
 21994                           postdec1	equ	0xFE5
 21995                           plusw1	equ	0xFE3
 21996                           fsr1h	equ	0xFE2
 21997                           fsr1l	equ	0xFE1
 21998                           indf2	equ	0xFDF
 21999                           postinc2	equ	0xFDE
 22000                           postdec2	equ	0xFDD
 22001                           plusw2	equ	0xFDB
 22002                           fsr2h	equ	0xFDA
 22003                           fsr2l	equ	0xFD9
 22004                           status	equ	0xFD8
 22005                           
 22006 ;; *************** function _scale *****************
 22007 ;; Defined at:
 22008 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 22009 ;; Parameters:    Size  Location     Type
 22010 ;;  scl             1    wreg     char 
 22011 ;; Auto vars:     Size  Location     Type
 22012 ;;  scl             1  119[BANK1 ] char 
 22013 ;; Return value:  Size  Location     Type
 22014 ;;                  4  111[BANK1 ] char 
 22015 ;; Registers used:
 22016 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22017 ;; Tracked objects:
 22018 ;;		On entry : 0/0
 22019 ;;		On exit  : 0/0
 22020 ;;		Unchanged: 0/0
 22021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22022 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22023 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22025 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22026 ;;Total ram usage:        9 bytes
 22027 ;; Hardware stack levels used:    1
 22028 ;; Hardware stack levels required when called:   14
 22029 ;; This function calls:
 22030 ;;		___awdiv
 22031 ;;		___awmod
 22032 ;;		___flmul
 22033 ;; This function is called by:
 22034 ;;		_printf
 22035 ;; This function uses a non-reentrant model
 22036 ;;
 22037                           
 22038                           	psect	text30
 22039  013910                     __ptext30:
 22040                           	opt stack 0
 22041  013910                     _scale:
 22042                           	opt stack 13
 22043                           
 22044                           ; BSR set to: 1
 22045                           ;incstack = 0
 22046                           ;scale@scl stored from wreg
 22047  013910  0101               	movlb	1	; () banked
 22048  013912  6F77               	movwf	scale@scl& (0+255),b
 22049                           
 22050                           ;doprnt.c: 428: if(scl < 0) {
 22051  013914  0101               	movlb	1	; () banked
 22052  013916  AF77               	btfss	scale@scl& (0+255),7,b
 22053  013918  D127               	goto	l1520
 22054                           
 22055                           ; BSR set to: 1
 22056                           ;doprnt.c: 429: scl = -scl;
 22057  01391A  6D77               	negf	scale@scl& (0+255),b
 22058                           
 22059                           ;doprnt.c: 430: if(scl>=110)
 22060  01391C  5177               	movf	scale@scl& (0+255),w,b
 22061  01391E  0A80               	xorlw	128
 22062  013920  0F12               	addlw	-238
 22063  013922  A0D8               	btfss	status,0,c
 22064  013924  D0A5               	goto	l1521
 22065                           
 22066                           ; BSR set to: 1
 22067                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 22068  013926  0E00               	movlw	0
 22069  013928  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22070  01392A  0E0A               	movlw	10
 22071  01392C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22072  01392E  0E00               	movlw	0
 22073  013930  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22074  013932  0E64               	movlw	100
 22075  013934  6F19               	movwf	___awmod@divisor& (0+255),b
 22076  013936  5177               	movf	scale@scl& (0+255),w,b
 22077  013938  6F17               	movwf	___awmod@dividend& (0+255),b
 22078  01393A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22079  01393C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22080  01393E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22081  013940  ECAC  F0C2         	call	___awmod	;wreg free
 22082  013944  C117  F11D         	movff	?___awmod,___awdiv@dividend
 22083  013948  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 22084  01394C  EC29  F0C1         	call	___awdiv	;wreg free
 22085  013950  0101               	movlb	1	; () banked
 22086  013952  90D8               	bcf	status,0,c
 22087  013954  371D               	rlcf	?___awdiv& (0+255),f,b
 22088  013956  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22089  013958  90D8               	bcf	status,0,c
 22090  01395A  371D               	rlcf	?___awdiv& (0+255),f,b
 22091  01395C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22092  01395E  0E24               	movlw	36
 22093  013960  271D               	addwf	?___awdiv& (0+255),f,b
 22094  013962  0E00               	movlw	0
 22095  013964  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22096  013966  0E77               	movlw	low __npowers_
 22097  013968  251D               	addwf	?___awdiv& (0+255),w,b
 22098  01396A  6EF6               	movwf	tblptrl,c
 22099  01396C  0ED8               	movlw	high __npowers_
 22100  01396E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22101  013970  6EF7               	movwf	tblptrh,c
 22102  013972                     	if	1	;There are 3 active tblptr bytes
 22103  013972  6AF8               	clrf	tblptru,c
 22104  013974  0E00               	movlw	low (__mediumconst shr (0+16))
 22105  013976  22F8               	addwfc	tblptru,f,c
 22106  013978                     	endif
 22107  013978  0009               	tblrd		*+
 22108  01397A  CFF5 F15A          	movff	tablat,___flmul@a
 22109  01397E  0009               	tblrd		*+
 22110  013980  CFF5 F15B          	movff	tablat,___flmul@a+1
 22111  013984  0009               	tblrd		*+
 22112  013986  CFF5 F15C          	movff	tablat,___flmul@a+2
 22113  01398A  000A               	tblrd		*-
 22114  01398C  CFF5 F15D          	movff	tablat,___flmul@a+3
 22115  013990  0E00               	movlw	0
 22116  013992  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22117  013994  0E64               	movlw	100
 22118  013996  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22119  013998  5177               	movf	scale@scl& (0+255),w,b
 22120  01399A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22121  01399C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22122  01399E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22123  0139A0  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22124  0139A2  EC29  F0C1         	call	___awdiv	;wreg free
 22125  0139A6  0101               	movlb	1	; () banked
 22126  0139A8  90D8               	bcf	status,0,c
 22127  0139AA  371D               	rlcf	?___awdiv& (0+255),f,b
 22128  0139AC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22129  0139AE  90D8               	bcf	status,0,c
 22130  0139B0  371D               	rlcf	?___awdiv& (0+255),f,b
 22131  0139B2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22132  0139B4  0E48               	movlw	72
 22133  0139B6  271D               	addwf	?___awdiv& (0+255),f,b
 22134  0139B8  0E00               	movlw	0
 22135  0139BA  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22136  0139BC  0E77               	movlw	low __npowers_
 22137  0139BE  251D               	addwf	?___awdiv& (0+255),w,b
 22138  0139C0  6EF6               	movwf	tblptrl,c
 22139  0139C2  0ED8               	movlw	high __npowers_
 22140  0139C4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22141  0139C6  6EF7               	movwf	tblptrh,c
 22142  0139C8                     	if	1	;There are 3 active tblptr bytes
 22143  0139C8  6AF8               	clrf	tblptru,c
 22144  0139CA  0E00               	movlw	low (__mediumconst shr (0+16))
 22145  0139CC  22F8               	addwfc	tblptru,f,c
 22146  0139CE                     	endif
 22147  0139CE  0009               	tblrd		*+
 22148  0139D0  CFF5 F156          	movff	tablat,___flmul@b
 22149  0139D4  0009               	tblrd		*+
 22150  0139D6  CFF5 F157          	movff	tablat,___flmul@b+1
 22151  0139DA  0009               	tblrd		*+
 22152  0139DC  CFF5 F158          	movff	tablat,___flmul@b+2
 22153  0139E0  000A               	tblrd		*-
 22154  0139E2  CFF5 F159          	movff	tablat,___flmul@b+3
 22155  0139E6  ECCE  F0A2         	call	___flmul	;wreg free
 22156  0139EA  C156  F173         	movff	?___flmul,_scale$4168
 22157  0139EE  C157  F174         	movff	?___flmul+1,_scale$4168+1
 22158  0139F2  C158  F175         	movff	?___flmul+2,_scale$4168+2
 22159  0139F6  C159  F176         	movff	?___flmul+3,_scale$4168+3
 22160                           
 22161                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 22162  0139FA  C173  F156         	movff	_scale$4168,___flmul@b
 22163  0139FE  C174  F157         	movff	_scale$4168+1,___flmul@b+1
 22164  013A02  C175  F158         	movff	_scale$4168+2,___flmul@b+2
 22165  013A06  C176  F159         	movff	_scale$4168+3,___flmul@b+3
 22166  013A0A  0E00               	movlw	0
 22167  013A0C  0101               	movlb	1	; () banked
 22168  013A0E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22169  013A10  0E0A               	movlw	10
 22170  013A12  6F19               	movwf	___awmod@divisor& (0+255),b
 22171  013A14  5177               	movf	scale@scl& (0+255),w,b
 22172  013A16  6F17               	movwf	___awmod@dividend& (0+255),b
 22173  013A18  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22174  013A1A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22175  013A1C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22176  013A1E  ECAC  F0C2         	call	___awmod	;wreg free
 22177  013A22  0101               	movlb	1	; () banked
 22178  013A24  90D8               	bcf	status,0,c
 22179  013A26  3717               	rlcf	?___awmod& (0+255),f,b
 22180  013A28  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22181  013A2A  90D8               	bcf	status,0,c
 22182  013A2C  3717               	rlcf	?___awmod& (0+255),f,b
 22183  013A2E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22184  013A30  0E77               	movlw	low __npowers_
 22185  013A32  2517               	addwf	?___awmod& (0+255),w,b
 22186  013A34  6EF6               	movwf	tblptrl,c
 22187  013A36  0ED8               	movlw	high __npowers_
 22188  013A38  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22189  013A3A  6EF7               	movwf	tblptrh,c
 22190  013A3C                     	if	1	;There are 3 active tblptr bytes
 22191  013A3C  6AF8               	clrf	tblptru,c
 22192  013A3E  0E00               	movlw	low (__mediumconst shr (0+16))
 22193  013A40  22F8               	addwfc	tblptru,f,c
 22194  013A42                     	endif
 22195  013A42  0009               	tblrd		*+
 22196  013A44  CFF5 F15A          	movff	tablat,___flmul@a
 22197  013A48  0009               	tblrd		*+
 22198  013A4A  CFF5 F15B          	movff	tablat,___flmul@a+1
 22199  013A4E  0009               	tblrd		*+
 22200  013A50  CFF5 F15C          	movff	tablat,___flmul@a+2
 22201  013A54  000A               	tblrd		*-
 22202  013A56  CFF5 F15D          	movff	tablat,___flmul@a+3
 22203  013A5A  ECCE  F0A2         	call	___flmul	;wreg free
 22204  013A5E  C156  F16F         	movff	?___flmul,?_scale
 22205  013A62  C157  F170         	movff	?___flmul+1,?_scale+1
 22206  013A66  C158  F171         	movff	?___flmul+2,?_scale+2
 22207  013A6A  C159  F172         	movff	?___flmul+3,?_scale+3
 22208  013A6E  0012               	return	
 22209  013A70                     l1521:
 22210                           
 22211                           ;doprnt.c: 432: else if(scl > 10)
 22212  013A70  0101               	movlb	1	; () banked
 22213  013A72  5177               	movf	scale@scl& (0+255),w,b
 22214  013A74  0A80               	xorlw	128
 22215  013A76  0F75               	addlw	-139
 22216  013A78  A0D8               	btfss	status,0,c
 22217  013A7A  D05D               	goto	l1524
 22218                           
 22219                           ; BSR set to: 1
 22220                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 22221  013A7C  0E00               	movlw	0
 22222  013A7E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22223  013A80  0E0A               	movlw	10
 22224  013A82  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22225  013A84  5177               	movf	scale@scl& (0+255),w,b
 22226  013A86  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22227  013A88  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22228  013A8A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22229  013A8C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22230  013A8E  EC29  F0C1         	call	___awdiv	;wreg free
 22231  013A92  0101               	movlb	1	; () banked
 22232  013A94  90D8               	bcf	status,0,c
 22233  013A96  371D               	rlcf	?___awdiv& (0+255),f,b
 22234  013A98  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22235  013A9A  90D8               	bcf	status,0,c
 22236  013A9C  371D               	rlcf	?___awdiv& (0+255),f,b
 22237  013A9E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22238  013AA0  0E24               	movlw	36
 22239  013AA2  271D               	addwf	?___awdiv& (0+255),f,b
 22240  013AA4  0E00               	movlw	0
 22241  013AA6  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22242  013AA8  0E77               	movlw	low __npowers_
 22243  013AAA  251D               	addwf	?___awdiv& (0+255),w,b
 22244  013AAC  6EF6               	movwf	tblptrl,c
 22245  013AAE  0ED8               	movlw	high __npowers_
 22246  013AB0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22247  013AB2  6EF7               	movwf	tblptrh,c
 22248  013AB4                     	if	1	;There are 3 active tblptr bytes
 22249  013AB4  6AF8               	clrf	tblptru,c
 22250  013AB6  0E00               	movlw	low (__mediumconst shr (0+16))
 22251  013AB8  22F8               	addwfc	tblptru,f,c
 22252  013ABA                     	endif
 22253  013ABA  0009               	tblrd		*+
 22254  013ABC  CFF5 F156          	movff	tablat,___flmul@b
 22255  013AC0  0009               	tblrd		*+
 22256  013AC2  CFF5 F157          	movff	tablat,___flmul@b+1
 22257  013AC6  0009               	tblrd		*+
 22258  013AC8  CFF5 F158          	movff	tablat,___flmul@b+2
 22259  013ACC  000A               	tblrd		*-
 22260  013ACE  CFF5 F159          	movff	tablat,___flmul@b+3
 22261  013AD2  0E00               	movlw	0
 22262  013AD4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22263  013AD6  0E0A               	movlw	10
 22264  013AD8  6F19               	movwf	___awmod@divisor& (0+255),b
 22265  013ADA  5177               	movf	scale@scl& (0+255),w,b
 22266  013ADC  6F17               	movwf	___awmod@dividend& (0+255),b
 22267  013ADE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22268  013AE0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22269  013AE2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22270  013AE4  ECAC  F0C2         	call	___awmod	;wreg free
 22271  013AE8  0101               	movlb	1	; () banked
 22272  013AEA  90D8               	bcf	status,0,c
 22273  013AEC  3717               	rlcf	?___awmod& (0+255),f,b
 22274  013AEE  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22275  013AF0  90D8               	bcf	status,0,c
 22276  013AF2  3717               	rlcf	?___awmod& (0+255),f,b
 22277  013AF4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22278  013AF6  0E77               	movlw	low __npowers_
 22279  013AF8  2517               	addwf	?___awmod& (0+255),w,b
 22280  013AFA  6EF6               	movwf	tblptrl,c
 22281  013AFC  0ED8               	movlw	high __npowers_
 22282  013AFE  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22283  013B00  6EF7               	movwf	tblptrh,c
 22284  013B02                     	if	1	;There are 3 active tblptr bytes
 22285  013B02  6AF8               	clrf	tblptru,c
 22286  013B04  0E00               	movlw	low (__mediumconst shr (0+16))
 22287  013B06  22F8               	addwfc	tblptru,f,c
 22288  013B08                     	endif
 22289  013B08  0009               	tblrd		*+
 22290  013B0A  CFF5 F15A          	movff	tablat,___flmul@a
 22291  013B0E  0009               	tblrd		*+
 22292  013B10  CFF5 F15B          	movff	tablat,___flmul@a+1
 22293  013B14  0009               	tblrd		*+
 22294  013B16  CFF5 F15C          	movff	tablat,___flmul@a+2
 22295  013B1A  000A               	tblrd		*-
 22296  013B1C  CFF5 F15D          	movff	tablat,___flmul@a+3
 22297  013B20  ECCE  F0A2         	call	___flmul	;wreg free
 22298  013B24  C156  F16F         	movff	?___flmul,?_scale
 22299  013B28  C157  F170         	movff	?___flmul+1,?_scale+1
 22300  013B2C  C158  F171         	movff	?___flmul+2,?_scale+2
 22301  013B30  C159  F172         	movff	?___flmul+3,?_scale+3
 22302  013B34  0012               	return	
 22303  013B36                     l1524:
 22304                           
 22305                           ;doprnt.c: 434: return _npowers_[scl];
 22306  013B36  0101               	movlb	1	; () banked
 22307  013B38  5177               	movf	scale@scl& (0+255),w,b
 22308  013B3A  0D04               	mullw	4
 22309  013B3C  0E77               	movlw	low __npowers_
 22310  013B3E  24F3               	addwf	prodl,w,c
 22311  013B40  6EF6               	movwf	tblptrl,c
 22312  013B42  0ED8               	movlw	high __npowers_
 22313  013B44  20F4               	addwfc	prodh,w,c
 22314  013B46  6EF7               	movwf	tblptrh,c
 22315  013B48                     	if	1	;There are 3 active tblptr bytes
 22316  013B48  6AF8               	clrf	tblptru,c
 22317  013B4A  0E00               	movlw	low (__mediumconst shr (0+16))
 22318  013B4C  22F8               	addwfc	tblptru,f,c
 22319  013B4E                     	endif
 22320  013B4E  0009               	tblrd		*+
 22321  013B50  CFF5 F16F          	movff	tablat,?_scale
 22322  013B54  0009               	tblrd		*+
 22323  013B56  CFF5 F170          	movff	tablat,?_scale+1
 22324  013B5A  0009               	tblrd		*+
 22325  013B5C  CFF5 F171          	movff	tablat,?_scale+2
 22326  013B60  000A               	tblrd		*-
 22327  013B62  CFF5 F172          	movff	tablat,?_scale+3
 22328                           
 22329                           ; BSR set to: 1
 22330  013B66  0012               	return	
 22331  013B68                     l1520:
 22332                           
 22333                           ; BSR set to: 1
 22334                           ;doprnt.c: 435: }
 22335                           ;doprnt.c: 436: if(scl>=110)
 22336                           
 22337                           ; BSR set to: 1
 22338  013B68  5177               	movf	scale@scl& (0+255),w,b
 22339  013B6A  0A80               	xorlw	128
 22340  013B6C  0F12               	addlw	-238
 22341  013B6E  A0D8               	btfss	status,0,c
 22342  013B70  D0A5               	goto	l1525
 22343                           
 22344                           ; BSR set to: 1
 22345                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 22346  013B72  0E00               	movlw	0
 22347  013B74  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22348  013B76  0E0A               	movlw	10
 22349  013B78  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22350  013B7A  0E00               	movlw	0
 22351  013B7C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22352  013B7E  0E64               	movlw	100
 22353  013B80  6F19               	movwf	___awmod@divisor& (0+255),b
 22354  013B82  5177               	movf	scale@scl& (0+255),w,b
 22355  013B84  6F17               	movwf	___awmod@dividend& (0+255),b
 22356  013B86  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22357  013B88  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22358  013B8A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22359  013B8C  ECAC  F0C2         	call	___awmod	;wreg free
 22360  013B90  C117  F11D         	movff	?___awmod,___awdiv@dividend
 22361  013B94  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 22362  013B98  EC29  F0C1         	call	___awdiv	;wreg free
 22363  013B9C  0101               	movlb	1	; () banked
 22364  013B9E  90D8               	bcf	status,0,c
 22365  013BA0  371D               	rlcf	?___awdiv& (0+255),f,b
 22366  013BA2  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22367  013BA4  90D8               	bcf	status,0,c
 22368  013BA6  371D               	rlcf	?___awdiv& (0+255),f,b
 22369  013BA8  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22370  013BAA  0E24               	movlw	36
 22371  013BAC  271D               	addwf	?___awdiv& (0+255),f,b
 22372  013BAE  0E00               	movlw	0
 22373  013BB0  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22374  013BB2  0E43               	movlw	low __powers_
 22375  013BB4  251D               	addwf	?___awdiv& (0+255),w,b
 22376  013BB6  6EF6               	movwf	tblptrl,c
 22377  013BB8  0ED8               	movlw	high __powers_
 22378  013BBA  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22379  013BBC  6EF7               	movwf	tblptrh,c
 22380  013BBE                     	if	1	;There are 3 active tblptr bytes
 22381  013BBE  6AF8               	clrf	tblptru,c
 22382  013BC0  0E00               	movlw	low (__mediumconst shr (0+16))
 22383  013BC2  22F8               	addwfc	tblptru,f,c
 22384  013BC4                     	endif
 22385  013BC4  0009               	tblrd		*+
 22386  013BC6  CFF5 F15A          	movff	tablat,___flmul@a
 22387  013BCA  0009               	tblrd		*+
 22388  013BCC  CFF5 F15B          	movff	tablat,___flmul@a+1
 22389  013BD0  0009               	tblrd		*+
 22390  013BD2  CFF5 F15C          	movff	tablat,___flmul@a+2
 22391  013BD6  000A               	tblrd		*-
 22392  013BD8  CFF5 F15D          	movff	tablat,___flmul@a+3
 22393  013BDC  0E00               	movlw	0
 22394  013BDE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22395  013BE0  0E64               	movlw	100
 22396  013BE2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22397  013BE4  5177               	movf	scale@scl& (0+255),w,b
 22398  013BE6  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22399  013BE8  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22400  013BEA  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22401  013BEC  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22402  013BEE  EC29  F0C1         	call	___awdiv	;wreg free
 22403  013BF2  0101               	movlb	1	; () banked
 22404  013BF4  90D8               	bcf	status,0,c
 22405  013BF6  371D               	rlcf	?___awdiv& (0+255),f,b
 22406  013BF8  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22407  013BFA  90D8               	bcf	status,0,c
 22408  013BFC  371D               	rlcf	?___awdiv& (0+255),f,b
 22409  013BFE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22410  013C00  0E48               	movlw	72
 22411  013C02  271D               	addwf	?___awdiv& (0+255),f,b
 22412  013C04  0E00               	movlw	0
 22413  013C06  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22414  013C08  0E43               	movlw	low __powers_
 22415  013C0A  251D               	addwf	?___awdiv& (0+255),w,b
 22416  013C0C  6EF6               	movwf	tblptrl,c
 22417  013C0E  0ED8               	movlw	high __powers_
 22418  013C10  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22419  013C12  6EF7               	movwf	tblptrh,c
 22420  013C14                     	if	1	;There are 3 active tblptr bytes
 22421  013C14  6AF8               	clrf	tblptru,c
 22422  013C16  0E00               	movlw	low (__mediumconst shr (0+16))
 22423  013C18  22F8               	addwfc	tblptru,f,c
 22424  013C1A                     	endif
 22425  013C1A  0009               	tblrd		*+
 22426  013C1C  CFF5 F156          	movff	tablat,___flmul@b
 22427  013C20  0009               	tblrd		*+
 22428  013C22  CFF5 F157          	movff	tablat,___flmul@b+1
 22429  013C26  0009               	tblrd		*+
 22430  013C28  CFF5 F158          	movff	tablat,___flmul@b+2
 22431  013C2C  000A               	tblrd		*-
 22432  013C2E  CFF5 F159          	movff	tablat,___flmul@b+3
 22433  013C32  ECCE  F0A2         	call	___flmul	;wreg free
 22434  013C36  C156  F173         	movff	?___flmul,_scale$4168
 22435  013C3A  C157  F174         	movff	?___flmul+1,_scale$4168+1
 22436  013C3E  C158  F175         	movff	?___flmul+2,_scale$4168+2
 22437  013C42  C159  F176         	movff	?___flmul+3,_scale$4168+3
 22438                           
 22439                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 22440  013C46  C173  F156         	movff	_scale$4168,___flmul@b
 22441  013C4A  C174  F157         	movff	_scale$4168+1,___flmul@b+1
 22442  013C4E  C175  F158         	movff	_scale$4168+2,___flmul@b+2
 22443  013C52  C176  F159         	movff	_scale$4168+3,___flmul@b+3
 22444  013C56  0E00               	movlw	0
 22445  013C58  0101               	movlb	1	; () banked
 22446  013C5A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22447  013C5C  0E0A               	movlw	10
 22448  013C5E  6F19               	movwf	___awmod@divisor& (0+255),b
 22449  013C60  5177               	movf	scale@scl& (0+255),w,b
 22450  013C62  6F17               	movwf	___awmod@dividend& (0+255),b
 22451  013C64  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22452  013C66  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22453  013C68  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22454  013C6A  ECAC  F0C2         	call	___awmod	;wreg free
 22455  013C6E  0101               	movlb	1	; () banked
 22456  013C70  90D8               	bcf	status,0,c
 22457  013C72  3717               	rlcf	?___awmod& (0+255),f,b
 22458  013C74  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22459  013C76  90D8               	bcf	status,0,c
 22460  013C78  3717               	rlcf	?___awmod& (0+255),f,b
 22461  013C7A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22462  013C7C  0E43               	movlw	low __powers_
 22463  013C7E  2517               	addwf	?___awmod& (0+255),w,b
 22464  013C80  6EF6               	movwf	tblptrl,c
 22465  013C82  0ED8               	movlw	high __powers_
 22466  013C84  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22467  013C86  6EF7               	movwf	tblptrh,c
 22468  013C88                     	if	1	;There are 3 active tblptr bytes
 22469  013C88  6AF8               	clrf	tblptru,c
 22470  013C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 22471  013C8C  22F8               	addwfc	tblptru,f,c
 22472  013C8E                     	endif
 22473  013C8E  0009               	tblrd		*+
 22474  013C90  CFF5 F15A          	movff	tablat,___flmul@a
 22475  013C94  0009               	tblrd		*+
 22476  013C96  CFF5 F15B          	movff	tablat,___flmul@a+1
 22477  013C9A  0009               	tblrd		*+
 22478  013C9C  CFF5 F15C          	movff	tablat,___flmul@a+2
 22479  013CA0  000A               	tblrd		*-
 22480  013CA2  CFF5 F15D          	movff	tablat,___flmul@a+3
 22481  013CA6  ECCE  F0A2         	call	___flmul	;wreg free
 22482  013CAA  C156  F16F         	movff	?___flmul,?_scale
 22483  013CAE  C157  F170         	movff	?___flmul+1,?_scale+1
 22484  013CB2  C158  F171         	movff	?___flmul+2,?_scale+2
 22485  013CB6  C159  F172         	movff	?___flmul+3,?_scale+3
 22486  013CBA  0012               	return	
 22487  013CBC                     l1525:
 22488                           
 22489                           ;doprnt.c: 438: else if(scl > 10)
 22490  013CBC  0101               	movlb	1	; () banked
 22491  013CBE  5177               	movf	scale@scl& (0+255),w,b
 22492  013CC0  0A80               	xorlw	128
 22493  013CC2  0F75               	addlw	-139
 22494  013CC4  A0D8               	btfss	status,0,c
 22495  013CC6  D05D               	goto	l1527
 22496                           
 22497                           ; BSR set to: 1
 22498                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 22499  013CC8  0E00               	movlw	0
 22500  013CCA  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22501  013CCC  0E0A               	movlw	10
 22502  013CCE  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22503  013CD0  5177               	movf	scale@scl& (0+255),w,b
 22504  013CD2  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22505  013CD4  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22506  013CD6  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22507  013CD8  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22508  013CDA  EC29  F0C1         	call	___awdiv	;wreg free
 22509  013CDE  0101               	movlb	1	; () banked
 22510  013CE0  90D8               	bcf	status,0,c
 22511  013CE2  371D               	rlcf	?___awdiv& (0+255),f,b
 22512  013CE4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22513  013CE6  90D8               	bcf	status,0,c
 22514  013CE8  371D               	rlcf	?___awdiv& (0+255),f,b
 22515  013CEA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22516  013CEC  0E24               	movlw	36
 22517  013CEE  271D               	addwf	?___awdiv& (0+255),f,b
 22518  013CF0  0E00               	movlw	0
 22519  013CF2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22520  013CF4  0E43               	movlw	low __powers_
 22521  013CF6  251D               	addwf	?___awdiv& (0+255),w,b
 22522  013CF8  6EF6               	movwf	tblptrl,c
 22523  013CFA  0ED8               	movlw	high __powers_
 22524  013CFC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22525  013CFE  6EF7               	movwf	tblptrh,c
 22526  013D00                     	if	1	;There are 3 active tblptr bytes
 22527  013D00  6AF8               	clrf	tblptru,c
 22528  013D02  0E00               	movlw	low (__mediumconst shr (0+16))
 22529  013D04  22F8               	addwfc	tblptru,f,c
 22530  013D06                     	endif
 22531  013D06  0009               	tblrd		*+
 22532  013D08  CFF5 F156          	movff	tablat,___flmul@b
 22533  013D0C  0009               	tblrd		*+
 22534  013D0E  CFF5 F157          	movff	tablat,___flmul@b+1
 22535  013D12  0009               	tblrd		*+
 22536  013D14  CFF5 F158          	movff	tablat,___flmul@b+2
 22537  013D18  000A               	tblrd		*-
 22538  013D1A  CFF5 F159          	movff	tablat,___flmul@b+3
 22539  013D1E  0E00               	movlw	0
 22540  013D20  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22541  013D22  0E0A               	movlw	10
 22542  013D24  6F19               	movwf	___awmod@divisor& (0+255),b
 22543  013D26  5177               	movf	scale@scl& (0+255),w,b
 22544  013D28  6F17               	movwf	___awmod@dividend& (0+255),b
 22545  013D2A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22546  013D2C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22547  013D2E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22548  013D30  ECAC  F0C2         	call	___awmod	;wreg free
 22549  013D34  0101               	movlb	1	; () banked
 22550  013D36  90D8               	bcf	status,0,c
 22551  013D38  3717               	rlcf	?___awmod& (0+255),f,b
 22552  013D3A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22553  013D3C  90D8               	bcf	status,0,c
 22554  013D3E  3717               	rlcf	?___awmod& (0+255),f,b
 22555  013D40  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22556  013D42  0E43               	movlw	low __powers_
 22557  013D44  2517               	addwf	?___awmod& (0+255),w,b
 22558  013D46  6EF6               	movwf	tblptrl,c
 22559  013D48  0ED8               	movlw	high __powers_
 22560  013D4A  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22561  013D4C  6EF7               	movwf	tblptrh,c
 22562  013D4E                     	if	1	;There are 3 active tblptr bytes
 22563  013D4E  6AF8               	clrf	tblptru,c
 22564  013D50  0E00               	movlw	low (__mediumconst shr (0+16))
 22565  013D52  22F8               	addwfc	tblptru,f,c
 22566  013D54                     	endif
 22567  013D54  0009               	tblrd		*+
 22568  013D56  CFF5 F15A          	movff	tablat,___flmul@a
 22569  013D5A  0009               	tblrd		*+
 22570  013D5C  CFF5 F15B          	movff	tablat,___flmul@a+1
 22571  013D60  0009               	tblrd		*+
 22572  013D62  CFF5 F15C          	movff	tablat,___flmul@a+2
 22573  013D66  000A               	tblrd		*-
 22574  013D68  CFF5 F15D          	movff	tablat,___flmul@a+3
 22575  013D6C  ECCE  F0A2         	call	___flmul	;wreg free
 22576  013D70  C156  F16F         	movff	?___flmul,?_scale
 22577  013D74  C157  F170         	movff	?___flmul+1,?_scale+1
 22578  013D78  C158  F171         	movff	?___flmul+2,?_scale+2
 22579  013D7C  C159  F172         	movff	?___flmul+3,?_scale+3
 22580  013D80  0012               	return	
 22581  013D82                     l1527:
 22582                           
 22583                           ;doprnt.c: 440: return _powers_[scl];
 22584  013D82  0101               	movlb	1	; () banked
 22585  013D84  5177               	movf	scale@scl& (0+255),w,b
 22586  013D86  0D04               	mullw	4
 22587  013D88  0E43               	movlw	low __powers_
 22588  013D8A  24F3               	addwf	prodl,w,c
 22589  013D8C  6EF6               	movwf	tblptrl,c
 22590  013D8E  0ED8               	movlw	high __powers_
 22591  013D90  20F4               	addwfc	prodh,w,c
 22592  013D92  6EF7               	movwf	tblptrh,c
 22593  013D94                     	if	1	;There are 3 active tblptr bytes
 22594  013D94  6AF8               	clrf	tblptru,c
 22595  013D96  0E00               	movlw	low (__mediumconst shr (0+16))
 22596  013D98  22F8               	addwfc	tblptru,f,c
 22597  013D9A                     	endif
 22598  013D9A  0009               	tblrd		*+
 22599  013D9C  CFF5 F16F          	movff	tablat,?_scale
 22600  013DA0  0009               	tblrd		*+
 22601  013DA2  CFF5 F170          	movff	tablat,?_scale+1
 22602  013DA6  0009               	tblrd		*+
 22603  013DA8  CFF5 F171          	movff	tablat,?_scale+2
 22604  013DAC  000A               	tblrd		*-
 22605  013DAE  CFF5 F172          	movff	tablat,?_scale+3
 22606  013DB2  0012               	return	
 22607  013DB4                     __end_of_scale:
 22608                           	opt stack 0
 22609                           tblptru	equ	0xFF8
 22610                           tblptrh	equ	0xFF7
 22611                           tblptrl	equ	0xFF6
 22612                           tablat	equ	0xFF5
 22613                           prodh	equ	0xFF4
 22614                           prodl	equ	0xFF3
 22615                           intcon	equ	0xFF2
 22616                           indf0	equ	0xFEF
 22617                           postinc0	equ	0xFEE
 22618                           fsr0h	equ	0xFEA
 22619                           fsr0l	equ	0xFE9
 22620                           wreg	equ	0xFE8
 22621                           indf1	equ	0xFE7
 22622                           postdec1	equ	0xFE5
 22623                           plusw1	equ	0xFE3
 22624                           fsr1h	equ	0xFE2
 22625                           fsr1l	equ	0xFE1
 22626                           indf2	equ	0xFDF
 22627                           postinc2	equ	0xFDE
 22628                           postdec2	equ	0xFDD
 22629                           plusw2	equ	0xFDB
 22630                           fsr2h	equ	0xFDA
 22631                           fsr2l	equ	0xFD9
 22632                           status	equ	0xFD8
 22633                           
 22634 ;; *************** function _putch *****************
 22635 ;; Defined at:
 22636 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 22637 ;; Parameters:    Size  Location     Type
 22638 ;;  txData          1    wreg     unsigned char 
 22639 ;; Auto vars:     Size  Location     Type
 22640 ;;  txData          1   24[BANK1 ] unsigned char 
 22641 ;; Return value:  Size  Location     Type
 22642 ;;                  1    wreg      void 
 22643 ;; Registers used:
 22644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22645 ;; Tracked objects:
 22646 ;;		On entry : 0/0
 22647 ;;		On exit  : 0/0
 22648 ;;		Unchanged: 0/0
 22649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22651 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22653 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22654 ;;Total ram usage:        1 bytes
 22655 ;; Hardware stack levels used:    1
 22656 ;; Hardware stack levels required when called:   14
 22657 ;; This function calls:
 22658 ;;		_EUSART2_Write
 22659 ;; This function is called by:
 22660 ;;		_printf
 22661 ;; This function uses a non-reentrant model
 22662 ;;
 22663                           
 22664                           	psect	text31
 22665  01938C                     __ptext31:
 22666                           	opt stack 0
 22667  01938C                     _putch:
 22668                           	opt stack 13
 22669                           
 22670                           ;incstack = 0
 22671                           ;putch@txData stored from wreg
 22672  01938C  0101               	movlb	1	; () banked
 22673  01938E  6F18               	movwf	putch@txData& (0+255),b
 22674                           
 22675                           ;eusart2.c: 195: EUSART2_Write(txData);
 22676  019390  0101               	movlb	1	; () banked
 22677  019392  5118               	movf	putch@txData& (0+255),w,b
 22678  019394  EC9F  F0C5         	call	_EUSART2_Write
 22679  019398  0012               	return		;funcret
 22680  01939A                     __end_of_putch:
 22681                           	opt stack 0
 22682                           tblptru	equ	0xFF8
 22683                           tblptrh	equ	0xFF7
 22684                           tblptrl	equ	0xFF6
 22685                           tablat	equ	0xFF5
 22686                           prodh	equ	0xFF4
 22687                           prodl	equ	0xFF3
 22688                           intcon	equ	0xFF2
 22689                           indf0	equ	0xFEF
 22690                           postinc0	equ	0xFEE
 22691                           fsr0h	equ	0xFEA
 22692                           fsr0l	equ	0xFE9
 22693                           wreg	equ	0xFE8
 22694                           indf1	equ	0xFE7
 22695                           postdec1	equ	0xFE5
 22696                           plusw1	equ	0xFE3
 22697                           fsr1h	equ	0xFE2
 22698                           fsr1l	equ	0xFE1
 22699                           indf2	equ	0xFDF
 22700                           postinc2	equ	0xFDE
 22701                           postdec2	equ	0xFDD
 22702                           plusw2	equ	0xFDB
 22703                           fsr2h	equ	0xFDA
 22704                           fsr2l	equ	0xFD9
 22705                           status	equ	0xFD8
 22706                           
 22707 ;; *************** function _EUSART2_Write *****************
 22708 ;; Defined at:
 22709 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 22710 ;; Parameters:    Size  Location     Type
 22711 ;;  txData          1    wreg     unsigned char 
 22712 ;; Auto vars:     Size  Location     Type
 22713 ;;  txData          1   23[BANK1 ] unsigned char 
 22714 ;; Return value:  Size  Location     Type
 22715 ;;                  1    wreg      void 
 22716 ;; Registers used:
 22717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22718 ;; Tracked objects:
 22719 ;;		On entry : 0/0
 22720 ;;		On exit  : 0/0
 22721 ;;		Unchanged: 0/0
 22722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22724 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22726 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22727 ;;Total ram usage:        1 bytes
 22728 ;; Hardware stack levels used:    1
 22729 ;; Hardware stack levels required when called:   13
 22730 ;; This function calls:
 22731 ;;		Nothing
 22732 ;; This function is called by:
 22733 ;;		_putch
 22734 ;; This function uses a non-reentrant model
 22735 ;;
 22736                           
 22737                           	psect	text32
 22738  018B3E                     __ptext32:
 22739                           	opt stack 0
 22740  018B3E                     _EUSART2_Write:
 22741                           	opt stack 13
 22742                           
 22743                           ;incstack = 0
 22744                           ;EUSART2_Write@txData stored from wreg
 22745  018B3E  0101               	movlb	1	; () banked
 22746  018B40  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 22747                           
 22748                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 22749  018B42  D002               	goto	l402
 22750  018B44                     l403:
 22751                           
 22752                           ; BSR set to: 1
 22753  018B44  0004               	clrwdt		;# 
 22754                           
 22755                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 22756  018B46  827E               	bsf	3966,1,c	;volatile
 22757  018B48                     l402:
 22758  018B48  0101               	movlb	1	; () banked
 22759  018B4A  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 22760  018B4C  B4D8               	btfsc	status,2,c
 22761  018B4E  D7FA               	goto	l403
 22762                           
 22763                           ; BSR set to: 1
 22764                           ;eusart2.c: 167: }
 22765                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 22766  018B50  927E               	bcf	3966,1,c	;volatile
 22767                           
 22768                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 22769  018B52  010E               	movlb	14	; () banked
 22770  018B54  BD2C               	btfsc	44,6,b	;volatile
 22771  018B56  D003               	goto	l405
 22772                           
 22773                           ; BSR set to: 14
 22774                           ;eusart2.c: 172: {
 22775                           ;eusart2.c: 173: TX2REG = txData;
 22776  018B58  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 22777                           
 22778                           ;eusart2.c: 174: }
 22779  018B5C  D013               	goto	l406
 22780  018B5E                     l405:
 22781                           
 22782                           ; BSR set to: 14
 22783                           ;eusart2.c: 175: else
 22784                           ;eusart2.c: 176: {
 22785                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 22786  018B5E  9D2C               	bcf	44,6,b	;volatile
 22787                           
 22788                           ; BSR set to: 14
 22789                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 22790  018B60  0101               	movlb	1	; () banked
 22791  018B62  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 22792  018B64  0D01               	mullw	1
 22793  018B66  0E00               	movlw	low _eusart2TxBuffer
 22794  018B68  24F3               	addwf	prodl,w,c
 22795  018B6A  6ED9               	movwf	fsr2l,c
 22796  018B6C  0E03               	movlw	high _eusart2TxBuffer
 22797  018B6E  20F4               	addwfc	prodh,w,c
 22798  018B70  6EDA               	movwf	fsr2h,c
 22799  018B72  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 22800                           
 22801                           ; BSR set to: 1
 22802  018B76  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 22803                           
 22804                           ; BSR set to: 1
 22805                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 22806  018B78  0E7F               	movlw	127
 22807  018B7A  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 22808  018B7C  D002               	goto	l407
 22809                           
 22810                           ; BSR set to: 1
 22811                           ;eusart2.c: 180: {
 22812                           ;eusart2.c: 181: eusart2TxHead = 0;
 22813  018B7E  0E00               	movlw	0
 22814  018B80  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 22815  018B82                     l407:
 22816                           
 22817                           ; BSR set to: 1
 22818                           ;eusart2.c: 182: }
 22819                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 22820                           
 22821                           ; BSR set to: 1
 22822  018B82  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 22823  018B84                     l406:
 22824                           
 22825                           ;eusart2.c: 184: }
 22826                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 22827                           
 22828                           ; BSR set to: 1
 22829  018B84  010E               	movlb	14	; () banked
 22830  018B86  8D2C               	bsf	44,6,b	;volatile
 22831                           
 22832                           ; BSR set to: 14
 22833  018B88  0012               	return		;funcret
 22834  018B8A                     __end_of_EUSART2_Write:
 22835                           	opt stack 0
 22836                           tblptru	equ	0xFF8
 22837                           tblptrh	equ	0xFF7
 22838                           tblptrl	equ	0xFF6
 22839                           tablat	equ	0xFF5
 22840                           prodh	equ	0xFF4
 22841                           prodl	equ	0xFF3
 22842                           intcon	equ	0xFF2
 22843                           indf0	equ	0xFEF
 22844                           postinc0	equ	0xFEE
 22845                           fsr0h	equ	0xFEA
 22846                           fsr0l	equ	0xFE9
 22847                           wreg	equ	0xFE8
 22848                           indf1	equ	0xFE7
 22849                           postdec1	equ	0xFE5
 22850                           plusw1	equ	0xFE3
 22851                           fsr1h	equ	0xFE2
 22852                           fsr1l	equ	0xFE1
 22853                           indf2	equ	0xFDF
 22854                           postinc2	equ	0xFDE
 22855                           postdec2	equ	0xFDD
 22856                           plusw2	equ	0xFDB
 22857                           fsr2h	equ	0xFDA
 22858                           fsr2l	equ	0xFD9
 22859                           status	equ	0xFD8
 22860                           
 22861 ;; *************** function _isdigit *****************
 22862 ;; Defined at:
 22863 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 22864 ;; Parameters:    Size  Location     Type
 22865 ;;  c               1    wreg     unsigned char 
 22866 ;; Auto vars:     Size  Location     Type
 22867 ;;  c               1   25[BANK1 ] unsigned char 
 22868 ;; Return value:  Size  Location     Type
 22869 ;;		None               void
 22870 ;; Registers used:
 22871 ;;		wreg, status,2, status,0
 22872 ;; Tracked objects:
 22873 ;;		On entry : 0/0
 22874 ;;		On exit  : 0/0
 22875 ;;		Unchanged: 0/0
 22876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22878 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22879 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22880 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22881 ;;Total ram usage:        3 bytes
 22882 ;; Hardware stack levels used:    1
 22883 ;; Hardware stack levels required when called:   13
 22884 ;; This function calls:
 22885 ;;		Nothing
 22886 ;; This function is called by:
 22887 ;;		_printf
 22888 ;;		_atoi
 22889 ;; This function uses a non-reentrant model
 22890 ;;
 22891                           
 22892                           	psect	text33
 22893  0191CC                     __ptext33:
 22894                           	opt stack 0
 22895  0191CC                     _isdigit:
 22896                           	opt stack 14
 22897                           
 22898                           ; BSR set to: 14
 22899                           ;incstack = 0
 22900                           ;isdigit@c stored from wreg
 22901  0191CC  0101               	movlb	1	; () banked
 22902  0191CE  6F19               	movwf	isdigit@c& (0+255),b
 22903  0191D0  0E00               	movlw	0
 22904  0191D2  0101               	movlb	1	; () banked
 22905  0191D4  6F18               	movwf	_isdigit$3443& (0+255),b
 22906                           
 22907                           ; BSR set to: 1
 22908  0191D6  0E3A               	movlw	58
 22909  0191D8  6119               	cpfslt	isdigit@c& (0+255),b
 22910  0191DA  D005               	goto	l2098
 22911                           
 22912                           ; BSR set to: 1
 22913  0191DC  0E2F               	movlw	47
 22914  0191DE  6519               	cpfsgt	isdigit@c& (0+255),b
 22915  0191E0  D002               	goto	l2098
 22916                           
 22917                           ; BSR set to: 1
 22918  0191E2  0E01               	movlw	1
 22919  0191E4  6F18               	movwf	_isdigit$3443& (0+255),b
 22920  0191E6                     l2098:
 22921                           
 22922                           ; BSR set to: 1
 22923                           
 22924                           ; BSR set to: 1
 22925  0191E6  C118  F117         	movff	_isdigit$3443,??_isdigit
 22926  0191EA  3117               	rrcf	??_isdigit& (0+255),w,b
 22927  0191EC  0012               	return	
 22928  0191EE                     __end_of_isdigit:
 22929                           	opt stack 0
 22930                           tblptru	equ	0xFF8
 22931                           tblptrh	equ	0xFF7
 22932                           tblptrl	equ	0xFF6
 22933                           tablat	equ	0xFF5
 22934                           prodh	equ	0xFF4
 22935                           prodl	equ	0xFF3
 22936                           intcon	equ	0xFF2
 22937                           indf0	equ	0xFEF
 22938                           postinc0	equ	0xFEE
 22939                           fsr0h	equ	0xFEA
 22940                           fsr0l	equ	0xFE9
 22941                           wreg	equ	0xFE8
 22942                           indf1	equ	0xFE7
 22943                           postdec1	equ	0xFE5
 22944                           plusw1	equ	0xFE3
 22945                           fsr1h	equ	0xFE2
 22946                           fsr1l	equ	0xFE1
 22947                           indf2	equ	0xFDF
 22948                           postinc2	equ	0xFDE
 22949                           postdec2	equ	0xFDD
 22950                           plusw2	equ	0xFDB
 22951                           fsr2h	equ	0xFDA
 22952                           fsr2l	equ	0xFD9
 22953                           status	equ	0xFD8
 22954                           
 22955 ;; *************** function _fround *****************
 22956 ;; Defined at:
 22957 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 22958 ;; Parameters:    Size  Location     Type
 22959 ;;  prec            1    wreg     unsigned char 
 22960 ;; Auto vars:     Size  Location     Type
 22961 ;;  prec            1  123[BANK1 ] unsigned char 
 22962 ;; Return value:  Size  Location     Type
 22963 ;;                  4  111[BANK1 ] unsigned char 
 22964 ;; Registers used:
 22965 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22966 ;; Tracked objects:
 22967 ;;		On entry : 0/0
 22968 ;;		On exit  : 0/0
 22969 ;;		Unchanged: 0/0
 22970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22971 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22972 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22974 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22975 ;;Total ram usage:       13 bytes
 22976 ;; Hardware stack levels used:    1
 22977 ;; Hardware stack levels required when called:   14
 22978 ;; This function calls:
 22979 ;;		___awdiv
 22980 ;;		___awmod
 22981 ;;		___flmul
 22982 ;; This function is called by:
 22983 ;;		_printf
 22984 ;; This function uses a non-reentrant model
 22985 ;;
 22986                           
 22987                           	psect	text34
 22988  015B80                     __ptext34:
 22989                           	opt stack 0
 22990  015B80                     _fround:
 22991                           	opt stack 13
 22992                           
 22993                           ; BSR set to: 1
 22994                           ;incstack = 0
 22995                           ;fround@prec stored from wreg
 22996  015B80  0101               	movlb	1	; () banked
 22997  015B82  6F7B               	movwf	fround@prec& (0+255),b
 22998                           
 22999                           ;doprnt.c: 413: if(prec>=110)
 23000  015B84  0E6D               	movlw	109
 23001  015B86  0101               	movlb	1	; () banked
 23002  015B88  657B               	cpfsgt	fround@prec& (0+255),b
 23003  015B8A  D0BA               	goto	l1514
 23004                           
 23005                           ; BSR set to: 1
 23006                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23007  015B8C  0E00               	movlw	0
 23008  015B8E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23009  015B90  0E0A               	movlw	10
 23010  015B92  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23011  015B94  0E00               	movlw	0
 23012  015B96  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23013  015B98  0E64               	movlw	100
 23014  015B9A  6F19               	movwf	___awmod@divisor& (0+255),b
 23015  015B9C  C17B  F117         	movff	fround@prec,___awmod@dividend
 23016  015BA0  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23017  015BA2  ECAC  F0C2         	call	___awmod	;wreg free
 23018  015BA6  C117  F11D         	movff	?___awmod,___awdiv@dividend
 23019  015BAA  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 23020  015BAE  EC29  F0C1         	call	___awdiv	;wreg free
 23021  015BB2  0101               	movlb	1	; () banked
 23022  015BB4  90D8               	bcf	status,0,c
 23023  015BB6  371D               	rlcf	?___awdiv& (0+255),f,b
 23024  015BB8  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23025  015BBA  90D8               	bcf	status,0,c
 23026  015BBC  371D               	rlcf	?___awdiv& (0+255),f,b
 23027  015BBE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23028  015BC0  0E24               	movlw	36
 23029  015BC2  271D               	addwf	?___awdiv& (0+255),f,b
 23030  015BC4  0E00               	movlw	0
 23031  015BC6  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23032  015BC8  0E77               	movlw	low __npowers_
 23033  015BCA  251D               	addwf	?___awdiv& (0+255),w,b
 23034  015BCC  6EF6               	movwf	tblptrl,c
 23035  015BCE  0ED8               	movlw	high __npowers_
 23036  015BD0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23037  015BD2  6EF7               	movwf	tblptrh,c
 23038  015BD4                     	if	1	;There are 3 active tblptr bytes
 23039  015BD4  6AF8               	clrf	tblptru,c
 23040  015BD6  0E00               	movlw	low (__mediumconst shr (0+16))
 23041  015BD8  22F8               	addwfc	tblptru,f,c
 23042  015BDA                     	endif
 23043  015BDA  0009               	tblrd		*+
 23044  015BDC  CFF5 F15A          	movff	tablat,___flmul@a
 23045  015BE0  0009               	tblrd		*+
 23046  015BE2  CFF5 F15B          	movff	tablat,___flmul@a+1
 23047  015BE6  0009               	tblrd		*+
 23048  015BE8  CFF5 F15C          	movff	tablat,___flmul@a+2
 23049  015BEC  000A               	tblrd		*-
 23050  015BEE  CFF5 F15D          	movff	tablat,___flmul@a+3
 23051  015BF2  0E00               	movlw	0
 23052  015BF4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23053  015BF6  0E64               	movlw	100
 23054  015BF8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23055  015BFA  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 23056  015BFE  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 23057  015C00  EC29  F0C1         	call	___awdiv	;wreg free
 23058  015C04  0101               	movlb	1	; () banked
 23059  015C06  90D8               	bcf	status,0,c
 23060  015C08  371D               	rlcf	?___awdiv& (0+255),f,b
 23061  015C0A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23062  015C0C  90D8               	bcf	status,0,c
 23063  015C0E  371D               	rlcf	?___awdiv& (0+255),f,b
 23064  015C10  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23065  015C12  0E48               	movlw	72
 23066  015C14  271D               	addwf	?___awdiv& (0+255),f,b
 23067  015C16  0E00               	movlw	0
 23068  015C18  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23069  015C1A  0E77               	movlw	low __npowers_
 23070  015C1C  251D               	addwf	?___awdiv& (0+255),w,b
 23071  015C1E  6EF6               	movwf	tblptrl,c
 23072  015C20  0ED8               	movlw	high __npowers_
 23073  015C22  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23074  015C24  6EF7               	movwf	tblptrh,c
 23075  015C26                     	if	1	;There are 3 active tblptr bytes
 23076  015C26  6AF8               	clrf	tblptru,c
 23077  015C28  0E00               	movlw	low (__mediumconst shr (0+16))
 23078  015C2A  22F8               	addwfc	tblptru,f,c
 23079  015C2C                     	endif
 23080  015C2C  0009               	tblrd		*+
 23081  015C2E  CFF5 F156          	movff	tablat,___flmul@b
 23082  015C32  0009               	tblrd		*+
 23083  015C34  CFF5 F157          	movff	tablat,___flmul@b+1
 23084  015C38  0009               	tblrd		*+
 23085  015C3A  CFF5 F158          	movff	tablat,___flmul@b+2
 23086  015C3E  000A               	tblrd		*-
 23087  015C40  CFF5 F159          	movff	tablat,___flmul@b+3
 23088  015C44  ECCE  F0A2         	call	___flmul	;wreg free
 23089  015C48  C156  F177         	movff	?___flmul,_fround$4166
 23090  015C4C  C157  F178         	movff	?___flmul+1,_fround$4166+1
 23091  015C50  C158  F179         	movff	?___flmul+2,_fround$4166+2
 23092  015C54  C159  F17A         	movff	?___flmul+3,_fround$4166+3
 23093                           
 23094                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23095  015C58  0E00               	movlw	0
 23096  015C5A  0101               	movlb	1	; () banked
 23097  015C5C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23098  015C5E  0E0A               	movlw	10
 23099  015C60  6F19               	movwf	___awmod@divisor& (0+255),b
 23100  015C62  C17B  F117         	movff	fround@prec,___awmod@dividend
 23101  015C66  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23102  015C68  ECAC  F0C2         	call	___awmod	;wreg free
 23103  015C6C  0101               	movlb	1	; () banked
 23104  015C6E  90D8               	bcf	status,0,c
 23105  015C70  3717               	rlcf	?___awmod& (0+255),f,b
 23106  015C72  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23107  015C74  90D8               	bcf	status,0,c
 23108  015C76  3717               	rlcf	?___awmod& (0+255),f,b
 23109  015C78  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23110  015C7A  0E77               	movlw	low __npowers_
 23111  015C7C  2517               	addwf	?___awmod& (0+255),w,b
 23112  015C7E  6EF6               	movwf	tblptrl,c
 23113  015C80  0ED8               	movlw	high __npowers_
 23114  015C82  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 23115  015C84  6EF7               	movwf	tblptrh,c
 23116  015C86                     	if	1	;There are 3 active tblptr bytes
 23117  015C86  6AF8               	clrf	tblptru,c
 23118  015C88  0E00               	movlw	low (__mediumconst shr (0+16))
 23119  015C8A  22F8               	addwfc	tblptru,f,c
 23120  015C8C                     	endif
 23121  015C8C  0009               	tblrd		*+
 23122  015C8E  CFF5 F15A          	movff	tablat,___flmul@a
 23123  015C92  0009               	tblrd		*+
 23124  015C94  CFF5 F15B          	movff	tablat,___flmul@a+1
 23125  015C98  0009               	tblrd		*+
 23126  015C9A  CFF5 F15C          	movff	tablat,___flmul@a+2
 23127  015C9E  000A               	tblrd		*-
 23128  015CA0  CFF5 F15D          	movff	tablat,___flmul@a+3
 23129  015CA4  C177  F156         	movff	_fround$4166,___flmul@b
 23130  015CA8  C178  F157         	movff	_fround$4166+1,___flmul@b+1
 23131  015CAC  C179  F158         	movff	_fround$4166+2,___flmul@b+2
 23132  015CB0  C17A  F159         	movff	_fround$4166+3,___flmul@b+3
 23133  015CB4  ECCE  F0A2         	call	___flmul	;wreg free
 23134  015CB8  C156  F173         	movff	?___flmul,_fround$4167
 23135  015CBC  C157  F174         	movff	?___flmul+1,_fround$4167+1
 23136  015CC0  C158  F175         	movff	?___flmul+2,_fround$4167+2
 23137  015CC4  C159  F176         	movff	?___flmul+3,_fround$4167+3
 23138                           
 23139                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23140  015CC8  C173  F156         	movff	_fround$4167,___flmul@b
 23141  015CCC  C174  F157         	movff	_fround$4167+1,___flmul@b+1
 23142  015CD0  C175  F158         	movff	_fround$4167+2,___flmul@b+2
 23143  015CD4  C176  F159         	movff	_fround$4167+3,___flmul@b+3
 23144  015CD8  0E00               	movlw	0
 23145  015CDA  0101               	movlb	1	; () banked
 23146  015CDC  6F5A               	movwf	___flmul@a& (0+255),b
 23147  015CDE  0E00               	movlw	0
 23148  015CE0  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23149  015CE2  0E00               	movlw	0
 23150  015CE4  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23151  015CE6  0E3F               	movlw	63
 23152  015CE8  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23153  015CEA  ECCE  F0A2         	call	___flmul	;wreg free
 23154  015CEE  C156  F16F         	movff	?___flmul,?_fround
 23155  015CF2  C157  F170         	movff	?___flmul+1,?_fround+1
 23156  015CF6  C158  F171         	movff	?___flmul+2,?_fround+2
 23157  015CFA  C159  F172         	movff	?___flmul+3,?_fround+3
 23158  015CFE  0012               	return	
 23159  015D00                     l1514:
 23160                           
 23161                           ;doprnt.c: 415: else if(prec > 10)
 23162  015D00  0E0A               	movlw	10
 23163  015D02  0101               	movlb	1	; () banked
 23164  015D04  657B               	cpfsgt	fround@prec& (0+255),b
 23165  015D06  D074               	goto	l1517
 23166                           
 23167                           ; BSR set to: 1
 23168                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 23169  015D08  0E00               	movlw	0
 23170  015D0A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23171  015D0C  0E0A               	movlw	10
 23172  015D0E  6F19               	movwf	___awmod@divisor& (0+255),b
 23173  015D10  C17B  F117         	movff	fround@prec,___awmod@dividend
 23174  015D14  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23175  015D16  ECAC  F0C2         	call	___awmod	;wreg free
 23176  015D1A  0101               	movlb	1	; () banked
 23177  015D1C  90D8               	bcf	status,0,c
 23178  015D1E  3717               	rlcf	?___awmod& (0+255),f,b
 23179  015D20  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23180  015D22  90D8               	bcf	status,0,c
 23181  015D24  3717               	rlcf	?___awmod& (0+255),f,b
 23182  015D26  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23183  015D28  0E77               	movlw	low __npowers_
 23184  015D2A  2517               	addwf	?___awmod& (0+255),w,b
 23185  015D2C  6EF6               	movwf	tblptrl,c
 23186  015D2E  0ED8               	movlw	high __npowers_
 23187  015D30  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 23188  015D32  6EF7               	movwf	tblptrh,c
 23189  015D34                     	if	1	;There are 3 active tblptr bytes
 23190  015D34  6AF8               	clrf	tblptru,c
 23191  015D36  0E00               	movlw	low (__mediumconst shr (0+16))
 23192  015D38  22F8               	addwfc	tblptru,f,c
 23193  015D3A                     	endif
 23194  015D3A  0009               	tblrd		*+
 23195  015D3C  CFF5 F15A          	movff	tablat,___flmul@a
 23196  015D40  0009               	tblrd		*+
 23197  015D42  CFF5 F15B          	movff	tablat,___flmul@a+1
 23198  015D46  0009               	tblrd		*+
 23199  015D48  CFF5 F15C          	movff	tablat,___flmul@a+2
 23200  015D4C  000A               	tblrd		*-
 23201  015D4E  CFF5 F15D          	movff	tablat,___flmul@a+3
 23202  015D52  0E00               	movlw	0
 23203  015D54  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23204  015D56  0E0A               	movlw	10
 23205  015D58  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23206  015D5A  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 23207  015D5E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 23208  015D60  EC29  F0C1         	call	___awdiv	;wreg free
 23209  015D64  0101               	movlb	1	; () banked
 23210  015D66  90D8               	bcf	status,0,c
 23211  015D68  371D               	rlcf	?___awdiv& (0+255),f,b
 23212  015D6A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23213  015D6C  90D8               	bcf	status,0,c
 23214  015D6E  371D               	rlcf	?___awdiv& (0+255),f,b
 23215  015D70  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23216  015D72  0E24               	movlw	36
 23217  015D74  271D               	addwf	?___awdiv& (0+255),f,b
 23218  015D76  0E00               	movlw	0
 23219  015D78  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23220  015D7A  0E77               	movlw	low __npowers_
 23221  015D7C  251D               	addwf	?___awdiv& (0+255),w,b
 23222  015D7E  6EF6               	movwf	tblptrl,c
 23223  015D80  0ED8               	movlw	high __npowers_
 23224  015D82  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23225  015D84  6EF7               	movwf	tblptrh,c
 23226  015D86                     	if	1	;There are 3 active tblptr bytes
 23227  015D86  6AF8               	clrf	tblptru,c
 23228  015D88  0E00               	movlw	low (__mediumconst shr (0+16))
 23229  015D8A  22F8               	addwfc	tblptru,f,c
 23230  015D8C                     	endif
 23231  015D8C  0009               	tblrd		*+
 23232  015D8E  CFF5 F156          	movff	tablat,___flmul@b
 23233  015D92  0009               	tblrd		*+
 23234  015D94  CFF5 F157          	movff	tablat,___flmul@b+1
 23235  015D98  0009               	tblrd		*+
 23236  015D9A  CFF5 F158          	movff	tablat,___flmul@b+2
 23237  015D9E  000A               	tblrd		*-
 23238  015DA0  CFF5 F159          	movff	tablat,___flmul@b+3
 23239  015DA4  ECCE  F0A2         	call	___flmul	;wreg free
 23240  015DA8  C156  F177         	movff	?___flmul,_fround$4166
 23241  015DAC  C157  F178         	movff	?___flmul+1,_fround$4166+1
 23242  015DB0  C158  F179         	movff	?___flmul+2,_fround$4166+2
 23243  015DB4  C159  F17A         	movff	?___flmul+3,_fround$4166+3
 23244                           
 23245                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 23246  015DB8  C177  F156         	movff	_fround$4166,___flmul@b
 23247  015DBC  C178  F157         	movff	_fround$4166+1,___flmul@b+1
 23248  015DC0  C179  F158         	movff	_fround$4166+2,___flmul@b+2
 23249  015DC4  C17A  F159         	movff	_fround$4166+3,___flmul@b+3
 23250  015DC8  0E00               	movlw	0
 23251  015DCA  0101               	movlb	1	; () banked
 23252  015DCC  6F5A               	movwf	___flmul@a& (0+255),b
 23253  015DCE  0E00               	movlw	0
 23254  015DD0  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23255  015DD2  0E00               	movlw	0
 23256  015DD4  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23257  015DD6  0E3F               	movlw	63
 23258  015DD8  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23259  015DDA  ECCE  F0A2         	call	___flmul	;wreg free
 23260  015DDE  C156  F16F         	movff	?___flmul,?_fround
 23261  015DE2  C157  F170         	movff	?___flmul+1,?_fround+1
 23262  015DE6  C158  F171         	movff	?___flmul+2,?_fround+2
 23263  015DEA  C159  F172         	movff	?___flmul+3,?_fround+3
 23264  015DEE  0012               	return	
 23265  015DF0                     l1517:
 23266                           
 23267                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 23268  015DF0  0101               	movlb	1	; () banked
 23269  015DF2  517B               	movf	fround@prec& (0+255),w,b
 23270  015DF4  0D04               	mullw	4
 23271  015DF6  0E77               	movlw	low __npowers_
 23272  015DF8  24F3               	addwf	prodl,w,c
 23273  015DFA  6EF6               	movwf	tblptrl,c
 23274  015DFC  0ED8               	movlw	high __npowers_
 23275  015DFE  20F4               	addwfc	prodh,w,c
 23276  015E00  6EF7               	movwf	tblptrh,c
 23277  015E02                     	if	1	;There are 3 active tblptr bytes
 23278  015E02  6AF8               	clrf	tblptru,c
 23279  015E04  0E00               	movlw	low (__mediumconst shr (0+16))
 23280  015E06  22F8               	addwfc	tblptru,f,c
 23281  015E08                     	endif
 23282  015E08  0009               	tblrd		*+
 23283  015E0A  CFF5 F156          	movff	tablat,___flmul@b
 23284  015E0E  0009               	tblrd		*+
 23285  015E10  CFF5 F157          	movff	tablat,___flmul@b+1
 23286  015E14  0009               	tblrd		*+
 23287  015E16  CFF5 F158          	movff	tablat,___flmul@b+2
 23288  015E1A  000A               	tblrd		*-
 23289  015E1C  CFF5 F159          	movff	tablat,___flmul@b+3
 23290  015E20  0E00               	movlw	0
 23291  015E22  6F5A               	movwf	___flmul@a& (0+255),b
 23292  015E24  0E00               	movlw	0
 23293  015E26  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23294  015E28  0E00               	movlw	0
 23295  015E2A  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23296  015E2C  0E3F               	movlw	63
 23297  015E2E  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23298  015E30  ECCE  F0A2         	call	___flmul	;wreg free
 23299  015E34  C156  F16F         	movff	?___flmul,?_fround
 23300  015E38  C157  F170         	movff	?___flmul+1,?_fround+1
 23301  015E3C  C158  F171         	movff	?___flmul+2,?_fround+2
 23302  015E40  C159  F172         	movff	?___flmul+3,?_fround+3
 23303  015E44  0012               	return	
 23304  015E46                     __end_of_fround:
 23305                           	opt stack 0
 23306                           tblptru	equ	0xFF8
 23307                           tblptrh	equ	0xFF7
 23308                           tblptrl	equ	0xFF6
 23309                           tablat	equ	0xFF5
 23310                           prodh	equ	0xFF4
 23311                           prodl	equ	0xFF3
 23312                           intcon	equ	0xFF2
 23313                           indf0	equ	0xFEF
 23314                           postinc0	equ	0xFEE
 23315                           fsr0h	equ	0xFEA
 23316                           fsr0l	equ	0xFE9
 23317                           wreg	equ	0xFE8
 23318                           indf1	equ	0xFE7
 23319                           postdec1	equ	0xFE5
 23320                           plusw1	equ	0xFE3
 23321                           fsr1h	equ	0xFE2
 23322                           fsr1l	equ	0xFE1
 23323                           indf2	equ	0xFDF
 23324                           postinc2	equ	0xFDE
 23325                           postdec2	equ	0xFDD
 23326                           plusw2	equ	0xFDB
 23327                           fsr2h	equ	0xFDA
 23328                           fsr2l	equ	0xFD9
 23329                           status	equ	0xFD8
 23330                           
 23331 ;; *************** function ___flmul *****************
 23332 ;; Defined at:
 23333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 23334 ;; Parameters:    Size  Location     Type
 23335 ;;  b               4   86[BANK1 ] unsigned char 
 23336 ;;  a               4   90[BANK1 ] unsigned char 
 23337 ;; Auto vars:     Size  Location     Type
 23338 ;;  prod            4  105[BANK1 ] struct .
 23339 ;;  grs             4  101[BANK1 ] unsigned long 
 23340 ;;  temp            2  109[BANK1 ] struct .
 23341 ;;  bexp            1  100[BANK1 ] unsigned char 
 23342 ;;  aexp            1   99[BANK1 ] unsigned char 
 23343 ;;  sign            1   98[BANK1 ] unsigned char 
 23344 ;; Return value:  Size  Location     Type
 23345 ;;                  4   86[BANK1 ] unsigned char 
 23346 ;; Registers used:
 23347 ;;		wreg, status,2, status,0, prodl, prodh
 23348 ;; Tracked objects:
 23349 ;;		On entry : 0/0
 23350 ;;		On exit  : 0/0
 23351 ;;		Unchanged: 0/0
 23352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23353 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23354 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23355 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23356 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23357 ;;Total ram usage:       25 bytes
 23358 ;; Hardware stack levels used:    1
 23359 ;; Hardware stack levels required when called:   13
 23360 ;; This function calls:
 23361 ;;		Nothing
 23362 ;; This function is called by:
 23363 ;;		_ringBufferLUT
 23364 ;;		_fround
 23365 ;;		_scale
 23366 ;;		_printf
 23367 ;; This function uses a non-reentrant model
 23368 ;;
 23369                           
 23370                           	psect	text35
 23371  01459C                     __ptext35:
 23372                           	opt stack 0
 23373  01459C                     ___flmul:
 23374                           	opt stack 13
 23375                           
 23376                           ;incstack = 0
 23377  01459C  0101               	movlb	1	; () banked
 23378  01459E  5159               	movf	(___flmul@b+3)& (0+255),w,b
 23379  0145A0  0B80               	andlw	128
 23380  0145A2  6F62               	movwf	___flmul@sign& (0+255),b
 23381  0145A4  5159               	movf	(___flmul@b+3)& (0+255),w,b
 23382  0145A6  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 23383  0145A8  6F64               	movwf	___flmul@bexp& (0+255),b
 23384                           
 23385                           ; BSR set to: 1
 23386  0145AA  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 23387                           
 23388                           ; BSR set to: 1
 23389  0145AC  8164               	bsf	___flmul@bexp& (0+255),0,b
 23390                           
 23391                           ; BSR set to: 1
 23392                           
 23393                           ; BSR set to: 1
 23394  0145AE  5164               	movf	___flmul@bexp& (0+255),w,b
 23395  0145B0  B4D8               	btfsc	status,2,c
 23396  0145B2  D00D               	goto	l2312
 23397                           
 23398                           ; BSR set to: 1
 23399  0145B4  2964               	incf	___flmul@bexp& (0+255),w,b
 23400  0145B6  A4D8               	btfss	status,2,c
 23401  0145B8  D008               	goto	l2313
 23402                           
 23403                           ; BSR set to: 1
 23404  0145BA  0E00               	movlw	0
 23405  0145BC  6F56               	movwf	___flmul@b& (0+255),b
 23406  0145BE  0E00               	movlw	0
 23407  0145C0  6F57               	movwf	(___flmul@b+1)& (0+255),b
 23408  0145C2  0E00               	movlw	0
 23409  0145C4  6F58               	movwf	(___flmul@b+2)& (0+255),b
 23410  0145C6  0E00               	movlw	0
 23411  0145C8  6F59               	movwf	(___flmul@b+3)& (0+255),b
 23412  0145CA                     l2313:
 23413                           
 23414                           ; BSR set to: 1
 23415                           
 23416                           ; BSR set to: 1
 23417  0145CA  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 23418  0145CC  D008               	goto	l2314
 23419  0145CE                     l2312:
 23420                           
 23421                           ; BSR set to: 1
 23422                           
 23423                           ; BSR set to: 1
 23424  0145CE  0E00               	movlw	0
 23425  0145D0  6F56               	movwf	___flmul@b& (0+255),b
 23426  0145D2  0E00               	movlw	0
 23427  0145D4  6F57               	movwf	(___flmul@b+1)& (0+255),b
 23428  0145D6  0E00               	movlw	0
 23429  0145D8  6F58               	movwf	(___flmul@b+2)& (0+255),b
 23430  0145DA  0E00               	movlw	0
 23431  0145DC  6F59               	movwf	(___flmul@b+3)& (0+255),b
 23432  0145DE                     l2314:
 23433                           
 23434                           ; BSR set to: 1
 23435                           
 23436                           ; BSR set to: 1
 23437  0145DE  515D               	movf	(___flmul@a+3)& (0+255),w,b
 23438  0145E0  0B80               	andlw	128
 23439  0145E2  1B62               	xorwf	___flmul@sign& (0+255),f,b
 23440                           
 23441                           ; BSR set to: 1
 23442  0145E4  515D               	movf	(___flmul@a+3)& (0+255),w,b
 23443  0145E6  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 23444  0145E8  6F63               	movwf	___flmul@aexp& (0+255),b
 23445                           
 23446                           ; BSR set to: 1
 23447  0145EA  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 23448                           
 23449                           ; BSR set to: 1
 23450  0145EC  8163               	bsf	___flmul@aexp& (0+255),0,b
 23451                           
 23452                           ; BSR set to: 1
 23453                           
 23454                           ; BSR set to: 1
 23455  0145EE  5163               	movf	___flmul@aexp& (0+255),w,b
 23456  0145F0  B4D8               	btfsc	status,2,c
 23457  0145F2  D00D               	goto	l2316
 23458                           
 23459                           ; BSR set to: 1
 23460  0145F4  2963               	incf	___flmul@aexp& (0+255),w,b
 23461  0145F6  A4D8               	btfss	status,2,c
 23462  0145F8  D008               	goto	l2317
 23463                           
 23464                           ; BSR set to: 1
 23465  0145FA  0E00               	movlw	0
 23466  0145FC  6F5A               	movwf	___flmul@a& (0+255),b
 23467  0145FE  0E00               	movlw	0
 23468  014600  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23469  014602  0E00               	movlw	0
 23470  014604  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23471  014606  0E00               	movlw	0
 23472  014608  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23473  01460A                     l2317:
 23474                           
 23475                           ; BSR set to: 1
 23476                           
 23477                           ; BSR set to: 1
 23478  01460A  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 23479  01460C  D008               	goto	l2318
 23480  01460E                     l2316:
 23481                           
 23482                           ; BSR set to: 1
 23483                           
 23484                           ; BSR set to: 1
 23485  01460E  0E00               	movlw	0
 23486  014610  6F5A               	movwf	___flmul@a& (0+255),b
 23487  014612  0E00               	movlw	0
 23488  014614  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23489  014616  0E00               	movlw	0
 23490  014618  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23491  01461A  0E00               	movlw	0
 23492  01461C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23493  01461E                     l2318:
 23494                           
 23495                           ; BSR set to: 1
 23496  01461E  5163               	movf	___flmul@aexp& (0+255),w,b
 23497  014620  B4D8               	btfsc	status,2,c
 23498  014622  D003               	goto	u24190
 23499                           
 23500                           ; BSR set to: 1
 23501  014624  5164               	movf	___flmul@bexp& (0+255),w,b
 23502  014626  A4D8               	btfss	status,2,c
 23503  014628  D009               	goto	l2319
 23504  01462A                     u24190:
 23505                           
 23506                           ; BSR set to: 1
 23507                           
 23508                           ; BSR set to: 1
 23509  01462A  0E00               	movlw	0
 23510  01462C  6F56               	movwf	?___flmul& (0+255),b
 23511  01462E  0E00               	movlw	0
 23512  014630  6F57               	movwf	(?___flmul+1)& (0+255),b
 23513  014632  0E00               	movlw	0
 23514  014634  6F58               	movwf	(?___flmul+2)& (0+255),b
 23515  014636  0E00               	movlw	0
 23516  014638  6F59               	movwf	(?___flmul+3)& (0+255),b
 23517                           
 23518                           ; BSR set to: 1
 23519  01463A  0012               	return	
 23520  01463C                     l2319:
 23521                           
 23522                           ; BSR set to: 1
 23523                           
 23524                           ; BSR set to: 1
 23525  01463C  515C               	movf	(___flmul@a+2)& (0+255),w,b
 23526  01463E  0356               	mulwf	___flmul@b& (0+255),b
 23527  014640  CFF3 F16D          	movff	prodl,___flmul@temp
 23528  014644  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23529                           
 23530                           ; BSR set to: 1
 23531  014648  516D               	movf	___flmul@temp& (0+255),w,b
 23532  01464A  6F65               	movwf	___flmul@grs& (0+255),b
 23533  01464C  6B66               	clrf	(___flmul@grs+1)& (0+255),b
 23534  01464E  6B67               	clrf	(___flmul@grs+2)& (0+255),b
 23535  014650  6B68               	clrf	(___flmul@grs+3)& (0+255),b
 23536                           
 23537                           ; BSR set to: 1
 23538  014652  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23539  014654  6F69               	movwf	___flmul@prod& (0+255),b
 23540  014656  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 23541  014658  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 23542  01465A  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 23543  01465C  515B               	movf	(___flmul@a+1)& (0+255),w,b
 23544  01465E  0357               	mulwf	(___flmul@b+1)& (0+255),b
 23545  014660  CFF3 F16D          	movff	prodl,___flmul@temp
 23546  014664  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23547                           
 23548                           ; BSR set to: 1
 23549  014668  516D               	movf	___flmul@temp& (0+255),w,b
 23550  01466A  2765               	addwf	___flmul@grs& (0+255),f,b
 23551  01466C  0E00               	movlw	0
 23552  01466E  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23553  014670  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23554  014672  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23555                           
 23556                           ; BSR set to: 1
 23557  014674  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23558  014676  2769               	addwf	___flmul@prod& (0+255),f,b
 23559  014678  0E00               	movlw	0
 23560  01467A  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23561  01467C  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23562  01467E  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23563  014680  515A               	movf	___flmul@a& (0+255),w,b
 23564  014682  0358               	mulwf	(___flmul@b+2)& (0+255),b
 23565  014684  CFF3 F16D          	movff	prodl,___flmul@temp
 23566  014688  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23567                           
 23568                           ; BSR set to: 1
 23569  01468C  516D               	movf	___flmul@temp& (0+255),w,b
 23570  01468E  2765               	addwf	___flmul@grs& (0+255),f,b
 23571  014690  0E00               	movlw	0
 23572  014692  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23573  014694  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23574  014696  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23575                           
 23576                           ; BSR set to: 1
 23577  014698  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23578  01469A  2769               	addwf	___flmul@prod& (0+255),f,b
 23579  01469C  0E00               	movlw	0
 23580  01469E  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23581  0146A0  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23582  0146A2  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23583                           
 23584                           ; BSR set to: 1
 23585  0146A4  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 23586  0146A8  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 23587  0146AC  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 23588  0146B0  6B65               	clrf	___flmul@grs& (0+255),b
 23589                           
 23590                           ; BSR set to: 1
 23591  0146B2  515A               	movf	___flmul@a& (0+255),w,b
 23592  0146B4  0357               	mulwf	(___flmul@b+1)& (0+255),b
 23593  0146B6  CFF3 F16D          	movff	prodl,___flmul@temp
 23594  0146BA  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23595                           
 23596                           ; BSR set to: 1
 23597  0146BE  516D               	movf	___flmul@temp& (0+255),w,b
 23598  0146C0  2765               	addwf	___flmul@grs& (0+255),f,b
 23599  0146C2  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23600  0146C4  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23601  0146C6  0E00               	movlw	0
 23602  0146C8  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23603  0146CA  0E00               	movlw	0
 23604  0146CC  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23605                           
 23606                           ; BSR set to: 1
 23607  0146CE  515B               	movf	(___flmul@a+1)& (0+255),w,b
 23608  0146D0  0356               	mulwf	___flmul@b& (0+255),b
 23609  0146D2  CFF3 F16D          	movff	prodl,___flmul@temp
 23610  0146D6  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23611                           
 23612                           ; BSR set to: 1
 23613  0146DA  516D               	movf	___flmul@temp& (0+255),w,b
 23614  0146DC  2765               	addwf	___flmul@grs& (0+255),f,b
 23615  0146DE  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23616  0146E0  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23617  0146E2  0E00               	movlw	0
 23618  0146E4  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23619  0146E6  0E00               	movlw	0
 23620  0146E8  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23621                           
 23622                           ; BSR set to: 1
 23623  0146EA  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 23624  0146EE  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 23625  0146F2  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 23626  0146F6  6B65               	clrf	___flmul@grs& (0+255),b
 23627  0146F8  515A               	movf	___flmul@a& (0+255),w,b
 23628  0146FA  0356               	mulwf	___flmul@b& (0+255),b
 23629  0146FC  CFF3 F16D          	movff	prodl,___flmul@temp
 23630  014700  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23631                           
 23632                           ; BSR set to: 1
 23633  014704  516D               	movf	___flmul@temp& (0+255),w,b
 23634  014706  2765               	addwf	___flmul@grs& (0+255),f,b
 23635  014708  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23636  01470A  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23637  01470C  0E00               	movlw	0
 23638  01470E  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23639  014710  0E00               	movlw	0
 23640  014712  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23641                           
 23642                           ; BSR set to: 1
 23643  014714  515C               	movf	(___flmul@a+2)& (0+255),w,b
 23644  014716  0357               	mulwf	(___flmul@b+1)& (0+255),b
 23645  014718  CFF3 F16D          	movff	prodl,___flmul@temp
 23646  01471C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23647  014720  516D               	movf	___flmul@temp& (0+255),w,b
 23648  014722  2769               	addwf	___flmul@prod& (0+255),f,b
 23649  014724  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23650  014726  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23651  014728  0E00               	movlw	0
 23652  01472A  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23653  01472C  0E00               	movlw	0
 23654  01472E  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23655                           
 23656                           ; BSR set to: 1
 23657  014730  515B               	movf	(___flmul@a+1)& (0+255),w,b
 23658  014732  0358               	mulwf	(___flmul@b+2)& (0+255),b
 23659  014734  CFF3 F16D          	movff	prodl,___flmul@temp
 23660  014738  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23661                           
 23662                           ; BSR set to: 1
 23663  01473C  516D               	movf	___flmul@temp& (0+255),w,b
 23664  01473E  2769               	addwf	___flmul@prod& (0+255),f,b
 23665  014740  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23666  014742  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23667  014744  0E00               	movlw	0
 23668  014746  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23669  014748  0E00               	movlw	0
 23670  01474A  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23671  01474C  515C               	movf	(___flmul@a+2)& (0+255),w,b
 23672  01474E  0358               	mulwf	(___flmul@b+2)& (0+255),b
 23673  014750  CFF3 F16D          	movff	prodl,___flmul@temp
 23674  014754  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23675                           
 23676                           ; BSR set to: 1
 23677  014758  516D               	movf	___flmul@temp& (0+255),w,b
 23678  01475A  6F5E               	movwf	??___flmul& (0+255),b
 23679  01475C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23680  01475E  6F5F               	movwf	(??___flmul+1)& (0+255),b
 23681  014760  6B60               	clrf	(??___flmul+2)& (0+255),b
 23682  014762  6B61               	clrf	(??___flmul+3)& (0+255),b
 23683  014764  C160  F161         	movff	??___flmul+2,??___flmul+3
 23684  014768  C15F  F160         	movff	??___flmul+1,??___flmul+2
 23685  01476C  C15E  F15F         	movff	??___flmul,??___flmul+1
 23686  014770  6B5E               	clrf	??___flmul& (0+255),b
 23687  014772  515E               	movf	??___flmul& (0+255),w,b
 23688  014774  2769               	addwf	___flmul@prod& (0+255),f,b
 23689  014776  515F               	movf	(??___flmul+1)& (0+255),w,b
 23690  014778  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23691  01477A  5160               	movf	(??___flmul+2)& (0+255),w,b
 23692  01477C  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23693  01477E  5161               	movf	(??___flmul+3)& (0+255),w,b
 23694  014780  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23695                           
 23696                           ; BSR set to: 1
 23697  014782  C165  F15E         	movff	___flmul@grs,??___flmul
 23698  014786  C166  F15F         	movff	___flmul@grs+1,??___flmul+1
 23699  01478A  C167  F160         	movff	___flmul@grs+2,??___flmul+2
 23700  01478E  C168  F161         	movff	___flmul@grs+3,??___flmul+3
 23701  014792  0E19               	movlw	25
 23702  014794  D005               	goto	u24200
 23703  014796                     u24205:
 23704  014796  90D8               	bcf	status,0,c
 23705  014798  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 23706  01479A  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 23707  01479C  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 23708  01479E  335E               	rrcf	??___flmul& (0+255),f,b
 23709  0147A0                     u24200:
 23710  0147A0  2EE8               	decfsz	wreg,f,c
 23711  0147A2  D7F9               	goto	u24205
 23712  0147A4  515E               	movf	??___flmul& (0+255),w,b
 23713  0147A6  2769               	addwf	___flmul@prod& (0+255),f,b
 23714  0147A8  515F               	movf	(??___flmul+1)& (0+255),w,b
 23715  0147AA  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23716  0147AC  5160               	movf	(??___flmul+2)& (0+255),w,b
 23717  0147AE  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23718  0147B0  5161               	movf	(??___flmul+3)& (0+255),w,b
 23719  0147B2  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23720                           
 23721                           ; BSR set to: 1
 23722  0147B4  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 23723  0147B8  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 23724  0147BC  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 23725  0147C0  6B65               	clrf	___flmul@grs& (0+255),b
 23726                           
 23727                           ; BSR set to: 1
 23728  0147C2  5163               	movf	___flmul@aexp& (0+255),w,b
 23729  0147C4  C164  F15E         	movff	___flmul@bexp,??___flmul
 23730  0147C8  6B5F               	clrf	(??___flmul+1)& (0+255),b
 23731  0147CA  275E               	addwf	??___flmul& (0+255),f,b
 23732  0147CC  0E00               	movlw	0
 23733  0147CE  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 23734  0147D0  0E82               	movlw	130
 23735  0147D2  255E               	addwf	??___flmul& (0+255),w,b
 23736  0147D4  6F6D               	movwf	___flmul@temp& (0+255),b
 23737  0147D6  0EFF               	movlw	255
 23738  0147D8  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 23739  0147DA  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 23740  0147DC  D00F               	goto	l2323
 23741  0147DE                     
 23742                           ; BSR set to: 1
 23743                           
 23744                           ; BSR set to: 1
 23745  0147DE  90D8               	bcf	status,0,c
 23746  0147E0  3769               	rlcf	___flmul@prod& (0+255),f,b
 23747  0147E2  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 23748  0147E4  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 23749  0147E6  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 23750                           
 23751                           ; BSR set to: 1
 23752  0147E8  BF68               	btfsc	(___flmul@grs+3)& (0+255),7,b
 23753                           
 23754                           ; BSR set to: 1
 23755  0147EA  8169               	bsf	___flmul@prod& (0+255),0,b
 23756                           
 23757                           ; BSR set to: 1
 23758  0147EC  90D8               	bcf	status,0,c
 23759  0147EE  3765               	rlcf	___flmul@grs& (0+255),f,b
 23760  0147F0  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
 23761  0147F2  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
 23762  0147F4  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
 23763  0147F6  076D               	decf	___flmul@temp& (0+255),f,b
 23764  0147F8  A0D8               	btfss	status,0,c
 23765  0147FA  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 23766  0147FC                     l2323:
 23767                           
 23768                           ; BSR set to: 1
 23769                           
 23770                           ; BSR set to: 1
 23771  0147FC  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 23772  0147FE  D7EF               	goto	l2324
 23773                           
 23774                           ; BSR set to: 1
 23775                           
 23776                           ; BSR set to: 1
 23777  014800  0E00               	movlw	0
 23778  014802  6F63               	movwf	___flmul@aexp& (0+255),b
 23779                           
 23780                           ; BSR set to: 1
 23781  014804  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
 23782  014806  D016               	goto	l2330
 23783                           
 23784                           ; BSR set to: 1
 23785  014808  0EFF               	movlw	255
 23786  01480A  1565               	andwf	___flmul@grs& (0+255),w,b
 23787  01480C  6F5E               	movwf	??___flmul& (0+255),b
 23788  01480E  0EFF               	movlw	255
 23789  014810  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
 23790  014812  6F5F               	movwf	(??___flmul+1)& (0+255),b
 23791  014814  0EFF               	movlw	255
 23792  014816  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
 23793  014818  6F60               	movwf	(??___flmul+2)& (0+255),b
 23794  01481A  0E7F               	movlw	127
 23795  01481C  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
 23796  01481E  6F61               	movwf	(??___flmul+3)& (0+255),b
 23797  014820  515E               	movf	??___flmul& (0+255),w,b
 23798  014822  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 23799  014824  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 23800  014826  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 23801  014828  A4D8               	btfss	status,2,c
 23802  01482A  D002               	goto	u24250
 23803                           
 23804                           ; BSR set to: 1
 23805                           
 23806                           ; BSR set to: 1
 23807  01482C  A169               	btfss	___flmul@prod& (0+255),0,b
 23808  01482E  D002               	goto	l2330
 23809  014830                     u24250:
 23810                           
 23811                           ; BSR set to: 1
 23812  014830  0E01               	movlw	1
 23813  014832  6F63               	movwf	___flmul@aexp& (0+255),b
 23814  014834                     l2330:
 23815                           
 23816                           ; BSR set to: 1
 23817                           
 23818                           ; BSR set to: 1
 23819                           
 23820                           ; BSR set to: 1
 23821  014834  5163               	movf	___flmul@aexp& (0+255),w,b
 23822  014836  B4D8               	btfsc	status,2,c
 23823  014838  D01F               	goto	l2332
 23824                           
 23825                           ; BSR set to: 1
 23826  01483A  0E01               	movlw	1
 23827  01483C  2769               	addwf	___flmul@prod& (0+255),f,b
 23828  01483E  0E00               	movlw	0
 23829  014840  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23830  014842  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23831  014844  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23832                           
 23833                           ; BSR set to: 1
 23834  014846  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 23835  014848  D017               	goto	l2332
 23836                           
 23837                           ; BSR set to: 1
 23838  01484A  C169  F15E         	movff	___flmul@prod,??___flmul
 23839  01484E  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 23840  014852  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 23841  014856  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 23842  01485A  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 23843  01485C  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 23844  01485E  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 23845  014860  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 23846  014862  335E               	rrcf	??___flmul& (0+255),f,b
 23847  014864  C15E  F169         	movff	??___flmul,___flmul@prod
 23848  014868  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 23849  01486C  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 23850  014870  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 23851                           
 23852                           ; BSR set to: 1
 23853  014874  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 23854  014876  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 23855  014878                     l2332:
 23856                           
 23857                           ; BSR set to: 1
 23858                           
 23859                           ; BSR set to: 1
 23860                           
 23861                           ; BSR set to: 1
 23862  014878  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 23863  01487A  D00D               	goto	l2333
 23864  01487C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23865  01487E  E103               	bnz	u24280
 23866  014880  296D               	incf	___flmul@temp& (0+255),w,b
 23867  014882  A0D8               	btfss	status,0,c
 23868  014884  D008               	goto	l2333
 23869  014886                     u24280:
 23870                           
 23871                           ; BSR set to: 1
 23872  014886  0E00               	movlw	0
 23873  014888  6F69               	movwf	___flmul@prod& (0+255),b
 23874  01488A  0E00               	movlw	0
 23875  01488C  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 23876  01488E  0E80               	movlw	128
 23877  014890  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 23878  014892  0E7F               	movlw	127
 23879  014894  D020               	goto	L4
 23880  014896                     l2333:
 23881                           
 23882                           ; BSR set to: 1
 23883                           
 23884                           ; BSR set to: 1
 23885  014896  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 23886  014898  D005               	goto	u24290
 23887  01489A  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23888  01489C  E10E               	bnz	l2335
 23889  01489E  056D               	decf	___flmul@temp& (0+255),w,b
 23890  0148A0  B0D8               	btfsc	status,0,c
 23891  0148A2  D00B               	goto	l2335
 23892  0148A4                     u24290:
 23893                           
 23894                           ; BSR set to: 1
 23895  0148A4  0E00               	movlw	0
 23896  0148A6  6F69               	movwf	___flmul@prod& (0+255),b
 23897  0148A8  0E00               	movlw	0
 23898  0148AA  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 23899  0148AC  0E00               	movlw	0
 23900  0148AE  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 23901  0148B0  0E00               	movlw	0
 23902  0148B2  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 23903  0148B4  0E00               	movlw	0
 23904  0148B6  6F62               	movwf	___flmul@sign& (0+255),b
 23905  0148B8  D00F               	goto	l2336
 23906  0148BA                     l2335:
 23907                           
 23908                           ; BSR set to: 1
 23909  0148BA  C16D  F164         	movff	___flmul@temp,___flmul@bexp
 23910                           
 23911                           ; BSR set to: 1
 23912  0148BE  0EFF               	movlw	255
 23913  0148C0  1769               	andwf	___flmul@prod& (0+255),f,b
 23914  0148C2  0EFF               	movlw	255
 23915  0148C4  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 23916  0148C6  0E7F               	movlw	127
 23917  0148C8  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 23918  0148CA  0E00               	movlw	0
 23919  0148CC  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 23920                           
 23921                           ; BSR set to: 1
 23922  0148CE  B164               	btfsc	___flmul@bexp& (0+255),0,b
 23923                           
 23924                           ; BSR set to: 1
 23925  0148D0  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 23926                           
 23927                           ; BSR set to: 1
 23928                           
 23929                           ; BSR set to: 1
 23930  0148D2  90D8               	bcf	status,0,c
 23931  0148D4  3164               	rrcf	___flmul@bexp& (0+255),w,b
 23932  0148D6                     L4:
 23933  0148D6  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 23934  0148D8                     l2336:
 23935                           
 23936                           ; BSR set to: 1
 23937                           
 23938                           ; BSR set to: 1
 23939                           
 23940                           ; BSR set to: 1
 23941  0148D8  5162               	movf	___flmul@sign& (0+255),w,b
 23942  0148DA  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 23943                           
 23944                           ; BSR set to: 1
 23945  0148DC  C169  F156         	movff	___flmul@prod,?___flmul
 23946  0148E0  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 23947  0148E4  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 23948  0148E8  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 23949  0148EC  0012               	return	
 23950  0148EE                     __end_of___flmul:
 23951                           	opt stack 0
 23952                           tblptru	equ	0xFF8
 23953                           tblptrh	equ	0xFF7
 23954                           tblptrl	equ	0xFF6
 23955                           tablat	equ	0xFF5
 23956                           prodh	equ	0xFF4
 23957                           prodl	equ	0xFF3
 23958                           intcon	equ	0xFF2
 23959                           indf0	equ	0xFEF
 23960                           postinc0	equ	0xFEE
 23961                           fsr0h	equ	0xFEA
 23962                           fsr0l	equ	0xFE9
 23963                           wreg	equ	0xFE8
 23964                           indf1	equ	0xFE7
 23965                           postdec1	equ	0xFE5
 23966                           plusw1	equ	0xFE3
 23967                           fsr1h	equ	0xFE2
 23968                           fsr1l	equ	0xFE1
 23969                           indf2	equ	0xFDF
 23970                           postinc2	equ	0xFDE
 23971                           postdec2	equ	0xFDD
 23972                           plusw2	equ	0xFDB
 23973                           fsr2h	equ	0xFDA
 23974                           fsr2l	equ	0xFD9
 23975                           status	equ	0xFD8
 23976                           
 23977 ;; *************** function ___awmod *****************
 23978 ;; Defined at:
 23979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 23980 ;; Parameters:    Size  Location     Type
 23981 ;;  dividend        2   23[BANK1 ] int 
 23982 ;;  divisor         2   25[BANK1 ] int 
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;  sign            1   28[BANK1 ] unsigned char 
 23985 ;;  counter         1   27[BANK1 ] unsigned char 
 23986 ;; Return value:  Size  Location     Type
 23987 ;;                  2   23[BANK1 ] int 
 23988 ;; Registers used:
 23989 ;;		wreg, status,2, status,0
 23990 ;; Tracked objects:
 23991 ;;		On entry : 0/0
 23992 ;;		On exit  : 0/0
 23993 ;;		Unchanged: 0/0
 23994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23995 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23996 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23998 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23999 ;;Total ram usage:        6 bytes
 24000 ;; Hardware stack levels used:    1
 24001 ;; Hardware stack levels required when called:   13
 24002 ;; This function calls:
 24003 ;;		Nothing
 24004 ;; This function is called by:
 24005 ;;		_fround
 24006 ;;		_scale
 24007 ;; This function uses a non-reentrant model
 24008 ;;
 24009                           
 24010                           	psect	text36
 24011  018558                     __ptext36:
 24012                           	opt stack 0
 24013  018558                     ___awmod:
 24014                           	opt stack 13
 24015                           
 24016                           ; BSR set to: 1
 24017                           ;incstack = 0
 24018  018558  0E00               	movlw	0
 24019  01855A  0101               	movlb	1	; () banked
 24020  01855C  6F1C               	movwf	___awmod@sign& (0+255),b
 24021                           
 24022                           ; BSR set to: 1
 24023  01855E  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 24024  018560  D006               	goto	l1903
 24025                           
 24026                           ; BSR set to: 1
 24027  018562  6D17               	negf	___awmod@dividend& (0+255),b
 24028  018564  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 24029  018566  B0D8               	btfsc	status,0,c
 24030  018568  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 24031                           
 24032                           ; BSR set to: 1
 24033  01856A  0E01               	movlw	1
 24034  01856C  6F1C               	movwf	___awmod@sign& (0+255),b
 24035  01856E                     l1903:
 24036                           
 24037                           ; BSR set to: 1
 24038                           
 24039                           ; BSR set to: 1
 24040  01856E  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24041  018570  D004               	goto	l1904
 24042                           
 24043                           ; BSR set to: 1
 24044  018572  6D19               	negf	___awmod@divisor& (0+255),b
 24045  018574  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 24046  018576  B0D8               	btfsc	status,0,c
 24047  018578  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 24048  01857A                     l1904:
 24049                           
 24050                           ; BSR set to: 1
 24051                           
 24052                           ; BSR set to: 1
 24053  01857A  5119               	movf	___awmod@divisor& (0+255),w,b
 24054  01857C  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 24055  01857E  B4D8               	btfsc	status,2,c
 24056  018580  D018               	goto	l1911
 24057                           
 24058                           ; BSR set to: 1
 24059  018582  0E01               	movlw	1
 24060  018584  6F1B               	movwf	___awmod@counter& (0+255),b
 24061  018586  D004               	goto	l1906
 24062  018588                     
 24063                           ; BSR set to: 1
 24064                           
 24065                           ; BSR set to: 1
 24066  018588  90D8               	bcf	status,0,c
 24067  01858A  3719               	rlcf	___awmod@divisor& (0+255),f,b
 24068  01858C  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 24069  01858E  2B1B               	incf	___awmod@counter& (0+255),f,b
 24070  018590                     l1906:
 24071                           
 24072                           ; BSR set to: 1
 24073                           
 24074                           ; BSR set to: 1
 24075  018590  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24076  018592  D7FA               	goto	l1907
 24077  018594                     u24400:
 24078                           
 24079                           ; BSR set to: 1
 24080                           
 24081                           ; BSR set to: 1
 24082                           
 24083                           ; BSR set to: 1
 24084  018594  5119               	movf	___awmod@divisor& (0+255),w,b
 24085  018596  5D17               	subwf	___awmod@dividend& (0+255),w,b
 24086  018598  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 24087  01859A  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 24088  01859C  A0D8               	btfss	status,0,c
 24089  01859E  D004               	goto	l1910
 24090                           
 24091                           ; BSR set to: 1
 24092  0185A0  5119               	movf	___awmod@divisor& (0+255),w,b
 24093  0185A2  5F17               	subwf	___awmod@dividend& (0+255),f,b
 24094  0185A4  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 24095  0185A6  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 24096  0185A8                     l1910:
 24097                           
 24098                           ; BSR set to: 1
 24099                           
 24100                           ; BSR set to: 1
 24101  0185A8  90D8               	bcf	status,0,c
 24102  0185AA  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 24103  0185AC  3319               	rrcf	___awmod@divisor& (0+255),f,b
 24104                           
 24105                           ; BSR set to: 1
 24106  0185AE  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 24107  0185B0  D7F1               	goto	u24400
 24108  0185B2                     l1911:
 24109                           
 24110                           ; BSR set to: 1
 24111                           
 24112                           ; BSR set to: 1
 24113                           
 24114                           ; BSR set to: 1
 24115  0185B2  511C               	movf	___awmod@sign& (0+255),w,b
 24116  0185B4  B4D8               	btfsc	status,2,c
 24117  0185B6  D004               	goto	l1912
 24118                           
 24119                           ; BSR set to: 1
 24120  0185B8  6D17               	negf	___awmod@dividend& (0+255),b
 24121  0185BA  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 24122  0185BC  B0D8               	btfsc	status,0,c
 24123  0185BE  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 24124  0185C0                     l1912:
 24125                           
 24126                           ; BSR set to: 1
 24127                           
 24128                           ; BSR set to: 1
 24129  0185C0  C117  F117         	movff	___awmod@dividend,?___awmod
 24130  0185C4  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 24131  0185C8  0012               	return	
 24132  0185CA                     __end_of___awmod:
 24133                           	opt stack 0
 24134                           tblptru	equ	0xFF8
 24135                           tblptrh	equ	0xFF7
 24136                           tblptrl	equ	0xFF6
 24137                           tablat	equ	0xFF5
 24138                           prodh	equ	0xFF4
 24139                           prodl	equ	0xFF3
 24140                           intcon	equ	0xFF2
 24141                           indf0	equ	0xFEF
 24142                           postinc0	equ	0xFEE
 24143                           fsr0h	equ	0xFEA
 24144                           fsr0l	equ	0xFE9
 24145                           wreg	equ	0xFE8
 24146                           indf1	equ	0xFE7
 24147                           postdec1	equ	0xFE5
 24148                           plusw1	equ	0xFE3
 24149                           fsr1h	equ	0xFE2
 24150                           fsr1l	equ	0xFE1
 24151                           indf2	equ	0xFDF
 24152                           postinc2	equ	0xFDE
 24153                           postdec2	equ	0xFDD
 24154                           plusw2	equ	0xFDB
 24155                           fsr2h	equ	0xFDA
 24156                           fsr2l	equ	0xFD9
 24157                           status	equ	0xFD8
 24158                           
 24159 ;; *************** function ___awdiv *****************
 24160 ;; Defined at:
 24161 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 24162 ;; Parameters:    Size  Location     Type
 24163 ;;  dividend        2   29[BANK1 ] int 
 24164 ;;  divisor         2   31[BANK1 ] int 
 24165 ;; Auto vars:     Size  Location     Type
 24166 ;;  quotient        2   35[BANK1 ] int 
 24167 ;;  sign            1   34[BANK1 ] unsigned char 
 24168 ;;  counter         1   33[BANK1 ] unsigned char 
 24169 ;; Return value:  Size  Location     Type
 24170 ;;                  2   29[BANK1 ] int 
 24171 ;; Registers used:
 24172 ;;		wreg, status,2, status,0
 24173 ;; Tracked objects:
 24174 ;;		On entry : 0/0
 24175 ;;		On exit  : 0/0
 24176 ;;		Unchanged: 0/0
 24177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24178 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24179 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24181 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24182 ;;Total ram usage:        8 bytes
 24183 ;; Hardware stack levels used:    1
 24184 ;; Hardware stack levels required when called:   13
 24185 ;; This function calls:
 24186 ;;		Nothing
 24187 ;; This function is called by:
 24188 ;;		_fround
 24189 ;;		_scale
 24190 ;;		_printf
 24191 ;; This function uses a non-reentrant model
 24192 ;;
 24193                           
 24194                           	psect	text37
 24195  018252                     __ptext37:
 24196                           	opt stack 0
 24197  018252                     ___awdiv:
 24198                           	opt stack 13
 24199                           
 24200                           ; BSR set to: 1
 24201                           ;incstack = 0
 24202  018252  0E00               	movlw	0
 24203  018254  0101               	movlb	1	; () banked
 24204  018256  6F22               	movwf	___awdiv@sign& (0+255),b
 24205                           
 24206                           ; BSR set to: 1
 24207  018258  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24208  01825A  D006               	goto	l1890
 24209                           
 24210                           ; BSR set to: 1
 24211  01825C  6D1F               	negf	___awdiv@divisor& (0+255),b
 24212  01825E  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 24213  018260  B0D8               	btfsc	status,0,c
 24214  018262  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 24215                           
 24216                           ; BSR set to: 1
 24217  018264  0E01               	movlw	1
 24218  018266  6F22               	movwf	___awdiv@sign& (0+255),b
 24219  018268                     l1890:
 24220                           
 24221                           ; BSR set to: 1
 24222                           
 24223                           ; BSR set to: 1
 24224  018268  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 24225  01826A  D006               	goto	l1891
 24226                           
 24227                           ; BSR set to: 1
 24228  01826C  6D1D               	negf	___awdiv@dividend& (0+255),b
 24229  01826E  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 24230  018270  B0D8               	btfsc	status,0,c
 24231  018272  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 24232                           
 24233                           ; BSR set to: 1
 24234  018274  0E01               	movlw	1
 24235  018276  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 24236  018278                     l1891:
 24237                           
 24238                           ; BSR set to: 1
 24239                           
 24240                           ; BSR set to: 1
 24241  018278  0E00               	movlw	0
 24242  01827A  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 24243  01827C  0E00               	movlw	0
 24244  01827E  6F23               	movwf	___awdiv@quotient& (0+255),b
 24245                           
 24246                           ; BSR set to: 1
 24247  018280  511F               	movf	___awdiv@divisor& (0+255),w,b
 24248  018282  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 24249  018284  B4D8               	btfsc	status,2,c
 24250  018286  D01C               	goto	l1898
 24251                           
 24252                           ; BSR set to: 1
 24253  018288  0E01               	movlw	1
 24254  01828A  6F21               	movwf	___awdiv@counter& (0+255),b
 24255  01828C  D004               	goto	l1893
 24256  01828E                     
 24257                           ; BSR set to: 1
 24258                           
 24259                           ; BSR set to: 1
 24260  01828E  90D8               	bcf	status,0,c
 24261  018290  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 24262  018292  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 24263  018294  2B21               	incf	___awdiv@counter& (0+255),f,b
 24264  018296                     l1893:
 24265                           
 24266                           ; BSR set to: 1
 24267                           
 24268                           ; BSR set to: 1
 24269  018296  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24270  018298  D7FA               	goto	l1894
 24271  01829A                     u24340:
 24272                           
 24273                           ; BSR set to: 1
 24274                           
 24275                           ; BSR set to: 1
 24276                           
 24277                           ; BSR set to: 1
 24278  01829A  90D8               	bcf	status,0,c
 24279  01829C  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 24280  01829E  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 24281                           
 24282                           ; BSR set to: 1
 24283  0182A0  511F               	movf	___awdiv@divisor& (0+255),w,b
 24284  0182A2  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 24285  0182A4  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24286  0182A6  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 24287  0182A8  A0D8               	btfss	status,0,c
 24288  0182AA  D005               	goto	l1897
 24289                           
 24290                           ; BSR set to: 1
 24291  0182AC  511F               	movf	___awdiv@divisor& (0+255),w,b
 24292  0182AE  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 24293  0182B0  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24294  0182B2  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 24295                           
 24296                           ; BSR set to: 1
 24297  0182B4  8123               	bsf	___awdiv@quotient& (0+255),0,b
 24298  0182B6                     l1897:
 24299                           
 24300                           ; BSR set to: 1
 24301                           
 24302                           ; BSR set to: 1
 24303  0182B6  90D8               	bcf	status,0,c
 24304  0182B8  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 24305  0182BA  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 24306                           
 24307                           ; BSR set to: 1
 24308  0182BC  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 24309  0182BE  D7ED               	goto	u24340
 24310  0182C0                     l1898:
 24311                           
 24312                           ; BSR set to: 1
 24313                           
 24314                           ; BSR set to: 1
 24315                           
 24316                           ; BSR set to: 1
 24317  0182C0  5122               	movf	___awdiv@sign& (0+255),w,b
 24318  0182C2  B4D8               	btfsc	status,2,c
 24319  0182C4  D004               	goto	l1899
 24320                           
 24321                           ; BSR set to: 1
 24322  0182C6  6D23               	negf	___awdiv@quotient& (0+255),b
 24323  0182C8  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 24324  0182CA  B0D8               	btfsc	status,0,c
 24325  0182CC  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 24326  0182CE                     l1899:
 24327                           
 24328                           ; BSR set to: 1
 24329                           
 24330                           ; BSR set to: 1
 24331  0182CE  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 24332  0182D2  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 24333  0182D6  0012               	return	
 24334  0182D8                     __end_of___awdiv:
 24335                           	opt stack 0
 24336                           tblptru	equ	0xFF8
 24337                           tblptrh	equ	0xFF7
 24338                           tblptrl	equ	0xFF6
 24339                           tablat	equ	0xFF5
 24340                           prodh	equ	0xFF4
 24341                           prodl	equ	0xFF3
 24342                           intcon	equ	0xFF2
 24343                           indf0	equ	0xFEF
 24344                           postinc0	equ	0xFEE
 24345                           fsr0h	equ	0xFEA
 24346                           fsr0l	equ	0xFE9
 24347                           wreg	equ	0xFE8
 24348                           indf1	equ	0xFE7
 24349                           postdec1	equ	0xFE5
 24350                           plusw1	equ	0xFE3
 24351                           fsr1h	equ	0xFE2
 24352                           fsr1l	equ	0xFE1
 24353                           indf2	equ	0xFDF
 24354                           postinc2	equ	0xFDE
 24355                           postdec2	equ	0xFDD
 24356                           plusw2	equ	0xFDB
 24357                           fsr2h	equ	0xFDA
 24358                           fsr2l	equ	0xFD9
 24359                           status	equ	0xFD8
 24360                           
 24361 ;; *************** function __tdiv_to_l_ *****************
 24362 ;; Defined at:
 24363 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 24364 ;; Parameters:    Size  Location     Type
 24365 ;;  f1              3   23[BANK1 ] float 
 24366 ;;  f2              3   26[BANK1 ] float 
 24367 ;; Auto vars:     Size  Location     Type
 24368 ;;  quot            4   32[BANK1 ] unsigned long 
 24369 ;;  exp1            1   37[BANK1 ] unsigned char 
 24370 ;;  cntr            1   36[BANK1 ] unsigned char 
 24371 ;; Return value:  Size  Location     Type
 24372 ;;                  4   23[BANK1 ] unsigned long 
 24373 ;; Registers used:
 24374 ;;		wreg, status,2, status,0
 24375 ;; Tracked objects:
 24376 ;;		On entry : 0/0
 24377 ;;		On exit  : 0/0
 24378 ;;		Unchanged: 0/0
 24379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24380 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24381 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24382 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24383 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24384 ;;Total ram usage:       15 bytes
 24385 ;; Hardware stack levels used:    1
 24386 ;; Hardware stack levels required when called:   13
 24387 ;; This function calls:
 24388 ;;		Nothing
 24389 ;; This function is called by:
 24390 ;;		_printf
 24391 ;; This function uses a non-reentrant model
 24392 ;;
 24393                           
 24394                           	psect	text38
 24395  016FE8                     __ptext38:
 24396                           	opt stack 0
 24397  016FE8                     __tdiv_to_l_:
 24398                           	opt stack 14
 24399                           
 24400                           ; BSR set to: 1
 24401                           ;incstack = 0
 24402  016FE8  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 24403  016FEC  0101               	movlb	1	; () banked
 24404  016FEE  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 24405  016FF0  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 24406  016FF2  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 24407  016FF4  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 24408  016FF6  E301               	bnc	u24521
 24409  016FF8  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 24410  016FFA                     u24521:
 24411  016FFA  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 24412  016FFC  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 24413  016FFE  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24414  017000  A4D8               	btfss	status,2,c
 24415  017002  D009               	goto	l2038
 24416                           
 24417                           ; BSR set to: 1
 24418  017004  0E00               	movlw	0
 24419  017006  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24420  017008  0E00               	movlw	0
 24421  01700A  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24422  01700C  0E00               	movlw	0
 24423  01700E  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24424  017010  0E00               	movlw	0
 24425  017012  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24426                           
 24427                           ; BSR set to: 1
 24428  017014  0012               	return	
 24429  017016                     l2038:
 24430                           
 24431                           ; BSR set to: 1
 24432                           
 24433                           ; BSR set to: 1
 24434  017016  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 24435  01701A  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 24436  01701C  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 24437  01701E  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24438  017020  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 24439  017022  E301               	bnc	u24541
 24440  017024  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 24441  017026                     u24541:
 24442  017026  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 24443  017028  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 24444  01702A  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 24445  01702C  A4D8               	btfss	status,2,c
 24446  01702E  D009               	goto	l2040
 24447                           
 24448                           ; BSR set to: 1
 24449  017030  0E00               	movlw	0
 24450  017032  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24451  017034  0E00               	movlw	0
 24452  017036  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24453  017038  0E00               	movlw	0
 24454  01703A  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24455  01703C  0E00               	movlw	0
 24456  01703E  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24457                           
 24458                           ; BSR set to: 1
 24459  017040  0012               	return	
 24460  017042                     l2040:
 24461                           
 24462                           ; BSR set to: 1
 24463                           
 24464                           ; BSR set to: 1
 24465  017042  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 24466                           
 24467                           ; BSR set to: 1
 24468  017044  0EFF               	movlw	255
 24469  017046  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 24470  017048  0EFF               	movlw	255
 24471  01704A  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24472  01704C  0E00               	movlw	0
 24473  01704E  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24474  017050  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 24475                           
 24476                           ; BSR set to: 1
 24477  017052  0EFF               	movlw	255
 24478  017054  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 24479  017056  0EFF               	movlw	255
 24480  017058  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 24481  01705A  0E00               	movlw	0
 24482  01705C  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 24483                           
 24484                           ; BSR set to: 1
 24485  01705E  0E00               	movlw	0
 24486  017060  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 24487  017062  0E00               	movlw	0
 24488  017064  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 24489  017066  0E00               	movlw	0
 24490  017068  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 24491  01706A  0E00               	movlw	0
 24492  01706C  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 24493                           
 24494                           ; BSR set to: 1
 24495  01706E  0E7F               	movlw	127
 24496  017070  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 24497                           
 24498                           ; BSR set to: 1
 24499  017072  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 24500  017074  0F98               	addlw	152
 24501  017076  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 24502                           
 24503                           ; BSR set to: 1
 24504  017078  0E18               	movlw	24
 24505  01707A  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 24506  01707C                     l2041:
 24507                           
 24508                           ; BSR set to: 1
 24509  01707C  90D8               	bcf	status,0,c
 24510  01707E  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 24511  017080  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24512  017082  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24513  017084  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24514                           
 24515                           ; BSR set to: 1
 24516  017086  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 24517  017088  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 24518  01708A  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24519  01708C  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 24520  01708E  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 24521  017090  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 24522  017092  A0D8               	btfss	status,0,c
 24523  017094  D007               	goto	l2042
 24524                           
 24525                           ; BSR set to: 1
 24526  017096  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 24527  017098  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 24528  01709A  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24529  01709C  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24530  01709E  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 24531  0170A0  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24532                           
 24533                           ; BSR set to: 1
 24534  0170A2  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 24535  0170A4                     l2042:
 24536                           
 24537                           ; BSR set to: 1
 24538  0170A4  90D8               	bcf	status,0,c
 24539  0170A6  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 24540  0170A8  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24541  0170AA  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24542                           
 24543                           ; BSR set to: 1
 24544  0170AC  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 24545  0170AE  D7E6               	goto	l2041
 24546                           
 24547                           ; BSR set to: 1
 24548                           
 24549                           ; BSR set to: 1
 24550  0170B0  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 24551  0170B2  D016               	goto	l2044
 24552                           
 24553                           ; BSR set to: 1
 24554  0170B4  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24555  0170B6  0A80               	xorlw	128
 24556  0170B8  0F97               	addlw	151
 24557  0170BA  B0D8               	btfsc	status,0,c
 24558  0170BC  D009               	goto	l2045
 24559                           
 24560                           ; BSR set to: 1
 24561  0170BE  0E00               	movlw	0
 24562  0170C0  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24563  0170C2  0E00               	movlw	0
 24564  0170C4  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24565  0170C6  0E00               	movlw	0
 24566  0170C8  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24567  0170CA  0E00               	movlw	0
 24568  0170CC  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24569                           
 24570                           ; BSR set to: 1
 24571  0170CE  0012               	return	
 24572  0170D0                     l2045:
 24573                           
 24574                           ; BSR set to: 1
 24575                           
 24576                           ; BSR set to: 1
 24577                           
 24578                           ; BSR set to: 1
 24579  0170D0  90D8               	bcf	status,0,c
 24580  0170D2  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24581  0170D4  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24582  0170D6  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24583  0170D8  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 24584                           
 24585                           ; BSR set to: 1
 24586  0170DA  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 24587  0170DC  D7F9               	goto	l2045
 24588                           
 24589                           ; BSR set to: 1
 24590  0170DE  D015               	goto	u24600
 24591  0170E0                     l2044:
 24592                           
 24593                           ; BSR set to: 1
 24594                           
 24595                           ; BSR set to: 1
 24596  0170E0  0E17               	movlw	23
 24597  0170E2  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 24598  0170E4  D00F               	goto	l2050
 24599                           
 24600                           ; BSR set to: 1
 24601  0170E6  0E00               	movlw	0
 24602  0170E8  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24603  0170EA  0E00               	movlw	0
 24604  0170EC  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24605  0170EE  0E00               	movlw	0
 24606  0170F0  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24607  0170F2  0E00               	movlw	0
 24608  0170F4  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24609                           
 24610                           ; BSR set to: 1
 24611  0170F6  0012               	return	
 24612  0170F8                     
 24613                           ; BSR set to: 1
 24614                           
 24615                           ; BSR set to: 1
 24616  0170F8  90D8               	bcf	status,0,c
 24617  0170FA  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 24618  0170FC  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24619  0170FE  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24620  017100  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24621  017102  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 24622  017104                     l2050:
 24623                           
 24624                           ; BSR set to: 1
 24625                           
 24626                           ; BSR set to: 1
 24627  017104  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24628  017106  A4D8               	btfss	status,2,c
 24629  017108  D7F7               	goto	l2051
 24630  01710A                     u24600:
 24631                           
 24632                           ; BSR set to: 1
 24633                           
 24634                           ; BSR set to: 1
 24635  01710A  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 24636  01710E  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 24637  017112  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 24638  017116  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 24639                           
 24640                           ; BSR set to: 1
 24641  01711A  0012               	return		;funcret
 24642  01711C                     __end_of__tdiv_to_l_:
 24643                           	opt stack 0
 24644                           tblptru	equ	0xFF8
 24645                           tblptrh	equ	0xFF7
 24646                           tblptrl	equ	0xFF6
 24647                           tablat	equ	0xFF5
 24648                           prodh	equ	0xFF4
 24649                           prodl	equ	0xFF3
 24650                           intcon	equ	0xFF2
 24651                           indf0	equ	0xFEF
 24652                           postinc0	equ	0xFEE
 24653                           fsr0h	equ	0xFEA
 24654                           fsr0l	equ	0xFE9
 24655                           wreg	equ	0xFE8
 24656                           indf1	equ	0xFE7
 24657                           postdec1	equ	0xFE5
 24658                           plusw1	equ	0xFE3
 24659                           fsr1h	equ	0xFE2
 24660                           fsr1l	equ	0xFE1
 24661                           indf2	equ	0xFDF
 24662                           postinc2	equ	0xFDE
 24663                           postdec2	equ	0xFDD
 24664                           plusw2	equ	0xFDB
 24665                           fsr2h	equ	0xFDA
 24666                           fsr2l	equ	0xFD9
 24667                           status	equ	0xFD8
 24668                           
 24669 ;; *************** function __div_to_l_ *****************
 24670 ;; Defined at:
 24671 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 24672 ;; Parameters:    Size  Location     Type
 24673 ;;  f1              4   23[BANK1 ] unsigned long 
 24674 ;;  f2              4   27[BANK1 ] unsigned long 
 24675 ;; Auto vars:     Size  Location     Type
 24676 ;;  quot            4   31[BANK1 ] unsigned long 
 24677 ;;  exp1            1   36[BANK1 ] unsigned char 
 24678 ;;  cntr            1   35[BANK1 ] unsigned char 
 24679 ;; Return value:  Size  Location     Type
 24680 ;;                  4   23[BANK1 ] unsigned long 
 24681 ;; Registers used:
 24682 ;;		wreg, status,2, status,0
 24683 ;; Tracked objects:
 24684 ;;		On entry : 0/0
 24685 ;;		On exit  : 0/0
 24686 ;;		Unchanged: 0/0
 24687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24688 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24689 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24691 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24692 ;;Total ram usage:       14 bytes
 24693 ;; Hardware stack levels used:    1
 24694 ;; Hardware stack levels required when called:   13
 24695 ;; This function calls:
 24696 ;;		Nothing
 24697 ;; This function is called by:
 24698 ;;		_printf
 24699 ;; This function uses a non-reentrant model
 24700 ;;
 24701                           
 24702                           	psect	text39
 24703  01724E                     __ptext39:
 24704                           	opt stack 0
 24705  01724E                     __div_to_l_:
 24706                           	opt stack 14
 24707                           
 24708                           ; BSR set to: 1
 24709                           ;incstack = 0
 24710  01724E  0101               	movlb	1	; () banked
 24711  017250  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 24712  017252  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 24713  017254  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 24714  017256  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 24715  017258  A4D8               	btfss	status,2,c
 24716  01725A  D009               	goto	l1934
 24717                           
 24718                           ; BSR set to: 1
 24719  01725C  0E00               	movlw	0
 24720  01725E  6F17               	movwf	?__div_to_l_& (0+255),b
 24721  017260  0E00               	movlw	0
 24722  017262  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 24723  017264  0E00               	movlw	0
 24724  017266  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 24725  017268  0E00               	movlw	0
 24726  01726A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 24727                           
 24728                           ; BSR set to: 1
 24729  01726C  0012               	return	
 24730  01726E                     l1934:
 24731                           
 24732                           ; BSR set to: 1
 24733                           
 24734                           ; BSR set to: 1
 24735  01726E  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 24736  017270  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 24737  017272  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 24738  017274  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 24739  017276  A4D8               	btfss	status,2,c
 24740  017278  D009               	goto	l1936
 24741                           
 24742                           ; BSR set to: 1
 24743  01727A  0E00               	movlw	0
 24744  01727C  6F17               	movwf	?__div_to_l_& (0+255),b
 24745  01727E  0E00               	movlw	0
 24746  017280  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 24747  017282  0E00               	movlw	0
 24748  017284  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 24749  017286  0E00               	movlw	0
 24750  017288  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 24751                           
 24752                           ; BSR set to: 1
 24753  01728A  0012               	return	
 24754  01728C                     l1936:
 24755                           
 24756                           ; BSR set to: 1
 24757                           
 24758                           ; BSR set to: 1
 24759  01728C  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 24760                           
 24761                           ; BSR set to: 1
 24762  01728E  0EFF               	movlw	255
 24763  017290  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 24764  017292  0EFF               	movlw	255
 24765  017294  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 24766  017296  0EFF               	movlw	255
 24767  017298  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 24768  01729A  0E00               	movlw	0
 24769  01729C  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 24770                           
 24771                           ; BSR set to: 1
 24772  01729E  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 24773  0172A0  0EFF               	movlw	255
 24774  0172A2  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 24775  0172A4  0EFF               	movlw	255
 24776  0172A6  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 24777  0172A8  0EFF               	movlw	255
 24778  0172AA  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 24779  0172AC  0E00               	movlw	0
 24780  0172AE  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 24781                           
 24782                           ; BSR set to: 1
 24783  0172B0  0E00               	movlw	0
 24784  0172B2  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 24785  0172B4  0E00               	movlw	0
 24786  0172B6  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 24787  0172B8  0E00               	movlw	0
 24788  0172BA  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 24789  0172BC  0E00               	movlw	0
 24790  0172BE  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 24791                           
 24792                           ; BSR set to: 1
 24793  0172C0  0E7F               	movlw	127
 24794  0172C2  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 24795                           
 24796                           ; BSR set to: 1
 24797  0172C4  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 24798  0172C6  0FA0               	addlw	160
 24799  0172C8  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 24800                           
 24801                           ; BSR set to: 1
 24802  0172CA  0E20               	movlw	32
 24803  0172CC  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 24804  0172CE                     
 24805                           ; BSR set to: 1
 24806                           
 24807                           ; BSR set to: 1
 24808  0172CE  90D8               	bcf	status,0,c
 24809  0172D0  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 24810  0172D2  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 24811  0172D4  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 24812  0172D6  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 24813                           
 24814                           ; BSR set to: 1
 24815  0172D8  511B               	movf	__div_to_l_@f2& (0+255),w,b
 24816  0172DA  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 24817  0172DC  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 24818  0172DE  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 24819  0172E0  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 24820  0172E2  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 24821  0172E4  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 24822  0172E6  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 24823  0172E8  A0D8               	btfss	status,0,c
 24824  0172EA  D009               	goto	l1938
 24825                           
 24826                           ; BSR set to: 1
 24827  0172EC  511B               	movf	__div_to_l_@f2& (0+255),w,b
 24828  0172EE  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 24829  0172F0  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 24830  0172F2  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 24831  0172F4  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 24832  0172F6  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 24833  0172F8  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 24834  0172FA  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 24835                           
 24836                           ; BSR set to: 1
 24837  0172FC  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 24838  0172FE                     l1938:
 24839                           
 24840                           ; BSR set to: 1
 24841                           
 24842                           ; BSR set to: 1
 24843  0172FE  90D8               	bcf	status,0,c
 24844  017300  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 24845  017302  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 24846  017304  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 24847  017306  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 24848                           
 24849                           ; BSR set to: 1
 24850  017308  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 24851  01730A  D7E1               	goto	l1937
 24852                           
 24853                           ; BSR set to: 1
 24854                           
 24855                           ; BSR set to: 1
 24856  01730C  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 24857  01730E  D016               	goto	l1940
 24858                           
 24859                           ; BSR set to: 1
 24860  017310  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 24861  017312  0A80               	xorlw	128
 24862  017314  0F9F               	addlw	159
 24863  017316  B0D8               	btfsc	status,0,c
 24864  017318  D009               	goto	l1941
 24865                           
 24866                           ; BSR set to: 1
 24867  01731A  0E00               	movlw	0
 24868  01731C  6F17               	movwf	?__div_to_l_& (0+255),b
 24869  01731E  0E00               	movlw	0
 24870  017320  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 24871  017322  0E00               	movlw	0
 24872  017324  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 24873  017326  0E00               	movlw	0
 24874  017328  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 24875                           
 24876                           ; BSR set to: 1
 24877  01732A  0012               	return	
 24878  01732C                     l1941:
 24879                           
 24880                           ; BSR set to: 1
 24881                           
 24882                           ; BSR set to: 1
 24883                           
 24884                           ; BSR set to: 1
 24885  01732C  90D8               	bcf	status,0,c
 24886  01732E  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 24887  017330  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 24888  017332  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 24889  017334  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 24890                           
 24891                           ; BSR set to: 1
 24892  017336  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 24893  017338  D7F9               	goto	l1941
 24894                           
 24895                           ; BSR set to: 1
 24896  01733A  D015               	goto	u24670
 24897  01733C                     l1940:
 24898                           
 24899                           ; BSR set to: 1
 24900                           
 24901                           ; BSR set to: 1
 24902  01733C  0E1F               	movlw	31
 24903  01733E  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 24904  017340  D00F               	goto	l1946
 24905                           
 24906                           ; BSR set to: 1
 24907  017342  0E00               	movlw	0
 24908  017344  6F17               	movwf	?__div_to_l_& (0+255),b
 24909  017346  0E00               	movlw	0
 24910  017348  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 24911  01734A  0E00               	movlw	0
 24912  01734C  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 24913  01734E  0E00               	movlw	0
 24914  017350  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 24915                           
 24916                           ; BSR set to: 1
 24917  017352  0012               	return	
 24918  017354                     
 24919                           ; BSR set to: 1
 24920                           
 24921                           ; BSR set to: 1
 24922  017354  90D8               	bcf	status,0,c
 24923  017356  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 24924  017358  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 24925  01735A  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 24926  01735C  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 24927  01735E  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 24928  017360                     l1946:
 24929                           
 24930                           ; BSR set to: 1
 24931                           
 24932                           ; BSR set to: 1
 24933  017360  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 24934  017362  A4D8               	btfss	status,2,c
 24935  017364  D7F7               	goto	l1947
 24936  017366                     u24670:
 24937                           
 24938                           ; BSR set to: 1
 24939                           
 24940                           ; BSR set to: 1
 24941  017366  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 24942  01736A  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 24943  01736E  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 24944  017372  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 24945                           
 24946                           ; BSR set to: 1
 24947  017376  0012               	return		;funcret
 24948  017378                     __end_of__div_to_l_:
 24949                           	opt stack 0
 24950                           tblptru	equ	0xFF8
 24951                           tblptrh	equ	0xFF7
 24952                           tblptrl	equ	0xFF6
 24953                           tablat	equ	0xFF5
 24954                           prodh	equ	0xFF4
 24955                           prodl	equ	0xFF3
 24956                           intcon	equ	0xFF2
 24957                           indf0	equ	0xFEF
 24958                           postinc0	equ	0xFEE
 24959                           fsr0h	equ	0xFEA
 24960                           fsr0l	equ	0xFE9
 24961                           wreg	equ	0xFE8
 24962                           indf1	equ	0xFE7
 24963                           postdec1	equ	0xFE5
 24964                           plusw1	equ	0xFE3
 24965                           fsr1h	equ	0xFE2
 24966                           fsr1l	equ	0xFE1
 24967                           indf2	equ	0xFDF
 24968                           postinc2	equ	0xFDE
 24969                           postdec2	equ	0xFDD
 24970                           plusw2	equ	0xFDB
 24971                           fsr2h	equ	0xFDA
 24972                           fsr2l	equ	0xFD9
 24973                           status	equ	0xFD8
 24974                           
 24975 ;; *************** function ___xxtofl *****************
 24976 ;; Defined at:
 24977 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 24978 ;; Parameters:    Size  Location     Type
 24979 ;;  sign            1    wreg     unsigned char 
 24980 ;;  val             4   23[BANK1 ] long 
 24981 ;; Auto vars:     Size  Location     Type
 24982 ;;  sign            1   31[BANK1 ] unsigned char 
 24983 ;;  arg             4   33[BANK1 ] unsigned long 
 24984 ;;  exp             1   32[BANK1 ] unsigned char 
 24985 ;; Return value:  Size  Location     Type
 24986 ;;                  4   23[BANK1 ] unsigned char 
 24987 ;; Registers used:
 24988 ;;		wreg, status,2, status,0
 24989 ;; Tracked objects:
 24990 ;;		On entry : 0/0
 24991 ;;		On exit  : 0/0
 24992 ;;		Unchanged: 0/0
 24993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24994 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24995 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24996 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24997 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24998 ;;Total ram usage:       14 bytes
 24999 ;; Hardware stack levels used:    1
 25000 ;; Hardware stack levels required when called:   13
 25001 ;; This function calls:
 25002 ;;		Nothing
 25003 ;; This function is called by:
 25004 ;;		_ringBufferLUT
 25005 ;;		_printf
 25006 ;; This function uses a non-reentrant model
 25007 ;;
 25008                           
 25009                           	psect	text40
 25010  016D44                     __ptext40:
 25011                           	opt stack 0
 25012  016D44                     ___xxtofl:
 25013                           	opt stack 14
 25014                           
 25015                           ; BSR set to: 1
 25016                           ;incstack = 0
 25017                           ;___xxtofl@sign stored from wreg
 25018  016D44  0101               	movlb	1	; () banked
 25019  016D46  6F1F               	movwf	___xxtofl@sign& (0+255),b
 25020  016D48  0101               	movlb	1	; () banked
 25021  016D4A  511F               	movf	___xxtofl@sign& (0+255),w,b
 25022  016D4C  A4D8               	btfss	status,2,c
 25023                           
 25024                           ; BSR set to: 1
 25025  016D4E  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 25026  016D50  D01A               	goto	l2414
 25027                           
 25028                           ; BSR set to: 1
 25029  016D52  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 25030  016D56  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 25031  016D5A  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 25032  016D5E  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 25033  016D62  1F1B               	comf	??___xxtofl& (0+255),f,b
 25034  016D64  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 25035  016D66  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 25036  016D68  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 25037  016D6A  2B1B               	incf	??___xxtofl& (0+255),f,b
 25038  016D6C  0E00               	movlw	0
 25039  016D6E  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 25040  016D70  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 25041  016D72  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 25042  016D74  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 25043  016D78  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 25044  016D7C  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 25045  016D80  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 25046  016D84  D008               	goto	l2415
 25047  016D86                     l2414:
 25048                           
 25049                           ; BSR set to: 1
 25050  016D86  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 25051  016D8A  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 25052  016D8E  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 25053  016D92  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 25054  016D96                     l2415:
 25055                           
 25056                           ; BSR set to: 1
 25057                           
 25058                           ; BSR set to: 1
 25059  016D96  5117               	movf	___xxtofl@val& (0+255),w,b
 25060  016D98  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 25061  016D9A  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 25062  016D9C  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 25063  016D9E  A4D8               	btfss	status,2,c
 25064  016DA0  D009               	goto	l2416
 25065                           
 25066                           ; BSR set to: 1
 25067  016DA2  0E00               	movlw	0
 25068  016DA4  6F17               	movwf	?___xxtofl& (0+255),b
 25069  016DA6  0E00               	movlw	0
 25070  016DA8  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 25071  016DAA  0E00               	movlw	0
 25072  016DAC  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 25073  016DAE  0E00               	movlw	0
 25074  016DB0  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 25075                           
 25076                           ; BSR set to: 1
 25077  016DB2  0012               	return	
 25078  016DB4                     l2416:
 25079                           
 25080                           ; BSR set to: 1
 25081                           
 25082                           ; BSR set to: 1
 25083  016DB4  0E96               	movlw	150
 25084  016DB6  6F20               	movwf	___xxtofl@exp& (0+255),b
 25085  016DB8  D006               	goto	l2418
 25086  016DBA                     
 25087                           ; BSR set to: 1
 25088                           
 25089                           ; BSR set to: 1
 25090  016DBA  2B20               	incf	___xxtofl@exp& (0+255),f,b
 25091  016DBC  90D8               	bcf	status,0,c
 25092  016DBE  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 25093  016DC0  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 25094  016DC2  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 25095  016DC4  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 25096  016DC6                     l2418:
 25097                           
 25098                           ; BSR set to: 1
 25099                           
 25100                           ; BSR set to: 1
 25101  016DC6  0E00               	movlw	0
 25102  016DC8  1521               	andwf	___xxtofl@arg& (0+255),w,b
 25103  016DCA  6F1B               	movwf	??___xxtofl& (0+255),b
 25104  016DCC  0E00               	movlw	0
 25105  016DCE  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 25106  016DD0  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 25107  016DD2  0E00               	movlw	0
 25108  016DD4  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 25109  016DD6  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 25110  016DD8  0EFE               	movlw	254
 25111  016DDA  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 25112  016DDC  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 25113  016DDE  511B               	movf	??___xxtofl& (0+255),w,b
 25114  016DE0  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 25115  016DE2  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 25116  016DE4  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 25117  016DE6  B4D8               	btfsc	status,2,c
 25118  016DE8  D00D               	goto	l2421
 25119  016DEA  D7E7               	goto	l2419
 25120  016DEC                     
 25121                           ; BSR set to: 1
 25122                           
 25123                           ; BSR set to: 1
 25124  016DEC  2B20               	incf	___xxtofl@exp& (0+255),f,b
 25125                           
 25126                           ; BSR set to: 1
 25127  016DEE  0E01               	movlw	1
 25128  016DF0  2721               	addwf	___xxtofl@arg& (0+255),f,b
 25129  016DF2  0E00               	movlw	0
 25130  016DF4  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 25131  016DF6  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 25132  016DF8  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 25133                           
 25134                           ; BSR set to: 1
 25135  016DFA  90D8               	bcf	status,0,c
 25136  016DFC  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 25137  016DFE  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 25138  016E00  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 25139  016E02  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 25140  016E04                     l2421:
 25141                           
 25142                           ; BSR set to: 1
 25143  016E04  0E00               	movlw	0
 25144  016E06  1521               	andwf	___xxtofl@arg& (0+255),w,b
 25145  016E08  6F1B               	movwf	??___xxtofl& (0+255),b
 25146  016E0A  0E00               	movlw	0
 25147  016E0C  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 25148  016E0E  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 25149  016E10  0E00               	movlw	0
 25150  016E12  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 25151  016E14  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 25152  016E16  0EFF               	movlw	255
 25153  016E18  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 25154  016E1A  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 25155  016E1C  511B               	movf	??___xxtofl& (0+255),w,b
 25156  016E1E  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 25157  016E20  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 25158  016E22  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 25159  016E24  B4D8               	btfsc	status,2,c
 25160  016E26  D007               	goto	l2424
 25161  016E28  D7E1               	goto	l2422
 25162  016E2A                     
 25163                           ; BSR set to: 1
 25164                           
 25165                           ; BSR set to: 1
 25166  016E2A  0720               	decf	___xxtofl@exp& (0+255),f,b
 25167  016E2C  90D8               	bcf	status,0,c
 25168  016E2E  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 25169  016E30  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 25170  016E32  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 25171  016E34  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 25172  016E36                     l2424:
 25173                           
 25174                           ; BSR set to: 1
 25175                           
 25176                           ; BSR set to: 1
 25177  016E36  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 25178  016E38  D003               	goto	u24930
 25179                           
 25180                           ; BSR set to: 1
 25181  016E3A  0E02               	movlw	2
 25182  016E3C  6120               	cpfslt	___xxtofl@exp& (0+255),b
 25183  016E3E  D7F5               	goto	l2425
 25184  016E40                     u24930:
 25185                           
 25186                           ; BSR set to: 1
 25187                           
 25188                           ; BSR set to: 1
 25189  016E40  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 25190  016E42  D008               	goto	l2429
 25191                           
 25192                           ; BSR set to: 1
 25193  016E44  0EFF               	movlw	255
 25194  016E46  1721               	andwf	___xxtofl@arg& (0+255),f,b
 25195  016E48  0EFF               	movlw	255
 25196  016E4A  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 25197  016E4C  0E7F               	movlw	127
 25198  016E4E  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 25199  016E50  0EFF               	movlw	255
 25200  016E52  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 25201  016E54                     l2429:
 25202                           
 25203                           ; BSR set to: 1
 25204  016E54  90D8               	bcf	status,0,c
 25205  016E56  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 25206  016E58  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 25207  016E5C  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 25208  016E5E  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 25209  016E60  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 25210  016E62  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 25211  016E66  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 25212  016E68  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 25213  016E6A  6B1B               	clrf	??___xxtofl& (0+255),b
 25214  016E6C  511B               	movf	??___xxtofl& (0+255),w,b
 25215  016E6E  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 25216  016E70  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 25217  016E72  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 25218  016E74  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 25219  016E76  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 25220  016E78  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 25221  016E7A  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 25222                           
 25223                           ; BSR set to: 1
 25224  016E7C  511F               	movf	___xxtofl@sign& (0+255),w,b
 25225  016E7E  A4D8               	btfss	status,2,c
 25226                           
 25227                           ; BSR set to: 1
 25228  016E80  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 25229  016E82  D001               	goto	l2430
 25230                           
 25231                           ; BSR set to: 1
 25232  016E84  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 25233  016E86                     l2430:
 25234                           
 25235                           ; BSR set to: 1
 25236                           
 25237                           ; BSR set to: 1
 25238  016E86  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 25239  016E8A  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 25240  016E8E  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 25241  016E92  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 25242  016E96  0012               	return	
 25243  016E98                     __end_of___xxtofl:
 25244                           	opt stack 0
 25245                           tblptru	equ	0xFF8
 25246                           tblptrh	equ	0xFF7
 25247                           tblptrl	equ	0xFF6
 25248                           tablat	equ	0xFF5
 25249                           prodh	equ	0xFF4
 25250                           prodl	equ	0xFF3
 25251                           intcon	equ	0xFF2
 25252                           indf0	equ	0xFEF
 25253                           postinc0	equ	0xFEE
 25254                           fsr0h	equ	0xFEA
 25255                           fsr0l	equ	0xFE9
 25256                           wreg	equ	0xFE8
 25257                           indf1	equ	0xFE7
 25258                           postdec1	equ	0xFE5
 25259                           plusw1	equ	0xFE3
 25260                           fsr1h	equ	0xFE2
 25261                           fsr1l	equ	0xFE1
 25262                           indf2	equ	0xFDF
 25263                           postinc2	equ	0xFDE
 25264                           postdec2	equ	0xFDD
 25265                           plusw2	equ	0xFDB
 25266                           fsr2h	equ	0xFDA
 25267                           fsr2l	equ	0xFD9
 25268                           status	equ	0xFD8
 25269                           
 25270 ;; *************** function ___wmul *****************
 25271 ;; Defined at:
 25272 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 25273 ;; Parameters:    Size  Location     Type
 25274 ;;  multiplier      2   23[BANK1 ] unsigned int 
 25275 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 25276 ;; Auto vars:     Size  Location     Type
 25277 ;;  product         2   27[BANK1 ] unsigned int 
 25278 ;; Return value:  Size  Location     Type
 25279 ;;                  2   23[BANK1 ] unsigned int 
 25280 ;; Registers used:
 25281 ;;		wreg, status,2, status,0, prodl, prodh
 25282 ;; Tracked objects:
 25283 ;;		On entry : 0/0
 25284 ;;		On exit  : 0/0
 25285 ;;		Unchanged: 0/0
 25286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25287 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25288 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25290 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25291 ;;Total ram usage:        6 bytes
 25292 ;; Hardware stack levels used:    1
 25293 ;; Hardware stack levels required when called:   13
 25294 ;; This function calls:
 25295 ;;		Nothing
 25296 ;; This function is called by:
 25297 ;;		_ringBufferLUT
 25298 ;;		_printf
 25299 ;;		_atoi
 25300 ;; This function uses a non-reentrant model
 25301 ;;
 25302                           
 25303                           	psect	text41
 25304  01909A                     __ptext41:
 25305                           	opt stack 0
 25306  01909A                     ___wmul:
 25307                           	opt stack 14
 25308                           
 25309                           ; BSR set to: 1
 25310                           ;incstack = 0
 25311  01909A  0101               	movlb	1	; () banked
 25312  01909C  5117               	movf	___wmul@multiplier& (0+255),w,b
 25313  01909E  0319               	mulwf	___wmul@multiplicand& (0+255),b
 25314  0190A0  CFF3 F11B          	movff	prodl,___wmul@product
 25315  0190A4  CFF4 F11C          	movff	prodh,___wmul@product+1
 25316  0190A8  5117               	movf	___wmul@multiplier& (0+255),w,b
 25317  0190AA  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 25318  0190AC  50F3               	movf	prodl,w,c
 25319  0190AE  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 25320  0190B0  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 25321  0190B2  0319               	mulwf	___wmul@multiplicand& (0+255),b
 25322  0190B4  50F3               	movf	prodl,w,c
 25323  0190B6  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 25324                           
 25325                           ; BSR set to: 1
 25326  0190B8  C11B  F117         	movff	___wmul@product,?___wmul
 25327  0190BC  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 25328  0190C0  0012               	return	
 25329  0190C2                     __end_of___wmul:
 25330                           	opt stack 0
 25331                           tblptru	equ	0xFF8
 25332                           tblptrh	equ	0xFF7
 25333                           tblptrl	equ	0xFF6
 25334                           tablat	equ	0xFF5
 25335                           prodh	equ	0xFF4
 25336                           prodl	equ	0xFF3
 25337                           intcon	equ	0xFF2
 25338                           indf0	equ	0xFEF
 25339                           postinc0	equ	0xFEE
 25340                           fsr0h	equ	0xFEA
 25341                           fsr0l	equ	0xFE9
 25342                           wreg	equ	0xFE8
 25343                           indf1	equ	0xFE7
 25344                           postdec1	equ	0xFE5
 25345                           plusw1	equ	0xFE3
 25346                           fsr1h	equ	0xFE2
 25347                           fsr1l	equ	0xFE1
 25348                           indf2	equ	0xFDF
 25349                           postinc2	equ	0xFDE
 25350                           postdec2	equ	0xFDD
 25351                           plusw2	equ	0xFDB
 25352                           fsr2h	equ	0xFDA
 25353                           fsr2l	equ	0xFD9
 25354                           status	equ	0xFD8
 25355                           
 25356 ;; *************** function ___llmod *****************
 25357 ;; Defined at:
 25358 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 25359 ;; Parameters:    Size  Location     Type
 25360 ;;  dividend        4   36[BANK1 ] unsigned long 
 25361 ;;  divisor         4   40[BANK1 ] unsigned long 
 25362 ;; Auto vars:     Size  Location     Type
 25363 ;;  counter         1   44[BANK1 ] unsigned char 
 25364 ;; Return value:  Size  Location     Type
 25365 ;;                  4   36[BANK1 ] unsigned long 
 25366 ;; Registers used:
 25367 ;;		wreg, status,2, status,0
 25368 ;; Tracked objects:
 25369 ;;		On entry : 0/0
 25370 ;;		On exit  : 0/0
 25371 ;;		Unchanged: 0/0
 25372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25373 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25374 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25376 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25377 ;;Total ram usage:        9 bytes
 25378 ;; Hardware stack levels used:    1
 25379 ;; Hardware stack levels required when called:   13
 25380 ;; This function calls:
 25381 ;;		Nothing
 25382 ;; This function is called by:
 25383 ;;		_printf
 25384 ;; This function uses a non-reentrant model
 25385 ;;
 25386                           
 25387                           	psect	text42
 25388  01877A                     __ptext42:
 25389                           	opt stack 0
 25390  01877A                     ___llmod:
 25391                           	opt stack 14
 25392                           
 25393                           ; BSR set to: 1
 25394                           ;incstack = 0
 25395  01877A  0101               	movlb	1	; () banked
 25396  01877C  5128               	movf	___llmod@divisor& (0+255),w,b
 25397  01877E  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 25398  018780  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 25399  018782  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 25400  018784  B4D8               	btfsc	status,2,c
 25401  018786  D024               	goto	l2139
 25402                           
 25403                           ; BSR set to: 1
 25404  018788  0E01               	movlw	1
 25405  01878A  6F2C               	movwf	___llmod@counter& (0+255),b
 25406  01878C  D006               	goto	l2134
 25407  01878E                     
 25408                           ; BSR set to: 1
 25409                           
 25410                           ; BSR set to: 1
 25411  01878E  90D8               	bcf	status,0,c
 25412  018790  3728               	rlcf	___llmod@divisor& (0+255),f,b
 25413  018792  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 25414  018794  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 25415  018796  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 25416  018798  2B2C               	incf	___llmod@counter& (0+255),f,b
 25417  01879A                     l2134:
 25418                           
 25419                           ; BSR set to: 1
 25420                           
 25421                           ; BSR set to: 1
 25422  01879A  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 25423  01879C  D7F8               	goto	l2135
 25424  01879E                     u24850:
 25425                           
 25426                           ; BSR set to: 1
 25427                           
 25428                           ; BSR set to: 1
 25429                           
 25430                           ; BSR set to: 1
 25431  01879E  5128               	movf	___llmod@divisor& (0+255),w,b
 25432  0187A0  5D24               	subwf	___llmod@dividend& (0+255),w,b
 25433  0187A2  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 25434  0187A4  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 25435  0187A6  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 25436  0187A8  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 25437  0187AA  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 25438  0187AC  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 25439  0187AE  A0D8               	btfss	status,0,c
 25440  0187B0  D008               	goto	l2138
 25441                           
 25442                           ; BSR set to: 1
 25443  0187B2  5128               	movf	___llmod@divisor& (0+255),w,b
 25444  0187B4  5F24               	subwf	___llmod@dividend& (0+255),f,b
 25445  0187B6  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 25446  0187B8  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 25447  0187BA  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 25448  0187BC  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 25449  0187BE  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 25450  0187C0  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 25451  0187C2                     l2138:
 25452                           
 25453                           ; BSR set to: 1
 25454                           
 25455                           ; BSR set to: 1
 25456  0187C2  90D8               	bcf	status,0,c
 25457  0187C4  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 25458  0187C6  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 25459  0187C8  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 25460  0187CA  3328               	rrcf	___llmod@divisor& (0+255),f,b
 25461                           
 25462                           ; BSR set to: 1
 25463  0187CC  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 25464  0187CE  D7E7               	goto	u24850
 25465  0187D0                     l2139:
 25466                           
 25467                           ; BSR set to: 1
 25468                           
 25469                           ; BSR set to: 1
 25470  0187D0  C124  F124         	movff	___llmod@dividend,?___llmod
 25471  0187D4  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 25472  0187D8  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 25473  0187DC  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 25474                           
 25475                           ; BSR set to: 1
 25476  0187E0  0012               	return		;funcret
 25477  0187E2                     __end_of___llmod:
 25478                           	opt stack 0
 25479                           tblptru	equ	0xFF8
 25480                           tblptrh	equ	0xFF7
 25481                           tblptrl	equ	0xFF6
 25482                           tablat	equ	0xFF5
 25483                           prodh	equ	0xFF4
 25484                           prodl	equ	0xFF3
 25485                           intcon	equ	0xFF2
 25486                           indf0	equ	0xFEF
 25487                           postinc0	equ	0xFEE
 25488                           fsr0h	equ	0xFEA
 25489                           fsr0l	equ	0xFE9
 25490                           wreg	equ	0xFE8
 25491                           indf1	equ	0xFE7
 25492                           postdec1	equ	0xFE5
 25493                           plusw1	equ	0xFE3
 25494                           fsr1h	equ	0xFE2
 25495                           fsr1l	equ	0xFE1
 25496                           indf2	equ	0xFDF
 25497                           postinc2	equ	0xFDE
 25498                           postdec2	equ	0xFDD
 25499                           plusw2	equ	0xFDB
 25500                           fsr2h	equ	0xFDA
 25501                           fsr2l	equ	0xFD9
 25502                           status	equ	0xFD8
 25503                           
 25504 ;; *************** function ___lldiv *****************
 25505 ;; Defined at:
 25506 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 25507 ;; Parameters:    Size  Location     Type
 25508 ;;  dividend        4   23[BANK1 ] unsigned long 
 25509 ;;  divisor         4   27[BANK1 ] unsigned long 
 25510 ;; Auto vars:     Size  Location     Type
 25511 ;;  quotient        4   32[BANK1 ] unsigned long 
 25512 ;;  counter         1   31[BANK1 ] unsigned char 
 25513 ;; Return value:  Size  Location     Type
 25514 ;;                  4   23[BANK1 ] unsigned long 
 25515 ;; Registers used:
 25516 ;;		wreg, status,2, status,0
 25517 ;; Tracked objects:
 25518 ;;		On entry : 0/0
 25519 ;;		On exit  : 0/0
 25520 ;;		Unchanged: 0/0
 25521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25522 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25523 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25525 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25526 ;;Total ram usage:       13 bytes
 25527 ;; Hardware stack levels used:    1
 25528 ;; Hardware stack levels required when called:   13
 25529 ;; This function calls:
 25530 ;;		Nothing
 25531 ;; This function is called by:
 25532 ;;		_printf
 25533 ;; This function uses a non-reentrant model
 25534 ;;
 25535                           
 25536                           	psect	text43
 25537  0182D8                     __ptext43:
 25538                           	opt stack 0
 25539  0182D8                     ___lldiv:
 25540                           	opt stack 14
 25541                           
 25542                           ; BSR set to: 1
 25543                           ;incstack = 0
 25544  0182D8  0E00               	movlw	0
 25545  0182DA  0101               	movlb	1	; () banked
 25546  0182DC  6F20               	movwf	___lldiv@quotient& (0+255),b
 25547  0182DE  0E00               	movlw	0
 25548  0182E0  6F21               	movwf	(___lldiv@quotient+1)& (0+255),b
 25549  0182E2  0E00               	movlw	0
 25550  0182E4  6F22               	movwf	(___lldiv@quotient+2)& (0+255),b
 25551  0182E6  0E00               	movlw	0
 25552  0182E8  6F23               	movwf	(___lldiv@quotient+3)& (0+255),b
 25553                           
 25554                           ; BSR set to: 1
 25555  0182EA  511B               	movf	___lldiv@divisor& (0+255),w,b
 25556  0182EC  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 25557  0182EE  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 25558  0182F0  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 25559  0182F2  B4D8               	btfsc	status,2,c
 25560  0182F4  D02A               	goto	l2129
 25561                           
 25562                           ; BSR set to: 1
 25563  0182F6  0E01               	movlw	1
 25564  0182F8  6F1F               	movwf	___lldiv@counter& (0+255),b
 25565  0182FA  D006               	goto	l2124
 25566  0182FC                     
 25567                           ; BSR set to: 1
 25568                           
 25569                           ; BSR set to: 1
 25570  0182FC  90D8               	bcf	status,0,c
 25571  0182FE  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 25572  018300  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 25573  018302  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 25574  018304  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 25575  018306  2B1F               	incf	___lldiv@counter& (0+255),f,b
 25576  018308                     l2124:
 25577                           
 25578                           ; BSR set to: 1
 25579                           
 25580                           ; BSR set to: 1
 25581  018308  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 25582  01830A  D7F8               	goto	l2125
 25583  01830C                     u24820:
 25584                           
 25585                           ; BSR set to: 1
 25586                           
 25587                           ; BSR set to: 1
 25588                           
 25589                           ; BSR set to: 1
 25590  01830C  90D8               	bcf	status,0,c
 25591  01830E  3720               	rlcf	___lldiv@quotient& (0+255),f,b
 25592  018310  3721               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 25593  018312  3722               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 25594  018314  3723               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 25595                           
 25596                           ; BSR set to: 1
 25597  018316  511B               	movf	___lldiv@divisor& (0+255),w,b
 25598  018318  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 25599  01831A  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25600  01831C  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 25601  01831E  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25602  018320  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 25603  018322  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25604  018324  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 25605  018326  A0D8               	btfss	status,0,c
 25606  018328  D009               	goto	l2128
 25607                           
 25608                           ; BSR set to: 1
 25609  01832A  511B               	movf	___lldiv@divisor& (0+255),w,b
 25610  01832C  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 25611  01832E  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25612  018330  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 25613  018332  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25614  018334  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 25615  018336  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25616  018338  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 25617                           
 25618                           ; BSR set to: 1
 25619  01833A  8120               	bsf	___lldiv@quotient& (0+255),0,b
 25620  01833C                     l2128:
 25621                           
 25622                           ; BSR set to: 1
 25623                           
 25624                           ; BSR set to: 1
 25625  01833C  90D8               	bcf	status,0,c
 25626  01833E  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 25627  018340  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 25628  018342  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 25629  018344  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 25630                           
 25631                           ; BSR set to: 1
 25632  018346  2F1F               	decfsz	___lldiv@counter& (0+255),f,b
 25633  018348  D7E1               	goto	u24820
 25634  01834A                     l2129:
 25635                           
 25636                           ; BSR set to: 1
 25637                           
 25638                           ; BSR set to: 1
 25639  01834A  C120  F117         	movff	___lldiv@quotient,?___lldiv
 25640  01834E  C121  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 25641  018352  C122  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 25642  018356  C123  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 25643                           
 25644                           ; BSR set to: 1
 25645  01835A  0012               	return		;funcret
 25646  01835C                     __end_of___lldiv:
 25647                           	opt stack 0
 25648                           tblptru	equ	0xFF8
 25649                           tblptrh	equ	0xFF7
 25650                           tblptrl	equ	0xFF6
 25651                           tablat	equ	0xFF5
 25652                           prodh	equ	0xFF4
 25653                           prodl	equ	0xFF3
 25654                           intcon	equ	0xFF2
 25655                           indf0	equ	0xFEF
 25656                           postinc0	equ	0xFEE
 25657                           fsr0h	equ	0xFEA
 25658                           fsr0l	equ	0xFE9
 25659                           wreg	equ	0xFE8
 25660                           indf1	equ	0xFE7
 25661                           postdec1	equ	0xFE5
 25662                           plusw1	equ	0xFE3
 25663                           fsr1h	equ	0xFE2
 25664                           fsr1l	equ	0xFE1
 25665                           indf2	equ	0xFDF
 25666                           postinc2	equ	0xFDE
 25667                           postdec2	equ	0xFDD
 25668                           plusw2	equ	0xFDB
 25669                           fsr2h	equ	0xFDA
 25670                           fsr2l	equ	0xFD9
 25671                           status	equ	0xFD8
 25672                           
 25673 ;; *************** function ___fltol *****************
 25674 ;; Defined at:
 25675 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 25676 ;; Parameters:    Size  Location     Type
 25677 ;;  f1              4  120[BANK1 ] unsigned long 
 25678 ;; Auto vars:     Size  Location     Type
 25679 ;;  exp1            1  129[BANK1 ] unsigned char 
 25680 ;;  sign1           1  128[BANK1 ] unsigned char 
 25681 ;; Return value:  Size  Location     Type
 25682 ;;                  4  120[BANK1 ] long 
 25683 ;; Registers used:
 25684 ;;		wreg, status,2, status,0
 25685 ;; Tracked objects:
 25686 ;;		On entry : 0/0
 25687 ;;		On exit  : 0/0
 25688 ;;		Unchanged: 0/0
 25689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25690 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25691 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25692 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25693 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25694 ;;Total ram usage:       10 bytes
 25695 ;; Hardware stack levels used:    1
 25696 ;; Hardware stack levels required when called:   13
 25697 ;; This function calls:
 25698 ;;		Nothing
 25699 ;; This function is called by:
 25700 ;;		_printf
 25701 ;; This function uses a non-reentrant model
 25702 ;;
 25703                           
 25704                           	psect	text44
 25705  017B22                     __ptext44:
 25706                           	opt stack 0
 25707  017B22                     ___fltol:
 25708                           	opt stack 14
 25709                           
 25710                           ; BSR set to: 1
 25711                           ;incstack = 0
 25712  017B22  0101               	movlb	1	; () banked
 25713  017B24  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 25714  017B26  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 25715  017B28  6F81               	movwf	___fltol@exp1& (0+255),b
 25716  017B2A  5181               	movf	___fltol@exp1& (0+255),w,b
 25717  017B2C  A4D8               	btfss	status,2,c
 25718  017B2E  D009               	goto	l1981
 25719                           
 25720                           ; BSR set to: 1
 25721  017B30  0E00               	movlw	0
 25722  017B32  6F78               	movwf	?___fltol& (0+255),b
 25723  017B34  0E00               	movlw	0
 25724  017B36  6F79               	movwf	(?___fltol+1)& (0+255),b
 25725  017B38  0E00               	movlw	0
 25726  017B3A  6F7A               	movwf	(?___fltol+2)& (0+255),b
 25727  017B3C  0E00               	movlw	0
 25728  017B3E  6F7B               	movwf	(?___fltol+3)& (0+255),b
 25729                           
 25730                           ; BSR set to: 1
 25731  017B40  0012               	return	
 25732  017B42                     l1981:
 25733                           
 25734                           ; BSR set to: 1
 25735                           
 25736                           ; BSR set to: 1
 25737  017B42  C178  F17C         	movff	___fltol@f1,??___fltol
 25738  017B46  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 25739  017B4A  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 25740  017B4E  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 25741  017B52  0E20               	movlw	32
 25742  017B54  D005               	goto	u24750
 25743  017B56                     u24755:
 25744  017B56  90D8               	bcf	status,0,c
 25745  017B58  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 25746  017B5A  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 25747  017B5C  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 25748  017B5E  337C               	rrcf	??___fltol& (0+255),f,b
 25749  017B60                     u24750:
 25750  017B60  2EE8               	decfsz	wreg,f,c
 25751  017B62  D7F9               	goto	u24755
 25752  017B64  517C               	movf	??___fltol& (0+255),w,b
 25753  017B66  6F80               	movwf	___fltol@sign1& (0+255),b
 25754                           
 25755                           ; BSR set to: 1
 25756  017B68  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 25757                           
 25758                           ; BSR set to: 1
 25759  017B6A  0EFF               	movlw	255
 25760  017B6C  1778               	andwf	___fltol@f1& (0+255),f,b
 25761  017B6E  0EFF               	movlw	255
 25762  017B70  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 25763  017B72  0EFF               	movlw	255
 25764  017B74  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 25765  017B76  0E00               	movlw	0
 25766  017B78  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 25767                           
 25768                           ; BSR set to: 1
 25769  017B7A  0E96               	movlw	150
 25770  017B7C  5F81               	subwf	___fltol@exp1& (0+255),f,b
 25771                           
 25772                           ; BSR set to: 1
 25773  017B7E  AF81               	btfss	___fltol@exp1& (0+255),7,b
 25774  017B80  D016               	goto	l1983
 25775                           
 25776                           ; BSR set to: 1
 25777  017B82  5181               	movf	___fltol@exp1& (0+255),w,b
 25778  017B84  0A80               	xorlw	128
 25779  017B86  0F97               	addlw	151
 25780  017B88  B0D8               	btfsc	status,0,c
 25781  017B8A  D009               	goto	l1984
 25782                           
 25783                           ; BSR set to: 1
 25784  017B8C  0E00               	movlw	0
 25785  017B8E  6F78               	movwf	?___fltol& (0+255),b
 25786  017B90  0E00               	movlw	0
 25787  017B92  6F79               	movwf	(?___fltol+1)& (0+255),b
 25788  017B94  0E00               	movlw	0
 25789  017B96  6F7A               	movwf	(?___fltol+2)& (0+255),b
 25790  017B98  0E00               	movlw	0
 25791  017B9A  6F7B               	movwf	(?___fltol+3)& (0+255),b
 25792                           
 25793                           ; BSR set to: 1
 25794  017B9C  0012               	return	
 25795  017B9E                     l1984:
 25796                           
 25797                           ; BSR set to: 1
 25798                           
 25799                           ; BSR set to: 1
 25800                           
 25801                           ; BSR set to: 1
 25802  017B9E  90D8               	bcf	status,0,c
 25803  017BA0  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 25804  017BA2  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 25805  017BA4  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 25806  017BA6  3378               	rrcf	___fltol@f1& (0+255),f,b
 25807                           
 25808                           ; BSR set to: 1
 25809  017BA8  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 25810  017BAA  D7F9               	goto	l1984
 25811                           
 25812                           ; BSR set to: 1
 25813  017BAC  D015               	goto	u24790
 25814  017BAE                     l1983:
 25815                           
 25816                           ; BSR set to: 1
 25817                           
 25818                           ; BSR set to: 1
 25819  017BAE  0E1F               	movlw	31
 25820  017BB0  6581               	cpfsgt	___fltol@exp1& (0+255),b
 25821  017BB2  D00F               	goto	l1989
 25822                           
 25823                           ; BSR set to: 1
 25824  017BB4  0E00               	movlw	0
 25825  017BB6  6F78               	movwf	?___fltol& (0+255),b
 25826  017BB8  0E00               	movlw	0
 25827  017BBA  6F79               	movwf	(?___fltol+1)& (0+255),b
 25828  017BBC  0E00               	movlw	0
 25829  017BBE  6F7A               	movwf	(?___fltol+2)& (0+255),b
 25830  017BC0  0E00               	movlw	0
 25831  017BC2  6F7B               	movwf	(?___fltol+3)& (0+255),b
 25832                           
 25833                           ; BSR set to: 1
 25834  017BC4  0012               	return	
 25835  017BC6                     
 25836                           ; BSR set to: 1
 25837                           
 25838                           ; BSR set to: 1
 25839  017BC6  90D8               	bcf	status,0,c
 25840  017BC8  3778               	rlcf	___fltol@f1& (0+255),f,b
 25841  017BCA  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 25842  017BCC  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 25843  017BCE  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 25844  017BD0  0781               	decf	___fltol@exp1& (0+255),f,b
 25845  017BD2                     l1989:
 25846                           
 25847                           ; BSR set to: 1
 25848                           
 25849                           ; BSR set to: 1
 25850  017BD2  5181               	movf	___fltol@exp1& (0+255),w,b
 25851  017BD4  A4D8               	btfss	status,2,c
 25852  017BD6  D7F7               	goto	l1990
 25853  017BD8                     u24790:
 25854                           
 25855                           ; BSR set to: 1
 25856                           
 25857                           ; BSR set to: 1
 25858                           
 25859                           ; BSR set to: 1
 25860  017BD8  5180               	movf	___fltol@sign1& (0+255),w,b
 25861  017BDA  B4D8               	btfsc	status,2,c
 25862  017BDC  D008               	goto	l1992
 25863                           
 25864                           ; BSR set to: 1
 25865  017BDE  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 25866  017BE0  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 25867  017BE2  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 25868  017BE4  6D78               	negf	___fltol@f1& (0+255),b
 25869  017BE6  0E00               	movlw	0
 25870  017BE8  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 25871  017BEA  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 25872  017BEC  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 25873  017BEE                     l1992:
 25874                           
 25875                           ; BSR set to: 1
 25876                           
 25877                           ; BSR set to: 1
 25878  017BEE  C178  F178         	movff	___fltol@f1,?___fltol
 25879  017BF2  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 25880  017BF6  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 25881  017BFA  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 25882  017BFE  0012               	return	
 25883  017C00                     __end_of___fltol:
 25884                           	opt stack 0
 25885                           tblptru	equ	0xFF8
 25886                           tblptrh	equ	0xFF7
 25887                           tblptrl	equ	0xFF6
 25888                           tablat	equ	0xFF5
 25889                           prodh	equ	0xFF4
 25890                           prodl	equ	0xFF3
 25891                           intcon	equ	0xFF2
 25892                           indf0	equ	0xFEF
 25893                           postinc0	equ	0xFEE
 25894                           fsr0h	equ	0xFEA
 25895                           fsr0l	equ	0xFE9
 25896                           wreg	equ	0xFE8
 25897                           indf1	equ	0xFE7
 25898                           postdec1	equ	0xFE5
 25899                           plusw1	equ	0xFE3
 25900                           fsr1h	equ	0xFE2
 25901                           fsr1l	equ	0xFE1
 25902                           indf2	equ	0xFDF
 25903                           postinc2	equ	0xFDE
 25904                           postdec2	equ	0xFDD
 25905                           plusw2	equ	0xFDB
 25906                           fsr2h	equ	0xFDA
 25907                           fsr2l	equ	0xFD9
 25908                           status	equ	0xFD8
 25909                           
 25910 ;; *************** function ___flsub *****************
 25911 ;; Defined at:
 25912 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 25913 ;; Parameters:    Size  Location     Type
 25914 ;;  b               4   61[BANK1 ] long 
 25915 ;;  a               4   65[BANK1 ] long 
 25916 ;; Auto vars:     Size  Location     Type
 25917 ;;		None
 25918 ;; Return value:  Size  Location     Type
 25919 ;;                  4   61[BANK1 ] long 
 25920 ;; Registers used:
 25921 ;;		wreg, status,2, status,0, cstack
 25922 ;; Tracked objects:
 25923 ;;		On entry : 0/0
 25924 ;;		On exit  : 0/0
 25925 ;;		Unchanged: 0/0
 25926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25927 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25930 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25931 ;;Total ram usage:        8 bytes
 25932 ;; Hardware stack levels used:    1
 25933 ;; Hardware stack levels required when called:   14
 25934 ;; This function calls:
 25935 ;;		___fladd
 25936 ;; This function is called by:
 25937 ;;		_printf
 25938 ;; This function uses a non-reentrant model
 25939 ;;
 25940                           
 25941                           	psect	text45
 25942  018C66                     __ptext45:
 25943                           	opt stack 0
 25944  018C66                     ___flsub:
 25945                           	opt stack 13
 25946                           
 25947                           ; BSR set to: 1
 25948                           ;incstack = 0
 25949  018C66  0E00               	movlw	0
 25950  018C68  0101               	movlb	1	; () banked
 25951  018C6A  1B41               	xorwf	___flsub@a& (0+255),f,b
 25952  018C6C  0E00               	movlw	0
 25953  018C6E  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 25954  018C70  0E00               	movlw	0
 25955  018C72  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 25956  018C74  0E80               	movlw	128
 25957  018C76  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 25958                           
 25959                           ; BSR set to: 1
 25960  018C78  C13D  F129         	movff	___flsub@b,___fladd@b
 25961  018C7C  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 25962  018C80  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 25963  018C84  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 25964  018C88  C141  F12D         	movff	___flsub@a,___fladd@a
 25965  018C8C  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 25966  018C90  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 25967  018C94  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 25968  018C98  EC1F  F0A6         	call	___fladd	;wreg free
 25969  018C9C  C129  F13D         	movff	?___fladd,?___flsub
 25970  018CA0  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 25971  018CA4  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 25972  018CA8  C12C  F140         	movff	?___fladd+3,?___flsub+3
 25973  018CAC  0012               	return	
 25974  018CAE                     __end_of___flsub:
 25975                           	opt stack 0
 25976                           tblptru	equ	0xFF8
 25977                           tblptrh	equ	0xFF7
 25978                           tblptrl	equ	0xFF6
 25979                           tablat	equ	0xFF5
 25980                           prodh	equ	0xFF4
 25981                           prodl	equ	0xFF3
 25982                           intcon	equ	0xFF2
 25983                           indf0	equ	0xFEF
 25984                           postinc0	equ	0xFEE
 25985                           fsr0h	equ	0xFEA
 25986                           fsr0l	equ	0xFE9
 25987                           wreg	equ	0xFE8
 25988                           indf1	equ	0xFE7
 25989                           postdec1	equ	0xFE5
 25990                           plusw1	equ	0xFE3
 25991                           fsr1h	equ	0xFE2
 25992                           fsr1l	equ	0xFE1
 25993                           indf2	equ	0xFDF
 25994                           postinc2	equ	0xFDE
 25995                           postdec2	equ	0xFDD
 25996                           plusw2	equ	0xFDB
 25997                           fsr2h	equ	0xFDA
 25998                           fsr2l	equ	0xFD9
 25999                           status	equ	0xFD8
 26000                           
 26001 ;; *************** function ___fladd *****************
 26002 ;; Defined at:
 26003 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 26004 ;; Parameters:    Size  Location     Type
 26005 ;;  b               4   41[BANK1 ] long 
 26006 ;;  a               4   45[BANK1 ] long 
 26007 ;; Auto vars:     Size  Location     Type
 26008 ;;  grs             1   60[BANK1 ] unsigned char 
 26009 ;;  bexp            1   59[BANK1 ] unsigned char 
 26010 ;;  aexp            1   58[BANK1 ] unsigned char 
 26011 ;;  signs           1   57[BANK1 ] unsigned char 
 26012 ;; Return value:  Size  Location     Type
 26013 ;;                  4   41[BANK1 ] unsigned char 
 26014 ;; Registers used:
 26015 ;;		wreg, status,2, status,0
 26016 ;; Tracked objects:
 26017 ;;		On entry : 0/0
 26018 ;;		On exit  : 0/0
 26019 ;;		Unchanged: 0/0
 26020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26021 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26022 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26023 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26024 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26025 ;;Total ram usage:       20 bytes
 26026 ;; Hardware stack levels used:    1
 26027 ;; Hardware stack levels required when called:   13
 26028 ;; This function calls:
 26029 ;;		Nothing
 26030 ;; This function is called by:
 26031 ;;		_ringBufferLUT
 26032 ;;		_printf
 26033 ;;		___flsub
 26034 ;; This function uses a non-reentrant model
 26035 ;;
 26036                           
 26037                           	psect	text46
 26038  014C3E                     __ptext46:
 26039                           	opt stack 0
 26040  014C3E                     ___fladd:
 26041                           	opt stack 13
 26042                           
 26043                           ;incstack = 0
 26044  014C3E  0101               	movlb	1	; () banked
 26045  014C40  512C               	movf	(___fladd@b+3)& (0+255),w,b
 26046  014C42  0B80               	andlw	128
 26047  014C44  6F39               	movwf	___fladd@signs& (0+255),b
 26048  014C46  512C               	movf	(___fladd@b+3)& (0+255),w,b
 26049  014C48  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 26050  014C4A  6F3B               	movwf	___fladd@bexp& (0+255),b
 26051                           
 26052                           ; BSR set to: 1
 26053  014C4C  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 26054                           
 26055                           ; BSR set to: 1
 26056  014C4E  813B               	bsf	___fladd@bexp& (0+255),0,b
 26057                           
 26058                           ; BSR set to: 1
 26059                           
 26060                           ; BSR set to: 1
 26061  014C50  513B               	movf	___fladd@bexp& (0+255),w,b
 26062  014C52  B4D8               	btfsc	status,2,c
 26063  014C54  D00D               	goto	l2221
 26064                           
 26065                           ; BSR set to: 1
 26066  014C56  293B               	incf	___fladd@bexp& (0+255),w,b
 26067  014C58  A4D8               	btfss	status,2,c
 26068  014C5A  D008               	goto	l2222
 26069                           
 26070                           ; BSR set to: 1
 26071  014C5C  0E00               	movlw	0
 26072  014C5E  6F29               	movwf	___fladd@b& (0+255),b
 26073  014C60  0E00               	movlw	0
 26074  014C62  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26075  014C64  0E00               	movlw	0
 26076  014C66  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26077  014C68  0E00               	movlw	0
 26078  014C6A  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26079  014C6C                     l2222:
 26080                           
 26081                           ; BSR set to: 1
 26082                           
 26083                           ; BSR set to: 1
 26084  014C6C  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 26085  014C6E  D006               	goto	L5
 26086  014C70                     l2221:
 26087                           
 26088                           ; BSR set to: 1
 26089                           
 26090                           ; BSR set to: 1
 26091  014C70  0E00               	movlw	0
 26092  014C72  6F29               	movwf	___fladd@b& (0+255),b
 26093  014C74  0E00               	movlw	0
 26094  014C76  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26095  014C78  0E00               	movlw	0
 26096  014C7A  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26097  014C7C                     L5:
 26098  014C7C  0E00               	movlw	0
 26099  014C7E  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26100                           
 26101                           ; BSR set to: 1
 26102                           
 26103                           ; BSR set to: 1
 26104  014C80  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26105  014C82  0B80               	andlw	128
 26106  014C84  6F3A               	movwf	___fladd@aexp& (0+255),b
 26107                           
 26108                           ; BSR set to: 1
 26109  014C86  5139               	movf	___fladd@signs& (0+255),w,b
 26110  014C88  193A               	xorwf	___fladd@aexp& (0+255),w,b
 26111  014C8A  A4D8               	btfss	status,2,c
 26112                           
 26113                           ; BSR set to: 1
 26114  014C8C  8D39               	bsf	___fladd@signs& (0+255),6,b
 26115                           
 26116                           ; BSR set to: 1
 26117                           
 26118                           ; BSR set to: 1
 26119  014C8E  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26120  014C90  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 26121  014C92  6F3A               	movwf	___fladd@aexp& (0+255),b
 26122                           
 26123                           ; BSR set to: 1
 26124  014C94  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 26125                           
 26126                           ; BSR set to: 1
 26127  014C96  813A               	bsf	___fladd@aexp& (0+255),0,b
 26128                           
 26129                           ; BSR set to: 1
 26130                           
 26131                           ; BSR set to: 1
 26132  014C98  513A               	movf	___fladd@aexp& (0+255),w,b
 26133  014C9A  B4D8               	btfsc	status,2,c
 26134  014C9C  D00D               	goto	l2226
 26135                           
 26136                           ; BSR set to: 1
 26137  014C9E  293A               	incf	___fladd@aexp& (0+255),w,b
 26138  014CA0  A4D8               	btfss	status,2,c
 26139  014CA2  D008               	goto	l2227
 26140                           
 26141                           ; BSR set to: 1
 26142  014CA4  0E00               	movlw	0
 26143  014CA6  6F2D               	movwf	___fladd@a& (0+255),b
 26144  014CA8  0E00               	movlw	0
 26145  014CAA  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 26146  014CAC  0E00               	movlw	0
 26147  014CAE  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 26148  014CB0  0E00               	movlw	0
 26149  014CB2  6F30               	movwf	(___fladd@a+3)& (0+255),b
 26150  014CB4                     l2227:
 26151                           
 26152                           ; BSR set to: 1
 26153                           
 26154                           ; BSR set to: 1
 26155  014CB4  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 26156  014CB6  D006               	goto	L6
 26157  014CB8                     l2226:
 26158                           
 26159                           ; BSR set to: 1
 26160                           
 26161                           ; BSR set to: 1
 26162  014CB8  0E00               	movlw	0
 26163  014CBA  6F2D               	movwf	___fladd@a& (0+255),b
 26164  014CBC  0E00               	movlw	0
 26165  014CBE  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 26166  014CC0  0E00               	movlw	0
 26167  014CC2  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 26168  014CC4                     L6:
 26169  014CC4  0E00               	movlw	0
 26170  014CC6  6F30               	movwf	(___fladd@a+3)& (0+255),b
 26171                           
 26172                           ; BSR set to: 1
 26173                           
 26174                           ; BSR set to: 1
 26175  014CC8  513B               	movf	___fladd@bexp& (0+255),w,b
 26176  014CCA  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 26177  014CCC  B0D8               	btfsc	status,0,c
 26178  014CCE  D022               	goto	l2229
 26179                           
 26180                           ; BSR set to: 1
 26181  014CD0  AD39               	btfss	___fladd@signs& (0+255),6,b
 26182  014CD2  D002               	goto	l2230
 26183                           
 26184                           ; BSR set to: 1
 26185  014CD4  0E80               	movlw	128
 26186  014CD6  1B39               	xorwf	___fladd@signs& (0+255),f,b
 26187  014CD8                     l2230:
 26188                           
 26189                           ; BSR set to: 1
 26190                           
 26191                           ; BSR set to: 1
 26192  014CD8  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 26193                           
 26194                           ; BSR set to: 1
 26195  014CDC  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 26196                           
 26197                           ; BSR set to: 1
 26198  014CE0  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 26199                           
 26200                           ; BSR set to: 1
 26201  014CE4  C129  F13C         	movff	___fladd@b,___fladd@grs
 26202                           
 26203                           ; BSR set to: 1
 26204  014CE8  C12D  F129         	movff	___fladd@a,___fladd@b
 26205                           
 26206                           ; BSR set to: 1
 26207  014CEC  C13C  F12D         	movff	___fladd@grs,___fladd@a
 26208                           
 26209                           ; BSR set to: 1
 26210  014CF0  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 26211                           
 26212                           ; BSR set to: 1
 26213  014CF4  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 26214                           
 26215                           ; BSR set to: 1
 26216  014CF8  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 26217                           
 26218                           ; BSR set to: 1
 26219  014CFC  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 26220                           
 26221                           ; BSR set to: 1
 26222  014D00  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 26223                           
 26224                           ; BSR set to: 1
 26225  014D04  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 26226                           
 26227                           ; BSR set to: 1
 26228  014D08  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 26229                           
 26230                           ; BSR set to: 1
 26231  014D0C  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 26232                           
 26233                           ; BSR set to: 1
 26234  014D10  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 26235  014D14                     l2229:
 26236                           
 26237                           ; BSR set to: 1
 26238                           
 26239                           ; BSR set to: 1
 26240  014D14  0E00               	movlw	0
 26241  014D16  6F3C               	movwf	___fladd@grs& (0+255),b
 26242                           
 26243                           ; BSR set to: 1
 26244  014D18  513B               	movf	___fladd@bexp& (0+255),w,b
 26245  014D1A  6F31               	movwf	??___fladd& (0+255),b
 26246  014D1C  6B32               	clrf	(??___fladd+1)& (0+255),b
 26247  014D1E  1F31               	comf	??___fladd& (0+255),f,b
 26248  014D20  1F32               	comf	(??___fladd+1)& (0+255),f,b
 26249  014D22  4B31               	infsnz	??___fladd& (0+255),f,b
 26250  014D24  2B32               	incf	(??___fladd+1)& (0+255),f,b
 26251  014D26  513A               	movf	___fladd@aexp& (0+255),w,b
 26252  014D28  6F33               	movwf	(??___fladd+2)& (0+255),b
 26253  014D2A  6B34               	clrf	(??___fladd+3)& (0+255),b
 26254  014D2C  5131               	movf	??___fladd& (0+255),w,b
 26255  014D2E  2733               	addwf	(??___fladd+2)& (0+255),f,b
 26256  014D30  5132               	movf	(??___fladd+1)& (0+255),w,b
 26257  014D32  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 26258  014D34  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 26259  014D36  D02C               	goto	l2233
 26260  014D38  5134               	movf	(??___fladd+3)& (0+255),w,b
 26261  014D3A  E104               	bnz	u23820
 26262  014D3C  0E1A               	movlw	26
 26263  014D3E  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 26264  014D40  A0D8               	btfss	status,0,c
 26265  014D42  D026               	goto	l2233
 26266  014D44                     u23820:
 26267                           
 26268                           ; BSR set to: 1
 26269  014D44  5129               	movf	___fladd@b& (0+255),w,b
 26270  014D46  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 26271  014D48  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 26272  014D4A  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 26273  014D4C  B4D8               	btfsc	status,2,c
 26274  014D4E  D002               	goto	u23830
 26275  014D50  0E01               	movlw	1
 26276  014D52  D001               	goto	u23840
 26277  014D54                     u23830:
 26278  014D54  0E00               	movlw	0
 26279  014D56                     u23840:
 26280  014D56  6F3C               	movwf	___fladd@grs& (0+255),b
 26281                           
 26282                           ; BSR set to: 1
 26283  014D58  0E00               	movlw	0
 26284  014D5A  6F29               	movwf	___fladd@b& (0+255),b
 26285  014D5C  0E00               	movlw	0
 26286  014D5E  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26287  014D60  0E00               	movlw	0
 26288  014D62  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26289  014D64  0E00               	movlw	0
 26290  014D66  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26291                           
 26292                           ; BSR set to: 1
 26293  014D68  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 26294  014D6C  D015               	goto	u23870
 26295  014D6E                     l2234:
 26296                           
 26297                           ; BSR set to: 1
 26298  014D6E  A13C               	btfss	___fladd@grs& (0+255),0,b
 26299  014D70  D005               	goto	l2235
 26300                           
 26301                           ; BSR set to: 1
 26302  014D72  90D8               	bcf	status,0,c
 26303  014D74  313C               	rrcf	___fladd@grs& (0+255),w,b
 26304  014D76  0901               	iorlw	1
 26305  014D78  6F3C               	movwf	___fladd@grs& (0+255),b
 26306  014D7A  D002               	goto	l2236
 26307  014D7C                     l2235:
 26308                           
 26309                           ; BSR set to: 1
 26310                           
 26311                           ; BSR set to: 1
 26312  014D7C  90D8               	bcf	status,0,c
 26313  014D7E  333C               	rrcf	___fladd@grs& (0+255),f,b
 26314  014D80                     l2236:
 26315                           
 26316                           ; BSR set to: 1
 26317                           
 26318                           ; BSR set to: 1
 26319  014D80  B129               	btfsc	___fladd@b& (0+255),0,b
 26320                           
 26321                           ; BSR set to: 1
 26322  014D82  8F3C               	bsf	___fladd@grs& (0+255),7,b
 26323                           
 26324                           ; BSR set to: 1
 26325                           
 26326                           ; BSR set to: 1
 26327  014D84  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 26328  014D86  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 26329  014D88  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 26330  014D8A  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 26331  014D8C  3329               	rrcf	___fladd@b& (0+255),f,b
 26332                           
 26333                           ; BSR set to: 1
 26334  014D8E  2B3B               	incf	___fladd@bexp& (0+255),f,b
 26335  014D90                     l2233:
 26336                           
 26337                           ; BSR set to: 1
 26338  014D90  513A               	movf	___fladd@aexp& (0+255),w,b
 26339  014D92  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 26340  014D94  A0D8               	btfss	status,0,c
 26341  014D96  D7EB               	goto	l2234
 26342  014D98                     u23870:
 26343                           
 26344                           ; BSR set to: 1
 26345                           
 26346                           ; BSR set to: 1
 26347  014D98  BD39               	btfsc	___fladd@signs& (0+255),6,b
 26348  014D9A  D029               	goto	l2239
 26349                           
 26350                           ; BSR set to: 1
 26351  014D9C  513B               	movf	___fladd@bexp& (0+255),w,b
 26352  014D9E  A4D8               	btfss	status,2,c
 26353  014DA0  D009               	goto	l2240
 26354                           
 26355                           ; BSR set to: 1
 26356  014DA2  0E00               	movlw	0
 26357  014DA4  6F29               	movwf	?___fladd& (0+255),b
 26358  014DA6  0E00               	movlw	0
 26359  014DA8  6F2A               	movwf	(?___fladd+1)& (0+255),b
 26360  014DAA  0E00               	movlw	0
 26361  014DAC  6F2B               	movwf	(?___fladd+2)& (0+255),b
 26362  014DAE  0E00               	movlw	0
 26363  014DB0  6F2C               	movwf	(?___fladd+3)& (0+255),b
 26364                           
 26365                           ; BSR set to: 1
 26366  014DB2  0012               	return	
 26367  014DB4                     l2240:
 26368                           
 26369                           ; BSR set to: 1
 26370                           
 26371                           ; BSR set to: 1
 26372  014DB4  512D               	movf	___fladd@a& (0+255),w,b
 26373  014DB6  2729               	addwf	___fladd@b& (0+255),f,b
 26374  014DB8  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26375  014DBA  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 26376  014DBC  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26377  014DBE  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 26378  014DC0  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26379  014DC2  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 26380                           
 26381                           ; BSR set to: 1
 26382  014DC4  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 26383  014DC6  D083               	goto	u24000
 26384                           
 26385                           ; BSR set to: 1
 26386  014DC8  A13C               	btfss	___fladd@grs& (0+255),0,b
 26387  014DCA  D006               	goto	l2243
 26388                           
 26389                           ; BSR set to: 1
 26390  014DCC  90D8               	bcf	status,0,c
 26391  014DCE  333C               	rrcf	___fladd@grs& (0+255),f,b
 26392  014DD0  513C               	movf	___fladd@grs& (0+255),w,b
 26393  014DD2  0901               	iorlw	1
 26394  014DD4  6F3C               	movwf	___fladd@grs& (0+255),b
 26395  014DD6  D002               	goto	l2244
 26396  014DD8                     l2243:
 26397                           
 26398                           ; BSR set to: 1
 26399                           
 26400                           ; BSR set to: 1
 26401  014DD8  90D8               	bcf	status,0,c
 26402  014DDA  333C               	rrcf	___fladd@grs& (0+255),f,b
 26403  014DDC                     l2244:
 26404                           
 26405                           ; BSR set to: 1
 26406                           
 26407                           ; BSR set to: 1
 26408  014DDC  B129               	btfsc	___fladd@b& (0+255),0,b
 26409                           
 26410                           ; BSR set to: 1
 26411  014DDE  8F3C               	bsf	___fladd@grs& (0+255),7,b
 26412                           
 26413                           ; BSR set to: 1
 26414                           
 26415                           ; BSR set to: 1
 26416  014DE0  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 26417  014DE2  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 26418  014DE4  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 26419  014DE6  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 26420  014DE8  3329               	rrcf	___fladd@b& (0+255),f,b
 26421                           
 26422                           ; BSR set to: 1
 26423  014DEA  2B3B               	incf	___fladd@bexp& (0+255),f,b
 26424                           
 26425                           ; BSR set to: 1
 26426  014DEC  D070               	goto	u24000
 26427  014DEE                     l2239:
 26428                           
 26429                           ; BSR set to: 1
 26430                           
 26431                           ; BSR set to: 1
 26432  014DEE  512D               	movf	___fladd@a& (0+255),w,b
 26433  014DF0  5D29               	subwf	___fladd@b& (0+255),w,b
 26434  014DF2  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26435  014DF4  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 26436  014DF6  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26437  014DF8  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 26438  014DFA  512C               	movf	(___fladd@b+3)& (0+255),w,b
 26439  014DFC  0A80               	xorlw	128
 26440  014DFE  6F31               	movwf	??___fladd& (0+255),b
 26441  014E00  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26442  014E02  0A80               	xorlw	128
 26443  014E04  5931               	subwfb	??___fladd& (0+255),w,b
 26444  014E06  B0D8               	btfsc	status,0,c
 26445  014E08  D036               	goto	l2247
 26446                           
 26447                           ; BSR set to: 1
 26448  014E0A  C129  F131         	movff	___fladd@b,??___fladd
 26449  014E0E  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 26450  014E12  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 26451  014E16  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 26452  014E1A  1F31               	comf	??___fladd& (0+255),f,b
 26453  014E1C  1F32               	comf	(??___fladd+1)& (0+255),f,b
 26454  014E1E  1F33               	comf	(??___fladd+2)& (0+255),f,b
 26455  014E20  1F34               	comf	(??___fladd+3)& (0+255),f,b
 26456  014E22  2B31               	incf	??___fladd& (0+255),f,b
 26457  014E24  0E00               	movlw	0
 26458  014E26  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 26459  014E28  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 26460  014E2A  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 26461  014E2C  512D               	movf	___fladd@a& (0+255),w,b
 26462  014E2E  2531               	addwf	??___fladd& (0+255),w,b
 26463  014E30  6F35               	movwf	(??___fladd+4)& (0+255),b
 26464  014E32  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26465  014E34  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 26466  014E36  6F36               	movwf	(??___fladd+5)& (0+255),b
 26467  014E38  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26468  014E3A  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 26469  014E3C  6F37               	movwf	(??___fladd+6)& (0+255),b
 26470  014E3E  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26471  014E40  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 26472  014E42  6F38               	movwf	(??___fladd+7)& (0+255),b
 26473  014E44  0EFF               	movlw	255
 26474  014E46  2535               	addwf	(??___fladd+4)& (0+255),w,b
 26475  014E48  6F29               	movwf	___fladd@b& (0+255),b
 26476  014E4A  0EFF               	movlw	255
 26477  014E4C  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 26478  014E4E  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26479  014E50  0EFF               	movlw	255
 26480  014E52  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 26481  014E54  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26482  014E56  0EFF               	movlw	255
 26483  014E58  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 26484  014E5A  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26485  014E5C  0E80               	movlw	128
 26486  014E5E  1B39               	xorwf	___fladd@signs& (0+255),f,b
 26487                           
 26488                           ; BSR set to: 1
 26489  014E60  6D3C               	negf	___fladd@grs& (0+255),b
 26490                           
 26491                           ; BSR set to: 1
 26492  014E62  513C               	movf	___fladd@grs& (0+255),w,b
 26493  014E64  A4D8               	btfss	status,2,c
 26494  014E66  D00F               	goto	l2249
 26495                           
 26496                           ; BSR set to: 1
 26497  014E68  0E01               	movlw	1
 26498  014E6A  2729               	addwf	___fladd@b& (0+255),f,b
 26499  014E6C  0E00               	movlw	0
 26500  014E6E  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 26501  014E70  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 26502  014E72  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 26503                           
 26504                           ; BSR set to: 1
 26505  014E74  D008               	goto	l2249
 26506  014E76                     l2247:
 26507                           
 26508                           ; BSR set to: 1
 26509                           
 26510                           ; BSR set to: 1
 26511  014E76  512D               	movf	___fladd@a& (0+255),w,b
 26512  014E78  5F29               	subwf	___fladd@b& (0+255),f,b
 26513  014E7A  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26514  014E7C  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 26515  014E7E  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26516  014E80  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 26517  014E82  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26518  014E84  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 26519  014E86                     l2249:
 26520                           
 26521                           ; BSR set to: 1
 26522  014E86  5129               	movf	___fladd@b& (0+255),w,b
 26523  014E88  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 26524  014E8A  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 26525  014E8C  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 26526  014E8E  A4D8               	btfss	status,2,c
 26527  014E90  D01C               	goto	l2256
 26528                           
 26529                           ; BSR set to: 1
 26530  014E92  513C               	movf	___fladd@grs& (0+255),w,b
 26531  014E94  A4D8               	btfss	status,2,c
 26532  014E96  D019               	goto	l2256
 26533                           
 26534                           ; BSR set to: 1
 26535  014E98  0E00               	movlw	0
 26536  014E9A  6F29               	movwf	?___fladd& (0+255),b
 26537  014E9C  0E00               	movlw	0
 26538  014E9E  6F2A               	movwf	(?___fladd+1)& (0+255),b
 26539  014EA0  0E00               	movlw	0
 26540  014EA2  6F2B               	movwf	(?___fladd+2)& (0+255),b
 26541  014EA4  0E00               	movlw	0
 26542  014EA6  6F2C               	movwf	(?___fladd+3)& (0+255),b
 26543                           
 26544                           ; BSR set to: 1
 26545  014EA8  0012               	return	
 26546  014EAA                     
 26547                           ; BSR set to: 1
 26548                           
 26549                           ; BSR set to: 1
 26550  014EAA  90D8               	bcf	status,0,c
 26551  014EAC  3729               	rlcf	___fladd@b& (0+255),f,b
 26552  014EAE  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 26553  014EB0  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 26554  014EB2  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 26555                           
 26556                           ; BSR set to: 1
 26557  014EB4  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 26558                           
 26559                           ; BSR set to: 1
 26560  014EB6  8129               	bsf	___fladd@b& (0+255),0,b
 26561                           
 26562                           ; BSR set to: 1
 26563                           
 26564                           ; BSR set to: 1
 26565  014EB8  A13C               	btfss	___fladd@grs& (0+255),0,b
 26566  014EBA  D002               	goto	l2254
 26567                           
 26568                           ; BSR set to: 1
 26569  014EBC  80D8               	bsf	status,0,c
 26570  014EBE  D001               	goto	L7
 26571  014EC0                     l2254:
 26572                           
 26573                           ; BSR set to: 1
 26574                           
 26575                           ; BSR set to: 1
 26576  014EC0  90D8               	bcf	status,0,c
 26577  014EC2                     L7:
 26578  014EC2  373C               	rlcf	___fladd@grs& (0+255),f,b
 26579                           
 26580                           ; BSR set to: 1
 26581                           
 26582                           ; BSR set to: 1
 26583  014EC4  513B               	movf	___fladd@bexp& (0+255),w,b
 26584  014EC6  A4D8               	btfss	status,2,c
 26585                           
 26586                           ; BSR set to: 1
 26587  014EC8  073B               	decf	___fladd@bexp& (0+255),f,b
 26588  014ECA                     l2256:
 26589                           
 26590                           ; BSR set to: 1
 26591                           
 26592                           ; BSR set to: 1
 26593                           
 26594                           ; BSR set to: 1
 26595  014ECA  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 26596  014ECC  D7EE               	goto	l2252
 26597  014ECE                     u24000:
 26598                           
 26599                           ; BSR set to: 1
 26600                           
 26601                           ; BSR set to: 1
 26602                           
 26603                           ; BSR set to: 1
 26604  014ECE  0E00               	movlw	0
 26605  014ED0  6F3A               	movwf	___fladd@aexp& (0+255),b
 26606                           
 26607                           ; BSR set to: 1
 26608  014ED2  AF3C               	btfss	___fladd@grs& (0+255),7,b
 26609  014ED4  D00A               	goto	l2261
 26610                           
 26611                           ; BSR set to: 1
 26612  014ED6  C13C  F131         	movff	___fladd@grs,??___fladd
 26613  014EDA  0E7F               	movlw	127
 26614  014EDC  1731               	andwf	??___fladd& (0+255),f,b
 26615  014EDE  A4D8               	btfss	status,2,c
 26616  014EE0  D002               	goto	u24030
 26617                           
 26618                           ; BSR set to: 1
 26619                           
 26620                           ; BSR set to: 1
 26621  014EE2  A129               	btfss	___fladd@b& (0+255),0,b
 26622  014EE4  D002               	goto	l2261
 26623  014EE6                     u24030:
 26624                           
 26625                           ; BSR set to: 1
 26626  014EE6  0E01               	movlw	1
 26627  014EE8  6F3A               	movwf	___fladd@aexp& (0+255),b
 26628  014EEA                     l2261:
 26629                           
 26630                           ; BSR set to: 1
 26631                           
 26632                           ; BSR set to: 1
 26633                           
 26634                           ; BSR set to: 1
 26635  014EEA  513A               	movf	___fladd@aexp& (0+255),w,b
 26636  014EEC  B4D8               	btfsc	status,2,c
 26637  014EEE  D020               	goto	l2264
 26638                           
 26639                           ; BSR set to: 1
 26640  014EF0  0E01               	movlw	1
 26641  014EF2  2729               	addwf	___fladd@b& (0+255),f,b
 26642  014EF4  0E00               	movlw	0
 26643  014EF6  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 26644  014EF8  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 26645  014EFA  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 26646                           
 26647                           ; BSR set to: 1
 26648  014EFC  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 26649  014EFE  D018               	goto	l2264
 26650                           
 26651                           ; BSR set to: 1
 26652  014F00  C129  F131         	movff	___fladd@b,??___fladd
 26653  014F04  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 26654  014F08  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 26655  014F0C  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 26656  014F10  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 26657  014F12  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 26658  014F14  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 26659  014F16  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 26660  014F18  3331               	rrcf	??___fladd& (0+255),f,b
 26661  014F1A  C131  F129         	movff	??___fladd,___fladd@b
 26662  014F1E  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 26663  014F22  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 26664  014F26  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 26665  014F2A  293B               	incf	___fladd@bexp& (0+255),w,b
 26666  014F2C  A4D8               	btfss	status,2,c
 26667                           
 26668                           ; BSR set to: 1
 26669  014F2E  2B3B               	incf	___fladd@bexp& (0+255),f,b
 26670  014F30                     l2264:
 26671                           
 26672                           ; BSR set to: 1
 26673                           
 26674                           ; BSR set to: 1
 26675                           
 26676                           ; BSR set to: 1
 26677                           
 26678                           ; BSR set to: 1
 26679  014F30  293B               	incf	___fladd@bexp& (0+255),w,b
 26680  014F32  B4D8               	btfsc	status,2,c
 26681  014F34  D003               	goto	u24080
 26682                           
 26683                           ; BSR set to: 1
 26684  014F36  513B               	movf	___fladd@bexp& (0+255),w,b
 26685  014F38  A4D8               	btfss	status,2,c
 26686  014F3A  D00D               	goto	l2268
 26687  014F3C                     u24080:
 26688                           
 26689                           ; BSR set to: 1
 26690                           
 26691                           ; BSR set to: 1
 26692  014F3C  0E00               	movlw	0
 26693  014F3E  6F29               	movwf	___fladd@b& (0+255),b
 26694  014F40  0E00               	movlw	0
 26695  014F42  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26696  014F44  0E00               	movlw	0
 26697  014F46  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26698  014F48  0E00               	movlw	0
 26699  014F4A  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26700  014F4C  513B               	movf	___fladd@bexp& (0+255),w,b
 26701  014F4E  A4D8               	btfss	status,2,c
 26702  014F50  D002               	goto	l2268
 26703                           
 26704                           ; BSR set to: 1
 26705  014F52  0E00               	movlw	0
 26706  014F54  6F39               	movwf	___fladd@signs& (0+255),b
 26707  014F56                     l2268:
 26708                           
 26709                           ; BSR set to: 1
 26710                           
 26711                           ; BSR set to: 1
 26712                           
 26713                           ; BSR set to: 1
 26714  014F56  A13B               	btfss	___fladd@bexp& (0+255),0,b
 26715  014F58  D002               	goto	l2269
 26716                           
 26717                           ; BSR set to: 1
 26718  014F5A  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 26719  014F5C  D001               	goto	l2270
 26720  014F5E                     l2269:
 26721                           
 26722                           ; BSR set to: 1
 26723                           
 26724                           ; BSR set to: 1
 26725  014F5E  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 26726  014F60                     l2270:
 26727                           
 26728                           ; BSR set to: 1
 26729                           
 26730                           ; BSR set to: 1
 26731  014F60  90D8               	bcf	status,0,c
 26732  014F62  313B               	rrcf	___fladd@bexp& (0+255),w,b
 26733  014F64  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26734                           
 26735                           ; BSR set to: 1
 26736  014F66  BF39               	btfsc	___fladd@signs& (0+255),7,b
 26737                           
 26738                           ; BSR set to: 1
 26739  014F68  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 26740                           
 26741                           ; BSR set to: 1
 26742                           
 26743                           ; BSR set to: 1
 26744  014F6A  C129  F129         	movff	___fladd@b,?___fladd
 26745  014F6E  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 26746  014F72  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 26747  014F76  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 26748  014F7A  0012               	return	
 26749  014F7C                     __end_of___fladd:
 26750                           	opt stack 0
 26751                           tblptru	equ	0xFF8
 26752                           tblptrh	equ	0xFF7
 26753                           tblptrl	equ	0xFF6
 26754                           tablat	equ	0xFF5
 26755                           prodh	equ	0xFF4
 26756                           prodl	equ	0xFF3
 26757                           intcon	equ	0xFF2
 26758                           indf0	equ	0xFEF
 26759                           postinc0	equ	0xFEE
 26760                           fsr0h	equ	0xFEA
 26761                           fsr0l	equ	0xFE9
 26762                           wreg	equ	0xFE8
 26763                           indf1	equ	0xFE7
 26764                           postdec1	equ	0xFE5
 26765                           plusw1	equ	0xFE3
 26766                           fsr1h	equ	0xFE2
 26767                           fsr1l	equ	0xFE1
 26768                           indf2	equ	0xFDF
 26769                           postinc2	equ	0xFDE
 26770                           postdec2	equ	0xFDD
 26771                           plusw2	equ	0xFDB
 26772                           fsr2h	equ	0xFDA
 26773                           fsr2l	equ	0xFD9
 26774                           status	equ	0xFD8
 26775                           
 26776 ;; *************** function ___flneg *****************
 26777 ;; Defined at:
 26778 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 26779 ;; Parameters:    Size  Location     Type
 26780 ;;  f1              4   37[BANK1 ] unsigned char 
 26781 ;; Auto vars:     Size  Location     Type
 26782 ;;		None
 26783 ;; Return value:  Size  Location     Type
 26784 ;;                  4   37[BANK1 ] unsigned char 
 26785 ;; Registers used:
 26786 ;;		wreg, status,2, status,0
 26787 ;; Tracked objects:
 26788 ;;		On entry : 0/0
 26789 ;;		On exit  : 0/0
 26790 ;;		Unchanged: 0/0
 26791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26792 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26795 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26796 ;;Total ram usage:        4 bytes
 26797 ;; Hardware stack levels used:    1
 26798 ;; Hardware stack levels required when called:   13
 26799 ;; This function calls:
 26800 ;;		Nothing
 26801 ;; This function is called by:
 26802 ;;		_ringBufferLUT
 26803 ;;		_printf
 26804 ;; This function uses a non-reentrant model
 26805 ;;
 26806                           
 26807                           	psect	text47
 26808  019012                     __ptext47:
 26809                           	opt stack 0
 26810  019012                     ___flneg:
 26811                           	opt stack 14
 26812                           
 26813                           ; BSR set to: 1
 26814                           ;incstack = 0
 26815  019012  0101               	movlb	1	; () banked
 26816  019014  5125               	movf	___flneg@f1& (0+255),w,b
 26817  019016  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 26818  019018  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 26819  01901A  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 26820  01901C  B4D8               	btfsc	status,2,c
 26821  01901E  D008               	goto	l1958
 26822                           
 26823                           ; BSR set to: 1
 26824  019020  0E00               	movlw	0
 26825  019022  1B25               	xorwf	___flneg@f1& (0+255),f,b
 26826  019024  0E00               	movlw	0
 26827  019026  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 26828  019028  0E00               	movlw	0
 26829  01902A  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 26830  01902C  0E80               	movlw	128
 26831  01902E  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 26832  019030                     l1958:
 26833                           
 26834                           ; BSR set to: 1
 26835                           
 26836                           ; BSR set to: 1
 26837  019030  C125  F125         	movff	___flneg@f1,?___flneg
 26838  019034  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 26839  019038  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 26840  01903C  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 26841  019040  0012               	return	
 26842  019042                     __end_of___flneg:
 26843                           	opt stack 0
 26844                           tblptru	equ	0xFF8
 26845                           tblptrh	equ	0xFF7
 26846                           tblptrl	equ	0xFF6
 26847                           tablat	equ	0xFF5
 26848                           prodh	equ	0xFF4
 26849                           prodl	equ	0xFF3
 26850                           intcon	equ	0xFF2
 26851                           indf0	equ	0xFEF
 26852                           postinc0	equ	0xFEE
 26853                           fsr0h	equ	0xFEA
 26854                           fsr0l	equ	0xFE9
 26855                           wreg	equ	0xFE8
 26856                           indf1	equ	0xFE7
 26857                           postdec1	equ	0xFE5
 26858                           plusw1	equ	0xFE3
 26859                           fsr1h	equ	0xFE2
 26860                           fsr1l	equ	0xFE1
 26861                           indf2	equ	0xFDF
 26862                           postinc2	equ	0xFDE
 26863                           postdec2	equ	0xFDD
 26864                           plusw2	equ	0xFDB
 26865                           fsr2h	equ	0xFDA
 26866                           fsr2l	equ	0xFD9
 26867                           status	equ	0xFD8
 26868                           
 26869 ;; *************** function _saveSRAMMaxToEEPROM *****************
 26870 ;; Defined at:
 26871 ;;		line 152 in file "main.c"
 26872 ;; Parameters:    Size  Location     Type
 26873 ;;		None
 26874 ;; Auto vars:     Size  Location     Type
 26875 ;;		None
 26876 ;; Return value:  Size  Location     Type
 26877 ;;                  1    wreg      void 
 26878 ;; Registers used:
 26879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26880 ;; Tracked objects:
 26881 ;;		On entry : 0/0
 26882 ;;		On exit  : 0/0
 26883 ;;		Unchanged: 0/0
 26884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26889 ;;Total ram usage:        0 bytes
 26890 ;; Hardware stack levels used:    1
 26891 ;; Hardware stack levels required when called:   15
 26892 ;; This function calls:
 26893 ;;		___flge
 26894 ;;		_writeDoubleToEEPROM
 26895 ;; This function is called by:
 26896 ;;		_main
 26897 ;; This function uses a non-reentrant model
 26898 ;;
 26899                           
 26900                           	psect	text48
 26901  01665E                     __ptext48:
 26902                           	opt stack 0
 26903  01665E                     _saveSRAMMaxToEEPROM:
 26904                           	opt stack 15
 26905                           
 26906                           ;main.c: 156: if (Irms > max_Irms) {
 26907                           
 26908                           ; BSR set to: 1
 26909                           ;incstack = 0
 26910  01665E  C214  F117         	movff	_max_Irms,___flge@ff1	;volatile
 26911  016662  C215  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 26912  016666  C216  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 26913  01666A  C217  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 26914  01666E  C1C3  F11B         	movff	_Irms,___flge@ff2	;volatile
 26915  016672  C1C4  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
 26916  016676  C1C5  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
 26917  01667A  C1C6  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
 26918  01667E  ECE2  F0BA         	call	___flge	;wreg free
 26919  016682  0101               	movlb	1	; () banked
 26920  016684  B0D8               	btfsc	status,0,c
 26921  016686  D01E               	goto	l1007
 26922                           
 26923                           ; BSR set to: 1
 26924                           ;main.c: 157: writeDoubleToEEPROM(Irms, max_Irms_address);
 26925  016688  C1C3  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 26926  01668C  C1C4  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 26927  016690  C1C5  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 26928  016694  C1C6  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 26929  016698  0EFD               	movlw	low _max_Irms_address
 26930  01669A  6EF6               	movwf	tblptrl,c
 26931  01669C                     	if	1	;There is more than 1 active tblptr byte
 26932  01669C  0ED8               	movlw	high _max_Irms_address
 26933  01669E  6EF7               	movwf	tblptrh,c
 26934  0166A0                     	endif
 26935  0166A0                     	if	1	;There are 3 active tblptr bytes
 26936  0166A0  0E00               	movlw	low (_max_Irms_address shr (0+16))
 26937  0166A2  6EF8               	movwf	tblptru,c
 26938  0166A4                     	endif
 26939  0166A4  0009               	tblrd		*+
 26940  0166A6  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 26941  0166AA  000A               	tblrd		*-
 26942  0166AC  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 26943  0166B0  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 26944                           
 26945                           ;main.c: 158: max_Irms = Irms;
 26946  0166B4  C1C3  F214         	movff	_Irms,_max_Irms	;volatile
 26947  0166B8  C1C4  F215         	movff	_Irms+1,_max_Irms+1	;volatile
 26948  0166BC  C1C5  F216         	movff	_Irms+2,_max_Irms+2	;volatile
 26949  0166C0  C1C6  F217         	movff	_Irms+3,_max_Irms+3	;volatile
 26950  0166C4                     l1007:
 26951                           
 26952                           ;main.c: 159: }
 26953                           ;main.c: 161: if (Avg_Power > max_Power) {
 26954  0166C4  C210  F117         	movff	_max_Power,___flge@ff1	;volatile
 26955  0166C8  C211  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
 26956  0166CC  C212  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
 26957  0166D0  C213  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
 26958  0166D4  C1BB  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
 26959  0166D8  C1BC  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 26960  0166DC  C1BD  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 26961  0166E0  C1BE  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 26962  0166E4  ECE2  F0BA         	call	___flge	;wreg free
 26963  0166E8  0101               	movlb	1	; () banked
 26964  0166EA  B0D8               	btfsc	status,0,c
 26965  0166EC  D01E               	goto	l1008
 26966                           
 26967                           ; BSR set to: 1
 26968                           ;main.c: 162: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 26969  0166EE  C1BB  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 26970  0166F2  C1BC  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 26971  0166F6  C1BD  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 26972  0166FA  C1BE  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 26973  0166FE  0EFB               	movlw	low _max_Power_address
 26974  016700  6EF6               	movwf	tblptrl,c
 26975  016702                     	if	1	;There is more than 1 active tblptr byte
 26976  016702  0ED8               	movlw	high _max_Power_address
 26977  016704  6EF7               	movwf	tblptrh,c
 26978  016706                     	endif
 26979  016706                     	if	1	;There are 3 active tblptr bytes
 26980  016706  0E00               	movlw	low (_max_Power_address shr (0+16))
 26981  016708  6EF8               	movwf	tblptru,c
 26982  01670A                     	endif
 26983  01670A  0009               	tblrd		*+
 26984  01670C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 26985  016710  000A               	tblrd		*-
 26986  016712  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 26987  016716  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 26988                           
 26989                           ;main.c: 163: max_Power = Avg_Power;
 26990  01671A  C1BB  F210         	movff	_Avg_Power,_max_Power	;volatile
 26991  01671E  C1BC  F211         	movff	_Avg_Power+1,_max_Power+1	;volatile
 26992  016722  C1BD  F212         	movff	_Avg_Power+2,_max_Power+2	;volatile
 26993  016726  C1BE  F213         	movff	_Avg_Power+3,_max_Power+3	;volatile
 26994  01672A                     l1008:
 26995                           
 26996                           ;main.c: 164: }
 26997                           ;main.c: 166: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 26998  01672A  C20C  F117         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 26999  01672E  C20D  F118         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 27000  016732  C20E  F119         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 27001  016736  C20F  F11A         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 27002  01673A  C1D3  F11B         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 27003  01673E  C1D4  F11C         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 27004  016742  C1D5  F11D         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 27005  016746  C1D6  F11E         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 27006  01674A  ECE2  F0BA         	call	___flge	;wreg free
 27007  01674E  0101               	movlb	1	; () banked
 27008  016750  B0D8               	btfsc	status,0,c
 27009  016752  D01E               	goto	l1009
 27010                           
 27011                           ; BSR set to: 1
 27012                           ;main.c: 167: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 27013  016754  C1D3  F11B         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 27014  016758  C1D4  F11C         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 27015  01675C  C1D5  F11D         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 27016  016760  C1D6  F11E         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 27017  016764  0EF9               	movlw	low _max_POS3P3_ADC_Result_address
 27018  016766  6EF6               	movwf	tblptrl,c
 27019  016768                     	if	1	;There is more than 1 active tblptr byte
 27020  016768  0ED8               	movlw	high _max_POS3P3_ADC_Result_address
 27021  01676A  6EF7               	movwf	tblptrh,c
 27022  01676C                     	endif
 27023  01676C                     	if	1	;There are 3 active tblptr bytes
 27024  01676C  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 27025  01676E  6EF8               	movwf	tblptru,c
 27026  016770                     	endif
 27027  016770  0009               	tblrd		*+
 27028  016772  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27029  016776  000A               	tblrd		*-
 27030  016778  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27031  01677C  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 27032                           
 27033                           ;main.c: 168: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 27034  016780  C1D3  F20C         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 27035  016784  C1D4  F20D         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 27036  016788  C1D5  F20E         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 27037  01678C  C1D6  F20F         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 27038  016790                     l1009:
 27039                           
 27040                           ;main.c: 169: }
 27041                           ;main.c: 171: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 27042  016790  C208  F117         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 27043  016794  C209  F118         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 27044  016798  C20A  F119         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 27045  01679C  C20B  F11A         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 27046  0167A0  C1CF  F11B         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 27047  0167A4  C1D0  F11C         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 27048  0167A8  C1D1  F11D         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 27049  0167AC  C1D2  F11E         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 27050  0167B0  ECE2  F0BA         	call	___flge	;wreg free
 27051  0167B4  0101               	movlb	1	; () banked
 27052  0167B6  B0D8               	btfsc	status,0,c
 27053  0167B8  D01E               	goto	l1010
 27054                           
 27055                           ; BSR set to: 1
 27056                           ;main.c: 172: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 27057  0167BA  C1CF  F11B         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 27058  0167BE  C1D0  F11C         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 27059  0167C2  C1D1  F11D         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 27060  0167C6  C1D2  F11E         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 27061  0167CA  0EF7               	movlw	low _max_POS12_ADC_Result_address
 27062  0167CC  6EF6               	movwf	tblptrl,c
 27063  0167CE                     	if	1	;There is more than 1 active tblptr byte
 27064  0167CE  0ED8               	movlw	high _max_POS12_ADC_Result_address
 27065  0167D0  6EF7               	movwf	tblptrh,c
 27066  0167D2                     	endif
 27067  0167D2                     	if	1	;There are 3 active tblptr bytes
 27068  0167D2  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 27069  0167D4  6EF8               	movwf	tblptru,c
 27070  0167D6                     	endif
 27071  0167D6  0009               	tblrd		*+
 27072  0167D8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27073  0167DC  000A               	tblrd		*-
 27074  0167DE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27075  0167E2  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 27076                           
 27077                           ;main.c: 173: max_POS12_ADC_Result = POS12_ADC_Result;
 27078  0167E6  C1CF  F208         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 27079  0167EA  C1D0  F209         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 27080  0167EE  C1D1  F20A         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 27081  0167F2  C1D2  F20B         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 27082  0167F6                     l1010:
 27083                           
 27084                           ;main.c: 174: }
 27085                           ;main.c: 176: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 27086  0167F6  C204  F117         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 27087  0167FA  C205  F118         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 27088  0167FE  C206  F119         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 27089  016802  C207  F11A         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 27090  016806  C1CB  F11B         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 27091  01680A  C1CC  F11C         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 27092  01680E  C1CD  F11D         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 27093  016812  C1CE  F11E         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 27094  016816  ECE2  F0BA         	call	___flge	;wreg free
 27095  01681A  0101               	movlb	1	; () banked
 27096  01681C  B0D8               	btfsc	status,0,c
 27097  01681E  D01E               	goto	l1011
 27098                           
 27099                           ; BSR set to: 1
 27100                           ;main.c: 177: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 27101  016820  C1CB  F11B         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 27102  016824  C1CC  F11C         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 27103  016828  C1CD  F11D         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 27104  01682C  C1CE  F11E         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 27105  016830  0EF5               	movlw	low _max_Temp_ADC_Result_address
 27106  016832  6EF6               	movwf	tblptrl,c
 27107  016834                     	if	1	;There is more than 1 active tblptr byte
 27108  016834  0ED8               	movlw	high _max_Temp_ADC_Result_address
 27109  016836  6EF7               	movwf	tblptrh,c
 27110  016838                     	endif
 27111  016838                     	if	1	;There are 3 active tblptr bytes
 27112  016838  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 27113  01683A  6EF8               	movwf	tblptru,c
 27114  01683C                     	endif
 27115  01683C  0009               	tblrd		*+
 27116  01683E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27117  016842  000A               	tblrd		*-
 27118  016844  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27119  016848  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 27120                           
 27121                           ;main.c: 178: max_Temp_ADC_Result = Temp_ADC_Result;
 27122  01684C  C1CB  F204         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 27123  016850  C1CC  F205         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 27124  016854  C1CD  F206         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 27125  016858  C1CE  F207         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 27126  01685C                     l1011:
 27127                           
 27128                           ;main.c: 179: }
 27129                           ;main.c: 181: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 27130  01685C  C200  F117         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 27131  016860  C201  F118         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 27132  016864  C202  F119         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 27133  016868  C203  F11A         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 27134  01686C  C1E4  F11B         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 27135  016870  C1E5  F11C         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 27136  016874  C1E6  F11D         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 27137  016878  C1E7  F11E         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 27138  01687C  ECE2  F0BA         	call	___flge	;wreg free
 27139  016880  0101               	movlb	1	; () banked
 27140  016882  B0D8               	btfsc	status,0,c
 27141  016884  0012               	return	
 27142                           
 27143                           ; BSR set to: 1
 27144                           ;main.c: 182: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 27145  016886  C1E4  F11B         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 27146  01688A  C1E5  F11C         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 27147  01688E  C1E6  F11D         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 27148  016892  C1E7  F11E         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 27149  016896  0EF3               	movlw	low _max_FVR_ADC_Result_address
 27150  016898  6EF6               	movwf	tblptrl,c
 27151  01689A                     	if	1	;There is more than 1 active tblptr byte
 27152  01689A  0ED8               	movlw	high _max_FVR_ADC_Result_address
 27153  01689C  6EF7               	movwf	tblptrh,c
 27154  01689E                     	endif
 27155  01689E                     	if	1	;There are 3 active tblptr bytes
 27156  01689E  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 27157  0168A0  6EF8               	movwf	tblptru,c
 27158  0168A2                     	endif
 27159  0168A2  0009               	tblrd		*+
 27160  0168A4  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27161  0168A8  000A               	tblrd		*-
 27162  0168AA  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27163  0168AE  EC2A  F0C5         	call	_writeDoubleToEEPROM	;wreg free
 27164                           
 27165                           ;main.c: 183: max_FVR_ADC_Result = FVR_ADC_Result;
 27166  0168B2  C1E4  F200         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 27167  0168B6  C1E5  F201         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 27168  0168BA  C1E6  F202         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 27169  0168BE  C1E7  F203         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 27170  0168C2  0012               	return	
 27171  0168C4                     __end_of_saveSRAMMaxToEEPROM:
 27172                           	opt stack 0
 27173                           tblptru	equ	0xFF8
 27174                           tblptrh	equ	0xFF7
 27175                           tblptrl	equ	0xFF6
 27176                           tablat	equ	0xFF5
 27177                           prodh	equ	0xFF4
 27178                           prodl	equ	0xFF3
 27179                           intcon	equ	0xFF2
 27180                           indf0	equ	0xFEF
 27181                           postinc0	equ	0xFEE
 27182                           fsr0h	equ	0xFEA
 27183                           fsr0l	equ	0xFE9
 27184                           wreg	equ	0xFE8
 27185                           indf1	equ	0xFE7
 27186                           postdec1	equ	0xFE5
 27187                           plusw1	equ	0xFE3
 27188                           fsr1h	equ	0xFE2
 27189                           fsr1l	equ	0xFE1
 27190                           indf2	equ	0xFDF
 27191                           postinc2	equ	0xFDE
 27192                           postdec2	equ	0xFDD
 27193                           plusw2	equ	0xFDB
 27194                           fsr2h	equ	0xFDA
 27195                           fsr2l	equ	0xFD9
 27196                           status	equ	0xFD8
 27197                           
 27198 ;; *************** function _writeDoubleToEEPROM *****************
 27199 ;; Defined at:
 27200 ;;		line 6 in file "double_to_EEPROM.c"
 27201 ;; Parameters:    Size  Location     Type
 27202 ;;  input_double    4   27[BANK1 ] void 
 27203 ;;  starting_add    2   31[BANK1 ] unsigned int 
 27204 ;; Auto vars:     Size  Location     Type
 27205 ;;  byte_index      2   37[BANK1 ] int 
 27206 ;;  input_data      4   33[BANK1 ] struct .
 27207 ;; Return value:  Size  Location     Type
 27208 ;;                  1    wreg      void 
 27209 ;; Registers used:
 27210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27211 ;; Tracked objects:
 27212 ;;		On entry : 0/0
 27213 ;;		On exit  : 0/0
 27214 ;;		Unchanged: 0/0
 27215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27216 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27217 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27219 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27220 ;;Total ram usage:       12 bytes
 27221 ;; Hardware stack levels used:    1
 27222 ;; Hardware stack levels required when called:   14
 27223 ;; This function calls:
 27224 ;;		_DATAEE_WriteByte
 27225 ;; This function is called by:
 27226 ;;		_saveSRAMMaxToEEPROM
 27227 ;;		_ringBufferLUT
 27228 ;; This function uses a non-reentrant model
 27229 ;;
 27230                           
 27231                           	psect	text49
 27232  018A54                     __ptext49:
 27233                           	opt stack 0
 27234  018A54                     _writeDoubleToEEPROM:
 27235                           	opt stack 14
 27236                           
 27237                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 27238                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 27239                           
 27240                           ;incstack = 0
 27241  018A54  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 27242  018A58  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 27243  018A5C  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 27244  018A60  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 27245                           
 27246                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 27247  018A64  0E00               	movlw	0
 27248  018A66  0101               	movlb	1	; () banked
 27249  018A68  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 27250  018A6A  0E00               	movlw	0
 27251  018A6C  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 27252  018A6E                     l19514:
 27253                           
 27254                           ; BSR set to: 1
 27255  018A6E  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 27256  018A70  E118               	bnz	l1460
 27257  018A72  0E04               	movlw	4
 27258  018A74  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 27259  018A76  B0D8               	btfsc	status,0,c
 27260  018A78  0012               	return	
 27261                           
 27262                           ; BSR set to: 1
 27263                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 27264                           
 27265                           ; BSR set to: 1
 27266                           
 27267                           ; BSR set to: 1
 27268  018A7A  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 27269  018A7C  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 27270  018A7E  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 27271  018A80  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 27272  018A82  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 27273  018A84  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 27274  018A86  0E21               	movlw	low writeDoubleToEEPROM@input_data
 27275  018A88  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 27276  018A8A  6ED9               	movwf	fsr2l,c
 27277  018A8C  0E01               	movlw	high writeDoubleToEEPROM@input_data
 27278  018A8E  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 27279  018A90  6EDA               	movwf	fsr2h,c
 27280  018A92  50DF               	movf	indf2,w,c
 27281  018A94  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 27282  018A96  ECDE  F0C6         	call	_DATAEE_WriteByte	;wreg free
 27283  018A9A  0101               	movlb	1	; () banked
 27284  018A9C  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 27285  018A9E  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 27286  018AA0  D7E6               	goto	l19514
 27287  018AA2                     l1460:
 27288                           
 27289                           ; BSR set to: 1
 27290  018AA2  0012               	return		;funcret
 27291  018AA4                     __end_of_writeDoubleToEEPROM:
 27292                           	opt stack 0
 27293                           tblptru	equ	0xFF8
 27294                           tblptrh	equ	0xFF7
 27295                           tblptrl	equ	0xFF6
 27296                           tablat	equ	0xFF5
 27297                           prodh	equ	0xFF4
 27298                           prodl	equ	0xFF3
 27299                           intcon	equ	0xFF2
 27300                           indf0	equ	0xFEF
 27301                           postinc0	equ	0xFEE
 27302                           fsr0h	equ	0xFEA
 27303                           fsr0l	equ	0xFE9
 27304                           wreg	equ	0xFE8
 27305                           indf1	equ	0xFE7
 27306                           postdec1	equ	0xFE5
 27307                           plusw1	equ	0xFE3
 27308                           fsr1h	equ	0xFE2
 27309                           fsr1l	equ	0xFE1
 27310                           indf2	equ	0xFDF
 27311                           postinc2	equ	0xFDE
 27312                           postdec2	equ	0xFDD
 27313                           plusw2	equ	0xFDB
 27314                           fsr2h	equ	0xFDA
 27315                           fsr2l	equ	0xFD9
 27316                           status	equ	0xFD8
 27317                           
 27318 ;; *************** function _DATAEE_WriteByte *****************
 27319 ;; Defined at:
 27320 ;;		line 168 in file "mcc_generated_files/memory.c"
 27321 ;; Parameters:    Size  Location     Type
 27322 ;;  bAdd            2   23[BANK1 ] unsigned int 
 27323 ;;  bData           1   25[BANK1 ] unsigned char 
 27324 ;; Auto vars:     Size  Location     Type
 27325 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 27326 ;; Return value:  Size  Location     Type
 27327 ;;                  1    wreg      void 
 27328 ;; Registers used:
 27329 ;;		wreg, status,2, status,0
 27330 ;; Tracked objects:
 27331 ;;		On entry : 0/0
 27332 ;;		On exit  : 0/0
 27333 ;;		Unchanged: 0/0
 27334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27335 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27336 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27338 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27339 ;;Total ram usage:        4 bytes
 27340 ;; Hardware stack levels used:    1
 27341 ;; Hardware stack levels required when called:   13
 27342 ;; This function calls:
 27343 ;;		Nothing
 27344 ;; This function is called by:
 27345 ;;		_writeDoubleToEEPROM
 27346 ;; This function uses a non-reentrant model
 27347 ;;
 27348                           
 27349                           	psect	text50
 27350  018DBC                     __ptext50:
 27351                           	opt stack 0
 27352  018DBC                     _DATAEE_WriteByte:
 27353                           	opt stack 14
 27354                           
 27355                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 27356                           
 27357                           ; BSR set to: 1
 27358                           ;incstack = 0
 27359  018DBC  0E00               	movlw	0
 27360  018DBE  BEF2               	btfsc	intcon,7,c	;volatile
 27361  018DC0  0E01               	movlw	1
 27362  018DC2  0101               	movlb	1	; () banked
 27363  018DC4  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 27364                           
 27365                           ; BSR set to: 1
 27366                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 27367  018DC6  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 27368  018DC8  0B03               	andlw	3
 27369  018DCA  6E75               	movwf	3957,c	;volatile
 27370                           
 27371                           ; BSR set to: 1
 27372                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 27373  018DCC  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 27374                           
 27375                           ; BSR set to: 1
 27376                           ;memory.c: 174: NVMDAT = bData;
 27377  018DD0  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 27378                           
 27379                           ; BSR set to: 1
 27380                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 27381  018DD4  0E3F               	movlw	-193
 27382  018DD6  1677               	andwf	3959,f,c	;volsfr
 27383                           
 27384                           ; BSR set to: 1
 27385                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 27386  018DD8  8477               	bsf	3959,2,c	;volsfr
 27387                           
 27388                           ; BSR set to: 1
 27389                           ;memory.c: 177: INTCONbits.GIE = 0;
 27390  018DDA  9EF2               	bcf	intcon,7,c	;volatile
 27391                           
 27392                           ; BSR set to: 1
 27393                           ;memory.c: 178: NVMCON2 = 0x55;
 27394  018DDC  0E55               	movlw	85
 27395  018DDE  6E78               	movwf	3960,c	;volsfr
 27396                           
 27397                           ; BSR set to: 1
 27398                           ;memory.c: 179: NVMCON2 = 0xAA;
 27399  018DE0  0EAA               	movlw	170
 27400  018DE2  6E78               	movwf	3960,c	;volsfr
 27401                           
 27402                           ; BSR set to: 1
 27403                           ;memory.c: 180: NVMCON1bits.WR = 1;
 27404  018DE4  8277               	bsf	3959,1,c	;volsfr
 27405  018DE6                     
 27406                           ; BSR set to: 1
 27407                           ;memory.c: 183: {
 27408  018DE6  B277               	btfsc	3959,1,c	;volsfr
 27409  018DE8  D7FE               	goto	l803
 27410                           
 27411                           ;memory.c: 184: }
 27412                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 27413  018DEA  9477               	bcf	3959,2,c	;volsfr
 27414                           
 27415                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 27416  018DEC  0101               	movlb	1	; () banked
 27417  018DEE  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 27418  018DF0  D002               	bra	u25815
 27419  018DF2  9EF2               	bcf	intcon,7,c	;volatile
 27420  018DF4  D001               	bra	u25816
 27421  018DF6                     u25815:
 27422  018DF6  8EF2               	bsf	intcon,7,c	;volatile
 27423  018DF8                     u25816:
 27424  018DF8  0012               	return		;funcret
 27425  018DFA                     __end_of_DATAEE_WriteByte:
 27426                           	opt stack 0
 27427                           tblptru	equ	0xFF8
 27428                           tblptrh	equ	0xFF7
 27429                           tblptrl	equ	0xFF6
 27430                           tablat	equ	0xFF5
 27431                           prodh	equ	0xFF4
 27432                           prodl	equ	0xFF3
 27433                           intcon	equ	0xFF2
 27434                           indf0	equ	0xFEF
 27435                           postinc0	equ	0xFEE
 27436                           fsr0h	equ	0xFEA
 27437                           fsr0l	equ	0xFE9
 27438                           wreg	equ	0xFE8
 27439                           indf1	equ	0xFE7
 27440                           postdec1	equ	0xFE5
 27441                           plusw1	equ	0xFE3
 27442                           fsr1h	equ	0xFE2
 27443                           fsr1l	equ	0xFE1
 27444                           indf2	equ	0xFDF
 27445                           postinc2	equ	0xFDE
 27446                           postdec2	equ	0xFDD
 27447                           plusw2	equ	0xFDB
 27448                           fsr2h	equ	0xFDA
 27449                           fsr2l	equ	0xFD9
 27450                           status	equ	0xFD8
 27451                           
 27452 ;; *************** function ___flge *****************
 27453 ;; Defined at:
 27454 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 27455 ;; Parameters:    Size  Location     Type
 27456 ;;  ff1             4   23[BANK1 ] void 
 27457 ;;  ff2             4   27[BANK1 ] void 
 27458 ;; Auto vars:     Size  Location     Type
 27459 ;;		None
 27460 ;; Return value:  Size  Location     Type
 27461 ;;		None               void
 27462 ;; Registers used:
 27463 ;;		wreg, status,2, status,0
 27464 ;; Tracked objects:
 27465 ;;		On entry : 0/0
 27466 ;;		On exit  : 0/0
 27467 ;;		Unchanged: 0/0
 27468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27469 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27471 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27472 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27473 ;;Total ram usage:       12 bytes
 27474 ;; Hardware stack levels used:    1
 27475 ;; Hardware stack levels required when called:   13
 27476 ;; This function calls:
 27477 ;;		Nothing
 27478 ;; This function is called by:
 27479 ;;		_saveSRAMMaxToEEPROM
 27480 ;;		_printf
 27481 ;; This function uses a non-reentrant model
 27482 ;;
 27483                           
 27484                           	psect	text51
 27485  0175C4                     __ptext51:
 27486                           	opt stack 0
 27487  0175C4                     ___flge:
 27488                           	opt stack 14
 27489                           
 27490                           ;incstack = 0
 27491  0175C4  0E00               	movlw	0
 27492  0175C6  0101               	movlb	1	; () banked
 27493  0175C8  1517               	andwf	___flge@ff1& (0+255),w,b
 27494  0175CA  6F1F               	movwf	??___flge& (0+255),b
 27495  0175CC  0E00               	movlw	0
 27496  0175CE  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 27497  0175D0  6F20               	movwf	(??___flge+1)& (0+255),b
 27498  0175D2  0E80               	movlw	128
 27499  0175D4  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 27500  0175D6  6F21               	movwf	(??___flge+2)& (0+255),b
 27501  0175D8  0E7F               	movlw	127
 27502  0175DA  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 27503  0175DC  6F22               	movwf	(??___flge+3)& (0+255),b
 27504  0175DE  511F               	movf	??___flge& (0+255),w,b
 27505  0175E0  1120               	iorwf	(??___flge+1)& (0+255),w,b
 27506  0175E2  1121               	iorwf	(??___flge+2)& (0+255),w,b
 27507  0175E4  1122               	iorwf	(??___flge+3)& (0+255),w,b
 27508  0175E6  A4D8               	btfss	status,2,c
 27509  0175E8  D008               	goto	l1951
 27510                           
 27511                           ; BSR set to: 1
 27512  0175EA  0E00               	movlw	0
 27513  0175EC  6F17               	movwf	___flge@ff1& (0+255),b
 27514  0175EE  0E00               	movlw	0
 27515  0175F0  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 27516  0175F2  0E00               	movlw	0
 27517  0175F4  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 27518  0175F6  0E00               	movlw	0
 27519  0175F8  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 27520  0175FA                     l1951:
 27521                           
 27522                           ; BSR set to: 1
 27523                           
 27524                           ; BSR set to: 1
 27525  0175FA  0E00               	movlw	0
 27526  0175FC  151B               	andwf	___flge@ff2& (0+255),w,b
 27527  0175FE  6F1F               	movwf	??___flge& (0+255),b
 27528  017600  0E00               	movlw	0
 27529  017602  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 27530  017604  6F20               	movwf	(??___flge+1)& (0+255),b
 27531  017606  0E80               	movlw	128
 27532  017608  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 27533  01760A  6F21               	movwf	(??___flge+2)& (0+255),b
 27534  01760C  0E7F               	movlw	127
 27535  01760E  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 27536  017610  6F22               	movwf	(??___flge+3)& (0+255),b
 27537  017612  511F               	movf	??___flge& (0+255),w,b
 27538  017614  1120               	iorwf	(??___flge+1)& (0+255),w,b
 27539  017616  1121               	iorwf	(??___flge+2)& (0+255),w,b
 27540  017618  1122               	iorwf	(??___flge+3)& (0+255),w,b
 27541  01761A  A4D8               	btfss	status,2,c
 27542  01761C  D008               	goto	l1952
 27543                           
 27544                           ; BSR set to: 1
 27545  01761E  0E00               	movlw	0
 27546  017620  6F1B               	movwf	___flge@ff2& (0+255),b
 27547  017622  0E00               	movlw	0
 27548  017624  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 27549  017626  0E00               	movlw	0
 27550  017628  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 27551  01762A  0E00               	movlw	0
 27552  01762C  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 27553  01762E                     l1952:
 27554                           
 27555                           ; BSR set to: 1
 27556                           
 27557                           ; BSR set to: 1
 27558  01762E  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 27559  017630  D01D               	goto	l1953
 27560                           
 27561                           ; BSR set to: 1
 27562  017632  C117  F11F         	movff	___flge@ff1,??___flge
 27563  017636  C118  F120         	movff	___flge@ff1+1,??___flge+1
 27564  01763A  C119  F121         	movff	___flge@ff1+2,??___flge+2
 27565  01763E  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 27566  017642  1F1F               	comf	??___flge& (0+255),f,b
 27567  017644  1F20               	comf	(??___flge+1)& (0+255),f,b
 27568  017646  1F21               	comf	(??___flge+2)& (0+255),f,b
 27569  017648  1F22               	comf	(??___flge+3)& (0+255),f,b
 27570  01764A  2B1F               	incf	??___flge& (0+255),f,b
 27571  01764C  0E00               	movlw	0
 27572  01764E  2320               	addwfc	(??___flge+1)& (0+255),f,b
 27573  017650  2321               	addwfc	(??___flge+2)& (0+255),f,b
 27574  017652  2322               	addwfc	(??___flge+3)& (0+255),f,b
 27575  017654  0E00               	movlw	0
 27576  017656  251F               	addwf	??___flge& (0+255),w,b
 27577  017658  6F17               	movwf	___flge@ff1& (0+255),b
 27578  01765A  0E00               	movlw	0
 27579  01765C  2120               	addwfc	(??___flge+1)& (0+255),w,b
 27580  01765E  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 27581  017660  0E00               	movlw	0
 27582  017662  2121               	addwfc	(??___flge+2)& (0+255),w,b
 27583  017664  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 27584  017666  0E80               	movlw	128
 27585  017668  2122               	addwfc	(??___flge+3)& (0+255),w,b
 27586  01766A  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 27587  01766C                     l1953:
 27588                           
 27589                           ; BSR set to: 1
 27590                           
 27591                           ; BSR set to: 1
 27592  01766C  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 27593  01766E  D01D               	goto	l1954
 27594                           
 27595                           ; BSR set to: 1
 27596  017670  C11B  F11F         	movff	___flge@ff2,??___flge
 27597  017674  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 27598  017678  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 27599  01767C  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 27600  017680  1F1F               	comf	??___flge& (0+255),f,b
 27601  017682  1F20               	comf	(??___flge+1)& (0+255),f,b
 27602  017684  1F21               	comf	(??___flge+2)& (0+255),f,b
 27603  017686  1F22               	comf	(??___flge+3)& (0+255),f,b
 27604  017688  2B1F               	incf	??___flge& (0+255),f,b
 27605  01768A  0E00               	movlw	0
 27606  01768C  2320               	addwfc	(??___flge+1)& (0+255),f,b
 27607  01768E  2321               	addwfc	(??___flge+2)& (0+255),f,b
 27608  017690  2322               	addwfc	(??___flge+3)& (0+255),f,b
 27609  017692  0E00               	movlw	0
 27610  017694  251F               	addwf	??___flge& (0+255),w,b
 27611  017696  6F1B               	movwf	___flge@ff2& (0+255),b
 27612  017698  0E00               	movlw	0
 27613  01769A  2120               	addwfc	(??___flge+1)& (0+255),w,b
 27614  01769C  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 27615  01769E  0E00               	movlw	0
 27616  0176A0  2121               	addwfc	(??___flge+2)& (0+255),w,b
 27617  0176A2  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 27618  0176A4  0E80               	movlw	128
 27619  0176A6  2122               	addwfc	(??___flge+3)& (0+255),w,b
 27620  0176A8  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 27621  0176AA                     l1954:
 27622                           
 27623                           ; BSR set to: 1
 27624  0176AA  0E00               	movlw	0
 27625  0176AC  1B17               	xorwf	___flge@ff1& (0+255),f,b
 27626  0176AE  0E00               	movlw	0
 27627  0176B0  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 27628  0176B2  0E00               	movlw	0
 27629  0176B4  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 27630  0176B6  0E80               	movlw	128
 27631  0176B8  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 27632  0176BA  0E00               	movlw	0
 27633  0176BC  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 27634  0176BE  0E00               	movlw	0
 27635  0176C0  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 27636  0176C2  0E00               	movlw	0
 27637  0176C4  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 27638  0176C6  0E80               	movlw	128
 27639  0176C8  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 27640  0176CA  511B               	movf	___flge@ff2& (0+255),w,b
 27641  0176CC  5D17               	subwf	___flge@ff1& (0+255),w,b
 27642  0176CE  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 27643  0176D0  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 27644  0176D2  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 27645  0176D4  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 27646  0176D6  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 27647  0176D8  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 27648  0176DA  B0D8               	btfsc	status,0,c
 27649  0176DC  D002               	goto	l18150
 27650                           
 27651                           ; BSR set to: 1
 27652  0176DE  90D8               	bcf	status,0,c
 27653  0176E0  0012               	return	
 27654  0176E2                     l18150:
 27655                           
 27656                           ; BSR set to: 1
 27657                           
 27658                           ; BSR set to: 1
 27659  0176E2  80D8               	bsf	status,0,c
 27660                           
 27661                           ; BSR set to: 1
 27662  0176E4  0012               	return	
 27663  0176E6                     __end_of___flge:
 27664                           	opt stack 0
 27665                           tblptru	equ	0xFF8
 27666                           tblptrh	equ	0xFF7
 27667                           tblptrl	equ	0xFF6
 27668                           tablat	equ	0xFF5
 27669                           prodh	equ	0xFF4
 27670                           prodl	equ	0xFF3
 27671                           intcon	equ	0xFF2
 27672                           indf0	equ	0xFEF
 27673                           postinc0	equ	0xFEE
 27674                           fsr0h	equ	0xFEA
 27675                           fsr0l	equ	0xFE9
 27676                           wreg	equ	0xFE8
 27677                           indf1	equ	0xFE7
 27678                           postdec1	equ	0xFE5
 27679                           plusw1	equ	0xFE3
 27680                           fsr1h	equ	0xFE2
 27681                           fsr1l	equ	0xFE1
 27682                           indf2	equ	0xFDF
 27683                           postinc2	equ	0xFDE
 27684                           postdec2	equ	0xFDD
 27685                           plusw2	equ	0xFDB
 27686                           fsr2h	equ	0xFDA
 27687                           fsr2l	equ	0xFD9
 27688                           status	equ	0xFD8
 27689                           
 27690 ;; *************** function _recoverSRAMMaxFromEEPROM *****************
 27691 ;; Defined at:
 27692 ;;		line 189 in file "main.c"
 27693 ;; Parameters:    Size  Location     Type
 27694 ;;		None
 27695 ;; Auto vars:     Size  Location     Type
 27696 ;;		None
 27697 ;; Return value:  Size  Location     Type
 27698 ;;                  1    wreg      void 
 27699 ;; Registers used:
 27700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27701 ;; Tracked objects:
 27702 ;;		On entry : 0/0
 27703 ;;		On exit  : 0/0
 27704 ;;		Unchanged: 0/0
 27705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27710 ;;Total ram usage:        0 bytes
 27711 ;; Hardware stack levels used:    1
 27712 ;; Hardware stack levels required when called:   15
 27713 ;; This function calls:
 27714 ;;		_readDoubleFromEEPROM
 27715 ;; This function is called by:
 27716 ;;		_main
 27717 ;; This function uses a non-reentrant model
 27718 ;;
 27719                           
 27720                           	psect	text52
 27721  017918                     __ptext52:
 27722                           	opt stack 0
 27723  017918                     _recoverSRAMMaxFromEEPROM:
 27724                           	opt stack 15
 27725                           
 27726                           ;main.c: 191: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 27727                           
 27728                           ; BSR set to: 1
 27729                           ;incstack = 0
 27730  017918  0EFD               	movlw	low _max_Irms_address
 27731  01791A  6EF6               	movwf	tblptrl,c
 27732  01791C                     	if	1	;There is more than 1 active tblptr byte
 27733  01791C  0ED8               	movlw	high _max_Irms_address
 27734  01791E  6EF7               	movwf	tblptrh,c
 27735  017920                     	endif
 27736  017920                     	if	1	;There are 3 active tblptr bytes
 27737  017920  0E00               	movlw	low (_max_Irms_address shr (0+16))
 27738  017922  6EF8               	movwf	tblptru,c
 27739  017924                     	endif
 27740  017924  0009               	tblrd		*+
 27741  017926  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27742  01792A  000A               	tblrd		*-
 27743  01792C  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27744  017930  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27745  017934  C119  F214         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 27746  017938  C11A  F215         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 27747  01793C  C11B  F216         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 27748  017940  C11C  F217         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 27749                           
 27750                           ;main.c: 192: max_Power = readDoubleFromEEPROM(max_Power_address);
 27751  017944  0EFB               	movlw	low _max_Power_address
 27752  017946  6EF6               	movwf	tblptrl,c
 27753  017948                     	if	1	;There is more than 1 active tblptr byte
 27754  017948  0ED8               	movlw	high _max_Power_address
 27755  01794A  6EF7               	movwf	tblptrh,c
 27756  01794C                     	endif
 27757  01794C                     	if	1	;There are 3 active tblptr bytes
 27758  01794C  0E00               	movlw	low (_max_Power_address shr (0+16))
 27759  01794E  6EF8               	movwf	tblptru,c
 27760  017950                     	endif
 27761  017950  0009               	tblrd		*+
 27762  017952  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27763  017956  000A               	tblrd		*-
 27764  017958  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27765  01795C  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27766  017960  C119  F210         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 27767  017964  C11A  F211         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 27768  017968  C11B  F212         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 27769  01796C  C11C  F213         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 27770                           
 27771                           ;main.c: 193: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 27772  017970  0EF9               	movlw	low _max_POS3P3_ADC_Result_address
 27773  017972  6EF6               	movwf	tblptrl,c
 27774  017974                     	if	1	;There is more than 1 active tblptr byte
 27775  017974  0ED8               	movlw	high _max_POS3P3_ADC_Result_address
 27776  017976  6EF7               	movwf	tblptrh,c
 27777  017978                     	endif
 27778  017978                     	if	1	;There are 3 active tblptr bytes
 27779  017978  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 27780  01797A  6EF8               	movwf	tblptru,c
 27781  01797C                     	endif
 27782  01797C  0009               	tblrd		*+
 27783  01797E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27784  017982  000A               	tblrd		*-
 27785  017984  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27786  017988  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27787  01798C  C119  F20C         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 27788  017990  C11A  F20D         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 27789  017994  C11B  F20E         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 27790  017998  C11C  F20F         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 27791                           
 27792                           ;main.c: 194: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 27793  01799C  0EF7               	movlw	low _max_POS12_ADC_Result_address
 27794  01799E  6EF6               	movwf	tblptrl,c
 27795  0179A0                     	if	1	;There is more than 1 active tblptr byte
 27796  0179A0  0ED8               	movlw	high _max_POS12_ADC_Result_address
 27797  0179A2  6EF7               	movwf	tblptrh,c
 27798  0179A4                     	endif
 27799  0179A4                     	if	1	;There are 3 active tblptr bytes
 27800  0179A4  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 27801  0179A6  6EF8               	movwf	tblptru,c
 27802  0179A8                     	endif
 27803  0179A8  0009               	tblrd		*+
 27804  0179AA  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27805  0179AE  000A               	tblrd		*-
 27806  0179B0  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27807  0179B4  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27808  0179B8  C119  F208         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 27809  0179BC  C11A  F209         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 27810  0179C0  C11B  F20A         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 27811  0179C4  C11C  F20B         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 27812                           
 27813                           ;main.c: 195: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 27814  0179C8  0EF5               	movlw	low _max_Temp_ADC_Result_address
 27815  0179CA  6EF6               	movwf	tblptrl,c
 27816  0179CC                     	if	1	;There is more than 1 active tblptr byte
 27817  0179CC  0ED8               	movlw	high _max_Temp_ADC_Result_address
 27818  0179CE  6EF7               	movwf	tblptrh,c
 27819  0179D0                     	endif
 27820  0179D0                     	if	1	;There are 3 active tblptr bytes
 27821  0179D0  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 27822  0179D2  6EF8               	movwf	tblptru,c
 27823  0179D4                     	endif
 27824  0179D4  0009               	tblrd		*+
 27825  0179D6  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27826  0179DA  000A               	tblrd		*-
 27827  0179DC  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27828  0179E0  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27829  0179E4  C119  F204         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 27830  0179E8  C11A  F205         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 27831  0179EC  C11B  F206         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 27832  0179F0  C11C  F207         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 27833                           
 27834                           ;main.c: 196: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 27835  0179F4  0EF3               	movlw	low _max_FVR_ADC_Result_address
 27836  0179F6  6EF6               	movwf	tblptrl,c
 27837  0179F8                     	if	1	;There is more than 1 active tblptr byte
 27838  0179F8  0ED8               	movlw	high _max_FVR_ADC_Result_address
 27839  0179FA  6EF7               	movwf	tblptrh,c
 27840  0179FC                     	endif
 27841  0179FC                     	if	1	;There are 3 active tblptr bytes
 27842  0179FC  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 27843  0179FE  6EF8               	movwf	tblptru,c
 27844  017A00                     	endif
 27845  017A00  0009               	tblrd		*+
 27846  017A02  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 27847  017A06  000A               	tblrd		*-
 27848  017A08  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 27849  017A0C  ECB0  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 27850  017A10  C119  F200         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 27851  017A14  C11A  F201         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 27852  017A18  C11B  F202         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 27853  017A1C  C11C  F203         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 27854  017A20  0012               	return		;funcret
 27855  017A22                     __end_of_recoverSRAMMaxFromEEPROM:
 27856                           	opt stack 0
 27857                           tblptru	equ	0xFF8
 27858                           tblptrh	equ	0xFF7
 27859                           tblptrl	equ	0xFF6
 27860                           tablat	equ	0xFF5
 27861                           prodh	equ	0xFF4
 27862                           prodl	equ	0xFF3
 27863                           intcon	equ	0xFF2
 27864                           indf0	equ	0xFEF
 27865                           postinc0	equ	0xFEE
 27866                           fsr0h	equ	0xFEA
 27867                           fsr0l	equ	0xFE9
 27868                           wreg	equ	0xFE8
 27869                           indf1	equ	0xFE7
 27870                           postdec1	equ	0xFE5
 27871                           plusw1	equ	0xFE3
 27872                           fsr1h	equ	0xFE2
 27873                           fsr1l	equ	0xFE1
 27874                           indf2	equ	0xFDF
 27875                           postinc2	equ	0xFDE
 27876                           postdec2	equ	0xFDD
 27877                           plusw2	equ	0xFDB
 27878                           fsr2h	equ	0xFDA
 27879                           fsr2l	equ	0xFD9
 27880                           status	equ	0xFD8
 27881                           
 27882 ;; *************** function _readDoubleFromEEPROM *****************
 27883 ;; Defined at:
 27884 ;;		line 22 in file "double_to_EEPROM.c"
 27885 ;; Parameters:    Size  Location     Type
 27886 ;;  starting_add    2   25[BANK1 ] unsigned int 
 27887 ;; Auto vars:     Size  Location     Type
 27888 ;;  byte_index      2   33[BANK1 ] int 
 27889 ;;  output_data     4   29[BANK1 ] struct .
 27890 ;; Return value:  Size  Location     Type
 27891 ;;                  4   25[BANK1 ] struct .
 27892 ;; Registers used:
 27893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27894 ;; Tracked objects:
 27895 ;;		On entry : 0/0
 27896 ;;		On exit  : 0/0
 27897 ;;		Unchanged: 0/0
 27898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27899 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27900 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27902 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27903 ;;Total ram usage:       10 bytes
 27904 ;; Hardware stack levels used:    1
 27905 ;; Hardware stack levels required when called:   14
 27906 ;; This function calls:
 27907 ;;		_DATAEE_ReadByte
 27908 ;; This function is called by:
 27909 ;;		_recoverSRAMMaxFromEEPROM
 27910 ;;		_ringBufferLUT
 27911 ;; This function uses a non-reentrant model
 27912 ;;
 27913                           
 27914                           	psect	text53
 27915  018960                     __ptext53:
 27916                           	opt stack 0
 27917  018960                     _readDoubleFromEEPROM:
 27918                           	opt stack 14
 27919                           
 27920                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 27921                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 27922                           
 27923                           ;incstack = 0
 27924  018960  0E00               	movlw	0
 27925  018962  0101               	movlb	1	; () banked
 27926  018964  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 27927  018966  0E00               	movlw	0
 27928  018968  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 27929                           
 27930                           ; BSR set to: 1
 27931  01896A  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 27932  01896C  E119               	bnz	l1464
 27933  01896E  D014               	goto	L8
 27934  018970                     
 27935                           ; BSR set to: 1
 27936                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 27937                           
 27938                           ; BSR set to: 1
 27939  018970  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 27940  018972  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 27941  018974  6ED9               	movwf	fsr2l,c
 27942  018976  0E01               	movlw	high readDoubleFromEEPROM@output_data
 27943  018978  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 27944  01897A  6EDA               	movwf	fsr2h,c
 27945  01897C  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 27946  01897E  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 27947  018980  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 27948  018982  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 27949  018984  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 27950  018986  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 27951  018988  EC5C  F0C9         	call	_DATAEE_ReadByte	;wreg free
 27952  01898C  6EDF               	movwf	indf2,c
 27953  01898E  0101               	movlb	1	; () banked
 27954  018990  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 27955  018992  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 27956                           
 27957                           ; BSR set to: 1
 27958  018994  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 27959  018996  E104               	bnz	u25920
 27960  018998                     L8:
 27961  018998  0E04               	movlw	4
 27962  01899A  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 27963  01899C  A0D8               	btfss	status,0,c
 27964  01899E  D7E8               	goto	l1463
 27965  0189A0                     u25920:
 27966  0189A0                     l1464:
 27967                           
 27968                           ; BSR set to: 1
 27969                           ;double_to_EEPROM.c: 32: }
 27970                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 27971  0189A0  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 27972  0189A4  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 27973  0189A8  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 27974  0189AC  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 27975                           
 27976                           ; BSR set to: 1
 27977  0189B0  0012               	return		;funcret
 27978  0189B2                     __end_of_readDoubleFromEEPROM:
 27979                           	opt stack 0
 27980                           tblptru	equ	0xFF8
 27981                           tblptrh	equ	0xFF7
 27982                           tblptrl	equ	0xFF6
 27983                           tablat	equ	0xFF5
 27984                           prodh	equ	0xFF4
 27985                           prodl	equ	0xFF3
 27986                           intcon	equ	0xFF2
 27987                           indf0	equ	0xFEF
 27988                           postinc0	equ	0xFEE
 27989                           fsr0h	equ	0xFEA
 27990                           fsr0l	equ	0xFE9
 27991                           wreg	equ	0xFE8
 27992                           indf1	equ	0xFE7
 27993                           postdec1	equ	0xFE5
 27994                           plusw1	equ	0xFE3
 27995                           fsr1h	equ	0xFE2
 27996                           fsr1l	equ	0xFE1
 27997                           indf2	equ	0xFDF
 27998                           postinc2	equ	0xFDE
 27999                           postdec2	equ	0xFDD
 28000                           plusw2	equ	0xFDB
 28001                           fsr2h	equ	0xFDA
 28002                           fsr2l	equ	0xFD9
 28003                           status	equ	0xFD8
 28004                           
 28005 ;; *************** function _DATAEE_ReadByte *****************
 28006 ;; Defined at:
 28007 ;;		line 190 in file "mcc_generated_files/memory.c"
 28008 ;; Parameters:    Size  Location     Type
 28009 ;;  bAdd            2   23[BANK1 ] unsigned int 
 28010 ;; Auto vars:     Size  Location     Type
 28011 ;;		None
 28012 ;; Return value:  Size  Location     Type
 28013 ;;                  1    wreg      unsigned char 
 28014 ;; Registers used:
 28015 ;;		wreg, status,2, status,0
 28016 ;; Tracked objects:
 28017 ;;		On entry : 0/0
 28018 ;;		On exit  : 0/0
 28019 ;;		Unchanged: 0/0
 28020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28021 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28024 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28025 ;;Total ram usage:        2 bytes
 28026 ;; Hardware stack levels used:    1
 28027 ;; Hardware stack levels required when called:   13
 28028 ;; This function calls:
 28029 ;;		Nothing
 28030 ;; This function is called by:
 28031 ;;		_readDoubleFromEEPROM
 28032 ;; This function uses a non-reentrant model
 28033 ;;
 28034                           
 28035                           	psect	text54
 28036  0192B8                     __ptext54:
 28037                           	opt stack 0
 28038  0192B8                     _DATAEE_ReadByte:
 28039                           	opt stack 14
 28040                           
 28041                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 28042                           
 28043                           ; BSR set to: 1
 28044                           ;incstack = 0
 28045  0192B8  0101               	movlb	1	; () banked
 28046  0192BA  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 28047  0192BC  0B03               	andlw	3
 28048  0192BE  6E75               	movwf	3957,c	;volatile
 28049                           
 28050                           ; BSR set to: 1
 28051                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 28052  0192C0  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 28053                           
 28054                           ; BSR set to: 1
 28055                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 28056  0192C4  0E3F               	movlw	-193
 28057  0192C6  1677               	andwf	3959,f,c	;volsfr
 28058                           
 28059                           ; BSR set to: 1
 28060                           ;memory.c: 195: NVMCON1bits.RD = 1;
 28061  0192C8  8077               	bsf	3959,0,c	;volsfr
 28062                           
 28063                           ; BSR set to: 1
 28064                           ;memory.c: 196: __nop();
 28065  0192CA  F000               	nop	
 28066                           
 28067                           ;memory.c: 197: __nop();
 28068  0192CC  F000               	nop	
 28069                           
 28070                           ;memory.c: 199: return (NVMDAT);
 28071  0192CE  5076               	movf	3958,w,c	;volatile
 28072  0192D0  0012               	return	
 28073  0192D2                     __end_of_DATAEE_ReadByte:
 28074                           	opt stack 0
 28075                           tblptru	equ	0xFF8
 28076                           tblptrh	equ	0xFF7
 28077                           tblptrl	equ	0xFF6
 28078                           tablat	equ	0xFF5
 28079                           prodh	equ	0xFF4
 28080                           prodl	equ	0xFF3
 28081                           intcon	equ	0xFF2
 28082                           indf0	equ	0xFEF
 28083                           postinc0	equ	0xFEE
 28084                           fsr0h	equ	0xFEA
 28085                           fsr0l	equ	0xFE9
 28086                           wreg	equ	0xFE8
 28087                           indf1	equ	0xFE7
 28088                           postdec1	equ	0xFE5
 28089                           plusw1	equ	0xFE3
 28090                           fsr1h	equ	0xFE2
 28091                           fsr1l	equ	0xFE1
 28092                           indf2	equ	0xFDF
 28093                           postinc2	equ	0xFDE
 28094                           postdec2	equ	0xFDD
 28095                           plusw2	equ	0xFDB
 28096                           fsr2h	equ	0xFDA
 28097                           fsr2l	equ	0xFD9
 28098                           status	equ	0xFD8
 28099                           
 28100 ;; *************** function _getCauseOfReset *****************
 28101 ;; Defined at:
 28102 ;;		line 11 in file "cause_of_reset.c"
 28103 ;; Parameters:    Size  Location     Type
 28104 ;;		None
 28105 ;; Auto vars:     Size  Location     Type
 28106 ;;  return_reset    1   23[BANK1 ] enum E17455
 28107 ;; Return value:  Size  Location     Type
 28108 ;;                  1    wreg      enum E17963
 28109 ;; Registers used:
 28110 ;;		wreg, status,2
 28111 ;; Tracked objects:
 28112 ;;		On entry : 0/0
 28113 ;;		On exit  : 0/0
 28114 ;;		Unchanged: 0/0
 28115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28117 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28119 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28120 ;;Total ram usage:        1 bytes
 28121 ;; Hardware stack levels used:    1
 28122 ;; Hardware stack levels required when called:   13
 28123 ;; This function calls:
 28124 ;;		Nothing
 28125 ;; This function is called by:
 28126 ;;		_main
 28127 ;; This function uses a non-reentrant model
 28128 ;;
 28129                           
 28130                           	psect	text55
 28131  0189B2                     __ptext55:
 28132                           	opt stack 0
 28133  0189B2                     _getCauseOfReset:
 28134                           	opt stack 17
 28135                           
 28136                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 28137                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 28138                           
 28139                           ;incstack = 0
 28140  0189B2  AED7               	btfss	4055,7,c	;volatile
 28141  0189B4  D002               	goto	l1430
 28142                           
 28143                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 28144  0189B6  0E07               	movlw	7
 28145  0189B8  D019               	goto	L15
 28146  0189BA                     l1430:
 28147                           
 28148                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 28149  0189BA  ACD7               	btfss	4055,6,c	;volatile
 28150  0189BC  D002               	goto	l1432
 28151                           
 28152                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 28153  0189BE  0E08               	movlw	8
 28154  0189C0  D015               	goto	L15
 28155  0189C2                     l1432:
 28156                           
 28157                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 28158  0189C2  BAD7               	btfsc	4055,5,c	;volatile
 28159  0189C4  D002               	goto	l1434
 28160                           
 28161                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 28162  0189C6  0E05               	movlw	5
 28163  0189C8  D011               	goto	L15
 28164  0189CA                     l1434:
 28165                           
 28166                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 28167  0189CA  B6D7               	btfsc	4055,3,c	;volatile
 28168  0189CC  D002               	goto	l1436
 28169                           
 28170                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 28171  0189CE  0E03               	movlw	3
 28172  0189D0  D00D               	goto	L15
 28173  0189D2                     l1436:
 28174                           
 28175                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 28176  0189D2  B4D7               	btfsc	4055,2,c	;volatile
 28177  0189D4  D002               	goto	l1438
 28178                           
 28179                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 28180  0189D6  0E06               	movlw	6
 28181  0189D8  D009               	goto	L15
 28182  0189DA                     l1438:
 28183                           
 28184                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 28185  0189DA  B2D7               	btfsc	4055,1,c	;volatile
 28186  0189DC  D002               	goto	l1440
 28187                           
 28188                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 28189  0189DE  0E01               	movlw	1
 28190  0189E0  D005               	goto	L15
 28191  0189E2                     l1440:
 28192                           
 28193                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 28194  0189E2  B0D7               	btfsc	4055,0,c	;volatile
 28195  0189E4  D002               	goto	l1442
 28196                           
 28197                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 28198  0189E6  0E02               	movlw	2
 28199  0189E8  D001               	goto	L15
 28200  0189EA                     l1442:
 28201                           
 28202                           ;cause_of_reset.c: 60: else {
 28203                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 28204                           
 28205                           ; BSR set to: 1
 28206  0189EA  0E00               	movlw	0
 28207  0189EC                     L15:
 28208  0189EC  0101               	movlb	1	; () banked
 28209  0189EE  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 28210                           
 28211                           ; BSR set to: 1
 28212                           ;cause_of_reset.c: 64: }
 28213                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 28214                           
 28215                           ; BSR set to: 1
 28216                           
 28217                           ; BSR set to: 1
 28218                           
 28219                           ; BSR set to: 1
 28220                           
 28221                           ; BSR set to: 1
 28222                           
 28223                           ; BSR set to: 1
 28224                           
 28225                           ; BSR set to: 1
 28226                           
 28227                           ; BSR set to: 1
 28228  0189F0  9ED7               	bcf	4055,7,c	;volatile
 28229                           
 28230                           ; BSR set to: 1
 28231                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 28232  0189F2  9CD7               	bcf	4055,6,c	;volatile
 28233                           
 28234                           ; BSR set to: 1
 28235                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 28236  0189F4  8AD7               	bsf	4055,5,c	;volatile
 28237                           
 28238                           ; BSR set to: 1
 28239                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 28240  0189F6  88D7               	bsf	4055,4,c	;volatile
 28241                           
 28242                           ; BSR set to: 1
 28243                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 28244  0189F8  86D7               	bsf	4055,3,c	;volatile
 28245                           
 28246                           ; BSR set to: 1
 28247                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 28248  0189FA  84D7               	bsf	4055,2,c	;volatile
 28249                           
 28250                           ; BSR set to: 1
 28251                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 28252  0189FC  82D7               	bsf	4055,1,c	;volatile
 28253                           
 28254                           ; BSR set to: 1
 28255                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 28256  0189FE  80D7               	bsf	4055,0,c	;volatile
 28257                           
 28258                           ;cause_of_reset.c: 76: return return_reset_cause;
 28259  018A00  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 28260  018A02  0012               	return	
 28261  018A04                     __end_of_getCauseOfReset:
 28262                           	opt stack 0
 28263                           tblptru	equ	0xFF8
 28264                           tblptrh	equ	0xFF7
 28265                           tblptrl	equ	0xFF6
 28266                           tablat	equ	0xFF5
 28267                           prodh	equ	0xFF4
 28268                           prodl	equ	0xFF3
 28269                           intcon	equ	0xFF2
 28270                           indf0	equ	0xFEF
 28271                           postinc0	equ	0xFEE
 28272                           fsr0h	equ	0xFEA
 28273                           fsr0l	equ	0xFE9
 28274                           wreg	equ	0xFE8
 28275                           indf1	equ	0xFE7
 28276                           postdec1	equ	0xFE5
 28277                           plusw1	equ	0xFE3
 28278                           fsr1h	equ	0xFE2
 28279                           fsr1l	equ	0xFE1
 28280                           indf2	equ	0xFDF
 28281                           postinc2	equ	0xFDE
 28282                           postdec2	equ	0xFDD
 28283                           plusw2	equ	0xFDB
 28284                           fsr2h	equ	0xFDA
 28285                           fsr2l	equ	0xFD9
 28286                           status	equ	0xFD8
 28287                           
 28288 ;; *************** function _SYSTEM_Initialize *****************
 28289 ;; Defined at:
 28290 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28291 ;; Parameters:    Size  Location     Type
 28292 ;;		None
 28293 ;; Auto vars:     Size  Location     Type
 28294 ;;		None
 28295 ;; Return value:  Size  Location     Type
 28296 ;;                  1    wreg      void 
 28297 ;; Registers used:
 28298 ;;		wreg, status,2, status,0, cstack
 28299 ;; Tracked objects:
 28300 ;;		On entry : 0/0
 28301 ;;		On exit  : 0/0
 28302 ;;		Unchanged: 0/0
 28303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28308 ;;Total ram usage:        0 bytes
 28309 ;; Hardware stack levels used:    1
 28310 ;; Hardware stack levels required when called:   15
 28311 ;; This function calls:
 28312 ;;		_ADCC_Initialize
 28313 ;;		_EUSART2_Initialize
 28314 ;;		_EXT_INT_Initialize
 28315 ;;		_FVR_Initialize
 28316 ;;		_HLVD_Initialize
 28317 ;;		_INTERRUPT_Initialize
 28318 ;;		_OSCILLATOR_Initialize
 28319 ;;		_PIN_MANAGER_Initialize
 28320 ;;		_PMD_Initialize
 28321 ;;		_TMR5_Initialize
 28322 ;;		_TMR6_Initialize
 28323 ;;		_TMR7_Initialize
 28324 ;; This function is called by:
 28325 ;;		_main
 28326 ;; This function uses a non-reentrant model
 28327 ;;
 28328                           
 28329                           	psect	text56
 28330  018F7E                     __ptext56:
 28331                           	opt stack 0
 28332  018F7E                     _SYSTEM_Initialize:
 28333                           	opt stack 15
 28334                           
 28335                           ;mcc.c: 52: INTERRUPT_Initialize();
 28336                           
 28337                           ; BSR set to: 1
 28338                           ;incstack = 0
 28339  018F7E  EC75  F0C9         	call	_INTERRUPT_Initialize	;wreg free
 28340                           
 28341                           ;mcc.c: 53: PMD_Initialize();
 28342  018F82  EC25  F0C9         	call	_PMD_Initialize	;wreg free
 28343                           
 28344                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 28345  018F86  ECFC  F0BF         	call	_PIN_MANAGER_Initialize	;wreg free
 28346                           
 28347                           ;mcc.c: 55: OSCILLATOR_Initialize();
 28348  018F8A  EC33  F0C9         	call	_OSCILLATOR_Initialize	;wreg free
 28349                           
 28350                           ;mcc.c: 56: HLVD_Initialize();
 28351  018F8E  ECBE  F0C9         	call	_HLVD_Initialize	;wreg free
 28352                           
 28353                           ;mcc.c: 57: FVR_Initialize();
 28354  018F92  EC1B  F0CA         	call	_FVR_Initialize	;wreg free
 28355                           
 28356                           ;mcc.c: 58: TMR7_Initialize();
 28357  018F96  EC52  F0C5         	call	_TMR7_Initialize	;wreg free
 28358                           
 28359                           ;mcc.c: 59: TMR6_Initialize();
 28360  018F9A  ECD8  F0C7         	call	_TMR6_Initialize	;wreg free
 28361                           
 28362                           ;mcc.c: 60: ADCC_Initialize();
 28363  018F9E  EC54  F0C4         	call	_ADCC_Initialize	;wreg free
 28364                           
 28365                           ;mcc.c: 61: TMR5_Initialize();
 28366  018FA2  ECC5  F0C5         	call	_TMR5_Initialize	;wreg free
 28367                           
 28368                           ;mcc.c: 62: EXT_INT_Initialize();
 28369  018FA6  EC07  F0C9         	call	_EXT_INT_Initialize	;wreg free
 28370                           
 28371                           ;mcc.c: 63: EUSART2_Initialize();
 28372  018FAA  EC54  F0C3         	call	_EUSART2_Initialize	;wreg free
 28373  018FAE  0012               	return		;funcret
 28374  018FB0                     __end_of_SYSTEM_Initialize:
 28375                           	opt stack 0
 28376                           tblptru	equ	0xFF8
 28377                           tblptrh	equ	0xFF7
 28378                           tblptrl	equ	0xFF6
 28379                           tablat	equ	0xFF5
 28380                           prodh	equ	0xFF4
 28381                           prodl	equ	0xFF3
 28382                           intcon	equ	0xFF2
 28383                           indf0	equ	0xFEF
 28384                           postinc0	equ	0xFEE
 28385                           fsr0h	equ	0xFEA
 28386                           fsr0l	equ	0xFE9
 28387                           wreg	equ	0xFE8
 28388                           indf1	equ	0xFE7
 28389                           postdec1	equ	0xFE5
 28390                           plusw1	equ	0xFE3
 28391                           fsr1h	equ	0xFE2
 28392                           fsr1l	equ	0xFE1
 28393                           indf2	equ	0xFDF
 28394                           postinc2	equ	0xFDE
 28395                           postdec2	equ	0xFDD
 28396                           plusw2	equ	0xFDB
 28397                           fsr2h	equ	0xFDA
 28398                           fsr2l	equ	0xFD9
 28399                           status	equ	0xFD8
 28400                           
 28401 ;; *************** function _TMR7_Initialize *****************
 28402 ;; Defined at:
 28403 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 28404 ;; Parameters:    Size  Location     Type
 28405 ;;		None
 28406 ;; Auto vars:     Size  Location     Type
 28407 ;;		None
 28408 ;; Return value:  Size  Location     Type
 28409 ;;                  1    wreg      void 
 28410 ;; Registers used:
 28411 ;;		wreg, status,2, status,0, cstack
 28412 ;; Tracked objects:
 28413 ;;		On entry : 0/0
 28414 ;;		On exit  : 0/0
 28415 ;;		Unchanged: 0/0
 28416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28419 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28420 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28421 ;;Total ram usage:        2 bytes
 28422 ;; Hardware stack levels used:    1
 28423 ;; Hardware stack levels required when called:   14
 28424 ;; This function calls:
 28425 ;;		_TMR7_SetInterruptHandler
 28426 ;; This function is called by:
 28427 ;;		_SYSTEM_Initialize
 28428 ;; This function uses a non-reentrant model
 28429 ;;
 28430                           
 28431                           	psect	text57
 28432  018AA4                     __ptext57:
 28433                           	opt stack 0
 28434  018AA4                     _TMR7_Initialize:
 28435                           	opt stack 15
 28436                           
 28437                           ;tmr7.c: 69: T7GCON = 0x00;
 28438                           
 28439                           ;incstack = 0
 28440  018AA4  0E00               	movlw	0
 28441  018AA6  010F               	movlb	15	; () banked
 28442  018AA8  6F31               	movwf	49,b	;volatile
 28443                           
 28444                           ;tmr7.c: 72: T7GATE = 0x00;
 28445  018AAA  0E00               	movlw	0
 28446  018AAC  6F32               	movwf	50,b	;volatile
 28447                           
 28448                           ;tmr7.c: 75: T7CLK = 0x03;
 28449  018AAE  0E03               	movlw	3
 28450  018AB0  6F33               	movwf	51,b	;volatile
 28451                           
 28452                           ;tmr7.c: 78: TMR7H = 0xEC;
 28453  018AB2  0EEC               	movlw	236
 28454  018AB4  6F2F               	movwf	47,b	;volatile
 28455                           
 28456                           ;tmr7.c: 81: TMR7L = 0x78;
 28457  018AB6  0E78               	movlw	120
 28458  018AB8  6F2E               	movwf	46,b	;volatile
 28459                           
 28460                           ; BSR set to: 15
 28461                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 28462  018ABA  512E               	movf	46,w,b	;volatile
 28463  018ABC  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 28464  018AC0  0101               	movlb	1	; () banked
 28465  018AC2  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 28466  018AC4  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 28467  018AC8  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 28468  018ACA  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 28469  018ACC  6FDD               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 28470  018ACE  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 28471  018AD0  6FDE               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 28472                           
 28473                           ; BSR set to: 1
 28474                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 28475  018AD2  010E               	movlb	14	; () banked
 28476  018AD4  9D38               	bcf	56,6,b	;volatile
 28477                           
 28478                           ; BSR set to: 14
 28479                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 28480  018AD6  8D2E               	bsf	46,6,b	;volatile
 28481                           
 28482                           ; BSR set to: 14
 28483                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 28484  018AD8  0E76               	movlw	low _TMR7_DefaultInterruptHandler
 28485  018ADA  0101               	movlb	1	; () banked
 28486  018ADC  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 28487  018ADE  0E94               	movlw	high _TMR7_DefaultInterruptHandler
 28488  018AE0  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 28489  018AE2  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 28490  018AE4  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 28491  018AE6  ECCD  F0C9         	call	_TMR7_SetInterruptHandler	;wreg free
 28492                           
 28493                           ;tmr7.c: 96: T7CON = 0x31;
 28494  018AEA  0E31               	movlw	49
 28495  018AEC  010F               	movlb	15	; () banked
 28496  018AEE  6F30               	movwf	48,b	;volatile
 28497                           
 28498                           ; BSR set to: 15
 28499  018AF0  0012               	return		;funcret
 28500  018AF2                     __end_of_TMR7_Initialize:
 28501                           	opt stack 0
 28502                           tblptru	equ	0xFF8
 28503                           tblptrh	equ	0xFF7
 28504                           tblptrl	equ	0xFF6
 28505                           tablat	equ	0xFF5
 28506                           prodh	equ	0xFF4
 28507                           prodl	equ	0xFF3
 28508                           intcon	equ	0xFF2
 28509                           indf0	equ	0xFEF
 28510                           postinc0	equ	0xFEE
 28511                           fsr0h	equ	0xFEA
 28512                           fsr0l	equ	0xFE9
 28513                           wreg	equ	0xFE8
 28514                           indf1	equ	0xFE7
 28515                           postdec1	equ	0xFE5
 28516                           plusw1	equ	0xFE3
 28517                           fsr1h	equ	0xFE2
 28518                           fsr1l	equ	0xFE1
 28519                           indf2	equ	0xFDF
 28520                           postinc2	equ	0xFDE
 28521                           postdec2	equ	0xFDD
 28522                           plusw2	equ	0xFDB
 28523                           fsr2h	equ	0xFDA
 28524                           fsr2l	equ	0xFD9
 28525                           status	equ	0xFD8
 28526                           
 28527 ;; *************** function _TMR7_SetInterruptHandler *****************
 28528 ;; Defined at:
 28529 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 28530 ;; Parameters:    Size  Location     Type
 28531 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 28532 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 28533 ;; Auto vars:     Size  Location     Type
 28534 ;;		None
 28535 ;; Return value:  Size  Location     Type
 28536 ;;                  1    wreg      void 
 28537 ;; Registers used:
 28538 ;;		wreg, status,2, status,0
 28539 ;; Tracked objects:
 28540 ;;		On entry : 0/0
 28541 ;;		On exit  : 0/0
 28542 ;;		Unchanged: 0/0
 28543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28544 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28547 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28548 ;;Total ram usage:        3 bytes
 28549 ;; Hardware stack levels used:    1
 28550 ;; Hardware stack levels required when called:   13
 28551 ;; This function calls:
 28552 ;;		Nothing
 28553 ;; This function is called by:
 28554 ;;		_TMR7_Initialize
 28555 ;;		_main
 28556 ;; This function uses a non-reentrant model
 28557 ;;
 28558                           
 28559                           	psect	text58
 28560  01939A                     __ptext58:
 28561                           	opt stack 0
 28562  01939A                     _TMR7_SetInterruptHandler:
 28563                           	opt stack 17
 28564                           
 28565                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 28566                           
 28567                           ; BSR set to: 15
 28568                           ;incstack = 0
 28569  01939A  C117  F22E         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 28570  01939E  C118  F22F         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 28571  0193A2  C119  F230         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 28572  0193A6  0012               	return		;funcret
 28573  0193A8                     __end_of_TMR7_SetInterruptHandler:
 28574                           	opt stack 0
 28575                           tblptru	equ	0xFF8
 28576                           tblptrh	equ	0xFF7
 28577                           tblptrl	equ	0xFF6
 28578                           tablat	equ	0xFF5
 28579                           prodh	equ	0xFF4
 28580                           prodl	equ	0xFF3
 28581                           intcon	equ	0xFF2
 28582                           indf0	equ	0xFEF
 28583                           postinc0	equ	0xFEE
 28584                           fsr0h	equ	0xFEA
 28585                           fsr0l	equ	0xFE9
 28586                           wreg	equ	0xFE8
 28587                           indf1	equ	0xFE7
 28588                           postdec1	equ	0xFE5
 28589                           plusw1	equ	0xFE3
 28590                           fsr1h	equ	0xFE2
 28591                           fsr1l	equ	0xFE1
 28592                           indf2	equ	0xFDF
 28593                           postinc2	equ	0xFDE
 28594                           postdec2	equ	0xFDD
 28595                           plusw2	equ	0xFDB
 28596                           fsr2h	equ	0xFDA
 28597                           fsr2l	equ	0xFD9
 28598                           status	equ	0xFD8
 28599                           
 28600 ;; *************** function _TMR6_Initialize *****************
 28601 ;; Defined at:
 28602 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 28603 ;; Parameters:    Size  Location     Type
 28604 ;;		None
 28605 ;; Auto vars:     Size  Location     Type
 28606 ;;		None
 28607 ;; Return value:  Size  Location     Type
 28608 ;;                  1    wreg      void 
 28609 ;; Registers used:
 28610 ;;		wreg, status,2, status,0, cstack
 28611 ;; Tracked objects:
 28612 ;;		On entry : 0/0
 28613 ;;		On exit  : 0/0
 28614 ;;		Unchanged: 0/0
 28615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28620 ;;Total ram usage:        0 bytes
 28621 ;; Hardware stack levels used:    1
 28622 ;; Hardware stack levels required when called:   14
 28623 ;; This function calls:
 28624 ;;		_TMR6_SetInterruptHandler
 28625 ;; This function is called by:
 28626 ;;		_SYSTEM_Initialize
 28627 ;; This function uses a non-reentrant model
 28628 ;;
 28629                           
 28630                           	psect	text59
 28631  018FB0                     __ptext59:
 28632                           	opt stack 0
 28633  018FB0                     _TMR6_Initialize:
 28634                           	opt stack 15
 28635                           
 28636                           ;tmr6.c: 69: T6CLKCON = 0x04;
 28637                           
 28638                           ;incstack = 0
 28639  018FB0  0E04               	movlw	4
 28640  018FB2  6EB3               	movwf	4019,c	;volatile
 28641                           
 28642                           ;tmr6.c: 72: T6HLT = 0x20;
 28643  018FB4  0E20               	movlw	32
 28644  018FB6  6EB2               	movwf	4018,c	;volatile
 28645                           
 28646                           ;tmr6.c: 75: T6RST = 0x00;
 28647  018FB8  0E00               	movlw	0
 28648  018FBA  6EB4               	movwf	4020,c	;volatile
 28649                           
 28650                           ;tmr6.c: 78: T6PR = 0xF1;
 28651  018FBC  0EF1               	movlw	241
 28652  018FBE  6EB0               	movwf	4016,c	;volatile
 28653                           
 28654                           ;tmr6.c: 81: T6TMR = 0x00;
 28655  018FC0  0E00               	movlw	0
 28656  018FC2  6EAF               	movwf	4015,c	;volatile
 28657                           
 28658                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 28659  018FC4  010E               	movlb	14	; () banked
 28660  018FC6  9B38               	bcf	56,5,b	;volatile
 28661                           
 28662                           ; BSR set to: 14
 28663                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 28664  018FC8  8B2E               	bsf	46,5,b	;volatile
 28665                           
 28666                           ; BSR set to: 14
 28667                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 28668  018FCA  0E78               	movlw	low _TMR6_DefaultInterruptHandler
 28669  018FCC  0101               	movlb	1	; () banked
 28670  018FCE  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 28671  018FD0  0E94               	movlw	high _TMR6_DefaultInterruptHandler
 28672  018FD2  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 28673  018FD4  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 28674  018FD6  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 28675  018FD8  ECD4  F0C9         	call	_TMR6_SetInterruptHandler	;wreg free
 28676                           
 28677                           ;tmr6.c: 93: T6CON = 0xBF;
 28678  018FDC  0EBF               	movlw	191
 28679  018FDE  6EB1               	movwf	4017,c	;volatile
 28680  018FE0  0012               	return		;funcret
 28681  018FE2                     __end_of_TMR6_Initialize:
 28682                           	opt stack 0
 28683                           tblptru	equ	0xFF8
 28684                           tblptrh	equ	0xFF7
 28685                           tblptrl	equ	0xFF6
 28686                           tablat	equ	0xFF5
 28687                           prodh	equ	0xFF4
 28688                           prodl	equ	0xFF3
 28689                           intcon	equ	0xFF2
 28690                           indf0	equ	0xFEF
 28691                           postinc0	equ	0xFEE
 28692                           fsr0h	equ	0xFEA
 28693                           fsr0l	equ	0xFE9
 28694                           wreg	equ	0xFE8
 28695                           indf1	equ	0xFE7
 28696                           postdec1	equ	0xFE5
 28697                           plusw1	equ	0xFE3
 28698                           fsr1h	equ	0xFE2
 28699                           fsr1l	equ	0xFE1
 28700                           indf2	equ	0xFDF
 28701                           postinc2	equ	0xFDE
 28702                           postdec2	equ	0xFDD
 28703                           plusw2	equ	0xFDB
 28704                           fsr2h	equ	0xFDA
 28705                           fsr2l	equ	0xFD9
 28706                           status	equ	0xFD8
 28707                           
 28708 ;; *************** function _TMR6_SetInterruptHandler *****************
 28709 ;; Defined at:
 28710 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 28711 ;; Parameters:    Size  Location     Type
 28712 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 28713 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 28714 ;; Auto vars:     Size  Location     Type
 28715 ;;		None
 28716 ;; Return value:  Size  Location     Type
 28717 ;;                  1    wreg      void 
 28718 ;; Registers used:
 28719 ;;		wreg, status,2, status,0
 28720 ;; Tracked objects:
 28721 ;;		On entry : 0/0
 28722 ;;		On exit  : 0/0
 28723 ;;		Unchanged: 0/0
 28724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28725 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28728 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28729 ;;Total ram usage:        3 bytes
 28730 ;; Hardware stack levels used:    1
 28731 ;; Hardware stack levels required when called:   13
 28732 ;; This function calls:
 28733 ;;		Nothing
 28734 ;; This function is called by:
 28735 ;;		_TMR6_Initialize
 28736 ;;		_main
 28737 ;; This function uses a non-reentrant model
 28738 ;;
 28739                           
 28740                           	psect	text60
 28741  0193A8                     __ptext60:
 28742                           	opt stack 0
 28743  0193A8                     _TMR6_SetInterruptHandler:
 28744                           	opt stack 17
 28745                           
 28746                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 28747                           
 28748                           ;incstack = 0
 28749  0193A8  C117  F234         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 28750  0193AC  C118  F235         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 28751  0193B0  C119  F236         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 28752  0193B4  0012               	return		;funcret
 28753  0193B6                     __end_of_TMR6_SetInterruptHandler:
 28754                           	opt stack 0
 28755                           tblptru	equ	0xFF8
 28756                           tblptrh	equ	0xFF7
 28757                           tblptrl	equ	0xFF6
 28758                           tablat	equ	0xFF5
 28759                           prodh	equ	0xFF4
 28760                           prodl	equ	0xFF3
 28761                           intcon	equ	0xFF2
 28762                           indf0	equ	0xFEF
 28763                           postinc0	equ	0xFEE
 28764                           fsr0h	equ	0xFEA
 28765                           fsr0l	equ	0xFE9
 28766                           wreg	equ	0xFE8
 28767                           indf1	equ	0xFE7
 28768                           postdec1	equ	0xFE5
 28769                           plusw1	equ	0xFE3
 28770                           fsr1h	equ	0xFE2
 28771                           fsr1l	equ	0xFE1
 28772                           indf2	equ	0xFDF
 28773                           postinc2	equ	0xFDE
 28774                           postdec2	equ	0xFDD
 28775                           plusw2	equ	0xFDB
 28776                           fsr2h	equ	0xFDA
 28777                           fsr2l	equ	0xFD9
 28778                           status	equ	0xFD8
 28779                           
 28780 ;; *************** function _TMR5_Initialize *****************
 28781 ;; Defined at:
 28782 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 28783 ;; Parameters:    Size  Location     Type
 28784 ;;		None
 28785 ;; Auto vars:     Size  Location     Type
 28786 ;;		None
 28787 ;; Return value:  Size  Location     Type
 28788 ;;                  1    wreg      void 
 28789 ;; Registers used:
 28790 ;;		wreg, status,2, status,0, cstack
 28791 ;; Tracked objects:
 28792 ;;		On entry : 0/0
 28793 ;;		On exit  : 0/0
 28794 ;;		Unchanged: 0/0
 28795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28798 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28799 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28800 ;;Total ram usage:        2 bytes
 28801 ;; Hardware stack levels used:    1
 28802 ;; Hardware stack levels required when called:   14
 28803 ;; This function calls:
 28804 ;;		_TMR5_SetInterruptHandler
 28805 ;; This function is called by:
 28806 ;;		_SYSTEM_Initialize
 28807 ;; This function uses a non-reentrant model
 28808 ;;
 28809                           
 28810                           	psect	text61
 28811  018B8A                     __ptext61:
 28812                           	opt stack 0
 28813  018B8A                     _TMR5_Initialize:
 28814                           	opt stack 15
 28815                           
 28816                           ;tmr5.c: 69: T5GCON = 0x00;
 28817                           
 28818                           ;incstack = 0
 28819  018B8A  0E00               	movlw	0
 28820  018B8C  6EC4               	movwf	4036,c	;volatile
 28821                           
 28822                           ;tmr5.c: 72: T5GATE = 0x00;
 28823  018B8E  0E00               	movlw	0
 28824  018B90  6EC5               	movwf	4037,c	;volatile
 28825                           
 28826                           ;tmr5.c: 75: T5CLK = 0x01;
 28827  018B92  0E01               	movlw	1
 28828  018B94  6EC6               	movwf	4038,c	;volatile
 28829                           
 28830                           ;tmr5.c: 78: TMR5H = 0x00;
 28831  018B96  0E00               	movlw	0
 28832  018B98  6EC2               	movwf	4034,c	;volatile
 28833                           
 28834                           ;tmr5.c: 81: TMR5L = 0x00;
 28835  018B9A  0E00               	movlw	0
 28836  018B9C  6EC1               	movwf	4033,c	;volatile
 28837                           
 28838                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 28839  018B9E  50C1               	movf	4033,w,c	;volatile
 28840  018BA0  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 28841  018BA4  0101               	movlb	1	; () banked
 28842  018BA6  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 28843  018BA8  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 28844  018BAC  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 28845  018BAE  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 28846  018BB0  6FDB               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 28847  018BB2  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 28848  018BB4  6FDC               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 28849                           
 28850                           ; BSR set to: 1
 28851                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 28852  018BB6  010E               	movlb	14	; () banked
 28853  018BB8  9938               	bcf	56,4,b	;volatile
 28854                           
 28855                           ; BSR set to: 14
 28856                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 28857  018BBA  892E               	bsf	46,4,b	;volatile
 28858                           
 28859                           ; BSR set to: 14
 28860                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 28861  018BBC  0E7A               	movlw	low _TMR5_DefaultInterruptHandler
 28862  018BBE  0101               	movlb	1	; () banked
 28863  018BC0  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 28864  018BC2  0E94               	movlw	high _TMR5_DefaultInterruptHandler
 28865  018BC4  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 28866  018BC6  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 28867  018BC8  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 28868  018BCA  ECDB  F0C9         	call	_TMR5_SetInterruptHandler	;wreg free
 28869                           
 28870                           ;tmr5.c: 96: T5CON = 0x13;
 28871  018BCE  0E13               	movlw	19
 28872  018BD0  6EC3               	movwf	4035,c	;volatile
 28873  018BD2  0012               	return		;funcret
 28874  018BD4                     __end_of_TMR5_Initialize:
 28875                           	opt stack 0
 28876                           tblptru	equ	0xFF8
 28877                           tblptrh	equ	0xFF7
 28878                           tblptrl	equ	0xFF6
 28879                           tablat	equ	0xFF5
 28880                           prodh	equ	0xFF4
 28881                           prodl	equ	0xFF3
 28882                           intcon	equ	0xFF2
 28883                           indf0	equ	0xFEF
 28884                           postinc0	equ	0xFEE
 28885                           fsr0h	equ	0xFEA
 28886                           fsr0l	equ	0xFE9
 28887                           wreg	equ	0xFE8
 28888                           indf1	equ	0xFE7
 28889                           postdec1	equ	0xFE5
 28890                           plusw1	equ	0xFE3
 28891                           fsr1h	equ	0xFE2
 28892                           fsr1l	equ	0xFE1
 28893                           indf2	equ	0xFDF
 28894                           postinc2	equ	0xFDE
 28895                           postdec2	equ	0xFDD
 28896                           plusw2	equ	0xFDB
 28897                           fsr2h	equ	0xFDA
 28898                           fsr2l	equ	0xFD9
 28899                           status	equ	0xFD8
 28900                           
 28901 ;; *************** function _TMR5_SetInterruptHandler *****************
 28902 ;; Defined at:
 28903 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 28904 ;; Parameters:    Size  Location     Type
 28905 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 28906 ;;		 -> dimmingOnTimeCallback(1), TMR5_DefaultInterruptHandler(1), 
 28907 ;; Auto vars:     Size  Location     Type
 28908 ;;		None
 28909 ;; Return value:  Size  Location     Type
 28910 ;;                  1    wreg      void 
 28911 ;; Registers used:
 28912 ;;		wreg, status,2, status,0
 28913 ;; Tracked objects:
 28914 ;;		On entry : 0/0
 28915 ;;		On exit  : 0/0
 28916 ;;		Unchanged: 0/0
 28917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28918 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28921 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28922 ;;Total ram usage:        3 bytes
 28923 ;; Hardware stack levels used:    1
 28924 ;; Hardware stack levels required when called:   13
 28925 ;; This function calls:
 28926 ;;		Nothing
 28927 ;; This function is called by:
 28928 ;;		_TMR5_Initialize
 28929 ;;		_main
 28930 ;; This function uses a non-reentrant model
 28931 ;;
 28932                           
 28933                           	psect	text62
 28934  0193B6                     __ptext62:
 28935                           	opt stack 0
 28936  0193B6                     _TMR5_SetInterruptHandler:
 28937                           	opt stack 17
 28938                           
 28939                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 28940                           
 28941                           ;incstack = 0
 28942  0193B6  C117  F22B         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 28943  0193BA  C118  F22C         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 28944  0193BE  C119  F22D         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 28945  0193C2  0012               	return		;funcret
 28946  0193C4                     __end_of_TMR5_SetInterruptHandler:
 28947                           	opt stack 0
 28948                           tblptru	equ	0xFF8
 28949                           tblptrh	equ	0xFF7
 28950                           tblptrl	equ	0xFF6
 28951                           tablat	equ	0xFF5
 28952                           prodh	equ	0xFF4
 28953                           prodl	equ	0xFF3
 28954                           intcon	equ	0xFF2
 28955                           indf0	equ	0xFEF
 28956                           postinc0	equ	0xFEE
 28957                           fsr0h	equ	0xFEA
 28958                           fsr0l	equ	0xFE9
 28959                           wreg	equ	0xFE8
 28960                           indf1	equ	0xFE7
 28961                           postdec1	equ	0xFE5
 28962                           plusw1	equ	0xFE3
 28963                           fsr1h	equ	0xFE2
 28964                           fsr1l	equ	0xFE1
 28965                           indf2	equ	0xFDF
 28966                           postinc2	equ	0xFDE
 28967                           postdec2	equ	0xFDD
 28968                           plusw2	equ	0xFDB
 28969                           fsr2h	equ	0xFDA
 28970                           fsr2l	equ	0xFD9
 28971                           status	equ	0xFD8
 28972                           
 28973 ;; *************** function _PMD_Initialize *****************
 28974 ;; Defined at:
 28975 ;;		line 84 in file "mcc_generated_files/mcc.c"
 28976 ;; Parameters:    Size  Location     Type
 28977 ;;		None
 28978 ;; Auto vars:     Size  Location     Type
 28979 ;;		None
 28980 ;; Return value:  Size  Location     Type
 28981 ;;                  1    wreg      void 
 28982 ;; Registers used:
 28983 ;;		wreg, status,2
 28984 ;; Tracked objects:
 28985 ;;		On entry : 0/0
 28986 ;;		On exit  : 0/0
 28987 ;;		Unchanged: 0/0
 28988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28993 ;;Total ram usage:        0 bytes
 28994 ;; Hardware stack levels used:    1
 28995 ;; Hardware stack levels required when called:   13
 28996 ;; This function calls:
 28997 ;;		Nothing
 28998 ;; This function is called by:
 28999 ;;		_SYSTEM_Initialize
 29000 ;; This function uses a non-reentrant model
 29001 ;;
 29002                           
 29003                           	psect	text63
 29004  01924A                     __ptext63:
 29005                           	opt stack 0
 29006  01924A                     _PMD_Initialize:
 29007                           	opt stack 16
 29008                           
 29009                           ;mcc.c: 87: PMD0 = 0x00;
 29010                           
 29011                           ;incstack = 0
 29012  01924A  0E00               	movlw	0
 29013  01924C  010E               	movlb	14	; () banked
 29014  01924E  6F4C               	movwf	76,b	;volatile
 29015                           
 29016                           ;mcc.c: 89: PMD1 = 0x00;
 29017  019250  0E00               	movlw	0
 29018  019252  6F4D               	movwf	77,b	;volatile
 29019                           
 29020                           ;mcc.c: 91: PMD2 = 0x00;
 29021  019254  0E00               	movlw	0
 29022  019256  6F4E               	movwf	78,b	;volatile
 29023                           
 29024                           ;mcc.c: 93: PMD3 = 0x00;
 29025  019258  0E00               	movlw	0
 29026  01925A  6F4F               	movwf	79,b	;volatile
 29027                           
 29028                           ;mcc.c: 95: PMD4 = 0x00;
 29029  01925C  0E00               	movlw	0
 29030  01925E  6F50               	movwf	80,b	;volatile
 29031                           
 29032                           ;mcc.c: 97: PMD5 = 0x00;
 29033  019260  0E00               	movlw	0
 29034  019262  6F51               	movwf	81,b	;volatile
 29035                           
 29036                           ; BSR set to: 14
 29037  019264  0012               	return		;funcret
 29038  019266                     __end_of_PMD_Initialize:
 29039                           	opt stack 0
 29040                           tblptru	equ	0xFF8
 29041                           tblptrh	equ	0xFF7
 29042                           tblptrl	equ	0xFF6
 29043                           tablat	equ	0xFF5
 29044                           prodh	equ	0xFF4
 29045                           prodl	equ	0xFF3
 29046                           intcon	equ	0xFF2
 29047                           indf0	equ	0xFEF
 29048                           postinc0	equ	0xFEE
 29049                           fsr0h	equ	0xFEA
 29050                           fsr0l	equ	0xFE9
 29051                           wreg	equ	0xFE8
 29052                           indf1	equ	0xFE7
 29053                           postdec1	equ	0xFE5
 29054                           plusw1	equ	0xFE3
 29055                           fsr1h	equ	0xFE2
 29056                           fsr1l	equ	0xFE1
 29057                           indf2	equ	0xFDF
 29058                           postinc2	equ	0xFDE
 29059                           postdec2	equ	0xFDD
 29060                           plusw2	equ	0xFDB
 29061                           fsr2h	equ	0xFDA
 29062                           fsr2l	equ	0xFD9
 29063                           status	equ	0xFD8
 29064                           
 29065 ;; *************** function _PIN_MANAGER_Initialize *****************
 29066 ;; Defined at:
 29067 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29068 ;; Parameters:    Size  Location     Type
 29069 ;;		None
 29070 ;; Auto vars:     Size  Location     Type
 29071 ;;		None
 29072 ;; Return value:  Size  Location     Type
 29073 ;;                  1    wreg      void 
 29074 ;; Registers used:
 29075 ;;		wreg, status,2
 29076 ;; Tracked objects:
 29077 ;;		On entry : 0/0
 29078 ;;		On exit  : 0/0
 29079 ;;		Unchanged: 0/0
 29080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29085 ;;Total ram usage:        0 bytes
 29086 ;; Hardware stack levels used:    1
 29087 ;; Hardware stack levels required when called:   13
 29088 ;; This function calls:
 29089 ;;		Nothing
 29090 ;; This function is called by:
 29091 ;;		_SYSTEM_Initialize
 29092 ;; This function uses a non-reentrant model
 29093 ;;
 29094                           
 29095                           	psect	text64
 29096  017FF8                     __ptext64:
 29097                           	opt stack 0
 29098  017FF8                     _PIN_MANAGER_Initialize:
 29099                           	opt stack 16
 29100                           
 29101                           ;pin_manager.c: 62: LATE = 0x00;
 29102                           
 29103                           ; BSR set to: 14
 29104                           ;incstack = 0
 29105  017FF8  0E00               	movlw	0
 29106  017FFA  6E7D               	movwf	3965,c	;volatile
 29107                           
 29108                           ;pin_manager.c: 63: LATD = 0x00;
 29109  017FFC  0E00               	movlw	0
 29110  017FFE  6E7C               	movwf	3964,c	;volatile
 29111                           
 29112                           ;pin_manager.c: 64: LATA = 0x00;
 29113  018000  0E00               	movlw	0
 29114  018002  6E79               	movwf	3961,c	;volatile
 29115                           
 29116                           ;pin_manager.c: 65: LATF = 0x00;
 29117  018004  0E00               	movlw	0
 29118  018006  6E7E               	movwf	3966,c	;volatile
 29119                           
 29120                           ;pin_manager.c: 66: LATB = 0x00;
 29121  018008  0E00               	movlw	0
 29122  01800A  6E7A               	movwf	3962,c	;volatile
 29123                           
 29124                           ;pin_manager.c: 67: LATG = 0x00;
 29125  01800C  0E00               	movlw	0
 29126  01800E  6E7F               	movwf	3967,c	;volatile
 29127                           
 29128                           ;pin_manager.c: 68: LATC = 0x00;
 29129  018010  0E00               	movlw	0
 29130  018012  6E7B               	movwf	3963,c	;volatile
 29131                           
 29132                           ;pin_manager.c: 69: LATH = 0x00;
 29133  018014  0E00               	movlw	0
 29134  018016  6E80               	movwf	3968,c	;volatile
 29135                           
 29136                           ;pin_manager.c: 74: TRISE = 0xFF;
 29137  018018  6885               	setf	3973,c	;volatile
 29138                           
 29139                           ;pin_manager.c: 75: TRISF = 0xF0;
 29140  01801A  0EF0               	movlw	240
 29141  01801C  6E86               	movwf	3974,c	;volatile
 29142                           
 29143                           ;pin_manager.c: 76: TRISA = 0xFF;
 29144  01801E  6881               	setf	3969,c	;volatile
 29145                           
 29146                           ;pin_manager.c: 77: TRISG = 0x5C;
 29147  018020  0E5C               	movlw	92
 29148  018022  6E87               	movwf	3975,c	;volatile
 29149                           
 29150                           ;pin_manager.c: 78: TRISB = 0xFF;
 29151  018024  6882               	setf	3970,c	;volatile
 29152                           
 29153                           ;pin_manager.c: 79: TRISH = 0x0F;
 29154  018026  0E0F               	movlw	15
 29155  018028  6E88               	movwf	3976,c	;volatile
 29156                           
 29157                           ;pin_manager.c: 80: TRISC = 0xFF;
 29158  01802A  6883               	setf	3971,c	;volatile
 29159                           
 29160                           ;pin_manager.c: 81: TRISD = 0xFF;
 29161  01802C  6884               	setf	3972,c	;volatile
 29162                           
 29163                           ;pin_manager.c: 86: ANSELD = 0xFF;
 29164  01802E  010E               	movlb	14	; () banked
 29165  018030  69A7               	setf	167,b	;volatile
 29166                           
 29167                           ; BSR set to: 14
 29168                           ;pin_manager.c: 87: ANSELB = 0xFF;
 29169  018032  699A               	setf	154,b	;volatile
 29170                           
 29171                           ; BSR set to: 14
 29172                           ;pin_manager.c: 88: ANSELE = 0xFF;
 29173  018034  69AF               	setf	175,b	;volatile
 29174                           
 29175                           ;pin_manager.c: 89: ANSELG = 0x3C;
 29176  018036  0E3C               	movlw	60
 29177  018038  6FBC               	movwf	188,b	;volatile
 29178                           
 29179                           ;pin_manager.c: 90: ANSELF = 0xF0;
 29180  01803A  0EF0               	movlw	240
 29181  01803C  6FB4               	movwf	180,b	;volatile
 29182                           
 29183                           ;pin_manager.c: 91: ANSELA = 0xDF;
 29184  01803E  0EDF               	movlw	223
 29185  018040  6F92               	movwf	146,b	;volatile
 29186                           
 29187                           ;pin_manager.c: 96: WPUD = 0x00;
 29188  018042  0E00               	movlw	0
 29189  018044  6FA6               	movwf	166,b	;volatile
 29190                           
 29191                           ;pin_manager.c: 97: WPUF = 0x00;
 29192  018046  0E00               	movlw	0
 29193  018048  6FB3               	movwf	179,b	;volatile
 29194                           
 29195                           ;pin_manager.c: 98: WPUE = 0x00;
 29196  01804A  0E00               	movlw	0
 29197  01804C  6FAE               	movwf	174,b	;volatile
 29198                           
 29199                           ;pin_manager.c: 99: WPUB = 0x00;
 29200  01804E  0E00               	movlw	0
 29201  018050  6F99               	movwf	153,b	;volatile
 29202                           
 29203                           ;pin_manager.c: 100: WPUG = 0x00;
 29204  018052  0E00               	movlw	0
 29205  018054  6FBB               	movwf	187,b	;volatile
 29206                           
 29207                           ;pin_manager.c: 101: WPUA = 0x00;
 29208  018056  0E00               	movlw	0
 29209  018058  6F91               	movwf	145,b	;volatile
 29210                           
 29211                           ;pin_manager.c: 102: WPUC = 0x00;
 29212  01805A  0E00               	movlw	0
 29213  01805C  6FA1               	movwf	161,b	;volatile
 29214                           
 29215                           ;pin_manager.c: 103: WPUH = 0x00;
 29216  01805E  0E00               	movlw	0
 29217  018060  6FC0               	movwf	192,b	;volatile
 29218                           
 29219                           ;pin_manager.c: 108: ODCONE = 0x00;
 29220  018062  0E00               	movlw	0
 29221  018064  6FAD               	movwf	173,b	;volatile
 29222                           
 29223                           ;pin_manager.c: 109: ODCONF = 0x01;
 29224  018066  0E01               	movlw	1
 29225  018068  6FB2               	movwf	178,b	;volatile
 29226                           
 29227                           ;pin_manager.c: 110: ODCONA = 0x00;
 29228  01806A  0E00               	movlw	0
 29229  01806C  6F90               	movwf	144,b	;volatile
 29230                           
 29231                           ;pin_manager.c: 111: ODCONG = 0x00;
 29232  01806E  0E00               	movlw	0
 29233  018070  6FBA               	movwf	186,b	;volatile
 29234                           
 29235                           ;pin_manager.c: 112: ODCONB = 0x00;
 29236  018072  0E00               	movlw	0
 29237  018074  6F98               	movwf	152,b	;volatile
 29238                           
 29239                           ;pin_manager.c: 113: ODCONH = 0x00;
 29240  018076  0E00               	movlw	0
 29241  018078  6FBF               	movwf	191,b	;volatile
 29242                           
 29243                           ;pin_manager.c: 114: ODCONC = 0x00;
 29244  01807A  0E00               	movlw	0
 29245  01807C  6FA0               	movwf	160,b	;volatile
 29246                           
 29247                           ;pin_manager.c: 115: ODCOND = 0x00;
 29248  01807E  0E00               	movlw	0
 29249  018080  6FA5               	movwf	165,b	;volatile
 29250                           
 29251                           ; BSR set to: 14
 29252                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 29253  018082  698F               	setf	143,b	;volatile
 29254                           
 29255                           ; BSR set to: 14
 29256                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 29257  018084  6997               	setf	151,b	;volatile
 29258                           
 29259                           ; BSR set to: 14
 29260                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 29261  018086  699F               	setf	159,b	;volatile
 29262                           
 29263                           ; BSR set to: 14
 29264                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 29265  018088  69A4               	setf	164,b	;volatile
 29266                           
 29267                           ; BSR set to: 14
 29268                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 29269  01808A  69AC               	setf	172,b	;volatile
 29270                           
 29271                           ; BSR set to: 14
 29272                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 29273  01808C  69B1               	setf	177,b	;volatile
 29274                           
 29275                           ; BSR set to: 14
 29276                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 29277  01808E  69B9               	setf	185,b	;volatile
 29278                           
 29279                           ; BSR set to: 14
 29280                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 29281  018090  69BE               	setf	190,b	;volatile
 29282                           
 29283                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 29284  018092  0E0E               	movlw	14
 29285  018094  6F89               	movwf	137,b	;volatile
 29286                           
 29287                           ;pin_manager.c: 137: INT0PPS = 0x05;
 29288  018096  0E05               	movlw	5
 29289  018098  010D               	movlb	13	; () banked
 29290  01809A  6FF0               	movwf	240,b	;volatile
 29291                           
 29292                           ;pin_manager.c: 138: RX2PPS = 0x36;
 29293  01809C  0E36               	movlw	54
 29294  01809E  010E               	movlb	14	; () banked
 29295  0180A0  6F11               	movwf	17,b	;volatile
 29296                           
 29297                           ; BSR set to: 14
 29298  0180A2  0012               	return		;funcret
 29299  0180A4                     __end_of_PIN_MANAGER_Initialize:
 29300                           	opt stack 0
 29301                           tblptru	equ	0xFF8
 29302                           tblptrh	equ	0xFF7
 29303                           tblptrl	equ	0xFF6
 29304                           tablat	equ	0xFF5
 29305                           prodh	equ	0xFF4
 29306                           prodl	equ	0xFF3
 29307                           intcon	equ	0xFF2
 29308                           indf0	equ	0xFEF
 29309                           postinc0	equ	0xFEE
 29310                           fsr0h	equ	0xFEA
 29311                           fsr0l	equ	0xFE9
 29312                           wreg	equ	0xFE8
 29313                           indf1	equ	0xFE7
 29314                           postdec1	equ	0xFE5
 29315                           plusw1	equ	0xFE3
 29316                           fsr1h	equ	0xFE2
 29317                           fsr1l	equ	0xFE1
 29318                           indf2	equ	0xFDF
 29319                           postinc2	equ	0xFDE
 29320                           postdec2	equ	0xFDD
 29321                           plusw2	equ	0xFDB
 29322                           fsr2h	equ	0xFDA
 29323                           fsr2l	equ	0xFD9
 29324                           status	equ	0xFD8
 29325                           
 29326 ;; *************** function _OSCILLATOR_Initialize *****************
 29327 ;; Defined at:
 29328 ;;		line 66 in file "mcc_generated_files/mcc.c"
 29329 ;; Parameters:    Size  Location     Type
 29330 ;;		None
 29331 ;; Auto vars:     Size  Location     Type
 29332 ;;		None
 29333 ;; Return value:  Size  Location     Type
 29334 ;;                  1    wreg      void 
 29335 ;; Registers used:
 29336 ;;		wreg, status,2
 29337 ;; Tracked objects:
 29338 ;;		On entry : 0/0
 29339 ;;		On exit  : 0/0
 29340 ;;		Unchanged: 0/0
 29341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29346 ;;Total ram usage:        0 bytes
 29347 ;; Hardware stack levels used:    1
 29348 ;; Hardware stack levels required when called:   13
 29349 ;; This function calls:
 29350 ;;		Nothing
 29351 ;; This function is called by:
 29352 ;;		_SYSTEM_Initialize
 29353 ;; This function uses a non-reentrant model
 29354 ;;
 29355                           
 29356                           	psect	text65
 29357  019266                     __ptext65:
 29358                           	opt stack 0
 29359  019266                     _OSCILLATOR_Initialize:
 29360                           	opt stack 16
 29361                           
 29362                           ;mcc.c: 69: OSCCON1 = 0x20;
 29363                           
 29364                           ; BSR set to: 14
 29365                           ;incstack = 0
 29366  019266  0E20               	movlw	32
 29367  019268  010E               	movlb	14	; () banked
 29368  01926A  6F43               	movwf	67,b	;volatile
 29369                           
 29370                           ;mcc.c: 71: OSCCON3 = 0x00;
 29371  01926C  0E00               	movlw	0
 29372  01926E  6F45               	movwf	69,b	;volatile
 29373                           
 29374                           ;mcc.c: 73: OSCEN = 0x00;
 29375  019270  0E00               	movlw	0
 29376  019272  6F47               	movwf	71,b	;volatile
 29377                           
 29378                           ;mcc.c: 75: OSCFRQ = 0x02;
 29379  019274  0E02               	movlw	2
 29380  019276  6F49               	movwf	73,b	;volatile
 29381                           
 29382                           ;mcc.c: 77: OSCTUNE = 0x00;
 29383  019278  0E00               	movlw	0
 29384  01927A  6F48               	movwf	72,b	;volatile
 29385  01927C                     
 29386                           ; BSR set to: 14
 29387                           
 29388                           ; BSR set to: 14
 29389                           ;mcc.c: 80: {
 29390  01927C  B146               	btfsc	70,0,b	;volatile
 29391  01927E  0012               	return	
 29392  019280  D7FD               	goto	l59
 29393  019282                     __end_of_OSCILLATOR_Initialize:
 29394                           	opt stack 0
 29395                           tblptru	equ	0xFF8
 29396                           tblptrh	equ	0xFF7
 29397                           tblptrl	equ	0xFF6
 29398                           tablat	equ	0xFF5
 29399                           prodh	equ	0xFF4
 29400                           prodl	equ	0xFF3
 29401                           intcon	equ	0xFF2
 29402                           indf0	equ	0xFEF
 29403                           postinc0	equ	0xFEE
 29404                           fsr0h	equ	0xFEA
 29405                           fsr0l	equ	0xFE9
 29406                           wreg	equ	0xFE8
 29407                           indf1	equ	0xFE7
 29408                           postdec1	equ	0xFE5
 29409                           plusw1	equ	0xFE3
 29410                           fsr1h	equ	0xFE2
 29411                           fsr1l	equ	0xFE1
 29412                           indf2	equ	0xFDF
 29413                           postinc2	equ	0xFDE
 29414                           postdec2	equ	0xFDD
 29415                           plusw2	equ	0xFDB
 29416                           fsr2h	equ	0xFDA
 29417                           fsr2l	equ	0xFD9
 29418                           status	equ	0xFD8
 29419                           
 29420 ;; *************** function _INTERRUPT_Initialize *****************
 29421 ;; Defined at:
 29422 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 29423 ;; Parameters:    Size  Location     Type
 29424 ;;		None
 29425 ;; Auto vars:     Size  Location     Type
 29426 ;;		None
 29427 ;; Return value:  Size  Location     Type
 29428 ;;                  1    wreg      void 
 29429 ;; Registers used:
 29430 ;;		None
 29431 ;; Tracked objects:
 29432 ;;		On entry : 0/0
 29433 ;;		On exit  : 0/0
 29434 ;;		Unchanged: 0/0
 29435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29440 ;;Total ram usage:        0 bytes
 29441 ;; Hardware stack levels used:    1
 29442 ;; Hardware stack levels required when called:   13
 29443 ;; This function calls:
 29444 ;;		Nothing
 29445 ;; This function is called by:
 29446 ;;		_SYSTEM_Initialize
 29447 ;; This function uses a non-reentrant model
 29448 ;;
 29449                           
 29450                           	psect	text66
 29451  0192EA                     __ptext66:
 29452                           	opt stack 0
 29453  0192EA                     _INTERRUPT_Initialize:
 29454                           	opt stack 16
 29455                           
 29456                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 29457                           
 29458                           ; BSR set to: 14
 29459                           ;incstack = 0
 29460  0192EA  8AF2               	bsf	intcon,5,c	;volatile
 29461                           
 29462                           ;interrupt_manager.c: 60: IPR0bits.INT0IP = 1;
 29463  0192EC  010E               	movlb	14	; () banked
 29464  0192EE  811F               	bsf	31,0,b	;volatile
 29465                           
 29466                           ;interrupt_manager.c: 63: IPR3bits.RC2IP = 1;
 29467  0192F0  8F22               	bsf	34,7,b	;volatile
 29468                           
 29469                           ;interrupt_manager.c: 66: IPR5bits.TMR5IP = 1;
 29470  0192F2  8924               	bsf	36,4,b	;volatile
 29471                           
 29472                           ;interrupt_manager.c: 69: IPR1bits.ADTIP = 1;
 29473  0192F4  8320               	bsf	32,1,b	;volatile
 29474                           
 29475                           ;interrupt_manager.c: 73: IPR5bits.TMR6IP = 0;
 29476  0192F6  9B24               	bcf	36,5,b	;volatile
 29477                           
 29478                           ;interrupt_manager.c: 76: IPR3bits.TX2IP = 0;
 29479  0192F8  9D22               	bcf	34,6,b	;volatile
 29480                           
 29481                           ;interrupt_manager.c: 79: IPR5bits.TMR7IP = 0;
 29482  0192FA  9D24               	bcf	36,6,b	;volatile
 29483                           
 29484                           ;interrupt_manager.c: 82: IPR2bits.HLVDIP = 0;
 29485  0192FC  9F21               	bcf	33,7,b	;volatile
 29486                           
 29487                           ; BSR set to: 14
 29488  0192FE  0012               	return		;funcret
 29489  019300                     __end_of_INTERRUPT_Initialize:
 29490                           	opt stack 0
 29491                           tblptru	equ	0xFF8
 29492                           tblptrh	equ	0xFF7
 29493                           tblptrl	equ	0xFF6
 29494                           tablat	equ	0xFF5
 29495                           prodh	equ	0xFF4
 29496                           prodl	equ	0xFF3
 29497                           intcon	equ	0xFF2
 29498                           indf0	equ	0xFEF
 29499                           postinc0	equ	0xFEE
 29500                           fsr0h	equ	0xFEA
 29501                           fsr0l	equ	0xFE9
 29502                           wreg	equ	0xFE8
 29503                           indf1	equ	0xFE7
 29504                           postdec1	equ	0xFE5
 29505                           plusw1	equ	0xFE3
 29506                           fsr1h	equ	0xFE2
 29507                           fsr1l	equ	0xFE1
 29508                           indf2	equ	0xFDF
 29509                           postinc2	equ	0xFDE
 29510                           postdec2	equ	0xFDD
 29511                           plusw2	equ	0xFDB
 29512                           fsr2h	equ	0xFDA
 29513                           fsr2l	equ	0xFD9
 29514                           status	equ	0xFD8
 29515                           
 29516 ;; *************** function _HLVD_Initialize *****************
 29517 ;; Defined at:
 29518 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 29519 ;; Parameters:    Size  Location     Type
 29520 ;;		None
 29521 ;; Auto vars:     Size  Location     Type
 29522 ;;		None
 29523 ;; Return value:  Size  Location     Type
 29524 ;;                  1    wreg      void 
 29525 ;; Registers used:
 29526 ;;		wreg, status,2
 29527 ;; Tracked objects:
 29528 ;;		On entry : 0/0
 29529 ;;		On exit  : 0/0
 29530 ;;		Unchanged: 0/0
 29531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29536 ;;Total ram usage:        0 bytes
 29537 ;; Hardware stack levels used:    1
 29538 ;; Hardware stack levels required when called:   13
 29539 ;; This function calls:
 29540 ;;		Nothing
 29541 ;; This function is called by:
 29542 ;;		_SYSTEM_Initialize
 29543 ;; This function uses a non-reentrant model
 29544 ;;
 29545                           
 29546                           	psect	text67
 29547  01937C                     __ptext67:
 29548                           	opt stack 0
 29549  01937C                     _HLVD_Initialize:
 29550                           	opt stack 16
 29551                           
 29552                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 29553                           
 29554                           ; BSR set to: 14
 29555                           ;incstack = 0
 29556  01937C  0E09               	movlw	9
 29557  01937E  010E               	movlb	14	; () banked
 29558  019380  6FC3               	movwf	195,b	;volatile
 29559                           
 29560                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 29561  019382  0E82               	movlw	130
 29562  019384  6FC2               	movwf	194,b	;volatile
 29563                           
 29564                           ; BSR set to: 14
 29565                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 29566  019386  9F35               	bcf	53,7,b	;volatile
 29567                           
 29568                           ; BSR set to: 14
 29569                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 29570  019388  8F2B               	bsf	43,7,b	;volatile
 29571                           
 29572                           ; BSR set to: 14
 29573  01938A  0012               	return		;funcret
 29574  01938C                     __end_of_HLVD_Initialize:
 29575                           	opt stack 0
 29576                           tblptru	equ	0xFF8
 29577                           tblptrh	equ	0xFF7
 29578                           tblptrl	equ	0xFF6
 29579                           tablat	equ	0xFF5
 29580                           prodh	equ	0xFF4
 29581                           prodl	equ	0xFF3
 29582                           intcon	equ	0xFF2
 29583                           indf0	equ	0xFEF
 29584                           postinc0	equ	0xFEE
 29585                           fsr0h	equ	0xFEA
 29586                           fsr0l	equ	0xFE9
 29587                           wreg	equ	0xFE8
 29588                           indf1	equ	0xFE7
 29589                           postdec1	equ	0xFE5
 29590                           plusw1	equ	0xFE3
 29591                           fsr1h	equ	0xFE2
 29592                           fsr1l	equ	0xFE1
 29593                           indf2	equ	0xFDF
 29594                           postinc2	equ	0xFDE
 29595                           postdec2	equ	0xFDD
 29596                           plusw2	equ	0xFDB
 29597                           fsr2h	equ	0xFDA
 29598                           fsr2l	equ	0xFD9
 29599                           status	equ	0xFD8
 29600                           
 29601 ;; *************** function _FVR_Initialize *****************
 29602 ;; Defined at:
 29603 ;;		line 58 in file "mcc_generated_files/fvr.c"
 29604 ;; Parameters:    Size  Location     Type
 29605 ;;		None
 29606 ;; Auto vars:     Size  Location     Type
 29607 ;;		None
 29608 ;; Return value:  Size  Location     Type
 29609 ;;                  1    wreg      void 
 29610 ;; Registers used:
 29611 ;;		wreg, status,2
 29612 ;; Tracked objects:
 29613 ;;		On entry : 0/0
 29614 ;;		On exit  : 0/0
 29615 ;;		Unchanged: 0/0
 29616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29621 ;;Total ram usage:        0 bytes
 29622 ;; Hardware stack levels used:    1
 29623 ;; Hardware stack levels required when called:   13
 29624 ;; This function calls:
 29625 ;;		Nothing
 29626 ;; This function is called by:
 29627 ;;		_SYSTEM_Initialize
 29628 ;; This function uses a non-reentrant model
 29629 ;;
 29630                           
 29631                           	psect	text68
 29632  019436                     __ptext68:
 29633                           	opt stack 0
 29634  019436                     _FVR_Initialize:
 29635                           	opt stack 16
 29636                           
 29637                           ;fvr.c: 61: FVRCON = 0xA6;
 29638                           
 29639                           ; BSR set to: 14
 29640                           ;incstack = 0
 29641  019436  0EA6               	movlw	166
 29642  019438  010E               	movlb	14	; () banked
 29643  01943A  6FC4               	movwf	196,b	;volatile
 29644                           
 29645                           ; BSR set to: 14
 29646  01943C  0012               	return		;funcret
 29647  01943E                     __end_of_FVR_Initialize:
 29648                           	opt stack 0
 29649                           tblptru	equ	0xFF8
 29650                           tblptrh	equ	0xFF7
 29651                           tblptrl	equ	0xFF6
 29652                           tablat	equ	0xFF5
 29653                           prodh	equ	0xFF4
 29654                           prodl	equ	0xFF3
 29655                           intcon	equ	0xFF2
 29656                           indf0	equ	0xFEF
 29657                           postinc0	equ	0xFEE
 29658                           fsr0h	equ	0xFEA
 29659                           fsr0l	equ	0xFE9
 29660                           wreg	equ	0xFE8
 29661                           indf1	equ	0xFE7
 29662                           postdec1	equ	0xFE5
 29663                           plusw1	equ	0xFE3
 29664                           fsr1h	equ	0xFE2
 29665                           fsr1l	equ	0xFE1
 29666                           indf2	equ	0xFDF
 29667                           postinc2	equ	0xFDE
 29668                           postdec2	equ	0xFDD
 29669                           plusw2	equ	0xFDB
 29670                           fsr2h	equ	0xFDA
 29671                           fsr2l	equ	0xFD9
 29672                           status	equ	0xFD8
 29673                           
 29674 ;; *************** function _EXT_INT_Initialize *****************
 29675 ;; Defined at:
 29676 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 29677 ;; Parameters:    Size  Location     Type
 29678 ;;		None
 29679 ;; Auto vars:     Size  Location     Type
 29680 ;;		None
 29681 ;; Return value:  Size  Location     Type
 29682 ;;                  1    wreg      void 
 29683 ;; Registers used:
 29684 ;;		wreg, status,2, status,0, cstack
 29685 ;; Tracked objects:
 29686 ;;		On entry : 0/0
 29687 ;;		On exit  : 0/0
 29688 ;;		Unchanged: 0/0
 29689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29694 ;;Total ram usage:        0 bytes
 29695 ;; Hardware stack levels used:    1
 29696 ;; Hardware stack levels required when called:   14
 29697 ;; This function calls:
 29698 ;;		_INT0_SetInterruptHandler
 29699 ;; This function is called by:
 29700 ;;		_SYSTEM_Initialize
 29701 ;; This function uses a non-reentrant model
 29702 ;;
 29703                           
 29704                           	psect	text69
 29705  01920E                     __ptext69:
 29706                           	opt stack 0
 29707  01920E                     _EXT_INT_Initialize:
 29708                           	opt stack 15
 29709                           
 29710                           ;ext_int.c: 64: (PIR0bits.INT0IF = 0);
 29711                           
 29712                           ; BSR set to: 14
 29713                           ;incstack = 0
 29714  01920E  010E               	movlb	14	; () banked
 29715  019210  9133               	bcf	51,0,b	;volatile
 29716                           
 29717                           ;ext_int.c: 65: (INTCONbits.INT0EDG = 1);
 29718  019212  80F2               	bsf	intcon,0,c	;volatile
 29719                           
 29720                           ; BSR set to: 14
 29721                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 29722  019214  0E7C               	movlw	low _INT0_DefaultInterruptHandler
 29723  019216  0101               	movlb	1	; () banked
 29724  019218  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 29725  01921A  0E94               	movlw	high _INT0_DefaultInterruptHandler
 29726  01921C  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 29727  01921E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 29728  019220  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 29729  019222  ECE2  F0C9         	call	_INT0_SetInterruptHandler	;wreg free
 29730                           
 29731                           ;ext_int.c: 68: (PIE0bits.INT0IE = 1);
 29732  019226  010E               	movlb	14	; () banked
 29733  019228  8129               	bsf	41,0,b	;volatile
 29734                           
 29735                           ; BSR set to: 14
 29736  01922A  0012               	return		;funcret
 29737  01922C                     __end_of_EXT_INT_Initialize:
 29738                           	opt stack 0
 29739                           tblptru	equ	0xFF8
 29740                           tblptrh	equ	0xFF7
 29741                           tblptrl	equ	0xFF6
 29742                           tablat	equ	0xFF5
 29743                           prodh	equ	0xFF4
 29744                           prodl	equ	0xFF3
 29745                           intcon	equ	0xFF2
 29746                           indf0	equ	0xFEF
 29747                           postinc0	equ	0xFEE
 29748                           fsr0h	equ	0xFEA
 29749                           fsr0l	equ	0xFE9
 29750                           wreg	equ	0xFE8
 29751                           indf1	equ	0xFE7
 29752                           postdec1	equ	0xFE5
 29753                           plusw1	equ	0xFE3
 29754                           fsr1h	equ	0xFE2
 29755                           fsr1l	equ	0xFE1
 29756                           indf2	equ	0xFDF
 29757                           postinc2	equ	0xFDE
 29758                           postdec2	equ	0xFDD
 29759                           plusw2	equ	0xFDB
 29760                           fsr2h	equ	0xFDA
 29761                           fsr2l	equ	0xFD9
 29762                           status	equ	0xFD8
 29763                           
 29764 ;; *************** function _INT0_SetInterruptHandler *****************
 29765 ;; Defined at:
 29766 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 29767 ;; Parameters:    Size  Location     Type
 29768 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 29769 ;;		 -> INT0_DefaultInterruptHandler(1), dimmingOffTimeCallback(1), 
 29770 ;; Auto vars:     Size  Location     Type
 29771 ;;		None
 29772 ;; Return value:  Size  Location     Type
 29773 ;;                  1    wreg      void 
 29774 ;; Registers used:
 29775 ;;		wreg, status,2, status,0
 29776 ;; Tracked objects:
 29777 ;;		On entry : 0/0
 29778 ;;		On exit  : 0/0
 29779 ;;		Unchanged: 0/0
 29780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29781 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29784 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29785 ;;Total ram usage:        3 bytes
 29786 ;; Hardware stack levels used:    1
 29787 ;; Hardware stack levels required when called:   13
 29788 ;; This function calls:
 29789 ;;		Nothing
 29790 ;; This function is called by:
 29791 ;;		_main
 29792 ;;		_EXT_INT_Initialize
 29793 ;; This function uses a non-reentrant model
 29794 ;;
 29795                           
 29796                           	psect	text70
 29797  0193C4                     __ptext70:
 29798                           	opt stack 0
 29799  0193C4                     _INT0_SetInterruptHandler:
 29800                           	opt stack 15
 29801                           
 29802                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
 29803                           
 29804                           ; BSR set to: 14
 29805                           ;incstack = 0
 29806  0193C4  C117  F228         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 29807  0193C8  C118  F229         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 29808  0193CC  C119  F22A         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 29809  0193D0  0012               	return		;funcret
 29810  0193D2                     __end_of_INT0_SetInterruptHandler:
 29811                           	opt stack 0
 29812                           tblptru	equ	0xFF8
 29813                           tblptrh	equ	0xFF7
 29814                           tblptrl	equ	0xFF6
 29815                           tablat	equ	0xFF5
 29816                           prodh	equ	0xFF4
 29817                           prodl	equ	0xFF3
 29818                           intcon	equ	0xFF2
 29819                           indf0	equ	0xFEF
 29820                           postinc0	equ	0xFEE
 29821                           fsr0h	equ	0xFEA
 29822                           fsr0l	equ	0xFE9
 29823                           wreg	equ	0xFE8
 29824                           indf1	equ	0xFE7
 29825                           postdec1	equ	0xFE5
 29826                           plusw1	equ	0xFE3
 29827                           fsr1h	equ	0xFE2
 29828                           fsr1l	equ	0xFE1
 29829                           indf2	equ	0xFDF
 29830                           postinc2	equ	0xFDE
 29831                           postdec2	equ	0xFDD
 29832                           plusw2	equ	0xFDB
 29833                           fsr2h	equ	0xFDA
 29834                           fsr2l	equ	0xFD9
 29835                           status	equ	0xFD8
 29836                           
 29837 ;; *************** function _EUSART2_Initialize *****************
 29838 ;; Defined at:
 29839 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 29840 ;; Parameters:    Size  Location     Type
 29841 ;;		None
 29842 ;; Auto vars:     Size  Location     Type
 29843 ;;		None
 29844 ;; Return value:  Size  Location     Type
 29845 ;;                  1    wreg      void 
 29846 ;; Registers used:
 29847 ;;		wreg, status,2, status,0, cstack
 29848 ;; Tracked objects:
 29849 ;;		On entry : 0/0
 29850 ;;		On exit  : 0/0
 29851 ;;		Unchanged: 0/0
 29852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29857 ;;Total ram usage:        0 bytes
 29858 ;; Hardware stack levels used:    1
 29859 ;; Hardware stack levels required when called:   14
 29860 ;; This function calls:
 29861 ;;		_EUSART2_SetRxInterruptHandler
 29862 ;;		_EUSART2_SetTxInterruptHandler
 29863 ;; This function is called by:
 29864 ;;		_SYSTEM_Initialize
 29865 ;; This function uses a non-reentrant model
 29866 ;;
 29867                           
 29868                           	psect	text71
 29869  0186A8                     __ptext71:
 29870                           	opt stack 0
 29871  0186A8                     _EUSART2_Initialize:
 29872                           	opt stack 15
 29873                           
 29874                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 29875                           
 29876                           ;incstack = 0
 29877  0186A8  827E               	bsf	3966,1,c	;volatile
 29878                           
 29879                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 29880  0186AA  010E               	movlb	14	; () banked
 29881  0186AC  9F2C               	bcf	44,7,b	;volatile
 29882                           
 29883                           ; BSR set to: 14
 29884                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 29885  0186AE  0E4A               	movlw	low _EUSART2_Receive_ISR
 29886  0186B0  0101               	movlb	1	; () banked
 29887  0186B2  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 29888  0186B4  0E7F               	movlw	high _EUSART2_Receive_ISR
 29889  0186B6  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 29890  0186B8  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 29891  0186BA  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 29892  0186BC  ECF0  F0C9         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 29893                           
 29894                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 29895  0186C0  010E               	movlb	14	; () banked
 29896  0186C2  9D2C               	bcf	44,6,b	;volatile
 29897                           
 29898                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 29899  0186C4  0EE0               	movlw	low _EUSART2_Transmit_ISR
 29900  0186C6  0101               	movlb	1	; () banked
 29901  0186C8  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 29902  0186CA  0E8E               	movlw	high _EUSART2_Transmit_ISR
 29903  0186CC  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 29904  0186CE  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 29905  0186D0  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 29906  0186D2  ECE9  F0C9         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 29907                           
 29908                           ;eusart2.c: 91: BAUD2CON = 0x08;
 29909  0186D6  0E08               	movlw	8
 29910  0186D8  010E               	movlb	14	; () banked
 29911  0186DA  6FF7               	movwf	247,b	;volatile
 29912                           
 29913                           ; BSR set to: 14
 29914                           ;eusart2.c: 94: RC2STA = 0x90;
 29915  0186DC  0E90               	movlw	144
 29916  0186DE  6FF5               	movwf	245,b	;volatile
 29917                           
 29918                           ; BSR set to: 14
 29919                           ;eusart2.c: 97: TX2STA = 0x24;
 29920  0186E0  0E24               	movlw	36
 29921  0186E2  6FF6               	movwf	246,b	;volatile
 29922                           
 29923                           ; BSR set to: 14
 29924                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 29925  0186E4  0E8A               	movlw	138
 29926  0186E6  6FF3               	movwf	243,b	;volatile
 29927                           
 29928                           ; BSR set to: 14
 29929                           ;eusart2.c: 103: SP2BRGH = 0x00;
 29930  0186E8  0E00               	movlw	0
 29931  0186EA  6FF4               	movwf	244,b	;volatile
 29932                           
 29933                           ; BSR set to: 14
 29934                           ;eusart2.c: 107: eusart2TxHead = 0;
 29935  0186EC  0E00               	movlw	0
 29936  0186EE  0101               	movlb	1	; () banked
 29937  0186F0  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 29938                           
 29939                           ; BSR set to: 1
 29940                           ;eusart2.c: 108: eusart2TxTail = 0;
 29941  0186F2  0E00               	movlw	0
 29942  0186F4  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 29943                           
 29944                           ; BSR set to: 1
 29945                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 29946  0186F6  0E80               	movlw	128
 29947  0186F8  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 29948                           
 29949                           ; BSR set to: 1
 29950                           ;eusart2.c: 111: eusart2RxHead = 0;
 29951  0186FA  0E00               	movlw	0
 29952  0186FC  0100               	movlb	0	; () banked
 29953  0186FE  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 29954                           
 29955                           ; BSR set to: 0
 29956                           ;eusart2.c: 112: eusart2RxTail = 0;
 29957  018700  0E00               	movlw	0
 29958  018702  0101               	movlb	1	; () banked
 29959  018704  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 29960                           
 29961                           ; BSR set to: 1
 29962                           ;eusart2.c: 113: eusart2RxCount = 0;
 29963  018706  0E00               	movlw	0
 29964  018708  6FDF               	movwf	_eusart2RxCount& (0+255),b	;volatile
 29965                           
 29966                           ; BSR set to: 1
 29967                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 29968  01870A  010E               	movlb	14	; () banked
 29969  01870C  8F2C               	bsf	44,7,b	;volatile
 29970                           
 29971                           ; BSR set to: 14
 29972                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 29973  01870E  927E               	bcf	3966,1,c	;volatile
 29974                           
 29975                           ; BSR set to: 14
 29976  018710  0012               	return		;funcret
 29977  018712                     __end_of_EUSART2_Initialize:
 29978                           	opt stack 0
 29979                           tblptru	equ	0xFF8
 29980                           tblptrh	equ	0xFF7
 29981                           tblptrl	equ	0xFF6
 29982                           tablat	equ	0xFF5
 29983                           prodh	equ	0xFF4
 29984                           prodl	equ	0xFF3
 29985                           intcon	equ	0xFF2
 29986                           indf0	equ	0xFEF
 29987                           postinc0	equ	0xFEE
 29988                           fsr0h	equ	0xFEA
 29989                           fsr0l	equ	0xFE9
 29990                           wreg	equ	0xFE8
 29991                           indf1	equ	0xFE7
 29992                           postdec1	equ	0xFE5
 29993                           plusw1	equ	0xFE3
 29994                           fsr1h	equ	0xFE2
 29995                           fsr1l	equ	0xFE1
 29996                           indf2	equ	0xFDF
 29997                           postinc2	equ	0xFDE
 29998                           postdec2	equ	0xFDD
 29999                           plusw2	equ	0xFDB
 30000                           fsr2h	equ	0xFDA
 30001                           fsr2l	equ	0xFD9
 30002                           status	equ	0xFD8
 30003                           
 30004 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 30005 ;; Defined at:
 30006 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 30007 ;; Parameters:    Size  Location     Type
 30008 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 30009 ;;		 -> EUSART2_Transmit_ISR(1), 
 30010 ;; Auto vars:     Size  Location     Type
 30011 ;;		None
 30012 ;; Return value:  Size  Location     Type
 30013 ;;                  1    wreg      void 
 30014 ;; Registers used:
 30015 ;;		wreg, status,2, status,0
 30016 ;; Tracked objects:
 30017 ;;		On entry : 0/0
 30018 ;;		On exit  : 0/0
 30019 ;;		Unchanged: 0/0
 30020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30021 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30024 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30025 ;;Total ram usage:        3 bytes
 30026 ;; Hardware stack levels used:    1
 30027 ;; Hardware stack levels required when called:   13
 30028 ;; This function calls:
 30029 ;;		Nothing
 30030 ;; This function is called by:
 30031 ;;		_EUSART2_Initialize
 30032 ;; This function uses a non-reentrant model
 30033 ;;
 30034                           
 30035                           	psect	text72
 30036  0193D2                     __ptext72:
 30037                           	opt stack 0
 30038  0193D2                     _EUSART2_SetTxInterruptHandler:
 30039                           	opt stack 15
 30040                           
 30041                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 30042                           
 30043                           ; BSR set to: 14
 30044                           ;incstack = 0
 30045  0193D2  C117  F23A         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 30046  0193D6  C118  F23B         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 30047  0193DA  C119  F23C         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 30048  0193DE  0012               	return		;funcret
 30049  0193E0                     __end_of_EUSART2_SetTxInterruptHandler:
 30050                           	opt stack 0
 30051                           tblptru	equ	0xFF8
 30052                           tblptrh	equ	0xFF7
 30053                           tblptrl	equ	0xFF6
 30054                           tablat	equ	0xFF5
 30055                           prodh	equ	0xFF4
 30056                           prodl	equ	0xFF3
 30057                           intcon	equ	0xFF2
 30058                           indf0	equ	0xFEF
 30059                           postinc0	equ	0xFEE
 30060                           fsr0h	equ	0xFEA
 30061                           fsr0l	equ	0xFE9
 30062                           wreg	equ	0xFE8
 30063                           indf1	equ	0xFE7
 30064                           postdec1	equ	0xFE5
 30065                           plusw1	equ	0xFE3
 30066                           fsr1h	equ	0xFE2
 30067                           fsr1l	equ	0xFE1
 30068                           indf2	equ	0xFDF
 30069                           postinc2	equ	0xFDE
 30070                           postdec2	equ	0xFDD
 30071                           plusw2	equ	0xFDB
 30072                           fsr2h	equ	0xFDA
 30073                           fsr2l	equ	0xFD9
 30074                           status	equ	0xFD8
 30075                           
 30076 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 30077 ;; Defined at:
 30078 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 30079 ;; Parameters:    Size  Location     Type
 30080 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 30081 ;;		 -> EUSART2_Receive_ISR(1), 
 30082 ;; Auto vars:     Size  Location     Type
 30083 ;;		None
 30084 ;; Return value:  Size  Location     Type
 30085 ;;                  1    wreg      void 
 30086 ;; Registers used:
 30087 ;;		wreg, status,2, status,0
 30088 ;; Tracked objects:
 30089 ;;		On entry : 0/0
 30090 ;;		On exit  : 0/0
 30091 ;;		Unchanged: 0/0
 30092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30093 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30096 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30097 ;;Total ram usage:        3 bytes
 30098 ;; Hardware stack levels used:    1
 30099 ;; Hardware stack levels required when called:   13
 30100 ;; This function calls:
 30101 ;;		Nothing
 30102 ;; This function is called by:
 30103 ;;		_EUSART2_Initialize
 30104 ;; This function uses a non-reentrant model
 30105 ;;
 30106                           
 30107                           	psect	text73
 30108  0193E0                     __ptext73:
 30109                           	opt stack 0
 30110  0193E0                     _EUSART2_SetRxInterruptHandler:
 30111                           	opt stack 15
 30112                           
 30113                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 30114                           
 30115                           ;incstack = 0
 30116  0193E0  C117  F237         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 30117  0193E4  C118  F238         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 30118  0193E8  C119  F239         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 30119  0193EC  0012               	return		;funcret
 30120  0193EE                     __end_of_EUSART2_SetRxInterruptHandler:
 30121                           	opt stack 0
 30122                           tblptru	equ	0xFF8
 30123                           tblptrh	equ	0xFF7
 30124                           tblptrl	equ	0xFF6
 30125                           tablat	equ	0xFF5
 30126                           prodh	equ	0xFF4
 30127                           prodl	equ	0xFF3
 30128                           intcon	equ	0xFF2
 30129                           indf0	equ	0xFEF
 30130                           postinc0	equ	0xFEE
 30131                           fsr0h	equ	0xFEA
 30132                           fsr0l	equ	0xFE9
 30133                           wreg	equ	0xFE8
 30134                           indf1	equ	0xFE7
 30135                           postdec1	equ	0xFE5
 30136                           plusw1	equ	0xFE3
 30137                           fsr1h	equ	0xFE2
 30138                           fsr1l	equ	0xFE1
 30139                           indf2	equ	0xFDF
 30140                           postinc2	equ	0xFDE
 30141                           postdec2	equ	0xFDD
 30142                           plusw2	equ	0xFDB
 30143                           fsr2h	equ	0xFDA
 30144                           fsr2l	equ	0xFD9
 30145                           status	equ	0xFD8
 30146                           
 30147 ;; *************** function _ADCC_Initialize *****************
 30148 ;; Defined at:
 30149 ;;		line 63 in file "mcc_generated_files/adcc.c"
 30150 ;; Parameters:    Size  Location     Type
 30151 ;;		None
 30152 ;; Auto vars:     Size  Location     Type
 30153 ;;		None
 30154 ;; Return value:  Size  Location     Type
 30155 ;;                  1    wreg      void 
 30156 ;; Registers used:
 30157 ;;		wreg, status,2, status,0, cstack
 30158 ;; Tracked objects:
 30159 ;;		On entry : 0/0
 30160 ;;		On exit  : 0/0
 30161 ;;		Unchanged: 0/0
 30162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30167 ;;Total ram usage:        0 bytes
 30168 ;; Hardware stack levels used:    1
 30169 ;; Hardware stack levels required when called:   14
 30170 ;; This function calls:
 30171 ;;		_ADCC_SetADTIInterruptHandler
 30172 ;; This function is called by:
 30173 ;;		_SYSTEM_Initialize
 30174 ;; This function uses a non-reentrant model
 30175 ;;
 30176                           
 30177                           	psect	text74
 30178  0188A8                     __ptext74:
 30179                           	opt stack 0
 30180  0188A8                     _ADCC_Initialize:
 30181                           	opt stack 15
 30182                           
 30183                           ;adcc.c: 67: ADLTHL = 0x00;
 30184                           
 30185                           ;incstack = 0
 30186  0188A8  0E00               	movlw	0
 30187  0188AA  6E6A               	movwf	3946,c	;volatile
 30188                           
 30189                           ;adcc.c: 69: ADLTHH = 0x00;
 30190  0188AC  0E00               	movlw	0
 30191  0188AE  6E6B               	movwf	3947,c	;volatile
 30192                           
 30193                           ;adcc.c: 71: ADUTHL = 0x00;
 30194  0188B0  0E00               	movlw	0
 30195  0188B2  6E6C               	movwf	3948,c	;volatile
 30196                           
 30197                           ;adcc.c: 73: ADUTHH = 0x00;
 30198  0188B4  0E00               	movlw	0
 30199  0188B6  6E6D               	movwf	3949,c	;volatile
 30200                           
 30201                           ;adcc.c: 75: ADSTPTL = 0x00;
 30202  0188B8  0E00               	movlw	0
 30203  0188BA  6E68               	movwf	3944,c	;volatile
 30204                           
 30205                           ;adcc.c: 77: ADSTPTH = 0x00;
 30206  0188BC  0E00               	movlw	0
 30207  0188BE  6E69               	movwf	3945,c	;volatile
 30208                           
 30209                           ;adcc.c: 79: ADRPT = 0xFF;
 30210  0188C0  6866               	setf	3942,c	;volatile
 30211                           
 30212                           ;adcc.c: 81: ADPCH = 0x00;
 30213  0188C2  0E00               	movlw	0
 30214  0188C4  010F               	movlb	15	; () banked
 30215  0188C6  6F5F               	movwf	95,b	;volatile
 30216                           
 30217                           ;adcc.c: 83: ADCAP = 0x00;
 30218  0188C8  0E00               	movlw	0
 30219  0188CA  6F5D               	movwf	93,b	;volatile
 30220                           
 30221                           ;adcc.c: 85: ADCON1 = 0x00;
 30222  0188CC  0E00               	movlw	0
 30223  0188CE  6F59               	movwf	89,b	;volatile
 30224                           
 30225                           ;adcc.c: 87: ADCON2 = 0x04;
 30226  0188D0  0E04               	movlw	4
 30227  0188D2  6F5A               	movwf	90,b	;volatile
 30228                           
 30229                           ;adcc.c: 89: ADCON3 = 0x5F;
 30230  0188D4  0E5F               	movlw	95
 30231  0188D6  6F5B               	movwf	91,b	;volatile
 30232                           
 30233                           ;adcc.c: 91: ADSTAT = 0x00;
 30234  0188D8  0E00               	movlw	0
 30235  0188DA  6E65               	movwf	3941,c	;volatile
 30236                           
 30237                           ;adcc.c: 93: ADREF = 0x12;
 30238  0188DC  0E12               	movlw	18
 30239  0188DE  6F58               	movwf	88,b	;volatile
 30240                           
 30241                           ;adcc.c: 95: ADACT = 0x00;
 30242  0188E0  0E00               	movlw	0
 30243  0188E2  6F56               	movwf	86,b	;volatile
 30244                           
 30245                           ;adcc.c: 97: ADCLK = 0x1F;
 30246  0188E4  0E1F               	movlw	31
 30247  0188E6  6F57               	movwf	87,b	;volatile
 30248                           
 30249                           ;adcc.c: 99: ADCON0 = 0xD4;
 30250  0188E8  0ED4               	movlw	212
 30251  0188EA  6E60               	movwf	3936,c	;volatile
 30252                           
 30253                           ; BSR set to: 15
 30254                           ;adcc.c: 101: ADACQ = 0xFF;
 30255  0188EC  695C               	setf	92,b	;volatile
 30256                           
 30257                           ; BSR set to: 15
 30258                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 30259  0188EE  010E               	movlb	14	; () banked
 30260  0188F0  9334               	bcf	52,1,b	;volatile
 30261                           
 30262                           ; BSR set to: 14
 30263                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 30264  0188F2  832A               	bsf	42,1,b	;volatile
 30265                           
 30266                           ; BSR set to: 14
 30267                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 30268  0188F4  0E7E               	movlw	low _ADCC_DefaultInterruptHandler
 30269  0188F6  0101               	movlb	1	; () banked
 30270  0188F8  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 30271  0188FA  0E94               	movlw	high _ADCC_DefaultInterruptHandler
 30272  0188FC  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 30273  0188FE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30274  018900  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 30275  018902  ECF7  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 30276  018906  0012               	return		;funcret
 30277  018908                     __end_of_ADCC_Initialize:
 30278                           	opt stack 0
 30279                           tblptru	equ	0xFF8
 30280                           tblptrh	equ	0xFF7
 30281                           tblptrl	equ	0xFF6
 30282                           tablat	equ	0xFF5
 30283                           prodh	equ	0xFF4
 30284                           prodl	equ	0xFF3
 30285                           intcon	equ	0xFF2
 30286                           indf0	equ	0xFEF
 30287                           postinc0	equ	0xFEE
 30288                           fsr0h	equ	0xFEA
 30289                           fsr0l	equ	0xFE9
 30290                           wreg	equ	0xFE8
 30291                           indf1	equ	0xFE7
 30292                           postdec1	equ	0xFE5
 30293                           plusw1	equ	0xFE3
 30294                           fsr1h	equ	0xFE2
 30295                           fsr1l	equ	0xFE1
 30296                           indf2	equ	0xFDF
 30297                           postinc2	equ	0xFDE
 30298                           postdec2	equ	0xFDD
 30299                           plusw2	equ	0xFDB
 30300                           fsr2h	equ	0xFDA
 30301                           fsr2l	equ	0xFD9
 30302                           status	equ	0xFD8
 30303                           
 30304 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 30305 ;; Defined at:
 30306 ;;		line 307 in file "mcc_generated_files/adcc.c"
 30307 ;; Parameters:    Size  Location     Type
 30308 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 30309 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 30310 ;; Auto vars:     Size  Location     Type
 30311 ;;		None
 30312 ;; Return value:  Size  Location     Type
 30313 ;;                  1    wreg      void 
 30314 ;; Registers used:
 30315 ;;		wreg, status,2, status,0
 30316 ;; Tracked objects:
 30317 ;;		On entry : 0/0
 30318 ;;		On exit  : 0/0
 30319 ;;		Unchanged: 0/0
 30320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30321 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30324 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30325 ;;Total ram usage:        3 bytes
 30326 ;; Hardware stack levels used:    1
 30327 ;; Hardware stack levels required when called:   13
 30328 ;; This function calls:
 30329 ;;		Nothing
 30330 ;; This function is called by:
 30331 ;;		_ADCC_Initialize
 30332 ;;		_main
 30333 ;; This function uses a non-reentrant model
 30334 ;;
 30335                           
 30336                           	psect	text75
 30337  0193EE                     __ptext75:
 30338                           	opt stack 0
 30339  0193EE                     _ADCC_SetADTIInterruptHandler:
 30340                           	opt stack 15
 30341                           
 30342                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 30343                           
 30344                           ;incstack = 0
 30345  0193EE  C117  F231         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 30346  0193F2  C118  F232         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 30347  0193F6  C119  F233         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 30348  0193FA  0012               	return		;funcret
 30349  0193FC                     __end_of_ADCC_SetADTIInterruptHandler:
 30350                           	opt stack 0
 30351                           tblptru	equ	0xFF8
 30352                           tblptrh	equ	0xFF7
 30353                           tblptrl	equ	0xFF6
 30354                           tablat	equ	0xFF5
 30355                           prodh	equ	0xFF4
 30356                           prodl	equ	0xFF3
 30357                           intcon	equ	0xFF2
 30358                           indf0	equ	0xFEF
 30359                           postinc0	equ	0xFEE
 30360                           fsr0h	equ	0xFEA
 30361                           fsr0l	equ	0xFE9
 30362                           wreg	equ	0xFE8
 30363                           indf1	equ	0xFE7
 30364                           postdec1	equ	0xFE5
 30365                           plusw1	equ	0xFE3
 30366                           fsr1h	equ	0xFE2
 30367                           fsr1l	equ	0xFE1
 30368                           indf2	equ	0xFDF
 30369                           postinc2	equ	0xFDE
 30370                           postdec2	equ	0xFDD
 30371                           plusw2	equ	0xFDB
 30372                           fsr2h	equ	0xFDA
 30373                           fsr2l	equ	0xFD9
 30374                           status	equ	0xFD8
 30375                           
 30376 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 30377 ;; Defined at:
 30378 ;;		line 111 in file "mcc_generated_files/interrupt_manager.c"
 30379 ;; Parameters:    Size  Location     Type
 30380 ;;		None
 30381 ;; Auto vars:     Size  Location     Type
 30382 ;;		None
 30383 ;; Return value:  Size  Location     Type
 30384 ;;                  1    wreg      void 
 30385 ;; Registers used:
 30386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 30387 ;; Tracked objects:
 30388 ;;		On entry : 0/0
 30389 ;;		On exit  : 0/0
 30390 ;;		Unchanged: 0/0
 30391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30394 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30395 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30396 ;;Total ram usage:       21 bytes
 30397 ;; Hardware stack levels used:    1
 30398 ;; Hardware stack levels required when called:   12
 30399 ;; This function calls:
 30400 ;;		Absolute function
 30401 ;;		_EUSART2_Transmit_ISR
 30402 ;;		_HLVD_ISR
 30403 ;;		_TMR6_ISR
 30404 ;;		_TMR7_ISR
 30405 ;; This function is called by:
 30406 ;;		Interrupt level 1
 30407 ;; This function uses a non-reentrant model
 30408 ;;
 30409                           
 30410                           	psect	intcodelo
 30411  000018                     __pintcodelo:
 30412                           	opt stack 0
 30413  000018                     _INTERRUPT_InterruptManagerLow:
 30414                           	opt stack 11
 30415                           
 30416                           ;incstack = 0
 30417  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 30418  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 30419  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 30420  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 30421  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 30422  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 30423  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 30424  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 30425  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 30426  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 30427  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 30428  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 30429  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 30430  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 30431  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 30432  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 30433  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 30434  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 30435  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 30436  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 30437  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 30438  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 30439                           
 30440                           ;interrupt_manager.c: 114: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 30441  00006E  010E               	movlb	14	; () banked
 30442  000070  BB2E               	btfsc	46,5,b	;volatile
 30443                           
 30444                           ; BSR set to: 14
 30445  000072  AB38               	btfss	56,5,b	;volatile
 30446  000074  D003               	goto	i1l237
 30447                           
 30448                           ; BSR set to: 14
 30449                           ;interrupt_manager.c: 115: {
 30450                           ;interrupt_manager.c: 116: TMR6_ISR();
 30451  000076  EC61  F0C8         	call	_TMR6_ISR	;wreg free
 30452                           
 30453                           ;interrupt_manager.c: 117: }
 30454  00007A  D01B               	goto	i1l243
 30455  00007C                     i1l237:
 30456                           
 30457                           ; BSR set to: 14
 30458                           ;interrupt_manager.c: 118: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 30459  00007C  BD2C               	btfsc	44,6,b	;volatile
 30460                           
 30461                           ; BSR set to: 14
 30462  00007E  AD36               	btfss	54,6,b	;volatile
 30463  000080  D00D               	goto	i1l239
 30464                           
 30465                           ; BSR set to: 14
 30466                           ;interrupt_manager.c: 119: {
 30467                           ;interrupt_manager.c: 120: EUSART2_TxDefaultInterruptHandler();
 30468  000082  D801               	call	i1u2721_28
 30469  000084  D016               	goto	i1l243
 30470  000086                     i1u2721_28:
 30471  000086  0005               	push	
 30472  000088  6EFA               	movwf	pclath,c
 30473  00008A  0102               	movlb	2	; () banked
 30474  00008C  513A               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 30475  00008E  6EFD               	movwf	tosl,c
 30476  000090  513B               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 30477  000092  6EFE               	movwf	tosh,c
 30478  000094  513C               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 30479  000096  6EFF               	movwf	tosu,c
 30480  000098  50FA               	movf	pclath,w,c
 30481  00009A  0012               	return		;indir
 30482  00009C                     i1l239:
 30483                           
 30484                           ; BSR set to: 14
 30485                           ;interrupt_manager.c: 122: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 30486  00009C  BD2E               	btfsc	46,6,b	;volatile
 30487                           
 30488                           ; BSR set to: 14
 30489  00009E  AD38               	btfss	56,6,b	;volatile
 30490  0000A0  D003               	goto	i1l241
 30491                           
 30492                           ; BSR set to: 14
 30493                           ;interrupt_manager.c: 123: {
 30494                           ;interrupt_manager.c: 124: TMR7_ISR();
 30495  0000A2  EC8B  F0C7         	call	_TMR7_ISR	;wreg free
 30496                           
 30497                           ;interrupt_manager.c: 125: }
 30498  0000A6  D005               	goto	i1l243
 30499  0000A8                     i1l241:
 30500                           
 30501                           ; BSR set to: 14
 30502                           ;interrupt_manager.c: 126: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 30503  0000A8  BF2B               	btfsc	43,7,b	;volatile
 30504                           
 30505                           ; BSR set to: 14
 30506  0000AA  AF35               	btfss	53,7,b	;volatile
 30507  0000AC  D002               	goto	i1l243
 30508                           
 30509                           ; BSR set to: 14
 30510                           ;interrupt_manager.c: 127: {
 30511                           ;interrupt_manager.c: 128: HLVD_ISR();
 30512  0000AE  EC23  F0CA         	call	_HLVD_ISR	;wreg free
 30513  0000B2                     i1l243:
 30514                           
 30515                           ;interrupt_manager.c: 130: else
 30516                           ;interrupt_manager.c: 131: {
 30517  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 30518  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 30519  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 30520  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 30521  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 30522  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 30523  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 30524  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 30525  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 30526  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 30527  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 30528  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 30529  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 30530  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 30531  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 30532  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 30533  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 30534  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 30535  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 30536  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 30537  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 30538  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 30539  000108  0010               	retfie	
 30540  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 30541                           	opt stack 0
 30542                           tosu	equ	0xFFF
 30543                           tosh	equ	0xFFE
 30544                           tosl	equ	0xFFD
 30545                           pclatu	equ	0xFFB
 30546                           pclath	equ	0xFFA
 30547                           tblptru	equ	0xFF8
 30548                           tblptrh	equ	0xFF7
 30549                           tblptrl	equ	0xFF6
 30550                           tablat	equ	0xFF5
 30551                           prodh	equ	0xFF4
 30552                           prodl	equ	0xFF3
 30553                           intcon	equ	0xFF2
 30554                           indf0	equ	0xFEF
 30555                           postinc0	equ	0xFEE
 30556                           fsr0h	equ	0xFEA
 30557                           fsr0l	equ	0xFE9
 30558                           wreg	equ	0xFE8
 30559                           indf1	equ	0xFE7
 30560                           postdec1	equ	0xFE5
 30561                           plusw1	equ	0xFE3
 30562                           fsr1h	equ	0xFE2
 30563                           fsr1l	equ	0xFE1
 30564                           bsr	equ	0xFE0
 30565                           indf2	equ	0xFDF
 30566                           postinc2	equ	0xFDE
 30567                           postdec2	equ	0xFDD
 30568                           plusw2	equ	0xFDB
 30569                           fsr2h	equ	0xFDA
 30570                           fsr2l	equ	0xFD9
 30571                           status	equ	0xFD8
 30572                           
 30573 ;; *************** function _TMR7_ISR *****************
 30574 ;; Defined at:
 30575 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 30576 ;; Parameters:    Size  Location     Type
 30577 ;;		None
 30578 ;; Auto vars:     Size  Location     Type
 30579 ;;		None
 30580 ;; Return value:  Size  Location     Type
 30581 ;;                  1    wreg      void 
 30582 ;; Registers used:
 30583 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 30584 ;; Tracked objects:
 30585 ;;		On entry : 0/0
 30586 ;;		On exit  : 0/0
 30587 ;;		Unchanged: 0/0
 30588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30593 ;;Total ram usage:        0 bytes
 30594 ;; Hardware stack levels used:    1
 30595 ;; Hardware stack levels required when called:   11
 30596 ;; This function calls:
 30597 ;;		Absolute function
 30598 ;;		_TMR7_DefaultInterruptHandler
 30599 ;;		_TMR7_WriteTimer
 30600 ;;		_acquisitionTimerCallback
 30601 ;; This function is called by:
 30602 ;;		_INTERRUPT_InterruptManagerLow
 30603 ;; This function uses a non-reentrant model
 30604 ;;
 30605                           
 30606                           	psect	text77
 30607  018F16                     __ptext77:
 30608                           	opt stack 0
 30609  018F16                     _TMR7_ISR:
 30610                           	opt stack 11
 30611                           
 30612                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 30613                           
 30614                           ;incstack = 0
 30615  018F16  010E               	movlb	14	; () banked
 30616  018F18  9D38               	bcf	56,6,b	;volatile
 30617                           
 30618                           ; BSR set to: 14
 30619                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 30620  018F1A  C1DD  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 30621  018F1E  C1DE  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 30622  018F22  EC9C  F0C8         	call	_TMR7_WriteTimer	;wreg free
 30623                           
 30624                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 30625  018F26  0102               	movlb	2	; () banked
 30626  018F28  512E               	movf	_TMR7_InterruptHandler& (0+255),w,b
 30627  018F2A  112F               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 30628  018F2C  1130               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 30629  018F2E  B4D8               	btfsc	status,2,c
 30630  018F30  0012               	return	
 30631                           
 30632                           ; BSR set to: 2
 30633                           ;tmr7.c: 172: {
 30634                           ;tmr7.c: 173: TMR7_InterruptHandler();
 30635  018F32  D801               	call	i1u2696_28
 30636  018F34  0012               	return	
 30637  018F36                     i1u2696_28:
 30638  018F36  0005               	push	
 30639  018F38  6EFA               	movwf	pclath,c
 30640  018F3A  512E               	movf	_TMR7_InterruptHandler& (0+255),w,b
 30641  018F3C  6EFD               	movwf	tosl,c
 30642  018F3E  512F               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 30643  018F40  6EFE               	movwf	tosh,c
 30644  018F42  5130               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 30645  018F44  6EFF               	movwf	tosu,c
 30646  018F46  50FA               	movf	pclath,w,c
 30647  018F48  0012               	return		;indir
 30648  018F4A                     __end_of_TMR7_ISR:
 30649                           	opt stack 0
 30650                           tosu	equ	0xFFF
 30651                           tosh	equ	0xFFE
 30652                           tosl	equ	0xFFD
 30653                           pclatu	equ	0xFFB
 30654                           pclath	equ	0xFFA
 30655                           tblptru	equ	0xFF8
 30656                           tblptrh	equ	0xFF7
 30657                           tblptrl	equ	0xFF6
 30658                           tablat	equ	0xFF5
 30659                           prodh	equ	0xFF4
 30660                           prodl	equ	0xFF3
 30661                           intcon	equ	0xFF2
 30662                           indf0	equ	0xFEF
 30663                           postinc0	equ	0xFEE
 30664                           fsr0h	equ	0xFEA
 30665                           fsr0l	equ	0xFE9
 30666                           wreg	equ	0xFE8
 30667                           indf1	equ	0xFE7
 30668                           postdec1	equ	0xFE5
 30669                           plusw1	equ	0xFE3
 30670                           fsr1h	equ	0xFE2
 30671                           fsr1l	equ	0xFE1
 30672                           bsr	equ	0xFE0
 30673                           indf2	equ	0xFDF
 30674                           postinc2	equ	0xFDE
 30675                           postdec2	equ	0xFDD
 30676                           plusw2	equ	0xFDB
 30677                           fsr2h	equ	0xFDA
 30678                           fsr2l	equ	0xFD9
 30679                           status	equ	0xFD8
 30680                           
 30681 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 30682 ;; Defined at:
 30683 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 30684 ;; Parameters:    Size  Location     Type
 30685 ;;		None
 30686 ;; Auto vars:     Size  Location     Type
 30687 ;;		None
 30688 ;; Return value:  Size  Location     Type
 30689 ;;                  1    wreg      void 
 30690 ;; Registers used:
 30691 ;;		None
 30692 ;; Tracked objects:
 30693 ;;		On entry : 0/0
 30694 ;;		On exit  : 0/0
 30695 ;;		Unchanged: 0/0
 30696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30701 ;;Total ram usage:        0 bytes
 30702 ;; Hardware stack levels used:    1
 30703 ;; Hardware stack levels required when called:    9
 30704 ;; This function calls:
 30705 ;;		Nothing
 30706 ;; This function is called by:
 30707 ;;		_TMR7_Initialize
 30708 ;;		_TMR7_ISR
 30709 ;; This function uses a non-reentrant model
 30710 ;;
 30711                           
 30712                           	psect	text78
 30713  019476                     __ptext78:
 30714                           	opt stack 0
 30715  019476                     _TMR7_DefaultInterruptHandler:
 30716                           	opt stack 12
 30717                           
 30718                           ;incstack = 0
 30719  019476  0012               	return		;funcret
 30720  019478                     __end_of_TMR7_DefaultInterruptHandler:
 30721                           	opt stack 0
 30722                           tosu	equ	0xFFF
 30723                           tosh	equ	0xFFE
 30724                           tosl	equ	0xFFD
 30725                           pclatu	equ	0xFFB
 30726                           pclath	equ	0xFFA
 30727                           tblptru	equ	0xFF8
 30728                           tblptrh	equ	0xFF7
 30729                           tblptrl	equ	0xFF6
 30730                           tablat	equ	0xFF5
 30731                           prodh	equ	0xFF4
 30732                           prodl	equ	0xFF3
 30733                           intcon	equ	0xFF2
 30734                           indf0	equ	0xFEF
 30735                           postinc0	equ	0xFEE
 30736                           fsr0h	equ	0xFEA
 30737                           fsr0l	equ	0xFE9
 30738                           wreg	equ	0xFE8
 30739                           indf1	equ	0xFE7
 30740                           postdec1	equ	0xFE5
 30741                           plusw1	equ	0xFE3
 30742                           fsr1h	equ	0xFE2
 30743                           fsr1l	equ	0xFE1
 30744                           bsr	equ	0xFE0
 30745                           indf2	equ	0xFDF
 30746                           postinc2	equ	0xFDE
 30747                           postdec2	equ	0xFDD
 30748                           plusw2	equ	0xFDB
 30749                           fsr2h	equ	0xFDA
 30750                           fsr2l	equ	0xFD9
 30751                           status	equ	0xFD8
 30752                           
 30753 ;; *************** function _acquisitionTimerCallback *****************
 30754 ;; Defined at:
 30755 ;;		line 425 in file "main.c"
 30756 ;; Parameters:    Size  Location     Type
 30757 ;;		None
 30758 ;; Auto vars:     Size  Location     Type
 30759 ;;		None
 30760 ;; Return value:  Size  Location     Type
 30761 ;;                  1    wreg      void 
 30762 ;; Registers used:
 30763 ;;		wreg, status,2, cstack
 30764 ;; Tracked objects:
 30765 ;;		On entry : 0/0
 30766 ;;		On exit  : 0/0
 30767 ;;		Unchanged: 0/0
 30768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30773 ;;Total ram usage:        0 bytes
 30774 ;; Hardware stack levels used:    1
 30775 ;; Hardware stack levels required when called:   10
 30776 ;; This function calls:
 30777 ;;		_ADCC_ClearAccumulator
 30778 ;;		_ADCC_DischargeSampleCapacitor
 30779 ;;		_ADCC_StartConversion
 30780 ;; This function is called by:
 30781 ;;		_main
 30782 ;;		_TMR7_ISR
 30783 ;; This function uses a non-reentrant model
 30784 ;;
 30785                           
 30786                           	psect	text79
 30787  01933A                     __ptext79:
 30788                           	opt stack 0
 30789  01933A                     _acquisitionTimerCallback:
 30790                           	opt stack 11
 30791                           
 30792                           ;main.c: 428: ADCC_DischargeSampleCapacitor();
 30793                           
 30794                           ;incstack = 0
 30795  01933A  EC1F  F0CA         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 30796                           
 30797                           ;main.c: 431: ADCC_ClearAccumulator();
 30798  01933E  EC2D  F0CA         	call	_ADCC_ClearAccumulator	;wreg free
 30799                           
 30800                           ;main.c: 434: ADCC_StartConversion(next_channel);
 30801  019342  0101               	movlb	1	; () banked
 30802  019344  51E8               	movf	_next_channel& (0+255),w,b
 30803  019346  ECFE  F0C9         	call	_ADCC_StartConversion
 30804  01934A  0012               	return		;funcret
 30805  01934C                     __end_of_acquisitionTimerCallback:
 30806                           	opt stack 0
 30807                           tosu	equ	0xFFF
 30808                           tosh	equ	0xFFE
 30809                           tosl	equ	0xFFD
 30810                           pclatu	equ	0xFFB
 30811                           pclath	equ	0xFFA
 30812                           tblptru	equ	0xFF8
 30813                           tblptrh	equ	0xFF7
 30814                           tblptrl	equ	0xFF6
 30815                           tablat	equ	0xFF5
 30816                           prodh	equ	0xFF4
 30817                           prodl	equ	0xFF3
 30818                           intcon	equ	0xFF2
 30819                           indf0	equ	0xFEF
 30820                           postinc0	equ	0xFEE
 30821                           fsr0h	equ	0xFEA
 30822                           fsr0l	equ	0xFE9
 30823                           wreg	equ	0xFE8
 30824                           indf1	equ	0xFE7
 30825                           postdec1	equ	0xFE5
 30826                           plusw1	equ	0xFE3
 30827                           fsr1h	equ	0xFE2
 30828                           fsr1l	equ	0xFE1
 30829                           bsr	equ	0xFE0
 30830                           indf2	equ	0xFDF
 30831                           postinc2	equ	0xFDE
 30832                           postdec2	equ	0xFDD
 30833                           plusw2	equ	0xFDB
 30834                           fsr2h	equ	0xFDA
 30835                           fsr2l	equ	0xFD9
 30836                           status	equ	0xFD8
 30837                           
 30838 ;; *************** function _ADCC_StartConversion *****************
 30839 ;; Defined at:
 30840 ;;		line 112 in file "mcc_generated_files/adcc.c"
 30841 ;; Parameters:    Size  Location     Type
 30842 ;;  channel         1    wreg     enum E17310
 30843 ;; Auto vars:     Size  Location     Type
 30844 ;;  channel         1    0[BANK1 ] enum E17310
 30845 ;; Return value:  Size  Location     Type
 30846 ;;                  1    wreg      void 
 30847 ;; Registers used:
 30848 ;;		wreg
 30849 ;; Tracked objects:
 30850 ;;		On entry : 0/0
 30851 ;;		On exit  : 0/0
 30852 ;;		Unchanged: 0/0
 30853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30855 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30857 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30858 ;;Total ram usage:        1 bytes
 30859 ;; Hardware stack levels used:    1
 30860 ;; Hardware stack levels required when called:    9
 30861 ;; This function calls:
 30862 ;;		Nothing
 30863 ;; This function is called by:
 30864 ;;		_acquisitionTimerCallback
 30865 ;; This function uses a non-reentrant model
 30866 ;;
 30867                           
 30868                           	psect	text80
 30869  0193FC                     __ptext80:
 30870                           	opt stack 0
 30871  0193FC                     _ADCC_StartConversion:
 30872                           	opt stack 11
 30873                           
 30874                           ;incstack = 0
 30875                           ;ADCC_StartConversion@channel stored from wreg
 30876  0193FC  0101               	movlb	1	; () banked
 30877  0193FE  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 30878                           
 30879                           ;adcc.c: 115: ADPCH = channel;
 30880  019400  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 30881                           
 30882                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 30883  019404  8E60               	bsf	3936,7,c	;volatile
 30884                           
 30885                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 30886  019406  8060               	bsf	3936,0,c	;volatile
 30887  019408  0012               	return		;funcret
 30888  01940A                     __end_of_ADCC_StartConversion:
 30889                           	opt stack 0
 30890                           tosu	equ	0xFFF
 30891                           tosh	equ	0xFFE
 30892                           tosl	equ	0xFFD
 30893                           pclatu	equ	0xFFB
 30894                           pclath	equ	0xFFA
 30895                           tblptru	equ	0xFF8
 30896                           tblptrh	equ	0xFF7
 30897                           tblptrl	equ	0xFF6
 30898                           tablat	equ	0xFF5
 30899                           prodh	equ	0xFF4
 30900                           prodl	equ	0xFF3
 30901                           intcon	equ	0xFF2
 30902                           indf0	equ	0xFEF
 30903                           postinc0	equ	0xFEE
 30904                           fsr0h	equ	0xFEA
 30905                           fsr0l	equ	0xFE9
 30906                           wreg	equ	0xFE8
 30907                           indf1	equ	0xFE7
 30908                           postdec1	equ	0xFE5
 30909                           plusw1	equ	0xFE3
 30910                           fsr1h	equ	0xFE2
 30911                           fsr1l	equ	0xFE1
 30912                           bsr	equ	0xFE0
 30913                           indf2	equ	0xFDF
 30914                           postinc2	equ	0xFDE
 30915                           postdec2	equ	0xFDD
 30916                           plusw2	equ	0xFDB
 30917                           fsr2h	equ	0xFDA
 30918                           fsr2l	equ	0xFD9
 30919                           status	equ	0xFD8
 30920                           
 30921 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 30922 ;; Defined at:
 30923 ;;		line 174 in file "mcc_generated_files/adcc.c"
 30924 ;; Parameters:    Size  Location     Type
 30925 ;;		None
 30926 ;; Auto vars:     Size  Location     Type
 30927 ;;		None
 30928 ;; Return value:  Size  Location     Type
 30929 ;;                  1    wreg      void 
 30930 ;; Registers used:
 30931 ;;		wreg, status,2
 30932 ;; Tracked objects:
 30933 ;;		On entry : 0/0
 30934 ;;		On exit  : 0/0
 30935 ;;		Unchanged: 0/0
 30936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30941 ;;Total ram usage:        0 bytes
 30942 ;; Hardware stack levels used:    1
 30943 ;; Hardware stack levels required when called:    9
 30944 ;; This function calls:
 30945 ;;		Nothing
 30946 ;; This function is called by:
 30947 ;;		_acquisitionTimerCallback
 30948 ;; This function uses a non-reentrant model
 30949 ;;
 30950                           
 30951                           	psect	text81
 30952  01943E                     __ptext81:
 30953                           	opt stack 0
 30954  01943E                     _ADCC_DischargeSampleCapacitor:
 30955                           	opt stack 11
 30956                           
 30957                           ;adcc.c: 177: ADPCH = 0x3c;
 30958                           
 30959                           ;incstack = 0
 30960  01943E  0E3C               	movlw	60
 30961  019440  010F               	movlb	15	; () banked
 30962  019442  6F5F               	movwf	95,b	;volatile
 30963                           
 30964                           ; BSR set to: 15
 30965  019444  0012               	return		;funcret
 30966  019446                     __end_of_ADCC_DischargeSampleCapacitor:
 30967                           	opt stack 0
 30968                           tosu	equ	0xFFF
 30969                           tosh	equ	0xFFE
 30970                           tosl	equ	0xFFD
 30971                           pclatu	equ	0xFFB
 30972                           pclath	equ	0xFFA
 30973                           tblptru	equ	0xFF8
 30974                           tblptrh	equ	0xFF7
 30975                           tblptrl	equ	0xFF6
 30976                           tablat	equ	0xFF5
 30977                           prodh	equ	0xFF4
 30978                           prodl	equ	0xFF3
 30979                           intcon	equ	0xFF2
 30980                           indf0	equ	0xFEF
 30981                           postinc0	equ	0xFEE
 30982                           fsr0h	equ	0xFEA
 30983                           fsr0l	equ	0xFE9
 30984                           wreg	equ	0xFE8
 30985                           indf1	equ	0xFE7
 30986                           postdec1	equ	0xFE5
 30987                           plusw1	equ	0xFE3
 30988                           fsr1h	equ	0xFE2
 30989                           fsr1l	equ	0xFE1
 30990                           bsr	equ	0xFE0
 30991                           indf2	equ	0xFDF
 30992                           postinc2	equ	0xFDE
 30993                           postdec2	equ	0xFDD
 30994                           plusw2	equ	0xFDB
 30995                           fsr2h	equ	0xFDA
 30996                           fsr2l	equ	0xFD9
 30997                           status	equ	0xFD8
 30998                           
 30999 ;; *************** function _ADCC_ClearAccumulator *****************
 31000 ;; Defined at:
 31001 ;;		line 204 in file "mcc_generated_files/adcc.c"
 31002 ;; Parameters:    Size  Location     Type
 31003 ;;		None
 31004 ;; Auto vars:     Size  Location     Type
 31005 ;;		None
 31006 ;; Return value:  Size  Location     Type
 31007 ;;                  1    wreg      void 
 31008 ;; Registers used:
 31009 ;;		None
 31010 ;; Tracked objects:
 31011 ;;		On entry : 0/0
 31012 ;;		On exit  : 0/0
 31013 ;;		Unchanged: 0/0
 31014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31019 ;;Total ram usage:        0 bytes
 31020 ;; Hardware stack levels used:    1
 31021 ;; Hardware stack levels required when called:    9
 31022 ;; This function calls:
 31023 ;;		Nothing
 31024 ;; This function is called by:
 31025 ;;		_acquisitionTimerCallback
 31026 ;; This function uses a non-reentrant model
 31027 ;;
 31028                           
 31029                           	psect	text82
 31030  01945A                     __ptext82:
 31031                           	opt stack 0
 31032  01945A                     _ADCC_ClearAccumulator:
 31033                           	opt stack 11
 31034                           
 31035                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 31036                           
 31037                           ; BSR set to: 15
 31038                           ;incstack = 0
 31039  01945A  010F               	movlb	15	; () banked
 31040  01945C  875A               	bsf	90,3,b	;volatile
 31041                           
 31042                           ; BSR set to: 15
 31043  01945E  0012               	return		;funcret
 31044  019460                     __end_of_ADCC_ClearAccumulator:
 31045                           	opt stack 0
 31046                           tosu	equ	0xFFF
 31047                           tosh	equ	0xFFE
 31048                           tosl	equ	0xFFD
 31049                           pclatu	equ	0xFFB
 31050                           pclath	equ	0xFFA
 31051                           tblptru	equ	0xFF8
 31052                           tblptrh	equ	0xFF7
 31053                           tblptrl	equ	0xFF6
 31054                           tablat	equ	0xFF5
 31055                           prodh	equ	0xFF4
 31056                           prodl	equ	0xFF3
 31057                           intcon	equ	0xFF2
 31058                           indf0	equ	0xFEF
 31059                           postinc0	equ	0xFEE
 31060                           fsr0h	equ	0xFEA
 31061                           fsr0l	equ	0xFE9
 31062                           wreg	equ	0xFE8
 31063                           indf1	equ	0xFE7
 31064                           postdec1	equ	0xFE5
 31065                           plusw1	equ	0xFE3
 31066                           fsr1h	equ	0xFE2
 31067                           fsr1l	equ	0xFE1
 31068                           bsr	equ	0xFE0
 31069                           indf2	equ	0xFDF
 31070                           postinc2	equ	0xFDE
 31071                           postdec2	equ	0xFDD
 31072                           plusw2	equ	0xFDB
 31073                           fsr2h	equ	0xFDA
 31074                           fsr2l	equ	0xFD9
 31075                           status	equ	0xFD8
 31076                           
 31077 ;; *************** function _TMR7_WriteTimer *****************
 31078 ;; Defined at:
 31079 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 31080 ;; Parameters:    Size  Location     Type
 31081 ;;  timerVal        2    0[BANK1 ] unsigned int 
 31082 ;; Auto vars:     Size  Location     Type
 31083 ;;		None
 31084 ;; Return value:  Size  Location     Type
 31085 ;;                  1    wreg      void 
 31086 ;; Registers used:
 31087 ;;		wreg, status,2
 31088 ;; Tracked objects:
 31089 ;;		On entry : 0/0
 31090 ;;		On exit  : 0/0
 31091 ;;		Unchanged: 0/0
 31092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31093 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31096 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31097 ;;Total ram usage:        2 bytes
 31098 ;; Hardware stack levels used:    1
 31099 ;; Hardware stack levels required when called:    9
 31100 ;; This function calls:
 31101 ;;		Nothing
 31102 ;; This function is called by:
 31103 ;;		_TMR7_ISR
 31104 ;;		_TMR7_Reload
 31105 ;; This function uses a non-reentrant model
 31106 ;;
 31107                           
 31108                           	psect	text83
 31109  019138                     __ptext83:
 31110                           	opt stack 0
 31111  019138                     _TMR7_WriteTimer:
 31112                           	opt stack 12
 31113                           
 31114                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 31115                           
 31116                           ; BSR set to: 15
 31117                           ;incstack = 0
 31118  019138  010F               	movlb	15	; () banked
 31119  01913A  A530               	btfss	48,2,b	;volatile
 31120  01913C  D009               	goto	i1l654
 31121                           
 31122                           ; BSR set to: 15
 31123                           ;tmr7.c: 130: {
 31124                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 31125  01913E  9130               	bcf	48,0,b	;volatile
 31126                           
 31127                           ; BSR set to: 15
 31128                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 31129  019140  0101               	movlb	1	; () banked
 31130  019142  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 31131  019144  010F               	movlb	15	; () banked
 31132  019146  6F2F               	movwf	47,b	;volatile
 31133                           
 31134                           ; BSR set to: 15
 31135                           ;tmr7.c: 136: TMR7L = timerVal;
 31136  019148  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 31137                           
 31138                           ; BSR set to: 15
 31139                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 31140  01914C  8130               	bsf	48,0,b	;volatile
 31141                           
 31142                           ;tmr7.c: 140: }
 31143  01914E  0012               	return	
 31144  019150                     i1l654:
 31145                           
 31146                           ; BSR set to: 15
 31147                           ;tmr7.c: 141: else
 31148                           ;tmr7.c: 142: {
 31149                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 31150                           
 31151                           ; BSR set to: 15
 31152  019150  0101               	movlb	1	; () banked
 31153  019152  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 31154  019154  010F               	movlb	15	; () banked
 31155  019156  6F2F               	movwf	47,b	;volatile
 31156                           
 31157                           ; BSR set to: 15
 31158                           ;tmr7.c: 145: TMR7L = timerVal;
 31159  019158  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 31160  01915C  0012               	return	
 31161  01915E                     __end_of_TMR7_WriteTimer:
 31162                           	opt stack 0
 31163                           tosu	equ	0xFFF
 31164                           tosh	equ	0xFFE
 31165                           tosl	equ	0xFFD
 31166                           pclatu	equ	0xFFB
 31167                           pclath	equ	0xFFA
 31168                           tblptru	equ	0xFF8
 31169                           tblptrh	equ	0xFF7
 31170                           tblptrl	equ	0xFF6
 31171                           tablat	equ	0xFF5
 31172                           prodh	equ	0xFF4
 31173                           prodl	equ	0xFF3
 31174                           intcon	equ	0xFF2
 31175                           indf0	equ	0xFEF
 31176                           postinc0	equ	0xFEE
 31177                           fsr0h	equ	0xFEA
 31178                           fsr0l	equ	0xFE9
 31179                           wreg	equ	0xFE8
 31180                           indf1	equ	0xFE7
 31181                           postdec1	equ	0xFE5
 31182                           plusw1	equ	0xFE3
 31183                           fsr1h	equ	0xFE2
 31184                           fsr1l	equ	0xFE1
 31185                           bsr	equ	0xFE0
 31186                           indf2	equ	0xFDF
 31187                           postinc2	equ	0xFDE
 31188                           postdec2	equ	0xFDD
 31189                           plusw2	equ	0xFDB
 31190                           fsr2h	equ	0xFDA
 31191                           fsr2l	equ	0xFD9
 31192                           status	equ	0xFD8
 31193                           
 31194 ;; *************** function _TMR6_ISR *****************
 31195 ;; Defined at:
 31196 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 31197 ;; Parameters:    Size  Location     Type
 31198 ;;		None
 31199 ;; Auto vars:     Size  Location     Type
 31200 ;;		None
 31201 ;; Return value:  Size  Location     Type
 31202 ;;                  1    wreg      void 
 31203 ;; Registers used:
 31204 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 31205 ;; Tracked objects:
 31206 ;;		On entry : 0/0
 31207 ;;		On exit  : 0/0
 31208 ;;		Unchanged: 0/0
 31209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31214 ;;Total ram usage:        0 bytes
 31215 ;; Hardware stack levels used:    1
 31216 ;; Hardware stack levels required when called:   10
 31217 ;; This function calls:
 31218 ;;		Absolute function
 31219 ;;		_TMR6_DefaultInterruptHandler
 31220 ;;		_heartbeatTimerCallback
 31221 ;; This function is called by:
 31222 ;;		_INTERRUPT_InterruptManagerLow
 31223 ;; This function uses a non-reentrant model
 31224 ;;
 31225                           
 31226                           	psect	text84
 31227  0190C2                     __ptext84:
 31228                           	opt stack 0
 31229  0190C2                     _TMR6_ISR:
 31230                           	opt stack 12
 31231                           
 31232                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 31233                           
 31234                           ; BSR set to: 15
 31235                           ;incstack = 0
 31236  0190C2  010E               	movlb	14	; () banked
 31237  0190C4  9B38               	bcf	56,5,b	;volatile
 31238                           
 31239                           ; BSR set to: 14
 31240                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 31241  0190C6  0102               	movlb	2	; () banked
 31242  0190C8  5134               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31243  0190CA  1135               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31244  0190CC  1136               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31245  0190CE  B4D8               	btfsc	status,2,c
 31246  0190D0  0012               	return	
 31247                           
 31248                           ; BSR set to: 2
 31249                           ;tmr6.c: 172: {
 31250                           ;tmr6.c: 173: TMR6_InterruptHandler();
 31251  0190D2  D801               	call	i1u2694_28
 31252  0190D4  0012               	return	
 31253  0190D6                     i1u2694_28:
 31254  0190D6  0005               	push	
 31255  0190D8  6EFA               	movwf	pclath,c
 31256  0190DA  5134               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31257  0190DC  6EFD               	movwf	tosl,c
 31258  0190DE  5135               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31259  0190E0  6EFE               	movwf	tosh,c
 31260  0190E2  5136               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31261  0190E4  6EFF               	movwf	tosu,c
 31262  0190E6  50FA               	movf	pclath,w,c
 31263  0190E8  0012               	return		;indir
 31264  0190EA                     __end_of_TMR6_ISR:
 31265                           	opt stack 0
 31266                           tosu	equ	0xFFF
 31267                           tosh	equ	0xFFE
 31268                           tosl	equ	0xFFD
 31269                           pclatu	equ	0xFFB
 31270                           pclath	equ	0xFFA
 31271                           tblptru	equ	0xFF8
 31272                           tblptrh	equ	0xFF7
 31273                           tblptrl	equ	0xFF6
 31274                           tablat	equ	0xFF5
 31275                           prodh	equ	0xFF4
 31276                           prodl	equ	0xFF3
 31277                           intcon	equ	0xFF2
 31278                           indf0	equ	0xFEF
 31279                           postinc0	equ	0xFEE
 31280                           fsr0h	equ	0xFEA
 31281                           fsr0l	equ	0xFE9
 31282                           wreg	equ	0xFE8
 31283                           indf1	equ	0xFE7
 31284                           postdec1	equ	0xFE5
 31285                           plusw1	equ	0xFE3
 31286                           fsr1h	equ	0xFE2
 31287                           fsr1l	equ	0xFE1
 31288                           bsr	equ	0xFE0
 31289                           indf2	equ	0xFDF
 31290                           postinc2	equ	0xFDE
 31291                           postdec2	equ	0xFDD
 31292                           plusw2	equ	0xFDB
 31293                           fsr2h	equ	0xFDA
 31294                           fsr2l	equ	0xFD9
 31295                           status	equ	0xFD8
 31296                           
 31297 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 31298 ;; Defined at:
 31299 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31300 ;; Parameters:    Size  Location     Type
 31301 ;;		None
 31302 ;; Auto vars:     Size  Location     Type
 31303 ;;		None
 31304 ;; Return value:  Size  Location     Type
 31305 ;;                  1    wreg      void 
 31306 ;; Registers used:
 31307 ;;		None
 31308 ;; Tracked objects:
 31309 ;;		On entry : 0/0
 31310 ;;		On exit  : 0/0
 31311 ;;		Unchanged: 0/0
 31312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31317 ;;Total ram usage:        0 bytes
 31318 ;; Hardware stack levels used:    1
 31319 ;; Hardware stack levels required when called:    9
 31320 ;; This function calls:
 31321 ;;		Nothing
 31322 ;; This function is called by:
 31323 ;;		_TMR6_Initialize
 31324 ;;		_TMR6_ISR
 31325 ;; This function uses a non-reentrant model
 31326 ;;
 31327                           
 31328                           	psect	text85
 31329  019478                     __ptext85:
 31330                           	opt stack 0
 31331  019478                     _TMR6_DefaultInterruptHandler:
 31332                           	opt stack 12
 31333                           
 31334                           ;incstack = 0
 31335  019478  0012               	return		;funcret
 31336  01947A                     __end_of_TMR6_DefaultInterruptHandler:
 31337                           	opt stack 0
 31338                           tosu	equ	0xFFF
 31339                           tosh	equ	0xFFE
 31340                           tosl	equ	0xFFD
 31341                           pclatu	equ	0xFFB
 31342                           pclath	equ	0xFFA
 31343                           tblptru	equ	0xFF8
 31344                           tblptrh	equ	0xFF7
 31345                           tblptrl	equ	0xFF6
 31346                           tablat	equ	0xFF5
 31347                           prodh	equ	0xFF4
 31348                           prodl	equ	0xFF3
 31349                           intcon	equ	0xFF2
 31350                           indf0	equ	0xFEF
 31351                           postinc0	equ	0xFEE
 31352                           fsr0h	equ	0xFEA
 31353                           fsr0l	equ	0xFE9
 31354                           wreg	equ	0xFE8
 31355                           indf1	equ	0xFE7
 31356                           postdec1	equ	0xFE5
 31357                           plusw1	equ	0xFE3
 31358                           fsr1h	equ	0xFE2
 31359                           fsr1l	equ	0xFE1
 31360                           bsr	equ	0xFE0
 31361                           indf2	equ	0xFDF
 31362                           postinc2	equ	0xFDE
 31363                           postdec2	equ	0xFDD
 31364                           plusw2	equ	0xFDB
 31365                           fsr2h	equ	0xFDA
 31366                           fsr2l	equ	0xFD9
 31367                           status	equ	0xFD8
 31368                           
 31369 ;; *************** function _heartbeatTimerCallback *****************
 31370 ;; Defined at:
 31371 ;;		line 206 in file "main.c"
 31372 ;; Parameters:    Size  Location     Type
 31373 ;;		None
 31374 ;; Auto vars:     Size  Location     Type
 31375 ;;		None
 31376 ;; Return value:  Size  Location     Type
 31377 ;;                  1    wreg      void 
 31378 ;; Registers used:
 31379 ;;		wreg, status,2, status,0
 31380 ;; Tracked objects:
 31381 ;;		On entry : 0/0
 31382 ;;		On exit  : 0/0
 31383 ;;		Unchanged: 0/0
 31384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31387 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31388 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31389 ;;Total ram usage:        1 bytes
 31390 ;; Hardware stack levels used:    1
 31391 ;; Hardware stack levels required when called:    9
 31392 ;; This function calls:
 31393 ;;		Nothing
 31394 ;; This function is called by:
 31395 ;;		_main
 31396 ;;		_TMR6_ISR
 31397 ;; This function uses a non-reentrant model
 31398 ;;
 31399                           
 31400                           	psect	text86
 31401  018D7C                     __ptext86:
 31402                           	opt stack 0
 31403  018D7C                     _heartbeatTimerCallback:
 31404                           	opt stack 12
 31405                           
 31406                           ;main.c: 209: LATFbits.LATF2 = !LATFbits.LATF2;
 31407                           
 31408                           ;incstack = 0
 31409  018D7C  B47E               	btfsc	3966,2,c	;volatile
 31410  018D7E  D004               	goto	i1u1122_20
 31411  018D80  0101               	movlb	1	; () banked
 31412  018D82  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 31413  018D84  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 31414  018D86  D002               	goto	i1u1123_28
 31415  018D88                     i1u1122_20:
 31416  018D88  0101               	movlb	1	; () banked
 31417  018D8A  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 31418  018D8C                     i1u1123_28:
 31419  018D8C  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 31420  018D8E  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 31421  018D90  507E               	movf	3966,w,c	;volatile
 31422  018D92  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 31423  018D94  0BFB               	andlw	-5
 31424  018D96  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 31425  018D98  6E7E               	movwf	3966,c	;volatile
 31426                           
 31427                           ;main.c: 212: dev_on_time++;
 31428  018D9A  0E01               	movlw	1
 31429  018D9C  0102               	movlb	2	; () banked
 31430  018D9E  271C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 31431  018DA0  0E00               	movlw	0
 31432  018DA2  231D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 31433  018DA4  231E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 31434  018DA6  231F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 31435                           
 31436                           ; BSR set to: 2
 31437                           ;main.c: 215: if (load_enable) {
 31438  018DA8  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 31439  018DAA  D006               	goto	i1l1019
 31440                           
 31441                           ; BSR set to: 2
 31442                           ;main.c: 217: load_on_time++;
 31443  018DAC  0E01               	movlw	1
 31444  018DAE  2718               	addwf	_load_on_time& (0+255),f,b	;volatile
 31445  018DB0  0E00               	movlw	0
 31446  018DB2  2319               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 31447  018DB4  231A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 31448  018DB6  231B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 31449  018DB8                     i1l1019:
 31450                           
 31451                           ; BSR set to: 2
 31452  018DB8  0004               	clrwdt		;# 
 31453  018DBA  0012               	return		;funcret
 31454  018DBC                     __end_of_heartbeatTimerCallback:
 31455                           	opt stack 0
 31456                           tosu	equ	0xFFF
 31457                           tosh	equ	0xFFE
 31458                           tosl	equ	0xFFD
 31459                           pclatu	equ	0xFFB
 31460                           pclath	equ	0xFFA
 31461                           tblptru	equ	0xFF8
 31462                           tblptrh	equ	0xFF7
 31463                           tblptrl	equ	0xFF6
 31464                           tablat	equ	0xFF5
 31465                           prodh	equ	0xFF4
 31466                           prodl	equ	0xFF3
 31467                           intcon	equ	0xFF2
 31468                           indf0	equ	0xFEF
 31469                           postinc0	equ	0xFEE
 31470                           fsr0h	equ	0xFEA
 31471                           fsr0l	equ	0xFE9
 31472                           wreg	equ	0xFE8
 31473                           indf1	equ	0xFE7
 31474                           postdec1	equ	0xFE5
 31475                           plusw1	equ	0xFE3
 31476                           fsr1h	equ	0xFE2
 31477                           fsr1l	equ	0xFE1
 31478                           bsr	equ	0xFE0
 31479                           indf2	equ	0xFDF
 31480                           postinc2	equ	0xFDE
 31481                           postdec2	equ	0xFDD
 31482                           plusw2	equ	0xFDB
 31483                           fsr2h	equ	0xFDA
 31484                           fsr2l	equ	0xFD9
 31485                           status	equ	0xFD8
 31486                           
 31487 ;; *************** function _HLVD_ISR *****************
 31488 ;; Defined at:
 31489 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 31490 ;; Parameters:    Size  Location     Type
 31491 ;;		None
 31492 ;; Auto vars:     Size  Location     Type
 31493 ;;		None
 31494 ;; Return value:  Size  Location     Type
 31495 ;;                  1    wreg      void 
 31496 ;; Registers used:
 31497 ;;		None
 31498 ;; Tracked objects:
 31499 ;;		On entry : 0/0
 31500 ;;		On exit  : 0/0
 31501 ;;		Unchanged: 0/0
 31502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31507 ;;Total ram usage:        0 bytes
 31508 ;; Hardware stack levels used:    1
 31509 ;; Hardware stack levels required when called:    9
 31510 ;; This function calls:
 31511 ;;		Nothing
 31512 ;; This function is called by:
 31513 ;;		_INTERRUPT_InterruptManagerLow
 31514 ;; This function uses a non-reentrant model
 31515 ;;
 31516                           
 31517                           	psect	text87
 31518  019446                     __ptext87:
 31519                           	opt stack 0
 31520  019446                     _HLVD_ISR:
 31521                           	opt stack 13
 31522                           
 31523                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 31524                           
 31525                           ;incstack = 0
 31526  019446  010E               	movlb	14	; () banked
 31527  019448  9F35               	bcf	53,7,b	;volatile
 31528                           
 31529                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 31530  01944A  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 31531                           
 31532                           ; BSR set to: 14
 31533  01944C  0012               	return		;funcret
 31534  01944E                     __end_of_HLVD_ISR:
 31535                           	opt stack 0
 31536                           tosu	equ	0xFFF
 31537                           tosh	equ	0xFFE
 31538                           tosl	equ	0xFFD
 31539                           pclatu	equ	0xFFB
 31540                           pclath	equ	0xFFA
 31541                           tblptru	equ	0xFF8
 31542                           tblptrh	equ	0xFF7
 31543                           tblptrl	equ	0xFF6
 31544                           tablat	equ	0xFF5
 31545                           prodh	equ	0xFF4
 31546                           prodl	equ	0xFF3
 31547                           intcon	equ	0xFF2
 31548                           indf0	equ	0xFEF
 31549                           postinc0	equ	0xFEE
 31550                           fsr0h	equ	0xFEA
 31551                           fsr0l	equ	0xFE9
 31552                           wreg	equ	0xFE8
 31553                           indf1	equ	0xFE7
 31554                           postdec1	equ	0xFE5
 31555                           plusw1	equ	0xFE3
 31556                           fsr1h	equ	0xFE2
 31557                           fsr1l	equ	0xFE1
 31558                           bsr	equ	0xFE0
 31559                           indf2	equ	0xFDF
 31560                           postinc2	equ	0xFDE
 31561                           postdec2	equ	0xFDD
 31562                           plusw2	equ	0xFDB
 31563                           fsr2h	equ	0xFDA
 31564                           fsr2l	equ	0xFD9
 31565                           status	equ	0xFD8
 31566                           
 31567 ;; *************** function _EUSART2_Transmit_ISR *****************
 31568 ;; Defined at:
 31569 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 31570 ;; Parameters:    Size  Location     Type
 31571 ;;		None
 31572 ;; Auto vars:     Size  Location     Type
 31573 ;;		None
 31574 ;; Return value:  Size  Location     Type
 31575 ;;                  1    wreg      void 
 31576 ;; Registers used:
 31577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31578 ;; Tracked objects:
 31579 ;;		On entry : 0/0
 31580 ;;		On exit  : 0/0
 31581 ;;		Unchanged: 0/0
 31582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31587 ;;Total ram usage:        0 bytes
 31588 ;; Hardware stack levels used:    1
 31589 ;; Hardware stack levels required when called:    9
 31590 ;; This function calls:
 31591 ;;		Nothing
 31592 ;; This function is called by:
 31593 ;;		_EUSART2_Initialize
 31594 ;;		_INTERRUPT_InterruptManagerLow
 31595 ;; This function uses a non-reentrant model
 31596 ;;
 31597                           
 31598                           	psect	text88
 31599  018EE0                     __ptext88:
 31600                           	opt stack 0
 31601  018EE0                     _EUSART2_Transmit_ISR:
 31602                           	opt stack 13
 31603                           
 31604                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 31605                           
 31606                           ; BSR set to: 14
 31607                           ;incstack = 0
 31608  018EE0  0E80               	movlw	128
 31609  018EE2  0101               	movlb	1	; () banked
 31610  018EE4  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 31611  018EE6  D014               	goto	i1l417
 31612                           
 31613                           ; BSR set to: 1
 31614                           ;eusart2.c: 203: {
 31615                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 31616  018EE8  51E2               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 31617  018EEA  0D01               	mullw	1
 31618  018EEC  0E00               	movlw	low _eusart2TxBuffer
 31619  018EEE  24F3               	addwf	prodl,w,c
 31620  018EF0  6ED9               	movwf	fsr2l,c
 31621  018EF2  0E03               	movlw	high _eusart2TxBuffer
 31622  018EF4  20F4               	addwfc	prodh,w,c
 31623  018EF6  6EDA               	movwf	fsr2h,c
 31624  018EF8  50DF               	movf	indf2,w,c
 31625  018EFA  010E               	movlb	14	; () banked
 31626  018EFC  6FF2               	movwf	242,b	;volatile
 31627                           
 31628                           ; BSR set to: 14
 31629  018EFE  0101               	movlb	1	; () banked
 31630  018F00  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 31631                           
 31632                           ; BSR set to: 1
 31633                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 31634  018F02  0E7F               	movlw	127
 31635  018F04  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 31636  018F06  D002               	goto	i1l418
 31637                           
 31638                           ; BSR set to: 1
 31639                           ;eusart2.c: 206: {
 31640                           ;eusart2.c: 207: eusart2TxTail = 0;
 31641  018F08  0E00               	movlw	0
 31642  018F0A  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 31643  018F0C                     i1l418:
 31644                           
 31645                           ; BSR set to: 1
 31646                           ;eusart2.c: 208: }
 31647                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 31648                           
 31649                           ; BSR set to: 1
 31650  018F0C  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 31651                           
 31652                           ;eusart2.c: 210: }
 31653  018F0E  0012               	return	
 31654  018F10                     i1l417:
 31655                           
 31656                           ; BSR set to: 1
 31657                           ;eusart2.c: 211: else
 31658                           ;eusart2.c: 212: {
 31659                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 31660  018F10  010E               	movlb	14	; () banked
 31661  018F12  9D2C               	bcf	44,6,b	;volatile
 31662  018F14  0012               	return	
 31663  018F16                     __end_of_EUSART2_Transmit_ISR:
 31664                           	opt stack 0
 31665                           tosu	equ	0xFFF
 31666                           tosh	equ	0xFFE
 31667                           tosl	equ	0xFFD
 31668                           pclatu	equ	0xFFB
 31669                           pclath	equ	0xFFA
 31670                           tblptru	equ	0xFF8
 31671                           tblptrh	equ	0xFF7
 31672                           tblptrl	equ	0xFF6
 31673                           tablat	equ	0xFF5
 31674                           prodh	equ	0xFF4
 31675                           prodl	equ	0xFF3
 31676                           intcon	equ	0xFF2
 31677                           indf0	equ	0xFEF
 31678                           postinc0	equ	0xFEE
 31679                           fsr0h	equ	0xFEA
 31680                           fsr0l	equ	0xFE9
 31681                           wreg	equ	0xFE8
 31682                           indf1	equ	0xFE7
 31683                           postdec1	equ	0xFE5
 31684                           plusw1	equ	0xFE3
 31685                           fsr1h	equ	0xFE2
 31686                           fsr1l	equ	0xFE1
 31687                           bsr	equ	0xFE0
 31688                           indf2	equ	0xFDF
 31689                           postinc2	equ	0xFDE
 31690                           postdec2	equ	0xFDD
 31691                           plusw2	equ	0xFDB
 31692                           fsr2h	equ	0xFDA
 31693                           fsr2l	equ	0xFD9
 31694                           status	equ	0xFD8
 31695                           
 31696 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 31697 ;; Defined at:
 31698 ;;		line 86 in file "mcc_generated_files/interrupt_manager.c"
 31699 ;; Parameters:    Size  Location     Type
 31700 ;;		None
 31701 ;; Auto vars:     Size  Location     Type
 31702 ;;		None
 31703 ;; Return value:  Size  Location     Type
 31704 ;;                  1    wreg      void 
 31705 ;; Registers used:
 31706 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31707 ;; Tracked objects:
 31708 ;;		On entry : 0/0
 31709 ;;		On exit  : 0/0
 31710 ;;		Unchanged: 0/0
 31711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31714 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31715 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31716 ;;Total ram usage:       18 bytes
 31717 ;; Hardware stack levels used:    1
 31718 ;; Hardware stack levels required when called:    8
 31719 ;; This function calls:
 31720 ;;		Absolute function
 31721 ;;		_ADCC_ThresholdISR
 31722 ;;		_EUSART2_Receive_ISR
 31723 ;;		_INT0_ISR
 31724 ;;		_TMR5_ISR
 31725 ;; This function is called by:
 31726 ;;		Interrupt level 2
 31727 ;; This function uses a non-reentrant model
 31728 ;;
 31729                           
 31730                           	psect	intcode
 31731  000008                     __pintcode:
 31732                           	opt stack 0
 31733  000008                     _INTERRUPT_InterruptManagerHigh:
 31734                           	opt stack 11
 31735                           
 31736                           ;incstack = 0
 31737  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 31738  00000A  EFDB  F0BE         	goto	int_func
 31739                           tosu	equ	0xFFF
 31740                           tosh	equ	0xFFE
 31741                           tosl	equ	0xFFD
 31742                           pclatu	equ	0xFFB
 31743                           pclath	equ	0xFFA
 31744                           tblptru	equ	0xFF8
 31745                           tblptrh	equ	0xFF7
 31746                           tblptrl	equ	0xFF6
 31747                           tablat	equ	0xFF5
 31748                           prodh	equ	0xFF4
 31749                           prodl	equ	0xFF3
 31750                           intcon	equ	0xFF2
 31751                           indf0	equ	0xFEF
 31752                           postinc0	equ	0xFEE
 31753                           fsr0h	equ	0xFEA
 31754                           fsr0l	equ	0xFE9
 31755                           wreg	equ	0xFE8
 31756                           indf1	equ	0xFE7
 31757                           postdec1	equ	0xFE5
 31758                           plusw1	equ	0xFE3
 31759                           fsr1h	equ	0xFE2
 31760                           fsr1l	equ	0xFE1
 31761                           bsr	equ	0xFE0
 31762                           indf2	equ	0xFDF
 31763                           postinc2	equ	0xFDE
 31764                           postdec2	equ	0xFDD
 31765                           plusw2	equ	0xFDB
 31766                           fsr2h	equ	0xFDA
 31767                           fsr2l	equ	0xFD9
 31768                           status	equ	0xFD8
 31769                           
 31770                           	psect	intcode_body
 31771  017DB6                     __pintcode_body:
 31772                           	opt stack 11
 31773  017DB6                     int_func:
 31774                           	opt stack 11
 31775  017DB6  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 31776  017DBA  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 31777  017DBE  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 31778  017DC2  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 31779  017DC6  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 31780  017DCA  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 31781  017DCE  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 31782  017DD2  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 31783  017DD6  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 31784  017DDA  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 31785  017DDE  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 31786  017DE2  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 31787  017DE6  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 31788  017DEA  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 31789  017DEE  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 31790  017DF2  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 31791  017DF6  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 31792  017DFA  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 31793                           
 31794                           ;interrupt_manager.c: 89: if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
 31795  017DFE  010E               	movlb	14	; () banked
 31796  017E00  B129               	btfsc	41,0,b	;volatile
 31797                           
 31798                           ; BSR set to: 14
 31799  017E02  A133               	btfss	51,0,b	;volatile
 31800  017E04  D003               	goto	i2l224
 31801                           
 31802                           ; BSR set to: 14
 31803                           ;interrupt_manager.c: 90: {
 31804                           ;interrupt_manager.c: 91: INT0_ISR();
 31805  017E06  EC11  F0CA         	call	_INT0_ISR	;wreg free
 31806                           
 31807                           ;interrupt_manager.c: 92: }
 31808  017E0A  D01B               	goto	i2l230
 31809  017E0C                     i2l224:
 31810                           
 31811                           ; BSR set to: 14
 31812                           ;interrupt_manager.c: 93: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 31813  017E0C  BF2C               	btfsc	44,7,b	;volatile
 31814                           
 31815                           ; BSR set to: 14
 31816  017E0E  AF36               	btfss	54,7,b	;volatile
 31817  017E10  D00D               	goto	i2l226
 31818                           
 31819                           ; BSR set to: 14
 31820                           ;interrupt_manager.c: 94: {
 31821                           ;interrupt_manager.c: 95: EUSART2_RxDefaultInterruptHandler();
 31822  017E12  D801               	call	i2u2712_48
 31823  017E14  D016               	goto	i2l230
 31824  017E16                     i2u2712_48:
 31825  017E16  0005               	push	
 31826  017E18  6EFA               	movwf	pclath,c
 31827  017E1A  0102               	movlb	2	; () banked
 31828  017E1C  5137               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 31829  017E1E  6EFD               	movwf	tosl,c
 31830  017E20  5138               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 31831  017E22  6EFE               	movwf	tosh,c
 31832  017E24  5139               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 31833  017E26  6EFF               	movwf	tosu,c
 31834  017E28  50FA               	movf	pclath,w,c
 31835  017E2A  0012               	return		;indir
 31836  017E2C                     i2l226:
 31837                           
 31838                           ; BSR set to: 14
 31839                           ;interrupt_manager.c: 97: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 31840  017E2C  B92E               	btfsc	46,4,b	;volatile
 31841                           
 31842                           ; BSR set to: 14
 31843  017E2E  A938               	btfss	56,4,b	;volatile
 31844  017E30  D003               	goto	i2l228
 31845                           
 31846                           ; BSR set to: 14
 31847                           ;interrupt_manager.c: 98: {
 31848                           ;interrupt_manager.c: 99: TMR5_ISR();
 31849  017E32  ECA5  F0C7         	call	_TMR5_ISR	;wreg free
 31850                           
 31851                           ;interrupt_manager.c: 100: }
 31852  017E36  D005               	goto	i2l230
 31853  017E38                     i2l228:
 31854                           
 31855                           ; BSR set to: 14
 31856                           ;interrupt_manager.c: 101: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 31857  017E38  B32A               	btfsc	42,1,b	;volatile
 31858                           
 31859                           ; BSR set to: 14
 31860  017E3A  A334               	btfss	52,1,b	;volatile
 31861  017E3C  D002               	goto	i2l230
 31862                           
 31863                           ; BSR set to: 14
 31864                           ;interrupt_manager.c: 102: {
 31865                           ;interrupt_manager.c: 103: ADCC_ThresholdISR();
 31866  017E3E  EC75  F0C8         	call	_ADCC_ThresholdISR	;wreg free
 31867  017E42                     i2l230:
 31868                           
 31869                           ;interrupt_manager.c: 105: else
 31870                           ;interrupt_manager.c: 106: {
 31871  017E42  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 31872  017E46  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 31873  017E4A  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 31874  017E4E  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 31875  017E52  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 31876  017E56  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 31877  017E5A  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 31878  017E5E  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 31879  017E62  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 31880  017E66  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 31881  017E6A  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 31882  017E6E  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 31883  017E72  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 31884  017E76  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 31885  017E7A  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 31886  017E7E  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 31887  017E82  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 31888  017E86  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 31889  017E8A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 31890  017E8C  0011               	retfie		f
 31891  017E8E                     __end_of_INTERRUPT_InterruptManagerHigh:
 31892                           	opt stack 0
 31893                           tosu	equ	0xFFF
 31894                           tosh	equ	0xFFE
 31895                           tosl	equ	0xFFD
 31896                           pclatu	equ	0xFFB
 31897                           pclath	equ	0xFFA
 31898                           tblptru	equ	0xFF8
 31899                           tblptrh	equ	0xFF7
 31900                           tblptrl	equ	0xFF6
 31901                           tablat	equ	0xFF5
 31902                           prodh	equ	0xFF4
 31903                           prodl	equ	0xFF3
 31904                           intcon	equ	0xFF2
 31905                           indf0	equ	0xFEF
 31906                           postinc0	equ	0xFEE
 31907                           fsr0h	equ	0xFEA
 31908                           fsr0l	equ	0xFE9
 31909                           wreg	equ	0xFE8
 31910                           indf1	equ	0xFE7
 31911                           postdec1	equ	0xFE5
 31912                           plusw1	equ	0xFE3
 31913                           fsr1h	equ	0xFE2
 31914                           fsr1l	equ	0xFE1
 31915                           bsr	equ	0xFE0
 31916                           indf2	equ	0xFDF
 31917                           postinc2	equ	0xFDE
 31918                           postdec2	equ	0xFDD
 31919                           plusw2	equ	0xFDB
 31920                           fsr2h	equ	0xFDA
 31921                           fsr2l	equ	0xFD9
 31922                           status	equ	0xFD8
 31923                           
 31924 ;; *************** function _TMR5_ISR *****************
 31925 ;; Defined at:
 31926 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31927 ;; Parameters:    Size  Location     Type
 31928 ;;		None
 31929 ;; Auto vars:     Size  Location     Type
 31930 ;;		None
 31931 ;; Return value:  Size  Location     Type
 31932 ;;                  1    wreg      void 
 31933 ;; Registers used:
 31934 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 31935 ;; Tracked objects:
 31936 ;;		On entry : 0/0
 31937 ;;		On exit  : 0/0
 31938 ;;		Unchanged: 0/0
 31939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31944 ;;Total ram usage:        0 bytes
 31945 ;; Hardware stack levels used:    1
 31946 ;; Hardware stack levels required when called:    2
 31947 ;; This function calls:
 31948 ;;		Absolute function
 31949 ;;		_TMR5_DefaultInterruptHandler
 31950 ;;		_TMR5_WriteTimer
 31951 ;;		_dimmingOnTimeCallback
 31952 ;; This function is called by:
 31953 ;;		_INTERRUPT_InterruptManagerHigh
 31954 ;; This function uses a non-reentrant model
 31955 ;;
 31956                           
 31957                           	psect	text90
 31958  018F4A                     __ptext90:
 31959                           	opt stack 0
 31960  018F4A                     _TMR5_ISR:
 31961                           	opt stack 16
 31962                           
 31963                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 31964                           
 31965                           ;incstack = 0
 31966  018F4A  010E               	movlb	14	; () banked
 31967  018F4C  9938               	bcf	56,4,b	;volatile
 31968                           
 31969                           ; BSR set to: 14
 31970                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 31971  018F4E  C1DB  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 31972  018F52  C1DC  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 31973  018F56  EC41  F0C9         	call	_TMR5_WriteTimer	;wreg free
 31974                           
 31975                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 31976  018F5A  0102               	movlb	2	; () banked
 31977  018F5C  512B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31978  018F5E  112C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31979  018F60  112D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31980  018F62  B4D8               	btfsc	status,2,c
 31981  018F64  0012               	return	
 31982                           
 31983                           ; BSR set to: 2
 31984                           ;tmr5.c: 172: {
 31985                           ;tmr5.c: 173: TMR5_InterruptHandler();
 31986  018F66  D801               	call	i2u2690_48
 31987  018F68  0012               	return	
 31988  018F6A                     i2u2690_48:
 31989  018F6A  0005               	push	
 31990  018F6C  6EFA               	movwf	pclath,c
 31991  018F6E  512B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31992  018F70  6EFD               	movwf	tosl,c
 31993  018F72  512C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31994  018F74  6EFE               	movwf	tosh,c
 31995  018F76  512D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31996  018F78  6EFF               	movwf	tosu,c
 31997  018F7A  50FA               	movf	pclath,w,c
 31998  018F7C  0012               	return		;indir
 31999  018F7E                     __end_of_TMR5_ISR:
 32000                           	opt stack 0
 32001                           tosu	equ	0xFFF
 32002                           tosh	equ	0xFFE
 32003                           tosl	equ	0xFFD
 32004                           pclatu	equ	0xFFB
 32005                           pclath	equ	0xFFA
 32006                           tblptru	equ	0xFF8
 32007                           tblptrh	equ	0xFF7
 32008                           tblptrl	equ	0xFF6
 32009                           tablat	equ	0xFF5
 32010                           prodh	equ	0xFF4
 32011                           prodl	equ	0xFF3
 32012                           intcon	equ	0xFF2
 32013                           indf0	equ	0xFEF
 32014                           postinc0	equ	0xFEE
 32015                           fsr0h	equ	0xFEA
 32016                           fsr0l	equ	0xFE9
 32017                           wreg	equ	0xFE8
 32018                           indf1	equ	0xFE7
 32019                           postdec1	equ	0xFE5
 32020                           plusw1	equ	0xFE3
 32021                           fsr1h	equ	0xFE2
 32022                           fsr1l	equ	0xFE1
 32023                           bsr	equ	0xFE0
 32024                           indf2	equ	0xFDF
 32025                           postinc2	equ	0xFDE
 32026                           postdec2	equ	0xFDD
 32027                           plusw2	equ	0xFDB
 32028                           fsr2h	equ	0xFDA
 32029                           fsr2l	equ	0xFD9
 32030                           status	equ	0xFD8
 32031                           
 32032 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32033 ;; Defined at:
 32034 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 32035 ;; Parameters:    Size  Location     Type
 32036 ;;		None
 32037 ;; Auto vars:     Size  Location     Type
 32038 ;;		None
 32039 ;; Return value:  Size  Location     Type
 32040 ;;                  1    wreg      void 
 32041 ;; Registers used:
 32042 ;;		None
 32043 ;; Tracked objects:
 32044 ;;		On entry : 0/0
 32045 ;;		On exit  : 0/0
 32046 ;;		Unchanged: 0/0
 32047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32052 ;;Total ram usage:        0 bytes
 32053 ;; Hardware stack levels used:    1
 32054 ;; This function calls:
 32055 ;;		Nothing
 32056 ;; This function is called by:
 32057 ;;		_TMR5_Initialize
 32058 ;;		_TMR5_ISR
 32059 ;; This function uses a non-reentrant model
 32060 ;;
 32061                           
 32062                           	psect	text91
 32063  01947A                     __ptext91:
 32064                           	opt stack 0
 32065  01947A                     _TMR5_DefaultInterruptHandler:
 32066                           	opt stack 17
 32067                           
 32068                           ;incstack = 0
 32069  01947A  0012               	return		;funcret
 32070  01947C                     __end_of_TMR5_DefaultInterruptHandler:
 32071                           	opt stack 0
 32072                           tosu	equ	0xFFF
 32073                           tosh	equ	0xFFE
 32074                           tosl	equ	0xFFD
 32075                           pclatu	equ	0xFFB
 32076                           pclath	equ	0xFFA
 32077                           tblptru	equ	0xFF8
 32078                           tblptrh	equ	0xFF7
 32079                           tblptrl	equ	0xFF6
 32080                           tablat	equ	0xFF5
 32081                           prodh	equ	0xFF4
 32082                           prodl	equ	0xFF3
 32083                           intcon	equ	0xFF2
 32084                           indf0	equ	0xFEF
 32085                           postinc0	equ	0xFEE
 32086                           fsr0h	equ	0xFEA
 32087                           fsr0l	equ	0xFE9
 32088                           wreg	equ	0xFE8
 32089                           indf1	equ	0xFE7
 32090                           postdec1	equ	0xFE5
 32091                           plusw1	equ	0xFE3
 32092                           fsr1h	equ	0xFE2
 32093                           fsr1l	equ	0xFE1
 32094                           bsr	equ	0xFE0
 32095                           indf2	equ	0xFDF
 32096                           postinc2	equ	0xFDE
 32097                           postdec2	equ	0xFDD
 32098                           plusw2	equ	0xFDB
 32099                           fsr2h	equ	0xFDA
 32100                           fsr2l	equ	0xFD9
 32101                           status	equ	0xFD8
 32102                           
 32103 ;; *************** function _dimmingOnTimeCallback *****************
 32104 ;; Defined at:
 32105 ;;		line 454 in file "main.c"
 32106 ;; Parameters:    Size  Location     Type
 32107 ;;		None
 32108 ;; Auto vars:     Size  Location     Type
 32109 ;;		None
 32110 ;; Return value:  Size  Location     Type
 32111 ;;                  1    wreg      void 
 32112 ;; Registers used:
 32113 ;;		cstack
 32114 ;; Tracked objects:
 32115 ;;		On entry : 0/0
 32116 ;;		On exit  : 0/0
 32117 ;;		Unchanged: 0/0
 32118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32123 ;;Total ram usage:        0 bytes
 32124 ;; Hardware stack levels used:    1
 32125 ;; Hardware stack levels required when called:    1
 32126 ;; This function calls:
 32127 ;;		i2_TMR5_StopTimer
 32128 ;; This function is called by:
 32129 ;;		_main
 32130 ;;		_TMR5_ISR
 32131 ;; This function uses a non-reentrant model
 32132 ;;
 32133                           
 32134                           	psect	text92
 32135  01940A                     __ptext92:
 32136                           	opt stack 0
 32137  01940A                     _dimmingOnTimeCallback:
 32138                           	opt stack 16
 32139                           
 32140                           ;main.c: 457: LATGbits.LATG1 = 1;
 32141                           
 32142                           ;incstack = 0
 32143  01940A  827F               	bsf	3967,1,c	;volatile
 32144                           
 32145                           ;main.c: 460: TMR5_StopTimer();
 32146  01940C  EC35  F0CA         	call	i2_TMR5_StopTimer	;wreg free
 32147                           
 32148                           ;main.c: 463: PIE5bits.TMR5IE = 0;
 32149  019410  010E               	movlb	14	; () banked
 32150  019412  992E               	bcf	46,4,b	;volatile
 32151                           
 32152                           ; BSR set to: 14
 32153  019414  0012               	return		;funcret
 32154  019416                     __end_of_dimmingOnTimeCallback:
 32155                           	opt stack 0
 32156                           tosu	equ	0xFFF
 32157                           tosh	equ	0xFFE
 32158                           tosl	equ	0xFFD
 32159                           pclatu	equ	0xFFB
 32160                           pclath	equ	0xFFA
 32161                           tblptru	equ	0xFF8
 32162                           tblptrh	equ	0xFF7
 32163                           tblptrl	equ	0xFF6
 32164                           tablat	equ	0xFF5
 32165                           prodh	equ	0xFF4
 32166                           prodl	equ	0xFF3
 32167                           intcon	equ	0xFF2
 32168                           indf0	equ	0xFEF
 32169                           postinc0	equ	0xFEE
 32170                           fsr0h	equ	0xFEA
 32171                           fsr0l	equ	0xFE9
 32172                           wreg	equ	0xFE8
 32173                           indf1	equ	0xFE7
 32174                           postdec1	equ	0xFE5
 32175                           plusw1	equ	0xFE3
 32176                           fsr1h	equ	0xFE2
 32177                           fsr1l	equ	0xFE1
 32178                           bsr	equ	0xFE0
 32179                           indf2	equ	0xFDF
 32180                           postinc2	equ	0xFDE
 32181                           postdec2	equ	0xFDD
 32182                           plusw2	equ	0xFDB
 32183                           fsr2h	equ	0xFDA
 32184                           fsr2l	equ	0xFD9
 32185                           status	equ	0xFD8
 32186                           
 32187 ;; *************** function i2_TMR5_StopTimer *****************
 32188 ;; Defined at:
 32189 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 32190 ;; Parameters:    Size  Location     Type
 32191 ;;		None
 32192 ;; Auto vars:     Size  Location     Type
 32193 ;;		None
 32194 ;; Return value:  Size  Location     Type
 32195 ;;                  1    wreg      void 
 32196 ;; Registers used:
 32197 ;;		None
 32198 ;; Tracked objects:
 32199 ;;		On entry : 0/0
 32200 ;;		On exit  : 0/0
 32201 ;;		Unchanged: 0/0
 32202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32207 ;;Total ram usage:        0 bytes
 32208 ;; Hardware stack levels used:    1
 32209 ;; This function calls:
 32210 ;;		Nothing
 32211 ;; This function is called by:
 32212 ;;		_dimmingOnTimeCallback
 32213 ;; This function uses a non-reentrant model
 32214 ;;
 32215                           
 32216                           	psect	text93
 32217  01946A                     __ptext93:
 32218                           	opt stack 0
 32219  01946A                     i2_TMR5_StopTimer:
 32220                           	opt stack 16
 32221                           
 32222                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 32223                           
 32224                           ; BSR set to: 14
 32225                           ;incstack = 0
 32226  01946A  90C3               	bcf	4035,0,c	;volatile
 32227  01946C  0012               	return		;funcret
 32228  01946E                     __end_ofi2_TMR5_StopTimer:
 32229                           	opt stack 0
 32230                           tosu	equ	0xFFF
 32231                           tosh	equ	0xFFE
 32232                           tosl	equ	0xFFD
 32233                           pclatu	equ	0xFFB
 32234                           pclath	equ	0xFFA
 32235                           tblptru	equ	0xFF8
 32236                           tblptrh	equ	0xFF7
 32237                           tblptrl	equ	0xFF6
 32238                           tablat	equ	0xFF5
 32239                           prodh	equ	0xFF4
 32240                           prodl	equ	0xFF3
 32241                           intcon	equ	0xFF2
 32242                           indf0	equ	0xFEF
 32243                           postinc0	equ	0xFEE
 32244                           fsr0h	equ	0xFEA
 32245                           fsr0l	equ	0xFE9
 32246                           wreg	equ	0xFE8
 32247                           indf1	equ	0xFE7
 32248                           postdec1	equ	0xFE5
 32249                           plusw1	equ	0xFE3
 32250                           fsr1h	equ	0xFE2
 32251                           fsr1l	equ	0xFE1
 32252                           bsr	equ	0xFE0
 32253                           indf2	equ	0xFDF
 32254                           postinc2	equ	0xFDE
 32255                           postdec2	equ	0xFDD
 32256                           plusw2	equ	0xFDB
 32257                           fsr2h	equ	0xFDA
 32258                           fsr2l	equ	0xFD9
 32259                           status	equ	0xFD8
 32260                           
 32261 ;; *************** function _INT0_ISR *****************
 32262 ;; Defined at:
 32263 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 32264 ;; Parameters:    Size  Location     Type
 32265 ;;		None
 32266 ;; Auto vars:     Size  Location     Type
 32267 ;;		None
 32268 ;; Return value:  Size  Location     Type
 32269 ;;                  1    wreg      void 
 32270 ;; Registers used:
 32271 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32272 ;; Tracked objects:
 32273 ;;		On entry : 0/0
 32274 ;;		On exit  : 0/0
 32275 ;;		Unchanged: 0/0
 32276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32281 ;;Total ram usage:        0 bytes
 32282 ;; Hardware stack levels used:    1
 32283 ;; Hardware stack levels required when called:    3
 32284 ;; This function calls:
 32285 ;;		_INT0_CallBack
 32286 ;; This function is called by:
 32287 ;;		_INTERRUPT_InterruptManagerHigh
 32288 ;; This function uses a non-reentrant model
 32289 ;;
 32290                           
 32291                           	psect	text94
 32292  019422                     __ptext94:
 32293                           	opt stack 0
 32294  019422                     _INT0_ISR:
 32295                           	opt stack 15
 32296                           
 32297                           ;ext_int.c: 34: (PIR0bits.INT0IF = 0);
 32298                           
 32299                           ;incstack = 0
 32300  019422  010E               	movlb	14	; () banked
 32301  019424  9133               	bcf	51,0,b	;volatile
 32302                           
 32303                           ; BSR set to: 14
 32304                           ;ext_int.c: 37: INT0_CallBack();
 32305  019426  ECD4  F0C8         	call	_INT0_CallBack	;wreg free
 32306  01942A  0012               	return		;funcret
 32307  01942C                     __end_of_INT0_ISR:
 32308                           	opt stack 0
 32309                           tosu	equ	0xFFF
 32310                           tosh	equ	0xFFE
 32311                           tosl	equ	0xFFD
 32312                           pclatu	equ	0xFFB
 32313                           pclath	equ	0xFFA
 32314                           tblptru	equ	0xFF8
 32315                           tblptrh	equ	0xFF7
 32316                           tblptrl	equ	0xFF6
 32317                           tablat	equ	0xFF5
 32318                           prodh	equ	0xFF4
 32319                           prodl	equ	0xFF3
 32320                           intcon	equ	0xFF2
 32321                           indf0	equ	0xFEF
 32322                           postinc0	equ	0xFEE
 32323                           fsr0h	equ	0xFEA
 32324                           fsr0l	equ	0xFE9
 32325                           wreg	equ	0xFE8
 32326                           indf1	equ	0xFE7
 32327                           postdec1	equ	0xFE5
 32328                           plusw1	equ	0xFE3
 32329                           fsr1h	equ	0xFE2
 32330                           fsr1l	equ	0xFE1
 32331                           bsr	equ	0xFE0
 32332                           indf2	equ	0xFDF
 32333                           postinc2	equ	0xFDE
 32334                           postdec2	equ	0xFDD
 32335                           plusw2	equ	0xFDB
 32336                           fsr2h	equ	0xFDA
 32337                           fsr2l	equ	0xFD9
 32338                           status	equ	0xFD8
 32339                           
 32340 ;; *************** function _INT0_CallBack *****************
 32341 ;; Defined at:
 32342 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 32343 ;; Parameters:    Size  Location     Type
 32344 ;;		None
 32345 ;; Auto vars:     Size  Location     Type
 32346 ;;		None
 32347 ;; Return value:  Size  Location     Type
 32348 ;;                  1    wreg      void 
 32349 ;; Registers used:
 32350 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32351 ;; Tracked objects:
 32352 ;;		On entry : 0/0
 32353 ;;		On exit  : 0/0
 32354 ;;		Unchanged: 0/0
 32355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32360 ;;Total ram usage:        0 bytes
 32361 ;; Hardware stack levels used:    1
 32362 ;; Hardware stack levels required when called:    2
 32363 ;; This function calls:
 32364 ;;		Absolute function
 32365 ;;		_INT0_DefaultInterruptHandler
 32366 ;;		_dimmingOffTimeCallback
 32367 ;; This function is called by:
 32368 ;;		_INT0_ISR
 32369 ;; This function uses a non-reentrant model
 32370 ;;
 32371                           
 32372                           	psect	text95
 32373  0191A8                     __ptext95:
 32374                           	opt stack 0
 32375  0191A8                     _INT0_CallBack:
 32376                           	opt stack 15
 32377                           
 32378                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 32379                           
 32380                           ;incstack = 0
 32381  0191A8  0102               	movlb	2	; () banked
 32382  0191AA  5128               	movf	_INT0_InterruptHandler& (0+255),w,b
 32383  0191AC  1129               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32384  0191AE  112A               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32385  0191B0  B4D8               	btfsc	status,2,c
 32386  0191B2  0012               	return	
 32387                           
 32388                           ; BSR set to: 2
 32389                           ;ext_int.c: 45: {
 32390                           ;ext_int.c: 46: INT0_InterruptHandler();
 32391  0191B4  D801               	call	i2u2688_48
 32392  0191B6  0012               	return	
 32393  0191B8                     i2u2688_48:
 32394  0191B8  0005               	push	
 32395  0191BA  6EFA               	movwf	pclath,c
 32396  0191BC  5128               	movf	_INT0_InterruptHandler& (0+255),w,b
 32397  0191BE  6EFD               	movwf	tosl,c
 32398  0191C0  5129               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32399  0191C2  6EFE               	movwf	tosh,c
 32400  0191C4  512A               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32401  0191C6  6EFF               	movwf	tosu,c
 32402  0191C8  50FA               	movf	pclath,w,c
 32403  0191CA  0012               	return		;indir
 32404  0191CC                     __end_of_INT0_CallBack:
 32405                           	opt stack 0
 32406                           tosu	equ	0xFFF
 32407                           tosh	equ	0xFFE
 32408                           tosl	equ	0xFFD
 32409                           pclatu	equ	0xFFB
 32410                           pclath	equ	0xFFA
 32411                           tblptru	equ	0xFF8
 32412                           tblptrh	equ	0xFF7
 32413                           tblptrl	equ	0xFF6
 32414                           tablat	equ	0xFF5
 32415                           prodh	equ	0xFF4
 32416                           prodl	equ	0xFF3
 32417                           intcon	equ	0xFF2
 32418                           indf0	equ	0xFEF
 32419                           postinc0	equ	0xFEE
 32420                           fsr0h	equ	0xFEA
 32421                           fsr0l	equ	0xFE9
 32422                           wreg	equ	0xFE8
 32423                           indf1	equ	0xFE7
 32424                           postdec1	equ	0xFE5
 32425                           plusw1	equ	0xFE3
 32426                           fsr1h	equ	0xFE2
 32427                           fsr1l	equ	0xFE1
 32428                           bsr	equ	0xFE0
 32429                           indf2	equ	0xFDF
 32430                           postinc2	equ	0xFDE
 32431                           postdec2	equ	0xFDD
 32432                           plusw2	equ	0xFDB
 32433                           fsr2h	equ	0xFDA
 32434                           fsr2l	equ	0xFD9
 32435                           status	equ	0xFD8
 32436                           
 32437 ;; *************** function _INT0_DefaultInterruptHandler *****************
 32438 ;; Defined at:
 32439 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 32440 ;; Parameters:    Size  Location     Type
 32441 ;;		None
 32442 ;; Auto vars:     Size  Location     Type
 32443 ;;		None
 32444 ;; Return value:  Size  Location     Type
 32445 ;;                  1    wreg      void 
 32446 ;; Registers used:
 32447 ;;		None
 32448 ;; Tracked objects:
 32449 ;;		On entry : 0/0
 32450 ;;		On exit  : 0/0
 32451 ;;		Unchanged: 0/0
 32452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32457 ;;Total ram usage:        0 bytes
 32458 ;; Hardware stack levels used:    1
 32459 ;; This function calls:
 32460 ;;		Nothing
 32461 ;; This function is called by:
 32462 ;;		_EXT_INT_Initialize
 32463 ;;		_INT0_CallBack
 32464 ;; This function uses a non-reentrant model
 32465 ;;
 32466                           
 32467                           	psect	text96
 32468  01947C                     __ptext96:
 32469                           	opt stack 0
 32470  01947C                     _INT0_DefaultInterruptHandler:
 32471                           	opt stack 16
 32472                           
 32473                           ;incstack = 0
 32474  01947C  0012               	return		;funcret
 32475  01947E                     __end_of_INT0_DefaultInterruptHandler:
 32476                           	opt stack 0
 32477                           tosu	equ	0xFFF
 32478                           tosh	equ	0xFFE
 32479                           tosl	equ	0xFFD
 32480                           pclatu	equ	0xFFB
 32481                           pclath	equ	0xFFA
 32482                           tblptru	equ	0xFF8
 32483                           tblptrh	equ	0xFF7
 32484                           tblptrl	equ	0xFF6
 32485                           tablat	equ	0xFF5
 32486                           prodh	equ	0xFF4
 32487                           prodl	equ	0xFF3
 32488                           intcon	equ	0xFF2
 32489                           indf0	equ	0xFEF
 32490                           postinc0	equ	0xFEE
 32491                           fsr0h	equ	0xFEA
 32492                           fsr0l	equ	0xFE9
 32493                           wreg	equ	0xFE8
 32494                           indf1	equ	0xFE7
 32495                           postdec1	equ	0xFE5
 32496                           plusw1	equ	0xFE3
 32497                           fsr1h	equ	0xFE2
 32498                           fsr1l	equ	0xFE1
 32499                           bsr	equ	0xFE0
 32500                           indf2	equ	0xFDF
 32501                           postinc2	equ	0xFDE
 32502                           postdec2	equ	0xFDD
 32503                           plusw2	equ	0xFDB
 32504                           fsr2h	equ	0xFDA
 32505                           fsr2l	equ	0xFD9
 32506                           status	equ	0xFD8
 32507                           
 32508 ;; *************** function _dimmingOffTimeCallback *****************
 32509 ;; Defined at:
 32510 ;;		line 439 in file "main.c"
 32511 ;; Parameters:    Size  Location     Type
 32512 ;;		None
 32513 ;; Auto vars:     Size  Location     Type
 32514 ;;		None
 32515 ;; Return value:  Size  Location     Type
 32516 ;;                  1    wreg      void 
 32517 ;; Registers used:
 32518 ;;		wreg, status,2, cstack
 32519 ;; Tracked objects:
 32520 ;;		On entry : 0/0
 32521 ;;		On exit  : 0/0
 32522 ;;		Unchanged: 0/0
 32523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32528 ;;Total ram usage:        0 bytes
 32529 ;; Hardware stack levels used:    1
 32530 ;; Hardware stack levels required when called:    1
 32531 ;; This function calls:
 32532 ;;		_TMR5_StartTimer
 32533 ;;		_TMR5_WriteTimer
 32534 ;; This function is called by:
 32535 ;;		_main
 32536 ;;		_INT0_CallBack
 32537 ;; This function uses a non-reentrant model
 32538 ;;
 32539                           
 32540                           	psect	text97
 32541  0192D2                     __ptext97:
 32542                           	opt stack 0
 32543  0192D2                     _dimmingOffTimeCallback:
 32544                           	opt stack 15
 32545                           
 32546                           ;main.c: 442: LATGbits.LATG1 = 0;
 32547                           
 32548                           ;incstack = 0
 32549  0192D2  927F               	bcf	3967,1,c	;volatile
 32550                           
 32551                           ;main.c: 445: TMR5_WriteTimer(dimming_period);
 32552  0192D4  C0F0  F001         	movff	_dimming_period,TMR5_WriteTimer@timerVal	;volatile
 32553  0192D8  C0F1  F002         	movff	_dimming_period+1,TMR5_WriteTimer@timerVal+1	;volatile
 32554  0192DC  EC41  F0C9         	call	_TMR5_WriteTimer	;wreg free
 32555                           
 32556                           ;main.c: 446: TMR5_StartTimer();
 32557  0192E0  EC37  F0CA         	call	_TMR5_StartTimer	;wreg free
 32558                           
 32559                           ;main.c: 449: PIE5bits.TMR5IE = 1;
 32560  0192E4  010E               	movlb	14	; () banked
 32561  0192E6  892E               	bsf	46,4,b	;volatile
 32562                           
 32563                           ; BSR set to: 14
 32564  0192E8  0012               	return		;funcret
 32565  0192EA                     __end_of_dimmingOffTimeCallback:
 32566                           	opt stack 0
 32567                           tosu	equ	0xFFF
 32568                           tosh	equ	0xFFE
 32569                           tosl	equ	0xFFD
 32570                           pclatu	equ	0xFFB
 32571                           pclath	equ	0xFFA
 32572                           tblptru	equ	0xFF8
 32573                           tblptrh	equ	0xFF7
 32574                           tblptrl	equ	0xFF6
 32575                           tablat	equ	0xFF5
 32576                           prodh	equ	0xFF4
 32577                           prodl	equ	0xFF3
 32578                           intcon	equ	0xFF2
 32579                           indf0	equ	0xFEF
 32580                           postinc0	equ	0xFEE
 32581                           fsr0h	equ	0xFEA
 32582                           fsr0l	equ	0xFE9
 32583                           wreg	equ	0xFE8
 32584                           indf1	equ	0xFE7
 32585                           postdec1	equ	0xFE5
 32586                           plusw1	equ	0xFE3
 32587                           fsr1h	equ	0xFE2
 32588                           fsr1l	equ	0xFE1
 32589                           bsr	equ	0xFE0
 32590                           indf2	equ	0xFDF
 32591                           postinc2	equ	0xFDE
 32592                           postdec2	equ	0xFDD
 32593                           plusw2	equ	0xFDB
 32594                           fsr2h	equ	0xFDA
 32595                           fsr2l	equ	0xFD9
 32596                           status	equ	0xFD8
 32597                           
 32598 ;; *************** function _TMR5_WriteTimer *****************
 32599 ;; Defined at:
 32600 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 32601 ;; Parameters:    Size  Location     Type
 32602 ;;  timerVal        2    0[COMRAM] unsigned int 
 32603 ;; Auto vars:     Size  Location     Type
 32604 ;;		None
 32605 ;; Return value:  Size  Location     Type
 32606 ;;                  1    wreg      void 
 32607 ;; Registers used:
 32608 ;;		wreg, status,2
 32609 ;; Tracked objects:
 32610 ;;		On entry : 0/0
 32611 ;;		On exit  : 0/0
 32612 ;;		Unchanged: 0/0
 32613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32618 ;;Total ram usage:        2 bytes
 32619 ;; Hardware stack levels used:    1
 32620 ;; This function calls:
 32621 ;;		Nothing
 32622 ;; This function is called by:
 32623 ;;		_TMR5_ISR
 32624 ;;		_dimmingOffTimeCallback
 32625 ;;		_TMR5_Reload
 32626 ;; This function uses a non-reentrant model
 32627 ;;
 32628                           
 32629                           	psect	text98
 32630  019282                     __ptext98:
 32631                           	opt stack 0
 32632  019282                     _TMR5_WriteTimer:
 32633                           	opt stack 17
 32634                           
 32635                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 32636                           
 32637                           ; BSR set to: 14
 32638                           ;incstack = 0
 32639  019282  A4C3               	btfss	4035,2,c	;volatile
 32640  019284  D007               	goto	i2l728
 32641                           
 32642                           ;tmr5.c: 130: {
 32643                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 32644  019286  90C3               	bcf	4035,0,c	;volatile
 32645                           
 32646                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 32647  019288  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 32648  01928A  6EC2               	movwf	4034,c	;volatile
 32649                           
 32650                           ;tmr5.c: 136: TMR5L = timerVal;
 32651  01928C  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 32652                           
 32653                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 32654  019290  80C3               	bsf	4035,0,c	;volatile
 32655                           
 32656                           ;tmr5.c: 140: }
 32657  019292  0012               	return	
 32658  019294                     i2l728:
 32659                           
 32660                           ;tmr5.c: 141: else
 32661                           ;tmr5.c: 142: {
 32662                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 32663  019294  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 32664  019296  6EC2               	movwf	4034,c	;volatile
 32665                           
 32666                           ;tmr5.c: 145: TMR5L = timerVal;
 32667  019298  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 32668  01929C  0012               	return	
 32669  01929E                     __end_of_TMR5_WriteTimer:
 32670                           	opt stack 0
 32671                           tosu	equ	0xFFF
 32672                           tosh	equ	0xFFE
 32673                           tosl	equ	0xFFD
 32674                           pclatu	equ	0xFFB
 32675                           pclath	equ	0xFFA
 32676                           tblptru	equ	0xFF8
 32677                           tblptrh	equ	0xFF7
 32678                           tblptrl	equ	0xFF6
 32679                           tablat	equ	0xFF5
 32680                           prodh	equ	0xFF4
 32681                           prodl	equ	0xFF3
 32682                           intcon	equ	0xFF2
 32683                           indf0	equ	0xFEF
 32684                           postinc0	equ	0xFEE
 32685                           fsr0h	equ	0xFEA
 32686                           fsr0l	equ	0xFE9
 32687                           wreg	equ	0xFE8
 32688                           indf1	equ	0xFE7
 32689                           postdec1	equ	0xFE5
 32690                           plusw1	equ	0xFE3
 32691                           fsr1h	equ	0xFE2
 32692                           fsr1l	equ	0xFE1
 32693                           bsr	equ	0xFE0
 32694                           indf2	equ	0xFDF
 32695                           postinc2	equ	0xFDE
 32696                           postdec2	equ	0xFDD
 32697                           plusw2	equ	0xFDB
 32698                           fsr2h	equ	0xFDA
 32699                           fsr2l	equ	0xFD9
 32700                           status	equ	0xFD8
 32701                           
 32702 ;; *************** function _TMR5_StartTimer *****************
 32703 ;; Defined at:
 32704 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 32705 ;; Parameters:    Size  Location     Type
 32706 ;;		None
 32707 ;; Auto vars:     Size  Location     Type
 32708 ;;		None
 32709 ;; Return value:  Size  Location     Type
 32710 ;;                  1    wreg      void 
 32711 ;; Registers used:
 32712 ;;		None
 32713 ;; Tracked objects:
 32714 ;;		On entry : 0/0
 32715 ;;		On exit  : 0/0
 32716 ;;		Unchanged: 0/0
 32717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32722 ;;Total ram usage:        0 bytes
 32723 ;; Hardware stack levels used:    1
 32724 ;; This function calls:
 32725 ;;		Nothing
 32726 ;; This function is called by:
 32727 ;;		_dimmingOffTimeCallback
 32728 ;; This function uses a non-reentrant model
 32729 ;;
 32730                           
 32731                           	psect	text99
 32732  01946E                     __ptext99:
 32733                           	opt stack 0
 32734  01946E                     _TMR5_StartTimer:
 32735                           	opt stack 15
 32736                           
 32737                           ;tmr5.c: 102: T5CONbits.TMR5ON = 1;
 32738                           
 32739                           ;incstack = 0
 32740  01946E  80C3               	bsf	4035,0,c	;volatile
 32741  019470  0012               	return		;funcret
 32742  019472                     __end_of_TMR5_StartTimer:
 32743                           	opt stack 0
 32744                           tosu	equ	0xFFF
 32745                           tosh	equ	0xFFE
 32746                           tosl	equ	0xFFD
 32747                           pclatu	equ	0xFFB
 32748                           pclath	equ	0xFFA
 32749                           tblptru	equ	0xFF8
 32750                           tblptrh	equ	0xFF7
 32751                           tblptrl	equ	0xFF6
 32752                           tablat	equ	0xFF5
 32753                           prodh	equ	0xFF4
 32754                           prodl	equ	0xFF3
 32755                           intcon	equ	0xFF2
 32756                           indf0	equ	0xFEF
 32757                           postinc0	equ	0xFEE
 32758                           fsr0h	equ	0xFEA
 32759                           fsr0l	equ	0xFE9
 32760                           wreg	equ	0xFE8
 32761                           indf1	equ	0xFE7
 32762                           postdec1	equ	0xFE5
 32763                           plusw1	equ	0xFE3
 32764                           fsr1h	equ	0xFE2
 32765                           fsr1l	equ	0xFE1
 32766                           bsr	equ	0xFE0
 32767                           indf2	equ	0xFDF
 32768                           postinc2	equ	0xFDE
 32769                           postdec2	equ	0xFDD
 32770                           plusw2	equ	0xFDB
 32771                           fsr2h	equ	0xFDA
 32772                           fsr2l	equ	0xFD9
 32773                           status	equ	0xFD8
 32774                           
 32775 ;; *************** function _EUSART2_Receive_ISR *****************
 32776 ;; Defined at:
 32777 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 32778 ;; Parameters:    Size  Location     Type
 32779 ;;		None
 32780 ;; Auto vars:     Size  Location     Type
 32781 ;;		None
 32782 ;; Return value:  Size  Location     Type
 32783 ;;                  1    wreg      void 
 32784 ;; Registers used:
 32785 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32786 ;; Tracked objects:
 32787 ;;		On entry : 0/0
 32788 ;;		On exit  : 0/0
 32789 ;;		Unchanged: 0/0
 32790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32795 ;;Total ram usage:        0 bytes
 32796 ;; Hardware stack levels used:    1
 32797 ;; Hardware stack levels required when called:    3
 32798 ;; This function calls:
 32799 ;;		i2_printf
 32800 ;; This function is called by:
 32801 ;;		_EUSART2_Initialize
 32802 ;;		_INTERRUPT_InterruptManagerHigh
 32803 ;; This function uses a non-reentrant model
 32804 ;;
 32805                           
 32806                           	psect	text100
 32807  017F4A                     __ptext100:
 32808                           	opt stack 0
 32809  017F4A                     _EUSART2_Receive_ISR:
 32810                           	opt stack 15
 32811                           
 32812                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 32813                           
 32814                           ;incstack = 0
 32815  017F4A  010E               	movlb	14	; () banked
 32816  017F4C  A3F5               	btfss	245,1,b	;volatile
 32817  017F4E  D003               	goto	i2l423
 32818                           
 32819                           ; BSR set to: 14
 32820                           ;eusart2.c: 221: {
 32821                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 32822  017F50  99F5               	bcf	245,4,b	;volatile
 32823                           
 32824                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 32825  017F52  89F5               	bsf	245,4,b	;volatile
 32826                           
 32827                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 32828  017F54  827E               	bsf	3966,1,c	;volatile
 32829  017F56                     i2l423:
 32830                           
 32831                           ; BSR set to: 14
 32832                           ;eusart2.c: 227: }
 32833                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 32834  017F56  927E               	bcf	3966,1,c	;volatile
 32835                           
 32836                           ; BSR set to: 14
 32837                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 32838  017F58  0100               	movlb	0	; () banked
 32839  017F5A  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 32840  017F5C  0D01               	mullw	1
 32841  017F5E  0E80               	movlw	low _eusart2RxBuffer
 32842  017F60  24F3               	addwf	prodl,w,c
 32843  017F62  6ED9               	movwf	fsr2l,c
 32844  017F64  0E03               	movlw	high _eusart2RxBuffer
 32845  017F66  20F4               	addwfc	prodh,w,c
 32846  017F68  6EDA               	movwf	fsr2h,c
 32847  017F6A  CEF1 FFDF          	movff	3825,indf2	;volatile
 32848                           
 32849                           ; BSR set to: 0
 32850  017F6E  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 32851                           
 32852                           ; BSR set to: 0
 32853                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 32854  017F70  0E3F               	movlw	63
 32855  017F72  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 32856  017F74  D002               	goto	i2l424
 32857                           
 32858                           ; BSR set to: 0
 32859                           ;eusart2.c: 234: {
 32860                           ;eusart2.c: 235: eusart2RxHead = 0;
 32861  017F76  0E00               	movlw	0
 32862  017F78  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 32863  017F7A                     i2l424:
 32864                           
 32865                           ; BSR set to: 0
 32866                           ;eusart2.c: 236: }
 32867                           ;eusart2.c: 237: eusart2RxCount++;
 32868                           
 32869                           ; BSR set to: 0
 32870  017F7A  0101               	movlb	1	; () banked
 32871  017F7C  2BDF               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 32872                           
 32873                           ; BSR set to: 1
 32874                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 32875  017F7E  0E0A               	movlw	10
 32876  017F80  010E               	movlb	14	; () banked
 32877  017F82  19F1               	xorwf	241,w,b	;volatile
 32878  017F84  B4D8               	btfsc	status,2,c
 32879  017F86  D004               	goto	i2u1941_40
 32880                           
 32881                           ; BSR set to: 14
 32882  017F88  0E0D               	movlw	13
 32883  017F8A  19F1               	xorwf	241,w,b	;volatile
 32884  017F8C  A4D8               	btfss	status,2,c
 32885  017F8E  D006               	goto	i2l425
 32886  017F90                     i2u1941_40:
 32887                           
 32888                           ; BSR set to: 14
 32889                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 32890  017F90  0100               	movlb	0	; () banked
 32891  017F92  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 32892                           
 32893                           ; BSR set to: 0
 32894                           ;eusart2.c: 248: RC2REG = 0;
 32895  017F94  0E00               	movlw	0
 32896  017F96  010E               	movlb	14	; () banked
 32897  017F98  6FF1               	movwf	241,b	;volatile
 32898                           
 32899                           ;eusart2.c: 250: }
 32900  017F9A  D002               	goto	i2l428
 32901  017F9C                     i2l425:
 32902                           
 32903                           ; BSR set to: 14
 32904                           ;eusart2.c: 252: else {
 32905                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 32906  017F9C  0100               	movlb	0	; () banked
 32907  017F9E  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 32908  017FA0                     i2l428:
 32909                           
 32910                           ;eusart2.c: 256: }
 32911                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 32912                           
 32913                           ; BSR set to: 0
 32914  017FA0  0E08               	movlw	8
 32915  017FA2  010E               	movlb	14	; () banked
 32916  017FA4  19F1               	xorwf	241,w,b	;volatile
 32917  017FA6  A4D8               	btfss	status,2,c
 32918  017FA8  0012               	return	
 32919                           
 32920                           ; BSR set to: 14
 32921                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 32922  017FAA  0100               	movlb	0	; () banked
 32923  017FAC  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 32924  017FAE  0D01               	mullw	1
 32925  017FB0  0E80               	movlw	low _eusart2RxBuffer
 32926  017FB2  24F3               	addwf	prodl,w,c
 32927  017FB4  6ED9               	movwf	fsr2l,c
 32928  017FB6  0E03               	movlw	high _eusart2RxBuffer
 32929  017FB8  20F4               	addwfc	prodh,w,c
 32930  017FBA  6EDA               	movwf	fsr2h,c
 32931  017FBC  0E00               	movlw	0
 32932  017FBE  6EDF               	movwf	indf2,c
 32933                           
 32934                           ; BSR set to: 0
 32935                           ;eusart2.c: 262: eusart2RxHead--;
 32936  017FC0  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 32937                           
 32938                           ; BSR set to: 0
 32939                           ;eusart2.c: 265: printf("\033[K");
 32940  017FC2  0EC5               	movlw	low STR_1
 32941  017FC4  6F88               	movwf	i2printf@f& (0+255),b
 32942  017FC6  0EFF               	movlw	high STR_1
 32943  017FC8  6F89               	movwf	(i2printf@f+1)& (0+255),b
 32944  017FCA  ECB6  F090         	call	i2_printf	;wreg free
 32945                           
 32946                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 32947  017FCE  0101               	movlb	1	; () banked
 32948  017FD0  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 32949  017FD2  0100               	movlb	0	; () banked
 32950  017FD4  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 32951  017FD6  B4D8               	btfsc	status,2,c
 32952  017FD8  D00B               	goto	i2l430
 32953                           
 32954                           ; BSR set to: 0
 32955                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 32956  017FDA  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 32957  017FDC  0D01               	mullw	1
 32958  017FDE  0E80               	movlw	low _eusart2RxBuffer
 32959  017FE0  24F3               	addwf	prodl,w,c
 32960  017FE2  6ED9               	movwf	fsr2l,c
 32961  017FE4  0E03               	movlw	high _eusart2RxBuffer
 32962  017FE6  20F4               	addwfc	prodh,w,c
 32963  017FE8  6EDA               	movwf	fsr2h,c
 32964  017FEA  0E00               	movlw	0
 32965  017FEC  6EDF               	movwf	indf2,c
 32966                           
 32967                           ; BSR set to: 0
 32968                           ;eusart2.c: 270: eusart2RxHead--;
 32969  017FEE  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 32970  017FF0                     i2l430:
 32971                           
 32972                           ; BSR set to: 0
 32973                           ;eusart2.c: 272: }
 32974                           ;eusart2.c: 274: RC2REG = 0;
 32975                           
 32976                           ; BSR set to: 0
 32977  017FF0  0E00               	movlw	0
 32978  017FF2  010E               	movlb	14	; () banked
 32979  017FF4  6FF1               	movwf	241,b	;volatile
 32980  017FF6  0012               	return	
 32981  017FF8                     __end_of_EUSART2_Receive_ISR:
 32982                           	opt stack 0
 32983                           tosu	equ	0xFFF
 32984                           tosh	equ	0xFFE
 32985                           tosl	equ	0xFFD
 32986                           pclatu	equ	0xFFB
 32987                           pclath	equ	0xFFA
 32988                           tblptru	equ	0xFF8
 32989                           tblptrh	equ	0xFF7
 32990                           tblptrl	equ	0xFF6
 32991                           tablat	equ	0xFF5
 32992                           prodh	equ	0xFF4
 32993                           prodl	equ	0xFF3
 32994                           intcon	equ	0xFF2
 32995                           indf0	equ	0xFEF
 32996                           postinc0	equ	0xFEE
 32997                           fsr0h	equ	0xFEA
 32998                           fsr0l	equ	0xFE9
 32999                           wreg	equ	0xFE8
 33000                           indf1	equ	0xFE7
 33001                           postdec1	equ	0xFE5
 33002                           plusw1	equ	0xFE3
 33003                           fsr1h	equ	0xFE2
 33004                           fsr1l	equ	0xFE1
 33005                           bsr	equ	0xFE0
 33006                           indf2	equ	0xFDF
 33007                           postinc2	equ	0xFDE
 33008                           postdec2	equ	0xFDD
 33009                           plusw2	equ	0xFDB
 33010                           fsr2h	equ	0xFDA
 33011                           fsr2l	equ	0xFD9
 33012                           status	equ	0xFD8
 33013                           
 33014 ;; *************** function i2_printf *****************
 33015 ;; Defined at:
 33016 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 33017 ;; Parameters:    Size  Location     Type
 33018 ;;  f               2   40[BANK0 ] PTR const unsigned char 
 33019 ;;		 -> STR_150(30), STR_149(46), STR_148(39), STR_147(62), 
 33020 ;;		 -> STR_146(55), STR_145(470), STR_143(2891), STR_141(492), 
 33021 ;;		 -> STR_139(605), STR_137(720), STR_135(922), STR_133(54), 
 33022 ;;		 -> STR_131(54), STR_129(45), STR_127(51), STR_125(52), 
 33023 ;;		 -> STR_123(46), STR_121(51), STR_119(53), STR_117(58), 
 33024 ;;		 -> STR_115(71), STR_114(63), STR_113(37), STR_112(46), 
 33025 ;;		 -> STR_111(102), STR_110(86), STR_108(25), STR_106(42), 
 33026 ;;		 -> STR_105(53), STR_104(31), STR_102(29), STR_101(28), 
 33027 ;;		 -> STR_99(42), STR_97(41), STR_95(40), STR_93(56), 
 33028 ;;		 -> STR_91(34), STR_89(34), STR_87(32), STR_85(37), 
 33029 ;;		 -> STR_83(58), STR_81(36), STR_79(36), STR_77(37), 
 33030 ;;		 -> STR_75(45), STR_74(66), STR_72(21), STR_70(24), 
 33031 ;;		 -> STR_69(48), STR_59(54), STR_58(64), STR_56(59), 
 33032 ;;		 -> STR_54(85), STR_52(47), STR_51(17), STR_48(52), 
 33033 ;;		 -> STR_46(4), STR_45(5), STR_43(4), STR_42(5), 
 33034 ;;		 -> STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), 
 33035 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(3), 
 33036 ;;		 -> STR_4(372), STR_3(4), STR_2(5), STR_1(4), 
 33037 ;; Auto vars:     Size  Location     Type
 33038 ;;  printf          4   69[BANK0 ] PTR const unsigned char 
 33039 ;;  printf          4   65[BANK0 ] unsigned long 
 33040 ;;  printf          4   59[BANK0 ] struct .
 33041 ;;  printf          2   77[BANK0 ] int 
 33042 ;;  printf          2   75[BANK0 ] int 
 33043 ;;  printf          2   73[BANK0 ] unsigned short 
 33044 ;;  printf          2   63[BANK0 ] int 
 33045 ;;  printf          2   57[BANK0 ] PTR void [1]
 33046 ;;		 -> ?i2_printf(2), ?_printf(2), 
 33047 ;;  printf          2   55[BANK0 ] unsigned int 
 33048 ;;  printf          2   53[BANK0 ] PTR const unsigned char 
 33049 ;;		 -> STR_164(7), printf@c(1), STR_163(16), STR_162(22), 
 33050 ;;		 -> STR_161(21), STR_160(27), STR_159(41), STR_158(32), 
 33051 ;;		 -> STR_157(19), STR_156(16), STR_155(15), STR_154(16), 
 33052 ;;		 -> STR_153(10), STR_152(13), STR_151(12), ringBufferLUT@channel_name(22), 
 33053 ;;		 -> TRIAC_Firing_Angle(4), 
 33054 ;;  printf          1   79[BANK0 ] char 
 33055 ;;  printf          1   52[BANK0 ] unsigned char 
 33056 ;;  printf          1    0        unsigned char 
 33057 ;; Return value:  Size  Location     Type
 33058 ;;                  2   40[BANK0 ] int 
 33059 ;; Registers used:
 33060 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33061 ;; Tracked objects:
 33062 ;;		On entry : 0/0
 33063 ;;		On exit  : 0/0
 33064 ;;		Unchanged: 0/0
 33065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33067 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33068 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33069 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33070 ;;Total ram usage:       40 bytes
 33071 ;; Hardware stack levels used:    1
 33072 ;; Hardware stack levels required when called:    2
 33073 ;; This function calls:
 33074 ;;		i2___awdiv
 33075 ;;		i2___fladd
 33076 ;;		i2___flge
 33077 ;;		i2___flmul
 33078 ;;		i2___flneg
 33079 ;;		i2___flsub
 33080 ;;		i2___fltol
 33081 ;;		i2___lldiv
 33082 ;;		i2___llmod
 33083 ;;		i2___wmul
 33084 ;;		i2___xxtofl
 33085 ;;		i2__div_to_l_
 33086 ;;		i2__tdiv_to_l_
 33087 ;;		i2_fround
 33088 ;;		i2_isdigit
 33089 ;;		i2_putch
 33090 ;;		i2_scale
 33091 ;; This function is called by:
 33092 ;;		_EUSART2_Receive_ISR
 33093 ;; This function uses a non-reentrant model
 33094 ;;
 33095                           
 33096                           	psect	text101
 33097  01216C                     __ptext101:
 33098                           	opt stack 0
 33099  01216C                     i2_printf:
 33100                           	opt stack 15
 33101                           
 33102                           ;doprnt.c: 466: va_list ap;
 33103                           ;doprnt.c: 499: signed char c;
 33104                           ;doprnt.c: 501: int width;
 33105                           ;doprnt.c: 504: int prec;
 33106                           ;doprnt.c: 508: unsigned short flag;
 33107                           ;doprnt.c: 515: char d;
 33108                           ;doprnt.c: 516: double fval;
 33109                           ;doprnt.c: 517: int exp;
 33110                           ;doprnt.c: 523: union {
 33111                           ;doprnt.c: 524: unsigned long vd;
 33112                           ;doprnt.c: 525: double integ;
 33113                           ;doprnt.c: 526: } tmpval;
 33114                           ;doprnt.c: 528: unsigned long val;
 33115                           ;doprnt.c: 529: unsigned len;
 33116                           ;doprnt.c: 530: const char * cp;
 33117                           ;doprnt.c: 533: *ap = __va_start();
 33118                           
 33119                           ; BSR set to: 14
 33120                           ;incstack = 0
 33121  01216C  0E8A               	movlw	low (?i2_printf+2)
 33122  01216E  0100               	movlb	0	; () banked
 33123  012170  6F99               	movwf	i2printf@ap& (0+255),b
 33124  012172  0E00               	movlw	high (?i2_printf+2)
 33125  012174  6F9A               	movwf	(i2printf@ap+1)& (0+255),b
 33126                           
 33127                           ;doprnt.c: 536: while(c = *f++) {
 33128  012176  EF79  F097         	goto	i2u1927_40
 33129  01217A                     
 33130                           ; BSR set to: 0
 33131                           ;doprnt.c: 538: if(c != '%')
 33132                           
 33133                           ; BSR set to: 0
 33134  01217A  0E25               	movlw	37
 33135  01217C  19AF               	xorwf	i2printf@c& (0+255),w,b
 33136  01217E  B4D8               	btfsc	status,2,c
 33137  012180  D005               	goto	i2l1532
 33138                           
 33139                           ; BSR set to: 0
 33140                           ;doprnt.c: 540: {
 33141                           ;doprnt.c: 541: (putch(c) );
 33142  012182  51AF               	movf	i2printf@c& (0+255),w,b
 33143  012184  EC16  F0CA         	call	i2_putch
 33144                           
 33145                           ;doprnt.c: 542: continue;
 33146  012188  EF79  F097         	goto	i2u1927_40
 33147  01218C                     i2l1532:
 33148                           
 33149                           ;doprnt.c: 543: }
 33150                           ;doprnt.c: 546: width = 0;
 33151  01218C  0E00               	movlw	0
 33152  01218E  0100               	movlb	0	; () banked
 33153  012190  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 33154  012192  0E00               	movlw	0
 33155  012194  6FAB               	movwf	i2printf@width& (0+255),b
 33156                           
 33157                           ;doprnt.c: 548: flag = 0;
 33158  012196  0E00               	movlw	0
 33159  012198  6FAA               	movwf	(i2printf@flag+1)& (0+255),b
 33160  01219A  0E00               	movlw	0
 33161  01219C  6FA9               	movwf	i2printf@flag& (0+255),b
 33162                           
 33163                           ; BSR set to: 0
 33164                           ;doprnt.c: 551: switch(*f) {
 33165                           
 33166                           ;doprnt.c: 550: for(;;) {
 33167  01219E  D004               	goto	i2l1534
 33168  0121A0                     
 33169                           ;doprnt.c: 580: flag |= 0x04;
 33170                           
 33171                           ; BSR set to: 0
 33172  0121A0  0100               	movlb	0	; () banked
 33173  0121A2  85A9               	bsf	i2printf@flag& (0+255),2,b
 33174                           
 33175                           ;doprnt.c: 581: f++;
 33176  0121A4  4B88               	infsnz	i2printf@f& (0+255),f,b
 33177  0121A6  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 33178  0121A8                     i2l1534:
 33179                           
 33180                           ; BSR set to: 0
 33181  0121A8  C088  FFF6         	movff	i2printf@f,tblptrl
 33182  0121AC  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33183  0121B0  0E00               	movlw	low (__mediumconst shr (0+16))
 33184  0121B2  6EF8               	movwf	tblptru,c
 33185  0121B4  0E0D               	movlw	(high __ramtop+-1)
 33186  0121B6  64F7               	cpfsgt	tblptrh,c
 33187  0121B8  D003               	bra	i2u1853_47
 33188  0121BA  0008               	tblrd		*
 33189  0121BC  50F5               	movf	tablat,w,c
 33190  0121BE  D005               	bra	i2u1853_40
 33191  0121C0                     i2u1853_47:
 33192  0121C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 33193  0121C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 33194  0121C8  50EF               	movf	indf0,w,c
 33195  0121CA                     i2u1853_40:
 33196                           
 33197                           ; Switch size 1, requested type "space"
 33198                           ; Number of cases is 1, Range of values is 48 to 48
 33199                           ; switch strategies available:
 33200                           ; Name         Instructions Cycles
 33201                           ; simple_byte            4     3 (average)
 33202                           ;	Chosen strategy is simple_byte
 33203  0121CA  0A30               	xorlw	48	; case 48
 33204  0121CC  B4D8               	btfsc	status,2,c
 33205  0121CE  D7E8               	goto	i2l1535
 33206                           
 33207                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 33208                           
 33209                           ;doprnt.c: 586: }
 33210                           
 33211                           ;doprnt.c: 585: break;
 33212  0121D0  C088  FFF6         	movff	i2printf@f,tblptrl
 33213  0121D4  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33214  0121D8  0E00               	movlw	low (__mediumconst shr (0+16))
 33215  0121DA  6EF8               	movwf	tblptru,c
 33216  0121DC  0E0D               	movlw	(high __ramtop+-1)
 33217  0121DE  64F7               	cpfsgt	tblptrh,c
 33218  0121E0  D003               	bra	i2u1854_47
 33219  0121E2  0008               	tblrd		*
 33220  0121E4  50F5               	movf	tablat,w,c
 33221  0121E6  D005               	bra	i2u1854_40
 33222  0121E8                     i2u1854_47:
 33223  0121E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 33224  0121EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 33225  0121F0  50EF               	movf	indf0,w,c
 33226  0121F2                     i2u1854_40:
 33227  0121F2  EC16  F0C9         	call	i2_isdigit
 33228  0121F6  A0D8               	btfss	status,0,c
 33229  0121F8  D04B               	goto	i2u1858_40
 33230                           
 33231                           ;doprnt.c: 598: width = 0;
 33232  0121FA  0E00               	movlw	0
 33233  0121FC  0100               	movlb	0	; () banked
 33234  0121FE  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 33235  012200  0E00               	movlw	0
 33236  012202  6FAB               	movwf	i2printf@width& (0+255),b
 33237  012204                     
 33238                           ;doprnt.c: 600: width *= 10;
 33239                           
 33240                           ; BSR set to: 0
 33241  012204  C0AB  F001         	movff	i2printf@width,i2___wmul@multiplier
 33242  012208  C0AC  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 33243  01220C  0E00               	movlw	0
 33244  01220E  6E04               	movwf	i2___wmul@multiplicand+1,c
 33245  012210  0E0A               	movlw	10
 33246  012212  6E03               	movwf	i2___wmul@multiplicand,c
 33247  012214  ECAF  F0C8         	call	i2___wmul	;wreg free
 33248  012218  C001  F0AB         	movff	?i2___wmul,i2printf@width
 33249  01221C  C002  F0AC         	movff	?i2___wmul+1,i2printf@width+1
 33250                           
 33251                           ;doprnt.c: 601: width += *f++ - '0';
 33252  012220  0ED0               	movlw	208
 33253  012222  0100               	movlb	0	; () banked
 33254  012224  6F8A               	movwf	??i2_printf& (0+255),b
 33255  012226  0EFF               	movlw	255
 33256  012228  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 33257  01222A  C088  FFF6         	movff	i2printf@f,tblptrl
 33258  01222E  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33259  012232  0E00               	movlw	low (__mediumconst shr (0+16))
 33260  012234  6EF8               	movwf	tblptru,c
 33261  012236  0E0D               	movlw	(high __ramtop+-1)
 33262  012238  64F7               	cpfsgt	tblptrh,c
 33263  01223A  D003               	bra	i2u1856_47
 33264  01223C  0008               	tblrd		*
 33265  01223E  50F5               	movf	tablat,w,c
 33266  012240  D005               	bra	i2u1856_40
 33267  012242                     i2u1856_47:
 33268  012242  CFF6 FFE9          	movff	tblptrl,fsr0l
 33269  012246  CFF7 FFEA          	movff	tblptrh,fsr0h
 33270  01224A  50EF               	movf	indf0,w,c
 33271  01224C                     i2u1856_40:
 33272  01224C  0100               	movlb	0	; () banked
 33273  01224E  6F8C               	movwf	(??i2_printf+2)& (0+255),b
 33274  012250  6B8D               	clrf	(??i2_printf+3)& (0+255),b
 33275  012252  518A               	movf	??i2_printf& (0+255),w,b
 33276  012254  278C               	addwf	(??i2_printf+2)& (0+255),f,b
 33277  012256  518B               	movf	(??i2_printf+1)& (0+255),w,b
 33278  012258  238D               	addwfc	(??i2_printf+3)& (0+255),f,b
 33279  01225A  518C               	movf	(??i2_printf+2)& (0+255),w,b
 33280  01225C  27AB               	addwf	i2printf@width& (0+255),f,b
 33281  01225E  518D               	movf	(??i2_printf+3)& (0+255),w,b
 33282  012260  23AC               	addwfc	(i2printf@width+1)& (0+255),f,b
 33283                           
 33284                           ; BSR set to: 0
 33285  012262  4B88               	infsnz	i2printf@f& (0+255),f,b
 33286  012264  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 33287                           
 33288                           ; BSR set to: 0
 33289                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 33290  012266  C088  FFF6         	movff	i2printf@f,tblptrl
 33291  01226A  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33292  01226E  0E00               	movlw	low (__mediumconst shr (0+16))
 33293  012270  6EF8               	movwf	tblptru,c
 33294  012272  0E0D               	movlw	(high __ramtop+-1)
 33295  012274  64F7               	cpfsgt	tblptrh,c
 33296  012276  D003               	bra	i2u1857_47
 33297  012278  0008               	tblrd		*
 33298  01227A  50F5               	movf	tablat,w,c
 33299  01227C  D005               	bra	i2u1857_40
 33300  01227E                     i2u1857_47:
 33301  01227E  CFF6 FFE9          	movff	tblptrl,fsr0l
 33302  012282  CFF7 FFEA          	movff	tblptrh,fsr0h
 33303  012286  50EF               	movf	indf0,w,c
 33304  012288                     i2u1857_40:
 33305  012288  EC16  F0C9         	call	i2_isdigit
 33306  01228C  B0D8               	btfsc	status,0,c
 33307  01228E  D7BA               	goto	i2l1540
 33308  012290                     i2u1858_40:
 33309                           
 33310                           ;doprnt.c: 608: }
 33311                           ;doprnt.c: 611: if(*f == '.') {
 33312  012290  C088  FFF6         	movff	i2printf@f,tblptrl
 33313  012294  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33314  012298  0E00               	movlw	low (__mediumconst shr (0+16))
 33315  01229A  6EF8               	movwf	tblptru,c
 33316  01229C  0E0D               	movlw	(high __ramtop+-1)
 33317  01229E  64F7               	cpfsgt	tblptrh,c
 33318  0122A0  D003               	bra	i2u1859_47
 33319  0122A2  0008               	tblrd		*
 33320  0122A4  50F5               	movf	tablat,w,c
 33321  0122A6  D005               	bra	i2u1859_40
 33322  0122A8                     i2u1859_47:
 33323  0122A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 33324  0122AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 33325  0122B0  50EF               	movf	indf0,w,c
 33326  0122B2                     i2u1859_40:
 33327  0122B2  0A2E               	xorlw	46
 33328  0122B4  A4D8               	btfss	status,2,c
 33329  0122B6  D048               	goto	i2l1542
 33330                           
 33331                           ;doprnt.c: 612: flag |= 0x4000;
 33332  0122B8  0100               	movlb	0	; () banked
 33333  0122BA  8DAA               	bsf	(i2printf@flag+1)& (0+255),6,b
 33334                           
 33335                           ;doprnt.c: 613: f++;
 33336  0122BC  4B88               	infsnz	i2printf@f& (0+255),f,b
 33337  0122BE  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 33338                           
 33339                           ; BSR set to: 0
 33340                           ;doprnt.c: 620: {
 33341                           ;doprnt.c: 621: prec = 0;
 33342  0122C0  0E00               	movlw	0
 33343  0122C2  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 33344  0122C4  0E00               	movlw	0
 33345  0122C6  6FAD               	movwf	i2printf@prec& (0+255),b
 33346                           
 33347                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 33348  0122C8  D029               	goto	i2l1543
 33349  0122CA                     
 33350                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 33351                           
 33352                           ; BSR set to: 0
 33353  0122CA  C0AD  F001         	movff	i2printf@prec,i2___wmul@multiplier
 33354  0122CE  C0AE  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 33355  0122D2  0E00               	movlw	0
 33356  0122D4  6E04               	movwf	i2___wmul@multiplicand+1,c
 33357  0122D6  0E0A               	movlw	10
 33358  0122D8  6E03               	movwf	i2___wmul@multiplicand,c
 33359  0122DA  ECAF  F0C8         	call	i2___wmul	;wreg free
 33360  0122DE  C088  FFF6         	movff	i2printf@f,tblptrl
 33361  0122E2  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33362  0122E6  0E00               	movlw	low (__mediumconst shr (0+16))
 33363  0122E8  6EF8               	movwf	tblptru,c
 33364  0122EA  0E0D               	movlw	(high __ramtop+-1)
 33365  0122EC  64F7               	cpfsgt	tblptrh,c
 33366  0122EE  D003               	bra	i2u1861_47
 33367  0122F0  0008               	tblrd		*
 33368  0122F2  50F5               	movf	tablat,w,c
 33369  0122F4  D005               	bra	i2u1861_40
 33370  0122F6                     i2u1861_47:
 33371  0122F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 33372  0122FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 33373  0122FE  50EF               	movf	indf0,w,c
 33374  012300                     i2u1861_40:
 33375  012300  0100               	movlb	0	; () banked
 33376  012302  6F8A               	movwf	??i2_printf& (0+255),b
 33377  012304  518A               	movf	??i2_printf& (0+255),w,b
 33378  012306  2601               	addwf	?i2___wmul,f,c
 33379  012308  0E00               	movlw	0
 33380  01230A  2202               	addwfc	?i2___wmul+1,f,c
 33381  01230C  0ED0               	movlw	208
 33382  01230E  2401               	addwf	?i2___wmul,w,c
 33383  012310  6FAD               	movwf	i2printf@prec& (0+255),b
 33384  012312  0EFF               	movlw	255
 33385  012314  2002               	addwfc	?i2___wmul+1,w,c
 33386  012316  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 33387                           
 33388                           ; BSR set to: 0
 33389  012318  4B88               	infsnz	i2printf@f& (0+255),f,b
 33390  01231A  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 33391  01231C                     i2l1543:
 33392                           
 33393                           ; BSR set to: 0
 33394                           
 33395                           ; BSR set to: 0
 33396  01231C  C088  FFF6         	movff	i2printf@f,tblptrl
 33397  012320  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33398  012324  0E00               	movlw	low (__mediumconst shr (0+16))
 33399  012326  6EF8               	movwf	tblptru,c
 33400  012328  0E0D               	movlw	(high __ramtop+-1)
 33401  01232A  64F7               	cpfsgt	tblptrh,c
 33402  01232C  D003               	bra	i2u1862_47
 33403  01232E  0008               	tblrd		*
 33404  012330  50F5               	movf	tablat,w,c
 33405  012332  D005               	bra	i2u1862_40
 33406  012334                     i2u1862_47:
 33407  012334  CFF6 FFE9          	movff	tblptrl,fsr0l
 33408  012338  CFF7 FFEA          	movff	tblptrh,fsr0h
 33409  01233C  50EF               	movf	indf0,w,c
 33410  01233E                     i2u1862_40:
 33411  01233E  EC16  F0C9         	call	i2_isdigit
 33412  012342  A0D8               	btfss	status,0,c
 33413  012344  D0A4               	goto	i2l1547
 33414  012346  D7C1               	goto	i2l1544
 33415  012348                     i2l1542:
 33416                           
 33417                           ;doprnt.c: 626: prec = 0;
 33418  012348  0E00               	movlw	0
 33419  01234A  0100               	movlb	0	; () banked
 33420  01234C  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 33421  01234E  0E00               	movlw	0
 33422  012350  6FAD               	movwf	i2printf@prec& (0+255),b
 33423                           
 33424                           ; BSR set to: 0
 33425                           ;doprnt.c: 628: flag |= 0x1000;
 33426  012352  89AA               	bsf	(i2printf@flag+1)& (0+255),4,b
 33427                           
 33428                           ; BSR set to: 0
 33429                           ;doprnt.c: 630: }
 33430                           ;doprnt.c: 635: switch(c = *f++) {
 33431  012354  D09C               	goto	i2l1547
 33432  012356                     
 33433                           ; BSR set to: 0
 33434                           ;doprnt.c: 663: flag |= 0x400;
 33435                           
 33436                           ; BSR set to: 0
 33437  012356  85AA               	bsf	(i2printf@flag+1)& (0+255),2,b
 33438                           
 33439                           ; BSR set to: 0
 33440                           ;doprnt.c: 698: case 'i':
 33441                           ;doprnt.c: 699: break;
 33442                           
 33443                           ; BSR set to: 0
 33444                           
 33445                           ;doprnt.c: 697: case 'd':
 33446                           
 33447                           ;doprnt.c: 664: break;
 33448  012358  D0D1               	goto	i2l1551
 33449  01235A                     
 33450                           ; BSR set to: 0
 33451                           ;doprnt.c: 718: case 'x':
 33452                           ;doprnt.c: 721: flag |= 0x80;
 33453                           
 33454                           ; BSR set to: 0
 33455                           
 33456                           ; BSR set to: 0
 33457  01235A  8FA9               	bsf	i2printf@flag& (0+255),7,b
 33458                           
 33459                           ;doprnt.c: 723: break;
 33460  01235C  D0CF               	goto	i2l1551
 33461  01235E                     
 33462                           ; BSR set to: 0
 33463                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 33464                           
 33465                           ; BSR set to: 0
 33466  01235E  C099  FFD9         	movff	i2printf@ap,fsr2l
 33467  012362  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 33468  012366  CFDE F095          	movff	postinc2,i2printf@cp
 33469  01236A  CFDD F096          	movff	postdec2,i2printf@cp+1
 33470                           
 33471                           ; BSR set to: 0
 33472  01236E  0E02               	movlw	2
 33473  012370  2799               	addwf	i2printf@ap& (0+255),f,b
 33474  012372  0E00               	movlw	0
 33475  012374  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 33476                           
 33477                           ; BSR set to: 0
 33478                           ;doprnt.c: 740: if(!cp)
 33479  012376  5195               	movf	i2printf@cp& (0+255),w,b
 33480  012378  1196               	iorwf	(i2printf@cp+1)& (0+255),w,b
 33481  01237A  A4D8               	btfss	status,2,c
 33482  01237C  D004               	goto	i2l1557
 33483                           
 33484                           ; BSR set to: 0
 33485                           ;doprnt.c: 741: cp = "(null)";
 33486  01237E  0E86               	movlw	low STR_164
 33487  012380  6F95               	movwf	i2printf@cp& (0+255),b
 33488  012382  0EFF               	movlw	high STR_164
 33489  012384  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 33490  012386                     i2l1557:
 33491                           
 33492                           ; BSR set to: 0
 33493                           ;doprnt.c: 745: len = 0;
 33494                           
 33495                           ; BSR set to: 0
 33496  012386  0E00               	movlw	0
 33497  012388  6F98               	movwf	(i2printf@len+1)& (0+255),b
 33498  01238A  0E00               	movlw	0
 33499  01238C  6F97               	movwf	i2printf@len& (0+255),b
 33500                           
 33501                           ;doprnt.c: 746: while(cp[len])
 33502  01238E  D003               	goto	i2l1558
 33503  012390                     
 33504                           ;doprnt.c: 747: len++;
 33505                           
 33506                           ; BSR set to: 0
 33507  012390  0100               	movlb	0	; () banked
 33508  012392  4B97               	infsnz	i2printf@len& (0+255),f,b
 33509  012394  2B98               	incf	(i2printf@len+1)& (0+255),f,b
 33510  012396                     i2l1558:
 33511                           
 33512                           ; BSR set to: 0
 33513                           
 33514                           ; BSR set to: 0
 33515  012396  5197               	movf	i2printf@len& (0+255),w,b
 33516  012398  2595               	addwf	i2printf@cp& (0+255),w,b
 33517  01239A  6F8A               	movwf	??i2_printf& (0+255),b
 33518  01239C  5198               	movf	(i2printf@len+1)& (0+255),w,b
 33519  01239E  2196               	addwfc	(i2printf@cp+1)& (0+255),w,b
 33520  0123A0  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 33521  0123A2  C08A  FFF6         	movff	??i2_printf,tblptrl
 33522  0123A6  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 33523  0123AA  0E00               	movlw	low (__mediumconst shr (0+16))
 33524  0123AC  6EF8               	movwf	tblptru,c
 33525  0123AE  0E0D               	movlw	(high __ramtop+-1)
 33526  0123B0  64F7               	cpfsgt	tblptrh,c
 33527  0123B2  D003               	bra	i2u1865_47
 33528  0123B4  0008               	tblrd		*
 33529  0123B6  50F5               	movf	tablat,w,c
 33530  0123B8  D005               	bra	i2u1865_40
 33531  0123BA                     i2u1865_47:
 33532  0123BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 33533  0123BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 33534  0123C2  50EF               	movf	indf0,w,c
 33535  0123C4                     i2u1865_40:
 33536  0123C4  0900               	iorlw	0
 33537  0123C6  A4D8               	btfss	status,2,c
 33538  0123C8  D7E3               	goto	i2l1559
 33539  0123CA                     i2u1866_40:
 33540                           
 33541                           ;doprnt.c: 753: if(prec && prec < len)
 33542                           
 33543                           ;doprnt.c: 750: dostring:
 33544  0123CA  0100               	movlb	0	; () banked
 33545  0123CC  51AD               	movf	i2printf@prec& (0+255),w,b
 33546  0123CE  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 33547  0123D0  B4D8               	btfsc	status,2,c
 33548  0123D2  D00A               	goto	i2l1562
 33549                           
 33550                           ; BSR set to: 0
 33551  0123D4  5197               	movf	i2printf@len& (0+255),w,b
 33552  0123D6  5DAD               	subwf	i2printf@prec& (0+255),w,b
 33553  0123D8  5198               	movf	(i2printf@len+1)& (0+255),w,b
 33554  0123DA  59AE               	subwfb	(i2printf@prec+1)& (0+255),w,b
 33555  0123DC  B0D8               	btfsc	status,0,c
 33556  0123DE  D004               	goto	i2l1562
 33557                           
 33558                           ; BSR set to: 0
 33559                           ;doprnt.c: 754: len = prec;
 33560  0123E0  C0AD  F097         	movff	i2printf@prec,i2printf@len
 33561  0123E4  C0AE  F098         	movff	i2printf@prec+1,i2printf@len+1
 33562  0123E8                     i2l1562:
 33563                           
 33564                           ; BSR set to: 0
 33565                           ;doprnt.c: 757: if(width > len)
 33566                           
 33567                           ; BSR set to: 0
 33568  0123E8  51AB               	movf	i2printf@width& (0+255),w,b
 33569  0123EA  5D97               	subwf	i2printf@len& (0+255),w,b
 33570  0123EC  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 33571  0123EE  5998               	subwfb	(i2printf@len+1)& (0+255),w,b
 33572  0123F0  B0D8               	btfsc	status,0,c
 33573  0123F2  D005               	goto	i2l1563
 33574                           
 33575                           ; BSR set to: 0
 33576                           ;doprnt.c: 758: width -= len;
 33577  0123F4  5197               	movf	i2printf@len& (0+255),w,b
 33578  0123F6  5FAB               	subwf	i2printf@width& (0+255),f,b
 33579  0123F8  5198               	movf	(i2printf@len+1)& (0+255),w,b
 33580  0123FA  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 33581  0123FC  D008               	goto	i2l1565
 33582  0123FE                     i2l1563:
 33583                           
 33584                           ; BSR set to: 0
 33585                           ;doprnt.c: 759: else
 33586                           ;doprnt.c: 760: width = 0;
 33587                           
 33588                           ; BSR set to: 0
 33589  0123FE  0E00               	movlw	0
 33590  012400  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 33591  012402  0E00               	movlw	0
 33592  012404  6FAB               	movwf	i2printf@width& (0+255),b
 33593                           
 33594                           ; BSR set to: 0
 33595                           ;doprnt.c: 764: while(width--)
 33596  012406  D003               	goto	i2l1565
 33597  012408                     i2l15108:
 33598                           
 33599                           ; BSR set to: 0
 33600                           ;doprnt.c: 765: (putch(' ') );
 33601  012408  0E20               	movlw	32
 33602  01240A  EC16  F0CA         	call	i2_putch
 33603  01240E                     i2l1565:
 33604  01240E  0100               	movlb	0	; () banked
 33605  012410  07AB               	decf	i2printf@width& (0+255),f,b
 33606  012412  A0D8               	btfss	status,0,c
 33607  012414  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 33608  012416  29AB               	incf	i2printf@width& (0+255),w,b
 33609  012418  E1F7               	bnz	i2l15108
 33610  01241A  29AC               	incf	(i2printf@width+1)& (0+255),w,b
 33611  01241C  B4D8               	btfsc	status,2,c
 33612  01241E  D017               	goto	i2l1568
 33613  012420  D7F3               	goto	i2l1566
 33614  012422                     i2l15112:
 33615                           
 33616                           ; BSR set to: 0
 33617                           ;doprnt.c: 768: (putch(*cp++) );
 33618  012422  C095  FFF6         	movff	i2printf@cp,tblptrl
 33619  012426  C096  FFF7         	movff	i2printf@cp+1,tblptrh
 33620  01242A  0E00               	movlw	low (__mediumconst shr (0+16))
 33621  01242C  6EF8               	movwf	tblptru,c
 33622  01242E  0E0D               	movlw	(high __ramtop+-1)
 33623  012430  64F7               	cpfsgt	tblptrh,c
 33624  012432  D003               	bra	i2u1871_47
 33625  012434  0008               	tblrd		*
 33626  012436  50F5               	movf	tablat,w,c
 33627  012438  D005               	bra	i2u1871_40
 33628  01243A                     i2u1871_47:
 33629  01243A  CFF6 FFE9          	movff	tblptrl,fsr0l
 33630  01243E  CFF7 FFEA          	movff	tblptrh,fsr0h
 33631  012442  50EF               	movf	indf0,w,c
 33632  012444                     i2u1871_40:
 33633  012444  EC16  F0CA         	call	i2_putch
 33634  012448  0100               	movlb	0	; () banked
 33635  01244A  4B95               	infsnz	i2printf@cp& (0+255),f,b
 33636  01244C  2B96               	incf	(i2printf@cp+1)& (0+255),f,b
 33637  01244E                     i2l1568:
 33638                           
 33639                           ; BSR set to: 0
 33640                           
 33641                           ; BSR set to: 0
 33642  01244E  0797               	decf	i2printf@len& (0+255),f,b
 33643  012450  A0D8               	btfss	status,0,c
 33644  012452  0798               	decf	(i2printf@len+1)& (0+255),f,b
 33645  012454  2997               	incf	i2printf@len& (0+255),w,b
 33646  012456  E1E5               	bnz	i2l15112
 33647  012458  2998               	incf	(i2printf@len+1)& (0+255),w,b
 33648  01245A  B4D8               	btfsc	status,2,c
 33649  01245C  EF79  F097         	goto	i2u1927_40
 33650  012460  D7E0               	goto	i2l1569
 33651  012462                     
 33652                           ; BSR set to: 0
 33653                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 33654                           
 33655                           ; BSR set to: 0
 33656  012462  C099  FFD9         	movff	i2printf@ap,fsr2l
 33657  012466  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 33658  01246A  50DF               	movf	indf2,w,c
 33659  01246C  6FAF               	movwf	i2printf@c& (0+255),b
 33660                           
 33661                           ; BSR set to: 0
 33662  01246E  0E02               	movlw	2
 33663  012470  2799               	addwf	i2printf@ap& (0+255),f,b
 33664  012472  0E00               	movlw	0
 33665  012474  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 33666  012476                     
 33667                           ; BSR set to: 0
 33668                           ;doprnt.c: 805: cp = (char *)&c;
 33669                           
 33670                           ; BSR set to: 0
 33671  012476  0EAF               	movlw	low i2printf@c
 33672  012478  6F95               	movwf	i2printf@cp& (0+255),b
 33673  01247A  0E00               	movlw	high i2printf@c
 33674  01247C  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 33675                           
 33676                           ; BSR set to: 0
 33677                           ;doprnt.c: 806: len = 1;
 33678  01247E  0E00               	movlw	0
 33679  012480  6F98               	movwf	(i2printf@len+1)& (0+255),b
 33680  012482  0E01               	movlw	1
 33681  012484  6F97               	movwf	i2printf@len& (0+255),b
 33682                           
 33683                           ;doprnt.c: 807: goto dostring;
 33684  012486  D7A1               	goto	i2u1866_40
 33685  012488                     
 33686                           ; BSR set to: 0
 33687                           ;doprnt.c: 818: flag |= 0xC0;
 33688                           
 33689                           ; BSR set to: 0
 33690  012488  0EC0               	movlw	192
 33691  01248A  13A9               	iorwf	i2printf@flag& (0+255),f,b
 33692                           
 33693                           ; BSR set to: 0
 33694                           ;doprnt.c: 822: }
 33695                           
 33696                           ;doprnt.c: 819: break;
 33697  01248C  D037               	goto	i2l1551
 33698  01248E                     i2l1547:
 33699                           
 33700                           ; BSR set to: 0
 33701  01248E  0100               	movlb	0	; () banked
 33702  012490  5188               	movf	i2printf@f& (0+255),w,b
 33703  012492  6F8A               	movwf	??i2_printf& (0+255),b
 33704  012494  5189               	movf	(i2printf@f+1)& (0+255),w,b
 33705  012496  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 33706  012498  4B88               	infsnz	i2printf@f& (0+255),f,b
 33707  01249A  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 33708  01249C  C08A  FFF6         	movff	??i2_printf,tblptrl
 33709  0124A0  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 33710  0124A4  0E00               	movlw	low (__mediumconst shr (0+16))
 33711  0124A6  6EF8               	movwf	tblptru,c
 33712  0124A8  0E0D               	movlw	(high __ramtop+-1)
 33713  0124AA  64F7               	cpfsgt	tblptrh,c
 33714  0124AC  D003               	bra	i2u1873_47
 33715  0124AE  0008               	tblrd		*
 33716  0124B0  50F5               	movf	tablat,w,c
 33717  0124B2  D005               	bra	i2u1873_40
 33718  0124B4                     i2u1873_47:
 33719  0124B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 33720  0124B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 33721  0124BC  50EF               	movf	indf0,w,c
 33722  0124BE                     i2u1873_40:
 33723  0124BE  0100               	movlb	0	; () banked
 33724  0124C0  6FAF               	movwf	i2printf@c& (0+255),b
 33725  0124C2  51AF               	movf	i2printf@c& (0+255),w,b
 33726                           
 33727                           ; Switch size 1, requested type "space"
 33728                           ; Number of cases is 9, Range of values is 0 to 120
 33729                           ; switch strategies available:
 33730                           ; Name         Instructions Cycles
 33731                           ; simple_byte           28    15 (average)
 33732                           ;	Chosen strategy is simple_byte
 33733  0124C4  0A00               	xorlw	0	; case 0
 33734  0124C6  B4D8               	btfsc	status,2,c
 33735  0124C8  0012               	return	
 33736  0124CA  0A58               	xorlw	88	; case 88
 33737  0124CC  B4D8               	btfsc	status,2,c
 33738  0124CE  D745               	goto	i2l1554
 33739  0124D0  0A3B               	xorlw	59	; case 99
 33740  0124D2  B4D8               	btfsc	status,2,c
 33741  0124D4  D7C6               	goto	i2l1571
 33742  0124D6  0A07               	xorlw	7	; case 100
 33743  0124D8  B4D8               	btfsc	status,2,c
 33744  0124DA  D010               	goto	i2l1551
 33745  0124DC  0A02               	xorlw	2	; case 102
 33746  0124DE  B4D8               	btfsc	status,2,c
 33747  0124E0  D73A               	goto	i2l1550
 33748  0124E2  0A0F               	xorlw	15	; case 105
 33749  0124E4  B4D8               	btfsc	status,2,c
 33750  0124E6  D00A               	goto	i2l1551
 33751  0124E8  0A1A               	xorlw	26	; case 115
 33752  0124EA  B4D8               	btfsc	status,2,c
 33753  0124EC  D738               	goto	i2l1556
 33754  0124EE  0A06               	xorlw	6	; case 117
 33755  0124F0  B4D8               	btfsc	status,2,c
 33756  0124F2  D7CA               	goto	i2l1573
 33757  0124F4  0A0D               	xorlw	13	; case 120
 33758  0124F6  B4D8               	btfsc	status,2,c
 33759  0124F8  D730               	goto	i2l1554
 33760  0124FA  D7BD               	goto	i2l1572
 33761  0124FC                     i2l1551:
 33762                           
 33763                           ; BSR set to: 0
 33764                           ;doprnt.c: 825: if(flag & (0x700)) {
 33765                           
 33766                           ; BSR set to: 0
 33767  0124FC  0E07               	movlw	7
 33768  0124FE  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 33769  012500  B4D8               	btfsc	status,2,c
 33770  012502  D33B               	goto	i2l1574
 33771                           
 33772                           ; BSR set to: 0
 33773                           ;doprnt.c: 827: if(flag & 0x1000)
 33774  012504  A9AA               	btfss	(i2printf@flag+1)& (0+255),4,b
 33775  012506  D004               	goto	i2l1575
 33776                           
 33777                           ; BSR set to: 0
 33778                           ;doprnt.c: 829: prec = 6;
 33779  012508  0E00               	movlw	0
 33780  01250A  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 33781  01250C  0E06               	movlw	6
 33782  01250E  6FAD               	movwf	i2printf@prec& (0+255),b
 33783  012510                     i2l1575:
 33784                           
 33785                           ; BSR set to: 0
 33786                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 33787                           
 33788                           ; BSR set to: 0
 33789  012510  C099  FFD9         	movff	i2printf@ap,fsr2l
 33790  012514  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 33791  012518  CFDE F0A5          	movff	postinc2,i2printf@fval
 33792  01251C  CFDE F0A6          	movff	postinc2,i2printf@fval+1
 33793  012520  CFDE F0A7          	movff	postinc2,i2printf@fval+2
 33794  012524  CFDE F0A8          	movff	postinc2,i2printf@fval+3
 33795                           
 33796                           ; BSR set to: 0
 33797  012528  0E04               	movlw	4
 33798  01252A  2799               	addwf	i2printf@ap& (0+255),f,b
 33799  01252C  0E00               	movlw	0
 33800  01252E  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 33801                           
 33802                           ; BSR set to: 0
 33803                           ;doprnt.c: 831: if(fval < 0.0) {
 33804  012530  AFA8               	btfss	(i2printf@fval+3)& (0+255),7,b
 33805  012532  D015               	goto	i2l1576
 33806                           
 33807                           ; BSR set to: 0
 33808                           ;doprnt.c: 832: fval = -fval;
 33809  012534  C0A5  F02C         	movff	i2printf@fval,i2___flneg@f1
 33810  012538  C0A6  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 33811  01253C  C0A7  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 33812  012540  C0A8  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 33813  012544  EC21  F0C8         	call	i2___flneg	;wreg free
 33814  012548  C02C  F0A5         	movff	?i2___flneg,i2printf@fval
 33815  01254C  C02D  F0A6         	movff	?i2___flneg+1,i2printf@fval+1
 33816  012550  C02E  F0A7         	movff	?i2___flneg+2,i2printf@fval+2
 33817  012554  C02F  F0A8         	movff	?i2___flneg+3,i2printf@fval+3
 33818                           
 33819                           ;doprnt.c: 833: flag |= 0x03;
 33820  012558  0E03               	movlw	3
 33821  01255A  0100               	movlb	0	; () banked
 33822  01255C  13A9               	iorwf	i2printf@flag& (0+255),f,b
 33823  01255E                     i2l1576:
 33824                           
 33825                           ; BSR set to: 0
 33826                           ;doprnt.c: 834: }
 33827                           ;doprnt.c: 835: exp = 0;
 33828                           
 33829                           ; BSR set to: 0
 33830  01255E  0E00               	movlw	0
 33831  012560  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 33832  012562  0E00               	movlw	0
 33833  012564  6F9F               	movwf	i2printf@exp& (0+255),b
 33834                           
 33835                           ; BSR set to: 0
 33836                           ;doprnt.c: 836: if( fval!=0) {
 33837  012566  51A5               	movf	i2printf@fval& (0+255),w,b
 33838  012568  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 33839  01256A  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 33840  01256C  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 33841  01256E  B4D8               	btfsc	status,2,c
 33842  012570  D082               	goto	i2l1581
 33843                           
 33844                           ; BSR set to: 0
 33845                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 33846  012572  35A7               	rlcf	(i2printf@fval+2)& (0+255),w,b
 33847  012574  35A8               	rlcf	(i2printf@fval+3)& (0+255),w,b
 33848  012576  0F82               	addlw	130
 33849  012578  6F9F               	movwf	i2printf@exp& (0+255),b
 33850  01257A  6BA0               	clrf	(i2printf@exp+1)& (0+255),b
 33851  01257C  0EFF               	movlw	255
 33852  01257E  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 33853                           
 33854                           ; BSR set to: 0
 33855                           ;doprnt.c: 838: exp--;
 33856  012580  079F               	decf	i2printf@exp& (0+255),f,b
 33857  012582  A0D8               	btfss	status,0,c
 33858  012584  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 33859                           
 33860                           ; BSR set to: 0
 33861                           ;doprnt.c: 839: exp *= 3;
 33862  012586  C09F  F001         	movff	i2printf@exp,i2___wmul@multiplier
 33863  01258A  C0A0  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 33864  01258E  0E00               	movlw	0
 33865  012590  6E04               	movwf	i2___wmul@multiplicand+1,c
 33866  012592  0E03               	movlw	3
 33867  012594  6E03               	movwf	i2___wmul@multiplicand,c
 33868  012596  ECAF  F0C8         	call	i2___wmul	;wreg free
 33869  01259A  C001  F09F         	movff	?i2___wmul,i2printf@exp
 33870  01259E  C002  F0A0         	movff	?i2___wmul+1,i2printf@exp+1
 33871                           
 33872                           ;doprnt.c: 840: exp /= 10;
 33873  0125A2  C09F  F007         	movff	i2printf@exp,i2___awdiv@dividend
 33874  0125A6  C0A0  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 33875  0125AA  0E00               	movlw	0
 33876  0125AC  6E0A               	movwf	i2___awdiv@divisor+1,c
 33877  0125AE  0E0A               	movlw	10
 33878  0125B0  6E09               	movwf	i2___awdiv@divisor,c
 33879  0125B2  ECAE  F0C1         	call	i2___awdiv	;wreg free
 33880  0125B6  C007  F09F         	movff	?i2___awdiv,i2printf@exp
 33881  0125BA  C008  F0A0         	movff	?i2___awdiv+1,i2printf@exp+1
 33882                           
 33883                           ;doprnt.c: 841: if(exp < 0)
 33884  0125BE  0100               	movlb	0	; () banked
 33885  0125C0  AFA0               	btfss	(i2printf@exp+1)& (0+255),7,b
 33886  0125C2  D003               	goto	i2l1578
 33887                           
 33888                           ; BSR set to: 0
 33889                           ;doprnt.c: 842: exp--;
 33890  0125C4  079F               	decf	i2printf@exp& (0+255),f,b
 33891  0125C6  A0D8               	btfss	status,0,c
 33892  0125C8  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 33893  0125CA                     i2l1578:
 33894                           
 33895                           ; BSR set to: 0
 33896                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 33897                           
 33898                           ; BSR set to: 0
 33899  0125CA  519F               	movf	i2printf@exp& (0+255),w,b
 33900  0125CC  0800               	sublw	0
 33901  0125CE  ECDA  F09E         	call	i2_scale
 33902  0125D2  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 33903  0125D6  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 33904  0125DA  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 33905  0125DE  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 33906                           
 33907                           ;doprnt.c: 847: tmpval.integ *= fval;
 33908  0125E2  C09B  F030         	movff	i2printf@tmpval,i2___flmul@b
 33909  0125E6  C09C  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 33910  0125EA  C09D  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 33911  0125EE  C09E  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 33912  0125F2  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 33913  0125F6  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 33914  0125FA  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 33915  0125FE  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 33916  012602  EC77  F0A4         	call	i2___flmul	;wreg free
 33917  012606  C030  F09B         	movff	?i2___flmul,i2printf@tmpval
 33918  01260A  C031  F09C         	movff	?i2___flmul+1,i2printf@tmpval+1
 33919  01260E  C032  F09D         	movff	?i2___flmul+2,i2printf@tmpval+2
 33920  012612  C033  F09E         	movff	?i2___flmul+3,i2printf@tmpval+3
 33921                           
 33922                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 33923  012616  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 33924  01261A  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 33925  01261E  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 33926  012622  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 33927  012626  0E00               	movlw	0
 33928  012628  6E38               	movwf	i2___flge@ff2,c
 33929  01262A  0E00               	movlw	0
 33930  01262C  6E39               	movwf	i2___flge@ff2+1,c
 33931  01262E  0E80               	movlw	128
 33932  012630  6E3A               	movwf	i2___flge@ff2+2,c
 33933  012632  0E3F               	movlw	63
 33934  012634  6E3B               	movwf	i2___flge@ff2+3,c
 33935  012636  EC73  F0BB         	call	i2___flge	;wreg free
 33936  01263A  B0D8               	btfsc	status,0,c
 33937  01263C  D005               	goto	i2l1579
 33938                           
 33939                           ;doprnt.c: 849: exp--;
 33940  01263E  0100               	movlb	0	; () banked
 33941  012640  079F               	decf	i2printf@exp& (0+255),f,b
 33942  012642  A0D8               	btfss	status,0,c
 33943  012644  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 33944  012646  D017               	goto	i2l1581
 33945  012648                     i2l1579:
 33946                           
 33947                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 33948                           
 33949                           ; BSR set to: 0
 33950  012648  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 33951  01264C  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 33952  012650  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 33953  012654  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 33954  012658  0E00               	movlw	0
 33955  01265A  6E38               	movwf	i2___flge@ff2,c
 33956  01265C  0E00               	movlw	0
 33957  01265E  6E39               	movwf	i2___flge@ff2+1,c
 33958  012660  0E20               	movlw	32
 33959  012662  6E3A               	movwf	i2___flge@ff2+2,c
 33960  012664  0E41               	movlw	65
 33961  012666  6E3B               	movwf	i2___flge@ff2+3,c
 33962  012668  EC73  F0BB         	call	i2___flge	;wreg free
 33963  01266C  A0D8               	btfss	status,0,c
 33964  01266E  D003               	goto	i2l1581
 33965                           
 33966                           ;doprnt.c: 851: exp++;
 33967  012670  0100               	movlb	0	; () banked
 33968  012672  4B9F               	infsnz	i2printf@exp& (0+255),f,b
 33969  012674  2BA0               	incf	(i2printf@exp+1)& (0+255),f,b
 33970  012676                     i2l1581:
 33971                           
 33972                           ;doprnt.c: 852: }
 33973                           ;doprnt.c: 1112: if(prec <= 12)
 33974                           
 33975                           ; BSR set to: 0
 33976                           
 33977                           ; BSR set to: 0
 33978                           
 33979                           ; BSR set to: 0
 33980  012676  0100               	movlb	0	; () banked
 33981  012678  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 33982  01267A  D006               	goto	i2u1881_40
 33983  01267C  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 33984  01267E  E121               	bnz	i2l15180
 33985  012680  0E0D               	movlw	13
 33986  012682  5DAD               	subwf	i2printf@prec& (0+255),w,b
 33987  012684  B0D8               	btfsc	status,0,c
 33988  012686  D01D               	goto	i2l1582
 33989  012688                     i2u1881_40:
 33990                           
 33991                           ; BSR set to: 0
 33992                           ;doprnt.c: 1113: fval += fround(prec);
 33993  012688  C0A5  F056         	movff	i2printf@fval,i2___fladd@b
 33994  01268C  C0A6  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 33995  012690  C0A7  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 33996  012694  C0A8  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 33997  012698  51AD               	movf	i2printf@prec& (0+255),w,b
 33998  01269A  ECD8  F0B1         	call	i2_fround
 33999  01269E  C049  F05A         	movff	?i2_fround,i2___fladd@a
 34000  0126A2  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 34001  0126A6  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 34002  0126AA  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 34003  0126AE  ECBE  F0A7         	call	i2___fladd	;wreg free
 34004  0126B2  C056  F0A5         	movff	?i2___fladd,i2printf@fval
 34005  0126B6  C057  F0A6         	movff	?i2___fladd+1,i2printf@fval+1
 34006  0126BA  C058  F0A7         	movff	?i2___fladd+2,i2printf@fval+2
 34007  0126BE  C059  F0A8         	movff	?i2___fladd+3,i2printf@fval+3
 34008  0126C2                     i2l1582:
 34009  0126C2                     i2l15180:
 34010                           
 34011                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 34012  0126C2  0100               	movlb	0	; () banked
 34013  0126C4  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 34014  0126C6  D006               	goto	i2u1882_40
 34015  0126C8  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 34016  0126CA  E122               	bnz	i2l15188
 34017  0126CC  0E0A               	movlw	10
 34018  0126CE  5D9F               	subwf	i2printf@exp& (0+255),w,b
 34019  0126D0  B0D8               	btfsc	status,0,c
 34020  0126D2  D01E               	goto	i2u1885_40
 34021  0126D4                     i2u1882_40:
 34022                           
 34023                           ; BSR set to: 0
 34024  0126D4  51A5               	movf	i2printf@fval& (0+255),w,b
 34025  0126D6  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 34026  0126D8  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 34027  0126DA  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 34028  0126DC  B4D8               	btfsc	status,2,c
 34029  0126DE  D063               	goto	i2l1583
 34030                           
 34031                           ; BSR set to: 0
 34032  0126E0  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 34033  0126E4  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 34034  0126E8  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 34035  0126EC  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 34036  0126F0  EC00  F0BE         	call	i2___fltol	;wreg free
 34037  0126F4  0100               	movlb	0	; () banked
 34038  0126F6  516C               	movf	?i2___fltol& (0+255),w,b
 34039  0126F8  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 34040  0126FA  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 34041  0126FC  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 34042  0126FE  B4D8               	btfsc	status,2,c
 34043                           
 34044                           ; BSR set to: 0
 34045  012700  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 34046  012702  D051               	goto	i2l1583
 34047  012704  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 34048  012706  E104               	bnz	i2l15188
 34049  012708  0E02               	movlw	2
 34050  01270A  5D9F               	subwf	i2printf@exp& (0+255),w,b
 34051  01270C  A0D8               	btfss	status,0,c
 34052  01270E  D04B               	goto	i2l1583
 34053  012710                     i2u1885_40:
 34054  012710                     i2l15188:
 34055                           
 34056                           ; BSR set to: 0
 34057                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 34058  012710  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 34059  012714  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 34060  012718  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 34061  01271C  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 34062  012720  0E5F               	movlw	95
 34063  012722  6E38               	movwf	i2___flge@ff2,c
 34064  012724  0E70               	movlw	112
 34065  012726  6E39               	movwf	i2___flge@ff2+1,c
 34066  012728  0E89               	movlw	137
 34067  01272A  6E3A               	movwf	i2___flge@ff2+2,c
 34068  01272C  0E40               	movlw	64
 34069  01272E  6E3B               	movwf	i2___flge@ff2+3,c
 34070  012730  EC73  F0BB         	call	i2___flge	;wreg free
 34071  012734  B0D8               	btfsc	status,0,c
 34072  012736  D003               	goto	i2l1586
 34073                           
 34074                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 34075  012738  0100               	movlb	0	; () banked
 34076  01273A  0EF7               	movlw	247
 34077  01273C  D002               	goto	L16
 34078  01273E                     i2l1586:
 34079                           
 34080                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 34081                           
 34082                           ; BSR set to: 0
 34083  01273E  0100               	movlb	0	; () banked
 34084  012740  0EF8               	movlw	248
 34085  012742                     L16:
 34086  012742  279F               	addwf	i2printf@exp& (0+255),f,b
 34087  012744  0EFF               	movlw	255
 34088  012746  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 34089                           
 34090                           ; BSR set to: 0
 34091                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 34092                           
 34093                           ; BSR set to: 0
 34094  012748  519F               	movf	i2printf@exp& (0+255),w,b
 34095  01274A  ECDA  F09E         	call	i2_scale
 34096  01274E  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 34097  012752  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 34098  012756  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 34099  01275A  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 34100  01275E  C0A5  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 34101  012762  C0A6  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 34102  012766  C0A7  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 34103  01276A  C0A8  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 34104  01276E  C09B  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 34105  012772  C09C  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 34106  012776  C09D  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 34107  01277A  C09E  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 34108  01277E  ECBC  F0B9         	call	i2__div_to_l_	;wreg free
 34109  012782  C001  F0A1         	movff	?i2__div_to_l_,i2printf@val
 34110  012786  C002  F0A2         	movff	?i2__div_to_l_+1,i2printf@val+1
 34111  01278A  C003  F0A3         	movff	?i2__div_to_l_+2,i2printf@val+2
 34112  01278E  C004  F0A4         	movff	?i2__div_to_l_+3,i2printf@val+3
 34113                           
 34114                           ;doprnt.c: 1129: fval = 0.0;
 34115  012792  0E00               	movlw	0
 34116  012794  0100               	movlb	0	; () banked
 34117  012796  6FA5               	movwf	i2printf@fval& (0+255),b
 34118  012798  0E00               	movlw	0
 34119  01279A  6FA6               	movwf	(i2printf@fval+1)& (0+255),b
 34120  01279C  0E00               	movlw	0
 34121  01279E  6FA7               	movwf	(i2printf@fval+2)& (0+255),b
 34122  0127A0  0E00               	movlw	0
 34123  0127A2  6FA8               	movwf	(i2printf@fval+3)& (0+255),b
 34124                           
 34125                           ;doprnt.c: 1130: } else {
 34126  0127A4  D03C               	goto	i2l1592
 34127  0127A6                     i2l1583:
 34128                           
 34129                           ; BSR set to: 0
 34130                           ;doprnt.c: 1131: val = (unsigned long)fval;
 34131                           
 34132                           ; BSR set to: 0
 34133  0127A6  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 34134  0127AA  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 34135  0127AE  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 34136  0127B2  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 34137  0127B6  EC00  F0BE         	call	i2___fltol	;wreg free
 34138  0127BA  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 34139  0127BE  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 34140  0127C2  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 34141  0127C6  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 34142                           
 34143                           ;doprnt.c: 1132: fval -= (double)val;
 34144  0127CA  C0A5  F080         	movff	i2printf@fval,i2___flsub@b
 34145  0127CE  C0A6  F081         	movff	i2printf@fval+1,i2___flsub@b+1
 34146  0127D2  C0A7  F082         	movff	i2printf@fval+2,i2___flsub@b+2
 34147  0127D6  C0A8  F083         	movff	i2printf@fval+3,i2___flsub@b+3
 34148  0127DA  C0A1  F005         	movff	i2printf@val,i2___xxtofl@val
 34149  0127DE  C0A2  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 34150  0127E2  C0A3  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 34151  0127E6  C0A4  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 34152  0127EA  0E00               	movlw	0
 34153  0127EC  EC4C  F0B7         	call	i2___xxtofl
 34154  0127F0  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 34155  0127F4  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 34156  0127F8  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 34157  0127FC  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 34158  012800  EC57  F0C6         	call	i2___flsub	;wreg free
 34159  012804  C080  F0A5         	movff	?i2___flsub,i2printf@fval
 34160  012808  C081  F0A6         	movff	?i2___flsub+1,i2printf@fval+1
 34161  01280C  C082  F0A7         	movff	?i2___flsub+2,i2printf@fval+2
 34162  012810  C083  F0A8         	movff	?i2___flsub+3,i2printf@fval+3
 34163                           
 34164                           ;doprnt.c: 1133: exp = 0;
 34165  012814  0E00               	movlw	0
 34166  012816  0100               	movlb	0	; () banked
 34167  012818  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 34168  01281A  0E00               	movlw	0
 34169  01281C  6F9F               	movwf	i2printf@exp& (0+255),b
 34170  01281E                     i2l1592:
 34171                           
 34172                           ; BSR set to: 0
 34173                           ;doprnt.c: 1134: }
 34174                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 34175                           
 34176                           ; BSR set to: 0
 34177  01281E  0E01               	movlw	1
 34178  012820  6FAF               	movwf	i2printf@c& (0+255),b
 34179  012822                     i2l15208:
 34180                           
 34181                           ; BSR set to: 0
 34182  012822  0E0A               	movlw	10
 34183  012824  19AF               	xorwf	i2printf@c& (0+255),w,b
 34184  012826  B4D8               	btfsc	status,2,c
 34185  012828  D01B               	goto	i2u1889_40
 34186                           
 34187                           ; BSR set to: 0
 34188                           ;doprnt.c: 1137: if(val < dpowers[c])
 34189                           
 34190                           ; BSR set to: 0
 34191                           
 34192                           ; BSR set to: 0
 34193  01282A  51AF               	movf	i2printf@c& (0+255),w,b
 34194  01282C  0D04               	mullw	4
 34195  01282E  0EAB               	movlw	low _dpowers
 34196  012830  24F3               	addwf	prodl,w,c
 34197  012832  6EF6               	movwf	tblptrl,c
 34198  012834  0ED8               	movlw	high _dpowers
 34199  012836  20F4               	addwfc	prodh,w,c
 34200  012838  6EF7               	movwf	tblptrh,c
 34201  01283A                     	if	1	;There are 3 active tblptr bytes
 34202  01283A  6AF8               	clrf	tblptru,c
 34203  01283C  0E00               	movlw	low (__mediumconst shr (0+16))
 34204  01283E  22F8               	addwfc	tblptru,f,c
 34205  012840                     	endif
 34206  012840  0009               	tblrd		*+
 34207  012842  50F5               	movf	tablat,w,c
 34208  012844  5DA1               	subwf	i2printf@val& (0+255),w,b
 34209  012846  0009               	tblrd		*+
 34210  012848  50F5               	movf	tablat,w,c
 34211  01284A  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 34212  01284C  0009               	tblrd		*+
 34213  01284E  50F5               	movf	tablat,w,c
 34214  012850  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 34215  012852  0009               	tblrd		*+
 34216  012854  50F5               	movf	tablat,w,c
 34217  012856  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 34218  012858  A0D8               	btfss	status,0,c
 34219  01285A  D002               	goto	i2u1889_40
 34220                           
 34221                           ; BSR set to: 0
 34222                           
 34223                           ; BSR set to: 0
 34224                           
 34225                           ; BSR set to: 0
 34226                           ;doprnt.c: 1138: break;
 34227  01285C  2BAF               	incf	i2printf@c& (0+255),f,b
 34228  01285E  D7E1               	goto	i2l15208
 34229  012860                     i2u1889_40:
 34230                           
 34231                           ; BSR set to: 0
 34232                           ;doprnt.c: 1142: width -= prec + c + exp;
 34233                           
 34234                           ; BSR set to: 0
 34235  012860  C0AF  F08A         	movff	i2printf@c,??i2_printf
 34236  012864  6B8B               	clrf	(??i2_printf+1)& (0+255),b
 34237  012866  BF8A               	btfsc	??i2_printf& (0+255),7,b
 34238  012868  078B               	decf	(??i2_printf+1)& (0+255),f,b
 34239  01286A  51AD               	movf	i2printf@prec& (0+255),w,b
 34240  01286C  278A               	addwf	??i2_printf& (0+255),f,b
 34241  01286E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34242  012870  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 34243  012872  519F               	movf	i2printf@exp& (0+255),w,b
 34244  012874  278A               	addwf	??i2_printf& (0+255),f,b
 34245  012876  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 34246  012878  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 34247  01287A  518A               	movf	??i2_printf& (0+255),w,b
 34248  01287C  5FAB               	subwf	i2printf@width& (0+255),f,b
 34249  01287E  518B               	movf	(??i2_printf+1)& (0+255),w,b
 34250  012880  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 34251                           
 34252                           ;doprnt.c: 1143: if(
 34253                           ;doprnt.c: 1147: prec)
 34254  012882  51AD               	movf	i2printf@prec& (0+255),w,b
 34255  012884  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 34256  012886  B4D8               	btfsc	status,2,c
 34257  012888  D003               	goto	i2l1596
 34258                           
 34259                           ; BSR set to: 0
 34260                           ;doprnt.c: 1148: width--;
 34261  01288A  07AB               	decf	i2printf@width& (0+255),f,b
 34262  01288C  A0D8               	btfss	status,0,c
 34263  01288E  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34264  012890                     i2l1596:
 34265                           
 34266                           ; BSR set to: 0
 34267                           ;doprnt.c: 1149: if(flag & 0x03)
 34268                           
 34269                           ; BSR set to: 0
 34270  012890  0E03               	movlw	3
 34271  012892  15A9               	andwf	i2printf@flag& (0+255),w,b
 34272  012894  6F8A               	movwf	??i2_printf& (0+255),b
 34273  012896  0E00               	movlw	0
 34274  012898  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34275  01289A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34276  01289C  518A               	movf	??i2_printf& (0+255),w,b
 34277  01289E  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 34278  0128A0  B4D8               	btfsc	status,2,c
 34279  0128A2  D003               	goto	i2l1597
 34280                           
 34281                           ; BSR set to: 0
 34282                           ;doprnt.c: 1150: width--;
 34283  0128A4  07AB               	decf	i2printf@width& (0+255),f,b
 34284  0128A6  A0D8               	btfss	status,0,c
 34285  0128A8  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34286  0128AA                     i2l1597:
 34287                           
 34288                           ; BSR set to: 0
 34289                           ;doprnt.c: 1153: if(flag & 0x04) {
 34290                           
 34291                           ; BSR set to: 0
 34292  0128AA  A5A9               	btfss	i2printf@flag& (0+255),2,b
 34293  0128AC  D025               	goto	i2l1604
 34294                           
 34295                           ; BSR set to: 0
 34296                           ;doprnt.c: 1157: if(flag & 0x03)
 34297  0128AE  0E03               	movlw	3
 34298  0128B0  15A9               	andwf	i2printf@flag& (0+255),w,b
 34299  0128B2  6F8A               	movwf	??i2_printf& (0+255),b
 34300  0128B4  0E00               	movlw	0
 34301  0128B6  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34302  0128B8  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34303  0128BA  518A               	movf	??i2_printf& (0+255),w,b
 34304  0128BC  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 34305  0128BE  B4D8               	btfsc	status,2,c
 34306  0128C0  D00B               	goto	i2l1600
 34307                           
 34308                           ; BSR set to: 0
 34309                           ;doprnt.c: 1159: (putch('-') );
 34310  0128C2  0E2D               	movlw	45
 34311  0128C4  EC16  F0CA         	call	i2_putch
 34312                           
 34313                           ;doprnt.c: 1168: while(width > 0) {
 34314  0128C8  D007               	goto	i2l1600
 34315  0128CA                     i2l15234:
 34316                           
 34317                           ;doprnt.c: 1169: (putch('0') );
 34318  0128CA  0E30               	movlw	48
 34319  0128CC  EC16  F0CA         	call	i2_putch
 34320                           
 34321                           ;doprnt.c: 1170: width--;
 34322  0128D0  0100               	movlb	0	; () banked
 34323  0128D2  07AB               	decf	i2printf@width& (0+255),f,b
 34324  0128D4  A0D8               	btfss	status,0,c
 34325  0128D6  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34326  0128D8                     i2l1600:
 34327                           
 34328                           ; BSR set to: 0
 34329  0128D8  0100               	movlb	0	; () banked
 34330  0128DA  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 34331  0128DC  D06B               	goto	i2l1608
 34332  0128DE  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 34333  0128E0  E1F4               	bnz	i2l15234
 34334  0128E2  05AB               	decf	i2printf@width& (0+255),w,b
 34335  0128E4  A0D8               	btfss	status,0,c
 34336  0128E6  D066               	goto	i2l1608
 34337  0128E8  D7F0               	goto	i2l1601
 34338  0128EA                     i2l15240:
 34339                           
 34340                           ; BSR set to: 0
 34341                           ;doprnt.c: 1181: (putch(' ') );
 34342  0128EA  0E20               	movlw	32
 34343  0128EC  EC16  F0CA         	call	i2_putch
 34344                           
 34345                           ;doprnt.c: 1182: width--;
 34346  0128F0  0100               	movlb	0	; () banked
 34347  0128F2  07AB               	decf	i2printf@width& (0+255),f,b
 34348  0128F4  A0D8               	btfss	status,0,c
 34349  0128F6  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34350  0128F8                     i2l1604:
 34351                           
 34352                           ; BSR set to: 0
 34353                           
 34354                           ; BSR set to: 0
 34355  0128F8  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 34356  0128FA  D005               	goto	i2u1895_40
 34357  0128FC  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 34358  0128FE  E1F5               	bnz	i2l15240
 34359  012900  05AB               	decf	i2printf@width& (0+255),w,b
 34360  012902  B0D8               	btfsc	status,0,c
 34361  012904  D7F2               	goto	i2l1605
 34362  012906                     i2u1895_40:
 34363                           
 34364                           ; BSR set to: 0
 34365                           ;doprnt.c: 1183: }
 34366                           ;doprnt.c: 1188: if(flag & 0x03)
 34367                           
 34368                           ; BSR set to: 0
 34369  012906  0E03               	movlw	3
 34370  012908  15A9               	andwf	i2printf@flag& (0+255),w,b
 34371  01290A  6F8A               	movwf	??i2_printf& (0+255),b
 34372  01290C  0E00               	movlw	0
 34373  01290E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34374  012910  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34375  012912  518A               	movf	??i2_printf& (0+255),w,b
 34376  012914  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 34377  012916  B4D8               	btfsc	status,2,c
 34378  012918  D04D               	goto	i2l1608
 34379                           
 34380                           ; BSR set to: 0
 34381                           ;doprnt.c: 1190: (putch('-') );
 34382  01291A  0E2D               	movlw	45
 34383  01291C  EC16  F0CA         	call	i2_putch
 34384                           
 34385                           ;doprnt.c: 1195: }
 34386                           ;doprnt.c: 1196: while(c--) {
 34387  012920  D049               	goto	i2l1608
 34388  012922                     
 34389                           ;doprnt.c: 1200: {
 34390                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 34391  012922  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 34392  012926  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 34393  01292A  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 34394  01292E  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 34395  012932  0100               	movlb	0	; () banked
 34396  012934  51AF               	movf	i2printf@c& (0+255),w,b
 34397  012936  0D04               	mullw	4
 34398  012938  0EAB               	movlw	low _dpowers
 34399  01293A  24F3               	addwf	prodl,w,c
 34400  01293C  6EF6               	movwf	tblptrl,c
 34401  01293E  0ED8               	movlw	high _dpowers
 34402  012940  20F4               	addwfc	prodh,w,c
 34403  012942  6EF7               	movwf	tblptrh,c
 34404  012944                     	if	1	;There are 3 active tblptr bytes
 34405  012944  6AF8               	clrf	tblptru,c
 34406  012946  0E00               	movlw	low (__mediumconst shr (0+16))
 34407  012948  22F8               	addwfc	tblptru,f,c
 34408  01294A                     	endif
 34409  01294A  0009               	tblrd		*+
 34410  01294C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 34411  012950  0009               	tblrd		*+
 34412  012952  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 34413  012956  0009               	tblrd		*+
 34414  012958  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 34415  01295C  000A               	tblrd		*-
 34416  01295E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 34417  012962  ECF0  F0C1         	call	i2___lldiv	;wreg free
 34418  012966  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 34419  01296A  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 34420  01296E  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 34421  012972  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 34422                           
 34423                           ;doprnt.c: 1202: tmpval.vd %= 10;
 34424  012976  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 34425  01297A  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 34426  01297E  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 34427  012982  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 34428  012986  0E0A               	movlw	10
 34429  012988  6E12               	movwf	i2___llmod@divisor,c
 34430  01298A  0E00               	movlw	0
 34431  01298C  6E13               	movwf	i2___llmod@divisor+1,c
 34432  01298E  0E00               	movlw	0
 34433  012990  6E14               	movwf	i2___llmod@divisor+2,c
 34434  012992  0E00               	movlw	0
 34435  012994  6E15               	movwf	i2___llmod@divisor+3,c
 34436  012996  ECF1  F0C3         	call	i2___llmod	;wreg free
 34437  01299A  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 34438  01299E  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 34439  0129A2  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 34440  0129A6  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 34441                           
 34442                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 34443  0129AA  0100               	movlb	0	; () banked
 34444  0129AC  519B               	movf	i2printf@tmpval& (0+255),w,b
 34445  0129AE  0F30               	addlw	48
 34446  0129B0  EC16  F0CA         	call	i2_putch
 34447  0129B4                     i2l1608:
 34448  0129B4  0100               	movlb	0	; () banked
 34449  0129B6  07AF               	decf	i2printf@c& (0+255),f,b
 34450  0129B8  29AF               	incf	i2printf@c& (0+255),w,b
 34451  0129BA  B4D8               	btfsc	status,2,c
 34452  0129BC  D008               	goto	i2l1611
 34453  0129BE  D7B1               	goto	i2l1609
 34454  0129C0                     i2l15258:
 34455                           
 34456                           ; BSR set to: 0
 34457                           ;doprnt.c: 1208: (putch('0') );
 34458  0129C0  0E30               	movlw	48
 34459  0129C2  EC16  F0CA         	call	i2_putch
 34460                           
 34461                           ;doprnt.c: 1209: exp--;
 34462  0129C6  0100               	movlb	0	; () banked
 34463  0129C8  079F               	decf	i2printf@exp& (0+255),f,b
 34464  0129CA  A0D8               	btfss	status,0,c
 34465  0129CC  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 34466  0129CE                     i2l1611:
 34467                           
 34468                           ; BSR set to: 0
 34469                           
 34470                           ; BSR set to: 0
 34471  0129CE  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 34472  0129D0  D005               	goto	i2u1898_40
 34473  0129D2  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 34474  0129D4  E1F5               	bnz	i2l15258
 34475  0129D6  059F               	decf	i2printf@exp& (0+255),w,b
 34476  0129D8  B0D8               	btfsc	status,0,c
 34477  0129DA  D7F2               	goto	i2l1612
 34478  0129DC                     i2u1898_40:
 34479                           
 34480                           ; BSR set to: 0
 34481                           ;doprnt.c: 1210: }
 34482                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 34483                           
 34484                           ; BSR set to: 0
 34485  0129DC  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 34486  0129DE  D009               	goto	i2l1614
 34487  0129E0  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34488  0129E2  E104               	bnz	i2u1899_40
 34489  0129E4  0E09               	movlw	9
 34490  0129E6  5DAD               	subwf	i2printf@prec& (0+255),w,b
 34491  0129E8  A0D8               	btfss	status,0,c
 34492  0129EA  D003               	goto	i2l1614
 34493  0129EC                     i2u1899_40:
 34494                           
 34495                           ; BSR set to: 0
 34496                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 34497  0129EC  0E08               	movlw	8
 34498  0129EE  6FAF               	movwf	i2printf@c& (0+255),b
 34499  0129F0  D002               	goto	i2l1615
 34500  0129F2                     i2l1614:
 34501                           
 34502                           ; BSR set to: 0
 34503                           ;doprnt.c: 1213: else
 34504                           ;doprnt.c: 1214: c = prec;
 34505  0129F2  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 34506  0129F6                     i2l1615:
 34507                           
 34508                           ; BSR set to: 0
 34509                           ;doprnt.c: 1215: prec -= c;
 34510                           
 34511                           ; BSR set to: 0
 34512  0129F6  51AF               	movf	i2printf@c& (0+255),w,b
 34513  0129F8  5FAD               	subwf	i2printf@prec& (0+255),f,b
 34514  0129FA  0E00               	movlw	0
 34515  0129FC  BFAF               	btfsc	i2printf@c& (0+255),7,b
 34516  0129FE  0EFF               	movlw	255
 34517  012A00  5BAE               	subwfb	(i2printf@prec+1)& (0+255),f,b
 34518                           
 34519                           ; BSR set to: 0
 34520                           ;doprnt.c: 1219: if(c)
 34521  012A02  51AF               	movf	i2printf@c& (0+255),w,b
 34522  012A04  B4D8               	btfsc	status,2,c
 34523  012A06  D003               	goto	i2l1616
 34524                           
 34525                           ; BSR set to: 0
 34526                           ;doprnt.c: 1221: (putch('.') );
 34527  012A08  0E2E               	movlw	46
 34528  012A0A  EC16  F0CA         	call	i2_putch
 34529  012A0E                     i2l1616:
 34530                           
 34531                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 34532  012A0E  0100               	movlb	0	; () banked
 34533  012A10  51AF               	movf	i2printf@c& (0+255),w,b
 34534  012A12  ECDA  F09E         	call	i2_scale
 34535  012A16  C049  F090         	movff	?i2_scale,i2_printf$4376
 34536  012A1A  C04A  F091         	movff	?i2_scale+1,i2_printf$4376+1
 34537  012A1E  C04B  F092         	movff	?i2_scale+2,i2_printf$4376+2
 34538  012A22  C04C  F093         	movff	?i2_scale+3,i2_printf$4376+3
 34539                           
 34540                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 34541  012A26  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 34542  012A2A  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 34543  012A2E  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 34544  012A32  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 34545  012A36  C090  F030         	movff	i2_printf$4376,i2___flmul@b
 34546  012A3A  C091  F031         	movff	i2_printf$4376+1,i2___flmul@b+1
 34547  012A3E  C092  F032         	movff	i2_printf$4376+2,i2___flmul@b+2
 34548  012A42  C093  F033         	movff	i2_printf$4376+3,i2___flmul@b+3
 34549  012A46  EC77  F0A4         	call	i2___flmul	;wreg free
 34550  012A4A  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 34551  012A4E  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 34552  012A52  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 34553  012A56  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 34554  012A5A  EC00  F0BE         	call	i2___fltol	;wreg free
 34555  012A5E  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 34556  012A62  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 34557  012A66  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 34558  012A6A  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 34559                           
 34560                           ;doprnt.c: 1228: while(c--) {
 34561  012A6E  D073               	goto	i2l1617
 34562  012A70                     
 34563                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 34564  012A70  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 34565  012A74  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 34566  012A78  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 34567  012A7C  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 34568  012A80  0100               	movlb	0	; () banked
 34569  012A82  51AF               	movf	i2printf@c& (0+255),w,b
 34570  012A84  0D04               	mullw	4
 34571  012A86  0EAB               	movlw	low _dpowers
 34572  012A88  24F3               	addwf	prodl,w,c
 34573  012A8A  6EF6               	movwf	tblptrl,c
 34574  012A8C  0ED8               	movlw	high _dpowers
 34575  012A8E  20F4               	addwfc	prodh,w,c
 34576  012A90  6EF7               	movwf	tblptrh,c
 34577  012A92                     	if	1	;There are 3 active tblptr bytes
 34578  012A92  6AF8               	clrf	tblptru,c
 34579  012A94  0E00               	movlw	low (__mediumconst shr (0+16))
 34580  012A96  22F8               	addwfc	tblptru,f,c
 34581  012A98                     	endif
 34582  012A98  0009               	tblrd		*+
 34583  012A9A  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 34584  012A9E  0009               	tblrd		*+
 34585  012AA0  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 34586  012AA4  0009               	tblrd		*+
 34587  012AA6  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 34588  012AAA  000A               	tblrd		*-
 34589  012AAC  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 34590  012AB0  ECF0  F0C1         	call	i2___lldiv	;wreg free
 34591  012AB4  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 34592  012AB8  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 34593  012ABC  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 34594  012AC0  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 34595                           
 34596                           ;doprnt.c: 1230: tmpval.vd %= 10;
 34597  012AC4  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 34598  012AC8  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 34599  012ACC  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 34600  012AD0  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 34601  012AD4  0E0A               	movlw	10
 34602  012AD6  6E12               	movwf	i2___llmod@divisor,c
 34603  012AD8  0E00               	movlw	0
 34604  012ADA  6E13               	movwf	i2___llmod@divisor+1,c
 34605  012ADC  0E00               	movlw	0
 34606  012ADE  6E14               	movwf	i2___llmod@divisor+2,c
 34607  012AE0  0E00               	movlw	0
 34608  012AE2  6E15               	movwf	i2___llmod@divisor+3,c
 34609  012AE4  ECF1  F0C3         	call	i2___llmod	;wreg free
 34610  012AE8  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 34611  012AEC  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 34612  012AF0  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 34613  012AF4  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 34614                           
 34615                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 34616  012AF8  0100               	movlb	0	; () banked
 34617  012AFA  519B               	movf	i2printf@tmpval& (0+255),w,b
 34618  012AFC  0F30               	addlw	48
 34619  012AFE  EC16  F0CA         	call	i2_putch
 34620                           
 34621                           ;doprnt.c: 1232: val %= dpowers[c];
 34622  012B02  C0A1  F00E         	movff	i2printf@val,i2___llmod@dividend
 34623  012B06  C0A2  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 34624  012B0A  C0A3  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 34625  012B0E  C0A4  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 34626  012B12  0100               	movlb	0	; () banked
 34627  012B14  51AF               	movf	i2printf@c& (0+255),w,b
 34628  012B16  0D04               	mullw	4
 34629  012B18  0EAB               	movlw	low _dpowers
 34630  012B1A  24F3               	addwf	prodl,w,c
 34631  012B1C  6EF6               	movwf	tblptrl,c
 34632  012B1E  0ED8               	movlw	high _dpowers
 34633  012B20  20F4               	addwfc	prodh,w,c
 34634  012B22  6EF7               	movwf	tblptrh,c
 34635  012B24                     	if	1	;There are 3 active tblptr bytes
 34636  012B24  6AF8               	clrf	tblptru,c
 34637  012B26  0E00               	movlw	low (__mediumconst shr (0+16))
 34638  012B28  22F8               	addwfc	tblptru,f,c
 34639  012B2A                     	endif
 34640  012B2A  0009               	tblrd		*+
 34641  012B2C  CFF5 F012          	movff	tablat,i2___llmod@divisor
 34642  012B30  0009               	tblrd		*+
 34643  012B32  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 34644  012B36  0009               	tblrd		*+
 34645  012B38  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 34646  012B3C  000A               	tblrd		*-
 34647  012B3E  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 34648  012B42  ECF1  F0C3         	call	i2___llmod	;wreg free
 34649  012B46  C00E  F0A1         	movff	?i2___llmod,i2printf@val
 34650  012B4A  C00F  F0A2         	movff	?i2___llmod+1,i2printf@val+1
 34651  012B4E  C010  F0A3         	movff	?i2___llmod+2,i2printf@val+2
 34652  012B52  C011  F0A4         	movff	?i2___llmod+3,i2printf@val+3
 34653  012B56                     i2l1617:
 34654  012B56  0100               	movlb	0	; () banked
 34655  012B58  07AF               	decf	i2printf@c& (0+255),f,b
 34656  012B5A  29AF               	incf	i2printf@c& (0+255),w,b
 34657  012B5C  B4D8               	btfsc	status,2,c
 34658  012B5E  D008               	goto	i2l1620
 34659  012B60  D787               	goto	i2l1618
 34660  012B62                     
 34661                           ; BSR set to: 0
 34662                           ;doprnt.c: 1236: (putch('0') );
 34663                           
 34664                           ; BSR set to: 0
 34665  012B62  0E30               	movlw	48
 34666  012B64  EC16  F0CA         	call	i2_putch
 34667                           
 34668                           ;doprnt.c: 1237: prec--;
 34669  012B68  0100               	movlb	0	; () banked
 34670  012B6A  07AD               	decf	i2printf@prec& (0+255),f,b
 34671  012B6C  A0D8               	btfss	status,0,c
 34672  012B6E  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 34673  012B70                     i2l1620:
 34674                           
 34675                           ; BSR set to: 0
 34676                           
 34677                           ; BSR set to: 0
 34678  012B70  51AD               	movf	i2printf@prec& (0+255),w,b
 34679  012B72  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 34680  012B74  B4D8               	btfsc	status,2,c
 34681  012B76  D1BD               	goto	i2u1927_40
 34682  012B78  D7F4               	goto	i2l1621
 34683  012B7A                     i2l1574:
 34684                           
 34685                           ; BSR set to: 0
 34686                           ;doprnt.c: 1246: }
 34687                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 34688                           
 34689                           ; BSR set to: 0
 34690  012B7A  0EC0               	movlw	192
 34691  012B7C  15A9               	andwf	i2printf@flag& (0+255),w,b
 34692  012B7E  6F8A               	movwf	??i2_printf& (0+255),b
 34693  012B80  0E00               	movlw	0
 34694  012B82  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34695  012B84  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34696  012B86  518A               	movf	??i2_printf& (0+255),w,b
 34697  012B88  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 34698  012B8A  A4D8               	btfss	status,2,c
 34699  012B8C  D01E               	goto	i2l1623
 34700                           
 34701                           ; BSR set to: 0
 34702                           ;doprnt.c: 1253: {
 34703                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 34704  012B8E  C099  FFD9         	movff	i2printf@ap,fsr2l
 34705  012B92  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 34706  012B96  CFDE F0A1          	movff	postinc2,i2printf@val
 34707  012B9A  CFDD F0A2          	movff	postdec2,i2printf@val+1
 34708  012B9E  0E00               	movlw	0
 34709  012BA0  BFA2               	btfsc	(i2printf@val+1)& (0+255),7,b
 34710  012BA2  0EFF               	movlw	-1
 34711  012BA4  6FA3               	movwf	(i2printf@val+2)& (0+255),b
 34712  012BA6  6FA4               	movwf	(i2printf@val+3)& (0+255),b
 34713                           
 34714                           ; BSR set to: 0
 34715  012BA8  0E02               	movlw	2
 34716  012BAA  2799               	addwf	i2printf@ap& (0+255),f,b
 34717  012BAC  0E00               	movlw	0
 34718  012BAE  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 34719                           
 34720                           ; BSR set to: 0
 34721                           ;doprnt.c: 1261: if((long)val < 0) {
 34722  012BB0  AFA4               	btfss	(i2printf@val+3)& (0+255),7,b
 34723  012BB2  D01D               	goto	i2l1625
 34724                           
 34725                           ; BSR set to: 0
 34726                           ;doprnt.c: 1262: flag |= 0x03;
 34727  012BB4  0E03               	movlw	3
 34728  012BB6  13A9               	iorwf	i2printf@flag& (0+255),f,b
 34729                           
 34730                           ; BSR set to: 0
 34731                           ;doprnt.c: 1263: val = -val;
 34732  012BB8  1FA4               	comf	(i2printf@val+3)& (0+255),f,b
 34733  012BBA  1FA3               	comf	(i2printf@val+2)& (0+255),f,b
 34734  012BBC  1FA2               	comf	(i2printf@val+1)& (0+255),f,b
 34735  012BBE  6DA1               	negf	i2printf@val& (0+255),b
 34736  012BC0  0E00               	movlw	0
 34737  012BC2  23A2               	addwfc	(i2printf@val+1)& (0+255),f,b
 34738  012BC4  23A3               	addwfc	(i2printf@val+2)& (0+255),f,b
 34739  012BC6  23A4               	addwfc	(i2printf@val+3)& (0+255),f,b
 34740                           
 34741                           ; BSR set to: 0
 34742                           ;doprnt.c: 1264: }
 34743                           ;doprnt.c: 1266: }
 34744  012BC8  D012               	goto	i2l1625
 34745  012BCA                     i2l1623:
 34746                           
 34747                           ; BSR set to: 0
 34748                           ;doprnt.c: 1268: else
 34749                           ;doprnt.c: 1273: {
 34750                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 34751                           
 34752                           ; BSR set to: 0
 34753  012BCA  C099  FFD9         	movff	i2printf@ap,fsr2l
 34754  012BCE  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 34755  012BD2  CFDE F08A          	movff	postinc2,??i2_printf
 34756  012BD6  CFDD F08B          	movff	postdec2,??i2_printf+1
 34757  012BDA  C08A  F0A1         	movff	??i2_printf,i2printf@val
 34758  012BDE  C08B  F0A2         	movff	??i2_printf+1,i2printf@val+1
 34759  012BE2  6BA3               	clrf	(i2printf@val+2)& (0+255),b
 34760  012BE4  6BA4               	clrf	(i2printf@val+3)& (0+255),b
 34761                           
 34762                           ; BSR set to: 0
 34763  012BE6  0E02               	movlw	2
 34764  012BE8  2799               	addwf	i2printf@ap& (0+255),f,b
 34765  012BEA  0E00               	movlw	0
 34766  012BEC  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 34767  012BEE                     i2l1625:
 34768                           
 34769                           ; BSR set to: 0
 34770                           ;doprnt.c: 1287: }
 34771                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 34772                           
 34773                           ; BSR set to: 0
 34774  012BEE  51AD               	movf	i2printf@prec& (0+255),w,b
 34775  012BF0  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 34776  012BF2  A4D8               	btfss	status,2,c
 34777  012BF4  D04B               	goto	i2l1627
 34778                           
 34779                           ; BSR set to: 0
 34780  012BF6  51A1               	movf	i2printf@val& (0+255),w,b
 34781  012BF8  11A2               	iorwf	(i2printf@val+1)& (0+255),w,b
 34782  012BFA  11A3               	iorwf	(i2printf@val+2)& (0+255),w,b
 34783  012BFC  11A4               	iorwf	(i2printf@val+3)& (0+255),w,b
 34784  012BFE  A4D8               	btfss	status,2,c
 34785  012C00  D045               	goto	i2l1627
 34786                           
 34787                           ; BSR set to: 0
 34788                           ;doprnt.c: 1291: prec++;
 34789  012C02  4BAD               	infsnz	i2printf@prec& (0+255),f,b
 34790  012C04  2BAE               	incf	(i2printf@prec+1)& (0+255),f,b
 34791                           
 34792                           ; BSR set to: 0
 34793                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 34794  012C06  D042               	goto	i2l1627
 34795  012C08                     
 34796                           ; BSR set to: 0
 34797                           ;doprnt.c: 1302: case 0xC0:
 34798                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 34799                           
 34800                           ; BSR set to: 0
 34801                           
 34802                           ; BSR set to: 0
 34803  012C08  0E01               	movlw	1
 34804  012C0A  6FAF               	movwf	i2printf@c& (0+255),b
 34805  012C0C                     i2l15318:
 34806                           
 34807                           ; BSR set to: 0
 34808  012C0C  0E0A               	movlw	10
 34809  012C0E  19AF               	xorwf	i2printf@c& (0+255),w,b
 34810  012C10  B4D8               	btfsc	status,2,c
 34811  012C12  D047               	goto	i2l1633
 34812                           
 34813                           ; BSR set to: 0
 34814                           ;doprnt.c: 1306: if(val < dpowers[c])
 34815                           
 34816                           ; BSR set to: 0
 34817                           
 34818                           ; BSR set to: 0
 34819  012C14  51AF               	movf	i2printf@c& (0+255),w,b
 34820  012C16  0D04               	mullw	4
 34821  012C18  0EAB               	movlw	low _dpowers
 34822  012C1A  24F3               	addwf	prodl,w,c
 34823  012C1C  6EF6               	movwf	tblptrl,c
 34824  012C1E  0ED8               	movlw	high _dpowers
 34825  012C20  20F4               	addwfc	prodh,w,c
 34826  012C22  6EF7               	movwf	tblptrh,c
 34827  012C24                     	if	1	;There are 3 active tblptr bytes
 34828  012C24  6AF8               	clrf	tblptru,c
 34829  012C26  0E00               	movlw	low (__mediumconst shr (0+16))
 34830  012C28  22F8               	addwfc	tblptru,f,c
 34831  012C2A                     	endif
 34832  012C2A  0009               	tblrd		*+
 34833  012C2C  50F5               	movf	tablat,w,c
 34834  012C2E  5DA1               	subwf	i2printf@val& (0+255),w,b
 34835  012C30  0009               	tblrd		*+
 34836  012C32  50F5               	movf	tablat,w,c
 34837  012C34  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 34838  012C36  0009               	tblrd		*+
 34839  012C38  50F5               	movf	tablat,w,c
 34840  012C3A  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 34841  012C3C  0009               	tblrd		*+
 34842  012C3E  50F5               	movf	tablat,w,c
 34843  012C40  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 34844  012C42  A0D8               	btfss	status,0,c
 34845  012C44  D02E               	goto	i2l1633
 34846                           
 34847                           ; BSR set to: 0
 34848                           
 34849                           ; BSR set to: 0
 34850                           
 34851                           ; BSR set to: 0
 34852                           ;doprnt.c: 1307: break;
 34853  012C46  2BAF               	incf	i2printf@c& (0+255),f,b
 34854  012C48  D7E1               	goto	i2l15318
 34855  012C4A                     
 34856                           ; BSR set to: 0
 34857                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 34858                           
 34859                           ; BSR set to: 0
 34860  012C4A  0E01               	movlw	1
 34861  012C4C  6FAF               	movwf	i2printf@c& (0+255),b
 34862  012C4E                     i2l15332:
 34863                           
 34864                           ; BSR set to: 0
 34865  012C4E  0E08               	movlw	8
 34866  012C50  19AF               	xorwf	i2printf@c& (0+255),w,b
 34867  012C52  B4D8               	btfsc	status,2,c
 34868  012C54  D026               	goto	i2l1633
 34869                           
 34870                           ; BSR set to: 0
 34871                           ;doprnt.c: 1317: if(val < hexpowers[c])
 34872                           
 34873                           ; BSR set to: 0
 34874                           
 34875                           ; BSR set to: 0
 34876  012C56  51AF               	movf	i2printf@c& (0+255),w,b
 34877  012C58  0D04               	mullw	4
 34878  012C5A  0ED3               	movlw	low _hexpowers
 34879  012C5C  24F3               	addwf	prodl,w,c
 34880  012C5E  6EF6               	movwf	tblptrl,c
 34881  012C60  0ED8               	movlw	high _hexpowers
 34882  012C62  20F4               	addwfc	prodh,w,c
 34883  012C64  6EF7               	movwf	tblptrh,c
 34884  012C66                     	if	1	;There are 3 active tblptr bytes
 34885  012C66  6AF8               	clrf	tblptru,c
 34886  012C68  0E00               	movlw	low (__mediumconst shr (0+16))
 34887  012C6A  22F8               	addwfc	tblptru,f,c
 34888  012C6C                     	endif
 34889  012C6C  0009               	tblrd		*+
 34890  012C6E  50F5               	movf	tablat,w,c
 34891  012C70  5DA1               	subwf	i2printf@val& (0+255),w,b
 34892  012C72  0009               	tblrd		*+
 34893  012C74  50F5               	movf	tablat,w,c
 34894  012C76  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 34895  012C78  0009               	tblrd		*+
 34896  012C7A  50F5               	movf	tablat,w,c
 34897  012C7C  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 34898  012C7E  0009               	tblrd		*+
 34899  012C80  50F5               	movf	tablat,w,c
 34900  012C82  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 34901  012C84  A0D8               	btfss	status,0,c
 34902  012C86  D00D               	goto	i2l1633
 34903                           
 34904                           ; BSR set to: 0
 34905                           
 34906                           ; BSR set to: 0
 34907                           
 34908                           ; BSR set to: 0
 34909                           ;doprnt.c: 1318: break;
 34910  012C88  2BAF               	incf	i2printf@c& (0+255),f,b
 34911  012C8A  D7E1               	goto	i2l15332
 34912  012C8C                     i2l1627:
 34913                           
 34914                           ; BSR set to: 0
 34915                           
 34916                           ; BSR set to: 0
 34917  012C8C  51A9               	movf	i2printf@flag& (0+255),w,b
 34918  012C8E  0BC0               	andlw	192
 34919                           
 34920                           ; Switch size 1, requested type "space"
 34921                           ; Number of cases is 3, Range of values is 0 to 192
 34922                           ; switch strategies available:
 34923                           ; Name         Instructions Cycles
 34924                           ; simple_byte           10     6 (average)
 34925                           ;	Chosen strategy is simple_byte
 34926  012C90  0A00               	xorlw	0	; case 0
 34927  012C92  B4D8               	btfsc	status,2,c
 34928  012C94  D7B9               	goto	i2l1628
 34929  012C96  0A80               	xorlw	128	; case 128
 34930  012C98  B4D8               	btfsc	status,2,c
 34931  012C9A  D7D7               	goto	i2l1634
 34932  012C9C  0A40               	xorlw	64	; case 192
 34933  012C9E  B4D8               	btfsc	status,2,c
 34934  012CA0  D7B3               	goto	i2l1628
 34935  012CA2                     i2l1633:
 34936                           
 34937                           ; BSR set to: 0
 34938                           ;doprnt.c: 1339: if(c < prec)
 34939                           
 34940                           ; BSR set to: 0
 34941  012CA2  0E80               	movlw	128
 34942  012CA4  BFAF               	btfsc	i2printf@c& (0+255),7,b
 34943  012CA6  0E7F               	movlw	127
 34944  012CA8  6F8A               	movwf	??i2_printf& (0+255),b
 34945  012CAA  51AD               	movf	i2printf@prec& (0+255),w,b
 34946  012CAC  5DAF               	subwf	i2printf@c& (0+255),w,b
 34947  012CAE  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34948  012CB0  0A80               	xorlw	128
 34949  012CB2  598A               	subwfb	??i2_printf& (0+255),w,b
 34950  012CB4  B0D8               	btfsc	status,0,c
 34951  012CB6  D003               	goto	i2l1638
 34952                           
 34953                           ; BSR set to: 0
 34954                           ;doprnt.c: 1340: c = prec;
 34955  012CB8  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 34956  012CBC  D010               	goto	i2l1640
 34957  012CBE                     i2l1638:
 34958                           
 34959                           ; BSR set to: 0
 34960                           ;doprnt.c: 1341: else if(prec < c)
 34961                           
 34962                           ; BSR set to: 0
 34963  012CBE  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34964  012CC0  0A80               	xorlw	128
 34965  012CC2  6F8A               	movwf	??i2_printf& (0+255),b
 34966  012CC4  51AF               	movf	i2printf@c& (0+255),w,b
 34967  012CC6  5DAD               	subwf	i2printf@prec& (0+255),w,b
 34968  012CC8  0E80               	movlw	128
 34969  012CCA  BFAF               	btfsc	i2printf@c& (0+255),7,b
 34970  012CCC  0E7F               	movlw	127
 34971  012CCE  598A               	subwfb	??i2_printf& (0+255),w,b
 34972  012CD0  B0D8               	btfsc	status,0,c
 34973  012CD2  D005               	goto	i2l1640
 34974                           
 34975                           ; BSR set to: 0
 34976                           ;doprnt.c: 1342: prec = c;
 34977  012CD4  51AF               	movf	i2printf@c& (0+255),w,b
 34978  012CD6  6FAD               	movwf	i2printf@prec& (0+255),b
 34979  012CD8  6BAE               	clrf	(i2printf@prec+1)& (0+255),b
 34980  012CDA  BFAD               	btfsc	i2printf@prec& (0+255),7,b
 34981  012CDC  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 34982  012CDE                     i2l1640:
 34983                           
 34984                           ; BSR set to: 0
 34985                           ;doprnt.c: 1345: if(width && flag & 0x03)
 34986                           
 34987                           ; BSR set to: 0
 34988                           
 34989                           ; BSR set to: 0
 34990  012CDE  51AB               	movf	i2printf@width& (0+255),w,b
 34991  012CE0  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 34992  012CE2  B4D8               	btfsc	status,2,c
 34993  012CE4  D00D               	goto	i2l1641
 34994                           
 34995                           ; BSR set to: 0
 34996  012CE6  0E03               	movlw	3
 34997  012CE8  15A9               	andwf	i2printf@flag& (0+255),w,b
 34998  012CEA  6F8A               	movwf	??i2_printf& (0+255),b
 34999  012CEC  0E00               	movlw	0
 35000  012CEE  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 35001  012CF0  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35002  012CF2  518A               	movf	??i2_printf& (0+255),w,b
 35003  012CF4  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 35004  012CF6  B4D8               	btfsc	status,2,c
 35005  012CF8  D003               	goto	i2l1641
 35006                           
 35007                           ; BSR set to: 0
 35008                           ;doprnt.c: 1346: width--;
 35009  012CFA  07AB               	decf	i2printf@width& (0+255),f,b
 35010  012CFC  A0D8               	btfss	status,0,c
 35011  012CFE  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 35012  012D00                     i2l1641:
 35013                           
 35014                           ; BSR set to: 0
 35015                           ;doprnt.c: 1348: if(flag & 0x4000) {
 35016                           
 35017                           ; BSR set to: 0
 35018  012D00  ADAA               	btfss	(i2printf@flag+1)& (0+255),6,b
 35019  012D02  D013               	goto	i2l1644
 35020                           
 35021                           ; BSR set to: 0
 35022                           ;doprnt.c: 1349: if(width > prec)
 35023  012D04  51AB               	movf	i2printf@width& (0+255),w,b
 35024  012D06  5DAD               	subwf	i2printf@prec& (0+255),w,b
 35025  012D08  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 35026  012D0A  0A80               	xorlw	128
 35027  012D0C  6F8A               	movwf	??i2_printf& (0+255),b
 35028  012D0E  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 35029  012D10  0A80               	xorlw	128
 35030  012D12  598A               	subwfb	??i2_printf& (0+255),w,b
 35031  012D14  B0D8               	btfsc	status,0,c
 35032  012D16  D005               	goto	i2l1643
 35033                           
 35034                           ; BSR set to: 0
 35035                           ;doprnt.c: 1350: width -= prec;
 35036  012D18  51AD               	movf	i2printf@prec& (0+255),w,b
 35037  012D1A  5FAB               	subwf	i2printf@width& (0+255),f,b
 35038  012D1C  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 35039  012D1E  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 35040  012D20  D004               	goto	i2l1644
 35041  012D22                     i2l1643:
 35042                           
 35043                           ; BSR set to: 0
 35044                           ;doprnt.c: 1351: else
 35045                           ;doprnt.c: 1352: width = 0;
 35046                           
 35047                           ; BSR set to: 0
 35048  012D22  0E00               	movlw	0
 35049  012D24  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 35050  012D26  0E00               	movlw	0
 35051  012D28  6FAB               	movwf	i2printf@width& (0+255),b
 35052  012D2A                     i2l1644:
 35053                           
 35054                           ; BSR set to: 0
 35055                           ;doprnt.c: 1353: }
 35056                           ;doprnt.c: 1381: if(width > c)
 35057                           
 35058                           ; BSR set to: 0
 35059                           
 35060                           ; BSR set to: 0
 35061  012D2A  0E80               	movlw	128
 35062  012D2C  BFAF               	btfsc	i2printf@c& (0+255),7,b
 35063  012D2E  0E7F               	movlw	127
 35064  012D30  6F8A               	movwf	??i2_printf& (0+255),b
 35065  012D32  51AB               	movf	i2printf@width& (0+255),w,b
 35066  012D34  5DAF               	subwf	i2printf@c& (0+255),w,b
 35067  012D36  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 35068  012D38  0A80               	xorlw	128
 35069  012D3A  598A               	subwfb	??i2_printf& (0+255),w,b
 35070  012D3C  B0D8               	btfsc	status,0,c
 35071  012D3E  D007               	goto	i2l1645
 35072                           
 35073                           ; BSR set to: 0
 35074                           ;doprnt.c: 1382: width -= c;
 35075  012D40  51AF               	movf	i2printf@c& (0+255),w,b
 35076  012D42  5FAB               	subwf	i2printf@width& (0+255),f,b
 35077  012D44  0E00               	movlw	0
 35078  012D46  BFAF               	btfsc	i2printf@c& (0+255),7,b
 35079  012D48  0EFF               	movlw	255
 35080  012D4A  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 35081  012D4C  D004               	goto	i2l1646
 35082  012D4E                     i2l1645:
 35083                           
 35084                           ; BSR set to: 0
 35085                           ;doprnt.c: 1383: else
 35086                           ;doprnt.c: 1384: width = 0;
 35087                           
 35088                           ; BSR set to: 0
 35089  012D4E  0E00               	movlw	0
 35090  012D50  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 35091  012D52  0E00               	movlw	0
 35092  012D54  6FAB               	movwf	i2printf@width& (0+255),b
 35093  012D56                     i2l1646:
 35094                           
 35095                           ; BSR set to: 0
 35096                           ;doprnt.c: 1387: if(flag & 0x04) {
 35097                           
 35098                           ; BSR set to: 0
 35099  012D56  A5A9               	btfss	i2printf@flag& (0+255),2,b
 35100  012D58  D01A               	goto	i2l1647
 35101                           
 35102                           ; BSR set to: 0
 35103                           ;doprnt.c: 1392: if(flag & 0x03)
 35104  012D5A  0E03               	movlw	3
 35105  012D5C  15A9               	andwf	i2printf@flag& (0+255),w,b
 35106  012D5E  6F8A               	movwf	??i2_printf& (0+255),b
 35107  012D60  0E00               	movlw	0
 35108  012D62  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 35109  012D64  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35110  012D66  518A               	movf	??i2_printf& (0+255),w,b
 35111  012D68  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 35112  012D6A  B4D8               	btfsc	status,2,c
 35113  012D6C  D003               	goto	i2l1648
 35114                           
 35115                           ; BSR set to: 0
 35116                           ;doprnt.c: 1393: (putch('-') );
 35117  012D6E  0E2D               	movlw	45
 35118  012D70  EC16  F0CA         	call	i2_putch
 35119  012D74                     i2l1648:
 35120                           
 35121                           ;doprnt.c: 1415: if(width)
 35122  012D74  0100               	movlb	0	; () banked
 35123  012D76  51AB               	movf	i2printf@width& (0+255),w,b
 35124  012D78  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 35125  012D7A  B4D8               	btfsc	status,2,c
 35126  012D7C  D0B1               	goto	i2l1657
 35127                           
 35128                           ; BSR set to: 0
 35129                           ;doprnt.c: 1417: (putch('0') );
 35130                           
 35131                           ; BSR set to: 0
 35132                           
 35133                           ;doprnt.c: 1416: do
 35134  012D7E  0E30               	movlw	48
 35135  012D80  EC16  F0CA         	call	i2_putch
 35136                           
 35137                           ;doprnt.c: 1418: while(--width);
 35138  012D84  0100               	movlb	0	; () banked
 35139  012D86  07AB               	decf	i2printf@width& (0+255),f,b
 35140  012D88  A0D8               	btfss	status,0,c
 35141  012D8A  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 35142  012D8C  D7F4               	goto	L26
 35143  012D8E                     i2l1647:
 35144                           
 35145                           ; BSR set to: 0
 35146                           ;doprnt.c: 1422: {
 35147                           ;doprnt.c: 1424: if(width
 35148                           ;doprnt.c: 1428: )
 35149                           
 35150                           ; BSR set to: 0
 35151  012D8E  51AB               	movf	i2printf@width& (0+255),w,b
 35152  012D90  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 35153  012D92  B4D8               	btfsc	status,2,c
 35154  012D94  D00B               	goto	i2u1925_40
 35155  012D96                     i2u1924_40:
 35156                           
 35157                           ; BSR set to: 0
 35158                           ;doprnt.c: 1430: (putch(' ') );
 35159                           
 35160                           ; BSR set to: 0
 35161                           
 35162                           ;doprnt.c: 1429: do
 35163  012D96  0E20               	movlw	32
 35164  012D98  EC16  F0CA         	call	i2_putch
 35165                           
 35166                           ;doprnt.c: 1431: while(--width);
 35167  012D9C  0100               	movlb	0	; () banked
 35168  012D9E  07AB               	decf	i2printf@width& (0+255),f,b
 35169  012DA0  A0D8               	btfss	status,0,c
 35170  012DA2  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 35171  012DA4  51AB               	movf	i2printf@width& (0+255),w,b
 35172  012DA6  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 35173  012DA8  A4D8               	btfss	status,2,c
 35174  012DAA  D7F5               	goto	i2u1924_40
 35175  012DAC                     i2u1925_40:
 35176                           
 35177                           ; BSR set to: 0
 35178                           ;doprnt.c: 1438: if(flag & 0x03)
 35179                           
 35180                           ; BSR set to: 0
 35181                           
 35182                           ; BSR set to: 0
 35183  012DAC  0E03               	movlw	3
 35184  012DAE  15A9               	andwf	i2printf@flag& (0+255),w,b
 35185  012DB0  6F8A               	movwf	??i2_printf& (0+255),b
 35186  012DB2  0E00               	movlw	0
 35187  012DB4  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 35188  012DB6  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35189  012DB8  518A               	movf	??i2_printf& (0+255),w,b
 35190  012DBA  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 35191  012DBC  B4D8               	btfsc	status,2,c
 35192  012DBE  D090               	goto	i2l1657
 35193                           
 35194                           ; BSR set to: 0
 35195                           ;doprnt.c: 1439: (putch('-') );
 35196  012DC0  0E2D               	movlw	45
 35197  012DC2  EC16  F0CA         	call	i2_putch
 35198                           
 35199                           ;doprnt.c: 1469: }
 35200                           ;doprnt.c: 1474: while(prec--) {
 35201  012DC6  D08C               	goto	i2l1657
 35202  012DC8                     
 35203                           ;doprnt.c: 1486: case 0xC0:
 35204                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 35205  012DC8  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 35206  012DCC  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 35207  012DD0  0100               	movlb	0	; () banked
 35208  012DD2  90D8               	bcf	status,0,c
 35209  012DD4  378A               	rlcf	??i2_printf& (0+255),f,b
 35210  012DD6  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 35211  012DD8  90D8               	bcf	status,0,c
 35212  012DDA  378A               	rlcf	??i2_printf& (0+255),f,b
 35213  012DDC  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 35214  012DDE  0EAB               	movlw	low _dpowers
 35215  012DE0  258A               	addwf	??i2_printf& (0+255),w,b
 35216  012DE2  6EF6               	movwf	tblptrl,c
 35217  012DE4  0ED8               	movlw	high _dpowers
 35218  012DE6  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 35219  012DE8  6EF7               	movwf	tblptrh,c
 35220  012DEA                     	if	1	;There are 3 active tblptr bytes
 35221  012DEA  6AF8               	clrf	tblptru,c
 35222  012DEC  0E00               	movlw	low (__mediumconst shr (0+16))
 35223  012DEE  22F8               	addwfc	tblptru,f,c
 35224  012DF0                     	endif
 35225  012DF0  0009               	tblrd		*+
 35226  012DF2  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 35227  012DF6  0009               	tblrd		*+
 35228  012DF8  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 35229  012DFC  0009               	tblrd		*+
 35230  012DFE  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 35231  012E02  000A               	tblrd		*-
 35232  012E04  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 35233  012E08  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 35234  012E0C  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 35235  012E10  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 35236  012E14  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 35237  012E18  ECF0  F0C1         	call	i2___lldiv	;wreg free
 35238  012E1C  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 35239  012E20  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 35240  012E24  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 35241  012E28  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 35242  012E2C  0E0A               	movlw	10
 35243  012E2E  6E12               	movwf	i2___llmod@divisor,c
 35244  012E30  0E00               	movlw	0
 35245  012E32  6E13               	movwf	i2___llmod@divisor+1,c
 35246  012E34  0E00               	movlw	0
 35247  012E36  6E14               	movwf	i2___llmod@divisor+2,c
 35248  012E38  0E00               	movlw	0
 35249  012E3A  6E15               	movwf	i2___llmod@divisor+3,c
 35250  012E3C  ECF1  F0C3         	call	i2___llmod	;wreg free
 35251  012E40  500E               	movf	?i2___llmod,w,c
 35252  012E42  0F30               	addlw	48
 35253  012E44  0100               	movlb	0	; () banked
 35254  012E46  6FAF               	movwf	i2printf@c& (0+255),b
 35255                           
 35256                           ;doprnt.c: 1491: break;
 35257  012E48  D048               	goto	i2l1662
 35258  012E4A                     
 35259                           ; BSR set to: 0
 35260                           ;doprnt.c: 1499: {
 35261                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 35262                           
 35263                           ; BSR set to: 0
 35264  012E4A  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 35265  012E4E  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 35266  012E52  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 35267  012E56  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 35268  012E5A  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 35269  012E5E  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 35270  012E62  90D8               	bcf	status,0,c
 35271  012E64  378A               	rlcf	??i2_printf& (0+255),f,b
 35272  012E66  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 35273  012E68  90D8               	bcf	status,0,c
 35274  012E6A  378A               	rlcf	??i2_printf& (0+255),f,b
 35275  012E6C  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 35276  012E6E  0ED3               	movlw	low _hexpowers
 35277  012E70  258A               	addwf	??i2_printf& (0+255),w,b
 35278  012E72  6EF6               	movwf	tblptrl,c
 35279  012E74  0ED8               	movlw	high _hexpowers
 35280  012E76  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 35281  012E78  6EF7               	movwf	tblptrh,c
 35282  012E7A                     	if	1	;There are 3 active tblptr bytes
 35283  012E7A  6AF8               	clrf	tblptru,c
 35284  012E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 35285  012E7E  22F8               	addwfc	tblptru,f,c
 35286  012E80                     	endif
 35287  012E80  0009               	tblrd		*+
 35288  012E82  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 35289  012E86  0009               	tblrd		*+
 35290  012E88  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 35291  012E8C  0009               	tblrd		*+
 35292  012E8E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 35293  012E92  000A               	tblrd		*-
 35294  012E94  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 35295  012E98  ECF0  F0C1         	call	i2___lldiv	;wreg free
 35296  012E9C  5001               	movf	?i2___lldiv,w,c
 35297  012E9E  0B0F               	andlw	15
 35298  012EA0  0100               	movlb	0	; () banked
 35299  012EA2  6F94               	movwf	i2printf@idx& (0+255),b
 35300                           
 35301                           ; BSR set to: 0
 35302                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 35303  012EA4  5194               	movf	i2printf@idx& (0+255),w,b
 35304  012EA6  0D01               	mullw	1
 35305  012EA8  0E77               	movlw	low STR_165
 35306  012EAA  24F3               	addwf	prodl,w,c
 35307  012EAC  6EF6               	movwf	tblptrl,c
 35308  012EAE  0EFD               	movlw	high STR_165
 35309  012EB0  20F4               	addwfc	prodh,w,c
 35310  012EB2  6EF7               	movwf	tblptrh,c
 35311  012EB4                     	if	1	;There are 3 active tblptr bytes
 35312  012EB4  6AF8               	clrf	tblptru,c
 35313  012EB6  0E00               	movlw	low (__mediumconst shr (0+16))
 35314  012EB8  22F8               	addwfc	tblptru,f,c
 35315  012EBA                     	endif
 35316  012EBA  0008               	tblrd		*
 35317  012EBC  CFF5 F0AF          	movff	tablat,i2printf@c
 35318                           
 35319                           ; BSR set to: 0
 35320                           ;doprnt.c: 1523: }
 35321                           
 35322                           ;doprnt.c: 1508: }
 35323                           ;doprnt.c: 1510: break;
 35324  012EC0  D00C               	goto	i2l1662
 35325  012EC2                     i2l15406:
 35326  012EC2  0100               	movlb	0	; () banked
 35327  012EC4  51A9               	movf	i2printf@flag& (0+255),w,b
 35328  012EC6  0BC0               	andlw	192
 35329                           
 35330                           ; Switch size 1, requested type "space"
 35331                           ; Number of cases is 3, Range of values is 0 to 192
 35332                           ; switch strategies available:
 35333                           ; Name         Instructions Cycles
 35334                           ; simple_byte           10     6 (average)
 35335                           ;	Chosen strategy is simple_byte
 35336  012EC8  0A00               	xorlw	0	; case 0
 35337  012ECA  B4D8               	btfsc	status,2,c
 35338  012ECC  D77D               	goto	i2l1660
 35339  012ECE  0A80               	xorlw	128	; case 128
 35340  012ED0  B4D8               	btfsc	status,2,c
 35341  012ED2  D7BB               	goto	i2l1663
 35342  012ED4  0A40               	xorlw	64	; case 192
 35343  012ED6  B4D8               	btfsc	status,2,c
 35344  012ED8  D777               	goto	i2l1660
 35345  012EDA                     i2l1662:
 35346                           
 35347                           ; BSR set to: 0
 35348                           ;doprnt.c: 1524: (putch(c) );
 35349                           
 35350                           ; BSR set to: 0
 35351  012EDA  51AF               	movf	i2printf@c& (0+255),w,b
 35352  012EDC  EC16  F0CA         	call	i2_putch
 35353  012EE0                     i2l1657:
 35354  012EE0  0100               	movlb	0	; () banked
 35355  012EE2  07AD               	decf	i2printf@prec& (0+255),f,b
 35356  012EE4  A0D8               	btfss	status,0,c
 35357  012EE6  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 35358  012EE8  29AD               	incf	i2printf@prec& (0+255),w,b
 35359  012EEA  E1EB               	bnz	i2l15406
 35360  012EEC  29AE               	incf	(i2printf@prec+1)& (0+255),w,b
 35361  012EEE  A4D8               	btfss	status,2,c
 35362  012EF0  D7E8               	goto	i2l1659
 35363  012EF2                     i2u1927_40:
 35364                           
 35365                           ; BSR set to: 0
 35366                           
 35367                           ; BSR set to: 0
 35368  012EF2  0100               	movlb	0	; () banked
 35369  012EF4  5188               	movf	i2printf@f& (0+255),w,b
 35370  012EF6  6F8A               	movwf	??i2_printf& (0+255),b
 35371  012EF8  5189               	movf	(i2printf@f+1)& (0+255),w,b
 35372  012EFA  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35373  012EFC  4B88               	infsnz	i2printf@f& (0+255),f,b
 35374  012EFE  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 35375  012F00  C08A  FFF6         	movff	??i2_printf,tblptrl
 35376  012F04  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 35377  012F08  0E00               	movlw	low (__mediumconst shr (0+16))
 35378  012F0A  6EF8               	movwf	tblptru,c
 35379  012F0C  0E0D               	movlw	(high __ramtop+-1)
 35380  012F0E  64F7               	cpfsgt	tblptrh,c
 35381  012F10  D003               	bra	i2u1928_47
 35382  012F12  0008               	tblrd		*
 35383  012F14  50F5               	movf	tablat,w,c
 35384  012F16  D005               	bra	i2u1928_40
 35385  012F18                     i2u1928_47:
 35386  012F18  CFF6 FFE9          	movff	tblptrl,fsr0l
 35387  012F1C  CFF7 FFEA          	movff	tblptrh,fsr0h
 35388  012F20  50EF               	movf	indf0,w,c
 35389  012F22                     i2u1928_40:
 35390  012F22  0100               	movlb	0	; () banked
 35391  012F24  6FAF               	movwf	i2printf@c& (0+255),b
 35392  012F26  51AF               	movf	i2printf@c& (0+255),w,b
 35393  012F28  B4D8               	btfsc	status,2,c
 35394  012F2A  0012               	return	
 35395  012F2C  EFBD  F090         	goto	i2l1531
 35396  012F30                     __end_ofi2_printf:
 35397                           	opt stack 0
 35398                           tosu	equ	0xFFF
 35399                           tosh	equ	0xFFE
 35400                           tosl	equ	0xFFD
 35401                           pclatu	equ	0xFFB
 35402                           pclath	equ	0xFFA
 35403                           tblptru	equ	0xFF8
 35404                           tblptrh	equ	0xFF7
 35405                           tblptrl	equ	0xFF6
 35406                           tablat	equ	0xFF5
 35407                           prodh	equ	0xFF4
 35408                           prodl	equ	0xFF3
 35409                           intcon	equ	0xFF2
 35410                           indf0	equ	0xFEF
 35411                           postinc0	equ	0xFEE
 35412                           fsr0h	equ	0xFEA
 35413                           fsr0l	equ	0xFE9
 35414                           wreg	equ	0xFE8
 35415                           indf1	equ	0xFE7
 35416                           postdec1	equ	0xFE5
 35417                           plusw1	equ	0xFE3
 35418                           fsr1h	equ	0xFE2
 35419                           fsr1l	equ	0xFE1
 35420                           bsr	equ	0xFE0
 35421                           indf2	equ	0xFDF
 35422                           postinc2	equ	0xFDE
 35423                           postdec2	equ	0xFDD
 35424                           plusw2	equ	0xFDB
 35425                           fsr2h	equ	0xFDA
 35426                           fsr2l	equ	0xFD9
 35427                           status	equ	0xFD8
 35428                           
 35429 ;; *************** function i2_scale *****************
 35430 ;; Defined at:
 35431 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 35432 ;; Parameters:    Size  Location     Type
 35433 ;;  scl             1    wreg     char 
 35434 ;; Auto vars:     Size  Location     Type
 35435 ;;  scl             1   80[COMRAM] char 
 35436 ;; Return value:  Size  Location     Type
 35437 ;;                  4   72[COMRAM] char 
 35438 ;; Registers used:
 35439 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35440 ;; Tracked objects:
 35441 ;;		On entry : 0/0
 35442 ;;		On exit  : 0/0
 35443 ;;		Unchanged: 0/0
 35444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35446 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35448 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35449 ;;Total ram usage:        9 bytes
 35450 ;; Hardware stack levels used:    1
 35451 ;; Hardware stack levels required when called:    1
 35452 ;; This function calls:
 35453 ;;		i2___awdiv
 35454 ;;		i2___awmod
 35455 ;;		i2___flmul
 35456 ;; This function is called by:
 35457 ;;		i2_printf
 35458 ;; This function uses a non-reentrant model
 35459 ;;
 35460                           
 35461                           	psect	text102
 35462  013DB4                     __ptext102:
 35463                           	opt stack 0
 35464  013DB4                     i2_scale:
 35465                           	opt stack 15
 35466                           
 35467                           ; BSR set to: 0
 35468                           ;incstack = 0
 35469                           ;i2scale@scl stored from wreg
 35470  013DB4  6E51               	movwf	i2scale@scl,c
 35471                           
 35472                           ;doprnt.c: 428: if(scl < 0) {
 35473  013DB6  AE51               	btfss	i2scale@scl,7,c
 35474  013DB8  D11F               	goto	i2l1520
 35475                           
 35476                           ;doprnt.c: 429: scl = -scl;
 35477  013DBA  6C51               	negf	i2scale@scl,c
 35478                           
 35479                           ;doprnt.c: 430: if(scl>=110)
 35480  013DBC  5051               	movf	i2scale@scl,w,c
 35481  013DBE  0A80               	xorlw	128
 35482  013DC0  0F12               	addlw	-238
 35483  013DC2  A0D8               	btfss	status,0,c
 35484  013DC4  D0A1               	goto	i2l1521
 35485                           
 35486                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 35487  013DC6  0E00               	movlw	0
 35488  013DC8  6E0A               	movwf	i2___awdiv@divisor+1,c
 35489  013DCA  0E0A               	movlw	10
 35490  013DCC  6E09               	movwf	i2___awdiv@divisor,c
 35491  013DCE  0E00               	movlw	0
 35492  013DD0  6E04               	movwf	i2___awmod@divisor+1,c
 35493  013DD2  0E64               	movlw	100
 35494  013DD4  6E03               	movwf	i2___awmod@divisor,c
 35495  013DD6  5051               	movf	i2scale@scl,w,c
 35496  013DD8  6E01               	movwf	i2___awmod@dividend,c
 35497  013DDA  6A02               	clrf	i2___awmod@dividend+1,c
 35498  013DDC  BE01               	btfsc	i2___awmod@dividend,7,c
 35499  013DDE  0602               	decf	i2___awmod@dividend+1,f,c
 35500  013DE0  ECE5  F0C2         	call	i2___awmod	;wreg free
 35501  013DE4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 35502  013DE8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 35503  013DEC  ECAE  F0C1         	call	i2___awdiv	;wreg free
 35504  013DF0  90D8               	bcf	status,0,c
 35505  013DF2  3607               	rlcf	?i2___awdiv,f,c
 35506  013DF4  3608               	rlcf	?i2___awdiv+1,f,c
 35507  013DF6  90D8               	bcf	status,0,c
 35508  013DF8  3607               	rlcf	?i2___awdiv,f,c
 35509  013DFA  3608               	rlcf	?i2___awdiv+1,f,c
 35510  013DFC  0E24               	movlw	36
 35511  013DFE  2607               	addwf	?i2___awdiv,f,c
 35512  013E00  0E00               	movlw	0
 35513  013E02  2208               	addwfc	?i2___awdiv+1,f,c
 35514  013E04  0E77               	movlw	low __npowers_
 35515  013E06  2407               	addwf	?i2___awdiv,w,c
 35516  013E08  6EF6               	movwf	tblptrl,c
 35517  013E0A  0ED8               	movlw	high __npowers_
 35518  013E0C  2008               	addwfc	?i2___awdiv+1,w,c
 35519  013E0E  6EF7               	movwf	tblptrh,c
 35520  013E10                     	if	1	;There are 3 active tblptr bytes
 35521  013E10  6AF8               	clrf	tblptru,c
 35522  013E12  0E00               	movlw	low (__mediumconst shr (0+16))
 35523  013E14  22F8               	addwfc	tblptru,f,c
 35524  013E16                     	endif
 35525  013E16  0009               	tblrd		*+
 35526  013E18  CFF5 F034          	movff	tablat,i2___flmul@a
 35527  013E1C  0009               	tblrd		*+
 35528  013E1E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35529  013E22  0009               	tblrd		*+
 35530  013E24  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35531  013E28  000A               	tblrd		*-
 35532  013E2A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35533  013E2E  0E00               	movlw	0
 35534  013E30  6E0A               	movwf	i2___awdiv@divisor+1,c
 35535  013E32  0E64               	movlw	100
 35536  013E34  6E09               	movwf	i2___awdiv@divisor,c
 35537  013E36  5051               	movf	i2scale@scl,w,c
 35538  013E38  6E07               	movwf	i2___awdiv@dividend,c
 35539  013E3A  6A08               	clrf	i2___awdiv@dividend+1,c
 35540  013E3C  BE07               	btfsc	i2___awdiv@dividend,7,c
 35541  013E3E  0608               	decf	i2___awdiv@dividend+1,f,c
 35542  013E40  ECAE  F0C1         	call	i2___awdiv	;wreg free
 35543  013E44  90D8               	bcf	status,0,c
 35544  013E46  3607               	rlcf	?i2___awdiv,f,c
 35545  013E48  3608               	rlcf	?i2___awdiv+1,f,c
 35546  013E4A  90D8               	bcf	status,0,c
 35547  013E4C  3607               	rlcf	?i2___awdiv,f,c
 35548  013E4E  3608               	rlcf	?i2___awdiv+1,f,c
 35549  013E50  0E48               	movlw	72
 35550  013E52  2607               	addwf	?i2___awdiv,f,c
 35551  013E54  0E00               	movlw	0
 35552  013E56  2208               	addwfc	?i2___awdiv+1,f,c
 35553  013E58  0E77               	movlw	low __npowers_
 35554  013E5A  2407               	addwf	?i2___awdiv,w,c
 35555  013E5C  6EF6               	movwf	tblptrl,c
 35556  013E5E  0ED8               	movlw	high __npowers_
 35557  013E60  2008               	addwfc	?i2___awdiv+1,w,c
 35558  013E62  6EF7               	movwf	tblptrh,c
 35559  013E64                     	if	1	;There are 3 active tblptr bytes
 35560  013E64  6AF8               	clrf	tblptru,c
 35561  013E66  0E00               	movlw	low (__mediumconst shr (0+16))
 35562  013E68  22F8               	addwfc	tblptru,f,c
 35563  013E6A                     	endif
 35564  013E6A  0009               	tblrd		*+
 35565  013E6C  CFF5 F030          	movff	tablat,i2___flmul@b
 35566  013E70  0009               	tblrd		*+
 35567  013E72  CFF5 F031          	movff	tablat,i2___flmul@b+1
 35568  013E76  0009               	tblrd		*+
 35569  013E78  CFF5 F032          	movff	tablat,i2___flmul@b+2
 35570  013E7C  000A               	tblrd		*-
 35571  013E7E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 35572  013E82  EC77  F0A4         	call	i2___flmul	;wreg free
 35573  013E86  C030  F04D         	movff	?i2___flmul,i2_scale$4375
 35574  013E8A  C031  F04E         	movff	?i2___flmul+1,i2_scale$4375+1
 35575  013E8E  C032  F04F         	movff	?i2___flmul+2,i2_scale$4375+2
 35576  013E92  C033  F050         	movff	?i2___flmul+3,i2_scale$4375+3
 35577                           
 35578                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 35579  013E96  C04D  F030         	movff	i2_scale$4375,i2___flmul@b
 35580  013E9A  C04E  F031         	movff	i2_scale$4375+1,i2___flmul@b+1
 35581  013E9E  C04F  F032         	movff	i2_scale$4375+2,i2___flmul@b+2
 35582  013EA2  C050  F033         	movff	i2_scale$4375+3,i2___flmul@b+3
 35583  013EA6  0E00               	movlw	0
 35584  013EA8  6E04               	movwf	i2___awmod@divisor+1,c
 35585  013EAA  0E0A               	movlw	10
 35586  013EAC  6E03               	movwf	i2___awmod@divisor,c
 35587  013EAE  5051               	movf	i2scale@scl,w,c
 35588  013EB0  6E01               	movwf	i2___awmod@dividend,c
 35589  013EB2  6A02               	clrf	i2___awmod@dividend+1,c
 35590  013EB4  BE01               	btfsc	i2___awmod@dividend,7,c
 35591  013EB6  0602               	decf	i2___awmod@dividend+1,f,c
 35592  013EB8  ECE5  F0C2         	call	i2___awmod	;wreg free
 35593  013EBC  90D8               	bcf	status,0,c
 35594  013EBE  3601               	rlcf	?i2___awmod,f,c
 35595  013EC0  3602               	rlcf	?i2___awmod+1,f,c
 35596  013EC2  90D8               	bcf	status,0,c
 35597  013EC4  3601               	rlcf	?i2___awmod,f,c
 35598  013EC6  3602               	rlcf	?i2___awmod+1,f,c
 35599  013EC8  0E77               	movlw	low __npowers_
 35600  013ECA  2401               	addwf	?i2___awmod,w,c
 35601  013ECC  6EF6               	movwf	tblptrl,c
 35602  013ECE  0ED8               	movlw	high __npowers_
 35603  013ED0  2002               	addwfc	?i2___awmod+1,w,c
 35604  013ED2  6EF7               	movwf	tblptrh,c
 35605  013ED4                     	if	1	;There are 3 active tblptr bytes
 35606  013ED4  6AF8               	clrf	tblptru,c
 35607  013ED6  0E00               	movlw	low (__mediumconst shr (0+16))
 35608  013ED8  22F8               	addwfc	tblptru,f,c
 35609  013EDA                     	endif
 35610  013EDA  0009               	tblrd		*+
 35611  013EDC  CFF5 F034          	movff	tablat,i2___flmul@a
 35612  013EE0  0009               	tblrd		*+
 35613  013EE2  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35614  013EE6  0009               	tblrd		*+
 35615  013EE8  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35616  013EEC  000A               	tblrd		*-
 35617  013EEE  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35618  013EF2  EC77  F0A4         	call	i2___flmul	;wreg free
 35619  013EF6  C030  F049         	movff	?i2___flmul,?i2_scale
 35620  013EFA  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 35621  013EFE  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 35622  013F02  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 35623  013F06  0012               	return	
 35624  013F08                     i2l1521:
 35625                           
 35626                           ;doprnt.c: 432: else if(scl > 10)
 35627  013F08  5051               	movf	i2scale@scl,w,c
 35628  013F0A  0A80               	xorlw	128
 35629  013F0C  0F75               	addlw	-139
 35630  013F0E  A0D8               	btfss	status,0,c
 35631  013F10  D05B               	goto	i2l1524
 35632                           
 35633                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 35634  013F12  0E00               	movlw	0
 35635  013F14  6E0A               	movwf	i2___awdiv@divisor+1,c
 35636  013F16  0E0A               	movlw	10
 35637  013F18  6E09               	movwf	i2___awdiv@divisor,c
 35638  013F1A  5051               	movf	i2scale@scl,w,c
 35639  013F1C  6E07               	movwf	i2___awdiv@dividend,c
 35640  013F1E  6A08               	clrf	i2___awdiv@dividend+1,c
 35641  013F20  BE07               	btfsc	i2___awdiv@dividend,7,c
 35642  013F22  0608               	decf	i2___awdiv@dividend+1,f,c
 35643  013F24  ECAE  F0C1         	call	i2___awdiv	;wreg free
 35644  013F28  90D8               	bcf	status,0,c
 35645  013F2A  3607               	rlcf	?i2___awdiv,f,c
 35646  013F2C  3608               	rlcf	?i2___awdiv+1,f,c
 35647  013F2E  90D8               	bcf	status,0,c
 35648  013F30  3607               	rlcf	?i2___awdiv,f,c
 35649  013F32  3608               	rlcf	?i2___awdiv+1,f,c
 35650  013F34  0E24               	movlw	36
 35651  013F36  2607               	addwf	?i2___awdiv,f,c
 35652  013F38  0E00               	movlw	0
 35653  013F3A  2208               	addwfc	?i2___awdiv+1,f,c
 35654  013F3C  0E77               	movlw	low __npowers_
 35655  013F3E  2407               	addwf	?i2___awdiv,w,c
 35656  013F40  6EF6               	movwf	tblptrl,c
 35657  013F42  0ED8               	movlw	high __npowers_
 35658  013F44  2008               	addwfc	?i2___awdiv+1,w,c
 35659  013F46  6EF7               	movwf	tblptrh,c
 35660  013F48                     	if	1	;There are 3 active tblptr bytes
 35661  013F48  6AF8               	clrf	tblptru,c
 35662  013F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 35663  013F4C  22F8               	addwfc	tblptru,f,c
 35664  013F4E                     	endif
 35665  013F4E  0009               	tblrd		*+
 35666  013F50  CFF5 F030          	movff	tablat,i2___flmul@b
 35667  013F54  0009               	tblrd		*+
 35668  013F56  CFF5 F031          	movff	tablat,i2___flmul@b+1
 35669  013F5A  0009               	tblrd		*+
 35670  013F5C  CFF5 F032          	movff	tablat,i2___flmul@b+2
 35671  013F60  000A               	tblrd		*-
 35672  013F62  CFF5 F033          	movff	tablat,i2___flmul@b+3
 35673  013F66  0E00               	movlw	0
 35674  013F68  6E04               	movwf	i2___awmod@divisor+1,c
 35675  013F6A  0E0A               	movlw	10
 35676  013F6C  6E03               	movwf	i2___awmod@divisor,c
 35677  013F6E  5051               	movf	i2scale@scl,w,c
 35678  013F70  6E01               	movwf	i2___awmod@dividend,c
 35679  013F72  6A02               	clrf	i2___awmod@dividend+1,c
 35680  013F74  BE01               	btfsc	i2___awmod@dividend,7,c
 35681  013F76  0602               	decf	i2___awmod@dividend+1,f,c
 35682  013F78  ECE5  F0C2         	call	i2___awmod	;wreg free
 35683  013F7C  90D8               	bcf	status,0,c
 35684  013F7E  3601               	rlcf	?i2___awmod,f,c
 35685  013F80  3602               	rlcf	?i2___awmod+1,f,c
 35686  013F82  90D8               	bcf	status,0,c
 35687  013F84  3601               	rlcf	?i2___awmod,f,c
 35688  013F86  3602               	rlcf	?i2___awmod+1,f,c
 35689  013F88  0E77               	movlw	low __npowers_
 35690  013F8A  2401               	addwf	?i2___awmod,w,c
 35691  013F8C  6EF6               	movwf	tblptrl,c
 35692  013F8E  0ED8               	movlw	high __npowers_
 35693  013F90  2002               	addwfc	?i2___awmod+1,w,c
 35694  013F92  6EF7               	movwf	tblptrh,c
 35695  013F94                     	if	1	;There are 3 active tblptr bytes
 35696  013F94  6AF8               	clrf	tblptru,c
 35697  013F96  0E00               	movlw	low (__mediumconst shr (0+16))
 35698  013F98  22F8               	addwfc	tblptru,f,c
 35699  013F9A                     	endif
 35700  013F9A  0009               	tblrd		*+
 35701  013F9C  CFF5 F034          	movff	tablat,i2___flmul@a
 35702  013FA0  0009               	tblrd		*+
 35703  013FA2  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35704  013FA6  0009               	tblrd		*+
 35705  013FA8  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35706  013FAC  000A               	tblrd		*-
 35707  013FAE  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35708  013FB2  EC77  F0A4         	call	i2___flmul	;wreg free
 35709  013FB6  C030  F049         	movff	?i2___flmul,?i2_scale
 35710  013FBA  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 35711  013FBE  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 35712  013FC2  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 35713  013FC6  0012               	return	
 35714  013FC8                     i2l1524:
 35715                           
 35716                           ;doprnt.c: 434: return _npowers_[scl];
 35717  013FC8  5051               	movf	i2scale@scl,w,c
 35718  013FCA  0D04               	mullw	4
 35719  013FCC  0E77               	movlw	low __npowers_
 35720  013FCE  24F3               	addwf	prodl,w,c
 35721  013FD0  6EF6               	movwf	tblptrl,c
 35722  013FD2  0ED8               	movlw	high __npowers_
 35723  013FD4  20F4               	addwfc	prodh,w,c
 35724  013FD6  6EF7               	movwf	tblptrh,c
 35725  013FD8                     	if	1	;There are 3 active tblptr bytes
 35726  013FD8  6AF8               	clrf	tblptru,c
 35727  013FDA  0E00               	movlw	low (__mediumconst shr (0+16))
 35728  013FDC  22F8               	addwfc	tblptru,f,c
 35729  013FDE                     	endif
 35730  013FDE  0009               	tblrd		*+
 35731  013FE0  CFF5 F049          	movff	tablat,?i2_scale
 35732  013FE4  0009               	tblrd		*+
 35733  013FE6  CFF5 F04A          	movff	tablat,?i2_scale+1
 35734  013FEA  0009               	tblrd		*+
 35735  013FEC  CFF5 F04B          	movff	tablat,?i2_scale+2
 35736  013FF0  000A               	tblrd		*-
 35737  013FF2  CFF5 F04C          	movff	tablat,?i2_scale+3
 35738  013FF6  0012               	return	
 35739  013FF8                     i2l1520:
 35740                           
 35741                           ;doprnt.c: 435: }
 35742                           ;doprnt.c: 436: if(scl>=110)
 35743  013FF8  5051               	movf	i2scale@scl,w,c
 35744  013FFA  0A80               	xorlw	128
 35745  013FFC  0F12               	addlw	-238
 35746  013FFE  A0D8               	btfss	status,0,c
 35747  014000  D0A1               	goto	i2l1525
 35748                           
 35749                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 35750  014002  0E00               	movlw	0
 35751  014004  6E0A               	movwf	i2___awdiv@divisor+1,c
 35752  014006  0E0A               	movlw	10
 35753  014008  6E09               	movwf	i2___awdiv@divisor,c
 35754  01400A  0E00               	movlw	0
 35755  01400C  6E04               	movwf	i2___awmod@divisor+1,c
 35756  01400E  0E64               	movlw	100
 35757  014010  6E03               	movwf	i2___awmod@divisor,c
 35758  014012  5051               	movf	i2scale@scl,w,c
 35759  014014  6E01               	movwf	i2___awmod@dividend,c
 35760  014016  6A02               	clrf	i2___awmod@dividend+1,c
 35761  014018  BE01               	btfsc	i2___awmod@dividend,7,c
 35762  01401A  0602               	decf	i2___awmod@dividend+1,f,c
 35763  01401C  ECE5  F0C2         	call	i2___awmod	;wreg free
 35764  014020  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 35765  014024  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 35766  014028  ECAE  F0C1         	call	i2___awdiv	;wreg free
 35767  01402C  90D8               	bcf	status,0,c
 35768  01402E  3607               	rlcf	?i2___awdiv,f,c
 35769  014030  3608               	rlcf	?i2___awdiv+1,f,c
 35770  014032  90D8               	bcf	status,0,c
 35771  014034  3607               	rlcf	?i2___awdiv,f,c
 35772  014036  3608               	rlcf	?i2___awdiv+1,f,c
 35773  014038  0E24               	movlw	36
 35774  01403A  2607               	addwf	?i2___awdiv,f,c
 35775  01403C  0E00               	movlw	0
 35776  01403E  2208               	addwfc	?i2___awdiv+1,f,c
 35777  014040  0E43               	movlw	low __powers_
 35778  014042  2407               	addwf	?i2___awdiv,w,c
 35779  014044  6EF6               	movwf	tblptrl,c
 35780  014046  0ED8               	movlw	high __powers_
 35781  014048  2008               	addwfc	?i2___awdiv+1,w,c
 35782  01404A  6EF7               	movwf	tblptrh,c
 35783  01404C                     	if	1	;There are 3 active tblptr bytes
 35784  01404C  6AF8               	clrf	tblptru,c
 35785  01404E  0E00               	movlw	low (__mediumconst shr (0+16))
 35786  014050  22F8               	addwfc	tblptru,f,c
 35787  014052                     	endif
 35788  014052  0009               	tblrd		*+
 35789  014054  CFF5 F034          	movff	tablat,i2___flmul@a
 35790  014058  0009               	tblrd		*+
 35791  01405A  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35792  01405E  0009               	tblrd		*+
 35793  014060  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35794  014064  000A               	tblrd		*-
 35795  014066  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35796  01406A  0E00               	movlw	0
 35797  01406C  6E0A               	movwf	i2___awdiv@divisor+1,c
 35798  01406E  0E64               	movlw	100
 35799  014070  6E09               	movwf	i2___awdiv@divisor,c
 35800  014072  5051               	movf	i2scale@scl,w,c
 35801  014074  6E07               	movwf	i2___awdiv@dividend,c
 35802  014076  6A08               	clrf	i2___awdiv@dividend+1,c
 35803  014078  BE07               	btfsc	i2___awdiv@dividend,7,c
 35804  01407A  0608               	decf	i2___awdiv@dividend+1,f,c
 35805  01407C  ECAE  F0C1         	call	i2___awdiv	;wreg free
 35806  014080  90D8               	bcf	status,0,c
 35807  014082  3607               	rlcf	?i2___awdiv,f,c
 35808  014084  3608               	rlcf	?i2___awdiv+1,f,c
 35809  014086  90D8               	bcf	status,0,c
 35810  014088  3607               	rlcf	?i2___awdiv,f,c
 35811  01408A  3608               	rlcf	?i2___awdiv+1,f,c
 35812  01408C  0E48               	movlw	72
 35813  01408E  2607               	addwf	?i2___awdiv,f,c
 35814  014090  0E00               	movlw	0
 35815  014092  2208               	addwfc	?i2___awdiv+1,f,c
 35816  014094  0E43               	movlw	low __powers_
 35817  014096  2407               	addwf	?i2___awdiv,w,c
 35818  014098  6EF6               	movwf	tblptrl,c
 35819  01409A  0ED8               	movlw	high __powers_
 35820  01409C  2008               	addwfc	?i2___awdiv+1,w,c
 35821  01409E  6EF7               	movwf	tblptrh,c
 35822  0140A0                     	if	1	;There are 3 active tblptr bytes
 35823  0140A0  6AF8               	clrf	tblptru,c
 35824  0140A2  0E00               	movlw	low (__mediumconst shr (0+16))
 35825  0140A4  22F8               	addwfc	tblptru,f,c
 35826  0140A6                     	endif
 35827  0140A6  0009               	tblrd		*+
 35828  0140A8  CFF5 F030          	movff	tablat,i2___flmul@b
 35829  0140AC  0009               	tblrd		*+
 35830  0140AE  CFF5 F031          	movff	tablat,i2___flmul@b+1
 35831  0140B2  0009               	tblrd		*+
 35832  0140B4  CFF5 F032          	movff	tablat,i2___flmul@b+2
 35833  0140B8  000A               	tblrd		*-
 35834  0140BA  CFF5 F033          	movff	tablat,i2___flmul@b+3
 35835  0140BE  EC77  F0A4         	call	i2___flmul	;wreg free
 35836  0140C2  C030  F04D         	movff	?i2___flmul,i2_scale$4375
 35837  0140C6  C031  F04E         	movff	?i2___flmul+1,i2_scale$4375+1
 35838  0140CA  C032  F04F         	movff	?i2___flmul+2,i2_scale$4375+2
 35839  0140CE  C033  F050         	movff	?i2___flmul+3,i2_scale$4375+3
 35840                           
 35841                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 35842  0140D2  C04D  F030         	movff	i2_scale$4375,i2___flmul@b
 35843  0140D6  C04E  F031         	movff	i2_scale$4375+1,i2___flmul@b+1
 35844  0140DA  C04F  F032         	movff	i2_scale$4375+2,i2___flmul@b+2
 35845  0140DE  C050  F033         	movff	i2_scale$4375+3,i2___flmul@b+3
 35846  0140E2  0E00               	movlw	0
 35847  0140E4  6E04               	movwf	i2___awmod@divisor+1,c
 35848  0140E6  0E0A               	movlw	10
 35849  0140E8  6E03               	movwf	i2___awmod@divisor,c
 35850  0140EA  5051               	movf	i2scale@scl,w,c
 35851  0140EC  6E01               	movwf	i2___awmod@dividend,c
 35852  0140EE  6A02               	clrf	i2___awmod@dividend+1,c
 35853  0140F0  BE01               	btfsc	i2___awmod@dividend,7,c
 35854  0140F2  0602               	decf	i2___awmod@dividend+1,f,c
 35855  0140F4  ECE5  F0C2         	call	i2___awmod	;wreg free
 35856  0140F8  90D8               	bcf	status,0,c
 35857  0140FA  3601               	rlcf	?i2___awmod,f,c
 35858  0140FC  3602               	rlcf	?i2___awmod+1,f,c
 35859  0140FE  90D8               	bcf	status,0,c
 35860  014100  3601               	rlcf	?i2___awmod,f,c
 35861  014102  3602               	rlcf	?i2___awmod+1,f,c
 35862  014104  0E43               	movlw	low __powers_
 35863  014106  2401               	addwf	?i2___awmod,w,c
 35864  014108  6EF6               	movwf	tblptrl,c
 35865  01410A  0ED8               	movlw	high __powers_
 35866  01410C  2002               	addwfc	?i2___awmod+1,w,c
 35867  01410E  6EF7               	movwf	tblptrh,c
 35868  014110                     	if	1	;There are 3 active tblptr bytes
 35869  014110  6AF8               	clrf	tblptru,c
 35870  014112  0E00               	movlw	low (__mediumconst shr (0+16))
 35871  014114  22F8               	addwfc	tblptru,f,c
 35872  014116                     	endif
 35873  014116  0009               	tblrd		*+
 35874  014118  CFF5 F034          	movff	tablat,i2___flmul@a
 35875  01411C  0009               	tblrd		*+
 35876  01411E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35877  014122  0009               	tblrd		*+
 35878  014124  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35879  014128  000A               	tblrd		*-
 35880  01412A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35881  01412E  EC77  F0A4         	call	i2___flmul	;wreg free
 35882  014132  C030  F049         	movff	?i2___flmul,?i2_scale
 35883  014136  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 35884  01413A  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 35885  01413E  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 35886  014142  0012               	return	
 35887  014144                     i2l1525:
 35888                           
 35889                           ;doprnt.c: 438: else if(scl > 10)
 35890  014144  5051               	movf	i2scale@scl,w,c
 35891  014146  0A80               	xorlw	128
 35892  014148  0F75               	addlw	-139
 35893  01414A  A0D8               	btfss	status,0,c
 35894  01414C  D05B               	goto	i2l1527
 35895                           
 35896                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 35897  01414E  0E00               	movlw	0
 35898  014150  6E0A               	movwf	i2___awdiv@divisor+1,c
 35899  014152  0E0A               	movlw	10
 35900  014154  6E09               	movwf	i2___awdiv@divisor,c
 35901  014156  5051               	movf	i2scale@scl,w,c
 35902  014158  6E07               	movwf	i2___awdiv@dividend,c
 35903  01415A  6A08               	clrf	i2___awdiv@dividend+1,c
 35904  01415C  BE07               	btfsc	i2___awdiv@dividend,7,c
 35905  01415E  0608               	decf	i2___awdiv@dividend+1,f,c
 35906  014160  ECAE  F0C1         	call	i2___awdiv	;wreg free
 35907  014164  90D8               	bcf	status,0,c
 35908  014166  3607               	rlcf	?i2___awdiv,f,c
 35909  014168  3608               	rlcf	?i2___awdiv+1,f,c
 35910  01416A  90D8               	bcf	status,0,c
 35911  01416C  3607               	rlcf	?i2___awdiv,f,c
 35912  01416E  3608               	rlcf	?i2___awdiv+1,f,c
 35913  014170  0E24               	movlw	36
 35914  014172  2607               	addwf	?i2___awdiv,f,c
 35915  014174  0E00               	movlw	0
 35916  014176  2208               	addwfc	?i2___awdiv+1,f,c
 35917  014178  0E43               	movlw	low __powers_
 35918  01417A  2407               	addwf	?i2___awdiv,w,c
 35919  01417C  6EF6               	movwf	tblptrl,c
 35920  01417E  0ED8               	movlw	high __powers_
 35921  014180  2008               	addwfc	?i2___awdiv+1,w,c
 35922  014182  6EF7               	movwf	tblptrh,c
 35923  014184                     	if	1	;There are 3 active tblptr bytes
 35924  014184  6AF8               	clrf	tblptru,c
 35925  014186  0E00               	movlw	low (__mediumconst shr (0+16))
 35926  014188  22F8               	addwfc	tblptru,f,c
 35927  01418A                     	endif
 35928  01418A  0009               	tblrd		*+
 35929  01418C  CFF5 F030          	movff	tablat,i2___flmul@b
 35930  014190  0009               	tblrd		*+
 35931  014192  CFF5 F031          	movff	tablat,i2___flmul@b+1
 35932  014196  0009               	tblrd		*+
 35933  014198  CFF5 F032          	movff	tablat,i2___flmul@b+2
 35934  01419C  000A               	tblrd		*-
 35935  01419E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 35936  0141A2  0E00               	movlw	0
 35937  0141A4  6E04               	movwf	i2___awmod@divisor+1,c
 35938  0141A6  0E0A               	movlw	10
 35939  0141A8  6E03               	movwf	i2___awmod@divisor,c
 35940  0141AA  5051               	movf	i2scale@scl,w,c
 35941  0141AC  6E01               	movwf	i2___awmod@dividend,c
 35942  0141AE  6A02               	clrf	i2___awmod@dividend+1,c
 35943  0141B0  BE01               	btfsc	i2___awmod@dividend,7,c
 35944  0141B2  0602               	decf	i2___awmod@dividend+1,f,c
 35945  0141B4  ECE5  F0C2         	call	i2___awmod	;wreg free
 35946  0141B8  90D8               	bcf	status,0,c
 35947  0141BA  3601               	rlcf	?i2___awmod,f,c
 35948  0141BC  3602               	rlcf	?i2___awmod+1,f,c
 35949  0141BE  90D8               	bcf	status,0,c
 35950  0141C0  3601               	rlcf	?i2___awmod,f,c
 35951  0141C2  3602               	rlcf	?i2___awmod+1,f,c
 35952  0141C4  0E43               	movlw	low __powers_
 35953  0141C6  2401               	addwf	?i2___awmod,w,c
 35954  0141C8  6EF6               	movwf	tblptrl,c
 35955  0141CA  0ED8               	movlw	high __powers_
 35956  0141CC  2002               	addwfc	?i2___awmod+1,w,c
 35957  0141CE  6EF7               	movwf	tblptrh,c
 35958  0141D0                     	if	1	;There are 3 active tblptr bytes
 35959  0141D0  6AF8               	clrf	tblptru,c
 35960  0141D2  0E00               	movlw	low (__mediumconst shr (0+16))
 35961  0141D4  22F8               	addwfc	tblptru,f,c
 35962  0141D6                     	endif
 35963  0141D6  0009               	tblrd		*+
 35964  0141D8  CFF5 F034          	movff	tablat,i2___flmul@a
 35965  0141DC  0009               	tblrd		*+
 35966  0141DE  CFF5 F035          	movff	tablat,i2___flmul@a+1
 35967  0141E2  0009               	tblrd		*+
 35968  0141E4  CFF5 F036          	movff	tablat,i2___flmul@a+2
 35969  0141E8  000A               	tblrd		*-
 35970  0141EA  CFF5 F037          	movff	tablat,i2___flmul@a+3
 35971  0141EE  EC77  F0A4         	call	i2___flmul	;wreg free
 35972  0141F2  C030  F049         	movff	?i2___flmul,?i2_scale
 35973  0141F6  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 35974  0141FA  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 35975  0141FE  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 35976  014202  0012               	return	
 35977  014204                     i2l1527:
 35978                           
 35979                           ;doprnt.c: 440: return _powers_[scl];
 35980  014204  5051               	movf	i2scale@scl,w,c
 35981  014206  0D04               	mullw	4
 35982  014208  0E43               	movlw	low __powers_
 35983  01420A  24F3               	addwf	prodl,w,c
 35984  01420C  6EF6               	movwf	tblptrl,c
 35985  01420E  0ED8               	movlw	high __powers_
 35986  014210  20F4               	addwfc	prodh,w,c
 35987  014212  6EF7               	movwf	tblptrh,c
 35988  014214                     	if	1	;There are 3 active tblptr bytes
 35989  014214  6AF8               	clrf	tblptru,c
 35990  014216  0E00               	movlw	low (__mediumconst shr (0+16))
 35991  014218  22F8               	addwfc	tblptru,f,c
 35992  01421A                     	endif
 35993  01421A  0009               	tblrd		*+
 35994  01421C  CFF5 F049          	movff	tablat,?i2_scale
 35995  014220  0009               	tblrd		*+
 35996  014222  CFF5 F04A          	movff	tablat,?i2_scale+1
 35997  014226  0009               	tblrd		*+
 35998  014228  CFF5 F04B          	movff	tablat,?i2_scale+2
 35999  01422C  000A               	tblrd		*-
 36000  01422E  CFF5 F04C          	movff	tablat,?i2_scale+3
 36001  014232  0012               	return	
 36002  014234                     __end_ofi2_scale:
 36003                           	opt stack 0
 36004                           tosu	equ	0xFFF
 36005                           tosh	equ	0xFFE
 36006                           tosl	equ	0xFFD
 36007                           pclatu	equ	0xFFB
 36008                           pclath	equ	0xFFA
 36009                           tblptru	equ	0xFF8
 36010                           tblptrh	equ	0xFF7
 36011                           tblptrl	equ	0xFF6
 36012                           tablat	equ	0xFF5
 36013                           prodh	equ	0xFF4
 36014                           prodl	equ	0xFF3
 36015                           intcon	equ	0xFF2
 36016                           indf0	equ	0xFEF
 36017                           postinc0	equ	0xFEE
 36018                           fsr0h	equ	0xFEA
 36019                           fsr0l	equ	0xFE9
 36020                           wreg	equ	0xFE8
 36021                           indf1	equ	0xFE7
 36022                           postdec1	equ	0xFE5
 36023                           plusw1	equ	0xFE3
 36024                           fsr1h	equ	0xFE2
 36025                           fsr1l	equ	0xFE1
 36026                           bsr	equ	0xFE0
 36027                           indf2	equ	0xFDF
 36028                           postinc2	equ	0xFDE
 36029                           postdec2	equ	0xFDD
 36030                           plusw2	equ	0xFDB
 36031                           fsr2h	equ	0xFDA
 36032                           fsr2l	equ	0xFD9
 36033                           status	equ	0xFD8
 36034                           
 36035 ;; *************** function i2_putch *****************
 36036 ;; Defined at:
 36037 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 36038 ;; Parameters:    Size  Location     Type
 36039 ;;  txData          1    wreg     unsigned char 
 36040 ;; Auto vars:     Size  Location     Type
 36041 ;;  txData          1    1[COMRAM] unsigned char 
 36042 ;; Return value:  Size  Location     Type
 36043 ;;                  1    wreg      void 
 36044 ;; Registers used:
 36045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36046 ;; Tracked objects:
 36047 ;;		On entry : 0/0
 36048 ;;		On exit  : 0/0
 36049 ;;		Unchanged: 0/0
 36050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36054 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36055 ;;Total ram usage:        1 bytes
 36056 ;; Hardware stack levels used:    1
 36057 ;; Hardware stack levels required when called:    1
 36058 ;; This function calls:
 36059 ;;		i2_EUSART2_Write
 36060 ;; This function is called by:
 36061 ;;		i2_printf
 36062 ;; This function uses a non-reentrant model
 36063 ;;
 36064                           
 36065                           	psect	text103
 36066  01942C                     __ptext103:
 36067                           	opt stack 0
 36068  01942C                     i2_putch:
 36069                           	opt stack 15
 36070                           
 36071                           ;incstack = 0
 36072                           ;i2putch@txData stored from wreg
 36073  01942C  6E02               	movwf	i2putch@txData,c
 36074                           
 36075                           ;eusart2.c: 195: EUSART2_Write(txData);
 36076  01942E  5002               	movf	i2putch@txData,w,c
 36077  019430  ECEA  F0C5         	call	i2_EUSART2_Write
 36078  019434  0012               	return		;funcret
 36079  019436                     __end_ofi2_putch:
 36080                           	opt stack 0
 36081                           tosu	equ	0xFFF
 36082                           tosh	equ	0xFFE
 36083                           tosl	equ	0xFFD
 36084                           pclatu	equ	0xFFB
 36085                           pclath	equ	0xFFA
 36086                           tblptru	equ	0xFF8
 36087                           tblptrh	equ	0xFF7
 36088                           tblptrl	equ	0xFF6
 36089                           tablat	equ	0xFF5
 36090                           prodh	equ	0xFF4
 36091                           prodl	equ	0xFF3
 36092                           intcon	equ	0xFF2
 36093                           indf0	equ	0xFEF
 36094                           postinc0	equ	0xFEE
 36095                           fsr0h	equ	0xFEA
 36096                           fsr0l	equ	0xFE9
 36097                           wreg	equ	0xFE8
 36098                           indf1	equ	0xFE7
 36099                           postdec1	equ	0xFE5
 36100                           plusw1	equ	0xFE3
 36101                           fsr1h	equ	0xFE2
 36102                           fsr1l	equ	0xFE1
 36103                           bsr	equ	0xFE0
 36104                           indf2	equ	0xFDF
 36105                           postinc2	equ	0xFDE
 36106                           postdec2	equ	0xFDD
 36107                           plusw2	equ	0xFDB
 36108                           fsr2h	equ	0xFDA
 36109                           fsr2l	equ	0xFD9
 36110                           status	equ	0xFD8
 36111                           
 36112 ;; *************** function i2_EUSART2_Write *****************
 36113 ;; Defined at:
 36114 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 36115 ;; Parameters:    Size  Location     Type
 36116 ;;  txData          1    wreg     unsigned char 
 36117 ;; Auto vars:     Size  Location     Type
 36118 ;;  txData          1    0[COMRAM] unsigned char 
 36119 ;; Return value:  Size  Location     Type
 36120 ;;                  1    wreg      void 
 36121 ;; Registers used:
 36122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36123 ;; Tracked objects:
 36124 ;;		On entry : 0/0
 36125 ;;		On exit  : 0/0
 36126 ;;		Unchanged: 0/0
 36127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36132 ;;Total ram usage:        1 bytes
 36133 ;; Hardware stack levels used:    1
 36134 ;; This function calls:
 36135 ;;		Nothing
 36136 ;; This function is called by:
 36137 ;;		i2_putch
 36138 ;; This function uses a non-reentrant model
 36139 ;;
 36140                           
 36141                           	psect	text104
 36142  018BD4                     __ptext104:
 36143                           	opt stack 0
 36144  018BD4                     i2_EUSART2_Write:
 36145                           	opt stack 15
 36146                           
 36147                           ;incstack = 0
 36148                           ;i2EUSART2_Write@txData stored from wreg
 36149  018BD4  6E01               	movwf	i2EUSART2_Write@txData,c
 36150                           
 36151                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 36152  018BD6  D002               	goto	i2l402
 36153  018BD8                     i2l403:
 36154                           
 36155                           ; BSR set to: 1
 36156  018BD8  0004               	clrwdt		;# 
 36157                           
 36158                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 36159  018BDA  827E               	bsf	3966,1,c	;volatile
 36160  018BDC                     i2l402:
 36161  018BDC  0101               	movlb	1	; () banked
 36162  018BDE  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 36163  018BE0  B4D8               	btfsc	status,2,c
 36164  018BE2  D7FA               	goto	i2l403
 36165                           
 36166                           ; BSR set to: 1
 36167                           ;eusart2.c: 167: }
 36168                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 36169  018BE4  927E               	bcf	3966,1,c	;volatile
 36170                           
 36171                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 36172  018BE6  010E               	movlb	14	; () banked
 36173  018BE8  BD2C               	btfsc	44,6,b	;volatile
 36174  018BEA  D003               	goto	i2l405
 36175                           
 36176                           ; BSR set to: 14
 36177                           ;eusart2.c: 172: {
 36178                           ;eusart2.c: 173: TX2REG = txData;
 36179  018BEC  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 36180                           
 36181                           ;eusart2.c: 174: }
 36182  018BF0  D013               	goto	i2l406
 36183  018BF2                     i2l405:
 36184                           
 36185                           ; BSR set to: 14
 36186                           ;eusart2.c: 175: else
 36187                           ;eusart2.c: 176: {
 36188                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 36189  018BF2  9D2C               	bcf	44,6,b	;volatile
 36190                           
 36191                           ; BSR set to: 14
 36192                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 36193  018BF4  0101               	movlb	1	; () banked
 36194  018BF6  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 36195  018BF8  0D01               	mullw	1
 36196  018BFA  0E00               	movlw	low _eusart2TxBuffer
 36197  018BFC  24F3               	addwf	prodl,w,c
 36198  018BFE  6ED9               	movwf	fsr2l,c
 36199  018C00  0E03               	movlw	high _eusart2TxBuffer
 36200  018C02  20F4               	addwfc	prodh,w,c
 36201  018C04  6EDA               	movwf	fsr2h,c
 36202  018C06  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 36203                           
 36204                           ; BSR set to: 1
 36205  018C0A  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 36206                           
 36207                           ; BSR set to: 1
 36208                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 36209  018C0C  0E7F               	movlw	127
 36210  018C0E  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 36211  018C10  D002               	goto	i2l407
 36212                           
 36213                           ; BSR set to: 1
 36214                           ;eusart2.c: 180: {
 36215                           ;eusart2.c: 181: eusart2TxHead = 0;
 36216  018C12  0E00               	movlw	0
 36217  018C14  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 36218  018C16                     i2l407:
 36219                           
 36220                           ; BSR set to: 1
 36221                           ;eusart2.c: 182: }
 36222                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 36223                           
 36224                           ; BSR set to: 1
 36225  018C16  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 36226  018C18                     i2l406:
 36227                           
 36228                           ;eusart2.c: 184: }
 36229                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 36230                           
 36231                           ; BSR set to: 1
 36232  018C18  010E               	movlb	14	; () banked
 36233  018C1A  8D2C               	bsf	44,6,b	;volatile
 36234                           
 36235                           ; BSR set to: 14
 36236  018C1C  0012               	return		;funcret
 36237  018C1E                     __end_ofi2_EUSART2_Write:
 36238                           	opt stack 0
 36239                           tosu	equ	0xFFF
 36240                           tosh	equ	0xFFE
 36241                           tosl	equ	0xFFD
 36242                           pclatu	equ	0xFFB
 36243                           pclath	equ	0xFFA
 36244                           tblptru	equ	0xFF8
 36245                           tblptrh	equ	0xFF7
 36246                           tblptrl	equ	0xFF6
 36247                           tablat	equ	0xFF5
 36248                           prodh	equ	0xFF4
 36249                           prodl	equ	0xFF3
 36250                           intcon	equ	0xFF2
 36251                           indf0	equ	0xFEF
 36252                           postinc0	equ	0xFEE
 36253                           fsr0h	equ	0xFEA
 36254                           fsr0l	equ	0xFE9
 36255                           wreg	equ	0xFE8
 36256                           indf1	equ	0xFE7
 36257                           postdec1	equ	0xFE5
 36258                           plusw1	equ	0xFE3
 36259                           fsr1h	equ	0xFE2
 36260                           fsr1l	equ	0xFE1
 36261                           bsr	equ	0xFE0
 36262                           indf2	equ	0xFDF
 36263                           postinc2	equ	0xFDE
 36264                           postdec2	equ	0xFDD
 36265                           plusw2	equ	0xFDB
 36266                           fsr2h	equ	0xFDA
 36267                           fsr2l	equ	0xFD9
 36268                           status	equ	0xFD8
 36269                           
 36270 ;; *************** function i2_isdigit *****************
 36271 ;; Defined at:
 36272 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 36273 ;; Parameters:    Size  Location     Type
 36274 ;;  c               1    wreg     unsigned char 
 36275 ;; Auto vars:     Size  Location     Type
 36276 ;;  c               1    2[COMRAM] unsigned char 
 36277 ;; Return value:  Size  Location     Type
 36278 ;;		None               void
 36279 ;; Registers used:
 36280 ;;		wreg, status,2, status,0
 36281 ;; Tracked objects:
 36282 ;;		On entry : 0/0
 36283 ;;		On exit  : 0/0
 36284 ;;		Unchanged: 0/0
 36285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36289 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36290 ;;Total ram usage:        3 bytes
 36291 ;; Hardware stack levels used:    1
 36292 ;; This function calls:
 36293 ;;		Nothing
 36294 ;; This function is called by:
 36295 ;;		i2_printf
 36296 ;; This function uses a non-reentrant model
 36297 ;;
 36298                           
 36299                           	psect	text105
 36300  01922C                     __ptext105:
 36301                           	opt stack 0
 36302  01922C                     i2_isdigit:
 36303                           	opt stack 16
 36304                           
 36305                           ; BSR set to: 14
 36306                           ;incstack = 0
 36307                           ;i2isdigit@c stored from wreg
 36308  01922C  6E03               	movwf	i2isdigit@c,c
 36309  01922E  0E00               	movlw	0
 36310  019230  6E02               	movwf	i2_isdigit$3443,c
 36311  019232  0E3A               	movlw	58
 36312  019234  6003               	cpfslt	i2isdigit@c,c
 36313  019236  D005               	goto	i2l2098
 36314  019238  0E2F               	movlw	47
 36315  01923A  6403               	cpfsgt	i2isdigit@c,c
 36316  01923C  D002               	goto	i2l2098
 36317  01923E  0E01               	movlw	1
 36318  019240  6E02               	movwf	i2_isdigit$3443,c
 36319  019242                     i2l2098:
 36320  019242  C002  F001         	movff	i2_isdigit$3443,??i2_isdigit
 36321  019246  3001               	rrcf	??i2_isdigit,w,c
 36322  019248  0012               	return	
 36323  01924A                     __end_ofi2_isdigit:
 36324                           	opt stack 0
 36325                           tosu	equ	0xFFF
 36326                           tosh	equ	0xFFE
 36327                           tosl	equ	0xFFD
 36328                           pclatu	equ	0xFFB
 36329                           pclath	equ	0xFFA
 36330                           tblptru	equ	0xFF8
 36331                           tblptrh	equ	0xFF7
 36332                           tblptrl	equ	0xFF6
 36333                           tablat	equ	0xFF5
 36334                           prodh	equ	0xFF4
 36335                           prodl	equ	0xFF3
 36336                           intcon	equ	0xFF2
 36337                           indf0	equ	0xFEF
 36338                           postinc0	equ	0xFEE
 36339                           fsr0h	equ	0xFEA
 36340                           fsr0l	equ	0xFE9
 36341                           wreg	equ	0xFE8
 36342                           indf1	equ	0xFE7
 36343                           postdec1	equ	0xFE5
 36344                           plusw1	equ	0xFE3
 36345                           fsr1h	equ	0xFE2
 36346                           fsr1l	equ	0xFE1
 36347                           bsr	equ	0xFE0
 36348                           indf2	equ	0xFDF
 36349                           postinc2	equ	0xFDE
 36350                           postdec2	equ	0xFDD
 36351                           plusw2	equ	0xFDB
 36352                           fsr2h	equ	0xFDA
 36353                           fsr2l	equ	0xFD9
 36354                           status	equ	0xFD8
 36355                           
 36356 ;; *************** function i2_fround *****************
 36357 ;; Defined at:
 36358 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 36359 ;; Parameters:    Size  Location     Type
 36360 ;;  prec            1    wreg     unsigned char 
 36361 ;; Auto vars:     Size  Location     Type
 36362 ;;  prec            1   84[COMRAM] unsigned char 
 36363 ;; Return value:  Size  Location     Type
 36364 ;;                  4   72[COMRAM] unsigned char 
 36365 ;; Registers used:
 36366 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36367 ;; Tracked objects:
 36368 ;;		On entry : 0/0
 36369 ;;		On exit  : 0/0
 36370 ;;		Unchanged: 0/0
 36371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36373 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36375 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36376 ;;Total ram usage:       13 bytes
 36377 ;; Hardware stack levels used:    1
 36378 ;; Hardware stack levels required when called:    1
 36379 ;; This function calls:
 36380 ;;		i2___awdiv
 36381 ;;		i2___awmod
 36382 ;;		i2___flmul
 36383 ;; This function is called by:
 36384 ;;		i2_printf
 36385 ;; This function uses a non-reentrant model
 36386 ;;
 36387                           
 36388                           	psect	text106
 36389  0163B0                     __ptext106:
 36390                           	opt stack 0
 36391  0163B0                     i2_fround:
 36392                           	opt stack 15
 36393                           
 36394                           ;incstack = 0
 36395                           ;i2fround@prec stored from wreg
 36396  0163B0  6E55               	movwf	i2fround@prec,c
 36397                           
 36398                           ;doprnt.c: 413: if(prec>=110)
 36399  0163B2  0E6D               	movlw	109
 36400  0163B4  6455               	cpfsgt	i2fround@prec,c
 36401  0163B6  D0B5               	goto	i2l1514
 36402                           
 36403                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 36404  0163B8  0E00               	movlw	0
 36405  0163BA  6E0A               	movwf	i2___awdiv@divisor+1,c
 36406  0163BC  0E0A               	movlw	10
 36407  0163BE  6E09               	movwf	i2___awdiv@divisor,c
 36408  0163C0  0E00               	movlw	0
 36409  0163C2  6E04               	movwf	i2___awmod@divisor+1,c
 36410  0163C4  0E64               	movlw	100
 36411  0163C6  6E03               	movwf	i2___awmod@divisor,c
 36412  0163C8  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 36413  0163CC  6A02               	clrf	i2___awmod@dividend+1,c
 36414  0163CE  ECE5  F0C2         	call	i2___awmod	;wreg free
 36415  0163D2  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 36416  0163D6  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 36417  0163DA  ECAE  F0C1         	call	i2___awdiv	;wreg free
 36418  0163DE  90D8               	bcf	status,0,c
 36419  0163E0  3607               	rlcf	?i2___awdiv,f,c
 36420  0163E2  3608               	rlcf	?i2___awdiv+1,f,c
 36421  0163E4  90D8               	bcf	status,0,c
 36422  0163E6  3607               	rlcf	?i2___awdiv,f,c
 36423  0163E8  3608               	rlcf	?i2___awdiv+1,f,c
 36424  0163EA  0E24               	movlw	36
 36425  0163EC  2607               	addwf	?i2___awdiv,f,c
 36426  0163EE  0E00               	movlw	0
 36427  0163F0  2208               	addwfc	?i2___awdiv+1,f,c
 36428  0163F2  0E77               	movlw	low __npowers_
 36429  0163F4  2407               	addwf	?i2___awdiv,w,c
 36430  0163F6  6EF6               	movwf	tblptrl,c
 36431  0163F8  0ED8               	movlw	high __npowers_
 36432  0163FA  2008               	addwfc	?i2___awdiv+1,w,c
 36433  0163FC  6EF7               	movwf	tblptrh,c
 36434  0163FE                     	if	1	;There are 3 active tblptr bytes
 36435  0163FE  6AF8               	clrf	tblptru,c
 36436  016400  0E00               	movlw	low (__mediumconst shr (0+16))
 36437  016402  22F8               	addwfc	tblptru,f,c
 36438  016404                     	endif
 36439  016404  0009               	tblrd		*+
 36440  016406  CFF5 F034          	movff	tablat,i2___flmul@a
 36441  01640A  0009               	tblrd		*+
 36442  01640C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 36443  016410  0009               	tblrd		*+
 36444  016412  CFF5 F036          	movff	tablat,i2___flmul@a+2
 36445  016416  000A               	tblrd		*-
 36446  016418  CFF5 F037          	movff	tablat,i2___flmul@a+3
 36447  01641C  0E00               	movlw	0
 36448  01641E  6E0A               	movwf	i2___awdiv@divisor+1,c
 36449  016420  0E64               	movlw	100
 36450  016422  6E09               	movwf	i2___awdiv@divisor,c
 36451  016424  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 36452  016428  6A08               	clrf	i2___awdiv@dividend+1,c
 36453  01642A  ECAE  F0C1         	call	i2___awdiv	;wreg free
 36454  01642E  90D8               	bcf	status,0,c
 36455  016430  3607               	rlcf	?i2___awdiv,f,c
 36456  016432  3608               	rlcf	?i2___awdiv+1,f,c
 36457  016434  90D8               	bcf	status,0,c
 36458  016436  3607               	rlcf	?i2___awdiv,f,c
 36459  016438  3608               	rlcf	?i2___awdiv+1,f,c
 36460  01643A  0E48               	movlw	72
 36461  01643C  2607               	addwf	?i2___awdiv,f,c
 36462  01643E  0E00               	movlw	0
 36463  016440  2208               	addwfc	?i2___awdiv+1,f,c
 36464  016442  0E77               	movlw	low __npowers_
 36465  016444  2407               	addwf	?i2___awdiv,w,c
 36466  016446  6EF6               	movwf	tblptrl,c
 36467  016448  0ED8               	movlw	high __npowers_
 36468  01644A  2008               	addwfc	?i2___awdiv+1,w,c
 36469  01644C  6EF7               	movwf	tblptrh,c
 36470  01644E                     	if	1	;There are 3 active tblptr bytes
 36471  01644E  6AF8               	clrf	tblptru,c
 36472  016450  0E00               	movlw	low (__mediumconst shr (0+16))
 36473  016452  22F8               	addwfc	tblptru,f,c
 36474  016454                     	endif
 36475  016454  0009               	tblrd		*+
 36476  016456  CFF5 F030          	movff	tablat,i2___flmul@b
 36477  01645A  0009               	tblrd		*+
 36478  01645C  CFF5 F031          	movff	tablat,i2___flmul@b+1
 36479  016460  0009               	tblrd		*+
 36480  016462  CFF5 F032          	movff	tablat,i2___flmul@b+2
 36481  016466  000A               	tblrd		*-
 36482  016468  CFF5 F033          	movff	tablat,i2___flmul@b+3
 36483  01646C  EC77  F0A4         	call	i2___flmul	;wreg free
 36484  016470  C030  F051         	movff	?i2___flmul,i2_fround$4373
 36485  016474  C031  F052         	movff	?i2___flmul+1,i2_fround$4373+1
 36486  016478  C032  F053         	movff	?i2___flmul+2,i2_fround$4373+2
 36487  01647C  C033  F054         	movff	?i2___flmul+3,i2_fround$4373+3
 36488                           
 36489                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 36490  016480  0E00               	movlw	0
 36491  016482  6E04               	movwf	i2___awmod@divisor+1,c
 36492  016484  0E0A               	movlw	10
 36493  016486  6E03               	movwf	i2___awmod@divisor,c
 36494  016488  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 36495  01648C  6A02               	clrf	i2___awmod@dividend+1,c
 36496  01648E  ECE5  F0C2         	call	i2___awmod	;wreg free
 36497  016492  90D8               	bcf	status,0,c
 36498  016494  3601               	rlcf	?i2___awmod,f,c
 36499  016496  3602               	rlcf	?i2___awmod+1,f,c
 36500  016498  90D8               	bcf	status,0,c
 36501  01649A  3601               	rlcf	?i2___awmod,f,c
 36502  01649C  3602               	rlcf	?i2___awmod+1,f,c
 36503  01649E  0E77               	movlw	low __npowers_
 36504  0164A0  2401               	addwf	?i2___awmod,w,c
 36505  0164A2  6EF6               	movwf	tblptrl,c
 36506  0164A4  0ED8               	movlw	high __npowers_
 36507  0164A6  2002               	addwfc	?i2___awmod+1,w,c
 36508  0164A8  6EF7               	movwf	tblptrh,c
 36509  0164AA                     	if	1	;There are 3 active tblptr bytes
 36510  0164AA  6AF8               	clrf	tblptru,c
 36511  0164AC  0E00               	movlw	low (__mediumconst shr (0+16))
 36512  0164AE  22F8               	addwfc	tblptru,f,c
 36513  0164B0                     	endif
 36514  0164B0  0009               	tblrd		*+
 36515  0164B2  CFF5 F034          	movff	tablat,i2___flmul@a
 36516  0164B6  0009               	tblrd		*+
 36517  0164B8  CFF5 F035          	movff	tablat,i2___flmul@a+1
 36518  0164BC  0009               	tblrd		*+
 36519  0164BE  CFF5 F036          	movff	tablat,i2___flmul@a+2
 36520  0164C2  000A               	tblrd		*-
 36521  0164C4  CFF5 F037          	movff	tablat,i2___flmul@a+3
 36522  0164C8  C051  F030         	movff	i2_fround$4373,i2___flmul@b
 36523  0164CC  C052  F031         	movff	i2_fround$4373+1,i2___flmul@b+1
 36524  0164D0  C053  F032         	movff	i2_fround$4373+2,i2___flmul@b+2
 36525  0164D4  C054  F033         	movff	i2_fround$4373+3,i2___flmul@b+3
 36526  0164D8  EC77  F0A4         	call	i2___flmul	;wreg free
 36527  0164DC  C030  F04D         	movff	?i2___flmul,i2_fround$4374
 36528  0164E0  C031  F04E         	movff	?i2___flmul+1,i2_fround$4374+1
 36529  0164E4  C032  F04F         	movff	?i2___flmul+2,i2_fround$4374+2
 36530  0164E8  C033  F050         	movff	?i2___flmul+3,i2_fround$4374+3
 36531                           
 36532                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 36533  0164EC  C04D  F030         	movff	i2_fround$4374,i2___flmul@b
 36534  0164F0  C04E  F031         	movff	i2_fround$4374+1,i2___flmul@b+1
 36535  0164F4  C04F  F032         	movff	i2_fround$4374+2,i2___flmul@b+2
 36536  0164F8  C050  F033         	movff	i2_fround$4374+3,i2___flmul@b+3
 36537  0164FC  0E00               	movlw	0
 36538  0164FE  6E34               	movwf	i2___flmul@a,c
 36539  016500  0E00               	movlw	0
 36540  016502  6E35               	movwf	i2___flmul@a+1,c
 36541  016504  0E00               	movlw	0
 36542  016506  6E36               	movwf	i2___flmul@a+2,c
 36543  016508  0E3F               	movlw	63
 36544  01650A  6E37               	movwf	i2___flmul@a+3,c
 36545  01650C  EC77  F0A4         	call	i2___flmul	;wreg free
 36546  016510  C030  F049         	movff	?i2___flmul,?i2_fround
 36547  016514  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 36548  016518  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 36549  01651C  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 36550  016520  0012               	return	
 36551  016522                     i2l1514:
 36552                           
 36553                           ;doprnt.c: 415: else if(prec > 10)
 36554  016522  0E0A               	movlw	10
 36555  016524  6455               	cpfsgt	i2fround@prec,c
 36556  016526  D071               	goto	i2l1517
 36557                           
 36558                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 36559  016528  0E00               	movlw	0
 36560  01652A  6E04               	movwf	i2___awmod@divisor+1,c
 36561  01652C  0E0A               	movlw	10
 36562  01652E  6E03               	movwf	i2___awmod@divisor,c
 36563  016530  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 36564  016534  6A02               	clrf	i2___awmod@dividend+1,c
 36565  016536  ECE5  F0C2         	call	i2___awmod	;wreg free
 36566  01653A  90D8               	bcf	status,0,c
 36567  01653C  3601               	rlcf	?i2___awmod,f,c
 36568  01653E  3602               	rlcf	?i2___awmod+1,f,c
 36569  016540  90D8               	bcf	status,0,c
 36570  016542  3601               	rlcf	?i2___awmod,f,c
 36571  016544  3602               	rlcf	?i2___awmod+1,f,c
 36572  016546  0E77               	movlw	low __npowers_
 36573  016548  2401               	addwf	?i2___awmod,w,c
 36574  01654A  6EF6               	movwf	tblptrl,c
 36575  01654C  0ED8               	movlw	high __npowers_
 36576  01654E  2002               	addwfc	?i2___awmod+1,w,c
 36577  016550  6EF7               	movwf	tblptrh,c
 36578  016552                     	if	1	;There are 3 active tblptr bytes
 36579  016552  6AF8               	clrf	tblptru,c
 36580  016554  0E00               	movlw	low (__mediumconst shr (0+16))
 36581  016556  22F8               	addwfc	tblptru,f,c
 36582  016558                     	endif
 36583  016558  0009               	tblrd		*+
 36584  01655A  CFF5 F034          	movff	tablat,i2___flmul@a
 36585  01655E  0009               	tblrd		*+
 36586  016560  CFF5 F035          	movff	tablat,i2___flmul@a+1
 36587  016564  0009               	tblrd		*+
 36588  016566  CFF5 F036          	movff	tablat,i2___flmul@a+2
 36589  01656A  000A               	tblrd		*-
 36590  01656C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 36591  016570  0E00               	movlw	0
 36592  016572  6E0A               	movwf	i2___awdiv@divisor+1,c
 36593  016574  0E0A               	movlw	10
 36594  016576  6E09               	movwf	i2___awdiv@divisor,c
 36595  016578  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 36596  01657C  6A08               	clrf	i2___awdiv@dividend+1,c
 36597  01657E  ECAE  F0C1         	call	i2___awdiv	;wreg free
 36598  016582  90D8               	bcf	status,0,c
 36599  016584  3607               	rlcf	?i2___awdiv,f,c
 36600  016586  3608               	rlcf	?i2___awdiv+1,f,c
 36601  016588  90D8               	bcf	status,0,c
 36602  01658A  3607               	rlcf	?i2___awdiv,f,c
 36603  01658C  3608               	rlcf	?i2___awdiv+1,f,c
 36604  01658E  0E24               	movlw	36
 36605  016590  2607               	addwf	?i2___awdiv,f,c
 36606  016592  0E00               	movlw	0
 36607  016594  2208               	addwfc	?i2___awdiv+1,f,c
 36608  016596  0E77               	movlw	low __npowers_
 36609  016598  2407               	addwf	?i2___awdiv,w,c
 36610  01659A  6EF6               	movwf	tblptrl,c
 36611  01659C  0ED8               	movlw	high __npowers_
 36612  01659E  2008               	addwfc	?i2___awdiv+1,w,c
 36613  0165A0  6EF7               	movwf	tblptrh,c
 36614  0165A2                     	if	1	;There are 3 active tblptr bytes
 36615  0165A2  6AF8               	clrf	tblptru,c
 36616  0165A4  0E00               	movlw	low (__mediumconst shr (0+16))
 36617  0165A6  22F8               	addwfc	tblptru,f,c
 36618  0165A8                     	endif
 36619  0165A8  0009               	tblrd		*+
 36620  0165AA  CFF5 F030          	movff	tablat,i2___flmul@b
 36621  0165AE  0009               	tblrd		*+
 36622  0165B0  CFF5 F031          	movff	tablat,i2___flmul@b+1
 36623  0165B4  0009               	tblrd		*+
 36624  0165B6  CFF5 F032          	movff	tablat,i2___flmul@b+2
 36625  0165BA  000A               	tblrd		*-
 36626  0165BC  CFF5 F033          	movff	tablat,i2___flmul@b+3
 36627  0165C0  EC77  F0A4         	call	i2___flmul	;wreg free
 36628  0165C4  C030  F051         	movff	?i2___flmul,i2_fround$4373
 36629  0165C8  C031  F052         	movff	?i2___flmul+1,i2_fround$4373+1
 36630  0165CC  C032  F053         	movff	?i2___flmul+2,i2_fround$4373+2
 36631  0165D0  C033  F054         	movff	?i2___flmul+3,i2_fround$4373+3
 36632                           
 36633                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 36634  0165D4  C051  F030         	movff	i2_fround$4373,i2___flmul@b
 36635  0165D8  C052  F031         	movff	i2_fround$4373+1,i2___flmul@b+1
 36636  0165DC  C053  F032         	movff	i2_fround$4373+2,i2___flmul@b+2
 36637  0165E0  C054  F033         	movff	i2_fround$4373+3,i2___flmul@b+3
 36638  0165E4  0E00               	movlw	0
 36639  0165E6  6E34               	movwf	i2___flmul@a,c
 36640  0165E8  0E00               	movlw	0
 36641  0165EA  6E35               	movwf	i2___flmul@a+1,c
 36642  0165EC  0E00               	movlw	0
 36643  0165EE  6E36               	movwf	i2___flmul@a+2,c
 36644  0165F0  0E3F               	movlw	63
 36645  0165F2  6E37               	movwf	i2___flmul@a+3,c
 36646  0165F4  EC77  F0A4         	call	i2___flmul	;wreg free
 36647  0165F8  C030  F049         	movff	?i2___flmul,?i2_fround
 36648  0165FC  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 36649  016600  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 36650  016604  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 36651  016608  0012               	return	
 36652  01660A                     i2l1517:
 36653                           
 36654                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 36655  01660A  5055               	movf	i2fround@prec,w,c
 36656  01660C  0D04               	mullw	4
 36657  01660E  0E77               	movlw	low __npowers_
 36658  016610  24F3               	addwf	prodl,w,c
 36659  016612  6EF6               	movwf	tblptrl,c
 36660  016614  0ED8               	movlw	high __npowers_
 36661  016616  20F4               	addwfc	prodh,w,c
 36662  016618  6EF7               	movwf	tblptrh,c
 36663  01661A                     	if	1	;There are 3 active tblptr bytes
 36664  01661A  6AF8               	clrf	tblptru,c
 36665  01661C  0E00               	movlw	low (__mediumconst shr (0+16))
 36666  01661E  22F8               	addwfc	tblptru,f,c
 36667  016620                     	endif
 36668  016620  0009               	tblrd		*+
 36669  016622  CFF5 F030          	movff	tablat,i2___flmul@b
 36670  016626  0009               	tblrd		*+
 36671  016628  CFF5 F031          	movff	tablat,i2___flmul@b+1
 36672  01662C  0009               	tblrd		*+
 36673  01662E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 36674  016632  000A               	tblrd		*-
 36675  016634  CFF5 F033          	movff	tablat,i2___flmul@b+3
 36676  016638  0E00               	movlw	0
 36677  01663A  6E34               	movwf	i2___flmul@a,c
 36678  01663C  0E00               	movlw	0
 36679  01663E  6E35               	movwf	i2___flmul@a+1,c
 36680  016640  0E00               	movlw	0
 36681  016642  6E36               	movwf	i2___flmul@a+2,c
 36682  016644  0E3F               	movlw	63
 36683  016646  6E37               	movwf	i2___flmul@a+3,c
 36684  016648  EC77  F0A4         	call	i2___flmul	;wreg free
 36685  01664C  C030  F049         	movff	?i2___flmul,?i2_fround
 36686  016650  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 36687  016654  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 36688  016658  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 36689  01665C  0012               	return	
 36690  01665E                     __end_ofi2_fround:
 36691                           	opt stack 0
 36692                           tosu	equ	0xFFF
 36693                           tosh	equ	0xFFE
 36694                           tosl	equ	0xFFD
 36695                           pclatu	equ	0xFFB
 36696                           pclath	equ	0xFFA
 36697                           tblptru	equ	0xFF8
 36698                           tblptrh	equ	0xFF7
 36699                           tblptrl	equ	0xFF6
 36700                           tablat	equ	0xFF5
 36701                           prodh	equ	0xFF4
 36702                           prodl	equ	0xFF3
 36703                           intcon	equ	0xFF2
 36704                           indf0	equ	0xFEF
 36705                           postinc0	equ	0xFEE
 36706                           fsr0h	equ	0xFEA
 36707                           fsr0l	equ	0xFE9
 36708                           wreg	equ	0xFE8
 36709                           indf1	equ	0xFE7
 36710                           postdec1	equ	0xFE5
 36711                           plusw1	equ	0xFE3
 36712                           fsr1h	equ	0xFE2
 36713                           fsr1l	equ	0xFE1
 36714                           bsr	equ	0xFE0
 36715                           indf2	equ	0xFDF
 36716                           postinc2	equ	0xFDE
 36717                           postdec2	equ	0xFDD
 36718                           plusw2	equ	0xFDB
 36719                           fsr2h	equ	0xFDA
 36720                           fsr2l	equ	0xFD9
 36721                           status	equ	0xFD8
 36722                           
 36723 ;; *************** function i2___awmod *****************
 36724 ;; Defined at:
 36725 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 36726 ;; Parameters:    Size  Location     Type
 36727 ;;  dividend        2    0[COMRAM] int 
 36728 ;;  divisor         2    2[COMRAM] int 
 36729 ;; Auto vars:     Size  Location     Type
 36730 ;;  __awmod         1    5[COMRAM] unsigned char 
 36731 ;;  __awmod         1    4[COMRAM] unsigned char 
 36732 ;; Return value:  Size  Location     Type
 36733 ;;                  2    0[COMRAM] int 
 36734 ;; Registers used:
 36735 ;;		wreg, status,2, status,0
 36736 ;; Tracked objects:
 36737 ;;		On entry : 0/0
 36738 ;;		On exit  : 0/0
 36739 ;;		Unchanged: 0/0
 36740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36744 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36745 ;;Total ram usage:        6 bytes
 36746 ;; Hardware stack levels used:    1
 36747 ;; This function calls:
 36748 ;;		Nothing
 36749 ;; This function is called by:
 36750 ;;		i2_fround
 36751 ;;		i2_scale
 36752 ;; This function uses a non-reentrant model
 36753 ;;
 36754                           
 36755                           	psect	text107
 36756  0185CA                     __ptext107:
 36757                           	opt stack 0
 36758  0185CA                     i2___awmod:
 36759                           	opt stack 15
 36760                           
 36761                           ;incstack = 0
 36762  0185CA  0E00               	movlw	0
 36763  0185CC  6E06               	movwf	i2___awmod@sign,c
 36764  0185CE  AE02               	btfss	i2___awmod@dividend+1,7,c
 36765  0185D0  D006               	goto	i2l1903
 36766  0185D2  6C01               	negf	i2___awmod@dividend,c
 36767  0185D4  1E02               	comf	i2___awmod@dividend+1,f,c
 36768  0185D6  B0D8               	btfsc	status,0,c
 36769  0185D8  2A02               	incf	i2___awmod@dividend+1,f,c
 36770  0185DA  0E01               	movlw	1
 36771  0185DC  6E06               	movwf	i2___awmod@sign,c
 36772  0185DE                     i2l1903:
 36773  0185DE  AE04               	btfss	i2___awmod@divisor+1,7,c
 36774  0185E0  D004               	goto	i2l1904
 36775  0185E2  6C03               	negf	i2___awmod@divisor,c
 36776  0185E4  1E04               	comf	i2___awmod@divisor+1,f,c
 36777  0185E6  B0D8               	btfsc	status,0,c
 36778  0185E8  2A04               	incf	i2___awmod@divisor+1,f,c
 36779  0185EA                     i2l1904:
 36780  0185EA  5003               	movf	i2___awmod@divisor,w,c
 36781  0185EC  1004               	iorwf	i2___awmod@divisor+1,w,c
 36782  0185EE  B4D8               	btfsc	status,2,c
 36783  0185F0  D018               	goto	i2l1911
 36784  0185F2  0E01               	movlw	1
 36785  0185F4  6E05               	movwf	i2___awmod@counter,c
 36786  0185F6  D004               	goto	i2l1906
 36787  0185F8  90D8               	bcf	status,0,c
 36788  0185FA  3603               	rlcf	i2___awmod@divisor,f,c
 36789  0185FC  3604               	rlcf	i2___awmod@divisor+1,f,c
 36790  0185FE  2A05               	incf	i2___awmod@counter,f,c
 36791  018600                     i2l1906:
 36792  018600  AE04               	btfss	i2___awmod@divisor+1,7,c
 36793  018602  D7FA               	goto	i2l1907
 36794  018604                     i2u1699_40:
 36795  018604  5003               	movf	i2___awmod@divisor,w,c
 36796  018606  5C01               	subwf	i2___awmod@dividend,w,c
 36797  018608  5004               	movf	i2___awmod@divisor+1,w,c
 36798  01860A  5802               	subwfb	i2___awmod@dividend+1,w,c
 36799  01860C  A0D8               	btfss	status,0,c
 36800  01860E  D004               	goto	i2l1910
 36801  018610  5003               	movf	i2___awmod@divisor,w,c
 36802  018612  5E01               	subwf	i2___awmod@dividend,f,c
 36803  018614  5004               	movf	i2___awmod@divisor+1,w,c
 36804  018616  5A02               	subwfb	i2___awmod@dividend+1,f,c
 36805  018618                     i2l1910:
 36806  018618  90D8               	bcf	status,0,c
 36807  01861A  3204               	rrcf	i2___awmod@divisor+1,f,c
 36808  01861C  3203               	rrcf	i2___awmod@divisor,f,c
 36809  01861E  2E05               	decfsz	i2___awmod@counter,f,c
 36810  018620  D7F1               	goto	i2u1699_40
 36811  018622                     i2l1911:
 36812  018622  5006               	movf	i2___awmod@sign,w,c
 36813  018624  B4D8               	btfsc	status,2,c
 36814  018626  D004               	goto	i2l1912
 36815  018628  6C01               	negf	i2___awmod@dividend,c
 36816  01862A  1E02               	comf	i2___awmod@dividend+1,f,c
 36817  01862C  B0D8               	btfsc	status,0,c
 36818  01862E  2A02               	incf	i2___awmod@dividend+1,f,c
 36819  018630                     i2l1912:
 36820  018630  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 36821  018634  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 36822  018638  0012               	return	
 36823  01863A                     __end_ofi2___awmod:
 36824                           	opt stack 0
 36825                           tosu	equ	0xFFF
 36826                           tosh	equ	0xFFE
 36827                           tosl	equ	0xFFD
 36828                           pclatu	equ	0xFFB
 36829                           pclath	equ	0xFFA
 36830                           tblptru	equ	0xFF8
 36831                           tblptrh	equ	0xFF7
 36832                           tblptrl	equ	0xFF6
 36833                           tablat	equ	0xFF5
 36834                           prodh	equ	0xFF4
 36835                           prodl	equ	0xFF3
 36836                           intcon	equ	0xFF2
 36837                           indf0	equ	0xFEF
 36838                           postinc0	equ	0xFEE
 36839                           fsr0h	equ	0xFEA
 36840                           fsr0l	equ	0xFE9
 36841                           wreg	equ	0xFE8
 36842                           indf1	equ	0xFE7
 36843                           postdec1	equ	0xFE5
 36844                           plusw1	equ	0xFE3
 36845                           fsr1h	equ	0xFE2
 36846                           fsr1l	equ	0xFE1
 36847                           bsr	equ	0xFE0
 36848                           indf2	equ	0xFDF
 36849                           postinc2	equ	0xFDE
 36850                           postdec2	equ	0xFDD
 36851                           plusw2	equ	0xFDB
 36852                           fsr2h	equ	0xFDA
 36853                           fsr2l	equ	0xFD9
 36854                           status	equ	0xFD8
 36855                           
 36856 ;; *************** function i2___awdiv *****************
 36857 ;; Defined at:
 36858 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 36859 ;; Parameters:    Size  Location     Type
 36860 ;;  dividend        2    6[COMRAM] int 
 36861 ;;  divisor         2    8[COMRAM] int 
 36862 ;; Auto vars:     Size  Location     Type
 36863 ;;  __awdiv         2   12[COMRAM] int 
 36864 ;;  __awdiv         1   11[COMRAM] unsigned char 
 36865 ;;  __awdiv         1   10[COMRAM] unsigned char 
 36866 ;; Return value:  Size  Location     Type
 36867 ;;                  2    6[COMRAM] int 
 36868 ;; Registers used:
 36869 ;;		wreg, status,2, status,0
 36870 ;; Tracked objects:
 36871 ;;		On entry : 0/0
 36872 ;;		On exit  : 0/0
 36873 ;;		Unchanged: 0/0
 36874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36876 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36878 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36879 ;;Total ram usage:        8 bytes
 36880 ;; Hardware stack levels used:    1
 36881 ;; This function calls:
 36882 ;;		Nothing
 36883 ;; This function is called by:
 36884 ;;		i2_fround
 36885 ;;		i2_scale
 36886 ;;		i2_printf
 36887 ;; This function uses a non-reentrant model
 36888 ;;
 36889                           
 36890                           	psect	text108
 36891  01835C                     __ptext108:
 36892                           	opt stack 0
 36893  01835C                     i2___awdiv:
 36894                           	opt stack 15
 36895                           
 36896                           ;incstack = 0
 36897  01835C  0E00               	movlw	0
 36898  01835E  6E0C               	movwf	i2___awdiv@sign,c
 36899  018360  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 36900  018362  D006               	goto	i2l1890
 36901  018364  6C09               	negf	i2___awdiv@divisor,c
 36902  018366  1E0A               	comf	i2___awdiv@divisor+1,f,c
 36903  018368  B0D8               	btfsc	status,0,c
 36904  01836A  2A0A               	incf	i2___awdiv@divisor+1,f,c
 36905  01836C  0E01               	movlw	1
 36906  01836E  6E0C               	movwf	i2___awdiv@sign,c
 36907  018370                     i2l1890:
 36908  018370  AE08               	btfss	i2___awdiv@dividend+1,7,c
 36909  018372  D006               	goto	i2l1891
 36910  018374  6C07               	negf	i2___awdiv@dividend,c
 36911  018376  1E08               	comf	i2___awdiv@dividend+1,f,c
 36912  018378  B0D8               	btfsc	status,0,c
 36913  01837A  2A08               	incf	i2___awdiv@dividend+1,f,c
 36914  01837C  0E01               	movlw	1
 36915  01837E  1A0C               	xorwf	i2___awdiv@sign,f,c
 36916  018380                     i2l1891:
 36917  018380  0E00               	movlw	0
 36918  018382  6E0E               	movwf	i2___awdiv@quotient+1,c
 36919  018384  0E00               	movlw	0
 36920  018386  6E0D               	movwf	i2___awdiv@quotient,c
 36921  018388  5009               	movf	i2___awdiv@divisor,w,c
 36922  01838A  100A               	iorwf	i2___awdiv@divisor+1,w,c
 36923  01838C  B4D8               	btfsc	status,2,c
 36924  01838E  D01C               	goto	i2l1898
 36925  018390  0E01               	movlw	1
 36926  018392  6E0B               	movwf	i2___awdiv@counter,c
 36927  018394  D004               	goto	i2l1893
 36928  018396  90D8               	bcf	status,0,c
 36929  018398  3609               	rlcf	i2___awdiv@divisor,f,c
 36930  01839A  360A               	rlcf	i2___awdiv@divisor+1,f,c
 36931  01839C  2A0B               	incf	i2___awdiv@counter,f,c
 36932  01839E                     i2l1893:
 36933  01839E  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 36934  0183A0  D7FA               	goto	i2l1894
 36935  0183A2                     i2u1693_40:
 36936  0183A2  90D8               	bcf	status,0,c
 36937  0183A4  360D               	rlcf	i2___awdiv@quotient,f,c
 36938  0183A6  360E               	rlcf	i2___awdiv@quotient+1,f,c
 36939  0183A8  5009               	movf	i2___awdiv@divisor,w,c
 36940  0183AA  5C07               	subwf	i2___awdiv@dividend,w,c
 36941  0183AC  500A               	movf	i2___awdiv@divisor+1,w,c
 36942  0183AE  5808               	subwfb	i2___awdiv@dividend+1,w,c
 36943  0183B0  A0D8               	btfss	status,0,c
 36944  0183B2  D005               	goto	i2l1897
 36945  0183B4  5009               	movf	i2___awdiv@divisor,w,c
 36946  0183B6  5E07               	subwf	i2___awdiv@dividend,f,c
 36947  0183B8  500A               	movf	i2___awdiv@divisor+1,w,c
 36948  0183BA  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 36949  0183BC  800D               	bsf	i2___awdiv@quotient,0,c
 36950  0183BE                     i2l1897:
 36951  0183BE  90D8               	bcf	status,0,c
 36952  0183C0  320A               	rrcf	i2___awdiv@divisor+1,f,c
 36953  0183C2  3209               	rrcf	i2___awdiv@divisor,f,c
 36954  0183C4  2E0B               	decfsz	i2___awdiv@counter,f,c
 36955  0183C6  D7ED               	goto	i2u1693_40
 36956  0183C8                     i2l1898:
 36957  0183C8  500C               	movf	i2___awdiv@sign,w,c
 36958  0183CA  B4D8               	btfsc	status,2,c
 36959  0183CC  D004               	goto	i2l1899
 36960  0183CE  6C0D               	negf	i2___awdiv@quotient,c
 36961  0183D0  1E0E               	comf	i2___awdiv@quotient+1,f,c
 36962  0183D2  B0D8               	btfsc	status,0,c
 36963  0183D4  2A0E               	incf	i2___awdiv@quotient+1,f,c
 36964  0183D6                     i2l1899:
 36965  0183D6  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 36966  0183DA  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 36967  0183DE  0012               	return	
 36968  0183E0                     __end_ofi2___awdiv:
 36969                           	opt stack 0
 36970                           tosu	equ	0xFFF
 36971                           tosh	equ	0xFFE
 36972                           tosl	equ	0xFFD
 36973                           pclatu	equ	0xFFB
 36974                           pclath	equ	0xFFA
 36975                           tblptru	equ	0xFF8
 36976                           tblptrh	equ	0xFF7
 36977                           tblptrl	equ	0xFF6
 36978                           tablat	equ	0xFF5
 36979                           prodh	equ	0xFF4
 36980                           prodl	equ	0xFF3
 36981                           intcon	equ	0xFF2
 36982                           indf0	equ	0xFEF
 36983                           postinc0	equ	0xFEE
 36984                           fsr0h	equ	0xFEA
 36985                           fsr0l	equ	0xFE9
 36986                           wreg	equ	0xFE8
 36987                           indf1	equ	0xFE7
 36988                           postdec1	equ	0xFE5
 36989                           plusw1	equ	0xFE3
 36990                           fsr1h	equ	0xFE2
 36991                           fsr1l	equ	0xFE1
 36992                           bsr	equ	0xFE0
 36993                           indf2	equ	0xFDF
 36994                           postinc2	equ	0xFDE
 36995                           postdec2	equ	0xFDD
 36996                           plusw2	equ	0xFDB
 36997                           fsr2h	equ	0xFDA
 36998                           fsr2l	equ	0xFD9
 36999                           status	equ	0xFD8
 37000                           
 37001 ;; *************** function i2__tdiv_to_l_ *****************
 37002 ;; Defined at:
 37003 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 37004 ;; Parameters:    Size  Location     Type
 37005 ;;  f1              3    0[COMRAM] float 
 37006 ;;  f2              3    3[COMRAM] float 
 37007 ;; Auto vars:     Size  Location     Type
 37008 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 37009 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 37010 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 37011 ;; Return value:  Size  Location     Type
 37012 ;;                  4    0[COMRAM] unsigned long 
 37013 ;; Registers used:
 37014 ;;		wreg, status,2, status,0
 37015 ;; Tracked objects:
 37016 ;;		On entry : 0/0
 37017 ;;		On exit  : 0/0
 37018 ;;		Unchanged: 0/0
 37019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37020 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37021 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37022 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37023 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37024 ;;Total ram usage:       15 bytes
 37025 ;; Hardware stack levels used:    1
 37026 ;; This function calls:
 37027 ;;		Nothing
 37028 ;; This function is called by:
 37029 ;;		i2_printf
 37030 ;; This function uses a non-reentrant model
 37031 ;;
 37032                           
 37033                           	psect	text109
 37034  01711C                     __ptext109:
 37035                           	opt stack 0
 37036  01711C                     i2__tdiv_to_l_:
 37037                           	opt stack 16
 37038                           
 37039                           ;incstack = 0
 37040  01711C  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 37041  017120  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 37042  017122  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 37043  017124  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 37044  017126  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 37045  017128  E301               	bnc	u1760_41
 37046  01712A  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 37047  01712C                     u1760_41:
 37048  01712C  5007               	movf	??i2__tdiv_to_l_,w,c
 37049  01712E  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 37050  017130  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 37051  017132  A4D8               	btfss	status,2,c
 37052  017134  D009               	goto	i2l2038
 37053  017136  0E00               	movlw	0
 37054  017138  6E01               	movwf	?i2__tdiv_to_l_,c
 37055  01713A  0E00               	movlw	0
 37056  01713C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 37057  01713E  0E00               	movlw	0
 37058  017140  6E03               	movwf	?i2__tdiv_to_l_+2,c
 37059  017142  0E00               	movlw	0
 37060  017144  6E04               	movwf	?i2__tdiv_to_l_+3,c
 37061  017146  0012               	return	
 37062  017148                     i2l2038:
 37063  017148  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 37064  01714C  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 37065  01714E  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 37066  017150  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 37067  017152  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 37068  017154  E301               	bnc	u1762_41
 37069  017156  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 37070  017158                     u1762_41:
 37071  017158  5007               	movf	??i2__tdiv_to_l_,w,c
 37072  01715A  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 37073  01715C  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 37074  01715E  A4D8               	btfss	status,2,c
 37075  017160  D009               	goto	i2l2040
 37076  017162  0E00               	movlw	0
 37077  017164  6E01               	movwf	?i2__tdiv_to_l_,c
 37078  017166  0E00               	movlw	0
 37079  017168  6E02               	movwf	?i2__tdiv_to_l_+1,c
 37080  01716A  0E00               	movlw	0
 37081  01716C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 37082  01716E  0E00               	movlw	0
 37083  017170  6E04               	movwf	?i2__tdiv_to_l_+3,c
 37084  017172  0012               	return	
 37085  017174                     i2l2040:
 37086  017174  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 37087  017176  0EFF               	movlw	255
 37088  017178  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 37089  01717A  0EFF               	movlw	255
 37090  01717C  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 37091  01717E  0E00               	movlw	0
 37092  017180  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 37093  017182  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 37094  017184  0EFF               	movlw	255
 37095  017186  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 37096  017188  0EFF               	movlw	255
 37097  01718A  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 37098  01718C  0E00               	movlw	0
 37099  01718E  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 37100  017190  0E00               	movlw	0
 37101  017192  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 37102  017194  0E00               	movlw	0
 37103  017196  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 37104  017198  0E00               	movlw	0
 37105  01719A  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 37106  01719C  0E00               	movlw	0
 37107  01719E  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 37108  0171A0  0E7F               	movlw	127
 37109  0171A2  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 37110  0171A4  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 37111  0171A6  0F98               	addlw	152
 37112  0171A8  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 37113  0171AA  0E18               	movlw	24
 37114  0171AC  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 37115  0171AE                     i2l2041:
 37116  0171AE  90D8               	bcf	status,0,c
 37117  0171B0  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 37118  0171B2  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 37119  0171B4  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 37120  0171B6  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 37121  0171B8  5004               	movf	i2__tdiv_to_l_@f2,w,c
 37122  0171BA  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 37123  0171BC  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 37124  0171BE  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 37125  0171C0  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 37126  0171C2  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 37127  0171C4  A0D8               	btfss	status,0,c
 37128  0171C6  D007               	goto	i2l2042
 37129  0171C8  5004               	movf	i2__tdiv_to_l_@f2,w,c
 37130  0171CA  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 37131  0171CC  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 37132  0171CE  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 37133  0171D0  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 37134  0171D2  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 37135  0171D4  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 37136  0171D6                     i2l2042:
 37137  0171D6  90D8               	bcf	status,0,c
 37138  0171D8  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 37139  0171DA  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 37140  0171DC  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 37141  0171DE  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 37142  0171E0  D7E6               	goto	i2l2041
 37143  0171E2  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 37144  0171E4  D016               	goto	i2l2044
 37145  0171E6  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 37146  0171E8  0A80               	xorlw	128
 37147  0171EA  0F97               	addlw	151
 37148  0171EC  B0D8               	btfsc	status,0,c
 37149  0171EE  D009               	goto	i2l2045
 37150  0171F0  0E00               	movlw	0
 37151  0171F2  6E01               	movwf	?i2__tdiv_to_l_,c
 37152  0171F4  0E00               	movlw	0
 37153  0171F6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 37154  0171F8  0E00               	movlw	0
 37155  0171FA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 37156  0171FC  0E00               	movlw	0
 37157  0171FE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 37158  017200  0012               	return	
 37159  017202                     i2l2045:
 37160  017202  90D8               	bcf	status,0,c
 37161  017204  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 37162  017206  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 37163  017208  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 37164  01720A  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 37165  01720C  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 37166  01720E  D7F9               	goto	i2l2045
 37167  017210  D015               	goto	i2u1768_40
 37168  017212                     i2l2044:
 37169  017212  0E17               	movlw	23
 37170  017214  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 37171  017216  D00F               	goto	i2l2050
 37172  017218  0E00               	movlw	0
 37173  01721A  6E01               	movwf	?i2__tdiv_to_l_,c
 37174  01721C  0E00               	movlw	0
 37175  01721E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 37176  017220  0E00               	movlw	0
 37177  017222  6E03               	movwf	?i2__tdiv_to_l_+2,c
 37178  017224  0E00               	movlw	0
 37179  017226  6E04               	movwf	?i2__tdiv_to_l_+3,c
 37180  017228  0012               	return	
 37181  01722A  90D8               	bcf	status,0,c
 37182  01722C  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 37183  01722E  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 37184  017230  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 37185  017232  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 37186  017234  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 37187  017236                     i2l2050:
 37188  017236  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 37189  017238  A4D8               	btfss	status,2,c
 37190  01723A  D7F7               	goto	i2l2051
 37191  01723C                     i2u1768_40:
 37192  01723C  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 37193  017240  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 37194  017244  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 37195  017248  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 37196  01724C  0012               	return		;funcret
 37197  01724E                     __end_ofi2__tdiv_to_l_:
 37198                           	opt stack 0
 37199                           tosu	equ	0xFFF
 37200                           tosh	equ	0xFFE
 37201                           tosl	equ	0xFFD
 37202                           pclatu	equ	0xFFB
 37203                           pclath	equ	0xFFA
 37204                           tblptru	equ	0xFF8
 37205                           tblptrh	equ	0xFF7
 37206                           tblptrl	equ	0xFF6
 37207                           tablat	equ	0xFF5
 37208                           prodh	equ	0xFF4
 37209                           prodl	equ	0xFF3
 37210                           intcon	equ	0xFF2
 37211                           indf0	equ	0xFEF
 37212                           postinc0	equ	0xFEE
 37213                           fsr0h	equ	0xFEA
 37214                           fsr0l	equ	0xFE9
 37215                           wreg	equ	0xFE8
 37216                           indf1	equ	0xFE7
 37217                           postdec1	equ	0xFE5
 37218                           plusw1	equ	0xFE3
 37219                           fsr1h	equ	0xFE2
 37220                           fsr1l	equ	0xFE1
 37221                           bsr	equ	0xFE0
 37222                           indf2	equ	0xFDF
 37223                           postinc2	equ	0xFDE
 37224                           postdec2	equ	0xFDD
 37225                           plusw2	equ	0xFDB
 37226                           fsr2h	equ	0xFDA
 37227                           fsr2l	equ	0xFD9
 37228                           status	equ	0xFD8
 37229                           
 37230 ;; *************** function i2__div_to_l_ *****************
 37231 ;; Defined at:
 37232 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 37233 ;; Parameters:    Size  Location     Type
 37234 ;;  f1              4    0[COMRAM] unsigned long 
 37235 ;;  f2              4    4[COMRAM] unsigned long 
 37236 ;; Auto vars:     Size  Location     Type
 37237 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 37238 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 37239 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 37240 ;; Return value:  Size  Location     Type
 37241 ;;                  4    0[COMRAM] unsigned long 
 37242 ;; Registers used:
 37243 ;;		wreg, status,2, status,0
 37244 ;; Tracked objects:
 37245 ;;		On entry : 0/0
 37246 ;;		On exit  : 0/0
 37247 ;;		Unchanged: 0/0
 37248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37249 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37250 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37252 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37253 ;;Total ram usage:       14 bytes
 37254 ;; Hardware stack levels used:    1
 37255 ;; This function calls:
 37256 ;;		Nothing
 37257 ;; This function is called by:
 37258 ;;		i2_printf
 37259 ;; This function uses a non-reentrant model
 37260 ;;
 37261                           
 37262                           	psect	text110
 37263  017378                     __ptext110:
 37264                           	opt stack 0
 37265  017378                     i2__div_to_l_:
 37266                           	opt stack 16
 37267                           
 37268                           ;incstack = 0
 37269  017378  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 37270  01737A  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 37271  01737C  6E0E               	movwf	i2__div_to_l_@exp1,c
 37272  01737E  500E               	movf	i2__div_to_l_@exp1,w,c
 37273  017380  A4D8               	btfss	status,2,c
 37274  017382  D009               	goto	i2l1934
 37275  017384  0E00               	movlw	0
 37276  017386  6E01               	movwf	?i2__div_to_l_,c
 37277  017388  0E00               	movlw	0
 37278  01738A  6E02               	movwf	?i2__div_to_l_+1,c
 37279  01738C  0E00               	movlw	0
 37280  01738E  6E03               	movwf	?i2__div_to_l_+2,c
 37281  017390  0E00               	movlw	0
 37282  017392  6E04               	movwf	?i2__div_to_l_+3,c
 37283  017394  0012               	return	
 37284  017396                     i2l1934:
 37285  017396  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 37286  017398  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 37287  01739A  6E0D               	movwf	i2__div_to_l_@cntr,c
 37288  01739C  500D               	movf	i2__div_to_l_@cntr,w,c
 37289  01739E  A4D8               	btfss	status,2,c
 37290  0173A0  D009               	goto	i2l1936
 37291  0173A2  0E00               	movlw	0
 37292  0173A4  6E01               	movwf	?i2__div_to_l_,c
 37293  0173A6  0E00               	movlw	0
 37294  0173A8  6E02               	movwf	?i2__div_to_l_+1,c
 37295  0173AA  0E00               	movlw	0
 37296  0173AC  6E03               	movwf	?i2__div_to_l_+2,c
 37297  0173AE  0E00               	movlw	0
 37298  0173B0  6E04               	movwf	?i2__div_to_l_+3,c
 37299  0173B2  0012               	return	
 37300  0173B4                     i2l1936:
 37301  0173B4  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 37302  0173B6  0EFF               	movlw	255
 37303  0173B8  1601               	andwf	i2__div_to_l_@f1,f,c
 37304  0173BA  0EFF               	movlw	255
 37305  0173BC  1602               	andwf	i2__div_to_l_@f1+1,f,c
 37306  0173BE  0EFF               	movlw	255
 37307  0173C0  1603               	andwf	i2__div_to_l_@f1+2,f,c
 37308  0173C2  0E00               	movlw	0
 37309  0173C4  1604               	andwf	i2__div_to_l_@f1+3,f,c
 37310  0173C6  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 37311  0173C8  0EFF               	movlw	255
 37312  0173CA  1605               	andwf	i2__div_to_l_@f2,f,c
 37313  0173CC  0EFF               	movlw	255
 37314  0173CE  1606               	andwf	i2__div_to_l_@f2+1,f,c
 37315  0173D0  0EFF               	movlw	255
 37316  0173D2  1607               	andwf	i2__div_to_l_@f2+2,f,c
 37317  0173D4  0E00               	movlw	0
 37318  0173D6  1608               	andwf	i2__div_to_l_@f2+3,f,c
 37319  0173D8  0E00               	movlw	0
 37320  0173DA  6E09               	movwf	i2__div_to_l_@quot,c
 37321  0173DC  0E00               	movlw	0
 37322  0173DE  6E0A               	movwf	i2__div_to_l_@quot+1,c
 37323  0173E0  0E00               	movlw	0
 37324  0173E2  6E0B               	movwf	i2__div_to_l_@quot+2,c
 37325  0173E4  0E00               	movlw	0
 37326  0173E6  6E0C               	movwf	i2__div_to_l_@quot+3,c
 37327  0173E8  0E7F               	movlw	127
 37328  0173EA  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 37329  0173EC  500D               	movf	i2__div_to_l_@cntr,w,c
 37330  0173EE  0FA0               	addlw	160
 37331  0173F0  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 37332  0173F2  0E20               	movlw	32
 37333  0173F4  6E0D               	movwf	i2__div_to_l_@cntr,c
 37334  0173F6  90D8               	bcf	status,0,c
 37335  0173F8  3609               	rlcf	i2__div_to_l_@quot,f,c
 37336  0173FA  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 37337  0173FC  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 37338  0173FE  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 37339  017400  5005               	movf	i2__div_to_l_@f2,w,c
 37340  017402  5C01               	subwf	i2__div_to_l_@f1,w,c
 37341  017404  5006               	movf	i2__div_to_l_@f2+1,w,c
 37342  017406  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 37343  017408  5007               	movf	i2__div_to_l_@f2+2,w,c
 37344  01740A  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 37345  01740C  5008               	movf	i2__div_to_l_@f2+3,w,c
 37346  01740E  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 37347  017410  A0D8               	btfss	status,0,c
 37348  017412  D009               	goto	i2l1938
 37349  017414  5005               	movf	i2__div_to_l_@f2,w,c
 37350  017416  5E01               	subwf	i2__div_to_l_@f1,f,c
 37351  017418  5006               	movf	i2__div_to_l_@f2+1,w,c
 37352  01741A  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 37353  01741C  5007               	movf	i2__div_to_l_@f2+2,w,c
 37354  01741E  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 37355  017420  5008               	movf	i2__div_to_l_@f2+3,w,c
 37356  017422  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 37357  017424  8009               	bsf	i2__div_to_l_@quot,0,c
 37358  017426                     i2l1938:
 37359  017426  90D8               	bcf	status,0,c
 37360  017428  3601               	rlcf	i2__div_to_l_@f1,f,c
 37361  01742A  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 37362  01742C  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 37363  01742E  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 37364  017430  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 37365  017432  D7E1               	goto	i2l1937
 37366  017434  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 37367  017436  D016               	goto	i2l1940
 37368  017438  500E               	movf	i2__div_to_l_@exp1,w,c
 37369  01743A  0A80               	xorlw	128
 37370  01743C  0F9F               	addlw	159
 37371  01743E  B0D8               	btfsc	status,0,c
 37372  017440  D009               	goto	i2l1941
 37373  017442  0E00               	movlw	0
 37374  017444  6E01               	movwf	?i2__div_to_l_,c
 37375  017446  0E00               	movlw	0
 37376  017448  6E02               	movwf	?i2__div_to_l_+1,c
 37377  01744A  0E00               	movlw	0
 37378  01744C  6E03               	movwf	?i2__div_to_l_+2,c
 37379  01744E  0E00               	movlw	0
 37380  017450  6E04               	movwf	?i2__div_to_l_+3,c
 37381  017452  0012               	return	
 37382  017454                     i2l1941:
 37383  017454  90D8               	bcf	status,0,c
 37384  017456  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 37385  017458  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 37386  01745A  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 37387  01745C  3209               	rrcf	i2__div_to_l_@quot,f,c
 37388  01745E  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 37389  017460  D7F9               	goto	i2l1941
 37390  017462  D015               	goto	i2u1759_40
 37391  017464                     i2l1940:
 37392  017464  0E1F               	movlw	31
 37393  017466  640E               	cpfsgt	i2__div_to_l_@exp1,c
 37394  017468  D00F               	goto	i2l1946
 37395  01746A  0E00               	movlw	0
 37396  01746C  6E01               	movwf	?i2__div_to_l_,c
 37397  01746E  0E00               	movlw	0
 37398  017470  6E02               	movwf	?i2__div_to_l_+1,c
 37399  017472  0E00               	movlw	0
 37400  017474  6E03               	movwf	?i2__div_to_l_+2,c
 37401  017476  0E00               	movlw	0
 37402  017478  6E04               	movwf	?i2__div_to_l_+3,c
 37403  01747A  0012               	return	
 37404  01747C  90D8               	bcf	status,0,c
 37405  01747E  3609               	rlcf	i2__div_to_l_@quot,f,c
 37406  017480  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 37407  017482  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 37408  017484  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 37409  017486  060E               	decf	i2__div_to_l_@exp1,f,c
 37410  017488                     i2l1946:
 37411  017488  500E               	movf	i2__div_to_l_@exp1,w,c
 37412  01748A  A4D8               	btfss	status,2,c
 37413  01748C  D7F7               	goto	i2l1947
 37414  01748E                     i2u1759_40:
 37415  01748E  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 37416  017492  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 37417  017496  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 37418  01749A  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 37419  01749E  0012               	return		;funcret
 37420  0174A0                     __end_ofi2__div_to_l_:
 37421                           	opt stack 0
 37422                           tosu	equ	0xFFF
 37423                           tosh	equ	0xFFE
 37424                           tosl	equ	0xFFD
 37425                           pclatu	equ	0xFFB
 37426                           pclath	equ	0xFFA
 37427                           tblptru	equ	0xFF8
 37428                           tblptrh	equ	0xFF7
 37429                           tblptrl	equ	0xFF6
 37430                           tablat	equ	0xFF5
 37431                           prodh	equ	0xFF4
 37432                           prodl	equ	0xFF3
 37433                           intcon	equ	0xFF2
 37434                           indf0	equ	0xFEF
 37435                           postinc0	equ	0xFEE
 37436                           fsr0h	equ	0xFEA
 37437                           fsr0l	equ	0xFE9
 37438                           wreg	equ	0xFE8
 37439                           indf1	equ	0xFE7
 37440                           postdec1	equ	0xFE5
 37441                           plusw1	equ	0xFE3
 37442                           fsr1h	equ	0xFE2
 37443                           fsr1l	equ	0xFE1
 37444                           bsr	equ	0xFE0
 37445                           indf2	equ	0xFDF
 37446                           postinc2	equ	0xFDE
 37447                           postdec2	equ	0xFDD
 37448                           plusw2	equ	0xFDB
 37449                           fsr2h	equ	0xFDA
 37450                           fsr2l	equ	0xFD9
 37451                           status	equ	0xFD8
 37452                           
 37453 ;; *************** function i2___wmul *****************
 37454 ;; Defined at:
 37455 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 37456 ;; Parameters:    Size  Location     Type
 37457 ;;  multiplier      2    0[COMRAM] unsigned int 
 37458 ;;  multiplicand    2    2[COMRAM] unsigned int 
 37459 ;; Auto vars:     Size  Location     Type
 37460 ;;  __wmul          2    4[COMRAM] unsigned int 
 37461 ;; Return value:  Size  Location     Type
 37462 ;;                  2    0[COMRAM] unsigned int 
 37463 ;; Registers used:
 37464 ;;		wreg, status,2, status,0, prodl, prodh
 37465 ;; Tracked objects:
 37466 ;;		On entry : 0/0
 37467 ;;		On exit  : 0/0
 37468 ;;		Unchanged: 0/0
 37469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37473 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37474 ;;Total ram usage:        6 bytes
 37475 ;; Hardware stack levels used:    1
 37476 ;; This function calls:
 37477 ;;		Nothing
 37478 ;; This function is called by:
 37479 ;;		i2_printf
 37480 ;; This function uses a non-reentrant model
 37481 ;;
 37482                           
 37483                           	psect	text111
 37484  01915E                     __ptext111:
 37485                           	opt stack 0
 37486  01915E                     i2___wmul:
 37487                           	opt stack 16
 37488                           
 37489                           ;incstack = 0
 37490  01915E  5001               	movf	i2___wmul@multiplier,w,c
 37491  019160  0203               	mulwf	i2___wmul@multiplicand,c
 37492  019162  CFF3 F005          	movff	prodl,i2___wmul@product
 37493  019166  CFF4 F006          	movff	prodh,i2___wmul@product+1
 37494  01916A  5001               	movf	i2___wmul@multiplier,w,c
 37495  01916C  0204               	mulwf	i2___wmul@multiplicand+1,c
 37496  01916E  50F3               	movf	prodl,w,c
 37497  019170  2606               	addwf	i2___wmul@product+1,f,c
 37498  019172  5002               	movf	i2___wmul@multiplier+1,w,c
 37499  019174  0203               	mulwf	i2___wmul@multiplicand,c
 37500  019176  50F3               	movf	prodl,w,c
 37501  019178  2606               	addwf	i2___wmul@product+1,f,c
 37502  01917A  C005  F001         	movff	i2___wmul@product,?i2___wmul
 37503  01917E  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 37504  019182  0012               	return	
 37505  019184                     __end_ofi2___wmul:
 37506                           	opt stack 0
 37507                           tosu	equ	0xFFF
 37508                           tosh	equ	0xFFE
 37509                           tosl	equ	0xFFD
 37510                           pclatu	equ	0xFFB
 37511                           pclath	equ	0xFFA
 37512                           tblptru	equ	0xFF8
 37513                           tblptrh	equ	0xFF7
 37514                           tblptrl	equ	0xFF6
 37515                           tablat	equ	0xFF5
 37516                           prodh	equ	0xFF4
 37517                           prodl	equ	0xFF3
 37518                           intcon	equ	0xFF2
 37519                           indf0	equ	0xFEF
 37520                           postinc0	equ	0xFEE
 37521                           fsr0h	equ	0xFEA
 37522                           fsr0l	equ	0xFE9
 37523                           wreg	equ	0xFE8
 37524                           indf1	equ	0xFE7
 37525                           postdec1	equ	0xFE5
 37526                           plusw1	equ	0xFE3
 37527                           fsr1h	equ	0xFE2
 37528                           fsr1l	equ	0xFE1
 37529                           bsr	equ	0xFE0
 37530                           indf2	equ	0xFDF
 37531                           postinc2	equ	0xFDE
 37532                           postdec2	equ	0xFDD
 37533                           plusw2	equ	0xFDB
 37534                           fsr2h	equ	0xFDA
 37535                           fsr2l	equ	0xFD9
 37536                           status	equ	0xFD8
 37537                           
 37538 ;; *************** function i2___llmod *****************
 37539 ;; Defined at:
 37540 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 37541 ;; Parameters:    Size  Location     Type
 37542 ;;  dividend        4   13[COMRAM] unsigned long 
 37543 ;;  divisor         4   17[COMRAM] unsigned long 
 37544 ;; Auto vars:     Size  Location     Type
 37545 ;;  __llmod         1   21[COMRAM] unsigned char 
 37546 ;; Return value:  Size  Location     Type
 37547 ;;                  4   13[COMRAM] unsigned long 
 37548 ;; Registers used:
 37549 ;;		wreg, status,2, status,0
 37550 ;; Tracked objects:
 37551 ;;		On entry : 0/0
 37552 ;;		On exit  : 0/0
 37553 ;;		Unchanged: 0/0
 37554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37555 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37558 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37559 ;;Total ram usage:        9 bytes
 37560 ;; Hardware stack levels used:    1
 37561 ;; This function calls:
 37562 ;;		Nothing
 37563 ;; This function is called by:
 37564 ;;		i2_printf
 37565 ;; This function uses a non-reentrant model
 37566 ;;
 37567                           
 37568                           	psect	text112
 37569  0187E2                     __ptext112:
 37570                           	opt stack 0
 37571  0187E2                     i2___llmod:
 37572                           	opt stack 16
 37573                           
 37574                           ;incstack = 0
 37575  0187E2  5012               	movf	i2___llmod@divisor,w,c
 37576  0187E4  1013               	iorwf	i2___llmod@divisor+1,w,c
 37577  0187E6  1014               	iorwf	i2___llmod@divisor+2,w,c
 37578  0187E8  1015               	iorwf	i2___llmod@divisor+3,w,c
 37579  0187EA  B4D8               	btfsc	status,2,c
 37580  0187EC  D024               	goto	i2l2139
 37581  0187EE  0E01               	movlw	1
 37582  0187F0  6E16               	movwf	i2___llmod@counter,c
 37583  0187F2  D006               	goto	i2l2134
 37584  0187F4  90D8               	bcf	status,0,c
 37585  0187F6  3612               	rlcf	i2___llmod@divisor,f,c
 37586  0187F8  3613               	rlcf	i2___llmod@divisor+1,f,c
 37587  0187FA  3614               	rlcf	i2___llmod@divisor+2,f,c
 37588  0187FC  3615               	rlcf	i2___llmod@divisor+3,f,c
 37589  0187FE  2A16               	incf	i2___llmod@counter,f,c
 37590  018800                     i2l2134:
 37591  018800  AE15               	btfss	i2___llmod@divisor+3,7,c
 37592  018802  D7F8               	goto	i2l2135
 37593  018804                     i2u1775_40:
 37594  018804  5012               	movf	i2___llmod@divisor,w,c
 37595  018806  5C0E               	subwf	i2___llmod@dividend,w,c
 37596  018808  5013               	movf	i2___llmod@divisor+1,w,c
 37597  01880A  580F               	subwfb	i2___llmod@dividend+1,w,c
 37598  01880C  5014               	movf	i2___llmod@divisor+2,w,c
 37599  01880E  5810               	subwfb	i2___llmod@dividend+2,w,c
 37600  018810  5015               	movf	i2___llmod@divisor+3,w,c
 37601  018812  5811               	subwfb	i2___llmod@dividend+3,w,c
 37602  018814  A0D8               	btfss	status,0,c
 37603  018816  D008               	goto	i2l2138
 37604  018818  5012               	movf	i2___llmod@divisor,w,c
 37605  01881A  5E0E               	subwf	i2___llmod@dividend,f,c
 37606  01881C  5013               	movf	i2___llmod@divisor+1,w,c
 37607  01881E  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 37608  018820  5014               	movf	i2___llmod@divisor+2,w,c
 37609  018822  5A10               	subwfb	i2___llmod@dividend+2,f,c
 37610  018824  5015               	movf	i2___llmod@divisor+3,w,c
 37611  018826  5A11               	subwfb	i2___llmod@dividend+3,f,c
 37612  018828                     i2l2138:
 37613  018828  90D8               	bcf	status,0,c
 37614  01882A  3215               	rrcf	i2___llmod@divisor+3,f,c
 37615  01882C  3214               	rrcf	i2___llmod@divisor+2,f,c
 37616  01882E  3213               	rrcf	i2___llmod@divisor+1,f,c
 37617  018830  3212               	rrcf	i2___llmod@divisor,f,c
 37618  018832  2E16               	decfsz	i2___llmod@counter,f,c
 37619  018834  D7E7               	goto	i2u1775_40
 37620  018836                     i2l2139:
 37621  018836  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 37622  01883A  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 37623  01883E  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 37624  018842  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 37625  018846  0012               	return		;funcret
 37626  018848                     __end_ofi2___llmod:
 37627                           	opt stack 0
 37628                           tosu	equ	0xFFF
 37629                           tosh	equ	0xFFE
 37630                           tosl	equ	0xFFD
 37631                           pclatu	equ	0xFFB
 37632                           pclath	equ	0xFFA
 37633                           tblptru	equ	0xFF8
 37634                           tblptrh	equ	0xFF7
 37635                           tblptrl	equ	0xFF6
 37636                           tablat	equ	0xFF5
 37637                           prodh	equ	0xFF4
 37638                           prodl	equ	0xFF3
 37639                           intcon	equ	0xFF2
 37640                           indf0	equ	0xFEF
 37641                           postinc0	equ	0xFEE
 37642                           fsr0h	equ	0xFEA
 37643                           fsr0l	equ	0xFE9
 37644                           wreg	equ	0xFE8
 37645                           indf1	equ	0xFE7
 37646                           postdec1	equ	0xFE5
 37647                           plusw1	equ	0xFE3
 37648                           fsr1h	equ	0xFE2
 37649                           fsr1l	equ	0xFE1
 37650                           bsr	equ	0xFE0
 37651                           indf2	equ	0xFDF
 37652                           postinc2	equ	0xFDE
 37653                           postdec2	equ	0xFDD
 37654                           plusw2	equ	0xFDB
 37655                           fsr2h	equ	0xFDA
 37656                           fsr2l	equ	0xFD9
 37657                           status	equ	0xFD8
 37658                           
 37659 ;; *************** function i2___lldiv *****************
 37660 ;; Defined at:
 37661 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 37662 ;; Parameters:    Size  Location     Type
 37663 ;;  dividend        4    0[COMRAM] unsigned long 
 37664 ;;  divisor         4    4[COMRAM] unsigned long 
 37665 ;; Auto vars:     Size  Location     Type
 37666 ;;  __lldiv         4    8[COMRAM] unsigned long 
 37667 ;;  __lldiv         1   12[COMRAM] unsigned char 
 37668 ;; Return value:  Size  Location     Type
 37669 ;;                  4    0[COMRAM] unsigned long 
 37670 ;; Registers used:
 37671 ;;		wreg, status,2, status,0
 37672 ;; Tracked objects:
 37673 ;;		On entry : 0/0
 37674 ;;		On exit  : 0/0
 37675 ;;		Unchanged: 0/0
 37676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37677 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37678 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37680 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37681 ;;Total ram usage:       13 bytes
 37682 ;; Hardware stack levels used:    1
 37683 ;; This function calls:
 37684 ;;		Nothing
 37685 ;; This function is called by:
 37686 ;;		i2_printf
 37687 ;; This function uses a non-reentrant model
 37688 ;;
 37689                           
 37690                           	psect	text113
 37691  0183E0                     __ptext113:
 37692                           	opt stack 0
 37693  0183E0                     i2___lldiv:
 37694                           	opt stack 16
 37695                           
 37696                           ;incstack = 0
 37697  0183E0  0E00               	movlw	0
 37698  0183E2  6E09               	movwf	i2___lldiv@quotient,c
 37699  0183E4  0E00               	movlw	0
 37700  0183E6  6E0A               	movwf	i2___lldiv@quotient+1,c
 37701  0183E8  0E00               	movlw	0
 37702  0183EA  6E0B               	movwf	i2___lldiv@quotient+2,c
 37703  0183EC  0E00               	movlw	0
 37704  0183EE  6E0C               	movwf	i2___lldiv@quotient+3,c
 37705  0183F0  5005               	movf	i2___lldiv@divisor,w,c
 37706  0183F2  1006               	iorwf	i2___lldiv@divisor+1,w,c
 37707  0183F4  1007               	iorwf	i2___lldiv@divisor+2,w,c
 37708  0183F6  1008               	iorwf	i2___lldiv@divisor+3,w,c
 37709  0183F8  B4D8               	btfsc	status,2,c
 37710  0183FA  D02A               	goto	i2l2129
 37711  0183FC  0E01               	movlw	1
 37712  0183FE  6E0D               	movwf	i2___lldiv@counter,c
 37713  018400  D006               	goto	i2l2124
 37714  018402  90D8               	bcf	status,0,c
 37715  018404  3605               	rlcf	i2___lldiv@divisor,f,c
 37716  018406  3606               	rlcf	i2___lldiv@divisor+1,f,c
 37717  018408  3607               	rlcf	i2___lldiv@divisor+2,f,c
 37718  01840A  3608               	rlcf	i2___lldiv@divisor+3,f,c
 37719  01840C  2A0D               	incf	i2___lldiv@counter,f,c
 37720  01840E                     i2l2124:
 37721  01840E  AE08               	btfss	i2___lldiv@divisor+3,7,c
 37722  018410  D7F8               	goto	i2l2125
 37723  018412                     i2u1772_40:
 37724  018412  90D8               	bcf	status,0,c
 37725  018414  3609               	rlcf	i2___lldiv@quotient,f,c
 37726  018416  360A               	rlcf	i2___lldiv@quotient+1,f,c
 37727  018418  360B               	rlcf	i2___lldiv@quotient+2,f,c
 37728  01841A  360C               	rlcf	i2___lldiv@quotient+3,f,c
 37729  01841C  5005               	movf	i2___lldiv@divisor,w,c
 37730  01841E  5C01               	subwf	i2___lldiv@dividend,w,c
 37731  018420  5006               	movf	i2___lldiv@divisor+1,w,c
 37732  018422  5802               	subwfb	i2___lldiv@dividend+1,w,c
 37733  018424  5007               	movf	i2___lldiv@divisor+2,w,c
 37734  018426  5803               	subwfb	i2___lldiv@dividend+2,w,c
 37735  018428  5008               	movf	i2___lldiv@divisor+3,w,c
 37736  01842A  5804               	subwfb	i2___lldiv@dividend+3,w,c
 37737  01842C  A0D8               	btfss	status,0,c
 37738  01842E  D009               	goto	i2l2128
 37739  018430  5005               	movf	i2___lldiv@divisor,w,c
 37740  018432  5E01               	subwf	i2___lldiv@dividend,f,c
 37741  018434  5006               	movf	i2___lldiv@divisor+1,w,c
 37742  018436  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 37743  018438  5007               	movf	i2___lldiv@divisor+2,w,c
 37744  01843A  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 37745  01843C  5008               	movf	i2___lldiv@divisor+3,w,c
 37746  01843E  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 37747  018440  8009               	bsf	i2___lldiv@quotient,0,c
 37748  018442                     i2l2128:
 37749  018442  90D8               	bcf	status,0,c
 37750  018444  3208               	rrcf	i2___lldiv@divisor+3,f,c
 37751  018446  3207               	rrcf	i2___lldiv@divisor+2,f,c
 37752  018448  3206               	rrcf	i2___lldiv@divisor+1,f,c
 37753  01844A  3205               	rrcf	i2___lldiv@divisor,f,c
 37754  01844C  2E0D               	decfsz	i2___lldiv@counter,f,c
 37755  01844E  D7E1               	goto	i2u1772_40
 37756  018450                     i2l2129:
 37757  018450  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 37758  018454  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 37759  018458  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 37760  01845C  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 37761  018460  0012               	return		;funcret
 37762  018462                     __end_ofi2___lldiv:
 37763                           	opt stack 0
 37764                           tosu	equ	0xFFF
 37765                           tosh	equ	0xFFE
 37766                           tosl	equ	0xFFD
 37767                           pclatu	equ	0xFFB
 37768                           pclath	equ	0xFFA
 37769                           tblptru	equ	0xFF8
 37770                           tblptrh	equ	0xFF7
 37771                           tblptrl	equ	0xFF6
 37772                           tablat	equ	0xFF5
 37773                           prodh	equ	0xFF4
 37774                           prodl	equ	0xFF3
 37775                           intcon	equ	0xFF2
 37776                           indf0	equ	0xFEF
 37777                           postinc0	equ	0xFEE
 37778                           fsr0h	equ	0xFEA
 37779                           fsr0l	equ	0xFE9
 37780                           wreg	equ	0xFE8
 37781                           indf1	equ	0xFE7
 37782                           postdec1	equ	0xFE5
 37783                           plusw1	equ	0xFE3
 37784                           fsr1h	equ	0xFE2
 37785                           fsr1l	equ	0xFE1
 37786                           bsr	equ	0xFE0
 37787                           indf2	equ	0xFDF
 37788                           postinc2	equ	0xFDE
 37789                           postdec2	equ	0xFDD
 37790                           plusw2	equ	0xFDB
 37791                           fsr2h	equ	0xFDA
 37792                           fsr2l	equ	0xFD9
 37793                           status	equ	0xFD8
 37794                           
 37795 ;; *************** function _ADCC_ThresholdISR *****************
 37796 ;; Defined at:
 37797 ;;		line 298 in file "mcc_generated_files/adcc.c"
 37798 ;; Parameters:    Size  Location     Type
 37799 ;;		None
 37800 ;; Auto vars:     Size  Location     Type
 37801 ;;		None
 37802 ;; Return value:  Size  Location     Type
 37803 ;;                  1    wreg      void 
 37804 ;; Registers used:
 37805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37806 ;; Tracked objects:
 37807 ;;		On entry : 0/0
 37808 ;;		On exit  : 0/0
 37809 ;;		Unchanged: 0/0
 37810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37815 ;;Total ram usage:        0 bytes
 37816 ;; Hardware stack levels used:    1
 37817 ;; Hardware stack levels required when called:    7
 37818 ;; This function calls:
 37819 ;;		Absolute function
 37820 ;;		_ADCC_DefaultInterruptHandler
 37821 ;;		_ADCPostProcessingCallback
 37822 ;; This function is called by:
 37823 ;;		_INTERRUPT_InterruptManagerHigh
 37824 ;; This function uses a non-reentrant model
 37825 ;;
 37826                           
 37827                           	psect	text114
 37828  0190EA                     __ptext114:
 37829                           	opt stack 0
 37830  0190EA                     _ADCC_ThresholdISR:
 37831                           	opt stack 11
 37832                           
 37833                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 37834                           
 37835                           ;incstack = 0
 37836  0190EA  010E               	movlb	14	; () banked
 37837  0190EC  9334               	bcf	52,1,b	;volatile
 37838                           
 37839                           ; BSR set to: 14
 37840                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 37841  0190EE  0102               	movlb	2	; () banked
 37842  0190F0  5131               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 37843  0190F2  1132               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 37844  0190F4  1133               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 37845  0190F6  B4D8               	btfsc	status,2,c
 37846  0190F8  0012               	return	
 37847                           
 37848                           ; BSR set to: 2
 37849                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 37850  0190FA  D801               	call	i2u2692_48
 37851  0190FC  0012               	return	
 37852  0190FE                     i2u2692_48:
 37853  0190FE  0005               	push	
 37854  019100  6EFA               	movwf	pclath,c
 37855  019102  5131               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 37856  019104  6EFD               	movwf	tosl,c
 37857  019106  5132               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 37858  019108  6EFE               	movwf	tosh,c
 37859  01910A  5133               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 37860  01910C  6EFF               	movwf	tosu,c
 37861  01910E  50FA               	movf	pclath,w,c
 37862  019110  0012               	return		;indir
 37863  019112                     __end_of_ADCC_ThresholdISR:
 37864                           	opt stack 0
 37865                           tosu	equ	0xFFF
 37866                           tosh	equ	0xFFE
 37867                           tosl	equ	0xFFD
 37868                           pclatu	equ	0xFFB
 37869                           pclath	equ	0xFFA
 37870                           tblptru	equ	0xFF8
 37871                           tblptrh	equ	0xFF7
 37872                           tblptrl	equ	0xFF6
 37873                           tablat	equ	0xFF5
 37874                           prodh	equ	0xFF4
 37875                           prodl	equ	0xFF3
 37876                           intcon	equ	0xFF2
 37877                           indf0	equ	0xFEF
 37878                           postinc0	equ	0xFEE
 37879                           fsr0h	equ	0xFEA
 37880                           fsr0l	equ	0xFE9
 37881                           wreg	equ	0xFE8
 37882                           indf1	equ	0xFE7
 37883                           postdec1	equ	0xFE5
 37884                           plusw1	equ	0xFE3
 37885                           fsr1h	equ	0xFE2
 37886                           fsr1l	equ	0xFE1
 37887                           bsr	equ	0xFE0
 37888                           indf2	equ	0xFDF
 37889                           postinc2	equ	0xFDE
 37890                           postdec2	equ	0xFDD
 37891                           plusw2	equ	0xFDB
 37892                           fsr2h	equ	0xFDA
 37893                           fsr2l	equ	0xFD9
 37894                           status	equ	0xFD8
 37895                           
 37896 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 37897 ;; Defined at:
 37898 ;;		line 310 in file "mcc_generated_files/adcc.c"
 37899 ;; Parameters:    Size  Location     Type
 37900 ;;		None
 37901 ;; Auto vars:     Size  Location     Type
 37902 ;;		None
 37903 ;; Return value:  Size  Location     Type
 37904 ;;                  1    wreg      void 
 37905 ;; Registers used:
 37906 ;;		None
 37907 ;; Tracked objects:
 37908 ;;		On entry : 0/0
 37909 ;;		On exit  : 0/0
 37910 ;;		Unchanged: 0/0
 37911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37916 ;;Total ram usage:        0 bytes
 37917 ;; Hardware stack levels used:    1
 37918 ;; This function calls:
 37919 ;;		Nothing
 37920 ;; This function is called by:
 37921 ;;		_ADCC_Initialize
 37922 ;;		_ADCC_ThresholdISR
 37923 ;; This function uses a non-reentrant model
 37924 ;;
 37925                           
 37926                           	psect	text115
 37927  01947E                     __ptext115:
 37928                           	opt stack 0
 37929  01947E                     _ADCC_DefaultInterruptHandler:
 37930                           	opt stack 17
 37931                           
 37932                           ;incstack = 0
 37933  01947E  0012               	return		;funcret
 37934  019480                     __end_of_ADCC_DefaultInterruptHandler:
 37935                           	opt stack 0
 37936                           tosu	equ	0xFFF
 37937                           tosh	equ	0xFFE
 37938                           tosl	equ	0xFFD
 37939                           pclatu	equ	0xFFB
 37940                           pclath	equ	0xFFA
 37941                           tblptru	equ	0xFF8
 37942                           tblptrh	equ	0xFF7
 37943                           tblptrl	equ	0xFF6
 37944                           tablat	equ	0xFF5
 37945                           prodh	equ	0xFF4
 37946                           prodl	equ	0xFF3
 37947                           intcon	equ	0xFF2
 37948                           indf0	equ	0xFEF
 37949                           postinc0	equ	0xFEE
 37950                           fsr0h	equ	0xFEA
 37951                           fsr0l	equ	0xFE9
 37952                           wreg	equ	0xFE8
 37953                           indf1	equ	0xFE7
 37954                           postdec1	equ	0xFE5
 37955                           plusw1	equ	0xFE3
 37956                           fsr1h	equ	0xFE2
 37957                           fsr1l	equ	0xFE1
 37958                           bsr	equ	0xFE0
 37959                           indf2	equ	0xFDF
 37960                           postinc2	equ	0xFDE
 37961                           postdec2	equ	0xFDD
 37962                           plusw2	equ	0xFDB
 37963                           fsr2h	equ	0xFDA
 37964                           fsr2l	equ	0xFD9
 37965                           status	equ	0xFD8
 37966                           
 37967 ;; *************** function _ADCPostProcessingCallback *****************
 37968 ;; Defined at:
 37969 ;;		line 227 in file "main.c"
 37970 ;; Parameters:    Size  Location     Type
 37971 ;;		None
 37972 ;; Auto vars:     Size  Location     Type
 37973 ;;  current_adc_    1  117[BANK0 ] enum E17421
 37974 ;; Return value:  Size  Location     Type
 37975 ;;                  1    wreg      void 
 37976 ;; Registers used:
 37977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37978 ;; Tracked objects:
 37979 ;;		On entry : 0/0
 37980 ;;		On exit  : 0/0
 37981 ;;		Unchanged: 0/0
 37982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37984 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37986 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37987 ;;Total ram usage:       21 bytes
 37988 ;; Hardware stack levels used:    1
 37989 ;; Hardware stack levels required when called:    6
 37990 ;; This function calls:
 37991 ;;		_ADCC_GetConversionResult
 37992 ;;		_ADCC_GetFilterValue
 37993 ;;		_ADCC_HasAccumulatorOverflowed
 37994 ;;		_ADCC_StopConversion
 37995 ;;		_abs
 37996 ;;		_currentMeasuredToPeak
 37997 ;;		_peakToRMS
 37998 ;;		i2_TMR7_StopTimer
 37999 ;;		i2___fladd
 38000 ;;		i2___fldiv
 38001 ;;		i2___flge
 38002 ;;		i2___flmul
 38003 ;;		i2___flneg
 38004 ;;		i2___fltol
 38005 ;;		i2___xxtofl
 38006 ;; This function is called by:
 38007 ;;		_main
 38008 ;;		_ADCC_ThresholdISR
 38009 ;; This function uses a non-reentrant model
 38010 ;;
 38011                           
 38012                           	psect	text116
 38013  012F30                     __ptext116:
 38014                           	opt stack 0
 38015  012F30                     _ADCPostProcessingCallback:
 38016                           	opt stack 11
 38017                           
 38018                           ;main.c: 230: ADCC_StopConversion();
 38019                           
 38020                           ;incstack = 0
 38021  012F30  EC39  F0CA         	call	_ADCC_StopConversion	;wreg free
 38022                           
 38023                           ;main.c: 233: adcc_channel_t current_adc_channel = ADPCH;
 38024  012F34  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 38025                           
 38026                           ;main.c: 236: switch (current_adc_channel) {
 38027  012F38  EF70  F09C         	goto	i2l1023
 38028  012F3C                     
 38029                           ;main.c: 240: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 38030  012F3C  EC8A  F0C9         	call	_ADCC_GetConversionResult	;wreg free
 38031  012F40  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 38032  012F44  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 38033  012F48  6A07               	clrf	i2___xxtofl@val+2,c
 38034  012F4A  6A08               	clrf	i2___xxtofl@val+3,c
 38035  012F4C  0E00               	movlw	0
 38036  012F4E  EC4C  F0B7         	call	i2___xxtofl
 38037  012F52  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 38038  012F56  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 38039  012F5A  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 38040  012F5E  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 38041  012F62  0E0D               	movlw	13
 38042  012F64  6E34               	movwf	i2___flmul@a,c
 38043  012F66  0E68               	movlw	104
 38044  012F68  6E35               	movwf	i2___flmul@a+1,c
 38045  012F6A  0E53               	movlw	83
 38046  012F6C  6E36               	movwf	i2___flmul@a+2,c
 38047  012F6E  0E3B               	movlw	59
 38048  012F70  6E37               	movwf	i2___flmul@a+3,c
 38049  012F72  EC77  F0A4         	call	i2___flmul	;wreg free
 38050  012F76  C030  F1D7         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 38051  012F7A  C031  F1D8         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 38052  012F7E  C032  F1D9         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 38053  012F82  C033  F1DA         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 38054                           
 38055                           ;main.c: 242: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 38056  012F86  0E0A               	movlw	10
 38057  012F88  6E34               	movwf	i2___flge@ff1,c
 38058  012F8A  0ED7               	movlw	215
 38059  012F8C  6E35               	movwf	i2___flge@ff1+1,c
 38060  012F8E  0E23               	movlw	35
 38061  012F90  6E36               	movwf	i2___flge@ff1+2,c
 38062  012F92  0E3C               	movlw	60
 38063  012F94  6E37               	movwf	i2___flge@ff1+3,c
 38064  012F96  C1D7  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 38065  012F9A  C1D8  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 38066  012F9E  C1D9  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 38067  012FA2  C1DA  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 38068  012FA6  EC73  F0BB         	call	i2___flge	;wreg free
 38069  012FAA  A0D8               	btfss	status,0,c
 38070  012FAC  D005               	goto	i2u1781_40
 38071  012FAE  EC0B  F0CA         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38072  012FB2  0900               	iorlw	0
 38073  012FB4  B4D8               	btfsc	status,2,c
 38074  012FB6  D007               	goto	i2l1025
 38075  012FB8                     i2u1781_40:
 38076                           
 38077                           ;main.c: 244: LATFbits.LATF3 = 1;
 38078  012FB8  867E               	bsf	3966,3,c	;volatile
 38079                           
 38080                           ;main.c: 245: adc_error_flag = 1;
 38081  012FBA  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38082                           
 38083                           ;main.c: 247: PIE5bits.TMR7IE = 0;
 38084  012FBC  010E               	movlb	14	; () banked
 38085  012FBE  9D2E               	bcf	46,6,b	;volatile
 38086                           
 38087                           ; BSR set to: 14
 38088                           ;main.c: 248: TMR7_StopTimer();
 38089  012FC0  EC30  F0CA         	call	i2_TMR7_StopTimer	;wreg free
 38090                           
 38091                           ;main.c: 249: return;
 38092  012FC4  0012               	return	
 38093  012FC6                     i2l1025:
 38094                           
 38095                           ;main.c: 251: }
 38096                           ;main.c: 253: next_channel = channel_FVR_buf1;
 38097  012FC6  0E3F               	movlw	63
 38098  012FC8  0101               	movlb	1	; () banked
 38099  012FCA  6FE8               	movwf	_next_channel& (0+255),b
 38100                           
 38101                           ;main.c: 255: break;
 38102  012FCC  0012               	return	
 38103  012FCE                     
 38104                           ;main.c: 260: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 38105                           
 38106                           ; BSR set to: 1
 38107  012FCE  0E0D               	movlw	13
 38108  012FD0  6E34               	movwf	i2___flmul@a,c
 38109  012FD2  0E68               	movlw	104
 38110  012FD4  6E35               	movwf	i2___flmul@a+1,c
 38111  012FD6  0E53               	movlw	83
 38112  012FD8  6E36               	movwf	i2___flmul@a+2,c
 38113  012FDA  0E3B               	movlw	59
 38114  012FDC  6E37               	movwf	i2___flmul@a+3,c
 38115  012FDE  EC8A  F0C9         	call	_ADCC_GetConversionResult	;wreg free
 38116  012FE2  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 38117  012FE6  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 38118  012FEA  6A07               	clrf	i2___xxtofl@val+2,c
 38119  012FEC  6A08               	clrf	i2___xxtofl@val+3,c
 38120  012FEE  0E00               	movlw	0
 38121  012FF0  EC4C  F0B7         	call	i2___xxtofl
 38122  012FF4  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 38123  012FF8  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 38124  012FFC  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 38125  013000  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 38126  013004  EC77  F0A4         	call	i2___flmul	;wreg free
 38127  013008  C030  F056         	movff	?i2___flmul,i2___fladd@b
 38128  01300C  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 38129  013010  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 38130  013014  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 38131  013018  C1D7  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 38132  01301C  C1D8  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 38133  013020  C1D9  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 38134  013024  C1DA  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 38135  013028  ECBE  F0A7         	call	i2___fladd	;wreg free
 38136  01302C  C056  F1E4         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 38137  013030  C057  F1E5         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 38138  013034  C058  F1E6         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 38139  013038  C059  F1E7         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 38140                           
 38141                           ;main.c: 261: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 38142  01303C  0E6F               	movlw	111
 38143  01303E  6E13               	movwf	i2___fldiv@b,c
 38144  013040  0E12               	movlw	18
 38145  013042  6E14               	movwf	i2___fldiv@b+1,c
 38146  013044  0E03               	movlw	3
 38147  013046  6E15               	movwf	i2___fldiv@b+2,c
 38148  013048  0E40               	movlw	64
 38149  01304A  6E16               	movwf	i2___fldiv@b+3,c
 38150  01304C  C1E4  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 38151  013050  C1E5  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 38152  013054  C1E6  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 38153  013058  C1E7  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 38154  01305C  EC7E  F0B0         	call	i2___fldiv	;wreg free
 38155  013060  C013  F224         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 38156  013064  C014  F225         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 38157  013068  C015  F226         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 38158  01306C  C016  F227         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 38159                           
 38160                           ;main.c: 263: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 38161  013070  0E00               	movlw	0
 38162  013072  6E34               	movwf	i2___flge@ff1,c
 38163  013074  0E00               	movlw	0
 38164  013076  6E35               	movwf	i2___flge@ff1+1,c
 38165  013078  0E20               	movlw	32
 38166  01307A  6E36               	movwf	i2___flge@ff1+2,c
 38167  01307C  0E40               	movlw	64
 38168  01307E  6E37               	movwf	i2___flge@ff1+3,c
 38169  013080  C1E4  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 38170  013084  C1E5  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 38171  013088  C1E6  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 38172  01308C  C1E7  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 38173  013090  EC73  F0BB         	call	i2___flge	;wreg free
 38174  013094  A0D8               	btfss	status,0,c
 38175  013096  D019               	goto	i2u1784_40
 38176  013098  C1E4  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 38177  01309C  C1E5  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 38178  0130A0  C1E6  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 38179  0130A4  C1E7  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 38180  0130A8  0E00               	movlw	0
 38181  0130AA  6E38               	movwf	i2___flge@ff2,c
 38182  0130AC  0E00               	movlw	0
 38183  0130AE  6E39               	movwf	i2___flge@ff2+1,c
 38184  0130B0  0E00               	movlw	0
 38185  0130B2  6E3A               	movwf	i2___flge@ff2+2,c
 38186  0130B4  0E40               	movlw	64
 38187  0130B6  6E3B               	movwf	i2___flge@ff2+3,c
 38188  0130B8  EC73  F0BB         	call	i2___flge	;wreg free
 38189  0130BC  A0D8               	btfss	status,0,c
 38190  0130BE  D005               	goto	i2u1784_40
 38191  0130C0  EC0B  F0CA         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38192  0130C4  0900               	iorlw	0
 38193  0130C6  B4D8               	btfsc	status,2,c
 38194  0130C8  D007               	goto	i2l1031
 38195  0130CA                     i2u1784_40:
 38196                           
 38197                           ;main.c: 265: LATFbits.LATF3 = 1;
 38198  0130CA  867E               	bsf	3966,3,c	;volatile
 38199                           
 38200                           ;main.c: 266: adc_error_flag = 1;
 38201  0130CC  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38202                           
 38203                           ;main.c: 268: PIE5bits.TMR7IE = 0;
 38204  0130CE  010E               	movlb	14	; () banked
 38205  0130D0  9D2E               	bcf	46,6,b	;volatile
 38206                           
 38207                           ; BSR set to: 14
 38208                           ;main.c: 269: TMR7_StopTimer();
 38209  0130D2  EC30  F0CA         	call	i2_TMR7_StopTimer	;wreg free
 38210                           
 38211                           ;main.c: 270: return;
 38212  0130D6  0012               	return	
 38213  0130D8                     i2l1031:
 38214                           
 38215                           ;main.c: 272: }
 38216                           ;main.c: 274: next_channel = POS3P3_ADC;
 38217  0130D8  0E22               	movlw	34
 38218  0130DA  0101               	movlb	1	; () banked
 38219  0130DC  6FE8               	movwf	_next_channel& (0+255),b
 38220                           
 38221                           ;main.c: 276: break;
 38222  0130DE  0012               	return	
 38223  0130E0                     
 38224                           ;main.c: 281: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 38225                           
 38226                           ; BSR set to: 1
 38227  0130E0  C224  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 38228  0130E4  C225  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 38229  0130E8  C226  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 38230  0130EC  C227  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 38231  0130F0  EC80  F0C9         	call	_ADCC_GetFilterValue	;wreg free
 38232  0130F4  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 38233  0130F8  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 38234  0130FC  6A07               	clrf	i2___xxtofl@val+2,c
 38235  0130FE  6A08               	clrf	i2___xxtofl@val+3,c
 38236  013100  0E00               	movlw	0
 38237  013102  EC4C  F0B7         	call	i2___xxtofl
 38238  013106  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 38239  01310A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 38240  01310E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 38241  013112  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 38242  013116  EC77  F0A4         	call	i2___flmul	;wreg free
 38243  01311A  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4363
 38244  01311E  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4363+1
 38245  013122  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4363+2
 38246  013126  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4363+3
 38247                           
 38248                           ;main.c: 281: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 38249  01312A  C0D6  F030         	movff	_ADCPostProcessingCallback$4363,i2___flmul@b
 38250  01312E  C0D7  F031         	movff	_ADCPostProcessingCallback$4363+1,i2___flmul@b+1
 38251  013132  C0D8  F032         	movff	_ADCPostProcessingCallback$4363+2,i2___flmul@b+2
 38252  013136  C0D9  F033         	movff	_ADCPostProcessingCallback$4363+3,i2___flmul@b+3
 38253  01313A  0E0D               	movlw	13
 38254  01313C  6E34               	movwf	i2___flmul@a,c
 38255  01313E  0E68               	movlw	104
 38256  013140  6E35               	movwf	i2___flmul@a+1,c
 38257  013142  0ED3               	movlw	211
 38258  013144  6E36               	movwf	i2___flmul@a+2,c
 38259  013146  0E3B               	movlw	59
 38260  013148  6E37               	movwf	i2___flmul@a+3,c
 38261  01314A  EC77  F0A4         	call	i2___flmul	;wreg free
 38262  01314E  C030  F1D3         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 38263  013152  C031  F1D4         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 38264  013156  C032  F1D5         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 38265  01315A  C033  F1D6         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 38266                           
 38267                           ;main.c: 283: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 38268  01315E  0E00               	movlw	0
 38269  013160  6E34               	movwf	i2___flge@ff1,c
 38270  013162  0E00               	movlw	0
 38271  013164  6E35               	movwf	i2___flge@ff1+1,c
 38272  013166  0E60               	movlw	96
 38273  013168  6E36               	movwf	i2___flge@ff1+2,c
 38274  01316A  0E40               	movlw	64
 38275  01316C  6E37               	movwf	i2___flge@ff1+3,c
 38276  01316E  C1D3  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 38277  013172  C1D4  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 38278  013176  C1D5  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 38279  01317A  C1D6  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 38280  01317E  EC73  F0BB         	call	i2___flge	;wreg free
 38281  013182  A0D8               	btfss	status,0,c
 38282  013184  D005               	goto	i2u1786_40
 38283  013186  EC0B  F0CA         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38284  01318A  0900               	iorlw	0
 38285  01318C  B4D8               	btfsc	status,2,c
 38286  01318E  D007               	goto	i2l1035
 38287  013190                     i2u1786_40:
 38288                           
 38289                           ;main.c: 285: LATFbits.LATF3 = 1;
 38290  013190  867E               	bsf	3966,3,c	;volatile
 38291                           
 38292                           ;main.c: 286: adc_error_flag = 1;
 38293  013192  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38294                           
 38295                           ;main.c: 288: PIE5bits.TMR7IE = 0;
 38296  013194  010E               	movlb	14	; () banked
 38297  013196  9D2E               	bcf	46,6,b	;volatile
 38298                           
 38299                           ; BSR set to: 14
 38300                           ;main.c: 289: TMR7_StopTimer();
 38301  013198  EC30  F0CA         	call	i2_TMR7_StopTimer	;wreg free
 38302                           
 38303                           ;main.c: 290: return;
 38304  01319C  0012               	return	
 38305  01319E                     i2l1035:
 38306                           
 38307                           ;main.c: 292: }
 38308                           ;main.c: 294: next_channel = ISNS_ADC;
 38309  01319E  0E00               	movlw	0
 38310  0131A0  0101               	movlb	1	; () banked
 38311  0131A2  6FE8               	movwf	_next_channel& (0+255),b
 38312                           
 38313                           ;main.c: 296: break;
 38314  0131A4  0012               	return	
 38315  0131A6                     
 38316                           ;main.c: 301: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 38317                           
 38318                           ; BSR set to: 1
 38319  0131A6  0E00               	movlw	0
 38320  0131A8  6E17               	movwf	i2___fldiv@a,c
 38321  0131AA  0EC0               	movlw	192
 38322  0131AC  6E18               	movwf	i2___fldiv@a+1,c
 38323  0131AE  0E7F               	movlw	127
 38324  0131B0  6E19               	movwf	i2___fldiv@a+2,c
 38325  0131B2  0E44               	movlw	68
 38326  0131B4  6E1A               	movwf	i2___fldiv@a+3,c
 38327  0131B6  C1D3  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 38328  0131BA  C1D4  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 38329  0131BE  C1D5  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 38330  0131C2  C1D6  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 38331  0131C6  EC7E  F0B0         	call	i2___fldiv	;wreg free
 38332  0131CA  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 38333  0131CE  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 38334  0131D2  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 38335  0131D6  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 38336  0131DA  EC80  F0C9         	call	_ADCC_GetFilterValue	;wreg free
 38337  0131DE  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 38338  0131E2  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 38339  0131E6  6A07               	clrf	i2___xxtofl@val+2,c
 38340  0131E8  6A08               	clrf	i2___xxtofl@val+3,c
 38341  0131EA  0E00               	movlw	0
 38342  0131EC  EC4C  F0B7         	call	i2___xxtofl
 38343  0131F0  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 38344  0131F4  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 38345  0131F8  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 38346  0131FC  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 38347  013200  EC77  F0A4         	call	i2___flmul	;wreg free
 38348  013204  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4363
 38349  013208  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4363+1
 38350  01320C  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4363+2
 38351  013210  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4363+3
 38352                           
 38353                           ;main.c: 301: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 38354  013214  C0D6  F030         	movff	_ADCPostProcessingCallback$4363,i2___flmul@b
 38355  013218  C0D7  F031         	movff	_ADCPostProcessingCallback$4363+1,i2___flmul@b+1
 38356  01321C  C0D8  F032         	movff	_ADCPostProcessingCallback$4363+2,i2___flmul@b+2
 38357  013220  C0D9  F033         	movff	_ADCPostProcessingCallback$4363+3,i2___flmul@b+3
 38358  013224  0E35               	movlw	53
 38359  013226  6E34               	movwf	i2___flmul@a,c
 38360  013228  0E5E               	movlw	94
 38361  01322A  6E35               	movwf	i2___flmul@a+1,c
 38362  01322C  0EF2               	movlw	242
 38363  01322E  6E36               	movwf	i2___flmul@a+2,c
 38364  013230  0E3F               	movlw	63
 38365  013232  6E37               	movwf	i2___flmul@a+3,c
 38366  013234  EC77  F0A4         	call	i2___flmul	;wreg free
 38367  013238  C030  F1C7         	movff	?i2___flmul,_Imeas	;volatile
 38368  01323C  C031  F1C8         	movff	?i2___flmul+1,_Imeas+1	;volatile
 38369  013240  C032  F1C9         	movff	?i2___flmul+2,_Imeas+2	;volatile
 38370  013244  C033  F1CA         	movff	?i2___flmul+3,_Imeas+3	;volatile
 38371                           
 38372                           ;main.c: 305: if (LATGbits.LATG0 != 1) {
 38373  013248  B07F               	btfsc	3967,0,c	;volatile
 38374  01324A  D128               	goto	i2l1039
 38375                           
 38376                           ;main.c: 310: if (load_enable) {
 38377  01324C  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 38378  01324E  D0CD               	goto	i2l1040
 38379                           
 38380                           ;main.c: 313: if (dimming_period < 0x7FEE) {
 38381  013250  0EEE               	movlw	238
 38382  013252  0100               	movlb	0	; () banked
 38383  013254  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 38384  013256  0E7F               	movlw	127
 38385  013258  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 38386  01325A  B0D8               	btfsc	status,0,c
 38387  01325C  D052               	goto	i2l1041
 38388                           
 38389                           ; BSR set to: 0
 38390                           ;main.c: 315: Ipk = Imeas;
 38391  01325E  C1C7  F0F6         	movff	_Imeas,_Ipk	;volatile
 38392  013262  C1C8  F0F7         	movff	_Imeas+1,_Ipk+1	;volatile
 38393  013266  C1C9  F0F8         	movff	_Imeas+2,_Ipk+2	;volatile
 38394  01326A  C1CA  F0F9         	movff	_Imeas+3,_Ipk+3	;volatile
 38395                           
 38396                           ; BSR set to: 0
 38397                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 38398  01326E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 38399  013272  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 38400  013276  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 38401  01327A  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 38402  01327E  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 38403  013282  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 38404  013286  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 38405  01328A  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 38406  01328E  EC62  F0B4         	call	_peakToRMS	;wreg free
 38407  013292  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4364
 38408  013296  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4364+1
 38409  01329A  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4364+2
 38410  01329E  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4364+3
 38411                           
 38412                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 38413  0132A2  C2EE  F05A         	movff	_Irms_offset,i2___fladd@a
 38414  0132A6  C2EF  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 38415  0132AA  C2F0  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 38416  0132AE  C2F1  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 38417  0132B2  C0DA  F056         	movff	_ADCPostProcessingCallback$4364,i2___fladd@b
 38418  0132B6  C0DB  F057         	movff	_ADCPostProcessingCallback$4364+1,i2___fladd@b+1
 38419  0132BA  C0DC  F058         	movff	_ADCPostProcessingCallback$4364+2,i2___fladd@b+2
 38420  0132BE  C0DD  F059         	movff	_ADCPostProcessingCallback$4364+3,i2___fladd@b+3
 38421  0132C2  ECBE  F0A7         	call	i2___fladd	;wreg free
 38422  0132C6  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 38423  0132CA  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 38424  0132CE  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 38425  0132D2  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 38426  0132D6  EC00  F0BE         	call	i2___fltol	;wreg free
 38427  0132DA  C06C  F076         	movff	?i2___fltol,abs@a
 38428  0132DE  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 38429  0132E2  EC38  F0C8         	call	_abs	;wreg free
 38430  0132E6  0100               	movlb	0	; () banked
 38431  0132E8  C076  F005         	movff	?_abs,i2___xxtofl@val
 38432  0132EC  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 38433  0132F0  0E00               	movlw	0
 38434  0132F2  BE06               	btfsc	i2___xxtofl@val+1,7,c
 38435  0132F4  0EFF               	movlw	-1
 38436  0132F6  6E07               	movwf	i2___xxtofl@val+2,c
 38437  0132F8  6E08               	movwf	i2___xxtofl@val+3,c
 38438  0132FA  0E01               	movlw	1
 38439  0132FC  EC4C  F0B7         	call	i2___xxtofl
 38440  013300  D063               	goto	L17
 38441  013302                     i2l1041:
 38442                           
 38443                           ;main.c: 321: else {
 38444                           ;main.c: 323: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 38445  013302  C1C7  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 38446  013306  C1C8  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 38447  01330A  C1C9  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 38448  01330E  C1CA  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 38449  013312  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 38450  013316  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 38451  01331A  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 38452  01331E  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 38453  013322  EC31  F0C2         	call	_currentMeasuredToPeak	;wreg free
 38454  013326  C099  F0F6         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 38455  01332A  C09A  F0F7         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 38456  01332E  C09B  F0F8         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 38457  013332  C09C  F0F9         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 38458                           
 38459                           ;main.c: 324: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 38460  013336  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 38461  01333A  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 38462  01333E  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 38463  013342  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 38464  013346  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 38465  01334A  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 38466  01334E  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 38467  013352  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 38468  013356  EC62  F0B4         	call	_peakToRMS	;wreg free
 38469  01335A  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4364
 38470  01335E  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4364+1
 38471  013362  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4364+2
 38472  013366  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4364+3
 38473                           
 38474                           ;main.c: 324: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 38475  01336A  C2EE  F05A         	movff	_Irms_offset,i2___fladd@a
 38476  01336E  C2EF  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 38477  013372  C2F0  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 38478  013376  C2F1  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 38479  01337A  C0DA  F056         	movff	_ADCPostProcessingCallback$4364,i2___fladd@b
 38480  01337E  C0DB  F057         	movff	_ADCPostProcessingCallback$4364+1,i2___fladd@b+1
 38481  013382  C0DC  F058         	movff	_ADCPostProcessingCallback$4364+2,i2___fladd@b+2
 38482  013386  C0DD  F059         	movff	_ADCPostProcessingCallback$4364+3,i2___fladd@b+3
 38483  01338A  ECBE  F0A7         	call	i2___fladd	;wreg free
 38484  01338E  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 38485  013392  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 38486  013396  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 38487  01339A  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 38488  01339E  EC00  F0BE         	call	i2___fltol	;wreg free
 38489  0133A2  C06C  F076         	movff	?i2___fltol,abs@a
 38490  0133A6  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 38491  0133AA  EC38  F0C8         	call	_abs	;wreg free
 38492  0133AE  0100               	movlb	0	; () banked
 38493  0133B0  C076  F005         	movff	?_abs,i2___xxtofl@val
 38494  0133B4  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 38495  0133B8  0E00               	movlw	0
 38496  0133BA  BE06               	btfsc	i2___xxtofl@val+1,7,c
 38497  0133BC  0EFF               	movlw	-1
 38498  0133BE  6E07               	movwf	i2___xxtofl@val+2,c
 38499  0133C0  6E08               	movwf	i2___xxtofl@val+3,c
 38500  0133C2  0E01               	movlw	1
 38501  0133C4  EC4C  F0B7         	call	i2___xxtofl
 38502  0133C8                     L17:
 38503  0133C8  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 38504  0133CC  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 38505  0133D0  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 38506  0133D4  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 38507                           
 38508                           ;main.c: 326: }
 38509                           ;main.c: 328: Vpk = Vpk_const;
 38510  0133D8  C2F2  F220         	movff	_Vpk_const,_Vpk	;volatile
 38511  0133DC  C2F3  F221         	movff	_Vpk_const+1,_Vpk+1	;volatile
 38512  0133E0  C2F4  F222         	movff	_Vpk_const+2,_Vpk+2	;volatile
 38513  0133E4  C2F5  F223         	movff	_Vpk_const+3,_Vpk+3	;volatile
 38514                           
 38515                           ;main.c: 330: }
 38516  0133E8  D02C               	goto	i2l1043
 38517  0133EA                     i2l1040:
 38518                           
 38519                           ;main.c: 332: else {
 38520                           ;main.c: 334: Ipk = 0.0;
 38521  0133EA  0E00               	movlw	0
 38522  0133EC  0100               	movlb	0	; () banked
 38523  0133EE  6FF6               	movwf	_Ipk& (0+255),b	;volatile
 38524  0133F0  0E00               	movlw	0
 38525  0133F2  6FF7               	movwf	(_Ipk+1)& (0+255),b	;volatile
 38526  0133F4  0E00               	movlw	0
 38527  0133F6  6FF8               	movwf	(_Ipk+2)& (0+255),b	;volatile
 38528  0133F8  0E00               	movlw	0
 38529  0133FA  6FF9               	movwf	(_Ipk+3)& (0+255),b	;volatile
 38530                           
 38531                           ;main.c: 335: Vpk = 0.0;
 38532  0133FC  0E00               	movlw	0
 38533  0133FE  0102               	movlb	2	; () banked
 38534  013400  6F20               	movwf	_Vpk& (0+255),b	;volatile
 38535  013402  0E00               	movlw	0
 38536  013404  6F21               	movwf	(_Vpk+1)& (0+255),b	;volatile
 38537  013406  0E00               	movlw	0
 38538  013408  6F22               	movwf	(_Vpk+2)& (0+255),b	;volatile
 38539  01340A  0E00               	movlw	0
 38540  01340C  6F23               	movwf	(_Vpk+3)& (0+255),b	;volatile
 38541                           
 38542                           ; BSR set to: 2
 38543                           ;main.c: 336: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 38544  01340E  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 38545  013412  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 38546  013416  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 38547  01341A  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 38548  01341E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 38549  013422  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 38550  013426  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 38551  01342A  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 38552  01342E  EC62  F0B4         	call	_peakToRMS	;wreg free
 38553  013432  C0B1  F1C3         	movff	?_peakToRMS,_Irms	;volatile
 38554  013436  C0B2  F1C4         	movff	?_peakToRMS+1,_Irms+1	;volatile
 38555  01343A  C0B3  F1C5         	movff	?_peakToRMS+2,_Irms+2	;volatile
 38556  01343E  C0B4  F1C6         	movff	?_peakToRMS+3,_Irms+3	;volatile
 38557  013442                     i2l1043:
 38558                           
 38559                           ;main.c: 338: }
 38560                           ;main.c: 340: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 38561  013442  C220  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 38562  013446  C221  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 38563  01344A  C222  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 38564  01344E  C223  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 38565  013452  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 38566  013456  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 38567  01345A  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 38568  01345E  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 38569  013462  EC62  F0B4         	call	_peakToRMS	;wreg free
 38570  013466  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 38571  01346A  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 38572  01346E  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 38573  013472  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 38574                           
 38575                           ;main.c: 341: Avg_Power = Vrms * Irms;
 38576  013476  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 38577  01347A  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 38578  01347E  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 38579  013482  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 38580  013486  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 38581  01348A  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 38582  01348E  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 38583  013492  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 38584  013496  EC77  F0A4         	call	i2___flmul	;wreg free
 38585  01349A  D087               	goto	L18
 38586  01349C                     i2l1039:
 38587                           
 38588                           ;main.c: 346: else {
 38589                           ;main.c: 348: Ipk = Imeas;
 38590  01349C  C1C7  F0F6         	movff	_Imeas,_Ipk	;volatile
 38591  0134A0  C1C8  F0F7         	movff	_Imeas+1,_Ipk+1	;volatile
 38592  0134A4  C1C9  F0F8         	movff	_Imeas+2,_Ipk+2	;volatile
 38593  0134A8  C1CA  F0F9         	movff	_Imeas+3,_Ipk+3	;volatile
 38594                           
 38595                           ;main.c: 349: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 38596  0134AC  0E00               	movlw	0
 38597  0134AE  0100               	movlb	0	; () banked
 38598  0134B0  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 38599  0134B2  0E00               	movlw	0
 38600  0134B4  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 38601  0134B6  0E00               	movlw	0
 38602  0134B8  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 38603  0134BA  0E00               	movlw	0
 38604  0134BC  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 38605  0134BE  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 38606  0134C2  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 38607  0134C6  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 38608  0134CA  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 38609  0134CE  EC62  F0B4         	call	_peakToRMS	;wreg free
 38610  0134D2  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4364
 38611  0134D6  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4364+1
 38612  0134DA  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4364+2
 38613  0134DE  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4364+3
 38614                           
 38615                           ;main.c: 349: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 38616  0134E2  C2EE  F05A         	movff	_Irms_offset,i2___fladd@a
 38617  0134E6  C2EF  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 38618  0134EA  C2F0  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 38619  0134EE  C2F1  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 38620  0134F2  C0DA  F056         	movff	_ADCPostProcessingCallback$4364,i2___fladd@b
 38621  0134F6  C0DB  F057         	movff	_ADCPostProcessingCallback$4364+1,i2___fladd@b+1
 38622  0134FA  C0DC  F058         	movff	_ADCPostProcessingCallback$4364+2,i2___fladd@b+2
 38623  0134FE  C0DD  F059         	movff	_ADCPostProcessingCallback$4364+3,i2___fladd@b+3
 38624  013502  ECBE  F0A7         	call	i2___fladd	;wreg free
 38625  013506  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 38626  01350A  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 38627  01350E  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 38628  013512  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 38629  013516  EC00  F0BE         	call	i2___fltol	;wreg free
 38630  01351A  C06C  F076         	movff	?i2___fltol,abs@a
 38631  01351E  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 38632  013522  EC38  F0C8         	call	_abs	;wreg free
 38633  013526  0100               	movlb	0	; () banked
 38634  013528  C076  F005         	movff	?_abs,i2___xxtofl@val
 38635  01352C  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 38636  013530  0E00               	movlw	0
 38637  013532  BE06               	btfsc	i2___xxtofl@val+1,7,c
 38638  013534  0EFF               	movlw	-1
 38639  013536  6E07               	movwf	i2___xxtofl@val+2,c
 38640  013538  6E08               	movwf	i2___xxtofl@val+3,c
 38641  01353A  0E01               	movlw	1
 38642  01353C  EC4C  F0B7         	call	i2___xxtofl
 38643  013540  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 38644  013544  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 38645  013548  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 38646  01354C  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 38647                           
 38648                           ;main.c: 350: Vrms = peakToRMS(Vpk_const, 0.0);
 38649  013550  C2F2  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 38650  013554  C2F3  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 38651  013558  C2F4  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 38652  01355C  C2F5  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 38653  013560  0E00               	movlw	0
 38654  013562  0100               	movlb	0	; () banked
 38655  013564  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 38656  013566  0E00               	movlw	0
 38657  013568  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 38658  01356A  0E00               	movlw	0
 38659  01356C  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 38660  01356E  0E00               	movlw	0
 38661  013570  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 38662  013572  EC62  F0B4         	call	_peakToRMS	;wreg free
 38663  013576  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 38664  01357A  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 38665  01357E  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 38666  013582  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 38667                           
 38668                           ;main.c: 351: Avg_Power = Vrms * Irms;
 38669  013586  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 38670  01358A  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 38671  01358E  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 38672  013592  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 38673  013596  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 38674  01359A  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 38675  01359E  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 38676  0135A2  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 38677  0135A6  EC77  F0A4         	call	i2___flmul	;wreg free
 38678  0135AA                     L18:
 38679  0135AA  C030  F1BB         	movff	?i2___flmul,_Avg_Power	;volatile
 38680  0135AE  C031  F1BC         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 38681  0135B2  C032  F1BD         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 38682  0135B6  C033  F1BE         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 38683                           
 38684                           ;main.c: 353: }
 38685                           ;main.c: 355: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 38686  0135BA  0E00               	movlw	0
 38687  0135BC  6E34               	movwf	i2___flge@ff1,c
 38688  0135BE  0E00               	movlw	0
 38689  0135C0  6E35               	movwf	i2___flge@ff1+1,c
 38690  0135C2  0EA0               	movlw	160
 38691  0135C4  6E36               	movwf	i2___flge@ff1+2,c
 38692  0135C6  0E40               	movlw	64
 38693  0135C8  6E37               	movwf	i2___flge@ff1+3,c
 38694  0135CA  C1C3  F038         	movff	_Irms,i2___flge@ff2	;volatile
 38695  0135CE  C1C4  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 38696  0135D2  C1C5  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 38697  0135D6  C1C6  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 38698  0135DA  EC73  F0BB         	call	i2___flge	;wreg free
 38699  0135DE  A0D8               	btfss	status,0,c
 38700  0135E0  D005               	goto	i2u1791_40
 38701  0135E2  EC0B  F0CA         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38702  0135E6  0900               	iorlw	0
 38703  0135E8  B4D8               	btfsc	status,2,c
 38704  0135EA  D007               	goto	i2l1045
 38705  0135EC                     i2u1791_40:
 38706                           
 38707                           ;main.c: 357: LATFbits.LATF3 = 1;
 38708  0135EC  867E               	bsf	3966,3,c	;volatile
 38709                           
 38710                           ;main.c: 358: adc_error_flag = 1;
 38711  0135EE  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38712                           
 38713                           ;main.c: 360: PIE5bits.TMR7IE = 0;
 38714  0135F0  010E               	movlb	14	; () banked
 38715  0135F2  9D2E               	bcf	46,6,b	;volatile
 38716                           
 38717                           ; BSR set to: 14
 38718                           ;main.c: 361: TMR7_StopTimer();
 38719  0135F4  EC30  F0CA         	call	i2_TMR7_StopTimer	;wreg free
 38720                           
 38721                           ;main.c: 362: return;
 38722  0135F8  0012               	return	
 38723  0135FA                     i2l1045:
 38724                           
 38725                           ;main.c: 364: }
 38726                           ;main.c: 366: next_channel = POS12_ADC;
 38727  0135FA  0E04               	movlw	4
 38728  0135FC  0101               	movlb	1	; () banked
 38729  0135FE  6FE8               	movwf	_next_channel& (0+255),b
 38730                           
 38731                           ;main.c: 368: break;
 38732  013600  0012               	return	
 38733  013602                     
 38734                           ;main.c: 373: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 38735                           
 38736                           ; BSR set to: 1
 38737  013602  0E00               	movlw	0
 38738  013604  6E17               	movwf	i2___fldiv@a,c
 38739  013606  0EC0               	movlw	192
 38740  013608  6E18               	movwf	i2___fldiv@a+1,c
 38741  01360A  0E7F               	movlw	127
 38742  01360C  6E19               	movwf	i2___fldiv@a+2,c
 38743  01360E  0E44               	movlw	68
 38744  013610  6E1A               	movwf	i2___fldiv@a+3,c
 38745  013612  C1D3  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 38746  013616  C1D4  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 38747  01361A  C1D5  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 38748  01361E  C1D6  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 38749  013622  EC7E  F0B0         	call	i2___fldiv	;wreg free
 38750  013626  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 38751  01362A  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 38752  01362E  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 38753  013632  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 38754  013636  EC80  F0C9         	call	_ADCC_GetFilterValue	;wreg free
 38755  01363A  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 38756  01363E  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 38757  013642  6A07               	clrf	i2___xxtofl@val+2,c
 38758  013644  6A08               	clrf	i2___xxtofl@val+3,c
 38759  013646  0E00               	movlw	0
 38760  013648  EC4C  F0B7         	call	i2___xxtofl
 38761  01364C  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 38762  013650  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 38763  013654  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 38764  013658  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 38765  01365C  EC77  F0A4         	call	i2___flmul	;wreg free
 38766  013660  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4363
 38767  013664  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4363+1
 38768  013668  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4363+2
 38769  01366C  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4363+3
 38770                           
 38771                           ;main.c: 373: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 38772  013670  C0D6  F030         	movff	_ADCPostProcessingCallback$4363,i2___flmul@b
 38773  013674  C0D7  F031         	movff	_ADCPostProcessingCallback$4363+1,i2___flmul@b+1
 38774  013678  C0D8  F032         	movff	_ADCPostProcessingCallback$4363+2,i2___flmul@b+2
 38775  01367C  C0D9  F033         	movff	_ADCPostProcessingCallback$4363+3,i2___flmul@b+3
 38776  013680  0E3E               	movlw	62
 38777  013682  6E34               	movwf	i2___flmul@a,c
 38778  013684  0EF8               	movlw	248
 38779  013686  6E35               	movwf	i2___flmul@a+1,c
 38780  013688  0E80               	movlw	128
 38781  01368A  6E36               	movwf	i2___flmul@a+2,c
 38782  01368C  0E40               	movlw	64
 38783  01368E  6E37               	movwf	i2___flmul@a+3,c
 38784  013690  EC77  F0A4         	call	i2___flmul	;wreg free
 38785  013694  C030  F1CF         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 38786  013698  C031  F1D0         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 38787  01369C  C032  F1D1         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 38788  0136A0  C033  F1D2         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 38789                           
 38790                           ;main.c: 375: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 38791  0136A4  0E9A               	movlw	154
 38792  0136A6  6E34               	movwf	i2___flge@ff1,c
 38793  0136A8  0E99               	movlw	153
 38794  0136AA  6E35               	movwf	i2___flge@ff1+1,c
 38795  0136AC  0E59               	movlw	89
 38796  0136AE  6E36               	movwf	i2___flge@ff1+2,c
 38797  0136B0  0E41               	movlw	65
 38798  0136B2  6E37               	movwf	i2___flge@ff1+3,c
 38799  0136B4  C1CF  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 38800  0136B8  C1D0  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 38801  0136BC  C1D1  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 38802  0136C0  C1D2  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 38803  0136C4  EC73  F0BB         	call	i2___flge	;wreg free
 38804  0136C8  A0D8               	btfss	status,0,c
 38805  0136CA  D005               	goto	i2u1793_40
 38806  0136CC  EC0B  F0CA         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38807  0136D0  0900               	iorlw	0
 38808  0136D2  B4D8               	btfsc	status,2,c
 38809  0136D4  D007               	goto	i2l1049
 38810  0136D6                     i2u1793_40:
 38811                           
 38812                           ;main.c: 377: LATFbits.LATF3 = 1;
 38813  0136D6  867E               	bsf	3966,3,c	;volatile
 38814                           
 38815                           ;main.c: 378: adc_error_flag = 1;
 38816  0136D8  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38817                           
 38818                           ;main.c: 380: PIE5bits.TMR7IE = 0;
 38819  0136DA  010E               	movlb	14	; () banked
 38820  0136DC  9D2E               	bcf	46,6,b	;volatile
 38821                           
 38822                           ; BSR set to: 14
 38823                           ;main.c: 381: TMR7_StopTimer();
 38824  0136DE  EC30  F0CA         	call	i2_TMR7_StopTimer	;wreg free
 38825                           
 38826                           ;main.c: 382: return;
 38827  0136E2  0012               	return	
 38828  0136E4                     i2l1049:
 38829                           
 38830                           ;main.c: 384: }
 38831                           ;main.c: 386: next_channel = channel_Temp;
 38832  0136E4  0E3D               	movlw	61
 38833  0136E6  0101               	movlb	1	; () banked
 38834  0136E8  6FE8               	movwf	_next_channel& (0+255),b
 38835                           
 38836                           ;main.c: 388: break;
 38837  0136EA  0012               	return	
 38838  0136EC                     
 38839                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 38840                           
 38841                           ; BSR set to: 1
 38842  0136EC  0E00               	movlw	0
 38843  0136EE  6E17               	movwf	i2___fldiv@a,c
 38844  0136F0  0E00               	movlw	0
 38845  0136F2  6E18               	movwf	i2___fldiv@a+1,c
 38846  0136F4  0E00               	movlw	0
 38847  0136F6  6E19               	movwf	i2___fldiv@a+2,c
 38848  0136F8  0E40               	movlw	64
 38849  0136FA  6E1A               	movwf	i2___fldiv@a+3,c
 38850  0136FC  C1D3  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 38851  013700  C1D4  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 38852  013704  C1D5  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 38853  013708  C1D6  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 38854  01370C  EC7E  F0B0         	call	i2___fldiv	;wreg free
 38855  013710  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 38856  013714  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 38857  013718  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 38858  01371C  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 38859  013720  0E00               	movlw	0
 38860  013722  6E5A               	movwf	i2___fladd@a,c
 38861  013724  0E00               	movlw	0
 38862  013726  6E5B               	movwf	i2___fladd@a+1,c
 38863  013728  0E80               	movlw	128
 38864  01372A  6E5C               	movwf	i2___fladd@a+2,c
 38865  01372C  0E3F               	movlw	63
 38866  01372E  6E5D               	movwf	i2___fladd@a+3,c
 38867  013730  0E00               	movlw	0
 38868  013732  6E17               	movwf	i2___fldiv@a,c
 38869  013734  0EC0               	movlw	192
 38870  013736  6E18               	movwf	i2___fldiv@a+1,c
 38871  013738  0E7F               	movlw	127
 38872  01373A  6E19               	movwf	i2___fldiv@a+2,c
 38873  01373C  0E44               	movlw	68
 38874  01373E  6E1A               	movwf	i2___fldiv@a+3,c
 38875  013740  EC80  F0C9         	call	_ADCC_GetFilterValue	;wreg free
 38876  013744  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 38877  013748  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 38878  01374C  6A07               	clrf	i2___xxtofl@val+2,c
 38879  01374E  6A08               	clrf	i2___xxtofl@val+3,c
 38880  013750  0E00               	movlw	0
 38881  013752  EC4C  F0B7         	call	i2___xxtofl
 38882  013756  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 38883  01375A  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 38884  01375E  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 38885  013762  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 38886  013766  EC7E  F0B0         	call	i2___fldiv	;wreg free
 38887  01376A  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 38888  01376E  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 38889  013772  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 38890  013776  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 38891  01377A  EC21  F0C8         	call	i2___flneg	;wreg free
 38892  01377E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 38893  013782  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 38894  013786  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 38895  01378A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 38896  01378E  ECBE  F0A7         	call	i2___fladd	;wreg free
 38897  013792  C056  F030         	movff	?i2___fladd,i2___flmul@b
 38898  013796  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 38899  01379A  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 38900  01379E  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 38901  0137A2  EC77  F0A4         	call	i2___flmul	;wreg free
 38902  0137A6  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4365
 38903  0137AA  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4365+1
 38904  0137AE  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4365+2
 38905  0137B2  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4365+3
 38906                           
 38907                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 38908  0137B6  0EDA               	movlw	218
 38909  0137B8  6E17               	movwf	i2___fldiv@a,c
 38910  0137BA  0E03               	movlw	3
 38911  0137BC  6E18               	movwf	i2___fldiv@a+1,c
 38912  0137BE  0EAD               	movlw	173
 38913  0137C0  6E19               	movwf	i2___fldiv@a+2,c
 38914  0137C2  0E3A               	movlw	58
 38915  0137C4  6E1A               	movwf	i2___fldiv@a+3,c
 38916  0137C6  0E39               	movlw	57
 38917  0137C8  6E5A               	movwf	i2___fladd@a,c
 38918  0137CA  0EB4               	movlw	180
 38919  0137CC  6E5B               	movwf	i2___fladd@a+1,c
 38920  0137CE  0E28               	movlw	40
 38921  0137D0  6E5C               	movwf	i2___fladd@a+2,c
 38922  0137D2  0E3F               	movlw	63
 38923  0137D4  6E5D               	movwf	i2___fladd@a+3,c
 38924  0137D6  C0C9  F02C         	movff	_ADCPostProcessingCallback$4365,i2___flneg@f1
 38925  0137DA  C0CA  F02D         	movff	_ADCPostProcessingCallback$4365+1,i2___flneg@f1+1
 38926  0137DE  C0CB  F02E         	movff	_ADCPostProcessingCallback$4365+2,i2___flneg@f1+2
 38927  0137E2  C0CC  F02F         	movff	_ADCPostProcessingCallback$4365+3,i2___flneg@f1+3
 38928  0137E6  EC21  F0C8         	call	i2___flneg	;wreg free
 38929  0137EA  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 38930  0137EE  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 38931  0137F2  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 38932  0137F6  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 38933  0137FA  ECBE  F0A7         	call	i2___fladd	;wreg free
 38934  0137FE  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 38935  013802  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 38936  013806  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 38937  01380A  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 38938  01380E  EC7E  F0B0         	call	i2___fldiv	;wreg free
 38939  013812  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4366
 38940  013816  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4366+1
 38941  01381A  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4366+2
 38942  01381E  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4366+3
 38943                           
 38944                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 38945  013822  C2F6  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 38946  013826  C2F7  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 38947  01382A  C2F8  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 38948  01382E  C2F9  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 38949  013832  C0CD  F056         	movff	_ADCPostProcessingCallback$4366,i2___fladd@b
 38950  013836  C0CE  F057         	movff	_ADCPostProcessingCallback$4366+1,i2___fladd@b+1
 38951  01383A  C0CF  F058         	movff	_ADCPostProcessingCallback$4366+2,i2___fladd@b+2
 38952  01383E  C0D0  F059         	movff	_ADCPostProcessingCallback$4366+3,i2___fladd@b+3
 38953  013842  ECBE  F0A7         	call	i2___fladd	;wreg free
 38954  013846  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4367
 38955  01384A  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4367+1
 38956  01384E  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4367+2
 38957  013852  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4367+3
 38958                           
 38959                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 38960  013856  C0D1  F056         	movff	_ADCPostProcessingCallback$4367,i2___fladd@b
 38961  01385A  C0D2  F057         	movff	_ADCPostProcessingCallback$4367+1,i2___fladd@b+1
 38962  01385E  C0D3  F058         	movff	_ADCPostProcessingCallback$4367+2,i2___fladd@b+2
 38963  013862  C0D4  F059         	movff	_ADCPostProcessingCallback$4367+3,i2___fladd@b+3
 38964  013866  0E00               	movlw	0
 38965  013868  6E5A               	movwf	i2___fladd@a,c
 38966  01386A  0E00               	movlw	0
 38967  01386C  6E5B               	movwf	i2___fladd@a+1,c
 38968  01386E  0E20               	movlw	32
 38969  013870  6E5C               	movwf	i2___fladd@a+2,c
 38970  013872  0EC2               	movlw	194
 38971  013874  6E5D               	movwf	i2___fladd@a+3,c
 38972  013876  ECBE  F0A7         	call	i2___fladd	;wreg free
 38973  01387A  C056  F1CB         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 38974  01387E  C057  F1CC         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 38975  013882  C058  F1CD         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 38976  013886  C059  F1CE         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 38977                           
 38978                           ;main.c: 395: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 38979  01388A  0E00               	movlw	0
 38980  01388C  6E34               	movwf	i2___flge@ff1,c
 38981  01388E  0E00               	movlw	0
 38982  013890  6E35               	movwf	i2___flge@ff1+1,c
 38983  013892  0E20               	movlw	32
 38984  013894  6E36               	movwf	i2___flge@ff1+2,c
 38985  013896  0E42               	movlw	66
 38986  013898  6E37               	movwf	i2___flge@ff1+3,c
 38987  01389A  C1CB  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 38988  01389E  C1CC  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 38989  0138A2  C1CD  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 38990  0138A6  C1CE  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 38991  0138AA  EC73  F0BB         	call	i2___flge	;wreg free
 38992  0138AE  A0D8               	btfss	status,0,c
 38993  0138B0  D005               	goto	i2u1795_40
 38994  0138B2  EC0B  F0CA         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38995  0138B6  0900               	iorlw	0
 38996  0138B8  B4D8               	btfsc	status,2,c
 38997  0138BA  D007               	goto	i2l1053
 38998  0138BC                     i2u1795_40:
 38999                           
 39000                           ;main.c: 397: LATFbits.LATF3 = 1;
 39001  0138BC  867E               	bsf	3966,3,c	;volatile
 39002                           
 39003                           ;main.c: 398: adc_error_flag = 1;
 39004  0138BE  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 39005                           
 39006                           ;main.c: 400: PIE5bits.TMR7IE = 0;
 39007  0138C0  010E               	movlb	14	; () banked
 39008  0138C2  9D2E               	bcf	46,6,b	;volatile
 39009                           
 39010                           ; BSR set to: 14
 39011                           ;main.c: 401: TMR7_StopTimer();
 39012  0138C4  EC30  F0CA         	call	i2_TMR7_StopTimer	;wreg free
 39013                           
 39014                           ;main.c: 402: return;
 39015  0138C8  0012               	return	
 39016  0138CA                     i2l1053:
 39017                           
 39018                           ;main.c: 404: }
 39019                           ;main.c: 406: next_channel = channel_VSS;
 39020  0138CA  0E3C               	movlw	60
 39021  0138CC  0101               	movlb	1	; () banked
 39022  0138CE  6FE8               	movwf	_next_channel& (0+255),b
 39023                           
 39024                           ;main.c: 408: break;
 39025  0138D0  0012               	return	
 39026  0138D2                     i2l1056:
 39027                           
 39028                           ; BSR set to: 0
 39029                           ;main.c: 413: LATFbits.LATF3 = 1;
 39030  0138D2  867E               	bsf	3966,3,c	;volatile
 39031                           
 39032                           ;main.c: 414: adc_error_flag = 1;
 39033  0138D4  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 39034                           
 39035                           ; BSR set to: 0
 39036                           ;main.c: 416: PIE5bits.TMR7IE == 0;
 39037  0138D6  010E               	movlb	14	; () banked
 39038  0138D8  512E               	movf	46,w,b	;volatile
 39039                           
 39040                           ; BSR set to: 14
 39041                           ;main.c: 417: TMR7_StopTimer();
 39042  0138DA  EC30  F0CA         	call	i2_TMR7_StopTimer	;wreg free
 39043                           
 39044                           ;main.c: 420: }
 39045                           
 39046                           ;main.c: 418: break;
 39047  0138DE  0012               	return	
 39048  0138E0                     i2l1023:
 39049  0138E0  0100               	movlb	0	; () banked
 39050  0138E2  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 39051                           
 39052                           ; Switch size 1, requested type "space"
 39053                           ; Number of cases is 6, Range of values is 0 to 63
 39054                           ; switch strategies available:
 39055                           ; Name         Instructions Cycles
 39056                           ; simple_byte           19    10 (average)
 39057                           ;	Chosen strategy is simple_byte
 39058  0138E4  0A00               	xorlw	0	; case 0
 39059  0138E6  B4D8               	btfsc	status,2,c
 39060  0138E8  D45E               	goto	i2l1038
 39061  0138EA  0A04               	xorlw	4	; case 4
 39062  0138EC  B4D8               	btfsc	status,2,c
 39063  0138EE  D689               	goto	i2l1048
 39064  0138F0  0A26               	xorlw	38	; case 34
 39065  0138F2  B4D8               	btfsc	status,2,c
 39066  0138F4  EF70  F098         	goto	i2l1034
 39067  0138F8  0A1E               	xorlw	30	; case 60
 39068  0138FA  B4D8               	btfsc	status,2,c
 39069  0138FC  EF9E  F097         	goto	i2l1024
 39070  013900  0A01               	xorlw	1	; case 61
 39071  013902  B4D8               	btfsc	status,2,c
 39072  013904  D6F3               	goto	i2l1052
 39073  013906  0A02               	xorlw	2	; case 63
 39074  013908  B4D8               	btfsc	status,2,c
 39075  01390A  EFE7  F097         	goto	i2l1030
 39076  01390E  D7E1               	goto	i2l1056
 39077  013910                     __end_of_ADCPostProcessingCallback:
 39078                           	opt stack 0
 39079                           tosu	equ	0xFFF
 39080                           tosh	equ	0xFFE
 39081                           tosl	equ	0xFFD
 39082                           pclatu	equ	0xFFB
 39083                           pclath	equ	0xFFA
 39084                           tblptru	equ	0xFF8
 39085                           tblptrh	equ	0xFF7
 39086                           tblptrl	equ	0xFF6
 39087                           tablat	equ	0xFF5
 39088                           prodh	equ	0xFF4
 39089                           prodl	equ	0xFF3
 39090                           intcon	equ	0xFF2
 39091                           indf0	equ	0xFEF
 39092                           postinc0	equ	0xFEE
 39093                           fsr0h	equ	0xFEA
 39094                           fsr0l	equ	0xFE9
 39095                           wreg	equ	0xFE8
 39096                           indf1	equ	0xFE7
 39097                           postdec1	equ	0xFE5
 39098                           plusw1	equ	0xFE3
 39099                           fsr1h	equ	0xFE2
 39100                           fsr1l	equ	0xFE1
 39101                           bsr	equ	0xFE0
 39102                           indf2	equ	0xFDF
 39103                           postinc2	equ	0xFDE
 39104                           postdec2	equ	0xFDD
 39105                           plusw2	equ	0xFDB
 39106                           fsr2h	equ	0xFDA
 39107                           fsr2l	equ	0xFD9
 39108                           status	equ	0xFD8
 39109                           
 39110 ;; *************** function i2_TMR7_StopTimer *****************
 39111 ;; Defined at:
 39112 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 39113 ;; Parameters:    Size  Location     Type
 39114 ;;		None
 39115 ;; Auto vars:     Size  Location     Type
 39116 ;;		None
 39117 ;; Return value:  Size  Location     Type
 39118 ;;                  1    wreg      void 
 39119 ;; Registers used:
 39120 ;;		None
 39121 ;; Tracked objects:
 39122 ;;		On entry : 0/0
 39123 ;;		On exit  : 0/0
 39124 ;;		Unchanged: 0/0
 39125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39130 ;;Total ram usage:        0 bytes
 39131 ;; Hardware stack levels used:    1
 39132 ;; This function calls:
 39133 ;;		Nothing
 39134 ;; This function is called by:
 39135 ;;		_ADCPostProcessingCallback
 39136 ;; This function uses a non-reentrant model
 39137 ;;
 39138                           
 39139                           	psect	text117
 39140  019460                     __ptext117:
 39141                           	opt stack 0
 39142  019460                     i2_TMR7_StopTimer:
 39143                           	opt stack 16
 39144                           
 39145                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 39146                           
 39147                           ;incstack = 0
 39148  019460  010F               	movlb	15	; () banked
 39149  019462  9130               	bcf	48,0,b	;volatile
 39150                           
 39151                           ; BSR set to: 15
 39152  019464  0012               	return		;funcret
 39153  019466                     __end_ofi2_TMR7_StopTimer:
 39154                           	opt stack 0
 39155                           tosu	equ	0xFFF
 39156                           tosh	equ	0xFFE
 39157                           tosl	equ	0xFFD
 39158                           pclatu	equ	0xFFB
 39159                           pclath	equ	0xFFA
 39160                           tblptru	equ	0xFF8
 39161                           tblptrh	equ	0xFF7
 39162                           tblptrl	equ	0xFF6
 39163                           tablat	equ	0xFF5
 39164                           prodh	equ	0xFF4
 39165                           prodl	equ	0xFF3
 39166                           intcon	equ	0xFF2
 39167                           indf0	equ	0xFEF
 39168                           postinc0	equ	0xFEE
 39169                           fsr0h	equ	0xFEA
 39170                           fsr0l	equ	0xFE9
 39171                           wreg	equ	0xFE8
 39172                           indf1	equ	0xFE7
 39173                           postdec1	equ	0xFE5
 39174                           plusw1	equ	0xFE3
 39175                           fsr1h	equ	0xFE2
 39176                           fsr1l	equ	0xFE1
 39177                           bsr	equ	0xFE0
 39178                           indf2	equ	0xFDF
 39179                           postinc2	equ	0xFDE
 39180                           postdec2	equ	0xFDD
 39181                           plusw2	equ	0xFDB
 39182                           fsr2h	equ	0xFDA
 39183                           fsr2l	equ	0xFD9
 39184                           status	equ	0xFD8
 39185                           
 39186 ;; *************** function _peakToRMS *****************
 39187 ;; Defined at:
 39188 ;;		line 122 in file "main.c"
 39189 ;; Parameters:    Size  Location     Type
 39190 ;;  Peak            4   81[BANK0 ] void 
 39191 ;;  Angle           4   85[BANK0 ] void 
 39192 ;; Auto vars:     Size  Location     Type
 39193 ;;  RMS             4  101[BANK0 ] void 
 39194 ;; Return value:  Size  Location     Type
 39195 ;;                  4   81[BANK0 ] void 
 39196 ;; Registers used:
 39197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39198 ;; Tracked objects:
 39199 ;;		On entry : 0/0
 39200 ;;		On exit  : 0/0
 39201 ;;		Unchanged: 0/0
 39202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39203 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39204 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39206 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39207 ;;Total ram usage:       24 bytes
 39208 ;; Hardware stack levels used:    1
 39209 ;; Hardware stack levels required when called:    5
 39210 ;; This function calls:
 39211 ;;		_acos
 39212 ;;		_sin
 39213 ;;		_sqrt
 39214 ;;		i2___fladd
 39215 ;;		i2___fldiv
 39216 ;;		i2___flmul
 39217 ;;		i2___flneg
 39218 ;; This function is called by:
 39219 ;;		_ADCPostProcessingCallback
 39220 ;; This function uses a non-reentrant model
 39221 ;;
 39222                           
 39223                           	psect	text118
 39224  0168C4                     __ptext118:
 39225                           	opt stack 0
 39226  0168C4                     _peakToRMS:
 39227                           	opt stack 11
 39228                           
 39229                           ;main.c: 125: double RMS = 0.0;
 39230                           
 39231                           ; BSR set to: 15
 39232                           ;incstack = 0
 39233  0168C4  0E00               	movlw	0
 39234  0168C6  0100               	movlb	0	; () banked
 39235  0168C8  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 39236  0168CA  0E00               	movlw	0
 39237  0168CC  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 39238  0168CE  0E00               	movlw	0
 39239  0168D0  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 39240  0168D2  0E00               	movlw	0
 39241  0168D4  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 39242                           
 39243                           ; BSR set to: 0
 39244                           ;main.c: 128: RMS = 2.0 * acos(-1.0);
 39245  0168D6  0E00               	movlw	0
 39246  0168D8  6FA9               	movwf	acos@x& (0+255),b
 39247  0168DA  0E00               	movlw	0
 39248  0168DC  6FAA               	movwf	(acos@x+1)& (0+255),b
 39249  0168DE  0E80               	movlw	128
 39250  0168E0  6FAB               	movwf	(acos@x+2)& (0+255),b
 39251  0168E2  0EBF               	movlw	191
 39252  0168E4  6FAC               	movwf	(acos@x+3)& (0+255),b
 39253  0168E6  EC1D  F0C3         	call	_acos	;wreg free
 39254  0168EA  C0A9  F0C1         	movff	?_acos,_peakToRMS$4360
 39255  0168EE  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4360+1
 39256  0168F2  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4360+2
 39257  0168F6  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4360+3
 39258                           
 39259                           ;main.c: 128: RMS = 2.0 * acos(-1.0);
 39260  0168FA  C0C1  F030         	movff	_peakToRMS$4360,i2___flmul@b
 39261  0168FE  C0C2  F031         	movff	_peakToRMS$4360+1,i2___flmul@b+1
 39262  016902  C0C3  F032         	movff	_peakToRMS$4360+2,i2___flmul@b+2
 39263  016906  C0C4  F033         	movff	_peakToRMS$4360+3,i2___flmul@b+3
 39264  01690A  0E00               	movlw	0
 39265  01690C  6E34               	movwf	i2___flmul@a,c
 39266  01690E  0E00               	movlw	0
 39267  016910  6E35               	movwf	i2___flmul@a+1,c
 39268  016912  0E00               	movlw	0
 39269  016914  6E36               	movwf	i2___flmul@a+2,c
 39270  016916  0E40               	movlw	64
 39271  016918  6E37               	movwf	i2___flmul@a+3,c
 39272  01691A  EC77  F0A4         	call	i2___flmul	;wreg free
 39273  01691E  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 39274  016922  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 39275  016926  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 39276  01692A  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 39277                           
 39278                           ;main.c: 129: RMS = RMS - (2.0 * Angle);
 39279  01692E  0E00               	movlw	0
 39280  016930  6E34               	movwf	i2___flmul@a,c
 39281  016932  0E00               	movlw	0
 39282  016934  6E35               	movwf	i2___flmul@a+1,c
 39283  016936  0E00               	movlw	0
 39284  016938  6E36               	movwf	i2___flmul@a+2,c
 39285  01693A  0E40               	movlw	64
 39286  01693C  6E37               	movwf	i2___flmul@a+3,c
 39287  01693E  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 39288  016942  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 39289  016946  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 39290  01694A  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 39291  01694E  EC77  F0A4         	call	i2___flmul	;wreg free
 39292  016952  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 39293  016956  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 39294  01695A  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 39295  01695E  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 39296  016962  EC21  F0C8         	call	i2___flneg	;wreg free
 39297  016966  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 39298  01696A  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 39299  01696E  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 39300  016972  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 39301  016976  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 39302  01697A  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 39303  01697E  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 39304  016982  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 39305  016986  ECBE  F0A7         	call	i2___fladd	;wreg free
 39306  01698A  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 39307  01698E  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 39308  016992  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 39309  016996  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 39310                           
 39311                           ;main.c: 130: RMS = RMS + sin(2.0 * Angle);
 39312  01699A  0E00               	movlw	0
 39313  01699C  6E34               	movwf	i2___flmul@a,c
 39314  01699E  0E00               	movlw	0
 39315  0169A0  6E35               	movwf	i2___flmul@a+1,c
 39316  0169A2  0E00               	movlw	0
 39317  0169A4  6E36               	movwf	i2___flmul@a+2,c
 39318  0169A6  0E40               	movlw	64
 39319  0169A8  6E37               	movwf	i2___flmul@a+3,c
 39320  0169AA  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 39321  0169AE  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 39322  0169B2  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 39323  0169B6  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 39324  0169BA  EC77  F0A4         	call	i2___flmul	;wreg free
 39325  0169BE  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4361
 39326  0169C2  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4361+1
 39327  0169C6  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4361+2
 39328  0169CA  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4361+3
 39329                           
 39330                           ;main.c: 130: RMS = RMS + sin(2.0 * Angle);
 39331  0169CE  C0B9  F088         	movff	_peakToRMS$4361,sin@f
 39332  0169D2  C0BA  F089         	movff	_peakToRMS$4361+1,sin@f+1
 39333  0169D6  C0BB  F08A         	movff	_peakToRMS$4361+2,sin@f+2
 39334  0169DA  C0BC  F08B         	movff	_peakToRMS$4361+3,sin@f+3
 39335  0169DE  ECDF  F0AA         	call	_sin	;wreg free
 39336  0169E2  C088  F0BD         	movff	?_sin,_peakToRMS$4362
 39337  0169E6  C089  F0BE         	movff	?_sin+1,_peakToRMS$4362+1
 39338  0169EA  C08A  F0BF         	movff	?_sin+2,_peakToRMS$4362+2
 39339  0169EE  C08B  F0C0         	movff	?_sin+3,_peakToRMS$4362+3
 39340                           
 39341                           ;main.c: 130: RMS = RMS + sin(2.0 * Angle);
 39342  0169F2  C0BD  F056         	movff	_peakToRMS$4362,i2___fladd@b
 39343  0169F6  C0BE  F057         	movff	_peakToRMS$4362+1,i2___fladd@b+1
 39344  0169FA  C0BF  F058         	movff	_peakToRMS$4362+2,i2___fladd@b+2
 39345  0169FE  C0C0  F059         	movff	_peakToRMS$4362+3,i2___fladd@b+3
 39346  016A02  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 39347  016A06  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 39348  016A0A  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 39349  016A0E  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 39350  016A12  ECBE  F0A7         	call	i2___fladd	;wreg free
 39351  016A16  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 39352  016A1A  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 39353  016A1E  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 39354  016A22  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 39355                           
 39356                           ;main.c: 131: RMS = RMS / (4.0 * acos(-1.0));
 39357  016A26  0E00               	movlw	0
 39358  016A28  0100               	movlb	0	; () banked
 39359  016A2A  6FA9               	movwf	acos@x& (0+255),b
 39360  016A2C  0E00               	movlw	0
 39361  016A2E  6FAA               	movwf	(acos@x+1)& (0+255),b
 39362  016A30  0E80               	movlw	128
 39363  016A32  6FAB               	movwf	(acos@x+2)& (0+255),b
 39364  016A34  0EBF               	movlw	191
 39365  016A36  6FAC               	movwf	(acos@x+3)& (0+255),b
 39366  016A38  EC1D  F0C3         	call	_acos	;wreg free
 39367  016A3C  C0A9  F0C1         	movff	?_acos,_peakToRMS$4360
 39368  016A40  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4360+1
 39369  016A44  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4360+2
 39370  016A48  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4360+3
 39371                           
 39372                           ;main.c: 131: RMS = RMS / (4.0 * acos(-1.0));
 39373  016A4C  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 39374  016A50  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 39375  016A54  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 39376  016A58  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 39377  016A5C  0E00               	movlw	0
 39378  016A5E  6E34               	movwf	i2___flmul@a,c
 39379  016A60  0E00               	movlw	0
 39380  016A62  6E35               	movwf	i2___flmul@a+1,c
 39381  016A64  0E80               	movlw	128
 39382  016A66  6E36               	movwf	i2___flmul@a+2,c
 39383  016A68  0E40               	movlw	64
 39384  016A6A  6E37               	movwf	i2___flmul@a+3,c
 39385  016A6C  C0C1  F030         	movff	_peakToRMS$4360,i2___flmul@b
 39386  016A70  C0C2  F031         	movff	_peakToRMS$4360+1,i2___flmul@b+1
 39387  016A74  C0C3  F032         	movff	_peakToRMS$4360+2,i2___flmul@b+2
 39388  016A78  C0C4  F033         	movff	_peakToRMS$4360+3,i2___flmul@b+3
 39389  016A7C  EC77  F0A4         	call	i2___flmul	;wreg free
 39390  016A80  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 39391  016A84  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 39392  016A88  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 39393  016A8C  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 39394  016A90  EC7E  F0B0         	call	i2___fldiv	;wreg free
 39395  016A94  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 39396  016A98  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 39397  016A9C  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 39398  016AA0  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 39399                           
 39400                           ;main.c: 132: RMS = sqrt(RMS);
 39401  016AA4  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 39402  016AA8  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 39403  016AAC  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 39404  016AB0  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 39405  016AB4  EC5C  F0AC         	call	_sqrt	;wreg free
 39406  016AB8  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 39407  016ABC  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 39408  016AC0  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 39409  016AC4  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 39410                           
 39411                           ;main.c: 133: RMS = Peak * RMS;
 39412  016AC8  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 39413  016ACC  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 39414  016AD0  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 39415  016AD4  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 39416  016AD8  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 39417  016ADC  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 39418  016AE0  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 39419  016AE4  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 39420  016AE8  EC77  F0A4         	call	i2___flmul	;wreg free
 39421  016AEC  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 39422  016AF0  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 39423  016AF4  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 39424  016AF8  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 39425                           
 39426                           ;main.c: 134: return RMS;
 39427  016AFC  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 39428  016B00  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 39429  016B04  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 39430  016B08  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 39431  016B0C  0012               	return	
 39432  016B0E                     __end_of_peakToRMS:
 39433                           	opt stack 0
 39434                           tosu	equ	0xFFF
 39435                           tosh	equ	0xFFE
 39436                           tosl	equ	0xFFD
 39437                           pclatu	equ	0xFFB
 39438                           pclath	equ	0xFFA
 39439                           tblptru	equ	0xFF8
 39440                           tblptrh	equ	0xFF7
 39441                           tblptrl	equ	0xFF6
 39442                           tablat	equ	0xFF5
 39443                           prodh	equ	0xFF4
 39444                           prodl	equ	0xFF3
 39445                           intcon	equ	0xFF2
 39446                           indf0	equ	0xFEF
 39447                           postinc0	equ	0xFEE
 39448                           fsr0h	equ	0xFEA
 39449                           fsr0l	equ	0xFE9
 39450                           wreg	equ	0xFE8
 39451                           indf1	equ	0xFE7
 39452                           postdec1	equ	0xFE5
 39453                           plusw1	equ	0xFE3
 39454                           fsr1h	equ	0xFE2
 39455                           fsr1l	equ	0xFE1
 39456                           bsr	equ	0xFE0
 39457                           indf2	equ	0xFDF
 39458                           postinc2	equ	0xFDE
 39459                           postdec2	equ	0xFDD
 39460                           plusw2	equ	0xFDB
 39461                           fsr2h	equ	0xFDA
 39462                           fsr2l	equ	0xFD9
 39463                           status	equ	0xFD8
 39464                           
 39465 ;; *************** function _acos *****************
 39466 ;; Defined at:
 39467 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 39468 ;; Parameters:    Size  Location     Type
 39469 ;;  x               4   73[BANK0 ] void 
 39470 ;; Auto vars:     Size  Location     Type
 39471 ;;		None
 39472 ;; Return value:  Size  Location     Type
 39473 ;;                  4   73[BANK0 ] void 
 39474 ;; Registers used:
 39475 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39476 ;; Tracked objects:
 39477 ;;		On entry : 0/0
 39478 ;;		On exit  : 0/0
 39479 ;;		Unchanged: 0/0
 39480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39481 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39482 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39484 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39485 ;;Total ram usage:        8 bytes
 39486 ;; Hardware stack levels used:    1
 39487 ;; Hardware stack levels required when called:    4
 39488 ;; This function calls:
 39489 ;;		_asin
 39490 ;;		i2___fladd
 39491 ;;		i2___flneg
 39492 ;; This function is called by:
 39493 ;;		_peakToRMS
 39494 ;; This function uses a non-reentrant model
 39495 ;;
 39496                           
 39497                           	psect	text119
 39498  01863A                     __ptext119:
 39499                           	opt stack 0
 39500  01863A                     _acos:
 39501                           	opt stack 11
 39502                           
 39503                           ;incstack = 0
 39504  01863A  C0A9  F091         	movff	acos@x,asin@x
 39505  01863E  C0AA  F092         	movff	acos@x+1,asin@x+1
 39506  018642  C0AB  F093         	movff	acos@x+2,asin@x+2
 39507  018646  C0AC  F094         	movff	acos@x+3,asin@x+3
 39508  01864A  EC5D  F0A9         	call	_asin	;wreg free
 39509  01864E  C091  F0AD         	movff	?_asin,_acos$4368
 39510  018652  C092  F0AE         	movff	?_asin+1,_acos$4368+1
 39511  018656  C093  F0AF         	movff	?_asin+2,_acos$4368+2
 39512  01865A  C094  F0B0         	movff	?_asin+3,_acos$4368+3
 39513  01865E  C0AD  F02C         	movff	_acos$4368,i2___flneg@f1
 39514  018662  C0AE  F02D         	movff	_acos$4368+1,i2___flneg@f1+1
 39515  018666  C0AF  F02E         	movff	_acos$4368+2,i2___flneg@f1+2
 39516  01866A  C0B0  F02F         	movff	_acos$4368+3,i2___flneg@f1+3
 39517  01866E  EC21  F0C8         	call	i2___flneg	;wreg free
 39518  018672  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 39519  018676  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 39520  01867A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 39521  01867E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 39522  018682  0EDB               	movlw	219
 39523  018684  6E5A               	movwf	i2___fladd@a,c
 39524  018686  0E0F               	movlw	15
 39525  018688  6E5B               	movwf	i2___fladd@a+1,c
 39526  01868A  0EC9               	movlw	201
 39527  01868C  6E5C               	movwf	i2___fladd@a+2,c
 39528  01868E  0E3F               	movlw	63
 39529  018690  6E5D               	movwf	i2___fladd@a+3,c
 39530  018692  ECBE  F0A7         	call	i2___fladd	;wreg free
 39531  018696  C056  F0A9         	movff	?i2___fladd,?_acos
 39532  01869A  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 39533  01869E  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 39534  0186A2  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 39535  0186A6  0012               	return	
 39536  0186A8                     __end_of_acos:
 39537                           	opt stack 0
 39538                           tosu	equ	0xFFF
 39539                           tosh	equ	0xFFE
 39540                           tosl	equ	0xFFD
 39541                           pclatu	equ	0xFFB
 39542                           pclath	equ	0xFFA
 39543                           tblptru	equ	0xFF8
 39544                           tblptrh	equ	0xFF7
 39545                           tblptrl	equ	0xFF6
 39546                           tablat	equ	0xFF5
 39547                           prodh	equ	0xFF4
 39548                           prodl	equ	0xFF3
 39549                           intcon	equ	0xFF2
 39550                           indf0	equ	0xFEF
 39551                           postinc0	equ	0xFEE
 39552                           fsr0h	equ	0xFEA
 39553                           fsr0l	equ	0xFE9
 39554                           wreg	equ	0xFE8
 39555                           indf1	equ	0xFE7
 39556                           postdec1	equ	0xFE5
 39557                           plusw1	equ	0xFE3
 39558                           fsr1h	equ	0xFE2
 39559                           fsr1l	equ	0xFE1
 39560                           bsr	equ	0xFE0
 39561                           indf2	equ	0xFDF
 39562                           postinc2	equ	0xFDE
 39563                           postdec2	equ	0xFDD
 39564                           plusw2	equ	0xFDB
 39565                           fsr2h	equ	0xFDA
 39566                           fsr2l	equ	0xFD9
 39567                           status	equ	0xFD8
 39568                           
 39569 ;; *************** function _asin *****************
 39570 ;; Defined at:
 39571 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 39572 ;; Parameters:    Size  Location     Type
 39573 ;;  x               4   49[BANK0 ] void 
 39574 ;; Auto vars:     Size  Location     Type
 39575 ;;  y               4   65[BANK0 ] void 
 39576 ;;  sgn             4   53[BANK0 ] void 
 39577 ;; Return value:  Size  Location     Type
 39578 ;;                  4   49[BANK0 ] void 
 39579 ;; Registers used:
 39580 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39581 ;; Tracked objects:
 39582 ;;		On entry : 0/0
 39583 ;;		On exit  : 0/0
 39584 ;;		Unchanged: 0/0
 39585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39587 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39589 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39590 ;;Total ram usage:       24 bytes
 39591 ;; Hardware stack levels used:    1
 39592 ;; Hardware stack levels required when called:    3
 39593 ;; This function calls:
 39594 ;;		_atan
 39595 ;;		_fabs
 39596 ;;		_sqrt
 39597 ;;		i2___fladd
 39598 ;;		i2___fldiv
 39599 ;;		i2___flge
 39600 ;;		i2___flmul
 39601 ;;		i2___flneg
 39602 ;; This function is called by:
 39603 ;;		_acos
 39604 ;; This function uses a non-reentrant model
 39605 ;;
 39606                           
 39607                           	psect	text120
 39608  0152BA                     __ptext120:
 39609                           	opt stack 0
 39610  0152BA                     _asin:
 39611                           	opt stack 11
 39612                           
 39613                           ;incstack = 0
 39614  0152BA  0E00               	movlw	0
 39615  0152BC  6E34               	movwf	i2___flge@ff1,c
 39616  0152BE  0E00               	movlw	0
 39617  0152C0  6E35               	movwf	i2___flge@ff1+1,c
 39618  0152C2  0E80               	movlw	128
 39619  0152C4  6E36               	movwf	i2___flge@ff1+2,c
 39620  0152C6  0E3F               	movlw	63
 39621  0152C8  6E37               	movwf	i2___flge@ff1+3,c
 39622  0152CA  C091  F030         	movff	asin@x,fabs@d
 39623  0152CE  C092  F031         	movff	asin@x+1,fabs@d+1
 39624  0152D2  C093  F032         	movff	asin@x+2,fabs@d+2
 39625  0152D6  C094  F033         	movff	asin@x+3,fabs@d+3
 39626  0152DA  EC1B  F0C7         	call	_fabs	;wreg free
 39627  0152DE  C030  F038         	movff	?_fabs,i2___flge@ff2
 39628  0152E2  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 39629  0152E6  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 39630  0152EA  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 39631  0152EE  EC73  F0BB         	call	i2___flge	;wreg free
 39632  0152F2  B0D8               	btfsc	status,0,c
 39633  0152F4  D00F               	goto	i2l1814
 39634  0152F6  0E00               	movlw	0
 39635  0152F8  0102               	movlb	2	; () banked
 39636  0152FA  6F3E               	movwf	(_errno+1)& (0+255),b
 39637  0152FC  0E21               	movlw	33
 39638  0152FE  6F3D               	movwf	_errno& (0+255),b
 39639  015300  0E00               	movlw	0
 39640  015302  0100               	movlb	0	; () banked
 39641  015304  6F91               	movwf	?_asin& (0+255),b
 39642  015306  0E00               	movlw	0
 39643  015308  6F92               	movwf	(?_asin+1)& (0+255),b
 39644  01530A  0E00               	movlw	0
 39645  01530C  6F93               	movwf	(?_asin+2)& (0+255),b
 39646  01530E  0E00               	movlw	0
 39647  015310  6F94               	movwf	(?_asin+3)& (0+255),b
 39648                           
 39649                           ; BSR set to: 0
 39650  015312  0012               	return	
 39651  015314                     i2l1814:
 39652                           
 39653                           ; BSR set to: 0
 39654  015314  0E00               	movlw	0
 39655  015316  0100               	movlb	0	; () banked
 39656  015318  6F95               	movwf	asin@sgn& (0+255),b
 39657  01531A  0E00               	movlw	0
 39658  01531C  6F96               	movwf	(asin@sgn+1)& (0+255),b
 39659  01531E  0E80               	movlw	128
 39660  015320  6F97               	movwf	(asin@sgn+2)& (0+255),b
 39661  015322  0E3F               	movlw	63
 39662  015324  6F98               	movwf	(asin@sgn+3)& (0+255),b
 39663                           
 39664                           ; BSR set to: 0
 39665  015326  C091  F034         	movff	asin@x,i2___flmul@a
 39666  01532A  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 39667  01532E  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 39668  015332  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 39669  015336  C091  F030         	movff	asin@x,i2___flmul@b
 39670  01533A  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 39671  01533E  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 39672  015342  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 39673  015346  EC77  F0A4         	call	i2___flmul	;wreg free
 39674  01534A  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 39675  01534E  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 39676  015352  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 39677  015356  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 39678  01535A  EC21  F0C8         	call	i2___flneg	;wreg free
 39679  01535E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 39680  015362  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 39681  015366  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 39682  01536A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 39683  01536E  0E00               	movlw	0
 39684  015370  6E5A               	movwf	i2___fladd@a,c
 39685  015372  0E00               	movlw	0
 39686  015374  6E5B               	movwf	i2___fladd@a+1,c
 39687  015376  0E80               	movlw	128
 39688  015378  6E5C               	movwf	i2___fladd@a+2,c
 39689  01537A  0E3F               	movlw	63
 39690  01537C  6E5D               	movwf	i2___fladd@a+3,c
 39691  01537E  ECBE  F0A7         	call	i2___fladd	;wreg free
 39692  015382  C056  F06C         	movff	?i2___fladd,sqrt@a
 39693  015386  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 39694  01538A  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 39695  01538E  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 39696  015392  EC5C  F0AC         	call	_sqrt	;wreg free
 39697  015396  C06C  F0A1         	movff	?_sqrt,asin@y
 39698  01539A  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 39699  01539E  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 39700  0153A2  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 39701  0153A6  C091  F030         	movff	asin@x,fabs@d
 39702  0153AA  C092  F031         	movff	asin@x+1,fabs@d+1
 39703  0153AE  C093  F032         	movff	asin@x+2,fabs@d+2
 39704  0153B2  C094  F033         	movff	asin@x+3,fabs@d+3
 39705  0153B6  EC1B  F0C7         	call	_fabs	;wreg free
 39706  0153BA  C030  F034         	movff	?_fabs,i2___flge@ff1
 39707  0153BE  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 39708  0153C2  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 39709  0153C6  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 39710  0153CA  0E8F               	movlw	143
 39711  0153CC  6E38               	movwf	i2___flge@ff2,c
 39712  0153CE  0EC2               	movlw	194
 39713  0153D0  6E39               	movwf	i2___flge@ff2+1,c
 39714  0153D2  0E35               	movlw	53
 39715  0153D4  6E3A               	movwf	i2___flge@ff2+2,c
 39716  0153D6  0E3F               	movlw	63
 39717  0153D8  6E3B               	movwf	i2___flge@ff2+3,c
 39718  0153DA  EC73  F0BB         	call	i2___flge	;wreg free
 39719  0153DE  B0D8               	btfsc	status,0,c
 39720  0153E0  D02D               	goto	i2l1816
 39721  0153E2  C091  F013         	movff	asin@x,i2___fldiv@b
 39722  0153E6  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 39723  0153EA  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 39724  0153EE  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 39725  0153F2  C0A1  F017         	movff	asin@y,i2___fldiv@a
 39726  0153F6  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 39727  0153FA  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 39728  0153FE  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 39729  015402  EC7E  F0B0         	call	i2___fldiv	;wreg free
 39730  015406  C013  F0A5         	movff	?i2___fldiv,_asin$4369
 39731  01540A  C014  F0A6         	movff	?i2___fldiv+1,_asin$4369+1
 39732  01540E  C015  F0A7         	movff	?i2___fldiv+2,_asin$4369+2
 39733  015412  C016  F0A8         	movff	?i2___fldiv+3,_asin$4369+3
 39734  015416  C0A5  F07C         	movff	_asin$4369,atan@f
 39735  01541A  C0A6  F07D         	movff	_asin$4369+1,atan@f+1
 39736  01541E  C0A7  F07E         	movff	_asin$4369+2,atan@f+2
 39737  015422  C0A8  F07F         	movff	_asin$4369+3,atan@f+3
 39738  015426  EC87  F0B5         	call	_atan	;wreg free
 39739  01542A  C07C  F091         	movff	?_atan,?_asin
 39740  01542E  C07D  F092         	movff	?_atan+1,?_asin+1
 39741  015432  C07E  F093         	movff	?_atan+2,?_asin+2
 39742  015436  C07F  F094         	movff	?_atan+3,?_asin+3
 39743  01543A  0012               	return	
 39744  01543C                     i2l1816:
 39745  01543C  0100               	movlb	0	; () banked
 39746  01543E  AF94               	btfss	(asin@x+3)& (0+255),7,b
 39747  015440  D06D               	goto	i2l1817
 39748                           
 39749                           ; BSR set to: 0
 39750  015442  C091  F017         	movff	asin@x,i2___fldiv@a
 39751  015446  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 39752  01544A  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 39753  01544E  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 39754  015452  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 39755  015456  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 39756  01545A  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 39757  01545E  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 39758  015462  EC21  F0C8         	call	i2___flneg	;wreg free
 39759  015466  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 39760  01546A  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 39761  01546E  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 39762  015472  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 39763  015476  EC7E  F0B0         	call	i2___fldiv	;wreg free
 39764  01547A  C013  F0A5         	movff	?i2___fldiv,_asin$4369
 39765  01547E  C014  F0A6         	movff	?i2___fldiv+1,_asin$4369+1
 39766  015482  C015  F0A7         	movff	?i2___fldiv+2,_asin$4369+2
 39767  015486  C016  F0A8         	movff	?i2___fldiv+3,_asin$4369+3
 39768  01548A  C0A5  F07C         	movff	_asin$4369,atan@f
 39769  01548E  C0A6  F07D         	movff	_asin$4369+1,atan@f+1
 39770  015492  C0A7  F07E         	movff	_asin$4369+2,atan@f+2
 39771  015496  C0A8  F07F         	movff	_asin$4369+3,atan@f+3
 39772  01549A  EC87  F0B5         	call	_atan	;wreg free
 39773  01549E  C07C  F09D         	movff	?_atan,_asin$4370
 39774  0154A2  C07D  F09E         	movff	?_atan+1,_asin$4370+1
 39775  0154A6  C07E  F09F         	movff	?_atan+2,_asin$4370+2
 39776  0154AA  C07F  F0A0         	movff	?_atan+3,_asin$4370+3
 39777  0154AE  0EDB               	movlw	219
 39778  0154B0  6E5A               	movwf	i2___fladd@a,c
 39779  0154B2  0E0F               	movlw	15
 39780  0154B4  6E5B               	movwf	i2___fladd@a+1,c
 39781  0154B6  0EC9               	movlw	201
 39782  0154B8  6E5C               	movwf	i2___fladd@a+2,c
 39783  0154BA  0E3F               	movlw	63
 39784  0154BC  6E5D               	movwf	i2___fladd@a+3,c
 39785  0154BE  C09D  F02C         	movff	_asin$4370,i2___flneg@f1
 39786  0154C2  C09E  F02D         	movff	_asin$4370+1,i2___flneg@f1+1
 39787  0154C6  C09F  F02E         	movff	_asin$4370+2,i2___flneg@f1+2
 39788  0154CA  C0A0  F02F         	movff	_asin$4370+3,i2___flneg@f1+3
 39789  0154CE  EC21  F0C8         	call	i2___flneg	;wreg free
 39790  0154D2  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 39791  0154D6  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 39792  0154DA  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 39793  0154DE  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 39794  0154E2  ECBE  F0A7         	call	i2___fladd	;wreg free
 39795  0154E6  C056  F099         	movff	?i2___fladd,_asin$4371
 39796  0154EA  C057  F09A         	movff	?i2___fladd+1,_asin$4371+1
 39797  0154EE  C058  F09B         	movff	?i2___fladd+2,_asin$4371+2
 39798  0154F2  C059  F09C         	movff	?i2___fladd+3,_asin$4371+3
 39799  0154F6  C099  F02C         	movff	_asin$4371,i2___flneg@f1
 39800  0154FA  C09A  F02D         	movff	_asin$4371+1,i2___flneg@f1+1
 39801  0154FE  C09B  F02E         	movff	_asin$4371+2,i2___flneg@f1+2
 39802  015502  C09C  F02F         	movff	_asin$4371+3,i2___flneg@f1+3
 39803  015506  EC21  F0C8         	call	i2___flneg	;wreg free
 39804  01550A  C02C  F091         	movff	?i2___flneg,?_asin
 39805  01550E  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 39806  015512  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 39807  015516  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 39808  01551A  0012               	return	
 39809  01551C                     i2l1817:
 39810  01551C  C091  F017         	movff	asin@x,i2___fldiv@a
 39811  015520  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 39812  015524  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 39813  015528  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 39814  01552C  C0A1  F013         	movff	asin@y,i2___fldiv@b
 39815  015530  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 39816  015534  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 39817  015538  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 39818  01553C  EC7E  F0B0         	call	i2___fldiv	;wreg free
 39819  015540  C013  F0A5         	movff	?i2___fldiv,_asin$4369
 39820  015544  C014  F0A6         	movff	?i2___fldiv+1,_asin$4369+1
 39821  015548  C015  F0A7         	movff	?i2___fldiv+2,_asin$4369+2
 39822  01554C  C016  F0A8         	movff	?i2___fldiv+3,_asin$4369+3
 39823  015550  C0A5  F07C         	movff	_asin$4369,atan@f
 39824  015554  C0A6  F07D         	movff	_asin$4369+1,atan@f+1
 39825  015558  C0A7  F07E         	movff	_asin$4369+2,atan@f+2
 39826  01555C  C0A8  F07F         	movff	_asin$4369+3,atan@f+3
 39827  015560  EC87  F0B5         	call	_atan	;wreg free
 39828  015564  C07C  F09D         	movff	?_atan,_asin$4370
 39829  015568  C07D  F09E         	movff	?_atan+1,_asin$4370+1
 39830  01556C  C07E  F09F         	movff	?_atan+2,_asin$4370+2
 39831  015570  C07F  F0A0         	movff	?_atan+3,_asin$4370+3
 39832  015574  C09D  F02C         	movff	_asin$4370,i2___flneg@f1
 39833  015578  C09E  F02D         	movff	_asin$4370+1,i2___flneg@f1+1
 39834  01557C  C09F  F02E         	movff	_asin$4370+2,i2___flneg@f1+2
 39835  015580  C0A0  F02F         	movff	_asin$4370+3,i2___flneg@f1+3
 39836  015584  EC21  F0C8         	call	i2___flneg	;wreg free
 39837  015588  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 39838  01558C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 39839  015590  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 39840  015594  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 39841  015598  0EDB               	movlw	219
 39842  01559A  6E5A               	movwf	i2___fladd@a,c
 39843  01559C  0E0F               	movlw	15
 39844  01559E  6E5B               	movwf	i2___fladd@a+1,c
 39845  0155A0  0EC9               	movlw	201
 39846  0155A2  6E5C               	movwf	i2___fladd@a+2,c
 39847  0155A4  0E3F               	movlw	63
 39848  0155A6  6E5D               	movwf	i2___fladd@a+3,c
 39849  0155A8  ECBE  F0A7         	call	i2___fladd	;wreg free
 39850  0155AC  C056  F091         	movff	?i2___fladd,?_asin
 39851  0155B0  C057  F092         	movff	?i2___fladd+1,?_asin+1
 39852  0155B4  C058  F093         	movff	?i2___fladd+2,?_asin+2
 39853  0155B8  C059  F094         	movff	?i2___fladd+3,?_asin+3
 39854  0155BC  0012               	return	
 39855  0155BE                     __end_of_asin:
 39856                           	opt stack 0
 39857                           tosu	equ	0xFFF
 39858                           tosh	equ	0xFFE
 39859                           tosl	equ	0xFFD
 39860                           pclatu	equ	0xFFB
 39861                           pclath	equ	0xFFA
 39862                           tblptru	equ	0xFF8
 39863                           tblptrh	equ	0xFF7
 39864                           tblptrl	equ	0xFF6
 39865                           tablat	equ	0xFF5
 39866                           prodh	equ	0xFF4
 39867                           prodl	equ	0xFF3
 39868                           intcon	equ	0xFF2
 39869                           indf0	equ	0xFEF
 39870                           postinc0	equ	0xFEE
 39871                           fsr0h	equ	0xFEA
 39872                           fsr0l	equ	0xFE9
 39873                           wreg	equ	0xFE8
 39874                           indf1	equ	0xFE7
 39875                           postdec1	equ	0xFE5
 39876                           plusw1	equ	0xFE3
 39877                           fsr1h	equ	0xFE2
 39878                           fsr1l	equ	0xFE1
 39879                           bsr	equ	0xFE0
 39880                           indf2	equ	0xFDF
 39881                           postinc2	equ	0xFDE
 39882                           postdec2	equ	0xFDD
 39883                           plusw2	equ	0xFDB
 39884                           fsr2h	equ	0xFDA
 39885                           fsr2l	equ	0xFD9
 39886                           status	equ	0xFD8
 39887                           
 39888 ;; *************** function _sqrt *****************
 39889 ;; Defined at:
 39890 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 39891 ;; Parameters:    Size  Location     Type
 39892 ;;  a               4   12[BANK0 ] void 
 39893 ;; Auto vars:     Size  Location     Type
 39894 ;;  frac            4   37[BANK0 ] unsigned long 
 39895 ;;  root            4   33[BANK0 ] struct .
 39896 ;;  grs             4   27[BANK0 ] unsigned long 
 39897 ;;  tfrac           4   22[BANK0 ] unsigned long 
 39898 ;;  exp             2   31[BANK0 ] int 
 39899 ;;  p               1   26[BANK0 ] unsigned char 
 39900 ;;  i               1   21[BANK0 ] unsigned char 
 39901 ;;  sign            1   20[BANK0 ] unsigned char 
 39902 ;; Return value:  Size  Location     Type
 39903 ;;                  4   12[BANK0 ] unsigned char 
 39904 ;; Registers used:
 39905 ;;		wreg, status,2, status,0
 39906 ;; Tracked objects:
 39907 ;;		On entry : 0/0
 39908 ;;		On exit  : 0/0
 39909 ;;		Unchanged: 0/0
 39910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39911 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39912 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39913 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39914 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39915 ;;Total ram usage:       29 bytes
 39916 ;; Hardware stack levels used:    1
 39917 ;; This function calls:
 39918 ;;		Nothing
 39919 ;; This function is called by:
 39920 ;;		_peakToRMS
 39921 ;;		_asin
 39922 ;; This function uses a non-reentrant model
 39923 ;;
 39924                           
 39925                           	psect	text121
 39926  0158B8                     __ptext121:
 39927                           	opt stack 0
 39928  0158B8                     _sqrt:
 39929                           	opt stack 15
 39930                           
 39931                           ;incstack = 0
 39932  0158B8  0100               	movlb	0	; () banked
 39933  0158BA  516F               	movf	(sqrt@a+3)& (0+255),w,b
 39934  0158BC  0B80               	andlw	128
 39935  0158BE  6F74               	movwf	sqrt@sign& (0+255),b
 39936  0158C0  516F               	movf	(sqrt@a+3)& (0+255),w,b
 39937  0158C2  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 39938  0158C4  6F7A               	movwf	sqrt@p& (0+255),b
 39939                           
 39940                           ; BSR set to: 0
 39941  0158C6  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 39942                           
 39943                           ; BSR set to: 0
 39944  0158C8  817A               	bsf	sqrt@p& (0+255),0,b
 39945                           
 39946                           ; BSR set to: 0
 39947                           
 39948                           ; BSR set to: 0
 39949  0158CA  C07A  F07F         	movff	sqrt@p,sqrt@exp
 39950  0158CE  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 39951                           
 39952                           ; BSR set to: 0
 39953  0158D0  0EFF               	movlw	255
 39954  0158D2  156C               	andwf	sqrt@a& (0+255),w,b
 39955  0158D4  6F85               	movwf	sqrt@frac& (0+255),b
 39956  0158D6  0EFF               	movlw	255
 39957  0158D8  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 39958  0158DA  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 39959  0158DC  0E7F               	movlw	127
 39960  0158DE  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 39961  0158E0  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 39962  0158E2  0E00               	movlw	0
 39963  0158E4  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 39964  0158E6  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 39965                           
 39966                           ; BSR set to: 0
 39967  0158E8  517F               	movf	sqrt@exp& (0+255),w,b
 39968  0158EA  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 39969  0158EC  B4D8               	btfsc	status,2,c
 39970  0158EE  D005               	goto	i2l2343
 39971                           
 39972                           ; BSR set to: 0
 39973  0158F0  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 39974                           
 39975                           ; BSR set to: 0
 39976  0158F2  297F               	incf	sqrt@exp& (0+255),w,b
 39977  0158F4  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 39978  0158F6  A4D8               	btfss	status,2,c
 39979  0158F8  D008               	goto	i2l2345
 39980  0158FA                     i2l2343:
 39981                           
 39982                           ; BSR set to: 0
 39983                           
 39984                           ; BSR set to: 0
 39985  0158FA  0E00               	movlw	0
 39986  0158FC  6F85               	movwf	sqrt@frac& (0+255),b
 39987  0158FE  0E00               	movlw	0
 39988  015900  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 39989  015902  0E00               	movlw	0
 39990  015904  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 39991  015906  0E00               	movlw	0
 39992  015908  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 39993  01590A                     i2l2345:
 39994                           
 39995                           ; BSR set to: 0
 39996                           
 39997                           ; BSR set to: 0
 39998  01590A  517F               	movf	sqrt@exp& (0+255),w,b
 39999  01590C  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 40000  01590E  A4D8               	btfss	status,2,c
 40001  015910  D009               	goto	i2l2346
 40002                           
 40003                           ; BSR set to: 0
 40004  015912  0E00               	movlw	0
 40005  015914  6F6C               	movwf	?_sqrt& (0+255),b
 40006  015916  0E00               	movlw	0
 40007  015918  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 40008  01591A  0E00               	movlw	0
 40009  01591C  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 40010  01591E  0E00               	movlw	0
 40011  015920  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 40012                           
 40013                           ; BSR set to: 0
 40014  015922  0012               	return	
 40015  015924                     i2l2346:
 40016                           
 40017                           ; BSR set to: 0
 40018                           
 40019                           ; BSR set to: 0
 40020  015924  5174               	movf	sqrt@sign& (0+255),w,b
 40021  015926  B4D8               	btfsc	status,2,c
 40022  015928  D01A               	goto	i2l2348
 40023                           
 40024                           ; BSR set to: 0
 40025  01592A  0E00               	movlw	0
 40026  01592C  6F81               	movwf	sqrt@root& (0+255),b
 40027  01592E  0E00               	movlw	0
 40028  015930  6F82               	movwf	(sqrt@root+1)& (0+255),b
 40029  015932  0E40               	movlw	64
 40030  015934  6F83               	movwf	(sqrt@root+2)& (0+255),b
 40031  015936  0E00               	movlw	0
 40032  015938  6F84               	movwf	(sqrt@root+3)& (0+255),b
 40033                           
 40034                           ; BSR set to: 0
 40035  01593A  0E80               	movlw	128
 40036  01593C  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 40037  01593E  0EFF               	movlw	255
 40038  015940  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 40039                           
 40040                           ; BSR set to: 0
 40041  015942  0E00               	movlw	0
 40042  015944  0102               	movlb	2	; () banked
 40043  015946  6F3E               	movwf	(_errno+1)& (0+255),b
 40044  015948  0E21               	movlw	33
 40045  01594A  6F3D               	movwf	_errno& (0+255),b
 40046                           
 40047                           ; BSR set to: 2
 40048  01594C  C081  F06C         	movff	sqrt@root,?_sqrt
 40049  015950  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 40050  015954  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 40051  015958  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 40052                           
 40053                           ; BSR set to: 2
 40054  01595C  0012               	return	
 40055  01595E                     i2l2348:
 40056                           
 40057                           ; BSR set to: 2
 40058  01595E  0100               	movlb	0	; () banked
 40059  015960  297F               	incf	sqrt@exp& (0+255),w,b
 40060  015962  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 40061  015964  A4D8               	btfss	status,2,c
 40062  015966  D011               	goto	i2l2349
 40063                           
 40064                           ; BSR set to: 0
 40065  015968  0E00               	movlw	0
 40066  01596A  6F81               	movwf	sqrt@root& (0+255),b
 40067  01596C  0E00               	movlw	0
 40068  01596E  6F82               	movwf	(sqrt@root+1)& (0+255),b
 40069  015970  0E80               	movlw	128
 40070  015972  6F83               	movwf	(sqrt@root+2)& (0+255),b
 40071  015974  0E7F               	movlw	127
 40072  015976  6F84               	movwf	(sqrt@root+3)& (0+255),b
 40073                           
 40074                           ; BSR set to: 0
 40075  015978  C081  F06C         	movff	sqrt@root,?_sqrt
 40076  01597C  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 40077  015980  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 40078  015984  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 40079                           
 40080                           ; BSR set to: 0
 40081  015988  0012               	return	
 40082  01598A                     i2l2349:
 40083                           
 40084                           ; BSR set to: 0
 40085                           
 40086                           ; BSR set to: 0
 40087  01598A  0E81               	movlw	129
 40088  01598C  277F               	addwf	sqrt@exp& (0+255),f,b
 40089  01598E  0EFF               	movlw	255
 40090  015990  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 40091  015992  517F               	movf	sqrt@exp& (0+255),w,b
 40092  015994  0B01               	andlw	1
 40093  015996  6F7A               	movwf	sqrt@p& (0+255),b
 40094  015998  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 40095  01599A  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 40096  01599C  337F               	rrcf	sqrt@exp& (0+255),f,b
 40097  01599E  0E7F               	movlw	127
 40098  0159A0  277F               	addwf	sqrt@exp& (0+255),f,b
 40099  0159A2  0E00               	movlw	0
 40100  0159A4  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 40101  0159A6  90D8               	bcf	status,0,c
 40102  0159A8  3585               	rlcf	sqrt@frac& (0+255),w,b
 40103  0159AA  6F76               	movwf	sqrt@tfrac& (0+255),b
 40104  0159AC  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 40105  0159AE  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 40106  0159B0  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 40107  0159B2  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 40108  0159B4  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 40109  0159B6  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 40110                           
 40111                           ; BSR set to: 0
 40112  0159B8  0E00               	movlw	0
 40113  0159BA  6F85               	movwf	sqrt@frac& (0+255),b
 40114  0159BC  0E00               	movlw	0
 40115  0159BE  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 40116  0159C0  0E00               	movlw	0
 40117  0159C2  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 40118  0159C4  0E00               	movlw	0
 40119  0159C6  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 40120                           
 40121                           ; BSR set to: 0
 40122  0159C8  0E00               	movlw	0
 40123  0159CA  6F7B               	movwf	sqrt@grs& (0+255),b
 40124  0159CC  0E00               	movlw	0
 40125  0159CE  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 40126  0159D0  0E00               	movlw	0
 40127  0159D2  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 40128  0159D4  0E01               	movlw	1
 40129  0159D6  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 40130                           
 40131                           ; BSR set to: 0
 40132  0159D8  517A               	movf	sqrt@p& (0+255),w,b
 40133  0159DA  B4D8               	btfsc	status,2,c
 40134  0159DC  D005               	goto	i2l2350
 40135                           
 40136                           ; BSR set to: 0
 40137  0159DE  90D8               	bcf	status,0,c
 40138  0159E0  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 40139  0159E2  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 40140  0159E4  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 40141  0159E6  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 40142  0159E8                     i2l2350:
 40143                           
 40144                           ; BSR set to: 0
 40145                           
 40146                           ; BSR set to: 0
 40147  0159E8  0E00               	movlw	0
 40148  0159EA  6F75               	movwf	sqrt@i& (0+255),b
 40149  0159EC  D052               	goto	i2l2351
 40150  0159EE                     
 40151                           ; BSR set to: 0
 40152                           
 40153                           ; BSR set to: 0
 40154  0159EE  517B               	movf	sqrt@grs& (0+255),w,b
 40155  0159F0  1385               	iorwf	sqrt@frac& (0+255),f,b
 40156  0159F2  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 40157  0159F4  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 40158  0159F6  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 40159  0159F8  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 40160  0159FA  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 40161  0159FC  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 40162  0159FE  5185               	movf	sqrt@frac& (0+255),w,b
 40163  015A00  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 40164  015A02  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 40165  015A04  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 40166  015A06  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 40167  015A08  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 40168  015A0A  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 40169  015A0C  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 40170  015A0E  A0D8               	btfss	status,0,c
 40171  015A10  D011               	goto	i2l2353
 40172                           
 40173                           ; BSR set to: 0
 40174  015A12  5185               	movf	sqrt@frac& (0+255),w,b
 40175  015A14  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 40176  015A16  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 40177  015A18  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 40178  015A1A  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 40179  015A1C  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 40180  015A1E  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 40181  015A20  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 40182  015A22  517B               	movf	sqrt@grs& (0+255),w,b
 40183  015A24  2785               	addwf	sqrt@frac& (0+255),f,b
 40184  015A26  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 40185  015A28  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 40186  015A2A  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 40187  015A2C  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 40188  015A2E  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 40189  015A30  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 40190  015A32  D014               	goto	i2l2354
 40191  015A34                     i2l2353:
 40192                           
 40193                           ; BSR set to: 0
 40194                           
 40195                           ; BSR set to: 0
 40196  015A34  C07B  F070         	movff	sqrt@grs,??_sqrt
 40197  015A38  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 40198  015A3C  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 40199  015A40  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 40200  015A44  1F70               	comf	??_sqrt& (0+255),f,b
 40201  015A46  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 40202  015A48  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 40203  015A4A  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 40204  015A4C  5170               	movf	??_sqrt& (0+255),w,b
 40205  015A4E  1785               	andwf	sqrt@frac& (0+255),f,b
 40206  015A50  5171               	movf	(??_sqrt+1)& (0+255),w,b
 40207  015A52  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 40208  015A54  5172               	movf	(??_sqrt+2)& (0+255),w,b
 40209  015A56  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 40210  015A58  5173               	movf	(??_sqrt+3)& (0+255),w,b
 40211  015A5A  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 40212  015A5C                     i2l2354:
 40213                           
 40214                           ; BSR set to: 0
 40215                           
 40216                           ; BSR set to: 0
 40217  015A5C  C07B  F070         	movff	sqrt@grs,??_sqrt
 40218  015A60  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 40219  015A64  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 40220  015A68  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 40221  015A6C  90D8               	bcf	status,0,c
 40222  015A6E  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 40223  015A70  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 40224  015A72  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 40225  015A74  3370               	rrcf	??_sqrt& (0+255),f,b
 40226  015A76  C070  F07B         	movff	??_sqrt,sqrt@grs
 40227  015A7A  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 40228  015A7E  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 40229  015A82  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 40230                           
 40231                           ; BSR set to: 0
 40232  015A86  90D8               	bcf	status,0,c
 40233  015A88  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 40234  015A8A  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 40235  015A8C  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 40236  015A8E  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 40237                           
 40238                           ; BSR set to: 0
 40239  015A90  2B75               	incf	sqrt@i& (0+255),f,b
 40240  015A92                     i2l2351:
 40241                           
 40242                           ; BSR set to: 0
 40243                           
 40244                           ; BSR set to: 0
 40245  015A92  0E18               	movlw	24
 40246  015A94  6575               	cpfsgt	sqrt@i& (0+255),b
 40247  015A96  D7AB               	goto	i2l2352
 40248                           
 40249                           ; BSR set to: 0
 40250                           
 40251                           ; BSR set to: 0
 40252  015A98  C085  F070         	movff	sqrt@frac,??_sqrt
 40253  015A9C  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 40254  015AA0  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 40255  015AA4  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 40256  015AA8  90D8               	bcf	status,0,c
 40257  015AAA  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 40258  015AAC  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 40259  015AAE  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 40260  015AB0  3370               	rrcf	??_sqrt& (0+255),f,b
 40261  015AB2  C070  F085         	movff	??_sqrt,sqrt@frac
 40262  015AB6  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 40263  015ABA  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 40264  015ABE  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 40265                           
 40266                           ; BSR set to: 0
 40267  015AC2  0E01               	movlw	1
 40268  015AC4  1585               	andwf	sqrt@frac& (0+255),w,b
 40269  015AC6  6F7B               	movwf	sqrt@grs& (0+255),b
 40270  015AC8  0E00               	movlw	0
 40271  015ACA  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 40272  015ACC  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 40273  015ACE  0E00               	movlw	0
 40274  015AD0  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 40275  015AD2  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 40276  015AD4  0E00               	movlw	0
 40277  015AD6  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 40278  015AD8  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 40279                           
 40280                           ; BSR set to: 0
 40281  015ADA  C085  F070         	movff	sqrt@frac,??_sqrt
 40282  015ADE  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 40283  015AE2  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 40284  015AE6  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 40285  015AEA  90D8               	bcf	status,0,c
 40286  015AEC  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 40287  015AEE  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 40288  015AF0  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 40289  015AF2  3370               	rrcf	??_sqrt& (0+255),f,b
 40290  015AF4  C070  F085         	movff	??_sqrt,sqrt@frac
 40291  015AF8  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 40292  015AFC  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 40293  015B00  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 40294  015B04  517B               	movf	sqrt@grs& (0+255),w,b
 40295  015B06  2785               	addwf	sqrt@frac& (0+255),f,b
 40296  015B08  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 40297  015B0A  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 40298  015B0C  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 40299  015B0E  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 40300  015B10  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 40301  015B12  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 40302                           
 40303                           ; BSR set to: 0
 40304  015B14  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 40305  015B16  D017               	goto	i2l2356
 40306                           
 40307                           ; BSR set to: 0
 40308  015B18  C085  F070         	movff	sqrt@frac,??_sqrt
 40309  015B1C  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 40310  015B20  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 40311  015B24  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 40312  015B28  90D8               	bcf	status,0,c
 40313  015B2A  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 40314  015B2C  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 40315  015B2E  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 40316  015B30  3370               	rrcf	??_sqrt& (0+255),f,b
 40317  015B32  C070  F085         	movff	??_sqrt,sqrt@frac
 40318  015B36  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 40319  015B3A  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 40320  015B3E  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 40321  015B42  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 40322  015B44  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 40323  015B46                     i2l2356:
 40324                           
 40325                           ; BSR set to: 0
 40326                           
 40327                           ; BSR set to: 0
 40328  015B46  0EFF               	movlw	255
 40329  015B48  1585               	andwf	sqrt@frac& (0+255),w,b
 40330  015B4A  6F81               	movwf	sqrt@root& (0+255),b
 40331  015B4C  0EFF               	movlw	255
 40332  015B4E  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 40333  015B50  6F82               	movwf	(sqrt@root+1)& (0+255),b
 40334  015B52  0E7F               	movlw	127
 40335  015B54  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 40336  015B56  6F83               	movwf	(sqrt@root+2)& (0+255),b
 40337  015B58  0E00               	movlw	0
 40338  015B5A  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 40339  015B5C  6F84               	movwf	(sqrt@root+3)& (0+255),b
 40340                           
 40341                           ; BSR set to: 0
 40342  015B5E  C07F  F07A         	movff	sqrt@exp,sqrt@p
 40343                           
 40344                           ; BSR set to: 0
 40345  015B62  B17A               	btfsc	sqrt@p& (0+255),0,b
 40346                           
 40347                           ; BSR set to: 0
 40348  015B64  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 40349                           
 40350                           ; BSR set to: 0
 40351                           
 40352                           ; BSR set to: 0
 40353  015B66  90D8               	bcf	status,0,c
 40354  015B68  317A               	rrcf	sqrt@p& (0+255),w,b
 40355  015B6A  6F84               	movwf	(sqrt@root+3)& (0+255),b
 40356                           
 40357                           ; BSR set to: 0
 40358  015B6C  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 40359                           
 40360                           ; BSR set to: 0
 40361  015B6E  C081  F06C         	movff	sqrt@root,?_sqrt
 40362  015B72  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 40363  015B76  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 40364  015B7A  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 40365  015B7E  0012               	return	
 40366  015B80                     __end_of_sqrt:
 40367                           	opt stack 0
 40368                           tosu	equ	0xFFF
 40369                           tosh	equ	0xFFE
 40370                           tosl	equ	0xFFD
 40371                           pclatu	equ	0xFFB
 40372                           pclath	equ	0xFFA
 40373                           tblptru	equ	0xFF8
 40374                           tblptrh	equ	0xFF7
 40375                           tblptrl	equ	0xFF6
 40376                           tablat	equ	0xFF5
 40377                           prodh	equ	0xFF4
 40378                           prodl	equ	0xFF3
 40379                           intcon	equ	0xFF2
 40380                           indf0	equ	0xFEF
 40381                           postinc0	equ	0xFEE
 40382                           fsr0h	equ	0xFEA
 40383                           fsr0l	equ	0xFE9
 40384                           wreg	equ	0xFE8
 40385                           indf1	equ	0xFE7
 40386                           postdec1	equ	0xFE5
 40387                           plusw1	equ	0xFE3
 40388                           fsr1h	equ	0xFE2
 40389                           fsr1l	equ	0xFE1
 40390                           bsr	equ	0xFE0
 40391                           indf2	equ	0xFDF
 40392                           postinc2	equ	0xFDE
 40393                           postdec2	equ	0xFDD
 40394                           plusw2	equ	0xFDB
 40395                           fsr2h	equ	0xFDA
 40396                           fsr2l	equ	0xFD9
 40397                           status	equ	0xFD8
 40398                           
 40399 ;; *************** function _atan *****************
 40400 ;; Defined at:
 40401 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 40402 ;; Parameters:    Size  Location     Type
 40403 ;;  f               4   28[BANK0 ] unsigned char 
 40404 ;; Auto vars:     Size  Location     Type
 40405 ;;  val             4   45[BANK0 ] unsigned char 
 40406 ;;  val_squared     4   41[BANK0 ] unsigned char 
 40407 ;;  x               4   36[BANK0 ] unsigned char 
 40408 ;;  y               4   32[BANK0 ] unsigned char 
 40409 ;;  recip           1   40[BANK0 ] unsigned char 
 40410 ;; Return value:  Size  Location     Type
 40411 ;;                  4   28[BANK0 ] unsigned char 
 40412 ;; Registers used:
 40413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40414 ;; Tracked objects:
 40415 ;;		On entry : 0/0
 40416 ;;		On exit  : 0/0
 40417 ;;		Unchanged: 0/0
 40418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40420 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40422 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40423 ;;Total ram usage:       21 bytes
 40424 ;; Hardware stack levels used:    1
 40425 ;; Hardware stack levels required when called:    2
 40426 ;; This function calls:
 40427 ;;		_eval_poly
 40428 ;;		_fabs
 40429 ;;		i2___fladd
 40430 ;;		i2___fldiv
 40431 ;;		i2___flge
 40432 ;;		i2___flmul
 40433 ;;		i2___flneg
 40434 ;; This function is called by:
 40435 ;;		_asin
 40436 ;; This function uses a non-reentrant model
 40437 ;;
 40438                           
 40439                           	psect	text122
 40440  016B0E                     __ptext122:
 40441                           	opt stack 0
 40442  016B0E                     _atan:
 40443                           	opt stack 11
 40444                           
 40445                           ;incstack = 0
 40446  016B0E  C07C  F030         	movff	atan@f,fabs@d
 40447  016B12  C07D  F031         	movff	atan@f+1,fabs@d+1
 40448  016B16  C07E  F032         	movff	atan@f+2,fabs@d+2
 40449  016B1A  C07F  F033         	movff	atan@f+3,fabs@d+3
 40450  016B1E  EC1B  F0C7         	call	_fabs	;wreg free
 40451  016B22  C030  F08D         	movff	?_fabs,atan@val
 40452  016B26  C031  F08E         	movff	?_fabs+1,atan@val+1
 40453  016B2A  C032  F08F         	movff	?_fabs+2,atan@val+2
 40454  016B2E  C033  F090         	movff	?_fabs+3,atan@val+3
 40455  016B32  0100               	movlb	0	; () banked
 40456  016B34  518D               	movf	atan@val& (0+255),w,b
 40457  016B36  118E               	iorwf	(atan@val+1)& (0+255),w,b
 40458  016B38  118F               	iorwf	(atan@val+2)& (0+255),w,b
 40459  016B3A  1190               	iorwf	(atan@val+3)& (0+255),w,b
 40460  016B3C  A4D8               	btfss	status,2,c
 40461  016B3E  D009               	goto	i2l1833
 40462                           
 40463                           ; BSR set to: 0
 40464  016B40  0E00               	movlw	0
 40465  016B42  6F7C               	movwf	?_atan& (0+255),b
 40466  016B44  0E00               	movlw	0
 40467  016B46  6F7D               	movwf	(?_atan+1)& (0+255),b
 40468  016B48  0E00               	movlw	0
 40469  016B4A  6F7E               	movwf	(?_atan+2)& (0+255),b
 40470  016B4C  0E00               	movlw	0
 40471  016B4E  6F7F               	movwf	(?_atan+3)& (0+255),b
 40472                           
 40473                           ; BSR set to: 0
 40474  016B50  0012               	return	
 40475  016B52                     i2l1833:
 40476                           
 40477                           ; BSR set to: 0
 40478                           
 40479                           ; BSR set to: 0
 40480  016B52  0E00               	movlw	0
 40481  016B54  6E34               	movwf	i2___flge@ff1,c
 40482  016B56  0E00               	movlw	0
 40483  016B58  6E35               	movwf	i2___flge@ff1+1,c
 40484  016B5A  0E80               	movlw	128
 40485  016B5C  6E36               	movwf	i2___flge@ff1+2,c
 40486  016B5E  0E3F               	movlw	63
 40487  016B60  6E37               	movwf	i2___flge@ff1+3,c
 40488  016B62  C08D  F038         	movff	atan@val,i2___flge@ff2
 40489  016B66  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 40490  016B6A  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 40491  016B6E  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 40492  016B72  EC73  F0BB         	call	i2___flge	;wreg free
 40493  016B76  B0D8               	btfsc	status,0,c
 40494  016B78  D002               	goto	i2u1529_40
 40495  016B7A  0E01               	movlw	1
 40496  016B7C  D001               	goto	i2u1530_40
 40497  016B7E                     i2u1529_40:
 40498  016B7E  0E00               	movlw	0
 40499  016B80                     i2u1530_40:
 40500  016B80  0100               	movlb	0	; () banked
 40501  016B82  6F88               	movwf	atan@recip& (0+255),b
 40502  016B84  5188               	movf	atan@recip& (0+255),w,b
 40503  016B86  B4D8               	btfsc	status,2,c
 40504  016B88  D01A               	goto	i2l1835
 40505                           
 40506                           ; BSR set to: 0
 40507  016B8A  0E00               	movlw	0
 40508  016B8C  6E13               	movwf	i2___fldiv@b,c
 40509  016B8E  0E00               	movlw	0
 40510  016B90  6E14               	movwf	i2___fldiv@b+1,c
 40511  016B92  0E80               	movlw	128
 40512  016B94  6E15               	movwf	i2___fldiv@b+2,c
 40513  016B96  0E3F               	movlw	63
 40514  016B98  6E16               	movwf	i2___fldiv@b+3,c
 40515  016B9A  C08D  F017         	movff	atan@val,i2___fldiv@a
 40516  016B9E  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 40517  016BA2  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 40518  016BA6  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 40519  016BAA  EC7E  F0B0         	call	i2___fldiv	;wreg free
 40520  016BAE  C013  F08D         	movff	?i2___fldiv,atan@val
 40521  016BB2  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 40522  016BB6  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 40523  016BBA  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 40524  016BBE                     i2l1835:
 40525  016BBE  C08D  F030         	movff	atan@val,i2___flmul@b
 40526  016BC2  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 40527  016BC6  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 40528  016BCA  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 40529  016BCE  C08D  F034         	movff	atan@val,i2___flmul@a
 40530  016BD2  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 40531  016BD6  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 40532  016BDA  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 40533  016BDE  EC77  F0A4         	call	i2___flmul	;wreg free
 40534  016BE2  C030  F089         	movff	?i2___flmul,atan@val_squared
 40535  016BE6  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 40536  016BEA  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 40537  016BEE  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 40538  016BF2  C089  F06C         	movff	atan@val_squared,eval_poly@x
 40539  016BF6  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 40540  016BFA  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 40541  016BFE  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 40542  016C02  0E2B               	movlw	low atan@coeff_b
 40543  016C04  0100               	movlb	0	; () banked
 40544  016C06  6F70               	movwf	eval_poly@d& (0+255),b
 40545  016C08  0ED9               	movlw	high atan@coeff_b
 40546  016C0A  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 40547  016C0C  0E00               	movlw	0
 40548  016C0E  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 40549  016C10  0E04               	movlw	4
 40550  016C12  6F72               	movwf	eval_poly@n& (0+255),b
 40551  016C14  EC11  F0BD         	call	_eval_poly	;wreg free
 40552  016C18  C06C  F080         	movff	?_eval_poly,atan@y
 40553  016C1C  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 40554  016C20  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 40555  016C24  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 40556  016C28  C089  F06C         	movff	atan@val_squared,eval_poly@x
 40557  016C2C  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 40558  016C30  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 40559  016C34  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 40560  016C38  0EFF               	movlw	low atan@coeff_a
 40561  016C3A  0100               	movlb	0	; () banked
 40562  016C3C  6F70               	movwf	eval_poly@d& (0+255),b
 40563  016C3E  0ED8               	movlw	high atan@coeff_a
 40564  016C40  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 40565  016C42  0E00               	movlw	0
 40566  016C44  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 40567  016C46  0E05               	movlw	5
 40568  016C48  6F72               	movwf	eval_poly@n& (0+255),b
 40569  016C4A  EC11  F0BD         	call	_eval_poly	;wreg free
 40570  016C4E  C06C  F084         	movff	?_eval_poly,atan@x
 40571  016C52  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 40572  016C56  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 40573  016C5A  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 40574  016C5E  C08D  F030         	movff	atan@val,i2___flmul@b
 40575  016C62  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 40576  016C66  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 40577  016C6A  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 40578  016C6E  C080  F017         	movff	atan@y,i2___fldiv@a
 40579  016C72  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 40580  016C76  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 40581  016C7A  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 40582  016C7E  C084  F013         	movff	atan@x,i2___fldiv@b
 40583  016C82  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 40584  016C86  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 40585  016C8A  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 40586  016C8E  EC7E  F0B0         	call	i2___fldiv	;wreg free
 40587  016C92  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 40588  016C96  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 40589  016C9A  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 40590  016C9E  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 40591  016CA2  EC77  F0A4         	call	i2___flmul	;wreg free
 40592  016CA6  C030  F08D         	movff	?i2___flmul,atan@val
 40593  016CAA  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 40594  016CAE  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 40595  016CB2  C033  F090         	movff	?i2___flmul+3,atan@val+3
 40596  016CB6  0100               	movlb	0	; () banked
 40597  016CB8  5188               	movf	atan@recip& (0+255),w,b
 40598  016CBA  B4D8               	btfsc	status,2,c
 40599  016CBC  D024               	goto	i2l1836
 40600                           
 40601                           ; BSR set to: 0
 40602  016CBE  C08D  F02C         	movff	atan@val,i2___flneg@f1
 40603  016CC2  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 40604  016CC6  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 40605  016CCA  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 40606  016CCE  EC21  F0C8         	call	i2___flneg	;wreg free
 40607  016CD2  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 40608  016CD6  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 40609  016CDA  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 40610  016CDE  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 40611  016CE2  0EDB               	movlw	219
 40612  016CE4  6E5A               	movwf	i2___fladd@a,c
 40613  016CE6  0E0F               	movlw	15
 40614  016CE8  6E5B               	movwf	i2___fladd@a+1,c
 40615  016CEA  0EC9               	movlw	201
 40616  016CEC  6E5C               	movwf	i2___fladd@a+2,c
 40617  016CEE  0E3F               	movlw	63
 40618  016CF0  6E5D               	movwf	i2___fladd@a+3,c
 40619  016CF2  ECBE  F0A7         	call	i2___fladd	;wreg free
 40620  016CF6  C056  F08D         	movff	?i2___fladd,atan@val
 40621  016CFA  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 40622  016CFE  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 40623  016D02  C059  F090         	movff	?i2___fladd+3,atan@val+3
 40624  016D06                     i2l1836:
 40625  016D06  0100               	movlb	0	; () banked
 40626  016D08  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 40627  016D0A  D009               	goto	i2l1838
 40628                           
 40629                           ; BSR set to: 0
 40630  016D0C  C08D  F07C         	movff	atan@val,?_atan
 40631  016D10  C08E  F07D         	movff	atan@val+1,?_atan+1
 40632  016D14  C08F  F07E         	movff	atan@val+2,?_atan+2
 40633  016D18  C090  F07F         	movff	atan@val+3,?_atan+3
 40634  016D1C  0012               	return	
 40635  016D1E                     i2l1838:
 40636                           
 40637                           ; BSR set to: 0
 40638                           
 40639                           ; BSR set to: 0
 40640  016D1E  C08D  F02C         	movff	atan@val,i2___flneg@f1
 40641  016D22  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 40642  016D26  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 40643  016D2A  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 40644  016D2E  EC21  F0C8         	call	i2___flneg	;wreg free
 40645  016D32  C02C  F07C         	movff	?i2___flneg,?_atan
 40646  016D36  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 40647  016D3A  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 40648  016D3E  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 40649  016D42  0012               	return	
 40650  016D44                     __end_of_atan:
 40651                           	opt stack 0
 40652                           tosu	equ	0xFFF
 40653                           tosh	equ	0xFFE
 40654                           tosl	equ	0xFFD
 40655                           pclatu	equ	0xFFB
 40656                           pclath	equ	0xFFA
 40657                           tblptru	equ	0xFF8
 40658                           tblptrh	equ	0xFF7
 40659                           tblptrl	equ	0xFF6
 40660                           tablat	equ	0xFF5
 40661                           prodh	equ	0xFF4
 40662                           prodl	equ	0xFF3
 40663                           intcon	equ	0xFF2
 40664                           indf0	equ	0xFEF
 40665                           postinc0	equ	0xFEE
 40666                           fsr0h	equ	0xFEA
 40667                           fsr0l	equ	0xFE9
 40668                           wreg	equ	0xFE8
 40669                           indf1	equ	0xFE7
 40670                           postdec1	equ	0xFE5
 40671                           plusw1	equ	0xFE3
 40672                           fsr1h	equ	0xFE2
 40673                           fsr1l	equ	0xFE1
 40674                           bsr	equ	0xFE0
 40675                           indf2	equ	0xFDF
 40676                           postinc2	equ	0xFDE
 40677                           postdec2	equ	0xFDD
 40678                           plusw2	equ	0xFDB
 40679                           fsr2h	equ	0xFDA
 40680                           fsr2l	equ	0xFD9
 40681                           status	equ	0xFD8
 40682                           
 40683 ;; *************** function _fabs *****************
 40684 ;; Defined at:
 40685 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 40686 ;; Parameters:    Size  Location     Type
 40687 ;;  d               4   47[COMRAM] unsigned char 
 40688 ;; Auto vars:     Size  Location     Type
 40689 ;;		None
 40690 ;; Return value:  Size  Location     Type
 40691 ;;                  4   47[COMRAM] unsigned char 
 40692 ;; Registers used:
 40693 ;;		wreg, status,2, status,0, cstack
 40694 ;; Tracked objects:
 40695 ;;		On entry : 0/0
 40696 ;;		On exit  : 0/0
 40697 ;;		Unchanged: 0/0
 40698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40703 ;;Total ram usage:        4 bytes
 40704 ;; Hardware stack levels used:    1
 40705 ;; Hardware stack levels required when called:    1
 40706 ;; This function calls:
 40707 ;;		i2___flneg
 40708 ;; This function is called by:
 40709 ;;		_asin
 40710 ;;		_atan
 40711 ;; This function uses a non-reentrant model
 40712 ;;
 40713                           
 40714                           	psect	text123
 40715  018E36                     __ptext123:
 40716                           	opt stack 0
 40717  018E36                     _fabs:
 40718                           	opt stack 12
 40719                           
 40720                           ;incstack = 0
 40721  018E36  AE33               	btfss	fabs@d+3,7,c
 40722  018E38  D013               	goto	i2l1930
 40723  018E3A  C030  F02C         	movff	fabs@d,i2___flneg@f1
 40724  018E3E  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 40725  018E42  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 40726  018E46  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 40727  018E4A  EC21  F0C8         	call	i2___flneg	;wreg free
 40728  018E4E  C02C  F030         	movff	?i2___flneg,?_fabs
 40729  018E52  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 40730  018E56  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 40731  018E5A  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 40732  018E5E  0012               	return	
 40733  018E60                     i2l1930:
 40734  018E60  C030  F030         	movff	fabs@d,?_fabs
 40735  018E64  C031  F031         	movff	fabs@d+1,?_fabs+1
 40736  018E68  C032  F032         	movff	fabs@d+2,?_fabs+2
 40737  018E6C  C033  F033         	movff	fabs@d+3,?_fabs+3
 40738  018E70  0012               	return		;funcret
 40739  018E72                     __end_of_fabs:
 40740                           	opt stack 0
 40741                           tosu	equ	0xFFF
 40742                           tosh	equ	0xFFE
 40743                           tosl	equ	0xFFD
 40744                           pclatu	equ	0xFFB
 40745                           pclath	equ	0xFFA
 40746                           tblptru	equ	0xFF8
 40747                           tblptrh	equ	0xFF7
 40748                           tblptrl	equ	0xFF6
 40749                           tablat	equ	0xFF5
 40750                           prodh	equ	0xFF4
 40751                           prodl	equ	0xFF3
 40752                           intcon	equ	0xFF2
 40753                           indf0	equ	0xFEF
 40754                           postinc0	equ	0xFEE
 40755                           fsr0h	equ	0xFEA
 40756                           fsr0l	equ	0xFE9
 40757                           wreg	equ	0xFE8
 40758                           indf1	equ	0xFE7
 40759                           postdec1	equ	0xFE5
 40760                           plusw1	equ	0xFE3
 40761                           fsr1h	equ	0xFE2
 40762                           fsr1l	equ	0xFE1
 40763                           bsr	equ	0xFE0
 40764                           indf2	equ	0xFDF
 40765                           postinc2	equ	0xFDE
 40766                           postdec2	equ	0xFDD
 40767                           plusw2	equ	0xFDB
 40768                           fsr2h	equ	0xFDA
 40769                           fsr2l	equ	0xFD9
 40770                           status	equ	0xFD8
 40771                           
 40772 ;; *************** function _currentMeasuredToPeak *****************
 40773 ;; Defined at:
 40774 ;;		line 139 in file "main.c"
 40775 ;; Parameters:    Size  Location     Type
 40776 ;;  Measured        4   57[BANK0 ] unsigned char 
 40777 ;;  Angle           4   61[BANK0 ] unsigned char 
 40778 ;; Auto vars:     Size  Location     Type
 40779 ;;  Peak            4   65[BANK0 ] unsigned char 
 40780 ;; Return value:  Size  Location     Type
 40781 ;;                  4   57[BANK0 ] unsigned char 
 40782 ;; Registers used:
 40783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40784 ;; Tracked objects:
 40785 ;;		On entry : 0/0
 40786 ;;		On exit  : 0/0
 40787 ;;		Unchanged: 0/0
 40788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40789 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40790 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40792 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40793 ;;Total ram usage:       12 bytes
 40794 ;; Hardware stack levels used:    1
 40795 ;; Hardware stack levels required when called:    3
 40796 ;; This function calls:
 40797 ;;		_sin
 40798 ;;		i2___fldiv
 40799 ;; This function is called by:
 40800 ;;		_ADCPostProcessingCallback
 40801 ;; This function uses a non-reentrant model
 40802 ;;
 40803                           
 40804                           	psect	text124
 40805  018462                     __ptext124:
 40806                           	opt stack 0
 40807  018462                     _currentMeasuredToPeak:
 40808                           	opt stack 13
 40809                           
 40810                           ;main.c: 142: double Peak = 0.0;
 40811                           
 40812                           ;incstack = 0
 40813  018462  0E00               	movlw	0
 40814  018464  0100               	movlb	0	; () banked
 40815  018466  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 40816  018468  0E00               	movlw	0
 40817  01846A  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 40818  01846C  0E00               	movlw	0
 40819  01846E  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 40820  018470  0E00               	movlw	0
 40821  018472  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 40822                           
 40823                           ; BSR set to: 0
 40824                           ;main.c: 145: Peak = sin(Angle);
 40825  018474  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 40826  018478  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 40827  01847C  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 40828  018480  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 40829  018484  ECDF  F0AA         	call	_sin	;wreg free
 40830  018488  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 40831  01848C  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 40832  018490  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 40833  018494  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 40834                           
 40835                           ;main.c: 146: Peak = Measured / Peak;
 40836  018498  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 40837  01849C  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 40838  0184A0  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 40839  0184A4  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 40840  0184A8  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 40841  0184AC  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 40842  0184B0  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 40843  0184B4  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 40844  0184B8  EC7E  F0B0         	call	i2___fldiv	;wreg free
 40845  0184BC  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 40846  0184C0  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 40847  0184C4  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 40848  0184C8  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 40849                           
 40850                           ;main.c: 147: return Peak;
 40851  0184CC  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 40852  0184D0  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 40853  0184D4  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 40854  0184D8  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 40855  0184DC  0012               	return	
 40856  0184DE                     __end_of_currentMeasuredToPeak:
 40857                           	opt stack 0
 40858                           tosu	equ	0xFFF
 40859                           tosh	equ	0xFFE
 40860                           tosl	equ	0xFFD
 40861                           pclatu	equ	0xFFB
 40862                           pclath	equ	0xFFA
 40863                           tblptru	equ	0xFF8
 40864                           tblptrh	equ	0xFF7
 40865                           tblptrl	equ	0xFF6
 40866                           tablat	equ	0xFF5
 40867                           prodh	equ	0xFF4
 40868                           prodl	equ	0xFF3
 40869                           intcon	equ	0xFF2
 40870                           indf0	equ	0xFEF
 40871                           postinc0	equ	0xFEE
 40872                           fsr0h	equ	0xFEA
 40873                           fsr0l	equ	0xFE9
 40874                           wreg	equ	0xFE8
 40875                           indf1	equ	0xFE7
 40876                           postdec1	equ	0xFE5
 40877                           plusw1	equ	0xFE3
 40878                           fsr1h	equ	0xFE2
 40879                           fsr1l	equ	0xFE1
 40880                           bsr	equ	0xFE0
 40881                           indf2	equ	0xFDF
 40882                           postinc2	equ	0xFDE
 40883                           postdec2	equ	0xFDD
 40884                           plusw2	equ	0xFDB
 40885                           fsr2h	equ	0xFDA
 40886                           fsr2l	equ	0xFD9
 40887                           status	equ	0xFD8
 40888                           
 40889 ;; *************** function _sin *****************
 40890 ;; Defined at:
 40891 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 40892 ;; Parameters:    Size  Location     Type
 40893 ;;  f               4   40[BANK0 ] unsigned char 
 40894 ;; Auto vars:     Size  Location     Type
 40895 ;;  x2              4   52[BANK0 ] unsigned char 
 40896 ;;  y               4   44[BANK0 ] unsigned char 
 40897 ;;  sgn             1   56[BANK0 ] unsigned char 
 40898 ;; Return value:  Size  Location     Type
 40899 ;;                  4   40[BANK0 ] unsigned char 
 40900 ;; Registers used:
 40901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40902 ;; Tracked objects:
 40903 ;;		On entry : 0/0
 40904 ;;		On exit  : 0/0
 40905 ;;		Unchanged: 0/0
 40906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40907 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40908 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40910 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40911 ;;Total ram usage:       17 bytes
 40912 ;; Hardware stack levels used:    1
 40913 ;; Hardware stack levels required when called:    2
 40914 ;; This function calls:
 40915 ;;		_eval_poly
 40916 ;;		_floor
 40917 ;;		i2___fladd
 40918 ;;		i2___fldiv
 40919 ;;		i2___flge
 40920 ;;		i2___flmul
 40921 ;;		i2___flneg
 40922 ;;		i2___flsub
 40923 ;; This function is called by:
 40924 ;;		_peakToRMS
 40925 ;;		_currentMeasuredToPeak
 40926 ;; This function uses a non-reentrant model
 40927 ;;
 40928                           
 40929                           	psect	text125
 40930  0155BE                     __ptext125:
 40931                           	opt stack 0
 40932  0155BE                     _sin:
 40933                           	opt stack 13
 40934                           
 40935                           ;incstack = 0
 40936  0155BE  0E00               	movlw	0
 40937  0155C0  0100               	movlb	0	; () banked
 40938  0155C2  6F98               	movwf	sin@sgn& (0+255),b
 40939                           
 40940                           ; BSR set to: 0
 40941  0155C4  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 40942  0155C6  D015               	goto	i2l2213
 40943                           
 40944                           ; BSR set to: 0
 40945  0155C8  C088  F02C         	movff	sin@f,i2___flneg@f1
 40946  0155CC  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 40947  0155D0  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 40948  0155D4  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 40949  0155D8  EC21  F0C8         	call	i2___flneg	;wreg free
 40950  0155DC  C02C  F088         	movff	?i2___flneg,sin@f
 40951  0155E0  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 40952  0155E4  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 40953  0155E8  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 40954  0155EC  0E01               	movlw	1
 40955  0155EE  0100               	movlb	0	; () banked
 40956  0155F0  6F98               	movwf	sin@sgn& (0+255),b
 40957  0155F2                     i2l2213:
 40958                           
 40959                           ; BSR set to: 0
 40960                           
 40961                           ; BSR set to: 0
 40962  0155F2  C088  F030         	movff	sin@f,i2___flmul@b
 40963  0155F6  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 40964  0155FA  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 40965  0155FE  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 40966  015602  0E83               	movlw	131
 40967  015604  6E34               	movwf	i2___flmul@a,c
 40968  015606  0EF9               	movlw	249
 40969  015608  6E35               	movwf	i2___flmul@a+1,c
 40970  01560A  0E22               	movlw	34
 40971  01560C  6E36               	movwf	i2___flmul@a+2,c
 40972  01560E  0E3E               	movlw	62
 40973  015610  6E37               	movwf	i2___flmul@a+3,c
 40974  015612  EC77  F0A4         	call	i2___flmul	;wreg free
 40975  015616  C030  F088         	movff	?i2___flmul,sin@f
 40976  01561A  C031  F089         	movff	?i2___flmul+1,sin@f+1
 40977  01561E  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 40978  015622  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 40979  015626  C088  F080         	movff	sin@f,i2___flsub@b
 40980  01562A  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 40981  01562E  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 40982  015632  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 40983  015636  C088  F076         	movff	sin@f,floor@x
 40984  01563A  C089  F077         	movff	sin@f+1,floor@x+1
 40985  01563E  C08A  F078         	movff	sin@f+2,floor@x+2
 40986  015642  C08B  F079         	movff	sin@f+3,floor@x+3
 40987  015646  EC03  F0BC         	call	_floor	;wreg free
 40988  01564A  C076  F084         	movff	?_floor,i2___flsub@a
 40989  01564E  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 40990  015652  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 40991  015656  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 40992  01565A  EC57  F0C6         	call	i2___flsub	;wreg free
 40993  01565E  C080  F088         	movff	?i2___flsub,sin@f
 40994  015662  C081  F089         	movff	?i2___flsub+1,sin@f+1
 40995  015666  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 40996  01566A  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 40997  01566E  C088  F030         	movff	sin@f,i2___flmul@b
 40998  015672  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 40999  015676  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 41000  01567A  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 41001  01567E  0E00               	movlw	0
 41002  015680  6E34               	movwf	i2___flmul@a,c
 41003  015682  0E00               	movlw	0
 41004  015684  6E35               	movwf	i2___flmul@a+1,c
 41005  015686  0E80               	movlw	128
 41006  015688  6E36               	movwf	i2___flmul@a+2,c
 41007  01568A  0E40               	movlw	64
 41008  01568C  6E37               	movwf	i2___flmul@a+3,c
 41009  01568E  EC77  F0A4         	call	i2___flmul	;wreg free
 41010  015692  C030  F088         	movff	?i2___flmul,sin@f
 41011  015696  C031  F089         	movff	?i2___flmul+1,sin@f+1
 41012  01569A  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 41013  01569E  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 41014  0156A2  0E00               	movlw	0
 41015  0156A4  6E34               	movwf	i2___flge@ff1,c
 41016  0156A6  0E00               	movlw	0
 41017  0156A8  6E35               	movwf	i2___flge@ff1+1,c
 41018  0156AA  0E00               	movlw	0
 41019  0156AC  6E36               	movwf	i2___flge@ff1+2,c
 41020  0156AE  0E40               	movlw	64
 41021  0156B0  6E37               	movwf	i2___flge@ff1+3,c
 41022  0156B2  C088  F038         	movff	sin@f,i2___flge@ff2
 41023  0156B6  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 41024  0156BA  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 41025  0156BE  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 41026  0156C2  EC73  F0BB         	call	i2___flge	;wreg free
 41027  0156C6  B0D8               	btfsc	status,0,c
 41028  0156C8  D023               	goto	i2l2214
 41029  0156CA  C088  F080         	movff	sin@f,i2___flsub@b
 41030  0156CE  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 41031  0156D2  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 41032  0156D6  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 41033  0156DA  0E00               	movlw	0
 41034  0156DC  0100               	movlb	0	; () banked
 41035  0156DE  6F84               	movwf	i2___flsub@a& (0+255),b
 41036  0156E0  0E00               	movlw	0
 41037  0156E2  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 41038  0156E4  0E00               	movlw	0
 41039  0156E6  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 41040  0156E8  0E40               	movlw	64
 41041  0156EA  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 41042  0156EC  EC57  F0C6         	call	i2___flsub	;wreg free
 41043  0156F0  C080  F088         	movff	?i2___flsub,sin@f
 41044  0156F4  C081  F089         	movff	?i2___flsub+1,sin@f+1
 41045  0156F8  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 41046  0156FC  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 41047  015700  0100               	movlb	0	; () banked
 41048  015702  5198               	movf	sin@sgn& (0+255),w,b
 41049  015704  A4D8               	btfss	status,2,c
 41050  015706  D002               	goto	i2u1676_40
 41051  015708  0E01               	movlw	1
 41052  01570A  D001               	goto	i2u1677_40
 41053  01570C                     i2u1676_40:
 41054  01570C  0E00               	movlw	0
 41055  01570E                     i2u1677_40:
 41056  01570E  6F98               	movwf	sin@sgn& (0+255),b
 41057  015710                     i2l2214:
 41058                           
 41059                           ; BSR set to: 0
 41060  015710  0E00               	movlw	0
 41061  015712  6E34               	movwf	i2___flge@ff1,c
 41062  015714  0E00               	movlw	0
 41063  015716  6E35               	movwf	i2___flge@ff1+1,c
 41064  015718  0E80               	movlw	128
 41065  01571A  6E36               	movwf	i2___flge@ff1+2,c
 41066  01571C  0E3F               	movlw	63
 41067  01571E  6E37               	movwf	i2___flge@ff1+3,c
 41068  015720  C088  F038         	movff	sin@f,i2___flge@ff2
 41069  015724  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 41070  015728  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 41071  01572C  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 41072  015730  EC73  F0BB         	call	i2___flge	;wreg free
 41073  015734  B0D8               	btfsc	status,0,c
 41074  015736  D024               	goto	i2l2215
 41075  015738  C088  F02C         	movff	sin@f,i2___flneg@f1
 41076  01573C  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 41077  015740  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 41078  015744  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 41079  015748  EC21  F0C8         	call	i2___flneg	;wreg free
 41080  01574C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 41081  015750  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 41082  015754  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 41083  015758  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 41084  01575C  0E00               	movlw	0
 41085  01575E  6E5A               	movwf	i2___fladd@a,c
 41086  015760  0E00               	movlw	0
 41087  015762  6E5B               	movwf	i2___fladd@a+1,c
 41088  015764  0E00               	movlw	0
 41089  015766  6E5C               	movwf	i2___fladd@a+2,c
 41090  015768  0E40               	movlw	64
 41091  01576A  6E5D               	movwf	i2___fladd@a+3,c
 41092  01576C  ECBE  F0A7         	call	i2___fladd	;wreg free
 41093  015770  C056  F088         	movff	?i2___fladd,sin@f
 41094  015774  C057  F089         	movff	?i2___fladd+1,sin@f+1
 41095  015778  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 41096  01577C  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 41097  015780                     i2l2215:
 41098  015780  C088  F030         	movff	sin@f,i2___flmul@b
 41099  015784  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 41100  015788  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 41101  01578C  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 41102  015790  C088  F034         	movff	sin@f,i2___flmul@a
 41103  015794  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 41104  015798  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 41105  01579C  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 41106  0157A0  EC77  F0A4         	call	i2___flmul	;wreg free
 41107  0157A4  C030  F094         	movff	?i2___flmul,sin@x2
 41108  0157A8  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 41109  0157AC  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 41110  0157B0  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 41111  0157B4  C094  F06C         	movff	sin@x2,eval_poly@x
 41112  0157B8  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 41113  0157BC  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 41114  0157C0  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 41115  0157C4  0E3F               	movlw	low sin@coeff_b
 41116  0157C6  0100               	movlb	0	; () banked
 41117  0157C8  6F70               	movwf	eval_poly@d& (0+255),b
 41118  0157CA  0ED9               	movlw	high sin@coeff_b
 41119  0157CC  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 41120  0157CE  0E00               	movlw	0
 41121  0157D0  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 41122  0157D2  0E03               	movlw	3
 41123  0157D4  6F72               	movwf	eval_poly@n& (0+255),b
 41124  0157D6  EC11  F0BD         	call	_eval_poly	;wreg free
 41125  0157DA  C06C  F08C         	movff	?_eval_poly,sin@y
 41126  0157DE  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 41127  0157E2  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 41128  0157E6  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 41129  0157EA  C08C  F017         	movff	sin@y,i2___fldiv@a
 41130  0157EE  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 41131  0157F2  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 41132  0157F6  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 41133  0157FA  0E00               	movlw	0
 41134  0157FC  0100               	movlb	0	; () banked
 41135  0157FE  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 41136  015800  0E04               	movlw	4
 41137  015802  6F72               	movwf	eval_poly@n& (0+255),b
 41138  015804  0E17               	movlw	low sin@coeff_a
 41139  015806  6F70               	movwf	eval_poly@d& (0+255),b
 41140  015808  0ED9               	movlw	high sin@coeff_a
 41141  01580A  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 41142  01580C  C094  F06C         	movff	sin@x2,eval_poly@x
 41143  015810  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 41144  015814  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 41145  015818  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 41146  01581C  EC11  F0BD         	call	_eval_poly	;wreg free
 41147  015820  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 41148  015824  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 41149  015828  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 41150  01582C  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 41151  015830  EC7E  F0B0         	call	i2___fldiv	;wreg free
 41152  015834  C013  F090         	movff	?i2___fldiv,_sin$4372
 41153  015838  C014  F091         	movff	?i2___fldiv+1,_sin$4372+1
 41154  01583C  C015  F092         	movff	?i2___fldiv+2,_sin$4372+2
 41155  015840  C016  F093         	movff	?i2___fldiv+3,_sin$4372+3
 41156  015844  C088  F030         	movff	sin@f,i2___flmul@b
 41157  015848  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 41158  01584C  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 41159  015850  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 41160  015854  C090  F034         	movff	_sin$4372,i2___flmul@a
 41161  015858  C091  F035         	movff	_sin$4372+1,i2___flmul@a+1
 41162  01585C  C092  F036         	movff	_sin$4372+2,i2___flmul@a+2
 41163  015860  C093  F037         	movff	_sin$4372+3,i2___flmul@a+3
 41164  015864  EC77  F0A4         	call	i2___flmul	;wreg free
 41165  015868  C030  F088         	movff	?i2___flmul,sin@f
 41166  01586C  C031  F089         	movff	?i2___flmul+1,sin@f+1
 41167  015870  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 41168  015874  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 41169  015878  0100               	movlb	0	; () banked
 41170  01587A  5198               	movf	sin@sgn& (0+255),w,b
 41171  01587C  B4D8               	btfsc	status,2,c
 41172  01587E  D013               	goto	i2l2216
 41173                           
 41174                           ; BSR set to: 0
 41175  015880  C088  F02C         	movff	sin@f,i2___flneg@f1
 41176  015884  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 41177  015888  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 41178  01588C  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 41179  015890  EC21  F0C8         	call	i2___flneg	;wreg free
 41180  015894  C02C  F088         	movff	?i2___flneg,?_sin
 41181  015898  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 41182  01589C  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 41183  0158A0  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 41184  0158A4  0012               	return	
 41185  0158A6                     i2l2216:
 41186                           
 41187                           ; BSR set to: 0
 41188  0158A6  C088  F088         	movff	sin@f,?_sin
 41189  0158AA  C089  F089         	movff	sin@f+1,?_sin+1
 41190  0158AE  C08A  F08A         	movff	sin@f+2,?_sin+2
 41191  0158B2  C08B  F08B         	movff	sin@f+3,?_sin+3
 41192  0158B6  0012               	return		;funcret
 41193  0158B8                     __end_of_sin:
 41194                           	opt stack 0
 41195                           tosu	equ	0xFFF
 41196                           tosh	equ	0xFFE
 41197                           tosl	equ	0xFFD
 41198                           pclatu	equ	0xFFB
 41199                           pclath	equ	0xFFA
 41200                           tblptru	equ	0xFF8
 41201                           tblptrh	equ	0xFF7
 41202                           tblptrl	equ	0xFF6
 41203                           tablat	equ	0xFF5
 41204                           prodh	equ	0xFF4
 41205                           prodl	equ	0xFF3
 41206                           intcon	equ	0xFF2
 41207                           indf0	equ	0xFEF
 41208                           postinc0	equ	0xFEE
 41209                           fsr0h	equ	0xFEA
 41210                           fsr0l	equ	0xFE9
 41211                           wreg	equ	0xFE8
 41212                           indf1	equ	0xFE7
 41213                           postdec1	equ	0xFE5
 41214                           plusw1	equ	0xFE3
 41215                           fsr1h	equ	0xFE2
 41216                           fsr1l	equ	0xFE1
 41217                           bsr	equ	0xFE0
 41218                           indf2	equ	0xFDF
 41219                           postinc2	equ	0xFDE
 41220                           postdec2	equ	0xFDD
 41221                           plusw2	equ	0xFDB
 41222                           fsr2h	equ	0xFDA
 41223                           fsr2l	equ	0xFD9
 41224                           status	equ	0xFD8
 41225                           
 41226 ;; *************** function i2___flsub *****************
 41227 ;; Defined at:
 41228 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 41229 ;; Parameters:    Size  Location     Type
 41230 ;;  b               4   32[BANK0 ] unsigned char 
 41231 ;;  a               4   36[BANK0 ] unsigned char 
 41232 ;; Auto vars:     Size  Location     Type
 41233 ;;		None
 41234 ;; Return value:  Size  Location     Type
 41235 ;;                  4   32[BANK0 ] unsigned char 
 41236 ;; Registers used:
 41237 ;;		wreg, status,2, status,0, cstack
 41238 ;; Tracked objects:
 41239 ;;		On entry : 0/0
 41240 ;;		On exit  : 0/0
 41241 ;;		Unchanged: 0/0
 41242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41243 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41246 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41247 ;;Total ram usage:        8 bytes
 41248 ;; Hardware stack levels used:    1
 41249 ;; Hardware stack levels required when called:    1
 41250 ;; This function calls:
 41251 ;;		i2___fladd
 41252 ;; This function is called by:
 41253 ;;		_sin
 41254 ;;		i2_printf
 41255 ;; This function uses a non-reentrant model
 41256 ;;
 41257                           
 41258                           	psect	text126
 41259  018CAE                     __ptext126:
 41260                           	opt stack 0
 41261  018CAE                     i2___flsub:
 41262                           	opt stack 15
 41263                           
 41264                           ;incstack = 0
 41265  018CAE  0E00               	movlw	0
 41266  018CB0  0100               	movlb	0	; () banked
 41267  018CB2  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 41268  018CB4  0E00               	movlw	0
 41269  018CB6  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 41270  018CB8  0E00               	movlw	0
 41271  018CBA  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 41272  018CBC  0E80               	movlw	128
 41273  018CBE  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 41274                           
 41275                           ; BSR set to: 0
 41276  018CC0  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 41277  018CC4  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 41278  018CC8  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 41279  018CCC  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 41280  018CD0  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 41281  018CD4  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 41282  018CD8  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 41283  018CDC  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 41284  018CE0  ECBE  F0A7         	call	i2___fladd	;wreg free
 41285  018CE4  C056  F080         	movff	?i2___fladd,?i2___flsub
 41286  018CE8  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 41287  018CEC  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 41288  018CF0  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 41289  018CF4  0012               	return	
 41290  018CF6                     __end_ofi2___flsub:
 41291                           	opt stack 0
 41292                           tosu	equ	0xFFF
 41293                           tosh	equ	0xFFE
 41294                           tosl	equ	0xFFD
 41295                           pclatu	equ	0xFFB
 41296                           pclath	equ	0xFFA
 41297                           tblptru	equ	0xFF8
 41298                           tblptrh	equ	0xFF7
 41299                           tblptrl	equ	0xFF6
 41300                           tablat	equ	0xFF5
 41301                           prodh	equ	0xFF4
 41302                           prodl	equ	0xFF3
 41303                           intcon	equ	0xFF2
 41304                           indf0	equ	0xFEF
 41305                           postinc0	equ	0xFEE
 41306                           fsr0h	equ	0xFEA
 41307                           fsr0l	equ	0xFE9
 41308                           wreg	equ	0xFE8
 41309                           indf1	equ	0xFE7
 41310                           postdec1	equ	0xFE5
 41311                           plusw1	equ	0xFE3
 41312                           fsr1h	equ	0xFE2
 41313                           fsr1l	equ	0xFE1
 41314                           bsr	equ	0xFE0
 41315                           indf2	equ	0xFDF
 41316                           postinc2	equ	0xFDE
 41317                           postdec2	equ	0xFDD
 41318                           plusw2	equ	0xFDB
 41319                           fsr2h	equ	0xFDA
 41320                           fsr2l	equ	0xFD9
 41321                           status	equ	0xFD8
 41322                           
 41323 ;; *************** function i2___flneg *****************
 41324 ;; Defined at:
 41325 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 41326 ;; Parameters:    Size  Location     Type
 41327 ;;  f1              4   43[COMRAM] unsigned char 
 41328 ;; Auto vars:     Size  Location     Type
 41329 ;;		None
 41330 ;; Return value:  Size  Location     Type
 41331 ;;                  4   43[COMRAM] unsigned char 
 41332 ;; Registers used:
 41333 ;;		wreg, status,2, status,0
 41334 ;; Tracked objects:
 41335 ;;		On entry : 0/0
 41336 ;;		On exit  : 0/0
 41337 ;;		Unchanged: 0/0
 41338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41342 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41343 ;;Total ram usage:        4 bytes
 41344 ;; Hardware stack levels used:    1
 41345 ;; This function calls:
 41346 ;;		Nothing
 41347 ;; This function is called by:
 41348 ;;		_peakToRMS
 41349 ;;		_ADCPostProcessingCallback
 41350 ;;		_acos
 41351 ;;		_asin
 41352 ;;		_atan
 41353 ;;		_fabs
 41354 ;;		_sin
 41355 ;;		i2_printf
 41356 ;; This function uses a non-reentrant model
 41357 ;;
 41358                           
 41359                           	psect	text127
 41360  019042                     __ptext127:
 41361                           	opt stack 0
 41362  019042                     i2___flneg:
 41363                           	opt stack 16
 41364                           
 41365                           ;incstack = 0
 41366  019042  502C               	movf	i2___flneg@f1,w,c
 41367  019044  102D               	iorwf	i2___flneg@f1+1,w,c
 41368  019046  102E               	iorwf	i2___flneg@f1+2,w,c
 41369  019048  102F               	iorwf	i2___flneg@f1+3,w,c
 41370  01904A  B4D8               	btfsc	status,2,c
 41371  01904C  D008               	goto	i2l1958
 41372  01904E  0E00               	movlw	0
 41373  019050  1A2C               	xorwf	i2___flneg@f1,f,c
 41374  019052  0E00               	movlw	0
 41375  019054  1A2D               	xorwf	i2___flneg@f1+1,f,c
 41376  019056  0E00               	movlw	0
 41377  019058  1A2E               	xorwf	i2___flneg@f1+2,f,c
 41378  01905A  0E80               	movlw	128
 41379  01905C  1A2F               	xorwf	i2___flneg@f1+3,f,c
 41380  01905E                     i2l1958:
 41381  01905E  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 41382  019062  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 41383  019066  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 41384  01906A  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 41385  01906E  0012               	return	
 41386  019070                     __end_ofi2___flneg:
 41387                           	opt stack 0
 41388                           tosu	equ	0xFFF
 41389                           tosh	equ	0xFFE
 41390                           tosl	equ	0xFFD
 41391                           pclatu	equ	0xFFB
 41392                           pclath	equ	0xFFA
 41393                           tblptru	equ	0xFF8
 41394                           tblptrh	equ	0xFF7
 41395                           tblptrl	equ	0xFF6
 41396                           tablat	equ	0xFF5
 41397                           prodh	equ	0xFF4
 41398                           prodl	equ	0xFF3
 41399                           intcon	equ	0xFF2
 41400                           indf0	equ	0xFEF
 41401                           postinc0	equ	0xFEE
 41402                           fsr0h	equ	0xFEA
 41403                           fsr0l	equ	0xFE9
 41404                           wreg	equ	0xFE8
 41405                           indf1	equ	0xFE7
 41406                           postdec1	equ	0xFE5
 41407                           plusw1	equ	0xFE3
 41408                           fsr1h	equ	0xFE2
 41409                           fsr1l	equ	0xFE1
 41410                           bsr	equ	0xFE0
 41411                           indf2	equ	0xFDF
 41412                           postinc2	equ	0xFDE
 41413                           postdec2	equ	0xFDD
 41414                           plusw2	equ	0xFDB
 41415                           fsr2h	equ	0xFDA
 41416                           fsr2l	equ	0xFD9
 41417                           status	equ	0xFD8
 41418                           
 41419 ;; *************** function i2___fldiv *****************
 41420 ;; Defined at:
 41421 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 41422 ;; Parameters:    Size  Location     Type
 41423 ;;  b               4   18[COMRAM] unsigned char 
 41424 ;;  a               4   22[COMRAM] unsigned char 
 41425 ;; Auto vars:     Size  Location     Type
 41426 ;;  __fldiv         4   37[COMRAM] unsigned long 
 41427 ;;  __fldiv         4   31[COMRAM] unsigned long 
 41428 ;;  __fldiv         2   35[COMRAM] int 
 41429 ;;  __fldiv         1   42[COMRAM] unsigned char 
 41430 ;;  __fldiv         1   41[COMRAM] unsigned char 
 41431 ;;  __fldiv         1   30[COMRAM] unsigned char 
 41432 ;; Return value:  Size  Location     Type
 41433 ;;                  4   18[COMRAM] unsigned char 
 41434 ;; Registers used:
 41435 ;;		wreg, status,2, status,0
 41436 ;; Tracked objects:
 41437 ;;		On entry : 0/0
 41438 ;;		On exit  : 0/0
 41439 ;;		Unchanged: 0/0
 41440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41441 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41442 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41443 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41444 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41445 ;;Total ram usage:       25 bytes
 41446 ;; Hardware stack levels used:    1
 41447 ;; This function calls:
 41448 ;;		Nothing
 41449 ;; This function is called by:
 41450 ;;		_peakToRMS
 41451 ;;		_currentMeasuredToPeak
 41452 ;;		_ADCPostProcessingCallback
 41453 ;;		_asin
 41454 ;;		_atan
 41455 ;;		_sin
 41456 ;; This function uses a non-reentrant model
 41457 ;;
 41458                           
 41459                           	psect	text128
 41460  0160FC                     __ptext128:
 41461                           	opt stack 0
 41462  0160FC                     i2___fldiv:
 41463                           	opt stack 16
 41464                           
 41465                           ;incstack = 0
 41466  0160FC  5016               	movf	i2___fldiv@b+3,w,c
 41467  0160FE  0B80               	andlw	128
 41468  016100  6E1F               	movwf	i2___fldiv@sign,c
 41469  016102  5016               	movf	i2___fldiv@b+3,w,c
 41470  016104  2416               	addwf	i2___fldiv@b+3,w,c
 41471  016106  6E2A               	movwf	i2___fldiv@bexp,c
 41472  016108  BE15               	btfsc	i2___fldiv@b+2,7,c
 41473  01610A  802A               	bsf	i2___fldiv@bexp,0,c
 41474  01610C  502A               	movf	i2___fldiv@bexp,w,c
 41475  01610E  B4D8               	btfsc	status,2,c
 41476  016110  D00D               	goto	i2l2278
 41477  016112  282A               	incf	i2___fldiv@bexp,w,c
 41478  016114  A4D8               	btfss	status,2,c
 41479  016116  D008               	goto	i2l2279
 41480  016118  0E00               	movlw	0
 41481  01611A  6E13               	movwf	i2___fldiv@b,c
 41482  01611C  0E00               	movlw	0
 41483  01611E  6E14               	movwf	i2___fldiv@b+1,c
 41484  016120  0E00               	movlw	0
 41485  016122  6E15               	movwf	i2___fldiv@b+2,c
 41486  016124  0E00               	movlw	0
 41487  016126  6E16               	movwf	i2___fldiv@b+3,c
 41488  016128                     i2l2279:
 41489  016128  8E15               	bsf	i2___fldiv@b+2,7,c
 41490  01612A  D006               	goto	L19
 41491  01612C                     i2l2278:
 41492  01612C  0E00               	movlw	0
 41493  01612E  6E13               	movwf	i2___fldiv@b,c
 41494  016130  0E00               	movlw	0
 41495  016132  6E14               	movwf	i2___fldiv@b+1,c
 41496  016134  0E00               	movlw	0
 41497  016136  6E15               	movwf	i2___fldiv@b+2,c
 41498  016138                     L19:
 41499  016138  0E00               	movlw	0
 41500  01613A  6E16               	movwf	i2___fldiv@b+3,c
 41501  01613C  501A               	movf	i2___fldiv@a+3,w,c
 41502  01613E  0B80               	andlw	128
 41503  016140  1A1F               	xorwf	i2___fldiv@sign,f,c
 41504  016142  501A               	movf	i2___fldiv@a+3,w,c
 41505  016144  241A               	addwf	i2___fldiv@a+3,w,c
 41506  016146  6E2B               	movwf	i2___fldiv@aexp,c
 41507  016148  BE19               	btfsc	i2___fldiv@a+2,7,c
 41508  01614A  802B               	bsf	i2___fldiv@aexp,0,c
 41509  01614C  502B               	movf	i2___fldiv@aexp,w,c
 41510  01614E  B4D8               	btfsc	status,2,c
 41511  016150  D00D               	goto	i2l2282
 41512  016152  282B               	incf	i2___fldiv@aexp,w,c
 41513  016154  A4D8               	btfss	status,2,c
 41514  016156  D008               	goto	i2l2283
 41515  016158  0E00               	movlw	0
 41516  01615A  6E17               	movwf	i2___fldiv@a,c
 41517  01615C  0E00               	movlw	0
 41518  01615E  6E18               	movwf	i2___fldiv@a+1,c
 41519  016160  0E00               	movlw	0
 41520  016162  6E19               	movwf	i2___fldiv@a+2,c
 41521  016164  0E00               	movlw	0
 41522  016166  6E1A               	movwf	i2___fldiv@a+3,c
 41523  016168                     i2l2283:
 41524  016168  8E19               	bsf	i2___fldiv@a+2,7,c
 41525  01616A  D006               	goto	L20
 41526  01616C                     i2l2282:
 41527  01616C  0E00               	movlw	0
 41528  01616E  6E17               	movwf	i2___fldiv@a,c
 41529  016170  0E00               	movlw	0
 41530  016172  6E18               	movwf	i2___fldiv@a+1,c
 41531  016174  0E00               	movlw	0
 41532  016176  6E19               	movwf	i2___fldiv@a+2,c
 41533  016178                     L20:
 41534  016178  0E00               	movlw	0
 41535  01617A  6E1A               	movwf	i2___fldiv@a+3,c
 41536  01617C  5017               	movf	i2___fldiv@a,w,c
 41537  01617E  1018               	iorwf	i2___fldiv@a+1,w,c
 41538  016180  1019               	iorwf	i2___fldiv@a+2,w,c
 41539  016182  101A               	iorwf	i2___fldiv@a+3,w,c
 41540  016184  A4D8               	btfss	status,2,c
 41541  016186  D015               	goto	i2l2285
 41542  016188  0E00               	movlw	0
 41543  01618A  6E13               	movwf	i2___fldiv@b,c
 41544  01618C  0E00               	movlw	0
 41545  01618E  6E14               	movwf	i2___fldiv@b+1,c
 41546  016190  0E00               	movlw	0
 41547  016192  6E15               	movwf	i2___fldiv@b+2,c
 41548  016194  0E00               	movlw	0
 41549  016196  6E16               	movwf	i2___fldiv@b+3,c
 41550  016198  0E80               	movlw	128
 41551  01619A  1215               	iorwf	i2___fldiv@b+2,f,c
 41552  01619C  0E7F               	movlw	127
 41553  01619E  1216               	iorwf	i2___fldiv@b+3,f,c
 41554  0161A0  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 41555  0161A4  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 41556  0161A8  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 41557  0161AC  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 41558  0161B0  0012               	return	
 41559  0161B2                     i2l2285:
 41560  0161B2  502A               	movf	i2___fldiv@bexp,w,c
 41561  0161B4  A4D8               	btfss	status,2,c
 41562  0161B6  D011               	goto	i2l2287
 41563  0161B8  0E00               	movlw	0
 41564  0161BA  6E13               	movwf	i2___fldiv@b,c
 41565  0161BC  0E00               	movlw	0
 41566  0161BE  6E14               	movwf	i2___fldiv@b+1,c
 41567  0161C0  0E00               	movlw	0
 41568  0161C2  6E15               	movwf	i2___fldiv@b+2,c
 41569  0161C4  0E00               	movlw	0
 41570  0161C6  6E16               	movwf	i2___fldiv@b+3,c
 41571  0161C8  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 41572  0161CC  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 41573  0161D0  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 41574  0161D4  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 41575  0161D8  0012               	return	
 41576  0161DA                     i2l2287:
 41577  0161DA  502B               	movf	i2___fldiv@aexp,w,c
 41578  0161DC  6E1B               	movwf	??i2___fldiv& (0+255),c
 41579  0161DE  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 41580  0161E0  1E1B               	comf	??i2___fldiv,f,c
 41581  0161E2  1E1C               	comf	??i2___fldiv+1,f,c
 41582  0161E4  4A1B               	infsnz	??i2___fldiv,f,c
 41583  0161E6  2A1C               	incf	??i2___fldiv+1,f,c
 41584  0161E8  502A               	movf	i2___fldiv@bexp,w,c
 41585  0161EA  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 41586  0161EC  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 41587  0161EE  501B               	movf	??i2___fldiv,w,c
 41588  0161F0  261D               	addwf	??i2___fldiv+2,f,c
 41589  0161F2  501C               	movf	??i2___fldiv+1,w,c
 41590  0161F4  221E               	addwfc	??i2___fldiv+3,f,c
 41591  0161F6  0E7F               	movlw	127
 41592  0161F8  241D               	addwf	??i2___fldiv+2,w,c
 41593  0161FA  6E24               	movwf	i2___fldiv@new_exp,c
 41594  0161FC  0E00               	movlw	0
 41595  0161FE  201E               	addwfc	??i2___fldiv+3,w,c
 41596  016200  6E25               	movwf	i2___fldiv@new_exp+1,c
 41597  016202  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 41598  016206  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 41599  01620A  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 41600  01620E  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 41601  016212  0E00               	movlw	0
 41602  016214  6E13               	movwf	i2___fldiv@b,c
 41603  016216  0E00               	movlw	0
 41604  016218  6E14               	movwf	i2___fldiv@b+1,c
 41605  01621A  0E00               	movlw	0
 41606  01621C  6E15               	movwf	i2___fldiv@b+2,c
 41607  01621E  0E00               	movlw	0
 41608  016220  6E16               	movwf	i2___fldiv@b+3,c
 41609  016222  0E00               	movlw	0
 41610  016224  6E26               	movwf	i2___fldiv@grs,c
 41611  016226  0E00               	movlw	0
 41612  016228  6E27               	movwf	i2___fldiv@grs+1,c
 41613  01622A  0E00               	movlw	0
 41614  01622C  6E28               	movwf	i2___fldiv@grs+2,c
 41615  01622E  0E00               	movlw	0
 41616  016230  6E29               	movwf	i2___fldiv@grs+3,c
 41617  016232  0E00               	movlw	0
 41618  016234  6E2B               	movwf	i2___fldiv@aexp,c
 41619  016236  D028               	goto	i2l2288
 41620  016238  502B               	movf	i2___fldiv@aexp,w,c
 41621  01623A  B4D8               	btfsc	status,2,c
 41622  01623C  D011               	goto	i2l2290
 41623  01623E  90D8               	bcf	status,0,c
 41624  016240  3620               	rlcf	i2___fldiv@rem,f,c
 41625  016242  3621               	rlcf	i2___fldiv@rem+1,f,c
 41626  016244  3622               	rlcf	i2___fldiv@rem+2,f,c
 41627  016246  3623               	rlcf	i2___fldiv@rem+3,f,c
 41628  016248  90D8               	bcf	status,0,c
 41629  01624A  3613               	rlcf	i2___fldiv@b,f,c
 41630  01624C  3614               	rlcf	i2___fldiv@b+1,f,c
 41631  01624E  3615               	rlcf	i2___fldiv@b+2,f,c
 41632  016250  3616               	rlcf	i2___fldiv@b+3,f,c
 41633  016252  BE29               	btfsc	i2___fldiv@grs+3,7,c
 41634  016254  8013               	bsf	i2___fldiv@b,0,c
 41635  016256  90D8               	bcf	status,0,c
 41636  016258  3626               	rlcf	i2___fldiv@grs,f,c
 41637  01625A  3627               	rlcf	i2___fldiv@grs+1,f,c
 41638  01625C  3628               	rlcf	i2___fldiv@grs+2,f,c
 41639  01625E  3629               	rlcf	i2___fldiv@grs+3,f,c
 41640  016260                     i2l2290:
 41641  016260  5017               	movf	i2___fldiv@a,w,c
 41642  016262  5C20               	subwf	i2___fldiv@rem,w,c
 41643  016264  5018               	movf	i2___fldiv@a+1,w,c
 41644  016266  5821               	subwfb	i2___fldiv@rem+1,w,c
 41645  016268  5019               	movf	i2___fldiv@a+2,w,c
 41646  01626A  5822               	subwfb	i2___fldiv@rem+2,w,c
 41647  01626C  501A               	movf	i2___fldiv@a+3,w,c
 41648  01626E  5823               	subwfb	i2___fldiv@rem+3,w,c
 41649  016270  A0D8               	btfss	status,0,c
 41650  016272  D009               	goto	i2l2292
 41651  016274  8C29               	bsf	i2___fldiv@grs+3,6,c
 41652  016276  5017               	movf	i2___fldiv@a,w,c
 41653  016278  5E20               	subwf	i2___fldiv@rem,f,c
 41654  01627A  5018               	movf	i2___fldiv@a+1,w,c
 41655  01627C  5A21               	subwfb	i2___fldiv@rem+1,f,c
 41656  01627E  5019               	movf	i2___fldiv@a+2,w,c
 41657  016280  5A22               	subwfb	i2___fldiv@rem+2,f,c
 41658  016282  501A               	movf	i2___fldiv@a+3,w,c
 41659  016284  5A23               	subwfb	i2___fldiv@rem+3,f,c
 41660  016286                     i2l2292:
 41661  016286  2A2B               	incf	i2___fldiv@aexp,f,c
 41662  016288                     i2l2288:
 41663  016288  0E19               	movlw	25
 41664  01628A  642B               	cpfsgt	i2___fldiv@aexp,c
 41665  01628C  D7D5               	goto	i2l2289
 41666  01628E  5020               	movf	i2___fldiv@rem,w,c
 41667  016290  1021               	iorwf	i2___fldiv@rem+1,w,c
 41668  016292  1022               	iorwf	i2___fldiv@rem+2,w,c
 41669  016294  1023               	iorwf	i2___fldiv@rem+3,w,c
 41670  016296  B4D8               	btfsc	status,2,c
 41671  016298  D011               	goto	i2l2295
 41672  01629A  8026               	bsf	i2___fldiv@grs,0,c
 41673  01629C  D00F               	goto	i2l2295
 41674  01629E  90D8               	bcf	status,0,c
 41675  0162A0  3613               	rlcf	i2___fldiv@b,f,c
 41676  0162A2  3614               	rlcf	i2___fldiv@b+1,f,c
 41677  0162A4  3615               	rlcf	i2___fldiv@b+2,f,c
 41678  0162A6  3616               	rlcf	i2___fldiv@b+3,f,c
 41679  0162A8  BE29               	btfsc	i2___fldiv@grs+3,7,c
 41680  0162AA  8013               	bsf	i2___fldiv@b,0,c
 41681  0162AC  90D8               	bcf	status,0,c
 41682  0162AE  3626               	rlcf	i2___fldiv@grs,f,c
 41683  0162B0  3627               	rlcf	i2___fldiv@grs+1,f,c
 41684  0162B2  3628               	rlcf	i2___fldiv@grs+2,f,c
 41685  0162B4  3629               	rlcf	i2___fldiv@grs+3,f,c
 41686  0162B6  0624               	decf	i2___fldiv@new_exp,f,c
 41687  0162B8  A0D8               	btfss	status,0,c
 41688  0162BA  0625               	decf	i2___fldiv@new_exp+1,f,c
 41689  0162BC                     i2l2295:
 41690  0162BC  AE15               	btfss	i2___fldiv@b+2,7,c
 41691  0162BE  D7EF               	goto	i2l2296
 41692  0162C0  0E00               	movlw	0
 41693  0162C2  6E2B               	movwf	i2___fldiv@aexp,c
 41694  0162C4  AE29               	btfss	i2___fldiv@grs+3,7,c
 41695  0162C6  D016               	goto	i2l2302
 41696  0162C8  0EFF               	movlw	255
 41697  0162CA  1426               	andwf	i2___fldiv@grs,w,c
 41698  0162CC  6E1B               	movwf	??i2___fldiv& (0+255),c
 41699  0162CE  0EFF               	movlw	255
 41700  0162D0  1427               	andwf	i2___fldiv@grs+1,w,c
 41701  0162D2  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 41702  0162D4  0EFF               	movlw	255
 41703  0162D6  1428               	andwf	i2___fldiv@grs+2,w,c
 41704  0162D8  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 41705  0162DA  0E7F               	movlw	127
 41706  0162DC  1429               	andwf	i2___fldiv@grs+3,w,c
 41707  0162DE  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 41708  0162E0  501B               	movf	??i2___fldiv,w,c
 41709  0162E2  101C               	iorwf	??i2___fldiv+1,w,c
 41710  0162E4  101D               	iorwf	??i2___fldiv+2,w,c
 41711  0162E6  101E               	iorwf	??i2___fldiv+3,w,c
 41712  0162E8  A4D8               	btfss	status,2,c
 41713  0162EA  D002               	goto	i2u1486_40
 41714  0162EC  A013               	btfss	i2___fldiv@b,0,c
 41715  0162EE  D002               	goto	i2l2302
 41716  0162F0                     i2u1486_40:
 41717  0162F0  0E01               	movlw	1
 41718  0162F2  6E2B               	movwf	i2___fldiv@aexp,c
 41719  0162F4                     i2l2302:
 41720  0162F4  502B               	movf	i2___fldiv@aexp,w,c
 41721  0162F6  B4D8               	btfsc	status,2,c
 41722  0162F8  D01F               	goto	i2l2304
 41723  0162FA  0E01               	movlw	1
 41724  0162FC  2613               	addwf	i2___fldiv@b,f,c
 41725  0162FE  0E00               	movlw	0
 41726  016300  2214               	addwfc	i2___fldiv@b+1,f,c
 41727  016302  2215               	addwfc	i2___fldiv@b+2,f,c
 41728  016304  2216               	addwfc	i2___fldiv@b+3,f,c
 41729  016306  A016               	btfss	i2___fldiv@b+3,0,c
 41730  016308  D017               	goto	i2l2304
 41731  01630A  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 41732  01630E  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 41733  016312  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 41734  016316  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 41735  01631A  341E               	rlcf	??i2___fldiv+3,w,c
 41736  01631C  321E               	rrcf	??i2___fldiv+3,f,c
 41737  01631E  321D               	rrcf	??i2___fldiv+2,f,c
 41738  016320  321C               	rrcf	??i2___fldiv+1,f,c
 41739  016322  321B               	rrcf	??i2___fldiv,f,c
 41740  016324  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 41741  016328  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 41742  01632C  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 41743  016330  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 41744  016334  4A24               	infsnz	i2___fldiv@new_exp,f,c
 41745  016336  2A25               	incf	i2___fldiv@new_exp+1,f,c
 41746  016338                     i2l2304:
 41747  016338  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 41748  01633A  D010               	goto	i2l2305
 41749  01633C  5025               	movf	i2___fldiv@new_exp+1,w,c
 41750  01633E  E103               	bnz	i2u1489_40
 41751  016340  2824               	incf	i2___fldiv@new_exp,w,c
 41752  016342  A0D8               	btfss	status,0,c
 41753  016344  D00B               	goto	i2l2305
 41754  016346                     i2u1489_40:
 41755  016346  0E00               	movlw	0
 41756  016348  6E25               	movwf	i2___fldiv@new_exp+1,c
 41757  01634A  6824               	setf	i2___fldiv@new_exp,c
 41758  01634C  0E00               	movlw	0
 41759  01634E  6E13               	movwf	i2___fldiv@b,c
 41760  016350  0E00               	movlw	0
 41761  016352  6E14               	movwf	i2___fldiv@b+1,c
 41762  016354  0E00               	movlw	0
 41763  016356  6E15               	movwf	i2___fldiv@b+2,c
 41764  016358  0E00               	movlw	0
 41765  01635A  6E16               	movwf	i2___fldiv@b+3,c
 41766  01635C                     i2l2305:
 41767  01635C  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 41768  01635E  D005               	goto	i2u1490_40
 41769  016360  5025               	movf	i2___fldiv@new_exp+1,w,c
 41770  016362  E111               	bnz	i2l12414
 41771  016364  0424               	decf	i2___fldiv@new_exp,w,c
 41772  016366  B0D8               	btfsc	status,0,c
 41773  016368  D00E               	goto	i2l2306
 41774  01636A                     i2u1490_40:
 41775  01636A  0E00               	movlw	0
 41776  01636C  6E25               	movwf	i2___fldiv@new_exp+1,c
 41777  01636E  0E00               	movlw	0
 41778  016370  6E24               	movwf	i2___fldiv@new_exp,c
 41779  016372  0E00               	movlw	0
 41780  016374  6E13               	movwf	i2___fldiv@b,c
 41781  016376  0E00               	movlw	0
 41782  016378  6E14               	movwf	i2___fldiv@b+1,c
 41783  01637A  0E00               	movlw	0
 41784  01637C  6E15               	movwf	i2___fldiv@b+2,c
 41785  01637E  0E00               	movlw	0
 41786  016380  6E16               	movwf	i2___fldiv@b+3,c
 41787  016382  0E00               	movlw	0
 41788  016384  6E1F               	movwf	i2___fldiv@sign,c
 41789  016386                     i2l2306:
 41790  016386                     i2l12414:
 41791  016386  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 41792  01638A  A02A               	btfss	i2___fldiv@bexp,0,c
 41793  01638C  D002               	goto	i2l2307
 41794  01638E  8E15               	bsf	i2___fldiv@b+2,7,c
 41795  016390  D001               	goto	i2l2308
 41796  016392                     i2l2307:
 41797  016392  9E15               	bcf	i2___fldiv@b+2,7,c
 41798  016394                     i2l2308:
 41799  016394  90D8               	bcf	status,0,c
 41800  016396  302A               	rrcf	i2___fldiv@bexp,w,c
 41801  016398  6E16               	movwf	i2___fldiv@b+3,c
 41802  01639A  501F               	movf	i2___fldiv@sign,w,c
 41803  01639C  1216               	iorwf	i2___fldiv@b+3,f,c
 41804  01639E  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 41805  0163A2  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 41806  0163A6  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 41807  0163AA  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 41808  0163AE  0012               	return	
 41809  0163B0                     __end_ofi2___fldiv:
 41810                           	opt stack 0
 41811                           tosu	equ	0xFFF
 41812                           tosh	equ	0xFFE
 41813                           tosl	equ	0xFFD
 41814                           pclatu	equ	0xFFB
 41815                           pclath	equ	0xFFA
 41816                           tblptru	equ	0xFF8
 41817                           tblptrh	equ	0xFF7
 41818                           tblptrl	equ	0xFF6
 41819                           tablat	equ	0xFF5
 41820                           prodh	equ	0xFF4
 41821                           prodl	equ	0xFF3
 41822                           intcon	equ	0xFF2
 41823                           indf0	equ	0xFEF
 41824                           postinc0	equ	0xFEE
 41825                           fsr0h	equ	0xFEA
 41826                           fsr0l	equ	0xFE9
 41827                           wreg	equ	0xFE8
 41828                           indf1	equ	0xFE7
 41829                           postdec1	equ	0xFE5
 41830                           plusw1	equ	0xFE3
 41831                           fsr1h	equ	0xFE2
 41832                           fsr1l	equ	0xFE1
 41833                           bsr	equ	0xFE0
 41834                           indf2	equ	0xFDF
 41835                           postinc2	equ	0xFDE
 41836                           postdec2	equ	0xFDD
 41837                           plusw2	equ	0xFDB
 41838                           fsr2h	equ	0xFDA
 41839                           fsr2l	equ	0xFD9
 41840                           status	equ	0xFD8
 41841                           
 41842 ;; *************** function _floor *****************
 41843 ;; Defined at:
 41844 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 41845 ;; Parameters:    Size  Location     Type
 41846 ;;  x               4   22[BANK0 ] unsigned char 
 41847 ;; Auto vars:     Size  Location     Type
 41848 ;;  i               4   26[BANK0 ] unsigned char 
 41849 ;;  expon           2   30[BANK0 ] int 
 41850 ;; Return value:  Size  Location     Type
 41851 ;;                  4   22[BANK0 ] int 
 41852 ;; Registers used:
 41853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41854 ;; Tracked objects:
 41855 ;;		On entry : 0/0
 41856 ;;		On exit  : 0/0
 41857 ;;		Unchanged: 0/0
 41858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41859 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41860 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41862 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41863 ;;Total ram usage:       10 bytes
 41864 ;; Hardware stack levels used:    1
 41865 ;; Hardware stack levels required when called:    1
 41866 ;; This function calls:
 41867 ;;		_frexp
 41868 ;;		i2___fladd
 41869 ;;		i2___flge
 41870 ;;		i2___fltol
 41871 ;;		i2___xxtofl
 41872 ;; This function is called by:
 41873 ;;		_sin
 41874 ;; This function uses a non-reentrant model
 41875 ;;
 41876                           
 41877                           	psect	text129
 41878  017806                     __ptext129:
 41879                           	opt stack 0
 41880  017806                     _floor:
 41881                           	opt stack 13
 41882                           
 41883                           ;incstack = 0
 41884  017806  C076  F001         	movff	floor@x,frexp@value
 41885  01780A  C077  F002         	movff	floor@x+1,frexp@value+1
 41886  01780E  C078  F003         	movff	floor@x+2,frexp@value+2
 41887  017812  C079  F004         	movff	floor@x+3,frexp@value+3
 41888  017816  0E7E               	movlw	low floor@expon
 41889  017818  6E05               	movwf	frexp@eptr,c
 41890  01781A  0E00               	movlw	high floor@expon
 41891  01781C  6E06               	movwf	frexp@eptr+1,c
 41892  01781E  EC6F  F0C2         	call	_frexp	;wreg free
 41893  017822  0100               	movlb	0	; () banked
 41894  017824  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 41895  017826  D014               	goto	i2l2435
 41896                           
 41897                           ; BSR set to: 0
 41898  017828  AF79               	btfss	(floor@x+3)& (0+255),7,b
 41899  01782A  D009               	goto	i2l2436
 41900                           
 41901                           ; BSR set to: 0
 41902  01782C  0E00               	movlw	0
 41903  01782E  6F76               	movwf	?_floor& (0+255),b
 41904  017830  0E00               	movlw	0
 41905  017832  6F77               	movwf	(?_floor+1)& (0+255),b
 41906  017834  0E80               	movlw	128
 41907  017836  6F78               	movwf	(?_floor+2)& (0+255),b
 41908  017838  0EBF               	movlw	191
 41909  01783A  6F79               	movwf	(?_floor+3)& (0+255),b
 41910                           
 41911                           ; BSR set to: 0
 41912  01783C  0012               	return	
 41913  01783E                     i2l2436:
 41914                           
 41915                           ; BSR set to: 0
 41916                           
 41917                           ; BSR set to: 0
 41918  01783E  0E00               	movlw	0
 41919  017840  6F76               	movwf	?_floor& (0+255),b
 41920  017842  0E00               	movlw	0
 41921  017844  6F77               	movwf	(?_floor+1)& (0+255),b
 41922  017846  0E00               	movlw	0
 41923  017848  6F78               	movwf	(?_floor+2)& (0+255),b
 41924  01784A  0E00               	movlw	0
 41925  01784C  6F79               	movwf	(?_floor+3)& (0+255),b
 41926                           
 41927                           ; BSR set to: 0
 41928  01784E  0012               	return	
 41929  017850                     i2l2435:
 41930                           
 41931                           ; BSR set to: 0
 41932                           
 41933                           ; BSR set to: 0
 41934  017850  517F               	movf	(floor@expon+1)& (0+255),w,b
 41935  017852  E104               	bnz	i2u1670_40
 41936  017854  0E1D               	movlw	29
 41937  017856  5D7E               	subwf	floor@expon& (0+255),w,b
 41938  017858  A0D8               	btfss	status,0,c
 41939  01785A  D009               	goto	i2l2438
 41940  01785C                     i2u1670_40:
 41941                           
 41942                           ; BSR set to: 0
 41943  01785C  C076  F076         	movff	floor@x,?_floor
 41944  017860  C077  F077         	movff	floor@x+1,?_floor+1
 41945  017864  C078  F078         	movff	floor@x+2,?_floor+2
 41946  017868  C079  F079         	movff	floor@x+3,?_floor+3
 41947  01786C  0012               	return	
 41948  01786E                     i2l2438:
 41949                           
 41950                           ; BSR set to: 0
 41951                           
 41952                           ; BSR set to: 0
 41953  01786E  C076  F06C         	movff	floor@x,i2___fltol@f1
 41954  017872  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 41955  017876  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 41956  01787A  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 41957  01787E  EC00  F0BE         	call	i2___fltol	;wreg free
 41958  017882  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 41959  017886  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 41960  01788A  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 41961  01788E  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 41962  017892  0E01               	movlw	1
 41963  017894  EC4C  F0B7         	call	i2___xxtofl
 41964  017898  C005  F07A         	movff	?i2___xxtofl,floor@i
 41965  01789C  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 41966  0178A0  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 41967  0178A4  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 41968  0178A8  C076  F034         	movff	floor@x,i2___flge@ff1
 41969  0178AC  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 41970  0178B0  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 41971  0178B4  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 41972  0178B8  C07A  F038         	movff	floor@i,i2___flge@ff2
 41973  0178BC  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 41974  0178C0  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 41975  0178C4  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 41976  0178C8  EC73  F0BB         	call	i2___flge	;wreg free
 41977  0178CC  B0D8               	btfsc	status,0,c
 41978  0178CE  D01B               	goto	i2l2439
 41979  0178D0  C07A  F056         	movff	floor@i,i2___fladd@b
 41980  0178D4  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 41981  0178D8  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 41982  0178DC  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 41983  0178E0  0E00               	movlw	0
 41984  0178E2  6E5A               	movwf	i2___fladd@a,c
 41985  0178E4  0E00               	movlw	0
 41986  0178E6  6E5B               	movwf	i2___fladd@a+1,c
 41987  0178E8  0E80               	movlw	128
 41988  0178EA  6E5C               	movwf	i2___fladd@a+2,c
 41989  0178EC  0EBF               	movlw	191
 41990  0178EE  6E5D               	movwf	i2___fladd@a+3,c
 41991  0178F0  ECBE  F0A7         	call	i2___fladd	;wreg free
 41992  0178F4  C056  F076         	movff	?i2___fladd,?_floor
 41993  0178F8  C057  F077         	movff	?i2___fladd+1,?_floor+1
 41994  0178FC  C058  F078         	movff	?i2___fladd+2,?_floor+2
 41995  017900  C059  F079         	movff	?i2___fladd+3,?_floor+3
 41996  017904  0012               	return	
 41997  017906                     i2l2439:
 41998  017906  C07A  F076         	movff	floor@i,?_floor
 41999  01790A  C07B  F077         	movff	floor@i+1,?_floor+1
 42000  01790E  C07C  F078         	movff	floor@i+2,?_floor+2
 42001  017912  C07D  F079         	movff	floor@i+3,?_floor+3
 42002  017916  0012               	return		;funcret
 42003  017918                     __end_of_floor:
 42004                           	opt stack 0
 42005                           tosu	equ	0xFFF
 42006                           tosh	equ	0xFFE
 42007                           tosl	equ	0xFFD
 42008                           pclatu	equ	0xFFB
 42009                           pclath	equ	0xFFA
 42010                           tblptru	equ	0xFF8
 42011                           tblptrh	equ	0xFF7
 42012                           tblptrl	equ	0xFF6
 42013                           tablat	equ	0xFF5
 42014                           prodh	equ	0xFF4
 42015                           prodl	equ	0xFF3
 42016                           intcon	equ	0xFF2
 42017                           indf0	equ	0xFEF
 42018                           postinc0	equ	0xFEE
 42019                           fsr0h	equ	0xFEA
 42020                           fsr0l	equ	0xFE9
 42021                           wreg	equ	0xFE8
 42022                           indf1	equ	0xFE7
 42023                           postdec1	equ	0xFE5
 42024                           plusw1	equ	0xFE3
 42025                           fsr1h	equ	0xFE2
 42026                           fsr1l	equ	0xFE1
 42027                           bsr	equ	0xFE0
 42028                           indf2	equ	0xFDF
 42029                           postinc2	equ	0xFDE
 42030                           postdec2	equ	0xFDD
 42031                           plusw2	equ	0xFDB
 42032                           fsr2h	equ	0xFDA
 42033                           fsr2l	equ	0xFD9
 42034                           status	equ	0xFD8
 42035                           
 42036 ;; *************** function i2___xxtofl *****************
 42037 ;; Defined at:
 42038 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 42039 ;; Parameters:    Size  Location     Type
 42040 ;;  sign            1    wreg     unsigned char 
 42041 ;;  val             4    4[COMRAM] long 
 42042 ;; Auto vars:     Size  Location     Type
 42043 ;;  sign            1   12[COMRAM] unsigned char 
 42044 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 42045 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 42046 ;; Return value:  Size  Location     Type
 42047 ;;                  4    4[COMRAM] unsigned char 
 42048 ;; Registers used:
 42049 ;;		wreg, status,2, status,0
 42050 ;; Tracked objects:
 42051 ;;		On entry : 0/0
 42052 ;;		On exit  : 0/0
 42053 ;;		Unchanged: 0/0
 42054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42056 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42057 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42058 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42059 ;;Total ram usage:       14 bytes
 42060 ;; Hardware stack levels used:    1
 42061 ;; This function calls:
 42062 ;;		Nothing
 42063 ;; This function is called by:
 42064 ;;		_ADCPostProcessingCallback
 42065 ;;		_floor
 42066 ;;		i2_printf
 42067 ;; This function uses a non-reentrant model
 42068 ;;
 42069                           
 42070                           	psect	text130
 42071  016E98                     __ptext130:
 42072                           	opt stack 0
 42073  016E98                     i2___xxtofl:
 42074                           	opt stack 16
 42075                           
 42076                           ;incstack = 0
 42077                           ;i2___xxtofl@sign stored from wreg
 42078  016E98  6E0D               	movwf	i2___xxtofl@sign,c
 42079  016E9A  500D               	movf	i2___xxtofl@sign,w,c
 42080  016E9C  A4D8               	btfss	status,2,c
 42081  016E9E  AE08               	btfss	i2___xxtofl@val+3,7,c
 42082  016EA0  D01A               	goto	i2l2414
 42083  016EA2  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 42084  016EA6  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 42085  016EAA  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 42086  016EAE  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 42087  016EB2  1E09               	comf	??i2___xxtofl,f,c
 42088  016EB4  1E0A               	comf	??i2___xxtofl+1,f,c
 42089  016EB6  1E0B               	comf	??i2___xxtofl+2,f,c
 42090  016EB8  1E0C               	comf	??i2___xxtofl+3,f,c
 42091  016EBA  2A09               	incf	??i2___xxtofl,f,c
 42092  016EBC  0E00               	movlw	0
 42093  016EBE  220A               	addwfc	??i2___xxtofl+1,f,c
 42094  016EC0  220B               	addwfc	??i2___xxtofl+2,f,c
 42095  016EC2  220C               	addwfc	??i2___xxtofl+3,f,c
 42096  016EC4  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 42097  016EC8  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 42098  016ECC  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 42099  016ED0  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 42100  016ED4  D008               	goto	i2l2415
 42101  016ED6                     i2l2414:
 42102  016ED6  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 42103  016EDA  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 42104  016EDE  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 42105  016EE2  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 42106  016EE6                     i2l2415:
 42107  016EE6  5005               	movf	i2___xxtofl@val,w,c
 42108  016EE8  1006               	iorwf	i2___xxtofl@val+1,w,c
 42109  016EEA  1007               	iorwf	i2___xxtofl@val+2,w,c
 42110  016EEC  1008               	iorwf	i2___xxtofl@val+3,w,c
 42111  016EEE  A4D8               	btfss	status,2,c
 42112  016EF0  D009               	goto	i2l2416
 42113  016EF2  0E00               	movlw	0
 42114  016EF4  6E05               	movwf	?i2___xxtofl,c
 42115  016EF6  0E00               	movlw	0
 42116  016EF8  6E06               	movwf	?i2___xxtofl+1,c
 42117  016EFA  0E00               	movlw	0
 42118  016EFC  6E07               	movwf	?i2___xxtofl+2,c
 42119  016EFE  0E00               	movlw	0
 42120  016F00  6E08               	movwf	?i2___xxtofl+3,c
 42121  016F02  0012               	return	
 42122  016F04                     i2l2416:
 42123  016F04  0E96               	movlw	150
 42124  016F06  6E0E               	movwf	i2___xxtofl@exp,c
 42125  016F08  D006               	goto	i2l2418
 42126  016F0A  2A0E               	incf	i2___xxtofl@exp,f,c
 42127  016F0C  90D8               	bcf	status,0,c
 42128  016F0E  3212               	rrcf	i2___xxtofl@arg+3,f,c
 42129  016F10  3211               	rrcf	i2___xxtofl@arg+2,f,c
 42130  016F12  3210               	rrcf	i2___xxtofl@arg+1,f,c
 42131  016F14  320F               	rrcf	i2___xxtofl@arg,f,c
 42132  016F16                     i2l2418:
 42133  016F16  0E00               	movlw	0
 42134  016F18  140F               	andwf	i2___xxtofl@arg,w,c
 42135  016F1A  6E09               	movwf	??i2___xxtofl& (0+255),c
 42136  016F1C  0E00               	movlw	0
 42137  016F1E  1410               	andwf	i2___xxtofl@arg+1,w,c
 42138  016F20  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 42139  016F22  0E00               	movlw	0
 42140  016F24  1411               	andwf	i2___xxtofl@arg+2,w,c
 42141  016F26  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 42142  016F28  0EFE               	movlw	254
 42143  016F2A  1412               	andwf	i2___xxtofl@arg+3,w,c
 42144  016F2C  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 42145  016F2E  5009               	movf	??i2___xxtofl,w,c
 42146  016F30  100A               	iorwf	??i2___xxtofl+1,w,c
 42147  016F32  100B               	iorwf	??i2___xxtofl+2,w,c
 42148  016F34  100C               	iorwf	??i2___xxtofl+3,w,c
 42149  016F36  B4D8               	btfsc	status,2,c
 42150  016F38  D00D               	goto	i2l2421
 42151  016F3A  D7E7               	goto	i2l2419
 42152  016F3C  2A0E               	incf	i2___xxtofl@exp,f,c
 42153  016F3E  0E01               	movlw	1
 42154  016F40  260F               	addwf	i2___xxtofl@arg,f,c
 42155  016F42  0E00               	movlw	0
 42156  016F44  2210               	addwfc	i2___xxtofl@arg+1,f,c
 42157  016F46  2211               	addwfc	i2___xxtofl@arg+2,f,c
 42158  016F48  2212               	addwfc	i2___xxtofl@arg+3,f,c
 42159  016F4A  90D8               	bcf	status,0,c
 42160  016F4C  3212               	rrcf	i2___xxtofl@arg+3,f,c
 42161  016F4E  3211               	rrcf	i2___xxtofl@arg+2,f,c
 42162  016F50  3210               	rrcf	i2___xxtofl@arg+1,f,c
 42163  016F52  320F               	rrcf	i2___xxtofl@arg,f,c
 42164  016F54                     i2l2421:
 42165  016F54  0E00               	movlw	0
 42166  016F56  140F               	andwf	i2___xxtofl@arg,w,c
 42167  016F58  6E09               	movwf	??i2___xxtofl& (0+255),c
 42168  016F5A  0E00               	movlw	0
 42169  016F5C  1410               	andwf	i2___xxtofl@arg+1,w,c
 42170  016F5E  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 42171  016F60  0E00               	movlw	0
 42172  016F62  1411               	andwf	i2___xxtofl@arg+2,w,c
 42173  016F64  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 42174  016F66  0EFF               	movlw	255
 42175  016F68  1412               	andwf	i2___xxtofl@arg+3,w,c
 42176  016F6A  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 42177  016F6C  5009               	movf	??i2___xxtofl,w,c
 42178  016F6E  100A               	iorwf	??i2___xxtofl+1,w,c
 42179  016F70  100B               	iorwf	??i2___xxtofl+2,w,c
 42180  016F72  100C               	iorwf	??i2___xxtofl+3,w,c
 42181  016F74  B4D8               	btfsc	status,2,c
 42182  016F76  D007               	goto	i2l2424
 42183  016F78  D7E1               	goto	i2l2422
 42184  016F7A  060E               	decf	i2___xxtofl@exp,f,c
 42185  016F7C  90D8               	bcf	status,0,c
 42186  016F7E  360F               	rlcf	i2___xxtofl@arg,f,c
 42187  016F80  3610               	rlcf	i2___xxtofl@arg+1,f,c
 42188  016F82  3611               	rlcf	i2___xxtofl@arg+2,f,c
 42189  016F84  3612               	rlcf	i2___xxtofl@arg+3,f,c
 42190  016F86                     i2l2424:
 42191  016F86  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 42192  016F88  D003               	goto	i2u1578_40
 42193  016F8A  0E02               	movlw	2
 42194  016F8C  600E               	cpfslt	i2___xxtofl@exp,c
 42195  016F8E  D7F5               	goto	i2l2425
 42196  016F90                     i2u1578_40:
 42197  016F90  B00E               	btfsc	i2___xxtofl@exp,0,c
 42198  016F92  D008               	goto	i2l2429
 42199  016F94  0EFF               	movlw	255
 42200  016F96  160F               	andwf	i2___xxtofl@arg,f,c
 42201  016F98  0EFF               	movlw	255
 42202  016F9A  1610               	andwf	i2___xxtofl@arg+1,f,c
 42203  016F9C  0E7F               	movlw	127
 42204  016F9E  1611               	andwf	i2___xxtofl@arg+2,f,c
 42205  016FA0  0EFF               	movlw	255
 42206  016FA2  1612               	andwf	i2___xxtofl@arg+3,f,c
 42207  016FA4                     i2l2429:
 42208  016FA4  90D8               	bcf	status,0,c
 42209  016FA6  320E               	rrcf	i2___xxtofl@exp,f,c
 42210  016FA8  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 42211  016FAC  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 42212  016FAE  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 42213  016FB0  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 42214  016FB2  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 42215  016FB6  6A0B               	clrf	??i2___xxtofl+2,c
 42216  016FB8  6A0A               	clrf	??i2___xxtofl+1,c
 42217  016FBA  6A09               	clrf	??i2___xxtofl,c
 42218  016FBC  5009               	movf	??i2___xxtofl,w,c
 42219  016FBE  120F               	iorwf	i2___xxtofl@arg,f,c
 42220  016FC0  500A               	movf	??i2___xxtofl+1,w,c
 42221  016FC2  1210               	iorwf	i2___xxtofl@arg+1,f,c
 42222  016FC4  500B               	movf	??i2___xxtofl+2,w,c
 42223  016FC6  1211               	iorwf	i2___xxtofl@arg+2,f,c
 42224  016FC8  500C               	movf	??i2___xxtofl+3,w,c
 42225  016FCA  1212               	iorwf	i2___xxtofl@arg+3,f,c
 42226  016FCC  500D               	movf	i2___xxtofl@sign,w,c
 42227  016FCE  A4D8               	btfss	status,2,c
 42228  016FD0  AE08               	btfss	i2___xxtofl@val+3,7,c
 42229  016FD2  D001               	goto	i2l2430
 42230  016FD4  8E12               	bsf	i2___xxtofl@arg+3,7,c
 42231  016FD6                     i2l2430:
 42232  016FD6  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 42233  016FDA  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 42234  016FDE  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 42235  016FE2  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 42236  016FE6  0012               	return	
 42237  016FE8                     __end_ofi2___xxtofl:
 42238                           	opt stack 0
 42239                           tosu	equ	0xFFF
 42240                           tosh	equ	0xFFE
 42241                           tosl	equ	0xFFD
 42242                           pclatu	equ	0xFFB
 42243                           pclath	equ	0xFFA
 42244                           tblptru	equ	0xFF8
 42245                           tblptrh	equ	0xFF7
 42246                           tblptrl	equ	0xFF6
 42247                           tablat	equ	0xFF5
 42248                           prodh	equ	0xFF4
 42249                           prodl	equ	0xFF3
 42250                           intcon	equ	0xFF2
 42251                           indf0	equ	0xFEF
 42252                           postinc0	equ	0xFEE
 42253                           fsr0h	equ	0xFEA
 42254                           fsr0l	equ	0xFE9
 42255                           wreg	equ	0xFE8
 42256                           indf1	equ	0xFE7
 42257                           postdec1	equ	0xFE5
 42258                           plusw1	equ	0xFE3
 42259                           fsr1h	equ	0xFE2
 42260                           fsr1l	equ	0xFE1
 42261                           bsr	equ	0xFE0
 42262                           indf2	equ	0xFDF
 42263                           postinc2	equ	0xFDE
 42264                           postdec2	equ	0xFDD
 42265                           plusw2	equ	0xFDB
 42266                           fsr2h	equ	0xFDA
 42267                           fsr2l	equ	0xFD9
 42268                           status	equ	0xFD8
 42269                           
 42270 ;; *************** function i2___fltol *****************
 42271 ;; Defined at:
 42272 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 42273 ;; Parameters:    Size  Location     Type
 42274 ;;  f1              4   12[BANK0 ] unsigned char 
 42275 ;; Auto vars:     Size  Location     Type
 42276 ;;  __fltol         1   21[BANK0 ] unsigned char 
 42277 ;;  __fltol         1   20[BANK0 ] unsigned char 
 42278 ;; Return value:  Size  Location     Type
 42279 ;;                  4   12[BANK0 ] long 
 42280 ;; Registers used:
 42281 ;;		wreg, status,2, status,0
 42282 ;; Tracked objects:
 42283 ;;		On entry : 0/0
 42284 ;;		On exit  : 0/0
 42285 ;;		Unchanged: 0/0
 42286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42287 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42288 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42289 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42290 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42291 ;;Total ram usage:       10 bytes
 42292 ;; Hardware stack levels used:    1
 42293 ;; This function calls:
 42294 ;;		Nothing
 42295 ;; This function is called by:
 42296 ;;		_ADCPostProcessingCallback
 42297 ;;		_floor
 42298 ;;		i2_printf
 42299 ;; This function uses a non-reentrant model
 42300 ;;
 42301                           
 42302                           	psect	text131
 42303  017C00                     __ptext131:
 42304                           	opt stack 0
 42305  017C00                     i2___fltol:
 42306                           	opt stack 16
 42307                           
 42308                           ;incstack = 0
 42309  017C00  0100               	movlb	0	; () banked
 42310  017C02  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 42311  017C04  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 42312  017C06  6F75               	movwf	i2___fltol@exp1& (0+255),b
 42313  017C08  5175               	movf	i2___fltol@exp1& (0+255),w,b
 42314  017C0A  A4D8               	btfss	status,2,c
 42315  017C0C  D009               	goto	i2l1981
 42316                           
 42317                           ; BSR set to: 0
 42318  017C0E  0E00               	movlw	0
 42319  017C10  6F6C               	movwf	?i2___fltol& (0+255),b
 42320  017C12  0E00               	movlw	0
 42321  017C14  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 42322  017C16  0E00               	movlw	0
 42323  017C18  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 42324  017C1A  0E00               	movlw	0
 42325  017C1C  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 42326                           
 42327                           ; BSR set to: 0
 42328  017C1E  0012               	return	
 42329  017C20                     i2l1981:
 42330                           
 42331                           ; BSR set to: 0
 42332                           
 42333                           ; BSR set to: 0
 42334  017C20  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 42335  017C24  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 42336  017C28  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 42337  017C2C  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 42338  017C30  0E20               	movlw	32
 42339  017C32  D005               	goto	i2u1566_40
 42340  017C34                     i2u1566_45:
 42341  017C34  90D8               	bcf	status,0,c
 42342  017C36  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 42343  017C38  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 42344  017C3A  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 42345  017C3C  3370               	rrcf	??i2___fltol& (0+255),f,b
 42346  017C3E                     i2u1566_40:
 42347  017C3E  2EE8               	decfsz	wreg,f,c
 42348  017C40  D7F9               	goto	i2u1566_45
 42349  017C42  5170               	movf	??i2___fltol& (0+255),w,b
 42350  017C44  6F74               	movwf	i2___fltol@sign1& (0+255),b
 42351                           
 42352                           ; BSR set to: 0
 42353  017C46  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 42354                           
 42355                           ; BSR set to: 0
 42356  017C48  0EFF               	movlw	255
 42357  017C4A  176C               	andwf	i2___fltol@f1& (0+255),f,b
 42358  017C4C  0EFF               	movlw	255
 42359  017C4E  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 42360  017C50  0EFF               	movlw	255
 42361  017C52  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 42362  017C54  0E00               	movlw	0
 42363  017C56  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 42364                           
 42365                           ; BSR set to: 0
 42366  017C58  0E96               	movlw	150
 42367  017C5A  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 42368                           
 42369                           ; BSR set to: 0
 42370  017C5C  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 42371  017C5E  D016               	goto	i2l1983
 42372                           
 42373                           ; BSR set to: 0
 42374  017C60  5175               	movf	i2___fltol@exp1& (0+255),w,b
 42375  017C62  0A80               	xorlw	128
 42376  017C64  0F97               	addlw	151
 42377  017C66  B0D8               	btfsc	status,0,c
 42378  017C68  D009               	goto	i2l1984
 42379                           
 42380                           ; BSR set to: 0
 42381  017C6A  0E00               	movlw	0
 42382  017C6C  6F6C               	movwf	?i2___fltol& (0+255),b
 42383  017C6E  0E00               	movlw	0
 42384  017C70  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 42385  017C72  0E00               	movlw	0
 42386  017C74  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 42387  017C76  0E00               	movlw	0
 42388  017C78  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 42389                           
 42390                           ; BSR set to: 0
 42391  017C7A  0012               	return	
 42392  017C7C                     i2l1984:
 42393                           
 42394                           ; BSR set to: 0
 42395                           
 42396                           ; BSR set to: 0
 42397                           
 42398                           ; BSR set to: 0
 42399  017C7C  90D8               	bcf	status,0,c
 42400  017C7E  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 42401  017C80  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 42402  017C82  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 42403  017C84  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 42404                           
 42405                           ; BSR set to: 0
 42406  017C86  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 42407  017C88  D7F9               	goto	i2l1984
 42408                           
 42409                           ; BSR set to: 0
 42410  017C8A  D015               	goto	i2u1570_40
 42411  017C8C                     i2l1983:
 42412                           
 42413                           ; BSR set to: 0
 42414                           
 42415                           ; BSR set to: 0
 42416  017C8C  0E1F               	movlw	31
 42417  017C8E  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 42418  017C90  D00F               	goto	i2l1989
 42419                           
 42420                           ; BSR set to: 0
 42421  017C92  0E00               	movlw	0
 42422  017C94  6F6C               	movwf	?i2___fltol& (0+255),b
 42423  017C96  0E00               	movlw	0
 42424  017C98  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 42425  017C9A  0E00               	movlw	0
 42426  017C9C  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 42427  017C9E  0E00               	movlw	0
 42428  017CA0  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 42429                           
 42430                           ; BSR set to: 0
 42431  017CA2  0012               	return	
 42432  017CA4                     
 42433                           ; BSR set to: 0
 42434                           
 42435                           ; BSR set to: 0
 42436  017CA4  90D8               	bcf	status,0,c
 42437  017CA6  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 42438  017CA8  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 42439  017CAA  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 42440  017CAC  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 42441  017CAE  0775               	decf	i2___fltol@exp1& (0+255),f,b
 42442  017CB0                     i2l1989:
 42443                           
 42444                           ; BSR set to: 0
 42445                           
 42446                           ; BSR set to: 0
 42447  017CB0  5175               	movf	i2___fltol@exp1& (0+255),w,b
 42448  017CB2  A4D8               	btfss	status,2,c
 42449  017CB4  D7F7               	goto	i2l1990
 42450  017CB6                     i2u1570_40:
 42451                           
 42452                           ; BSR set to: 0
 42453                           
 42454                           ; BSR set to: 0
 42455                           
 42456                           ; BSR set to: 0
 42457  017CB6  5174               	movf	i2___fltol@sign1& (0+255),w,b
 42458  017CB8  B4D8               	btfsc	status,2,c
 42459  017CBA  D008               	goto	i2l1992
 42460                           
 42461                           ; BSR set to: 0
 42462  017CBC  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 42463  017CBE  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 42464  017CC0  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 42465  017CC2  6D6C               	negf	i2___fltol@f1& (0+255),b
 42466  017CC4  0E00               	movlw	0
 42467  017CC6  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 42468  017CC8  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 42469  017CCA  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 42470  017CCC                     i2l1992:
 42471                           
 42472                           ; BSR set to: 0
 42473                           
 42474                           ; BSR set to: 0
 42475  017CCC  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 42476  017CD0  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 42477  017CD4  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 42478  017CD8  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 42479  017CDC  0012               	return	
 42480  017CDE                     __end_ofi2___fltol:
 42481                           	opt stack 0
 42482                           tosu	equ	0xFFF
 42483                           tosh	equ	0xFFE
 42484                           tosl	equ	0xFFD
 42485                           pclatu	equ	0xFFB
 42486                           pclath	equ	0xFFA
 42487                           tblptru	equ	0xFF8
 42488                           tblptrh	equ	0xFF7
 42489                           tblptrl	equ	0xFF6
 42490                           tablat	equ	0xFF5
 42491                           prodh	equ	0xFF4
 42492                           prodl	equ	0xFF3
 42493                           intcon	equ	0xFF2
 42494                           indf0	equ	0xFEF
 42495                           postinc0	equ	0xFEE
 42496                           fsr0h	equ	0xFEA
 42497                           fsr0l	equ	0xFE9
 42498                           wreg	equ	0xFE8
 42499                           indf1	equ	0xFE7
 42500                           postdec1	equ	0xFE5
 42501                           plusw1	equ	0xFE3
 42502                           fsr1h	equ	0xFE2
 42503                           fsr1l	equ	0xFE1
 42504                           bsr	equ	0xFE0
 42505                           indf2	equ	0xFDF
 42506                           postinc2	equ	0xFDE
 42507                           postdec2	equ	0xFDD
 42508                           plusw2	equ	0xFDB
 42509                           fsr2h	equ	0xFDA
 42510                           fsr2l	equ	0xFD9
 42511                           status	equ	0xFD8
 42512                           
 42513 ;; *************** function i2___flge *****************
 42514 ;; Defined at:
 42515 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 42516 ;; Parameters:    Size  Location     Type
 42517 ;;  ff1             4   51[COMRAM] long 
 42518 ;;  ff2             4   55[COMRAM] long 
 42519 ;; Auto vars:     Size  Location     Type
 42520 ;;		None
 42521 ;; Return value:  Size  Location     Type
 42522 ;;		None               void
 42523 ;; Registers used:
 42524 ;;		wreg, status,2, status,0
 42525 ;; Tracked objects:
 42526 ;;		On entry : 0/0
 42527 ;;		On exit  : 0/0
 42528 ;;		Unchanged: 0/0
 42529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42530 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42532 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42533 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42534 ;;Total ram usage:       12 bytes
 42535 ;; Hardware stack levels used:    1
 42536 ;; This function calls:
 42537 ;;		Nothing
 42538 ;; This function is called by:
 42539 ;;		_ADCPostProcessingCallback
 42540 ;;		_asin
 42541 ;;		_atan
 42542 ;;		_sin
 42543 ;;		_floor
 42544 ;;		i2_printf
 42545 ;; This function uses a non-reentrant model
 42546 ;;
 42547                           
 42548                           	psect	text132
 42549  0176E6                     __ptext132:
 42550                           	opt stack 0
 42551  0176E6                     i2___flge:
 42552                           	opt stack 16
 42553                           
 42554                           ; BSR set to: 0
 42555                           ;incstack = 0
 42556  0176E6  0E00               	movlw	0
 42557  0176E8  1434               	andwf	i2___flge@ff1,w,c
 42558  0176EA  6E3C               	movwf	??i2___flge& (0+255),c
 42559  0176EC  0E00               	movlw	0
 42560  0176EE  1435               	andwf	i2___flge@ff1+1,w,c
 42561  0176F0  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 42562  0176F2  0E80               	movlw	128
 42563  0176F4  1436               	andwf	i2___flge@ff1+2,w,c
 42564  0176F6  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 42565  0176F8  0E7F               	movlw	127
 42566  0176FA  1437               	andwf	i2___flge@ff1+3,w,c
 42567  0176FC  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 42568  0176FE  503C               	movf	??i2___flge,w,c
 42569  017700  103D               	iorwf	??i2___flge+1,w,c
 42570  017702  103E               	iorwf	??i2___flge+2,w,c
 42571  017704  103F               	iorwf	??i2___flge+3,w,c
 42572  017706  A4D8               	btfss	status,2,c
 42573  017708  D008               	goto	i2l1951
 42574  01770A  0E00               	movlw	0
 42575  01770C  6E34               	movwf	i2___flge@ff1,c
 42576  01770E  0E00               	movlw	0
 42577  017710  6E35               	movwf	i2___flge@ff1+1,c
 42578  017712  0E00               	movlw	0
 42579  017714  6E36               	movwf	i2___flge@ff1+2,c
 42580  017716  0E00               	movlw	0
 42581  017718  6E37               	movwf	i2___flge@ff1+3,c
 42582  01771A                     i2l1951:
 42583  01771A  0E00               	movlw	0
 42584  01771C  1438               	andwf	i2___flge@ff2,w,c
 42585  01771E  6E3C               	movwf	??i2___flge& (0+255),c
 42586  017720  0E00               	movlw	0
 42587  017722  1439               	andwf	i2___flge@ff2+1,w,c
 42588  017724  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 42589  017726  0E80               	movlw	128
 42590  017728  143A               	andwf	i2___flge@ff2+2,w,c
 42591  01772A  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 42592  01772C  0E7F               	movlw	127
 42593  01772E  143B               	andwf	i2___flge@ff2+3,w,c
 42594  017730  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 42595  017732  503C               	movf	??i2___flge,w,c
 42596  017734  103D               	iorwf	??i2___flge+1,w,c
 42597  017736  103E               	iorwf	??i2___flge+2,w,c
 42598  017738  103F               	iorwf	??i2___flge+3,w,c
 42599  01773A  A4D8               	btfss	status,2,c
 42600  01773C  D008               	goto	i2l1952
 42601  01773E  0E00               	movlw	0
 42602  017740  6E38               	movwf	i2___flge@ff2,c
 42603  017742  0E00               	movlw	0
 42604  017744  6E39               	movwf	i2___flge@ff2+1,c
 42605  017746  0E00               	movlw	0
 42606  017748  6E3A               	movwf	i2___flge@ff2+2,c
 42607  01774A  0E00               	movlw	0
 42608  01774C  6E3B               	movwf	i2___flge@ff2+3,c
 42609  01774E                     i2l1952:
 42610  01774E  AE37               	btfss	i2___flge@ff1+3,7,c
 42611  017750  D01D               	goto	i2l1953
 42612  017752  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 42613  017756  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 42614  01775A  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 42615  01775E  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 42616  017762  1E3C               	comf	??i2___flge,f,c
 42617  017764  1E3D               	comf	??i2___flge+1,f,c
 42618  017766  1E3E               	comf	??i2___flge+2,f,c
 42619  017768  1E3F               	comf	??i2___flge+3,f,c
 42620  01776A  2A3C               	incf	??i2___flge,f,c
 42621  01776C  0E00               	movlw	0
 42622  01776E  223D               	addwfc	??i2___flge+1,f,c
 42623  017770  223E               	addwfc	??i2___flge+2,f,c
 42624  017772  223F               	addwfc	??i2___flge+3,f,c
 42625  017774  0E00               	movlw	0
 42626  017776  243C               	addwf	??i2___flge,w,c
 42627  017778  6E34               	movwf	i2___flge@ff1,c
 42628  01777A  0E00               	movlw	0
 42629  01777C  203D               	addwfc	??i2___flge+1,w,c
 42630  01777E  6E35               	movwf	i2___flge@ff1+1,c
 42631  017780  0E00               	movlw	0
 42632  017782  203E               	addwfc	??i2___flge+2,w,c
 42633  017784  6E36               	movwf	i2___flge@ff1+2,c
 42634  017786  0E80               	movlw	128
 42635  017788  203F               	addwfc	??i2___flge+3,w,c
 42636  01778A  6E37               	movwf	i2___flge@ff1+3,c
 42637  01778C                     i2l1953:
 42638  01778C  AE3B               	btfss	i2___flge@ff2+3,7,c
 42639  01778E  D01D               	goto	i2l1954
 42640  017790  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 42641  017794  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 42642  017798  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 42643  01779C  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 42644  0177A0  1E3C               	comf	??i2___flge,f,c
 42645  0177A2  1E3D               	comf	??i2___flge+1,f,c
 42646  0177A4  1E3E               	comf	??i2___flge+2,f,c
 42647  0177A6  1E3F               	comf	??i2___flge+3,f,c
 42648  0177A8  2A3C               	incf	??i2___flge,f,c
 42649  0177AA  0E00               	movlw	0
 42650  0177AC  223D               	addwfc	??i2___flge+1,f,c
 42651  0177AE  223E               	addwfc	??i2___flge+2,f,c
 42652  0177B0  223F               	addwfc	??i2___flge+3,f,c
 42653  0177B2  0E00               	movlw	0
 42654  0177B4  243C               	addwf	??i2___flge,w,c
 42655  0177B6  6E38               	movwf	i2___flge@ff2,c
 42656  0177B8  0E00               	movlw	0
 42657  0177BA  203D               	addwfc	??i2___flge+1,w,c
 42658  0177BC  6E39               	movwf	i2___flge@ff2+1,c
 42659  0177BE  0E00               	movlw	0
 42660  0177C0  203E               	addwfc	??i2___flge+2,w,c
 42661  0177C2  6E3A               	movwf	i2___flge@ff2+2,c
 42662  0177C4  0E80               	movlw	128
 42663  0177C6  203F               	addwfc	??i2___flge+3,w,c
 42664  0177C8  6E3B               	movwf	i2___flge@ff2+3,c
 42665  0177CA                     i2l1954:
 42666  0177CA  0E00               	movlw	0
 42667  0177CC  1A34               	xorwf	i2___flge@ff1,f,c
 42668  0177CE  0E00               	movlw	0
 42669  0177D0  1A35               	xorwf	i2___flge@ff1+1,f,c
 42670  0177D2  0E00               	movlw	0
 42671  0177D4  1A36               	xorwf	i2___flge@ff1+2,f,c
 42672  0177D6  0E80               	movlw	128
 42673  0177D8  1A37               	xorwf	i2___flge@ff1+3,f,c
 42674  0177DA  0E00               	movlw	0
 42675  0177DC  1A38               	xorwf	i2___flge@ff2,f,c
 42676  0177DE  0E00               	movlw	0
 42677  0177E0  1A39               	xorwf	i2___flge@ff2+1,f,c
 42678  0177E2  0E00               	movlw	0
 42679  0177E4  1A3A               	xorwf	i2___flge@ff2+2,f,c
 42680  0177E6  0E80               	movlw	128
 42681  0177E8  1A3B               	xorwf	i2___flge@ff2+3,f,c
 42682  0177EA  5038               	movf	i2___flge@ff2,w,c
 42683  0177EC  5C34               	subwf	i2___flge@ff1,w,c
 42684  0177EE  5039               	movf	i2___flge@ff2+1,w,c
 42685  0177F0  5835               	subwfb	i2___flge@ff1+1,w,c
 42686  0177F2  503A               	movf	i2___flge@ff2+2,w,c
 42687  0177F4  5836               	subwfb	i2___flge@ff1+2,w,c
 42688  0177F6  503B               	movf	i2___flge@ff2+3,w,c
 42689  0177F8  5837               	subwfb	i2___flge@ff1+3,w,c
 42690  0177FA  B0D8               	btfsc	status,0,c
 42691  0177FC  D002               	goto	i2l11486
 42692  0177FE  90D8               	bcf	status,0,c
 42693  017800  0012               	return	
 42694  017802                     i2l11486:
 42695  017802  80D8               	bsf	status,0,c
 42696  017804  0012               	return	
 42697  017806                     __end_ofi2___flge:
 42698                           	opt stack 0
 42699                           tosu	equ	0xFFF
 42700                           tosh	equ	0xFFE
 42701                           tosl	equ	0xFFD
 42702                           pclatu	equ	0xFFB
 42703                           pclath	equ	0xFFA
 42704                           tblptru	equ	0xFF8
 42705                           tblptrh	equ	0xFF7
 42706                           tblptrl	equ	0xFF6
 42707                           tablat	equ	0xFF5
 42708                           prodh	equ	0xFF4
 42709                           prodl	equ	0xFF3
 42710                           intcon	equ	0xFF2
 42711                           indf0	equ	0xFEF
 42712                           postinc0	equ	0xFEE
 42713                           fsr0h	equ	0xFEA
 42714                           fsr0l	equ	0xFE9
 42715                           wreg	equ	0xFE8
 42716                           indf1	equ	0xFE7
 42717                           postdec1	equ	0xFE5
 42718                           plusw1	equ	0xFE3
 42719                           fsr1h	equ	0xFE2
 42720                           fsr1l	equ	0xFE1
 42721                           bsr	equ	0xFE0
 42722                           indf2	equ	0xFDF
 42723                           postinc2	equ	0xFDE
 42724                           postdec2	equ	0xFDD
 42725                           plusw2	equ	0xFDB
 42726                           fsr2h	equ	0xFDA
 42727                           fsr2l	equ	0xFD9
 42728                           status	equ	0xFD8
 42729                           
 42730 ;; *************** function _frexp *****************
 42731 ;; Defined at:
 42732 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 42733 ;; Parameters:    Size  Location     Type
 42734 ;;  value           4    0[COMRAM] long 
 42735 ;;  eptr            2    4[COMRAM] PTR int 
 42736 ;;		 -> floor@expon(2), 
 42737 ;; Auto vars:     Size  Location     Type
 42738 ;;		None
 42739 ;; Return value:  Size  Location     Type
 42740 ;;                  4    0[COMRAM] PTR int 
 42741 ;; Registers used:
 42742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42743 ;; Tracked objects:
 42744 ;;		On entry : 0/0
 42745 ;;		On exit  : 0/0
 42746 ;;		Unchanged: 0/0
 42747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42748 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42751 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42752 ;;Total ram usage:        8 bytes
 42753 ;; Hardware stack levels used:    1
 42754 ;; This function calls:
 42755 ;;		Nothing
 42756 ;; This function is called by:
 42757 ;;		_floor
 42758 ;; This function uses a non-reentrant model
 42759 ;;
 42760                           
 42761                           	psect	text133
 42762  0184DE                     __ptext133:
 42763                           	opt stack 0
 42764  0184DE                     _frexp:
 42765                           	opt stack 13
 42766                           
 42767                           ;incstack = 0
 42768  0184DE  5001               	movf	frexp@value,w,c
 42769  0184E0  1002               	iorwf	frexp@value+1,w,c
 42770  0184E2  1003               	iorwf	frexp@value+2,w,c
 42771  0184E4  1004               	iorwf	frexp@value+3,w,c
 42772  0184E6  A4D8               	btfss	status,2,c
 42773  0184E8  D009               	goto	i2l2444
 42774  0184EA  C005  FFD9         	movff	frexp@eptr,fsr2l
 42775  0184EE  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 42776  0184F2  0E00               	movlw	0
 42777  0184F4  6EDE               	movwf	postinc2,c
 42778  0184F6  0E00               	movlw	0
 42779  0184F8  6EDD               	movwf	postdec2,c
 42780                           
 42781                           ;	Return value of _frexp is never used
 42782  0184FA  0012               	return	
 42783  0184FC                     i2l2444:
 42784  0184FC  5004               	movf	frexp@value+3,w,c
 42785  0184FE  0B7F               	andlw	127
 42786  018500  6E07               	movwf	??_frexp& (0+255),c
 42787  018502  6A08               	clrf	(??_frexp+1)& (0+255),c
 42788  018504  90D8               	bcf	status,0,c
 42789  018506  3607               	rlcf	??_frexp,f,c
 42790  018508  3608               	rlcf	??_frexp+1,f,c
 42791  01850A  C005  FFD9         	movff	frexp@eptr,fsr2l
 42792  01850E  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 42793  018512  C007  FFDE         	movff	??_frexp,postinc2
 42794  018516  C008  FFDD         	movff	??_frexp+1,postdec2
 42795  01851A  AE03               	btfss	frexp@value+2,7,c
 42796  01851C  D003               	goto	i2u1564_40
 42797  01851E  6A07               	clrf	??_frexp& (0+255),c
 42798  018520  2A07               	incf	??_frexp& (0+255),f,c
 42799  018522  D001               	goto	i2u1564_48
 42800  018524                     i2u1564_40:
 42801  018524  6A07               	clrf	??_frexp& (0+255),c
 42802  018526                     i2u1564_48:
 42803  018526  5007               	movf	??_frexp,w,c
 42804  018528  C005  FFD9         	movff	frexp@eptr,fsr2l
 42805  01852C  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 42806  018530  12DE               	iorwf	postinc2,f,c
 42807  018532  0E00               	movlw	0
 42808  018534  12DD               	iorwf	postdec2,f,c
 42809  018536  C005  FFD9         	movff	frexp@eptr,fsr2l
 42810  01853A  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 42811  01853E  0E82               	movlw	130
 42812  018540  26DE               	addwf	postinc2,f,c
 42813  018542  0EFF               	movlw	255
 42814  018544  22DD               	addwfc	postdec2,f,c
 42815  018546  8004               	bsf	frexp@value+3,0,c
 42816  018548  8204               	bsf	frexp@value+3,1,c
 42817  01854A  8404               	bsf	frexp@value+3,2,c
 42818  01854C  8604               	bsf	frexp@value+3,3,c
 42819  01854E  8804               	bsf	frexp@value+3,4,c
 42820  018550  8A04               	bsf	frexp@value+3,5,c
 42821  018552  9C04               	bcf	frexp@value+3,6,c
 42822  018554  9E03               	bcf	frexp@value+2,7,c
 42823  018556  0012               	return	
 42824  018558                     __end_of_frexp:
 42825                           	opt stack 0
 42826                           tosu	equ	0xFFF
 42827                           tosh	equ	0xFFE
 42828                           tosl	equ	0xFFD
 42829                           pclatu	equ	0xFFB
 42830                           pclath	equ	0xFFA
 42831                           tblptru	equ	0xFF8
 42832                           tblptrh	equ	0xFF7
 42833                           tblptrl	equ	0xFF6
 42834                           tablat	equ	0xFF5
 42835                           prodh	equ	0xFF4
 42836                           prodl	equ	0xFF3
 42837                           intcon	equ	0xFF2
 42838                           indf0	equ	0xFEF
 42839                           postinc0	equ	0xFEE
 42840                           fsr0h	equ	0xFEA
 42841                           fsr0l	equ	0xFE9
 42842                           wreg	equ	0xFE8
 42843                           indf1	equ	0xFE7
 42844                           postdec1	equ	0xFE5
 42845                           plusw1	equ	0xFE3
 42846                           fsr1h	equ	0xFE2
 42847                           fsr1l	equ	0xFE1
 42848                           bsr	equ	0xFE0
 42849                           indf2	equ	0xFDF
 42850                           postinc2	equ	0xFDE
 42851                           postdec2	equ	0xFDD
 42852                           plusw2	equ	0xFDB
 42853                           fsr2h	equ	0xFDA
 42854                           fsr2l	equ	0xFD9
 42855                           status	equ	0xFD8
 42856                           
 42857 ;; *************** function _eval_poly *****************
 42858 ;; Defined at:
 42859 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 42860 ;; Parameters:    Size  Location     Type
 42861 ;;  x               4   12[BANK0 ] PTR int 
 42862 ;;  d               2   16[BANK0 ] PTR const 
 42863 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 42864 ;;  n               2   18[BANK0 ] int 
 42865 ;; Auto vars:     Size  Location     Type
 42866 ;;  res             4   24[BANK0 ] int 
 42867 ;; Return value:  Size  Location     Type
 42868 ;;                  4   12[BANK0 ] int 
 42869 ;; Registers used:
 42870 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42871 ;; Tracked objects:
 42872 ;;		On entry : 0/0
 42873 ;;		On exit  : 0/0
 42874 ;;		Unchanged: 0/0
 42875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42876 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42877 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42878 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42879 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42880 ;;Total ram usage:       16 bytes
 42881 ;; Hardware stack levels used:    1
 42882 ;; Hardware stack levels required when called:    1
 42883 ;; This function calls:
 42884 ;;		i2___fladd
 42885 ;;		i2___flmul
 42886 ;; This function is called by:
 42887 ;;		_atan
 42888 ;;		_sin
 42889 ;; This function uses a non-reentrant model
 42890 ;;
 42891                           
 42892                           	psect	text134
 42893  017A22                     __ptext134:
 42894                           	opt stack 0
 42895  017A22                     _eval_poly:
 42896                           	opt stack 13
 42897                           
 42898                           ;incstack = 0
 42899  017A22  C072  F074         	movff	eval_poly@n,??_eval_poly
 42900  017A26  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 42901  017A2A  0100               	movlb	0	; () banked
 42902  017A2C  90D8               	bcf	status,0,c
 42903  017A2E  3774               	rlcf	??_eval_poly& (0+255),f,b
 42904  017A30  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 42905  017A32  90D8               	bcf	status,0,c
 42906  017A34  3774               	rlcf	??_eval_poly& (0+255),f,b
 42907  017A36  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 42908  017A38  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 42909  017A3C  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 42910  017A40  5174               	movf	??_eval_poly& (0+255),w,b
 42911  017A42  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 42912  017A44  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 42913  017A46  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 42914  017A48  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 42915  017A4C  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 42916  017A50                     	if	0	;tblptru may be non-zero
 42917  017A50                     	endif
 42918  017A50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42919  017A50  0E00               	movlw	low (__mediumconst shr (0+16))
 42920  017A52  6EF8               	movwf	tblptru,c
 42921  017A54                     	endif
 42922  017A54  0009               	tblrd		*+
 42923  017A56  CFF5 F078          	movff	tablat,eval_poly@res
 42924  017A5A  0009               	tblrd		*+
 42925  017A5C  CFF5 F079          	movff	tablat,eval_poly@res+1
 42926  017A60  0009               	tblrd		*+
 42927  017A62  CFF5 F07A          	movff	tablat,eval_poly@res+2
 42928  017A66  000A               	tblrd		*-
 42929  017A68  CFF5 F07B          	movff	tablat,eval_poly@res+3
 42930  017A6C  D04C               	goto	i2l1924
 42931  017A6E                     
 42932                           ; BSR set to: 0
 42933                           
 42934                           ; BSR set to: 0
 42935  017A6E  C078  F034         	movff	eval_poly@res,i2___flmul@a
 42936  017A72  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 42937  017A76  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 42938  017A7A  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 42939  017A7E  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 42940  017A82  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 42941  017A86  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 42942  017A8A  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 42943  017A8E  EC77  F0A4         	call	i2___flmul	;wreg free
 42944  017A92  C030  F056         	movff	?i2___flmul,i2___fladd@b
 42945  017A96  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 42946  017A9A  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 42947  017A9E  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 42948  017AA2  0100               	movlb	0	; () banked
 42949  017AA4  0772               	decf	eval_poly@n& (0+255),f,b
 42950  017AA6  A0D8               	btfss	status,0,c
 42951  017AA8  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 42952  017AAA  C072  F074         	movff	eval_poly@n,??_eval_poly
 42953  017AAE  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 42954  017AB2  90D8               	bcf	status,0,c
 42955  017AB4  3774               	rlcf	??_eval_poly& (0+255),f,b
 42956  017AB6  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 42957  017AB8  90D8               	bcf	status,0,c
 42958  017ABA  3774               	rlcf	??_eval_poly& (0+255),f,b
 42959  017ABC  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 42960  017ABE  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 42961  017AC2  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 42962  017AC6  5174               	movf	??_eval_poly& (0+255),w,b
 42963  017AC8  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 42964  017ACA  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 42965  017ACC  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 42966  017ACE  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 42967  017AD2  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 42968  017AD6                     	if	0	;tblptru may be non-zero
 42969  017AD6                     	endif
 42970  017AD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42971  017AD6  0E00               	movlw	low (__mediumconst shr (0+16))
 42972  017AD8  6EF8               	movwf	tblptru,c
 42973  017ADA                     	endif
 42974  017ADA  0009               	tblrd		*+
 42975  017ADC  CFF5 F05A          	movff	tablat,i2___fladd@a
 42976  017AE0  0009               	tblrd		*+
 42977  017AE2  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 42978  017AE6  0009               	tblrd		*+
 42979  017AE8  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 42980  017AEC  000A               	tblrd		*-
 42981  017AEE  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 42982  017AF2  ECBE  F0A7         	call	i2___fladd	;wreg free
 42983  017AF6  C056  F078         	movff	?i2___fladd,eval_poly@res
 42984  017AFA  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 42985  017AFE  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 42986  017B02  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 42987  017B06                     i2l1924:
 42988  017B06  0100               	movlb	0	; () banked
 42989  017B08  5172               	movf	eval_poly@n& (0+255),w,b
 42990  017B0A  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 42991  017B0C  A4D8               	btfss	status,2,c
 42992  017B0E  D7AF               	goto	i2l1925
 42993                           
 42994                           ; BSR set to: 0
 42995  017B10  C078  F06C         	movff	eval_poly@res,?_eval_poly
 42996  017B14  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 42997  017B18  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 42998  017B1C  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 42999                           
 43000                           ; BSR set to: 0
 43001  017B20  0012               	return		;funcret
 43002  017B22                     __end_of_eval_poly:
 43003                           	opt stack 0
 43004                           tosu	equ	0xFFF
 43005                           tosh	equ	0xFFE
 43006                           tosl	equ	0xFFD
 43007                           pclatu	equ	0xFFB
 43008                           pclath	equ	0xFFA
 43009                           tblptru	equ	0xFF8
 43010                           tblptrh	equ	0xFF7
 43011                           tblptrl	equ	0xFF6
 43012                           tablat	equ	0xFF5
 43013                           prodh	equ	0xFF4
 43014                           prodl	equ	0xFF3
 43015                           intcon	equ	0xFF2
 43016                           indf0	equ	0xFEF
 43017                           postinc0	equ	0xFEE
 43018                           fsr0h	equ	0xFEA
 43019                           fsr0l	equ	0xFE9
 43020                           wreg	equ	0xFE8
 43021                           indf1	equ	0xFE7
 43022                           postdec1	equ	0xFE5
 43023                           plusw1	equ	0xFE3
 43024                           fsr1h	equ	0xFE2
 43025                           fsr1l	equ	0xFE1
 43026                           bsr	equ	0xFE0
 43027                           indf2	equ	0xFDF
 43028                           postinc2	equ	0xFDE
 43029                           postdec2	equ	0xFDD
 43030                           plusw2	equ	0xFDB
 43031                           fsr2h	equ	0xFDA
 43032                           fsr2l	equ	0xFD9
 43033                           status	equ	0xFD8
 43034                           
 43035 ;; *************** function i2___flmul *****************
 43036 ;; Defined at:
 43037 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 43038 ;; Parameters:    Size  Location     Type
 43039 ;;  b               4   47[COMRAM] int 
 43040 ;;  a               4   51[COMRAM] int 
 43041 ;; Auto vars:     Size  Location     Type
 43042 ;;  __flmul         4   66[COMRAM] struct .
 43043 ;;  __flmul         4   61[COMRAM] unsigned long 
 43044 ;;  __flmul         2   70[COMRAM] struct .
 43045 ;;  __flmul         1   65[COMRAM] unsigned char 
 43046 ;;  __flmul         1   60[COMRAM] unsigned char 
 43047 ;;  __flmul         1   59[COMRAM] unsigned char 
 43048 ;; Return value:  Size  Location     Type
 43049 ;;                  4   47[COMRAM] unsigned char 
 43050 ;; Registers used:
 43051 ;;		wreg, status,2, status,0, prodl, prodh
 43052 ;; Tracked objects:
 43053 ;;		On entry : 0/0
 43054 ;;		On exit  : 0/0
 43055 ;;		Unchanged: 0/0
 43056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43057 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43058 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43059 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43060 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43061 ;;Total ram usage:       25 bytes
 43062 ;; Hardware stack levels used:    1
 43063 ;; This function calls:
 43064 ;;		Nothing
 43065 ;; This function is called by:
 43066 ;;		_peakToRMS
 43067 ;;		_ADCPostProcessingCallback
 43068 ;;		_asin
 43069 ;;		_atan
 43070 ;;		_eval_poly
 43071 ;;		_sin
 43072 ;;		i2_fround
 43073 ;;		i2_scale
 43074 ;;		i2_printf
 43075 ;; This function uses a non-reentrant model
 43076 ;;
 43077                           
 43078                           	psect	text135
 43079  0148EE                     __ptext135:
 43080                           	opt stack 0
 43081  0148EE                     i2___flmul:
 43082                           	opt stack 15
 43083                           
 43084                           ; BSR set to: 0
 43085                           ;incstack = 0
 43086  0148EE  5033               	movf	i2___flmul@b+3,w,c
 43087  0148F0  0B80               	andlw	128
 43088  0148F2  6E3C               	movwf	i2___flmul@sign,c
 43089  0148F4  5033               	movf	i2___flmul@b+3,w,c
 43090  0148F6  2433               	addwf	i2___flmul@b+3,w,c
 43091  0148F8  6E42               	movwf	i2___flmul@bexp,c
 43092  0148FA  BE32               	btfsc	i2___flmul@b+2,7,c
 43093  0148FC  8042               	bsf	i2___flmul@bexp,0,c
 43094  0148FE  5042               	movf	i2___flmul@bexp,w,c
 43095  014900  B4D8               	btfsc	status,2,c
 43096  014902  D00D               	goto	i2l2312
 43097  014904  2842               	incf	i2___flmul@bexp,w,c
 43098  014906  A4D8               	btfss	status,2,c
 43099  014908  D008               	goto	i2l2313
 43100  01490A  0E00               	movlw	0
 43101  01490C  6E30               	movwf	i2___flmul@b,c
 43102  01490E  0E00               	movlw	0
 43103  014910  6E31               	movwf	i2___flmul@b+1,c
 43104  014912  0E00               	movlw	0
 43105  014914  6E32               	movwf	i2___flmul@b+2,c
 43106  014916  0E00               	movlw	0
 43107  014918  6E33               	movwf	i2___flmul@b+3,c
 43108  01491A                     i2l2313:
 43109  01491A  8E32               	bsf	i2___flmul@b+2,7,c
 43110  01491C  D008               	goto	i2l2314
 43111  01491E                     i2l2312:
 43112  01491E  0E00               	movlw	0
 43113  014920  6E30               	movwf	i2___flmul@b,c
 43114  014922  0E00               	movlw	0
 43115  014924  6E31               	movwf	i2___flmul@b+1,c
 43116  014926  0E00               	movlw	0
 43117  014928  6E32               	movwf	i2___flmul@b+2,c
 43118  01492A  0E00               	movlw	0
 43119  01492C  6E33               	movwf	i2___flmul@b+3,c
 43120  01492E                     i2l2314:
 43121  01492E  5037               	movf	i2___flmul@a+3,w,c
 43122  014930  0B80               	andlw	128
 43123  014932  1A3C               	xorwf	i2___flmul@sign,f,c
 43124  014934  5037               	movf	i2___flmul@a+3,w,c
 43125  014936  2437               	addwf	i2___flmul@a+3,w,c
 43126  014938  6E3D               	movwf	i2___flmul@aexp,c
 43127  01493A  BE36               	btfsc	i2___flmul@a+2,7,c
 43128  01493C  803D               	bsf	i2___flmul@aexp,0,c
 43129  01493E  503D               	movf	i2___flmul@aexp,w,c
 43130  014940  B4D8               	btfsc	status,2,c
 43131  014942  D00D               	goto	i2l2316
 43132  014944  283D               	incf	i2___flmul@aexp,w,c
 43133  014946  A4D8               	btfss	status,2,c
 43134  014948  D008               	goto	i2l2317
 43135  01494A  0E00               	movlw	0
 43136  01494C  6E34               	movwf	i2___flmul@a,c
 43137  01494E  0E00               	movlw	0
 43138  014950  6E35               	movwf	i2___flmul@a+1,c
 43139  014952  0E00               	movlw	0
 43140  014954  6E36               	movwf	i2___flmul@a+2,c
 43141  014956  0E00               	movlw	0
 43142  014958  6E37               	movwf	i2___flmul@a+3,c
 43143  01495A                     i2l2317:
 43144  01495A  8E36               	bsf	i2___flmul@a+2,7,c
 43145  01495C  D008               	goto	i2l2318
 43146  01495E                     i2l2316:
 43147  01495E  0E00               	movlw	0
 43148  014960  6E34               	movwf	i2___flmul@a,c
 43149  014962  0E00               	movlw	0
 43150  014964  6E35               	movwf	i2___flmul@a+1,c
 43151  014966  0E00               	movlw	0
 43152  014968  6E36               	movwf	i2___flmul@a+2,c
 43153  01496A  0E00               	movlw	0
 43154  01496C  6E37               	movwf	i2___flmul@a+3,c
 43155  01496E                     i2l2318:
 43156  01496E  503D               	movf	i2___flmul@aexp,w,c
 43157  014970  B4D8               	btfsc	status,2,c
 43158  014972  D003               	goto	i2u1377_40
 43159  014974  5042               	movf	i2___flmul@bexp,w,c
 43160  014976  A4D8               	btfss	status,2,c
 43161  014978  D009               	goto	i2l2319
 43162  01497A                     i2u1377_40:
 43163  01497A  0E00               	movlw	0
 43164  01497C  6E30               	movwf	?i2___flmul,c
 43165  01497E  0E00               	movlw	0
 43166  014980  6E31               	movwf	?i2___flmul+1,c
 43167  014982  0E00               	movlw	0
 43168  014984  6E32               	movwf	?i2___flmul+2,c
 43169  014986  0E00               	movlw	0
 43170  014988  6E33               	movwf	?i2___flmul+3,c
 43171  01498A  0012               	return	
 43172  01498C                     i2l2319:
 43173  01498C  5036               	movf	i2___flmul@a+2,w,c
 43174  01498E  0230               	mulwf	i2___flmul@b,c
 43175  014990  CFF3 F047          	movff	prodl,i2___flmul@temp
 43176  014994  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43177  014998  5047               	movf	i2___flmul@temp,w,c
 43178  01499A  6E3E               	movwf	i2___flmul@grs,c
 43179  01499C  6A3F               	clrf	i2___flmul@grs+1,c
 43180  01499E  6A40               	clrf	i2___flmul@grs+2,c
 43181  0149A0  6A41               	clrf	i2___flmul@grs+3,c
 43182  0149A2  5048               	movf	i2___flmul@temp+1,w,c
 43183  0149A4  6E43               	movwf	i2___flmul@prod,c
 43184  0149A6  6A44               	clrf	i2___flmul@prod+1,c
 43185  0149A8  6A45               	clrf	i2___flmul@prod+2,c
 43186  0149AA  6A46               	clrf	i2___flmul@prod+3,c
 43187  0149AC  5035               	movf	i2___flmul@a+1,w,c
 43188  0149AE  0231               	mulwf	i2___flmul@b+1,c
 43189  0149B0  CFF3 F047          	movff	prodl,i2___flmul@temp
 43190  0149B4  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43191  0149B8  5047               	movf	i2___flmul@temp,w,c
 43192  0149BA  263E               	addwf	i2___flmul@grs,f,c
 43193  0149BC  0E00               	movlw	0
 43194  0149BE  223F               	addwfc	i2___flmul@grs+1,f,c
 43195  0149C0  2240               	addwfc	i2___flmul@grs+2,f,c
 43196  0149C2  2241               	addwfc	i2___flmul@grs+3,f,c
 43197  0149C4  5048               	movf	i2___flmul@temp+1,w,c
 43198  0149C6  2643               	addwf	i2___flmul@prod,f,c
 43199  0149C8  0E00               	movlw	0
 43200  0149CA  2244               	addwfc	i2___flmul@prod+1,f,c
 43201  0149CC  2245               	addwfc	i2___flmul@prod+2,f,c
 43202  0149CE  2246               	addwfc	i2___flmul@prod+3,f,c
 43203  0149D0  5034               	movf	i2___flmul@a,w,c
 43204  0149D2  0232               	mulwf	i2___flmul@b+2,c
 43205  0149D4  CFF3 F047          	movff	prodl,i2___flmul@temp
 43206  0149D8  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43207  0149DC  5047               	movf	i2___flmul@temp,w,c
 43208  0149DE  263E               	addwf	i2___flmul@grs,f,c
 43209  0149E0  0E00               	movlw	0
 43210  0149E2  223F               	addwfc	i2___flmul@grs+1,f,c
 43211  0149E4  2240               	addwfc	i2___flmul@grs+2,f,c
 43212  0149E6  2241               	addwfc	i2___flmul@grs+3,f,c
 43213  0149E8  5048               	movf	i2___flmul@temp+1,w,c
 43214  0149EA  2643               	addwf	i2___flmul@prod,f,c
 43215  0149EC  0E00               	movlw	0
 43216  0149EE  2244               	addwfc	i2___flmul@prod+1,f,c
 43217  0149F0  2245               	addwfc	i2___flmul@prod+2,f,c
 43218  0149F2  2246               	addwfc	i2___flmul@prod+3,f,c
 43219  0149F4  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 43220  0149F8  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 43221  0149FC  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 43222  014A00  6A3E               	clrf	i2___flmul@grs,c
 43223  014A02  5034               	movf	i2___flmul@a,w,c
 43224  014A04  0231               	mulwf	i2___flmul@b+1,c
 43225  014A06  CFF3 F047          	movff	prodl,i2___flmul@temp
 43226  014A0A  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43227  014A0E  5047               	movf	i2___flmul@temp,w,c
 43228  014A10  263E               	addwf	i2___flmul@grs,f,c
 43229  014A12  5048               	movf	i2___flmul@temp+1,w,c
 43230  014A14  223F               	addwfc	i2___flmul@grs+1,f,c
 43231  014A16  0E00               	movlw	0
 43232  014A18  2240               	addwfc	i2___flmul@grs+2,f,c
 43233  014A1A  0E00               	movlw	0
 43234  014A1C  2241               	addwfc	i2___flmul@grs+3,f,c
 43235  014A1E  5035               	movf	i2___flmul@a+1,w,c
 43236  014A20  0230               	mulwf	i2___flmul@b,c
 43237  014A22  CFF3 F047          	movff	prodl,i2___flmul@temp
 43238  014A26  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43239  014A2A  5047               	movf	i2___flmul@temp,w,c
 43240  014A2C  263E               	addwf	i2___flmul@grs,f,c
 43241  014A2E  5048               	movf	i2___flmul@temp+1,w,c
 43242  014A30  223F               	addwfc	i2___flmul@grs+1,f,c
 43243  014A32  0E00               	movlw	0
 43244  014A34  2240               	addwfc	i2___flmul@grs+2,f,c
 43245  014A36  0E00               	movlw	0
 43246  014A38  2241               	addwfc	i2___flmul@grs+3,f,c
 43247  014A3A  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 43248  014A3E  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 43249  014A42  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 43250  014A46  6A3E               	clrf	i2___flmul@grs,c
 43251  014A48  5034               	movf	i2___flmul@a,w,c
 43252  014A4A  0230               	mulwf	i2___flmul@b,c
 43253  014A4C  CFF3 F047          	movff	prodl,i2___flmul@temp
 43254  014A50  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43255  014A54  5047               	movf	i2___flmul@temp,w,c
 43256  014A56  263E               	addwf	i2___flmul@grs,f,c
 43257  014A58  5048               	movf	i2___flmul@temp+1,w,c
 43258  014A5A  223F               	addwfc	i2___flmul@grs+1,f,c
 43259  014A5C  0E00               	movlw	0
 43260  014A5E  2240               	addwfc	i2___flmul@grs+2,f,c
 43261  014A60  0E00               	movlw	0
 43262  014A62  2241               	addwfc	i2___flmul@grs+3,f,c
 43263  014A64  5036               	movf	i2___flmul@a+2,w,c
 43264  014A66  0231               	mulwf	i2___flmul@b+1,c
 43265  014A68  CFF3 F047          	movff	prodl,i2___flmul@temp
 43266  014A6C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43267  014A70  5047               	movf	i2___flmul@temp,w,c
 43268  014A72  2643               	addwf	i2___flmul@prod,f,c
 43269  014A74  5048               	movf	i2___flmul@temp+1,w,c
 43270  014A76  2244               	addwfc	i2___flmul@prod+1,f,c
 43271  014A78  0E00               	movlw	0
 43272  014A7A  2245               	addwfc	i2___flmul@prod+2,f,c
 43273  014A7C  0E00               	movlw	0
 43274  014A7E  2246               	addwfc	i2___flmul@prod+3,f,c
 43275  014A80  5035               	movf	i2___flmul@a+1,w,c
 43276  014A82  0232               	mulwf	i2___flmul@b+2,c
 43277  014A84  CFF3 F047          	movff	prodl,i2___flmul@temp
 43278  014A88  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43279  014A8C  5047               	movf	i2___flmul@temp,w,c
 43280  014A8E  2643               	addwf	i2___flmul@prod,f,c
 43281  014A90  5048               	movf	i2___flmul@temp+1,w,c
 43282  014A92  2244               	addwfc	i2___flmul@prod+1,f,c
 43283  014A94  0E00               	movlw	0
 43284  014A96  2245               	addwfc	i2___flmul@prod+2,f,c
 43285  014A98  0E00               	movlw	0
 43286  014A9A  2246               	addwfc	i2___flmul@prod+3,f,c
 43287  014A9C  5036               	movf	i2___flmul@a+2,w,c
 43288  014A9E  0232               	mulwf	i2___flmul@b+2,c
 43289  014AA0  CFF3 F047          	movff	prodl,i2___flmul@temp
 43290  014AA4  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43291  014AA8  5047               	movf	i2___flmul@temp,w,c
 43292  014AAA  6E38               	movwf	??i2___flmul& (0+255),c
 43293  014AAC  5048               	movf	i2___flmul@temp+1,w,c
 43294  014AAE  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 43295  014AB0  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 43296  014AB2  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 43297  014AB4  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 43298  014AB8  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 43299  014ABC  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 43300  014AC0  6A38               	clrf	??i2___flmul,c
 43301  014AC2  5038               	movf	??i2___flmul,w,c
 43302  014AC4  2643               	addwf	i2___flmul@prod,f,c
 43303  014AC6  5039               	movf	??i2___flmul+1,w,c
 43304  014AC8  2244               	addwfc	i2___flmul@prod+1,f,c
 43305  014ACA  503A               	movf	??i2___flmul+2,w,c
 43306  014ACC  2245               	addwfc	i2___flmul@prod+2,f,c
 43307  014ACE  503B               	movf	??i2___flmul+3,w,c
 43308  014AD0  2246               	addwfc	i2___flmul@prod+3,f,c
 43309  014AD2  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 43310  014AD6  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 43311  014ADA  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 43312  014ADE  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 43313  014AE2  0E19               	movlw	25
 43314  014AE4  D005               	goto	i2u1378_40
 43315  014AE6                     i2u1378_45:
 43316  014AE6  90D8               	bcf	status,0,c
 43317  014AE8  323B               	rrcf	??i2___flmul+3,f,c
 43318  014AEA  323A               	rrcf	??i2___flmul+2,f,c
 43319  014AEC  3239               	rrcf	??i2___flmul+1,f,c
 43320  014AEE  3238               	rrcf	??i2___flmul,f,c
 43321  014AF0                     i2u1378_40:
 43322  014AF0  2EE8               	decfsz	wreg,f,c
 43323  014AF2  D7F9               	goto	i2u1378_45
 43324  014AF4  5038               	movf	??i2___flmul,w,c
 43325  014AF6  2643               	addwf	i2___flmul@prod,f,c
 43326  014AF8  5039               	movf	??i2___flmul+1,w,c
 43327  014AFA  2244               	addwfc	i2___flmul@prod+1,f,c
 43328  014AFC  503A               	movf	??i2___flmul+2,w,c
 43329  014AFE  2245               	addwfc	i2___flmul@prod+2,f,c
 43330  014B00  503B               	movf	??i2___flmul+3,w,c
 43331  014B02  2246               	addwfc	i2___flmul@prod+3,f,c
 43332  014B04  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 43333  014B08  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 43334  014B0C  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 43335  014B10  6A3E               	clrf	i2___flmul@grs,c
 43336  014B12  503D               	movf	i2___flmul@aexp,w,c
 43337  014B14  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 43338  014B18  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 43339  014B1A  2638               	addwf	??i2___flmul,f,c
 43340  014B1C  0E00               	movlw	0
 43341  014B1E  2239               	addwfc	??i2___flmul+1,f,c
 43342  014B20  0E82               	movlw	130
 43343  014B22  2438               	addwf	??i2___flmul,w,c
 43344  014B24  6E47               	movwf	i2___flmul@temp,c
 43345  014B26  0EFF               	movlw	255
 43346  014B28  2039               	addwfc	??i2___flmul+1,w,c
 43347  014B2A  6E48               	movwf	i2___flmul@temp+1,c
 43348  014B2C  D00F               	goto	i2l2323
 43349  014B2E  90D8               	bcf	status,0,c
 43350  014B30  3643               	rlcf	i2___flmul@prod,f,c
 43351  014B32  3644               	rlcf	i2___flmul@prod+1,f,c
 43352  014B34  3645               	rlcf	i2___flmul@prod+2,f,c
 43353  014B36  3646               	rlcf	i2___flmul@prod+3,f,c
 43354  014B38  BE41               	btfsc	i2___flmul@grs+3,7,c
 43355  014B3A  8043               	bsf	i2___flmul@prod,0,c
 43356  014B3C  90D8               	bcf	status,0,c
 43357  014B3E  363E               	rlcf	i2___flmul@grs,f,c
 43358  014B40  363F               	rlcf	i2___flmul@grs+1,f,c
 43359  014B42  3640               	rlcf	i2___flmul@grs+2,f,c
 43360  014B44  3641               	rlcf	i2___flmul@grs+3,f,c
 43361  014B46  0647               	decf	i2___flmul@temp,f,c
 43362  014B48  A0D8               	btfss	status,0,c
 43363  014B4A  0648               	decf	i2___flmul@temp+1,f,c
 43364  014B4C                     i2l2323:
 43365  014B4C  AE45               	btfss	i2___flmul@prod+2,7,c
 43366  014B4E  D7EF               	goto	i2l2324
 43367  014B50  0E00               	movlw	0
 43368  014B52  6E3D               	movwf	i2___flmul@aexp,c
 43369  014B54  AE41               	btfss	i2___flmul@grs+3,7,c
 43370  014B56  D016               	goto	i2l2330
 43371  014B58  0EFF               	movlw	255
 43372  014B5A  143E               	andwf	i2___flmul@grs,w,c
 43373  014B5C  6E38               	movwf	??i2___flmul& (0+255),c
 43374  014B5E  0EFF               	movlw	255
 43375  014B60  143F               	andwf	i2___flmul@grs+1,w,c
 43376  014B62  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 43377  014B64  0EFF               	movlw	255
 43378  014B66  1440               	andwf	i2___flmul@grs+2,w,c
 43379  014B68  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 43380  014B6A  0E7F               	movlw	127
 43381  014B6C  1441               	andwf	i2___flmul@grs+3,w,c
 43382  014B6E  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 43383  014B70  5038               	movf	??i2___flmul,w,c
 43384  014B72  1039               	iorwf	??i2___flmul+1,w,c
 43385  014B74  103A               	iorwf	??i2___flmul+2,w,c
 43386  014B76  103B               	iorwf	??i2___flmul+3,w,c
 43387  014B78  A4D8               	btfss	status,2,c
 43388  014B7A  D002               	goto	i2u1383_40
 43389  014B7C  A043               	btfss	i2___flmul@prod,0,c
 43390  014B7E  D002               	goto	i2l2330
 43391  014B80                     i2u1383_40:
 43392  014B80  0E01               	movlw	1
 43393  014B82  6E3D               	movwf	i2___flmul@aexp,c
 43394  014B84                     i2l2330:
 43395  014B84  503D               	movf	i2___flmul@aexp,w,c
 43396  014B86  B4D8               	btfsc	status,2,c
 43397  014B88  D01F               	goto	i2l2332
 43398  014B8A  0E01               	movlw	1
 43399  014B8C  2643               	addwf	i2___flmul@prod,f,c
 43400  014B8E  0E00               	movlw	0
 43401  014B90  2244               	addwfc	i2___flmul@prod+1,f,c
 43402  014B92  2245               	addwfc	i2___flmul@prod+2,f,c
 43403  014B94  2246               	addwfc	i2___flmul@prod+3,f,c
 43404  014B96  A046               	btfss	i2___flmul@prod+3,0,c
 43405  014B98  D017               	goto	i2l2332
 43406  014B9A  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 43407  014B9E  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 43408  014BA2  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 43409  014BA6  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 43410  014BAA  343B               	rlcf	??i2___flmul+3,w,c
 43411  014BAC  323B               	rrcf	??i2___flmul+3,f,c
 43412  014BAE  323A               	rrcf	??i2___flmul+2,f,c
 43413  014BB0  3239               	rrcf	??i2___flmul+1,f,c
 43414  014BB2  3238               	rrcf	??i2___flmul,f,c
 43415  014BB4  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 43416  014BB8  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 43417  014BBC  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 43418  014BC0  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 43419  014BC4  4A47               	infsnz	i2___flmul@temp,f,c
 43420  014BC6  2A48               	incf	i2___flmul@temp+1,f,c
 43421  014BC8                     i2l2332:
 43422  014BC8  BE48               	btfsc	i2___flmul@temp+1,7,c
 43423  014BCA  D00D               	goto	i2l2333
 43424  014BCC  5048               	movf	i2___flmul@temp+1,w,c
 43425  014BCE  E103               	bnz	i2u1386_40
 43426  014BD0  2847               	incf	i2___flmul@temp,w,c
 43427  014BD2  A0D8               	btfss	status,0,c
 43428  014BD4  D008               	goto	i2l2333
 43429  014BD6                     i2u1386_40:
 43430  014BD6  0E00               	movlw	0
 43431  014BD8  6E43               	movwf	i2___flmul@prod,c
 43432  014BDA  0E00               	movlw	0
 43433  014BDC  6E44               	movwf	i2___flmul@prod+1,c
 43434  014BDE  0E80               	movlw	128
 43435  014BE0  6E45               	movwf	i2___flmul@prod+2,c
 43436  014BE2  0E7F               	movlw	127
 43437  014BE4  D020               	goto	L21
 43438  014BE6                     i2l2333:
 43439  014BE6  BE48               	btfsc	i2___flmul@temp+1,7,c
 43440  014BE8  D005               	goto	i2u1387_40
 43441  014BEA  5048               	movf	i2___flmul@temp+1,w,c
 43442  014BEC  E10E               	bnz	i2l2335
 43443  014BEE  0447               	decf	i2___flmul@temp,w,c
 43444  014BF0  B0D8               	btfsc	status,0,c
 43445  014BF2  D00B               	goto	i2l2335
 43446  014BF4                     i2u1387_40:
 43447  014BF4  0E00               	movlw	0
 43448  014BF6  6E43               	movwf	i2___flmul@prod,c
 43449  014BF8  0E00               	movlw	0
 43450  014BFA  6E44               	movwf	i2___flmul@prod+1,c
 43451  014BFC  0E00               	movlw	0
 43452  014BFE  6E45               	movwf	i2___flmul@prod+2,c
 43453  014C00  0E00               	movlw	0
 43454  014C02  6E46               	movwf	i2___flmul@prod+3,c
 43455  014C04  0E00               	movlw	0
 43456  014C06  6E3C               	movwf	i2___flmul@sign,c
 43457  014C08  D00F               	goto	i2l2336
 43458  014C0A                     i2l2335:
 43459  014C0A  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 43460  014C0E  0EFF               	movlw	255
 43461  014C10  1643               	andwf	i2___flmul@prod,f,c
 43462  014C12  0EFF               	movlw	255
 43463  014C14  1644               	andwf	i2___flmul@prod+1,f,c
 43464  014C16  0E7F               	movlw	127
 43465  014C18  1645               	andwf	i2___flmul@prod+2,f,c
 43466  014C1A  0E00               	movlw	0
 43467  014C1C  1646               	andwf	i2___flmul@prod+3,f,c
 43468  014C1E  B042               	btfsc	i2___flmul@bexp,0,c
 43469  014C20  8E45               	bsf	i2___flmul@prod+2,7,c
 43470  014C22  90D8               	bcf	status,0,c
 43471  014C24  3042               	rrcf	i2___flmul@bexp,w,c
 43472  014C26                     L21:
 43473  014C26  6E46               	movwf	i2___flmul@prod+3,c
 43474  014C28                     i2l2336:
 43475  014C28  503C               	movf	i2___flmul@sign,w,c
 43476  014C2A  1246               	iorwf	i2___flmul@prod+3,f,c
 43477  014C2C  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 43478  014C30  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 43479  014C34  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 43480  014C38  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 43481  014C3C  0012               	return	
 43482  014C3E                     __end_ofi2___flmul:
 43483                           	opt stack 0
 43484                           tosu	equ	0xFFF
 43485                           tosh	equ	0xFFE
 43486                           tosl	equ	0xFFD
 43487                           pclatu	equ	0xFFB
 43488                           pclath	equ	0xFFA
 43489                           tblptru	equ	0xFF8
 43490                           tblptrh	equ	0xFF7
 43491                           tblptrl	equ	0xFF6
 43492                           tablat	equ	0xFF5
 43493                           prodh	equ	0xFF4
 43494                           prodl	equ	0xFF3
 43495                           intcon	equ	0xFF2
 43496                           indf0	equ	0xFEF
 43497                           postinc0	equ	0xFEE
 43498                           fsr0h	equ	0xFEA
 43499                           fsr0l	equ	0xFE9
 43500                           wreg	equ	0xFE8
 43501                           indf1	equ	0xFE7
 43502                           postdec1	equ	0xFE5
 43503                           plusw1	equ	0xFE3
 43504                           fsr1h	equ	0xFE2
 43505                           fsr1l	equ	0xFE1
 43506                           bsr	equ	0xFE0
 43507                           indf2	equ	0xFDF
 43508                           postinc2	equ	0xFDE
 43509                           postdec2	equ	0xFDD
 43510                           plusw2	equ	0xFDB
 43511                           fsr2h	equ	0xFDA
 43512                           fsr2l	equ	0xFD9
 43513                           status	equ	0xFD8
 43514                           
 43515 ;; *************** function i2___fladd *****************
 43516 ;; Defined at:
 43517 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 43518 ;; Parameters:    Size  Location     Type
 43519 ;;  b               4   85[COMRAM] unsigned char 
 43520 ;;  a               4   89[COMRAM] unsigned char 
 43521 ;; Auto vars:     Size  Location     Type
 43522 ;;  __fladd         1   11[BANK0 ] unsigned char 
 43523 ;;  __fladd         1   10[BANK0 ] unsigned char 
 43524 ;;  __fladd         1    9[BANK0 ] unsigned char 
 43525 ;;  __fladd         1    8[BANK0 ] unsigned char 
 43526 ;; Return value:  Size  Location     Type
 43527 ;;                  4   85[COMRAM] unsigned char 
 43528 ;; Registers used:
 43529 ;;		wreg, status,2, status,0
 43530 ;; Tracked objects:
 43531 ;;		On entry : 0/0
 43532 ;;		On exit  : 0/0
 43533 ;;		Unchanged: 0/0
 43534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43536 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43537 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43538 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43539 ;;Total ram usage:       20 bytes
 43540 ;; Hardware stack levels used:    1
 43541 ;; This function calls:
 43542 ;;		Nothing
 43543 ;; This function is called by:
 43544 ;;		_peakToRMS
 43545 ;;		_ADCPostProcessingCallback
 43546 ;;		_acos
 43547 ;;		_asin
 43548 ;;		_atan
 43549 ;;		_eval_poly
 43550 ;;		_sin
 43551 ;;		_floor
 43552 ;;		i2_printf
 43553 ;;		i2___flsub
 43554 ;; This function uses a non-reentrant model
 43555 ;;
 43556                           
 43557                           	psect	text136
 43558  014F7C                     __ptext136:
 43559                           	opt stack 0
 43560  014F7C                     i2___fladd:
 43561                           	opt stack 15
 43562                           
 43563                           ;incstack = 0
 43564  014F7C  5059               	movf	i2___fladd@b+3,w,c
 43565  014F7E  0B80               	andlw	128
 43566  014F80  0100               	movlb	0	; () banked
 43567  014F82  6F68               	movwf	i2___fladd@signs& (0+255),b
 43568  014F84  5059               	movf	i2___fladd@b+3,w,c
 43569  014F86  2459               	addwf	i2___fladd@b+3,w,c
 43570  014F88  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 43571                           
 43572                           ; BSR set to: 0
 43573  014F8A  BE58               	btfsc	i2___fladd@b+2,7,c
 43574                           
 43575                           ; BSR set to: 0
 43576  014F8C  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 43577                           
 43578                           ; BSR set to: 0
 43579                           
 43580                           ; BSR set to: 0
 43581  014F8E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 43582  014F90  B4D8               	btfsc	status,2,c
 43583  014F92  D00D               	goto	i2l2221
 43584                           
 43585                           ; BSR set to: 0
 43586  014F94  296A               	incf	i2___fladd@bexp& (0+255),w,b
 43587  014F96  A4D8               	btfss	status,2,c
 43588  014F98  D008               	goto	i2l2222
 43589                           
 43590                           ; BSR set to: 0
 43591  014F9A  0E00               	movlw	0
 43592  014F9C  6E56               	movwf	i2___fladd@b,c
 43593  014F9E  0E00               	movlw	0
 43594  014FA0  6E57               	movwf	i2___fladd@b+1,c
 43595  014FA2  0E00               	movlw	0
 43596  014FA4  6E58               	movwf	i2___fladd@b+2,c
 43597  014FA6  0E00               	movlw	0
 43598  014FA8  6E59               	movwf	i2___fladd@b+3,c
 43599  014FAA                     i2l2222:
 43600                           
 43601                           ; BSR set to: 0
 43602                           
 43603                           ; BSR set to: 0
 43604  014FAA  8E58               	bsf	i2___fladd@b+2,7,c
 43605  014FAC  D006               	goto	L22
 43606  014FAE                     i2l2221:
 43607                           
 43608                           ; BSR set to: 0
 43609                           
 43610                           ; BSR set to: 0
 43611  014FAE  0E00               	movlw	0
 43612  014FB0  6E56               	movwf	i2___fladd@b,c
 43613  014FB2  0E00               	movlw	0
 43614  014FB4  6E57               	movwf	i2___fladd@b+1,c
 43615  014FB6  0E00               	movlw	0
 43616  014FB8  6E58               	movwf	i2___fladd@b+2,c
 43617  014FBA                     L22:
 43618  014FBA  0E00               	movlw	0
 43619  014FBC  6E59               	movwf	i2___fladd@b+3,c
 43620                           
 43621                           ; BSR set to: 0
 43622                           
 43623                           ; BSR set to: 0
 43624  014FBE  505D               	movf	i2___fladd@a+3,w,c
 43625  014FC0  0B80               	andlw	128
 43626  014FC2  6F69               	movwf	i2___fladd@aexp& (0+255),b
 43627                           
 43628                           ; BSR set to: 0
 43629  014FC4  5168               	movf	i2___fladd@signs& (0+255),w,b
 43630  014FC6  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 43631  014FC8  A4D8               	btfss	status,2,c
 43632                           
 43633                           ; BSR set to: 0
 43634  014FCA  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 43635                           
 43636                           ; BSR set to: 0
 43637                           
 43638                           ; BSR set to: 0
 43639  014FCC  505D               	movf	i2___fladd@a+3,w,c
 43640  014FCE  245D               	addwf	i2___fladd@a+3,w,c
 43641  014FD0  6F69               	movwf	i2___fladd@aexp& (0+255),b
 43642                           
 43643                           ; BSR set to: 0
 43644  014FD2  BE5C               	btfsc	i2___fladd@a+2,7,c
 43645                           
 43646                           ; BSR set to: 0
 43647  014FD4  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 43648                           
 43649                           ; BSR set to: 0
 43650                           
 43651                           ; BSR set to: 0
 43652  014FD6  5169               	movf	i2___fladd@aexp& (0+255),w,b
 43653  014FD8  B4D8               	btfsc	status,2,c
 43654  014FDA  D00D               	goto	i2l2226
 43655                           
 43656                           ; BSR set to: 0
 43657  014FDC  2969               	incf	i2___fladd@aexp& (0+255),w,b
 43658  014FDE  A4D8               	btfss	status,2,c
 43659  014FE0  D008               	goto	i2l2227
 43660                           
 43661                           ; BSR set to: 0
 43662  014FE2  0E00               	movlw	0
 43663  014FE4  6E5A               	movwf	i2___fladd@a,c
 43664  014FE6  0E00               	movlw	0
 43665  014FE8  6E5B               	movwf	i2___fladd@a+1,c
 43666  014FEA  0E00               	movlw	0
 43667  014FEC  6E5C               	movwf	i2___fladd@a+2,c
 43668  014FEE  0E00               	movlw	0
 43669  014FF0  6E5D               	movwf	i2___fladd@a+3,c
 43670  014FF2                     i2l2227:
 43671                           
 43672                           ; BSR set to: 0
 43673                           
 43674                           ; BSR set to: 0
 43675  014FF2  8E5C               	bsf	i2___fladd@a+2,7,c
 43676  014FF4  D006               	goto	L23
 43677  014FF6                     i2l2226:
 43678                           
 43679                           ; BSR set to: 0
 43680                           
 43681                           ; BSR set to: 0
 43682  014FF6  0E00               	movlw	0
 43683  014FF8  6E5A               	movwf	i2___fladd@a,c
 43684  014FFA  0E00               	movlw	0
 43685  014FFC  6E5B               	movwf	i2___fladd@a+1,c
 43686  014FFE  0E00               	movlw	0
 43687  015000  6E5C               	movwf	i2___fladd@a+2,c
 43688  015002                     L23:
 43689  015002  0E00               	movlw	0
 43690  015004  6E5D               	movwf	i2___fladd@a+3,c
 43691                           
 43692                           ; BSR set to: 0
 43693                           
 43694                           ; BSR set to: 0
 43695  015006  516A               	movf	i2___fladd@bexp& (0+255),w,b
 43696  015008  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 43697  01500A  B0D8               	btfsc	status,0,c
 43698  01500C  D022               	goto	i2l2229
 43699                           
 43700                           ; BSR set to: 0
 43701  01500E  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 43702  015010  D002               	goto	i2l2230
 43703                           
 43704                           ; BSR set to: 0
 43705  015012  0E80               	movlw	128
 43706  015014  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 43707  015016                     i2l2230:
 43708                           
 43709                           ; BSR set to: 0
 43710                           
 43711                           ; BSR set to: 0
 43712  015016  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 43713                           
 43714                           ; BSR set to: 0
 43715  01501A  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 43716                           
 43717                           ; BSR set to: 0
 43718  01501E  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 43719                           
 43720                           ; BSR set to: 0
 43721  015022  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 43722                           
 43723                           ; BSR set to: 0
 43724  015026  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 43725                           
 43726                           ; BSR set to: 0
 43727  01502A  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 43728                           
 43729                           ; BSR set to: 0
 43730  01502E  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 43731                           
 43732                           ; BSR set to: 0
 43733  015032  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 43734                           
 43735                           ; BSR set to: 0
 43736  015036  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 43737                           
 43738                           ; BSR set to: 0
 43739  01503A  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 43740                           
 43741                           ; BSR set to: 0
 43742  01503E  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 43743                           
 43744                           ; BSR set to: 0
 43745  015042  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 43746                           
 43747                           ; BSR set to: 0
 43748  015046  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 43749                           
 43750                           ; BSR set to: 0
 43751  01504A  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 43752                           
 43753                           ; BSR set to: 0
 43754  01504E  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 43755  015052                     i2l2229:
 43756                           
 43757                           ; BSR set to: 0
 43758                           
 43759                           ; BSR set to: 0
 43760  015052  0E00               	movlw	0
 43761  015054  6F6B               	movwf	i2___fladd@grs& (0+255),b
 43762                           
 43763                           ; BSR set to: 0
 43764  015056  516A               	movf	i2___fladd@bexp& (0+255),w,b
 43765  015058  6F60               	movwf	??i2___fladd& (0+255),b
 43766  01505A  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 43767  01505C  1F60               	comf	??i2___fladd& (0+255),f,b
 43768  01505E  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 43769  015060  4B60               	infsnz	??i2___fladd& (0+255),f,b
 43770  015062  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 43771  015064  5169               	movf	i2___fladd@aexp& (0+255),w,b
 43772  015066  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 43773  015068  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 43774  01506A  5160               	movf	??i2___fladd& (0+255),w,b
 43775  01506C  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 43776  01506E  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 43777  015070  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 43778  015072  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 43779  015074  D02C               	goto	i2l2233
 43780  015076  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 43781  015078  E104               	bnz	i2u1340_40
 43782  01507A  0E1A               	movlw	26
 43783  01507C  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 43784  01507E  A0D8               	btfss	status,0,c
 43785  015080  D026               	goto	i2l2233
 43786  015082                     i2u1340_40:
 43787                           
 43788                           ; BSR set to: 0
 43789  015082  5056               	movf	i2___fladd@b,w,c
 43790  015084  1057               	iorwf	i2___fladd@b+1,w,c
 43791  015086  1058               	iorwf	i2___fladd@b+2,w,c
 43792  015088  1059               	iorwf	i2___fladd@b+3,w,c
 43793  01508A  B4D8               	btfsc	status,2,c
 43794  01508C  D002               	goto	i2u1341_40
 43795  01508E  0E01               	movlw	1
 43796  015090  D001               	goto	i2u1342_40
 43797  015092                     i2u1341_40:
 43798  015092  0E00               	movlw	0
 43799  015094                     i2u1342_40:
 43800  015094  6F6B               	movwf	i2___fladd@grs& (0+255),b
 43801                           
 43802                           ; BSR set to: 0
 43803  015096  0E00               	movlw	0
 43804  015098  6E56               	movwf	i2___fladd@b,c
 43805  01509A  0E00               	movlw	0
 43806  01509C  6E57               	movwf	i2___fladd@b+1,c
 43807  01509E  0E00               	movlw	0
 43808  0150A0  6E58               	movwf	i2___fladd@b+2,c
 43809  0150A2  0E00               	movlw	0
 43810  0150A4  6E59               	movwf	i2___fladd@b+3,c
 43811                           
 43812                           ; BSR set to: 0
 43813  0150A6  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 43814  0150AA  D015               	goto	i2u1345_40
 43815  0150AC                     i2l2234:
 43816                           
 43817                           ; BSR set to: 0
 43818  0150AC  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 43819  0150AE  D005               	goto	i2l2235
 43820                           
 43821                           ; BSR set to: 0
 43822  0150B0  90D8               	bcf	status,0,c
 43823  0150B2  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 43824  0150B4  0901               	iorlw	1
 43825  0150B6  6F6B               	movwf	i2___fladd@grs& (0+255),b
 43826  0150B8  D002               	goto	i2l2236
 43827  0150BA                     i2l2235:
 43828                           
 43829                           ; BSR set to: 0
 43830                           
 43831                           ; BSR set to: 0
 43832  0150BA  90D8               	bcf	status,0,c
 43833  0150BC  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 43834  0150BE                     i2l2236:
 43835                           
 43836                           ; BSR set to: 0
 43837                           
 43838                           ; BSR set to: 0
 43839  0150BE  B056               	btfsc	i2___fladd@b,0,c
 43840                           
 43841                           ; BSR set to: 0
 43842  0150C0  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 43843                           
 43844                           ; BSR set to: 0
 43845                           
 43846                           ; BSR set to: 0
 43847  0150C2  3459               	rlcf	i2___fladd@b+3,w,c
 43848  0150C4  3259               	rrcf	i2___fladd@b+3,f,c
 43849  0150C6  3258               	rrcf	i2___fladd@b+2,f,c
 43850  0150C8  3257               	rrcf	i2___fladd@b+1,f,c
 43851  0150CA  3256               	rrcf	i2___fladd@b,f,c
 43852                           
 43853                           ; BSR set to: 0
 43854  0150CC  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 43855  0150CE                     i2l2233:
 43856                           
 43857                           ; BSR set to: 0
 43858  0150CE  5169               	movf	i2___fladd@aexp& (0+255),w,b
 43859  0150D0  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 43860  0150D2  A0D8               	btfss	status,0,c
 43861  0150D4  D7EB               	goto	i2l2234
 43862  0150D6                     i2u1345_40:
 43863                           
 43864                           ; BSR set to: 0
 43865                           
 43866                           ; BSR set to: 0
 43867  0150D6  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 43868  0150D8  D029               	goto	i2l2239
 43869                           
 43870                           ; BSR set to: 0
 43871  0150DA  516A               	movf	i2___fladd@bexp& (0+255),w,b
 43872  0150DC  A4D8               	btfss	status,2,c
 43873  0150DE  D009               	goto	i2l2240
 43874                           
 43875                           ; BSR set to: 0
 43876  0150E0  0E00               	movlw	0
 43877  0150E2  6E56               	movwf	?i2___fladd,c
 43878  0150E4  0E00               	movlw	0
 43879  0150E6  6E57               	movwf	?i2___fladd+1,c
 43880  0150E8  0E00               	movlw	0
 43881  0150EA  6E58               	movwf	?i2___fladd+2,c
 43882  0150EC  0E00               	movlw	0
 43883  0150EE  6E59               	movwf	?i2___fladd+3,c
 43884                           
 43885                           ; BSR set to: 0
 43886  0150F0  0012               	return	
 43887  0150F2                     i2l2240:
 43888                           
 43889                           ; BSR set to: 0
 43890                           
 43891                           ; BSR set to: 0
 43892  0150F2  505A               	movf	i2___fladd@a,w,c
 43893  0150F4  2656               	addwf	i2___fladd@b,f,c
 43894  0150F6  505B               	movf	i2___fladd@a+1,w,c
 43895  0150F8  2257               	addwfc	i2___fladd@b+1,f,c
 43896  0150FA  505C               	movf	i2___fladd@a+2,w,c
 43897  0150FC  2258               	addwfc	i2___fladd@b+2,f,c
 43898  0150FE  505D               	movf	i2___fladd@a+3,w,c
 43899  015100  2259               	addwfc	i2___fladd@b+3,f,c
 43900                           
 43901                           ; BSR set to: 0
 43902  015102  A059               	btfss	i2___fladd@b+3,0,c
 43903  015104  D083               	goto	i2u1358_40
 43904                           
 43905                           ; BSR set to: 0
 43906  015106  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 43907  015108  D006               	goto	i2l2243
 43908                           
 43909                           ; BSR set to: 0
 43910  01510A  90D8               	bcf	status,0,c
 43911  01510C  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 43912  01510E  516B               	movf	i2___fladd@grs& (0+255),w,b
 43913  015110  0901               	iorlw	1
 43914  015112  6F6B               	movwf	i2___fladd@grs& (0+255),b
 43915  015114  D002               	goto	i2l2244
 43916  015116                     i2l2243:
 43917                           
 43918                           ; BSR set to: 0
 43919                           
 43920                           ; BSR set to: 0
 43921  015116  90D8               	bcf	status,0,c
 43922  015118  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 43923  01511A                     i2l2244:
 43924                           
 43925                           ; BSR set to: 0
 43926                           
 43927                           ; BSR set to: 0
 43928  01511A  B056               	btfsc	i2___fladd@b,0,c
 43929                           
 43930                           ; BSR set to: 0
 43931  01511C  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 43932                           
 43933                           ; BSR set to: 0
 43934                           
 43935                           ; BSR set to: 0
 43936  01511E  3459               	rlcf	i2___fladd@b+3,w,c
 43937  015120  3259               	rrcf	i2___fladd@b+3,f,c
 43938  015122  3258               	rrcf	i2___fladd@b+2,f,c
 43939  015124  3257               	rrcf	i2___fladd@b+1,f,c
 43940  015126  3256               	rrcf	i2___fladd@b,f,c
 43941                           
 43942                           ; BSR set to: 0
 43943  015128  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 43944                           
 43945                           ; BSR set to: 0
 43946  01512A  D070               	goto	i2u1358_40
 43947  01512C                     i2l2239:
 43948                           
 43949                           ; BSR set to: 0
 43950                           
 43951                           ; BSR set to: 0
 43952  01512C  505A               	movf	i2___fladd@a,w,c
 43953  01512E  5C56               	subwf	i2___fladd@b,w,c
 43954  015130  505B               	movf	i2___fladd@a+1,w,c
 43955  015132  5857               	subwfb	i2___fladd@b+1,w,c
 43956  015134  505C               	movf	i2___fladd@a+2,w,c
 43957  015136  5858               	subwfb	i2___fladd@b+2,w,c
 43958  015138  5059               	movf	i2___fladd@b+3,w,c
 43959  01513A  0A80               	xorlw	128
 43960  01513C  6F60               	movwf	??i2___fladd& (0+255),b
 43961  01513E  505D               	movf	i2___fladd@a+3,w,c
 43962  015140  0A80               	xorlw	128
 43963  015142  5960               	subwfb	??i2___fladd& (0+255),w,b
 43964  015144  B0D8               	btfsc	status,0,c
 43965  015146  D036               	goto	i2l2247
 43966                           
 43967                           ; BSR set to: 0
 43968  015148  C056  F060         	movff	i2___fladd@b,??i2___fladd
 43969  01514C  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 43970  015150  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 43971  015154  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 43972  015158  1F60               	comf	??i2___fladd& (0+255),f,b
 43973  01515A  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 43974  01515C  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 43975  01515E  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 43976  015160  2B60               	incf	??i2___fladd& (0+255),f,b
 43977  015162  0E00               	movlw	0
 43978  015164  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 43979  015166  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 43980  015168  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 43981  01516A  505A               	movf	i2___fladd@a,w,c
 43982  01516C  2560               	addwf	??i2___fladd& (0+255),w,b
 43983  01516E  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 43984  015170  505B               	movf	i2___fladd@a+1,w,c
 43985  015172  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 43986  015174  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 43987  015176  505C               	movf	i2___fladd@a+2,w,c
 43988  015178  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 43989  01517A  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 43990  01517C  505D               	movf	i2___fladd@a+3,w,c
 43991  01517E  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 43992  015180  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 43993  015182  0EFF               	movlw	255
 43994  015184  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 43995  015186  6E56               	movwf	i2___fladd@b,c
 43996  015188  0EFF               	movlw	255
 43997  01518A  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 43998  01518C  6E57               	movwf	i2___fladd@b+1,c
 43999  01518E  0EFF               	movlw	255
 44000  015190  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 44001  015192  6E58               	movwf	i2___fladd@b+2,c
 44002  015194  0EFF               	movlw	255
 44003  015196  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 44004  015198  6E59               	movwf	i2___fladd@b+3,c
 44005  01519A  0E80               	movlw	128
 44006  01519C  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 44007                           
 44008                           ; BSR set to: 0
 44009  01519E  6D6B               	negf	i2___fladd@grs& (0+255),b
 44010                           
 44011                           ; BSR set to: 0
 44012  0151A0  516B               	movf	i2___fladd@grs& (0+255),w,b
 44013  0151A2  A4D8               	btfss	status,2,c
 44014  0151A4  D00F               	goto	i2l2249
 44015                           
 44016                           ; BSR set to: 0
 44017  0151A6  0E01               	movlw	1
 44018  0151A8  2656               	addwf	i2___fladd@b,f,c
 44019  0151AA  0E00               	movlw	0
 44020  0151AC  2257               	addwfc	i2___fladd@b+1,f,c
 44021  0151AE  2258               	addwfc	i2___fladd@b+2,f,c
 44022  0151B0  2259               	addwfc	i2___fladd@b+3,f,c
 44023                           
 44024                           ; BSR set to: 0
 44025  0151B2  D008               	goto	i2l2249
 44026  0151B4                     i2l2247:
 44027                           
 44028                           ; BSR set to: 0
 44029                           
 44030                           ; BSR set to: 0
 44031  0151B4  505A               	movf	i2___fladd@a,w,c
 44032  0151B6  5E56               	subwf	i2___fladd@b,f,c
 44033  0151B8  505B               	movf	i2___fladd@a+1,w,c
 44034  0151BA  5A57               	subwfb	i2___fladd@b+1,f,c
 44035  0151BC  505C               	movf	i2___fladd@a+2,w,c
 44036  0151BE  5A58               	subwfb	i2___fladd@b+2,f,c
 44037  0151C0  505D               	movf	i2___fladd@a+3,w,c
 44038  0151C2  5A59               	subwfb	i2___fladd@b+3,f,c
 44039  0151C4                     i2l2249:
 44040                           
 44041                           ; BSR set to: 0
 44042  0151C4  5056               	movf	i2___fladd@b,w,c
 44043  0151C6  1057               	iorwf	i2___fladd@b+1,w,c
 44044  0151C8  1058               	iorwf	i2___fladd@b+2,w,c
 44045  0151CA  1059               	iorwf	i2___fladd@b+3,w,c
 44046  0151CC  A4D8               	btfss	status,2,c
 44047  0151CE  D01C               	goto	i2l2256
 44048                           
 44049                           ; BSR set to: 0
 44050  0151D0  516B               	movf	i2___fladd@grs& (0+255),w,b
 44051  0151D2  A4D8               	btfss	status,2,c
 44052  0151D4  D019               	goto	i2l2256
 44053                           
 44054                           ; BSR set to: 0
 44055  0151D6  0E00               	movlw	0
 44056  0151D8  6E56               	movwf	?i2___fladd,c
 44057  0151DA  0E00               	movlw	0
 44058  0151DC  6E57               	movwf	?i2___fladd+1,c
 44059  0151DE  0E00               	movlw	0
 44060  0151E0  6E58               	movwf	?i2___fladd+2,c
 44061  0151E2  0E00               	movlw	0
 44062  0151E4  6E59               	movwf	?i2___fladd+3,c
 44063                           
 44064                           ; BSR set to: 0
 44065  0151E6  0012               	return	
 44066  0151E8                     
 44067                           ; BSR set to: 0
 44068                           
 44069                           ; BSR set to: 0
 44070  0151E8  90D8               	bcf	status,0,c
 44071  0151EA  3656               	rlcf	i2___fladd@b,f,c
 44072  0151EC  3657               	rlcf	i2___fladd@b+1,f,c
 44073  0151EE  3658               	rlcf	i2___fladd@b+2,f,c
 44074  0151F0  3659               	rlcf	i2___fladd@b+3,f,c
 44075                           
 44076                           ; BSR set to: 0
 44077  0151F2  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 44078                           
 44079                           ; BSR set to: 0
 44080  0151F4  8056               	bsf	i2___fladd@b,0,c
 44081                           
 44082                           ; BSR set to: 0
 44083                           
 44084                           ; BSR set to: 0
 44085  0151F6  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 44086  0151F8  D002               	goto	i2l2254
 44087                           
 44088                           ; BSR set to: 0
 44089  0151FA  80D8               	bsf	status,0,c
 44090  0151FC  D001               	goto	L24
 44091  0151FE                     i2l2254:
 44092                           
 44093                           ; BSR set to: 0
 44094                           
 44095                           ; BSR set to: 0
 44096  0151FE  90D8               	bcf	status,0,c
 44097  015200                     L24:
 44098  015200  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 44099                           
 44100                           ; BSR set to: 0
 44101                           
 44102                           ; BSR set to: 0
 44103  015202  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44104  015204  A4D8               	btfss	status,2,c
 44105                           
 44106                           ; BSR set to: 0
 44107  015206  076A               	decf	i2___fladd@bexp& (0+255),f,b
 44108  015208                     i2l2256:
 44109                           
 44110                           ; BSR set to: 0
 44111                           
 44112                           ; BSR set to: 0
 44113                           
 44114                           ; BSR set to: 0
 44115  015208  AE58               	btfss	i2___fladd@b+2,7,c
 44116  01520A  D7EE               	goto	i2l2252
 44117  01520C                     i2u1358_40:
 44118                           
 44119                           ; BSR set to: 0
 44120                           
 44121                           ; BSR set to: 0
 44122                           
 44123                           ; BSR set to: 0
 44124  01520C  0E00               	movlw	0
 44125  01520E  6F69               	movwf	i2___fladd@aexp& (0+255),b
 44126                           
 44127                           ; BSR set to: 0
 44128  015210  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 44129  015212  D00A               	goto	i2l2261
 44130                           
 44131                           ; BSR set to: 0
 44132  015214  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 44133  015218  0E7F               	movlw	127
 44134  01521A  1760               	andwf	??i2___fladd& (0+255),f,b
 44135  01521C  A4D8               	btfss	status,2,c
 44136  01521E  D002               	goto	i2u1361_40
 44137                           
 44138                           ; BSR set to: 0
 44139                           
 44140                           ; BSR set to: 0
 44141  015220  A056               	btfss	i2___fladd@b,0,c
 44142  015222  D002               	goto	i2l2261
 44143  015224                     i2u1361_40:
 44144                           
 44145                           ; BSR set to: 0
 44146  015224  0E01               	movlw	1
 44147  015226  6F69               	movwf	i2___fladd@aexp& (0+255),b
 44148  015228                     i2l2261:
 44149                           
 44150                           ; BSR set to: 0
 44151                           
 44152                           ; BSR set to: 0
 44153                           
 44154                           ; BSR set to: 0
 44155  015228  5169               	movf	i2___fladd@aexp& (0+255),w,b
 44156  01522A  B4D8               	btfsc	status,2,c
 44157  01522C  D020               	goto	i2l2264
 44158                           
 44159                           ; BSR set to: 0
 44160  01522E  0E01               	movlw	1
 44161  015230  2656               	addwf	i2___fladd@b,f,c
 44162  015232  0E00               	movlw	0
 44163  015234  2257               	addwfc	i2___fladd@b+1,f,c
 44164  015236  2258               	addwfc	i2___fladd@b+2,f,c
 44165  015238  2259               	addwfc	i2___fladd@b+3,f,c
 44166                           
 44167                           ; BSR set to: 0
 44168  01523A  A059               	btfss	i2___fladd@b+3,0,c
 44169  01523C  D018               	goto	i2l2264
 44170                           
 44171                           ; BSR set to: 0
 44172  01523E  C056  F060         	movff	i2___fladd@b,??i2___fladd
 44173  015242  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 44174  015246  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 44175  01524A  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 44176  01524E  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 44177  015250  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 44178  015252  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 44179  015254  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 44180  015256  3360               	rrcf	??i2___fladd& (0+255),f,b
 44181  015258  C060  F056         	movff	??i2___fladd,i2___fladd@b
 44182  01525C  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 44183  015260  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 44184  015264  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 44185  015268  296A               	incf	i2___fladd@bexp& (0+255),w,b
 44186  01526A  A4D8               	btfss	status,2,c
 44187                           
 44188                           ; BSR set to: 0
 44189  01526C  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 44190  01526E                     i2l2264:
 44191                           
 44192                           ; BSR set to: 0
 44193                           
 44194                           ; BSR set to: 0
 44195                           
 44196                           ; BSR set to: 0
 44197                           
 44198                           ; BSR set to: 0
 44199  01526E  296A               	incf	i2___fladd@bexp& (0+255),w,b
 44200  015270  B4D8               	btfsc	status,2,c
 44201  015272  D003               	goto	i2u1366_40
 44202                           
 44203                           ; BSR set to: 0
 44204  015274  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44205  015276  A4D8               	btfss	status,2,c
 44206  015278  D00D               	goto	i2l2268
 44207  01527A                     i2u1366_40:
 44208                           
 44209                           ; BSR set to: 0
 44210                           
 44211                           ; BSR set to: 0
 44212  01527A  0E00               	movlw	0
 44213  01527C  6E56               	movwf	i2___fladd@b,c
 44214  01527E  0E00               	movlw	0
 44215  015280  6E57               	movwf	i2___fladd@b+1,c
 44216  015282  0E00               	movlw	0
 44217  015284  6E58               	movwf	i2___fladd@b+2,c
 44218  015286  0E00               	movlw	0
 44219  015288  6E59               	movwf	i2___fladd@b+3,c
 44220  01528A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44221  01528C  A4D8               	btfss	status,2,c
 44222  01528E  D002               	goto	i2l2268
 44223                           
 44224                           ; BSR set to: 0
 44225  015290  0E00               	movlw	0
 44226  015292  6F68               	movwf	i2___fladd@signs& (0+255),b
 44227  015294                     i2l2268:
 44228                           
 44229                           ; BSR set to: 0
 44230                           
 44231                           ; BSR set to: 0
 44232                           
 44233                           ; BSR set to: 0
 44234  015294  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 44235  015296  D002               	goto	i2l2269
 44236                           
 44237                           ; BSR set to: 0
 44238  015298  8E58               	bsf	i2___fladd@b+2,7,c
 44239  01529A  D001               	goto	i2l2270
 44240  01529C                     i2l2269:
 44241                           
 44242                           ; BSR set to: 0
 44243                           
 44244                           ; BSR set to: 0
 44245  01529C  9E58               	bcf	i2___fladd@b+2,7,c
 44246  01529E                     i2l2270:
 44247                           
 44248                           ; BSR set to: 0
 44249                           
 44250                           ; BSR set to: 0
 44251  01529E  90D8               	bcf	status,0,c
 44252  0152A0  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 44253  0152A2  6E59               	movwf	i2___fladd@b+3,c
 44254                           
 44255                           ; BSR set to: 0
 44256  0152A4  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 44257                           
 44258                           ; BSR set to: 0
 44259  0152A6  8E59               	bsf	i2___fladd@b+3,7,c
 44260                           
 44261                           ; BSR set to: 0
 44262                           
 44263                           ; BSR set to: 0
 44264  0152A8  C056  F056         	movff	i2___fladd@b,?i2___fladd
 44265  0152AC  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 44266  0152B0  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 44267  0152B4  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 44268  0152B8  0012               	return	
 44269  0152BA                     __end_ofi2___fladd:
 44270                           	opt stack 0
 44271                           tosu	equ	0xFFF
 44272                           tosh	equ	0xFFE
 44273                           tosl	equ	0xFFD
 44274                           pclatu	equ	0xFFB
 44275                           pclath	equ	0xFFA
 44276                           tblptru	equ	0xFF8
 44277                           tblptrh	equ	0xFF7
 44278                           tblptrl	equ	0xFF6
 44279                           tablat	equ	0xFF5
 44280                           prodh	equ	0xFF4
 44281                           prodl	equ	0xFF3
 44282                           intcon	equ	0xFF2
 44283                           indf0	equ	0xFEF
 44284                           postinc0	equ	0xFEE
 44285                           fsr0h	equ	0xFEA
 44286                           fsr0l	equ	0xFE9
 44287                           wreg	equ	0xFE8
 44288                           indf1	equ	0xFE7
 44289                           postdec1	equ	0xFE5
 44290                           plusw1	equ	0xFE3
 44291                           fsr1h	equ	0xFE2
 44292                           fsr1l	equ	0xFE1
 44293                           bsr	equ	0xFE0
 44294                           indf2	equ	0xFDF
 44295                           postinc2	equ	0xFDE
 44296                           postdec2	equ	0xFDD
 44297                           plusw2	equ	0xFDB
 44298                           fsr2h	equ	0xFDA
 44299                           fsr2l	equ	0xFD9
 44300                           status	equ	0xFD8
 44301                           
 44302 ;; *************** function _abs *****************
 44303 ;; Defined at:
 44304 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 44305 ;; Parameters:    Size  Location     Type
 44306 ;;  a               2   22[BANK0 ] int 
 44307 ;; Auto vars:     Size  Location     Type
 44308 ;;		None
 44309 ;; Return value:  Size  Location     Type
 44310 ;;                  2   22[BANK0 ] int 
 44311 ;; Registers used:
 44312 ;;		wreg, status,2, status,0
 44313 ;; Tracked objects:
 44314 ;;		On entry : 0/0
 44315 ;;		On exit  : 0/0
 44316 ;;		Unchanged: 0/0
 44317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44320 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44321 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44322 ;;Total ram usage:        4 bytes
 44323 ;; Hardware stack levels used:    1
 44324 ;; This function calls:
 44325 ;;		Nothing
 44326 ;; This function is called by:
 44327 ;;		_ADCPostProcessingCallback
 44328 ;; This function uses a non-reentrant model
 44329 ;;
 44330                           
 44331                           	psect	text137
 44332  019070                     __ptext137:
 44333                           	opt stack 0
 44334  019070                     _abs:
 44335                           	opt stack 16
 44336                           
 44337                           ; BSR set to: 0
 44338                           ;incstack = 0
 44339  019070  0100               	movlb	0	; () banked
 44340  019072  AF77               	btfss	(abs@a+1)& (0+255),7,b
 44341  019074  D00D               	goto	i2l1716
 44342                           
 44343                           ; BSR set to: 0
 44344  019076  C076  F078         	movff	abs@a,??_abs
 44345  01907A  C077  F079         	movff	abs@a+1,??_abs+1
 44346  01907E  1F78               	comf	??_abs& (0+255),f,b
 44347  019080  1F79               	comf	(??_abs+1)& (0+255),f,b
 44348  019082  4B78               	infsnz	??_abs& (0+255),f,b
 44349  019084  2B79               	incf	(??_abs+1)& (0+255),f,b
 44350  019086  C078  F076         	movff	??_abs,?_abs
 44351  01908A  C079  F077         	movff	??_abs+1,?_abs+1
 44352  01908E  0012               	return	
 44353  019090                     i2l1716:
 44354                           
 44355                           ; BSR set to: 0
 44356  019090  C076  F076         	movff	abs@a,?_abs
 44357  019094  C077  F077         	movff	abs@a+1,?_abs+1
 44358                           
 44359                           ; BSR set to: 0
 44360  019098  0012               	return		;funcret
 44361  01909A                     __end_of_abs:
 44362                           	opt stack 0
 44363                           tosu	equ	0xFFF
 44364                           tosh	equ	0xFFE
 44365                           tosl	equ	0xFFD
 44366                           pclatu	equ	0xFFB
 44367                           pclath	equ	0xFFA
 44368                           tblptru	equ	0xFF8
 44369                           tblptrh	equ	0xFF7
 44370                           tblptrl	equ	0xFF6
 44371                           tablat	equ	0xFF5
 44372                           prodh	equ	0xFF4
 44373                           prodl	equ	0xFF3
 44374                           intcon	equ	0xFF2
 44375                           indf0	equ	0xFEF
 44376                           postinc0	equ	0xFEE
 44377                           fsr0h	equ	0xFEA
 44378                           fsr0l	equ	0xFE9
 44379                           wreg	equ	0xFE8
 44380                           indf1	equ	0xFE7
 44381                           postdec1	equ	0xFE5
 44382                           plusw1	equ	0xFE3
 44383                           fsr1h	equ	0xFE2
 44384                           fsr1l	equ	0xFE1
 44385                           bsr	equ	0xFE0
 44386                           indf2	equ	0xFDF
 44387                           postinc2	equ	0xFDE
 44388                           postdec2	equ	0xFDD
 44389                           plusw2	equ	0xFDB
 44390                           fsr2h	equ	0xFDA
 44391                           fsr2l	equ	0xFD9
 44392                           status	equ	0xFD8
 44393                           
 44394 ;; *************** function _ADCC_StopConversion *****************
 44395 ;; Defined at:
 44396 ;;		line 162 in file "mcc_generated_files/adcc.c"
 44397 ;; Parameters:    Size  Location     Type
 44398 ;;		None
 44399 ;; Auto vars:     Size  Location     Type
 44400 ;;		None
 44401 ;; Return value:  Size  Location     Type
 44402 ;;                  1    wreg      void 
 44403 ;; Registers used:
 44404 ;;		None
 44405 ;; Tracked objects:
 44406 ;;		On entry : 0/0
 44407 ;;		On exit  : 0/0
 44408 ;;		Unchanged: 0/0
 44409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44414 ;;Total ram usage:        0 bytes
 44415 ;; Hardware stack levels used:    1
 44416 ;; This function calls:
 44417 ;;		Nothing
 44418 ;; This function is called by:
 44419 ;;		_ADCPostProcessingCallback
 44420 ;; This function uses a non-reentrant model
 44421 ;;
 44422                           
 44423                           	psect	text138
 44424  019472                     __ptext138:
 44425                           	opt stack 0
 44426  019472                     _ADCC_StopConversion:
 44427                           	opt stack 16
 44428                           
 44429                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 44430                           
 44431                           ; BSR set to: 0
 44432                           ;incstack = 0
 44433  019472  9060               	bcf	3936,0,c	;volatile
 44434  019474  0012               	return		;funcret
 44435  019476                     __end_of_ADCC_StopConversion:
 44436                           	opt stack 0
 44437                           tosu	equ	0xFFF
 44438                           tosh	equ	0xFFE
 44439                           tosl	equ	0xFFD
 44440                           pclatu	equ	0xFFB
 44441                           pclath	equ	0xFFA
 44442                           tblptru	equ	0xFF8
 44443                           tblptrh	equ	0xFF7
 44444                           tblptrl	equ	0xFF6
 44445                           tablat	equ	0xFF5
 44446                           prodh	equ	0xFF4
 44447                           prodl	equ	0xFF3
 44448                           intcon	equ	0xFF2
 44449                           indf0	equ	0xFEF
 44450                           postinc0	equ	0xFEE
 44451                           fsr0h	equ	0xFEA
 44452                           fsr0l	equ	0xFE9
 44453                           wreg	equ	0xFE8
 44454                           indf1	equ	0xFE7
 44455                           postdec1	equ	0xFE5
 44456                           plusw1	equ	0xFE3
 44457                           fsr1h	equ	0xFE2
 44458                           fsr1l	equ	0xFE1
 44459                           bsr	equ	0xFE0
 44460                           indf2	equ	0xFDF
 44461                           postinc2	equ	0xFDE
 44462                           postdec2	equ	0xFDD
 44463                           plusw2	equ	0xFDB
 44464                           fsr2h	equ	0xFDA
 44465                           fsr2l	equ	0xFD9
 44466                           status	equ	0xFD8
 44467                           
 44468 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 44469 ;; Defined at:
 44470 ;;		line 216 in file "mcc_generated_files/adcc.c"
 44471 ;; Parameters:    Size  Location     Type
 44472 ;;		None
 44473 ;; Auto vars:     Size  Location     Type
 44474 ;;		None
 44475 ;; Return value:  Size  Location     Type
 44476 ;;                  1    wreg      unsigned char 
 44477 ;; Registers used:
 44478 ;;		wreg
 44479 ;; Tracked objects:
 44480 ;;		On entry : 0/0
 44481 ;;		On exit  : 0/0
 44482 ;;		Unchanged: 0/0
 44483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44488 ;;Total ram usage:        0 bytes
 44489 ;; Hardware stack levels used:    1
 44490 ;; This function calls:
 44491 ;;		Nothing
 44492 ;; This function is called by:
 44493 ;;		_ADCPostProcessingCallback
 44494 ;; This function uses a non-reentrant model
 44495 ;;
 44496                           
 44497                           	psect	text139
 44498  019416                     __ptext139:
 44499                           	opt stack 0
 44500  019416                     _ADCC_HasAccumulatorOverflowed:
 44501                           	opt stack 16
 44502                           
 44503                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 44504                           
 44505                           ;incstack = 0
 44506  019416  AE65               	btfss	3941,7,c	;volatile
 44507  019418  D002               	goto	i2u1702_40
 44508  01941A  0E01               	movlw	1
 44509  01941C  0012               	return	
 44510  01941E                     i2u1702_40:
 44511  01941E  0E00               	movlw	0
 44512  019420  0012               	return	
 44513  019422                     __end_of_ADCC_HasAccumulatorOverflowed:
 44514                           	opt stack 0
 44515                           tosu	equ	0xFFF
 44516                           tosh	equ	0xFFE
 44517                           tosl	equ	0xFFD
 44518                           pclatu	equ	0xFFB
 44519                           pclath	equ	0xFFA
 44520                           tblptru	equ	0xFF8
 44521                           tblptrh	equ	0xFF7
 44522                           tblptrl	equ	0xFF6
 44523                           tablat	equ	0xFF5
 44524                           prodh	equ	0xFF4
 44525                           prodl	equ	0xFF3
 44526                           intcon	equ	0xFF2
 44527                           indf0	equ	0xFEF
 44528                           postinc0	equ	0xFEE
 44529                           fsr0h	equ	0xFEA
 44530                           fsr0l	equ	0xFE9
 44531                           wreg	equ	0xFE8
 44532                           indf1	equ	0xFE7
 44533                           postdec1	equ	0xFE5
 44534                           plusw1	equ	0xFE3
 44535                           fsr1h	equ	0xFE2
 44536                           fsr1l	equ	0xFE1
 44537                           bsr	equ	0xFE0
 44538                           indf2	equ	0xFDF
 44539                           postinc2	equ	0xFDE
 44540                           postdec2	equ	0xFDD
 44541                           plusw2	equ	0xFDB
 44542                           fsr2h	equ	0xFDA
 44543                           fsr2l	equ	0xFD9
 44544                           status	equ	0xFD8
 44545                           
 44546 ;; *************** function _ADCC_GetFilterValue *****************
 44547 ;; Defined at:
 44548 ;;		line 222 in file "mcc_generated_files/adcc.c"
 44549 ;; Parameters:    Size  Location     Type
 44550 ;;		None
 44551 ;; Auto vars:     Size  Location     Type
 44552 ;;		None
 44553 ;; Return value:  Size  Location     Type
 44554 ;;                  2    0[COMRAM] unsigned int 
 44555 ;; Registers used:
 44556 ;;		wreg, status,2, status,0
 44557 ;; Tracked objects:
 44558 ;;		On entry : 0/0
 44559 ;;		On exit  : 0/0
 44560 ;;		Unchanged: 0/0
 44561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44565 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44566 ;;Total ram usage:        4 bytes
 44567 ;; Hardware stack levels used:    1
 44568 ;; This function calls:
 44569 ;;		Nothing
 44570 ;; This function is called by:
 44571 ;;		_ADCPostProcessingCallback
 44572 ;; This function uses a non-reentrant model
 44573 ;;
 44574                           
 44575                           	psect	text140
 44576  019300                     __ptext140:
 44577                           	opt stack 0
 44578  019300                     _ADCC_GetFilterValue:
 44579                           	opt stack 16
 44580                           
 44581                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 44582                           
 44583                           ;incstack = 0
 44584  019300  5073               	movf	3955,w,c	;volatile
 44585  019302  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 44586  019304  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 44587  019306  5072               	movf	3954,w,c	;volatile
 44588  019308  2403               	addwf	??_ADCC_GetFilterValue,w,c
 44589  01930A  6E01               	movwf	?_ADCC_GetFilterValue,c
 44590  01930C  0E00               	movlw	0
 44591  01930E  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 44592  019310  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 44593  019312  0012               	return	
 44594  019314                     __end_of_ADCC_GetFilterValue:
 44595                           	opt stack 0
 44596                           tosu	equ	0xFFF
 44597                           tosh	equ	0xFFE
 44598                           tosl	equ	0xFFD
 44599                           pclatu	equ	0xFFB
 44600                           pclath	equ	0xFFA
 44601                           tblptru	equ	0xFF8
 44602                           tblptrh	equ	0xFF7
 44603                           tblptrl	equ	0xFF6
 44604                           tablat	equ	0xFF5
 44605                           prodh	equ	0xFF4
 44606                           prodl	equ	0xFF3
 44607                           intcon	equ	0xFF2
 44608                           indf0	equ	0xFEF
 44609                           postinc0	equ	0xFEE
 44610                           fsr0h	equ	0xFEA
 44611                           fsr0l	equ	0xFE9
 44612                           wreg	equ	0xFE8
 44613                           indf1	equ	0xFE7
 44614                           postdec1	equ	0xFE5
 44615                           plusw1	equ	0xFE3
 44616                           fsr1h	equ	0xFE2
 44617                           fsr1l	equ	0xFE1
 44618                           bsr	equ	0xFE0
 44619                           indf2	equ	0xFDF
 44620                           postinc2	equ	0xFDE
 44621                           postdec2	equ	0xFDD
 44622                           plusw2	equ	0xFDB
 44623                           fsr2h	equ	0xFDA
 44624                           fsr2l	equ	0xFD9
 44625                           status	equ	0xFD8
 44626                           
 44627 ;; *************** function _ADCC_GetConversionResult *****************
 44628 ;; Defined at:
 44629 ;;		line 130 in file "mcc_generated_files/adcc.c"
 44630 ;; Parameters:    Size  Location     Type
 44631 ;;		None
 44632 ;; Auto vars:     Size  Location     Type
 44633 ;;		None
 44634 ;; Return value:  Size  Location     Type
 44635 ;;                  2    0[COMRAM] unsigned int 
 44636 ;; Registers used:
 44637 ;;		wreg, status,2, status,0
 44638 ;; Tracked objects:
 44639 ;;		On entry : 0/0
 44640 ;;		On exit  : 0/0
 44641 ;;		Unchanged: 0/0
 44642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44647 ;;Total ram usage:        4 bytes
 44648 ;; Hardware stack levels used:    1
 44649 ;; This function calls:
 44650 ;;		Nothing
 44651 ;; This function is called by:
 44652 ;;		_ADCPostProcessingCallback
 44653 ;; This function uses a non-reentrant model
 44654 ;;
 44655                           
 44656                           	psect	text141
 44657  019314                     __ptext141:
 44658                           	opt stack 0
 44659  019314                     _ADCC_GetConversionResult:
 44660                           	opt stack 16
 44661                           
 44662                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 44663                           
 44664                           ;incstack = 0
 44665  019314  5064               	movf	3940,w,c	;volatile
 44666  019316  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 44667  019318  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 44668  01931A  5063               	movf	3939,w,c	;volatile
 44669  01931C  2403               	addwf	??_ADCC_GetConversionResult,w,c
 44670  01931E  6E01               	movwf	?_ADCC_GetConversionResult,c
 44671  019320  0E00               	movlw	0
 44672  019322  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 44673  019324  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 44674  019326  0012               	return	
 44675  019328                     __end_of_ADCC_GetConversionResult:
 44676                           	opt stack 0
 44677                           tosu	equ	0xFFF
 44678                           tosh	equ	0xFFE
 44679                           tosl	equ	0xFFD
 44680                           pclatu	equ	0xFFB
 44681                           pclath	equ	0xFFA
 44682                           tblptru	equ	0xFF8
 44683                           tblptrh	equ	0xFF7
 44684                           tblptrl	equ	0xFF6
 44685                           tablat	equ	0xFF5
 44686                           prodh	equ	0xFF4
 44687                           prodl	equ	0xFF3
 44688                           intcon	equ	0xFF2
 44689                           indf0	equ	0xFEF
 44690                           postinc0	equ	0xFEE
 44691                           fsr0h	equ	0xFEA
 44692                           fsr0l	equ	0xFE9
 44693                           wreg	equ	0xFE8
 44694                           indf1	equ	0xFE7
 44695                           postdec1	equ	0xFE5
 44696                           plusw1	equ	0xFE3
 44697                           fsr1h	equ	0xFE2
 44698                           fsr1l	equ	0xFE1
 44699                           bsr	equ	0xFE0
 44700                           indf2	equ	0xFDF
 44701                           postinc2	equ	0xFDE
 44702                           postdec2	equ	0xFDD
 44703                           plusw2	equ	0xFDB
 44704                           fsr2h	equ	0xFDA
 44705                           fsr2l	equ	0xFD9
 44706                           status	equ	0xFD8
 44707                           tosu	equ	0xFFF
 44708                           tosh	equ	0xFFE
 44709                           tosl	equ	0xFFD
 44710                           pclatu	equ	0xFFB
 44711                           pclath	equ	0xFFA
 44712                           tblptru	equ	0xFF8
 44713                           tblptrh	equ	0xFF7
 44714                           tblptrl	equ	0xFF6
 44715                           tablat	equ	0xFF5
 44716                           prodh	equ	0xFF4
 44717                           prodl	equ	0xFF3
 44718                           intcon	equ	0xFF2
 44719                           indf0	equ	0xFEF
 44720                           postinc0	equ	0xFEE
 44721                           fsr0h	equ	0xFEA
 44722                           fsr0l	equ	0xFE9
 44723                           wreg	equ	0xFE8
 44724                           indf1	equ	0xFE7
 44725                           postdec1	equ	0xFE5
 44726                           plusw1	equ	0xFE3
 44727                           fsr1h	equ	0xFE2
 44728                           fsr1l	equ	0xFE1
 44729                           bsr	equ	0xFE0
 44730                           indf2	equ	0xFDF
 44731                           postinc2	equ	0xFDE
 44732                           postdec2	equ	0xFDD
 44733                           plusw2	equ	0xFDB
 44734                           fsr2h	equ	0xFDA
 44735                           fsr2l	equ	0xFD9
 44736                           status	equ	0xFD8
 44737                           
 44738                           	psect	text142
 44739  000000                     __ptext142:
 44740                           	opt stack 0
 44741                           tosu	equ	0xFFF
 44742                           tosh	equ	0xFFE
 44743                           tosl	equ	0xFFD
 44744                           pclatu	equ	0xFFB
 44745                           pclath	equ	0xFFA
 44746                           tblptru	equ	0xFF8
 44747                           tblptrh	equ	0xFF7
 44748                           tblptrl	equ	0xFF6
 44749                           tablat	equ	0xFF5
 44750                           prodh	equ	0xFF4
 44751                           prodl	equ	0xFF3
 44752                           intcon	equ	0xFF2
 44753                           indf0	equ	0xFEF
 44754                           postinc0	equ	0xFEE
 44755                           fsr0h	equ	0xFEA
 44756                           fsr0l	equ	0xFE9
 44757                           wreg	equ	0xFE8
 44758                           indf1	equ	0xFE7
 44759                           postdec1	equ	0xFE5
 44760                           plusw1	equ	0xFE3
 44761                           fsr1h	equ	0xFE2
 44762                           fsr1l	equ	0xFE1
 44763                           bsr	equ	0xFE0
 44764                           indf2	equ	0xFDF
 44765                           postinc2	equ	0xFDE
 44766                           postdec2	equ	0xFDD
 44767                           plusw2	equ	0xFDB
 44768                           fsr2h	equ	0xFDA
 44769                           fsr2l	equ	0xFD9
 44770                           status	equ	0xFD8
 44771                           
 44772                           	psect	rparam
 44773  0000                     tosu	equ	0xFFF
 44774                           tosh	equ	0xFFE
 44775                           tosl	equ	0xFFD
 44776                           pclatu	equ	0xFFB
 44777                           pclath	equ	0xFFA
 44778                           tblptru	equ	0xFF8
 44779                           tblptrh	equ	0xFF7
 44780                           tblptrl	equ	0xFF6
 44781                           tablat	equ	0xFF5
 44782                           prodh	equ	0xFF4
 44783                           prodl	equ	0xFF3
 44784                           intcon	equ	0xFF2
 44785                           indf0	equ	0xFEF
 44786                           postinc0	equ	0xFEE
 44787                           fsr0h	equ	0xFEA
 44788                           fsr0l	equ	0xFE9
 44789                           wreg	equ	0xFE8
 44790                           indf1	equ	0xFE7
 44791                           postdec1	equ	0xFE5
 44792                           plusw1	equ	0xFE3
 44793                           fsr1h	equ	0xFE2
 44794                           fsr1l	equ	0xFE1
 44795                           bsr	equ	0xFE0
 44796                           indf2	equ	0xFDF
 44797                           postinc2	equ	0xFDE
 44798                           postdec2	equ	0xFDD
 44799                           plusw2	equ	0xFDB
 44800                           fsr2h	equ	0xFDA
 44801                           fsr2l	equ	0xFD9
 44802                           status	equ	0xFD8
 44803                           
 44804                           	psect	temp
 44805  00005F                     btemp:
 44806                           	opt stack 0
 44807  00005F                     	ds	1
 44808  0000                     int$flags	set	btemp
 44809  0000                     wtemp6	set	btemp+1
 44810                           tosu	equ	0xFFF
 44811                           tosh	equ	0xFFE
 44812                           tosl	equ	0xFFD
 44813                           pclatu	equ	0xFFB
 44814                           pclath	equ	0xFFA
 44815                           tblptru	equ	0xFF8
 44816                           tblptrh	equ	0xFF7
 44817                           tblptrl	equ	0xFF6
 44818                           tablat	equ	0xFF5
 44819                           prodh	equ	0xFF4
 44820                           prodl	equ	0xFF3
 44821                           intcon	equ	0xFF2
 44822                           indf0	equ	0xFEF
 44823                           postinc0	equ	0xFEE
 44824                           fsr0h	equ	0xFEA
 44825                           fsr0l	equ	0xFE9
 44826                           wreg	equ	0xFE8
 44827                           indf1	equ	0xFE7
 44828                           postdec1	equ	0xFE5
 44829                           plusw1	equ	0xFE3
 44830                           fsr1h	equ	0xFE2
 44831                           fsr1l	equ	0xFE1
 44832                           bsr	equ	0xFE0
 44833                           indf2	equ	0xFDF
 44834                           postinc2	equ	0xFDE
 44835                           postdec2	equ	0xFDD
 44836                           plusw2	equ	0xFDB
 44837                           fsr2h	equ	0xFDA
 44838                           fsr2l	equ	0xFD9
 44839                           status	equ	0xFD8


Data Sizes:
    Strings     9904
    Constant    268
    Data        43
    BSS         373
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    187     233
    BANK2           256     83     251
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_144(CODE[5]), STR_142(CODE[9]), STR_140(CODE[29]), STR_138(CODE[34]), 
		 -> STR_136(CODE[33]), STR_134(CODE[29]), STR_132(CODE[17]), STR_130(CODE[17]), 
		 -> STR_128(CODE[14]), STR_126(CODE[19]), STR_124(CODE[20]), STR_122(CODE[11]), 
		 -> STR_120(CODE[17]), STR_118(CODE[14]), STR_116(CODE[16]), STR_107(CODE[13]), 
		 -> STR_103(CODE[17]), STR_100(CODE[14]), STR_98(CODE[12]), STR_96(CODE[16]), 
		 -> STR_94(CODE[15]), STR_92(CODE[15]), STR_90(CODE[21]), STR_88(CODE[21]), 
		 -> STR_86(CODE[26]), STR_84(CODE[14]), STR_82(CODE[13]), STR_80(CODE[18]), 
		 -> STR_78(CODE[15]), STR_76(CODE[16]), STR_73(CODE[17]), STR_71(CODE[16]), 
		 -> STR_60(CODE[11]), STR_57(CODE[10]), STR_55(CODE[13]), STR_53(CODE[11]), 
		 -> STR_50(CODE[4]), STR_49(CODE[6]), STR_47(CODE[16]), STR_44(CODE[6]), 
		 -> STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_164(CODE[7]), printf@c(BANK1[1]), STR_163(CODE[16]), STR_162(CODE[22]), 
		 -> STR_161(CODE[21]), STR_160(CODE[27]), STR_159(CODE[41]), STR_158(CODE[32]), 
		 -> STR_157(CODE[19]), STR_156(CODE[16]), STR_155(CODE[15]), STR_154(CODE[16]), 
		 -> STR_153(CODE[10]), STR_152(CODE[13]), STR_151(CODE[12]), ringBufferLUT@channel_name(BANK2[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2891
		 -> STR_150(CODE[30]), STR_149(CODE[46]), STR_148(CODE[39]), STR_147(CODE[62]), 
		 -> STR_146(CODE[55]), STR_145(CODE[470]), STR_143(CODE[2891]), STR_141(CODE[492]), 
		 -> STR_139(CODE[605]), STR_137(CODE[720]), STR_135(CODE[922]), STR_133(CODE[54]), 
		 -> STR_131(CODE[54]), STR_129(CODE[45]), STR_127(CODE[51]), STR_125(CODE[52]), 
		 -> STR_123(CODE[46]), STR_121(CODE[51]), STR_119(CODE[53]), STR_117(CODE[58]), 
		 -> STR_115(CODE[71]), STR_114(CODE[63]), STR_113(CODE[37]), STR_112(CODE[46]), 
		 -> STR_111(CODE[102]), STR_110(CODE[86]), STR_108(CODE[25]), STR_106(CODE[42]), 
		 -> STR_105(CODE[53]), STR_104(CODE[31]), STR_102(CODE[29]), STR_101(CODE[28]), 
		 -> STR_99(CODE[42]), STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), 
		 -> STR_91(CODE[34]), STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), 
		 -> STR_83(CODE[58]), STR_81(CODE[36]), STR_79(CODE[36]), STR_77(CODE[37]), 
		 -> STR_75(CODE[45]), STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), 
		 -> STR_69(CODE[48]), STR_59(CODE[54]), STR_58(CODE[64]), STR_56(CODE[59]), 
		 -> STR_54(CODE[85]), STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), 
		 -> STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), 
		 -> STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), dimmingOffTimeCallback(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), dimmingOffTimeCallback(), Absolute function(), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_162(CODE[22]), STR_161(CODE[21]), STR_160(CODE[27]), STR_159(CODE[41]), 
		 -> STR_158(CODE[32]), STR_157(CODE[19]), STR_156(CODE[16]), STR_155(CODE[15]), 
		 -> STR_154(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_153(CODE[10]), STR_152(CODE[13]), STR_151(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_153(CODE[10]), STR_152(CODE[13]), STR_151(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_153(CODE[10]), STR_152(CODE[13]), STR_151(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_163(CODE[16]), STR_162(CODE[22]), STR_161(CODE[21]), STR_160(CODE[27]), 
		 -> STR_159(CODE[41]), STR_158(CODE[32]), STR_157(CODE[19]), STR_156(CODE[16]), 
		 -> STR_155(CODE[15]), STR_154(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _dimmingOffTimeCallback->_TMR5_WriteTimer
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _saveSRAMMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _recoverSRAMMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  891507
                                             81 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT0_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
                     _TMR5_StopTimer
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
           _recoverSRAMMaxFromEEPROM
                _saveSRAMMaxToEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0  106354
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  537161
                                            184 BANK1      3     3      0
                                             75 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       63    61      2  535970
                                            180 BANK1      4     2      2
                                             16 BANK2     59    59      0
                     _TMR5_StopTimer
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  128783
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  128783
                                            178 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     741
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    7213
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0  106354
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    2624
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     722
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     736
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     468
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2188
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4   10418
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2    1328
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0    1208
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0    1208
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     374
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2    1143
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4    1143
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     537
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2     110
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2892
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    5576
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      75
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0  106354
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10  106354
                                            130 BANK1     48    38     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   19276
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     165
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0     110
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     185
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   18781
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   11764
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    3047
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    3335
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6    1133
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8    1133
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1808
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1953
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1427
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1457
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1272
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   10022
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    9226
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1343
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _saveSRAMMaxToEEPROM                                  0     0      0    8301
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    3879
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     478
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    4422
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _recoverSRAMMaxFromEEPROM                             0     0      0    2147
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    2147
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     234
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1297
                    _ADCC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     271
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     271
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      31
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _HLVD_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  196775
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _INT0_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     316
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
              _dimmingOnTimeCallback *
 ---------------------------------------------------------------------------------
 (14) _dimmingOnTimeCallback                               0     0      0       0
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT0_ISR                                            0     0      0     316
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (14) _INT0_CallBack                                       0     0      0     316
                   Absolute function *
       _INT0_DefaultInterruptHandler *
             _dimmingOffTimeCallback *
 ---------------------------------------------------------------------------------
 (15) _dimmingOffTimeCallback                              0     0      0     316
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR5_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   40465
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   40465
                                             40 BANK0     40    38      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7609
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7330
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0  155678
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  155678
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8   99862
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   47417
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   42313
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1493
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   25639
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   40118
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   37270
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4509
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    2535
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    7999
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     478
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10340
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4772
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4234
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     363
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT0_SetInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR5_StopTimer
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _recoverSRAMMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveSRAMMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR5_StopTimer
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fltol
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _dimmingOffTimeCallback *
         _TMR5_StartTimer
         _TMR5_WriteTimer
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _dimmingOnTimeCallback *
       i2_TMR5_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C0      12       75.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     53      FB      10       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BB      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39E       8        0.0%
DATA                 0      0     39E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 08 10:04:49 2018

                           ??i2_TMR7_StopTimer 0001                 ringBufferLUT@max_voltage_print 02B5  
                     getDeviceIDString@strings 0128                                   ___fldiv@aexp 0155  
                                 ___fldiv@bexp 0154                   __end_of_readDoubleFromEEPROM 89B2  
             __end_of_TMR5_SetInterruptHandler 93C4                                   ___fldiv@sign 0149  
                                  __CFG_CP$OFF 000000                                             l59 927C  
                                 ___awdiv@sign 0122                         __end_of_FVR_Initialize 943E  
                                           bsr 000FE0                            ___wmul@multiplicand 0119  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback 8DBC                            _saveSRAMMaxToEEPROM 665E  
                                          l402 8B48                                            l403 8B44  
                                          l405 8B5E                                            l406 8B84  
                                          l407 8B82                                            l803 8DE6  
                                          l395 8C2A                                            l396 8C26  
                                          l398 8C54                                   __CFG_CPD$OFF 000000  
                                          _PR6 000FB0                                    i2___fladd@a 005A  
                                  i2___fladd@b 0056                     ??_INT0_SetInterruptHandler 011A  
                                          _Ipk 00F6                                            _Vpk 0220  
                                          _abs 9070                                    i2___fldiv@a 0017  
                                  i2___fldiv@b 0013                      __end_of_getDeviceIDString 88A8  
                                          _sin 55BE                     currentMeasuredToPeak@Angle 009D  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                 __CFG_IDLOC0$ 000000                                     i2___xxtofl 6E98  
                                 __CFG_IDLOC1$ 000001                                   __CFG_IDLOC2$ 000002  
                                 __CFG_IDLOC3$ 000003                                   __CFG_IDLOC4$ 000004  
                                 __CFG_IDLOC5$ 000005                                   __CFG_IDLOC6$ 000006  
                                 __CFG_IDLOC7$ 000007                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                  i2___flmul@a 0034                                    i2___flmul@b 0030  
                                _INT0_CallBack 91A8                                    i2___flsub@a 0084  
                                  i2___flsub@b 0080                               ??_TMR7_StopTimer 0117  
                                 ___flmul@aexp 0163                                   ___flmul@bexp 0164  
                                 ___flmul@sign 0162                                   ___flmul@temp 016D  
                                 ___flmul@prod 0169                                   __CFG_LVP$OFF 000000  
                                 __CFG_ZCD$OFF 000000                                   ___fltol@exp1 0181  
                                         l1010 67F6                                           l1011 685C  
                                         l1007 66C4                                           l1111 74FE  
                                         l1008 672A                                           l1112 74E0  
                                         l1009 6790                                           l1114 754C  
                                         l1115 751E                                           ?_abs 0076  
                                         l1140 432A                                           l1300 01A0  
                                         l1141 4270                                           l1109 74C0  
                                         l1150 435A                                           l1142 4288  
                                         l1310 0398                                           l1302 0204  
                                         l1070 7F3C                                           l1151 4372  
                                         l1143 42A0                                           l1311 02D8  
                                         l2040 7042                                           l1160 4576  
                                         l1152 438A                                           l1144 42B8  
                                         l1312 03C8                                           l1304 02A0  
                                         l2041 707C                                           l1161 4480  
                                         l1153 43A2                                           l1145 42D0  
                                         l1313 02F0                                           l1305 025A  
                                         l2050 7104                                           l2042 70A4  
                                         l1162 4498                                           l1154 43BA  
                                         l1138 4300                                           l1146 42E8  
                                         l1330 0568                                           l1322 0458  
                                         l1314 0308                                           l2051 70F8  
                                         l1163 44B0                                           l1147 441A  
                                         l1155 43D2                                           l1139 4258  
                                         l1315 0320                                           l2124 8308  
                                         l2044 70E0                                           l1164 44C8  
                                         l1156 43EA                                           l1148 4342  
                                         l1340 0702                                           l1332 05BA  
                                         l1324 04C4                                           l1308 0408  
                                         l1316 0338                                           l2221 4C70  
                                         l2125 82FC                                           l2045 70D0  
                                         l1421 8866                                           l1165 44E0  
                                         l1149 4450                                           l1157 4402  
                                         l1325 04A0                                           l1309 03E4  
                                         l1317 0350                                           l1430 89BA  
                                         l2230 4CD8                                           l2222 4C6C  
                                         l2134 879A                                           l2038 7016  
                                         l2302 6040                                           l1422 8870  
                                         l1158 4540                                           l1166 44F8  
                                         l1350 0886                                           l1342 0754  
                                         l1334 060C                                           l1318 0368  
                                         l2135 878E                                           l1167 4510  
                                         l1159 4468                                           l1319 0380  
                                         l1440 89E2                                           l1432 89C2  
                                         l2240 4DB4                                           l2128 833C  
                                         l2312 45CE                                           l1520 3B68  
                                         l1600 1B0E                                           l2304 6084  
                                         l1168 4528                                           l1352 08F0  
                                         l1344 07A6                                           l1336 065E  
                                         l1328 0516                                           l2233 4D90  
                                         l2129 834A                                           l2313 45CA  
                                         l1521 3A70                                           l1601 1B00  
                                         l2305 60A8                                           l1417 887A  
                                         l1353 08CC                                           l1442 89EA  
                                         l1434 89CA                                           l2234 4D6E  
                                         l2226 4CB8                                           l2138 87C2  
                                         l2330 4834                                           l2314 45DE  
                                         l1514 5D00                                           l2306 60D2  
                                         l1418 885C                                           l1362 09CA  
                                         l1346 07F0                                           l1338 06B0  
                                         l1290 003E                                           l2243 4DD8  
                                         l2235 4D7C                                           l2227 4CB4  
                                         l2139 87D0                                           l2323 47FC  
                                         l1611 1C06                                           l1531 13AC  
                                         l2307 60DE                                           l1436 89D2  
                                         l1460 8AA2                                           l2252 4EAA  
                                         l2244 4DDC                                           l2236 4D80  
                                         l2332 4878                                           l2324 47DE  
                                         l2316 460E                                           l1524 3B36  
                                         l1620 1DAA                                           l1612 1BF8  
                                         l1604 1B2E                                           l1540 1436  
                                         l1532 13BE                                           l2308 60E0  
                                         l1380 0E5C                                           l1372 0C8A  
                                         l1364 0C38                                           l1356 0982  
                                         l1348 083E                                           l1292 007A  
                                         l2261 4EEA                                           l2229 4D14  
                                         l2421 6E04                                           l2333 4896  
                                         l2317 460A                                           l1517 5DF0  
                                         l1525 3CBC                                           l1621 1D9C  
                                         l1605 1B20                                           l2405 8230  
                                         l1365 0A04                                           l1357 0938  
                                         l1438 89DA                                           l2270 4F60  
                                         l2254 4EC0                                           l2430 6E86  
                                         l2422 6DEC                                           l2414 6D86  
                                         l2318 461E                                           l1614 1C2A  
                                         l1550 158C                                           l1542 157E  
                                         l1534 13DA                                           l2406 81C8  
                                         l1390 11D6                                           l1382 0EDC  
                                         l1374 0CDC                                           l1294 00CC  
                                         l1463 8970                                           l2247 4E76  
                                         l2239 4DEE                                           l2415 6D96  
                                         l2335 48BA                                           l2319 463C  
                                         l1527 3D82                                           l1623 1E04  
                                         l1615 1C2E                                           l1551 1732  
                                         l1543 1552                                           l1535 13D2  
                                         l2407 8204                                           l1367 0AC0  
                                         l1359 095E                                           l1464 89A0  
                                         l2264 4F30                                           l2256 4ECA  
                                         l2424 6E36                                           l2416 6DB4  
                                         l2336 48D8                                           l1640 1F18  
                                         l1616 1C46                                           l1608 1BEC  
                                         l1544 14FE                                           l2360 8B02  
                                         l1392 1218                                           l1384 0F5C  
                                         l1376 0D5C                                           l1296 013A  
                                         l2249 4E86                                           l2425 6E2A  
                                         l1641 1F3A                                           l1633 1EDC  
                                         l1625 1E28                                           l1617 1D90  
                                         l1609 1B58                                           l1449 9008  
                                         l2361 8AFC                                           l2418 6DC6  
                                         l2098 91E6                                           l1634 1E84  
                                         l1618 1CA8                                           l1562 161E  
                                         l1554 1590                                           l2290 5FAC  
                                         l2282 5EB8                                           l2370 8A06  
                                         l1394 125A                                           l1386 0FDC  
                                         l1378 0DDC                                           l2419 6DBA  
                                         l1643 1F5C                                           l1627 1EC6  
                                         l1547 16C4                                           l1571 1698  
                                         l1563 1634                                           l2283 5EB4  
                                         l2363 8B1C                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l2268 4F56                                           l1660 2002  
                                         l1644 1F64                                           l1628 1E42  
                                         l1572 16AC                                           l1556 1594  
                                         l2292 5FD2                                           l2364 8B12  
                                         l1396 129C                                           l1388 1194  
                                         l2269 4F5E                                           l2429 6E54  
                                         l1645 1F88                                           l1581 18B0  
                                         l1573 16BE                                           l1565 1644  
                                         l1557 15BC                                           l2285 5EFE  
                                         l1910 85A8                                           l1662 2116  
                                         l1646 1F90                                           l1638 1EF8  
                                         l1574 1DB4                                           l1582 18FA  
                                         l1566 163E                                           l1558 15CC  
                                         l2278 5E78                                           l2390 871C  
                                         l1398 12DE                                           l1911 85B2  
                                         l1903 856E                                           l1663 2086  
                                         l1647 1FC8                                           l1583 19DC  
                                         l1575 1746                                           l1559 15C6  
                                         l2295 6008                                           l2287 5F26  
                                         l2279 5E74                                           l2383 8918  
                                         l2391 874C                                           l1912 85C0  
                                         l1904 857A                                           l1648 1FAE  
                                         l1592 1A54                                           l1576 1794  
                                         l1568 1684                                           l2296 5FEA  
                                         l2288 5FD4                                           l2384 8912  
                                         l2464 81AA                                           l1657 211C  
                                         l1569 1658                                           l2289 5F84  
                                         l2369 8A10                                           l2377 8EBE  
                                         l2465 8138                                           l2393 8768  
                                         l1906 8590                                           l1586 1976  
                                         l1578 1802                                           l2378 8EB4  
                                         l2466 81A2                                           l2394 8758  
                                         l1907 8588                                           l1659 20FE  
                                         l1579 1882                                           l2459 8E8E  
                                         l1940 733C                                           l1596 1AC6  
                                         l1941 732C                                           l1597 1AE0  
                                         l1934 726E                           _ADCC_StartConversion 93FC  
                                         l1951 75FA                                           l1871 7CE6  
                                         l1952 762E                                           l1936 728C  
                                         l1880 7DAC                                           l1872 7CE0  
                                         l1953 766C                                           l1937 72CE  
                                         l1954 76AA                                           l1946 7360  
                                         l1938 72FE                                           l1890 8268  
                                         l1874 7D28                                           l1947 7354  
                                         l1891 8278                                           l1981 7B42  
                                         l1893 8296                                           l1877 7D78  
                                         l1958 9030                                           l1990 7BC6  
                                         l1894 828E                                           l1878 7D3A  
                                         l1983 7BAE                                           l1992 7BEE  
                                         l1984 7B9E                                           l1897 82B6  
                                         l1898 82C0                                           l1899 82CE  
                                         l1989 7BD2                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC5  
                                         STR_2 FFB0                                           STR_3 FFB9  
                                         STR_4 F123                                           STR_6 FFB0  
                                         STR_7 FFB9                                           STR_9 FFBD  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 019D                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                          _writeDoubleToEEPROM 8A54                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                         _Irms 01C3                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 8B3E                ??_ADCC_HasAccumulatorOverflowed 0001  
                                         _Vrms 01BF                                           abs@a 0076  
                                         _acos 863A                                           _fabs 8E36  
               ringBufferLUT@max_current_print 02AD                                           _atan 6B0E  
                                         _asin 52BA                                           _atoi 7CDE  
                                         _main 7E8E                           ?_saveSRAMMaxToEEPROM 0001  
                                         _line 0243                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                           _sqrt 58B8  
                                 i2___flneg@f1 002C                  __end_of_ADCC_ClearAccumulator 9460  
                                         sin@f 0088                                           sin@y 008C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 010A                                _timer5ReloadVal 01DB  
                                 i2___fltol@f1 006C                                ___fldiv@new_exp 014E  
                              __end_ofi2_scale 4234                   __end_of_EUSART2_Transmit_ISR 8F16  
                              __end_ofi2_putch 9436                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
                        _dimmingOnTimeCallback 940A                readDoubleFromEEPROM@output_data 011D  
                     __size_ofi2_EUSART2_Write 004A                                          ??_abs 0078  
                    __size_of_DATAEE_WriteByte 003E                                _timer7ReloadVal 01DD  
                                        ??_sin 005E                           ?_writeDoubleToEEPROM 011B  
                             __end_of_INT0_ISR 942C                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0124                               __end_of_HLVD_ISR 944E  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 9282  
                     ?_terminal_textAttributes 01B2                              ??_TMR7_WriteTimer 0102  
                                        l20022 09F4                                          l20040 0AC0  
                                        l20032 0A3A                                          l20038 0A70  
                                        l20424 8894                                          l20248 74B0  
                                        l20426 889E                                          l20258 74D6  
                                        l19012 163E                                          l18150 76E2  
                                        l19112 1A58                                          l19016 1658  
                                        ?_acos 00A9                                          l19310 20FE  
                                        l19222 1E46                                          l19144 1B20  
                                        l19162 1BF8                                          l19138 1B00  
                                        ?_fabs 0030                                          l19236 1E88  
                                        l19092 1948                                          l19084 18FA  
                                        l19514 8A6E                                          l19338 8758  
                                        l19478 8138                                  ___fltol@sign1 0180  
                                        l19664 7D74                                          l19792 60D2  
                                        ?_atan 007C                                          l19866 024A  
                                        l19876 029A                                          ?_asin 0091  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 011D  
                              __end_of___fladd 4F7C                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 60FC  
                                        _ADREF 000F58                                __end_of___awdiv 82D8  
                              __end_of___flneg 9042                                          _ADPRE 000F5E  
                                        STR_10 FFC1                                          STR_11 FFF6  
                                        STR_12 FFCA                                          STR_20 FFC9  
                                        STR_13 FCD5                                          STR_21 FFCC  
                                        STR_30 FF39                                          STR_14 FFDF  
                                        STR_22 FFD2                                          STR_15 FFE5  
                                        STR_23 FFD8                                          STR_31 FFCF  
                                        STR_40 EB01                                          STR_16 FFF1  
                                        STR_24 FFDE                                          STR_32 FFD5  
                                        STR_41 FDF8                                          STR_17 FFF9  
                                        STR_25 FFE4                                          STR_33 FFDB  
                                        STR_18 FFCA                                          STR_42 FFB0  
                                        STR_26 FFEA                                          STR_34 FFE1  
                                        STR_50 FFB5                                          STR_43 FFB9  
                                        STR_19 FFFB                                          STR_27 FFF0  
                                        STR_35 FFE7                                          STR_51 FD88  
                                        STR_28 FFF0                                          STR_36 FFED  
                                        STR_44 FFA0                                          STR_60 FF5E  
                                        STR_52 F816                                __end_of___awmod 85CA  
                                        STR_29 FFFB                                          STR_45 FFB0  
                                        STR_37 FFF3                                          STR_61 FFA6  
                                        STR_53 FF48                                          STR_38 FFF3  
                                        STR_46 FFB9                                          STR_62 FF94  
                                        STR_70 FC93                                          STR_54 F353  
                                        STR_39 FFFD                                          STR_63 FF8D  
                                        STR_55 FF09                                          STR_71 FE4E  
                                        STR_47 FE2E                                          STR_64 FEE0  
                                        STR_80 FD65                                          STR_72 FCEC  
                                        STR_48 F718                                          STR_56 F4EE  
                                        _ADRPT 000F66                                          STR_49 FF9A  
                                        STR_57 FF69                                          STR_65 FEEE  
                                        STR_73 FDBB                                          STR_81 FA8D  
                                        STR_82 FF16                                          STR_66 FE9A  
                                        STR_90 FD01                                          STR_58 F431  
                                        STR_74 F3EF                                          STR_67 FCC1  
                                        STR_91 FAF7                                          STR_75 F8FC  
                                        STR_59 F642                                          STR_83 F563  
                                        STR_68 FF73                                          STR_84 FEA8  
                                        STR_92 FE7C                                          STR_76 FE0E  
                                        STR_77 FA43                                          STR_85 FA1E  
                                        STR_69 F7E6                                          STR_93 F59D  
                                        STR_94 FE8B                                          STR_78 FE6D  
                                        STR_86 FC47                                          STR_87 FB5C  
                                        STR_79 FAB1                                          STR_95 F9CF  
                                        STR_96 FE3E                                          STR_88 FD16  
                              __end_of___flmul 48EE                                          STR_89 FAD5  
                                        STR_97 F9A6                                          STR_98 FF3C  
                                        STR_99 F929                                __end_of___flsub 8CAE  
                              __end_of___fltol 7C00                                __end_of___lldiv 835C  
                                        ?_sqrt 006C                                ___awdiv@divisor 011F  
                              __end_of___llmod 87E2                                          u24000 4ECE  
                                        u24030 4EE6                                          _T5CLK 000FC6  
                                        u24200 47A0                                          u25010 1480  
                                        u25100 15FA                                          u25020 14BC  
                                        u24205 4796                                          u25110 1600  
                                        u25030 14C4                                          u24080 4F3C  
                                        u24400 8594                                          u25040 14E6  
                                        _T5CON 000FC3                                          u25017 1476  
                                        u24250 4830                                          u26010 8248  
                                        u25107 15F0                                          u25027 14B2  
                                        u24340 829A                                          u25300 1948  
                                        u25060 1536                                          u24190 462A  
                                        u25070 1574                                          u25047 14DC  
                                        _T7CLK 000F33                                          u24600 710A  
                                        u24280 4886                                          u25400 1B3C  
                                        u25160 167A                                          _T6CON 000FB1  
                                        u24521 6FFA                                          u24290 48A4  
                                        u25067 152C                                          u23820 4D44  
                                        u25340 1A96                                          u25260 18C0  
                                        u25180 16F4                                          u24541 7026  
                                        u25077 156A                                          u23830 4D54  
                                        u25430 1C14                                          u25270 190C  
                               __CFG_DEBUG$OFF 000000                                          u25167 1670  
                                        u23840 4D56                                          u25440 1C24  
                                        u27040 74D6                                          _T7CON 000F30  
                                        u26250 603C                                          u25187 16EA  
                                        u24820 830C                                          u25700 1FE6  
                                        u26420 029A                                          u23870 4D98  
                                        u24750 7B60                                          u24670 7366  
                                        u25720 212E                                          u26280 6092  
                                        u24850 879E                                          u24930 6E40  
                                        u25730 215E                                          u26290 60B6  
                                        u26370 010A                                          u24755 7B56  
                                        u25820 893A                                          u26700 0A62  
                                        _T6HLT 000FB2                                          u24790 7BD8  
                                        u26710 0A70                                          u25815 8DF6  
                                        u25920 89A0                                          u25816 8DF8  
                                        u25737 2154                     _ADCC_ADTI_InterruptHandler 0231  
                                        u25690 1FD0                                          u25850 816A  
                                        u25827 8930                                          u24980 13FC  
                                        u25940 8A48                                          u24990 1424  
                                        u25961 8852                                          u27297 7EA2  
                                        u26690 0A3A                                          u24987 13F2  
                                        u24997 141A                                          u25975 8E26  
                                        i1l241 00A8                                          i1l243 00B2  
                                        i1l237 007C                                          i1l239 009C  
                                        i1l417 8F10                                          i1l418 8F0C  
                                        i2l230 7E42                                          i2l224 7E0C  
                                        i2l402 8BDC                                          i2l226 7E2C  
                                        i2l403 8BD8                                          i2l228 7E38  
                                        i2l405 8BF2                                          i2l406 8C18  
                                        i2l430 7FF0                                          i1l654 9150  
                                        i2l407 8C16                                          i2l423 7F56  
                                        i2l424 7F7A                                          i2l425 7F9C  
                                        i2l428 7FA0                                          _T6TMR 000FAF  
                                        _T6RST 000FB4                                          i2l728 9294  
                              ___awdiv@counter 0121                                          _OSCEN 000E47  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 7378                                          _TRISA 000F81  
                                        _TRISB 000F82                                 ?_INT0_CallBack 0001  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a D92B                             __end_ofsin@coeff_b D94F  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 01C7  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  i2___fladd@grs 006B  
                                __CFG_WRT5$OFF 000000                                  __CFG_WRT6$OFF 000000  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR 8F7E                               __end_of_TMR6_ISR 90EA  
                             __end_of_TMR7_ISR 8F4A                                _DATAEE_ReadByte 92B8  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                    ??_terminal_ringBufferPull 01B8                                __end_of_dpowers D8D3  
                                        acos@x 00A9                                          fabs@d 0030  
                                   i2scale@scl 0051                                          _floor 7806  
          writeDoubleToEEPROM@starting_address 011F                                          _frexp 84DE  
                                        _errno 023D                          ?_ADCC_StartConversion 0001  
                                        _scale 3910                                __end_of_isdigit 91EE  
                                        atan@f 007C                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch 938C                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 7806                                          sin@x2 0094  
                                        tablat 000FF5          __end_of_max_POS3P3_ADC_Result_address D8FB  
                _max_POS3P3_ADC_Result_address D8F9                               __end_ofi2___wmul 9184  
                        ??_saveSRAMMaxToEEPROM 0127                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                 __size_of_ADCC_GetFilterValue 0014                                          sqrt@a 006C  
                                        sqrt@i 0075                                          sqrt@p 007A  
                                        status 000FD8                                          wtemp6 0060  
                                i2___flmul@grs 003E                                __end_of_strncmp 81C6  
                              __end_of_strncpy 877A                               __end_ofi2_fround 665E  
               ?_INTERRUPT_InterruptManagerLow 0001                    ringBufferLUT@max_temp_print 02BD  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                                  i2printf@width 00AB  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00DE  
                           __size_ofi2___lldiv 0082                    ??_ADCPostProcessingCallback 005E  
                           __size_ofi2___llmod 0066                               __end_ofi2_printf 2F30  
                     __size_of_HLVD_Initialize 0010                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 93E0         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 93D2                                _TMR5_Initialize 8B8A  
                              __initialization 80A4                              i2___lldiv@divisor 0005  
                                 __end_of_acos 86A8                                   __end_of_fabs 8E72  
                                 __end_of_atan 6D44                                   __end_of_asin 55BE  
                                 __end_of_atoi 7DB6                                   __end_of_main 7F4A  
                            i2___lldiv@counter 000D                               _max_Irms_address D8FD  
                                 __end_of_sqrt 5B80                                     i2printf@ap 0099  
                                   i2printf@cp 0095                          ??_writeDoubleToEEPROM 0121  
                        __end_of_ringBufferLUT 139E                                 __CFG_SCANE$OFF 000000  
                        _max_POS3P3_ADC_Result 020C                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                       ??_acos 005E                                         ??_fabs 0034  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 02D4  
             __end_of_recoverSRAMMaxFromEEPROM 7A22                       _TMR5_SetInterruptHandler 93B6  
                                       ??_sqrt 0070                                  __activetblptr 000003  
                      __size_of_FLASH_ReadByte 001A                        __size_of_FLASH_ReadWord 0042  
                   __size_of_getDeviceIDString 0060                           __size_of__tdiv_to_l_ 0134  
                                  ?i2___xxtofl 0005                         getUserID@initialOffset 0125  
                              _TMR6_Initialize 8FB0                             _TRIAC_Firing_Angle 00F2  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 8712                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01E1  
                                       ?_floor 0076                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 016F                                         STR_100 FEB6  
                                       _ADLTHL 000F6A                                         STR_101 FC10  
                                       STR_102 FBB9                                         STR_110 F2FD  
                                       STR_103 FD99                                         STR_111 F297  
                                       STR_120 FDCC                                         STR_104 FB7C  
                                       STR_112 F873                                         STR_113 FA68  
                                       STR_121 F780                                         STR_105 F6AE  
                                       STR_122 FF53                                         STR_130 FDAA  
                                       STR_106 F953                                         STR_114 F471  
                                       _ADRESH 000F64                                         STR_107 FF23  
                                       STR_123 F8A1                                         STR_131 F678  
                                       STR_115 F3A8                                         STR_116 FE1E  
                                       STR_132 FDDD                                         STR_124 FD2B  
                                       STR_108 FC61                                         STR_140 FBF3  
                                       STR_109 FC7A                                         STR_125 F74C  
                                       STR_133 F60C                                         STR_117 F529  
                                       STR_141 ED61                                         STR_142 FF7D  
                                       STR_118 FEC4                                         STR_126 FD52  
                                       STR_134 FBD6                                         STR_150 FB9B  
                                       _ADRESL 000F63                                         STR_127 F7B3  
                                       STR_119 F6E3                                         STR_135 E49A  
                                       STR_143 D94F                                         STR_151 FF30  
                                       STR_144 FFAB                                         STR_128 FED2  
                                       STR_136 FB3B                                         STR_152 FEFC  
                                       STR_160 FC2C                                         STR_129 F8CF  
                                       STR_145 EF4D                                         STR_137 E834  
                                       STR_153 FF73                                         STR_161 FCD7  
                                       STR_138 FB19                                         STR_146 F5D5  
                                       STR_162 FCAB                                         STR_154 FDEE  
                                       STR_163 FDEE                                         STR_147 F4B0  
                                       STR_139 EB04                                         STR_155 FE5E  
                                       STR_164 FF86                                         STR_148 F9F7  
                                       STR_156 FDFE                                         STR_165 FD77  
                                       STR_149 F845                                         STR_157 FD3F  
                                       STR_158 F986                                         STR_159 F97D  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                           _readDoubleFromEEPROM 8960  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       i1l1019 8DB8                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1030 2FCE  
                                       i2l1023 38E0                                         i2l1031 30D8  
                                       i2l1040 33EA                                         i2l1024 2F3C  
                                       i2l1041 3302                                         i2l1025 2FC6  
                                       i2l1034 30E0                                         i2l1043 3442  
                                       i2l1035 319E                                         i2l1052 36EC  
                                       i2l1053 38CA                                         i2l1045 35FA  
                                       i2l1038 31A6                                         i2l1039 349C  
                                       i2l1056 38D2                                         i2l1048 3602  
                                       i2l2040 7174                                         i2l1049 36E4  
                                       i2l2041 71AE                                         i2l2050 7236  
                                       i2l2042 71D6                                         i2l2051 722A  
                                       i2l2124 840E                                         i2l2044 7212  
                                       i2l2221 4FAE                                         i2l2213 55F2  
                                       i2l2125 8402                                         i2l2045 7202  
                                       i2l2230 5016                                         i2l2222 4FAA  
                                       i2l2302 62F4                                         i2l2214 5710  
                                       i2l2134 8800                                         i2l2038 7148  
                                       i2l2215 5780                                         i2l2135 87F4  
                                       i2l2240 50F2                                         i2l2312 491E  
                                       i2l2304 6338                                         i2l2216 58A6  
                                       i2l2128 8442                                         i2l1520 3FF8  
                                       i2l1600 28D8                                         i2l2233 50CE  
                                       i2l2313 491A                                         i2l2305 635C  
                                       i2l2129 8450                                         i2l1521 3F08  
                                       i2l1601 28CA                                         i2l2234 50AC  
                                       i2l2226 4FF6                                         i2l2330 4B84  
                                       i2l2314 492E                                         i2l2306 6386  
                                       i2l2138 8828                                         i2l1514 6522  
                                       i2l2243 5116                                         i2l2235 50BA  
                                       i2l2227 4FF2                                         i2l2323 4B4C  
                                       i2l2307 6392                                         i2l2139 8836  
                                       i2l1611 29CE                                         i2l1531 217A  
                                       i2l2252 51E8                                         i2l2244 511A  
                                       i2l2236 50BE                                         i2l2332 4BC8  
                                       i2l2324 4B2E                                         i2l2316 495E  
                                       i2l2308 6394                                         i2l1524 3FC8  
                                       i2l1620 2B70                                         i2l1612 29C0  
                                       i2l1604 28F8                                         i2l1540 2204  
                                       i2l1532 218C                                         i2l2261 5228  
                                       i2l2229 5052                                         i2l2333 4BE6  
                                       i2l2317 495A                                         i2l2421 6F54  
                                       i2l1517 660A                                         i2l1525 4144  
                                       i2l1621 2B62                                         i2l1605 28EA  
                                       i2l2270 529E                                         i2l2254 51FE  
                                       i2l2318 496E                                         i2l2430 6FD6  
                                       i2l2422 6F3C                                         i2l2414 6ED6  
                                       i2l2350 59E8                                         i2l1614 29F2  
                                       i2l1550 2356                                         i2l1542 2348  
                                       i2l1534 21A8                                         i2l2247 51B4  
                                       i2l2239 512C                                         i2l2335 4C0A  
                                       i2l2319 498C                                         i2l2415 6EE6  
                                       i2l2351 5A92                                         i2l2343 58FA  
                                       i2l1527 4204                                         i2l1623 2BCA  
                                       i2l1615 29F6                                         i2l1551 24FC  
                                       i2l1543 231C                                         i2l1535 21A0  
                                       i2l2264 526E                                         i2l2256 5208  
                                       i2l2336 4C28                                         i2l2424 6F86  
                                       i2l2416 6F04                                         i2l2352 59EE  
                                       i2l1640 2CDE                                         i2l1616 2A0E  
                                       i2l1608 29B4                                         i2l1544 22CA  
                                       i2l2249 51C4                                         i2l2425 6F7A  
                                       i2l2353 5A34                                         i2l2345 590A  
                                       i2l1641 2D00                                         i2l1633 2CA2  
                                       i2l1625 2BEE                                         i2l1617 2B56  
                                       i2l1609 2922                                         i2l2418 6F16  
                                       i2l2290 6260                                         i2l2282 616C  
                                       i2l2354 5A5C                                         i2l2346 5924  
                                       i2l2098 9242                                         i2l1634 2C4A  
                                       i2l1618 2A70                                         i2l1562 23E8  
                                       i2l1554 235A                                         i2l2419 6F0A  
                                       i2l2435 7850                                         i2l2283 6168  
                                       i2l1643 2D22                                         i2l1627 2C8C  
                                       i2l1547 248E                                         i2l1571 2462  
                                       i2l1563 23FE                                         i2l1716 9090  
                                       i2l2268 5294                                         i2l2444 84FC  
                                       i2l2436 783E                                         i2l2292 6286  
                                       i2l2356 5B46                                         i2l2348 595E  
                                       i2l1660 2DC8                                         i2l1644 2D2A  
                                       i2l1628 2C08                                         i2l1572 2476  
                                       i2l1556 235E                                         i2l2269 529C  
                                       i2l2429 6FA4                                         i2l2285 61B2  
                                       i2l2349 598A                                         i2l1645 2D4E  
                                       i2l1581 2676                                         i2l1573 2488  
                                       i2l1565 240E                                         i2l1557 2386  
                                       i2l2438 786E                                         i2l2278 612C  
                                       i2l1814 5314                                         i2l1910 8618  
                                       i2l1662 2EDA                                         i2l1646 2D56  
                                       i2l1638 2CBE                                         i2l1574 2B7A  
                                       i2l1582 26C2                                         i2l1566 2408  
                                       i2l1558 2396                                         i2l2439 7906  
                                       i2l2295 62BC                                         i2l2287 61DA  
                                       i2l2279 6128                                         i2l1911 8622  
                                       i2l1903 85DE                                         i2l1663 2E4A  
                                       i2l1647 2D8E                                         i2l1583 27A6  
                                       i2l1575 2510                                         i2l1559 2390  
                                       i2l2296 629E                                         i2l2288 6288  
                                       i2l1816 543C                                         i2l1912 8630  
                                       i2l1904 85EA                                         i2l1648 2D74  
                                       i2l1592 281E                                         i2l1576 255E  
                                       i2l1568 244E                                         i2l2289 6238  
                                       i2l1833 6B52                                         i2l1817 551C  
                                       i2l1657 2EE0                                         i2l1569 2422  
                                       i2l1930 8E60                                         i2l1906 8600  
                                       i2l1586 273E                                         i2l1578 25CA  
                                       i2l1835 6BBE                                         i2l1907 85F8  
                                       i2l1659 2EC2                                         i2l1579 2648  
                                       i2l1924 7B06                                         i2l1836 6D06  
                                       i2l1940 7464                                         i2l1596 2890  
                                       i2l1925 7A6E                                         i2l1941 7454  
                                       i2l1597 28AA                                         i2l1838 6D1E  
                                       i2l1934 7396                                         i2l1951 771A  
                                       i2l1952 774E                                         i2l1936 73B4  
                                       i2l1953 778C                                         i2l1937 73F6  
                                       i2l1954 77CA                                         i2l1946 7488  
                                       i2l1938 7426                                         i2l1890 8370  
                                       i2l1947 747C                                         i2l1891 8380  
                                       i2l1981 7C20                                         i2l1893 839E  
                                       i2l1990 7CA4                                         i2l1958 905E  
                                       i2l1894 8396                                         i2l1983 7C8C  
                                       i2l1992 7CCC                                         i2l1984 7C7C  
                                       i2l1897 83BE                                         i2l1898 83C8  
                                       i2l1899 83D6                                         i2l1989 7CB0  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 004D                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                         _NVMDAT 000F76  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                             __end_of___xxtofl 6E98          __end_of_ADCC_DischargeSampleCapacitor 9446  
       __size_of_ADCC_DischargeSampleCapacitor 0008                  _ADCC_DischargeSampleCapacitor 943E  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 0132  
                               i2___fladd@aexp 0069                                 i2___fladd@bexp 006A  
                       ?_dimmingOnTimeCallback 0001          __end_of_ADCC_HasAccumulatorOverflowed 9422  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed 9416  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize 8AA4  
                                 i2_scale$4375 004D                               __end_of__powers_ D877  
              __end_of_terminal_ringBufferPull 75C4                                         ___flge 75C4  
                            _ADCC_ThresholdISR 90EA                                      ??___fladd 0131  
                                       ___wmul 909A                                      ??___fldiv 0145  
                                    ??___awdiv 0121                                      ??___flneg 0129  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___flmul 015E                                      ??___flsub 0145  
                                    ??___fltol 017C                                      ??___lldiv 011F  
                                    ??___llmod 012C                             ?_ADCC_ThresholdISR 0001  
                     ??_terminal_setCursorHome 01B2                                         _fround 5B80  
                                       clear_0 80FC                                         clear_1 8108  
                                       clear_2 8114                           _eusart2RxStringReady 07D8  
                             ___awdiv@quotient 0123                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0119  
                               i2___fldiv@sign 001F                                ___awmod@counter 011B  
                                       _printf 139E                                ??_INT0_CallBack 0003  
                                       _strcat 8AF2                                         _strchr 8E72  
                      __end_of_DATAEE_ReadByte 92D2                                         _strcmp 8A04  
                                       _strcpy 8EAA                                         _strlen 8908  
                               i2___awdiv@sign 000C                                         _strstr 81C6  
                                       floor@i 007A                                         floor@x 0076  
                 getCauseOfResetString@strings 02D6                               _background_color 0240  
                              _TMR5_StartTimer 946E                                _ADCC_Initialize 88A8  
                            ??i2_EUSART2_Write 0001                      _ADCPostProcessingCallback 2F30  
                               _PMD_Initialize 924A                        FLASH_ReadWord@flashAddr 011B  
                            __end_ofi2___fladd 52BA                                      ??_isdigit 0117  
                            __end_ofi2___fldiv 63B0                              __end_ofi2___awdiv 83E0  
                            __end_ofi2___flneg 9070                              __end_ofi2___awmod 863A  
                            __end_ofi2___flmul 4C3E                              __end_ofi2___flsub 8CF6  
                            __end_ofi2___fltol 7CDE                              __end_ofi2___lldiv 8462  
                                       sin@sgn 0098                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod 8848                                   __mediumconst D842  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                            _ADCC_StopConversion 9472  
                         _EUSART2_Transmit_ISR 8EE0                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                ??_EUSART2_Write 0117  
     INT0_SetInterruptHandler@InterruptHandler 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117   ADCC_SetADTIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 00B5  
                        ?_readDoubleFromEEPROM 0119                                 i2___flmul@aexp 003D  
                               i2___flmul@bexp 0042                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 01B2  
                               i2___flmul@sign 003C                                 i2___flmul@temp 0047  
                               i2___flmul@prod 0043                  __size_of_INTERRUPT_Initialize 0016  
                              _eusart2RxBuffer 0380                                     ___flge@ff1 0117  
                                   ___flge@ff2 011B                        __end_of_TMR5_Initialize 8BD4  
                                 ___xxtofl@arg 0121                              __end_ofi2_isdigit 924A  
                                 ___xxtofl@exp 0120                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00DE                              _SYSTEM_Initialize 8F7E  
                                 ___xxtofl@val 0117           __end_of_TMR7_DefaultInterruptHandler 9478  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 9476  
                              _eusart2TxBuffer 0300                                     __accesstop 0060  
                      __end_of__initialization 812C                                 i2___fltol@exp1 0075  
                                    ?_INT0_ISR 0001                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                                 i2printf@tmpval 009B  
                           ?_SYSTEM_Initialize 0001                      __size_ofi2_TMR5_StopTimer 0004  
                                 eval_poly@res 0078                                  ___rparam_used 000001  
                                   ___fltol@f1 0178                                _TMR5_WriteTimer 9282  
                           i2__tdiv_to_l_@exp1 000F                              i2___llmod@divisor 0012  
                           i2__tdiv_to_l_@cntr 000E                      __end_of_ADCC_ThresholdISR 9112  
                            i2___llmod@counter 0016                           ?_ADCC_StopConversion 0001  
                           i2__tdiv_to_l_@quot 000A              terminal_ringBufferPull@charNumber 02CE  
                          __size_ofi2___xxtofl 0150                     __end_of_getMajorRevisionID 8E36  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 01B2                                   __pidataBANK0 944E  
                                 __pidataBANK1 9480                                   __pidataBANK2 9184  
                          ??_SYSTEM_Initialize 011C                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                             _DATAEE_WriteByte 8DBC                                  __end_of_floor 7918  
                                __end_of_frexp 8558                                  __end_of_scale 3DB4  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 939A  
                            ??_HLVD_Initialize 0117                                    i2printf@idx 0094  
                     ??_terminal_clearTerminal 01B2                                    i2printf@len 0097  
                                  i2printf@exp 009F                                    i2printf@val 00A1  
                      __end_of_TMR6_Initialize 8FE2                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize 9266                          _getCauseOfResetString 8FE2  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read 8C66  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 711C  
                  __size_of_EXT_INT_Initialize 001E                                     __div_to_l_ 724E  
                    __size_ofi2_TMR7_StopTimer 0006                             __size_of_getUserID 0044  
                                    ?i2_fround 0049                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026                                      ?i2_printf 0088  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0124  
                                      ??_floor 005E                                __div_to_l_@cntr 0123  
                                      ??_frexp 0007                                        ??_scale 0173  
                    __end_of_SYSTEM_Initialize 8FB0                                __div_to_l_@quot 011F  
                                      ??_putch 0118                                   peakToRMS@RMS 00C5  
                           i2___lldiv@quotient 0009                                  _eusart2RxHead 00FA  
                                _eusart2TxHead 01E3                                     __pbssBANK0 00F6  
                                   __pbssBANK1 01BB                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                                  _eusart2RxTail 01E0  
                                _eusart2TxTail 01E2                             __size_of_eval_poly 0100  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 8AF2                             __size_of_peakToRMS 024A  
                        _INT0_InterruptHandler 0228                                     ??_INT0_ISR 0003  
                                   ??_HLVD_ISR 0100              __size_of_recoverSRAMMaxFromEEPROM 010A  
                    ?_recoverSRAMMaxFromEEPROM 0001                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011B  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer 9138  
                        ??_ADCC_StopConversion 0001                               ??_FVR_Initialize 0117  
                               _peakToRMS$4360 00C1                                 _peakToRMS$4361 00B9  
                               _peakToRMS$4362 00BD                          ringBufferLUT@arg_buff 02C5  
                                  _Irms_offset 02EE                                        ?___flge 0117  
               ?_ADCC_DischargeSampleCapacitor 0001              terminal_ringBufferPull@index_2527 02D0  
                                      ?___wmul 0117                          _currentMeasuredToPeak 8462  
                      __end_of_TMR5_StartTimer 9472                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 93B6                        __end_of_ADCC_Initialize 8908  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                 ringBufferLUT@max_Power_print 02B1                                        ?_fround 016F  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
         __end_of_ADCC_SetADTIInterruptHandler 93FC          __size_of_ADCC_SetADTIInterruptHandler 000E  
                 _ADCC_SetADTIInterruptHandler 93EE                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0182                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue 9300                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 003C                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strcpy 0117                                        ?_strlen 0117  
                               _FLASH_ReadByte 929E            ringBufferLUT@max_voltage_print_2870 02B9  
          ringBufferLUT@max_voltage_print_2876 02C1                                        ?_strstr 0126  
                             ?_DATAEE_ReadByte 0117                                     ??i2___wmul 0005  
                               _FLASH_ReadWord 8D3A                                        _INT0PPS 000DF0  
                                      i2l12414 6386                                        i2l11486 7802  
                                      i2l15112 2422                                        i2l15108 2408  
                                      u1760_41 712C                                        i2l15240 28EA  
                                      i2l15208 2822                                        i2l15234 28CA  
                                      i2l15332 2C4E                                        i2l15180 26C2  
                                      i2l15406 2EC2                                        i2l15318 2C0C  
                                      i2l15258 29C0                                        i2l15188 2710  
                                      u1762_41 7158                writeDoubleToEEPROM@input_double 011B  
                                    ?___xxtofl 0117                                        _SP2BRGH 000EF4  
                                   ??i2_fround 004D                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 7FF8                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 008A                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                         ??_readDoubleFromEEPROM 011D  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
          __end_of_max_Temp_ADC_Result_address D8F7                    _max_Temp_ADC_Result_address D8F5  
                     _acquisitionTimerCallback 933A                       __end_of_max_Irms_address D8FF  
                      __end_of_TMR5_WriteTimer 929E               __size_of_terminal_textAttributes 0368  
                                      i2_scale 3DB4                               ?_TMR5_Initialize 0001  
                         DATAEE_WriteByte@bAdd 0117                           ?_ADCC_GetFilterValue 0001  
                                      i2_putch 942C              __size_of_INT0_SetInterruptHandler 000E  
                    ?_INT0_SetInterruptHandler 0117                                i2___fladd@signs 0068  
         __end_of_terminal_textAttributesReset 933A          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 9328                              __end_of__npowers_ D8AB  
                                      __Hparam 0000                     __size_of_ADCC_ThresholdISR 0028  
                                   _scale$4168 0173             __end_of_max_FVR_ADC_Result_address D8F5  
                   _max_FVR_ADC_Result_address D8F3                                        __Lparam 0000  
                            __end_of_getUserID 8D3A                          _ADCC_ClearAccumulator 945A  
                   ??_TMR5_SetInterruptHandler 011A                       ??_dimmingOffTimeCallback 0003  
                               _adc_error_flag 02F0                                __size_of___flge 0122  
                                      ___fladd 4C3E                                        ___fldiv 5E46  
                                      ___awdiv 8252                                        ___flneg 9012  
                                      ___awmod 8558                                        ___flmul 459C  
                                      ___flsub 8C66                                        ___fltol 7B22  
                                      ___lldiv 82D8                                __size_of___wmul 0028  
                                      ___llmod 877A                         __end_of_FLASH_ReadByte 92B8  
                       ?_getCauseOfResetString 0117                         __end_of_FLASH_ReadWord 8D7C  
                                      __pcinit 80A4                              __end_of_eval_poly 7B22  
                              __size_of_fround 02C6                               ?_TMR6_Initialize 0001  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                      __ptext0 7E8E                 readDoubleFromEEPROM@byte_index 0121  
                                      __ptext1 934C                                        __ptext2 74A0  
                                      __ptext3 0000                                        __ptext4 9328  
                                      __ptext5 4234                                        __ptext6 8712  
                                      __ptext7 8AF2                                        __ptext8 935C  
                                      __ptext9 81C6                              __end_of_peakToRMS 6B0E  
                              __size_of_printf 0DCE                  currentMeasuredToPeak@Measured 0099  
                   ringBufferLUT@angle_degrees 02A9                  ?_ADCC_SetADTIInterruptHandler 0117  
                      __size_of_TMR5_StopTimer 0004                                __size_of_strcat 004C  
                              __size_of_strchr 0038                                  i2_fround$4373 0051  
                                i2_fround$4374 004D                                __size_of_strcmp 0050  
                              __size_of_strcpy 0036                                __size_of_strlen 0058  
                            __end_of_hexpowers D8F3                         getCauseOfResetString@r 0119  
                                  ?__div_to_l_ 0117                                __size_of_strstr 008C  
                                      _dpowers D8AB                          _OSCILLATOR_Initialize 9266  
                       ??_EUSART2_Transmit_ISR 0100                                   __size_of_abs 002A  
                                 i2fround@prec 0055                                        _isdigit 91CC  
                              atan@val_squared 0089                                   __size_of_sin 02FA  
                                 ??i2___xxtofl 0009                                     ??___xxtofl 011B  
                             ___awmod@dividend 0117                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 008D                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 0095                    __end_of_saveSRAMMaxToEEPROM 68C4  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 02CA  
                                    _T6HLTbits 000FB2                     __size_of_SYSTEM_Initialize 0032  
                        i2EUSART2_Write@txData 0001                                        _strncmp 8136  
                               __pintcode_body 7DB6                                        _strncpy 8712  
                         end_of_initialization 812C                        __end_of_TMR7_WriteTimer 915E  
                      getDeviceIDString@F17550 02E8                         _terminal_setCursorHome 934C  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                             ?_TMR7_Initialize 0001                                      i1u1122_20 8D88  
                                    i1u1123_28 8D8C                           _max_POS12_ADC_Result 0208  
                      ??_dimmingOnTimeCallback 0001                                        int_func 7DB6  
                          i2___wmul@multiplier 0001                                      _T6RSTbits 000FB4  
                                    i1u2721_28 0086                        __size_of_TMR7_StopTimer 0006  
                               i2___xxtofl@arg 000F                                      i2u1340_40 5082  
                             i2_TMR5_StopTimer 946A                                      i2u1341_40 5092  
                                    i2u1342_40 5094                                      i1u2694_28 90D6  
                               i2___xxtofl@exp 000E                                      i1u2696_28 8F36  
                                    i2u1361_40 5224                                      i2u1345_40 50D6  
                               i2___xxtofl@val 0005                                      i2u1530_40 6B80  
                                    i2u1702_40 941E                                      i2u1366_40 527A  
                                    i2u1358_40 520C                                      i2u1383_40 4B80  
                                    i2u1377_40 497A                                      i2u1529_40 6B7E  
                                    i2u1386_40 4BD6                                      i2u1378_40 4AF0  
                                    i2u1570_40 7CB6                                      i2u1490_40 636A  
                                    i2u1378_45 4AE6                                      i2u1387_40 4BF4  
                                    i2u1564_40 8524                                      i2u1564_48 8526  
                                    i2u1566_40 7C3E                                      i2u1670_40 785C  
                                    i2u1486_40 62F0                                      i2u1566_45 7C34  
                                    i2u1489_40 6346                                      i2u2712_48 7E16  
                                    i2u1578_40 6F90                                      i2u1676_40 570C  
                                    i2u1772_40 8412                                      i2u1924_40 2D96  
                                    i2u1677_40 570E                                      i2u1781_40 2FB8  
                                    i2u1693_40 83A2                                      i2u1925_40 2DAC  
                                    i2u1861_40 2300                                      i2u1853_40 21CA  
                                    i2u1941_40 7F90                                      i2u1861_47 22F6  
                                    i2u1853_47 21C0                                      i2u1862_40 233E  
                                    i2u1854_40 21F2                                      i2u1862_47 2334  
                                    i2u1854_47 21E8                                      i2u1791_40 35EC  
                                    i2u1775_40 8804                                      i2u1759_40 748E  
                                    i2u1927_40 2EF2                                      i2u1871_40 2444  
                                    i2u1871_47 243A                                      i2u1784_40 30CA  
                                    i2u1768_40 723C                                      i2u1928_40 2F22  
                                    i2u1856_40 224C                                      i2u1928_47 2F18  
                                    i2u1856_47 2242                                      i2u1793_40 36D6  
                                    i2u1881_40 2688                                      i2u1873_40 24BE  
                                    i2u1865_40 23C4                                      i2u1857_40 2288  
                                    i2u1873_47 24B4                                      i2u1865_47 23BA  
                                    i2u1857_47 227E                                      i2u1786_40 3190  
                                    i2u1882_40 26D4                                      i2u1866_40 23CA  
                                    i2u1858_40 2290                                ___lldiv@divisor 011B  
                                    i2u1795_40 38BC                                      i2u1699_40 8604  
                                    i2u1859_40 22B2                                      i2u2690_48 8F6A  
                                    i2u1859_47 22A8                                      i2u2692_48 90FE  
                                    i2u1885_40 2710                    __end_of_writeDoubleToEEPROM 8AA4  
                                    i2u1895_40 2906                                      i2u1889_40 2860  
                                    i2u2688_48 91B8                                      i2u1898_40 29DC  
                                    i2u1899_40 29EC                                ___lldiv@counter 011F  
                           _EUSART2_Initialize 86A8                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0099                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write 8BD4                                  ??_getDeviceID 0124  
                                      printf@c 01B1                                        printf@f 0182  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 6FE8  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
                             ?_TMR5_StartTimer 0001                               ?_ADCC_Initialize 0001  
               _ADCPostProcessingCallback$4363 00D6                 _ADCPostProcessingCallback$4364 00DA  
               _ADCPostProcessingCallback$4365 00C9                 _ADCPostProcessingCallback$4366 00CD  
               _ADCPostProcessingCallback$4367 00D1                                        sqrt@grs 007B  
                                      sqrt@exp 007F                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                 _HLVDCON0bits 000EC2                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 0117  
                          ?_EUSART2_Initialize 0001                                        strlen@s 0117  
                 terminal_ringBufferPull@index 02D2                                  ??__tdiv_to_l_ 011D  
                              ?_FLASH_ReadWord 011B                       _TMR6_SetInterruptHandler 93A8  
                        _TMR5_InterruptHandler 022B                               i2_TMR7_StopTimer 9460  
                     ?_terminal_ringBufferPull 0001                                    ___fladd@grs 013C  
                         __CFG_WDTCCS$LFINTOSC 000000                                  ___xxtofl@sign 011F  
                                  ___fldiv@grs 0150                                    ___fldiv@rem 014A  
                              i2___fltol@sign1 0074                                      i2___fladd 4F7C  
                                    i2___fldiv 60FC                                      i2___awdiv 835C  
                                    i2___flneg 9042                                      i2___awmod 85CA  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 48EE  
                                    i2___flsub 8CAE                                      i2___fltol 7C00  
                                    i2___lldiv 83E0                                      i2___llmod 87E2  
                     __end_of_DATAEE_WriteByte 8DFA                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                         _terminal_clearTerminal 936C  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 139E  
                                  ___flmul@grs 0165                                    printf@width 01AD  
                                 _EUSART2_Read 8C1E                             i2___llmod@dividend 000E  
                              _HLVD_Initialize 937C                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                      i2_isdigit 922C  
                            __size_of_INT0_ISR 000A                            __size_of__div_to_l_ 012A  
                            __size_of_HLVD_ISR 0008                             _max_FVR_ADC_Result 0200  
              __size_of_dimmingOffTimeCallback 0018                                      _Avg_Power 01BB  
                 __end_of_INTERRUPT_Initialize 9300                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                                 __end_of___flge 76E6  
         __end_of_INT0_DefaultInterruptHandler 947E          __size_of_INT0_DefaultInterruptHandler 0002  
                 _INT0_DefaultInterruptHandler 947C                  __end_of_terminal_printNewline 936C  
                               __end_of___wmul 90C2                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07D8  
                          __end_of_getDeviceID 920E                                 __end_of_fround 5E46  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 007E                               i2___wmul@product 0005  
                               __end_of_printf 216C                                  i2_printf$4376 0090  
                        __end_of_INT0_CallBack 91CC                             _getMajorRevisionID 8DFA  
                               __end_of_strcat 8B3E                                 __end_of_strchr 8EAA  
                               __end_of_strcmp 8A54                                   i2printf@flag 00A9  
                               __end_of_strcpy 8EE0                                 __end_of_strlen 8960  
                                 i2printf@fval 00A5                                 __end_of_strstr 8252  
                                 i2printf@prec 00AD                              __size_ofi2___flge 0120  
                          start_initialization 80A4                                     eval_poly@d 0070  
                                   eval_poly@n 0072                                     eval_poly@x 006C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 947C          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 947A                __size_of_PIN_MANAGER_Initialize 00AC  
                          __end_of__tdiv_to_l_ 711C                                    __end_of_abs 909A  
                                  __end_of_sin 58B8                                      i2printf@c 00AF  
                                    i2printf@f 0088                        _terminal_textAttributes 4234  
                                   ?i2___fladd 0056  EUSART2_SetRxInterruptHandler@interruptHandler 0117  
EUSART2_SetTxInterruptHandler@interruptHandler 0117                                     ?i2___fldiv 0013  
                            __size_ofi2_fround 02AE                                     ?i2___awdiv 0007  
                                   ?i2___flneg 002C                                     ?i2___awmod 0001  
                                   ?i2___flmul 0030                                     ?i2___flsub 0080  
                                   ?i2___fltol 006C                                     ?i2___lldiv 0001  
                                   ?i2___llmod 000E                  __size_of_ADCC_StartConversion 000E  
                          ?_getMajorRevisionID 0001                                    putch@txData 0118  
                            __size_ofi2_printf 0DC4                          __end_of_EUSART2_Write 8B8A  
                             ?_TMR7_WriteTimer 0100                                     frexp@value 0001  
           terminal_textAttributes@output_buff 0284                        __end_ofi2_EUSART2_Write 8C1E  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                          DATAEE_ReadByte@bAdd 0117                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 01E4                               __CFG_LPBOREN$OFF 000000  
                                     ??___flge 011F                               ??_PMD_Initialize 0117  
                                     ??___wmul 011B                __size_of_heartbeatTimerCallback 0040  
                         ??_getMajorRevisionID 0122                                    __pdataBANK0 00F0  
                                  __pdataBANK1 01E8                                    __pdataBANK2 02D6  
                                     ??_fround 0173                                  _ringBufferLUT 0000  
                   __end_of_EXT_INT_Initialize 922C                 ??_terminal_textAttributesReset 01B4  
                ?_INT0_DefaultInterruptHandler 0001                                       ??_printf 018C  
            getCauseOfReset@return_reset_cause 0117           readDoubleFromEEPROM@starting_address 0119  
                            _POS3P3_ADC_Result 01D3                                 _TMR5_StopTimer 9466  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strcpy 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 00B1                     __end_of_getMinorRevisionID 9138  
                                     ??_strstr 012A                                      ___fladd@a 012D  
                                    ___fladd@b 0129                                      _Vpk_const 02F2  
                                   fround@prec 017B                                 _eusart2RxCount 01DF  
                                ?i2__div_to_l_ 0001                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$4368 00AD  
                                    ___flmul@a 015A                                      ___flmul@b 0156  
                                    ___flsub@a 0141                                      ___flsub@b 013D  
             __end_of_INT0_SetInterruptHandler 93D2                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 0283  
                       _dimmingOffTimeCallback 92D2                              __size_of___xxtofl 0154  
                                 _isdigit$3443 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize 938C                            EUSART2_Write@txData 0117  
                                 _load_on_time 0218                    __end_of_ADCC_StopConversion 9476  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                                    _asin$4370 009D                                      _asin$4371 0099  
                                    _asin$4369 00A5                                       ?i2_putch 0001  
                                   sin@coeff_a D917                                     sin@coeff_b D93F  
                               _TMR7_StopTimer 9454                          _TMR6_InterruptHandler 0234  
                                    __pnvBANK2 02FA                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 7FF8                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 91EE  
                                __pmediumconst D842                                       ?___fladd 0129  
                                     ?___fldiv 013D                                       ?___awdiv 011D  
                                    __ptext100 7F4A                                      __ptext101 216C  
                                    __ptext110 7378                                      __ptext102 3DB4  
                                     ?___flneg 0125                                      __ptext111 915E  
                                    __ptext103 942C                                      __ptext120 52BA  
                                    __ptext112 87E2                                      __ptext104 8BD4  
                                    __ptext121 58B8                                      __ptext113 83E0  
                                    __ptext105 922C                                      __ptext130 6E98  
                                    __ptext122 6B0E                                      __ptext114 90EA  
                                    __ptext106 63B0                                      __ptext131 7C00  
                                    __ptext123 8E36                                      __ptext115 947E  
                                    __ptext107 85CA                                      __ptext140 9300  
                                    __ptext132 76E6                                      __ptext124 8462  
                                    __ptext116 2F30                                      __ptext108 835C  
                                    __ptext141 9314                                      __ptext133 84DE  
                                    __ptext125 55BE                                      __ptext117 9460  
                                    __ptext109 711C                                      __ptext142 0000  
                                    __ptext134 7A22                                      __ptext126 8CAE  
                                    __ptext118 68C4                                      __ptext135 48EE  
                                    __ptext127 9042                                      __ptext119 863A  
                                    __ptext136 4F7C                                      __ptext128 60FC  
                                    __ptext137 9070                                      __ptext129 7806  
                                    __ptext138 9472                                      __ptext139 9416  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 0178  
             __end_of_TMR7_SetInterruptHandler 93A8                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ D877  
                              _getCauseOfReset 89B2                                 ?_ringBufferLUT 01B4  
                                    _getUserID 8CF6                         __end_of_TMR5_StopTimer 946A  
            _EUSART2_TxDefaultInterruptHandler 023A                                    __pintcodelo 0018  
                         _VCC_overvoltage_flag 02F2                                    __tdiv_to_l_ 6FE8  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 01CF                                       _BAUD2CON 000EF7  
                     __end_ofi2_TMR5_StopTimer 946E                                       ?_isdigit 0001  
                                  _dev_on_time 021C                                      _eval_poly 7A22  
                    ??_terminal_textAttributes 01B4                                      _max_Power 0210  
                                    _attribute 0242                                      _peakToRMS 68C4  
                             __CFG_WDTE$NSLEEP 000000                        ?_terminal_setCursorHome 0001  
                                    _hexpowers D8D3                         _heartbeatTimerCallback 8D7C  
                               _dimming_period 00F0                                    ??i2___fladd 0060  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0030                                    ??i2___awmod 0005  
                                  ??i2___flmul 0038                                 __size_of_floor 0112  
                                  ??i2___flsub 005E                                    ??i2___fltol 0070  
                               __size_of_frexp 007A                                    ??i2___lldiv 0009  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                     __size_of_DATAEE_ReadByte 001A                                       ?_strncmp 011D  
                                     ?_strncpy 0117                  __size_of_readDoubleFromEEPROM 0052  
                     _recoverSRAMMaxFromEEPROM 7918                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 92EA                         __end_of_TMR7_StopTimer 945A  
                                     _T6CLKCON 000FB3         terminal_textAttributes@input_attribute 01B3  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00AE                                       _INT0_ISR 9422  
                               ___wmul@product 011B                      currentMeasuredToPeak@Peak 00A1  
                             ?i2_EUSART2_Write 0001                                       _HLVD_ISR 9446  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0088                                       _IPR0bits 000E1F  
                                     _IPR1bits 000E20                                       _IPR2bits 000E21  
                                     _PIE0bits 000E29                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                       __end_ofi2_TMR7_StopTimer 9466  
                                     _PIE2bits 000E2B                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
               __size_of_dimmingOnTimeCallback 000C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                  __end_of_dimmingOnTimeCallback 9416  
                          _max_Temp_ADC_Result 0204                                       _PIR0bits 000E33  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 7378  
                             ??_FLASH_ReadByte 011B                                       _PIR2bits 000E35  
                                     _PIR3bits 000E36                                       _PIR5bits 000E38  
                                     _PIR8bits 000E3B                               ??_FLASH_ReadWord 011F  
                   ??_TMR6_SetInterruptHandler 011A                       __size_of_TMR5_Initialize 004A  
                            i2___fldiv@new_exp 0024                                       _TMR5_ISR 8F4A  
                                     _TMR6_ISR 90C2                                       _TMR7_ISR 8F16  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 0122                                ?_TMR5_StopTimer 0001  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 76E6  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul 915E                        __size_of_FVR_Initialize 0008  
                                   printf@flag 01AB                                     printf@fval 01A3  
                                   printf@prec 01AF                                     ?_eval_poly 006C  
               __end_of_terminal_setCursorHome 935C                              i2___awdiv@divisor 0009  
                                     i2_fround 63B0                 ??_INT0_DefaultInterruptHandler 0001  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 00B1  
                writeDoubleToEEPROM@byte_index 0125                              i2___awdiv@counter 000B  
                  __end_of_ADCC_GetFilterValue 9314                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                          DATAEE_WriteByte@bData 0119  
                                     i2_printf 216C                            __end_ofatan@coeff_a D917  
                          __end_ofatan@coeff_b D93F                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                              _max_Power_address D8FB  
                                    copy_data0 80B8                                      copy_data1 80EA  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 023F                       _INT0_SetInterruptHandler 93C4  
                           i2___awmod@dividend 0001                                ?_TMR7_StopTimer 0001  
                            ?_DATAEE_WriteByte 0117                        ??_ADCC_ClearAccumulator 0100  
             __size_of_terminal_ringBufferPull 0124                               __size_ofi2_scale 0480  
               ??_TMR5_DefaultInterruptHandler 0001                   __size_of_saveSRAMMaxToEEPROM 0266  
                           ??_DATAEE_WriteByte 011A                                   _next_channel 01E8  
                             __size_ofi2_putch 000A                                      frexp@eptr 0005  
                      __end_of_getCauseOfReset 8A04                __end_of_terminal_textAttributes 459C  
                writeDoubleToEEPROM@input_data 0121                                     _ADSTATbits 000F65  
 ADCPostProcessingCallback@current_adc_channel 00D5                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 9328           __end_of_max_POS12_ADC_Result_address D8F9  
                 _max_POS12_ADC_Result_address D8F7                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 93EE         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 93E0                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01B6  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 0241  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00DE                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                 __size_of_writeDoubleToEEPROM 0050                                    _load_enable 02F1  
             __end_of_acquisitionTimerCallback 934C                                    _fround$4166 0177  
                                  _fround$4167 0173                          __end_ofi2__tdiv_to_l_ 724E  
                     _TMR7_SetInterruptHandler 939A                          _TMR7_InterruptHandler 022E  
                           _ADC_Result_Scaling 0224        terminal_textAttributes@foreground_color 0283  
                                     ___xxtofl 6D44                       __size_of_TMR5_StartTimer 0004  
                     __size_of_ADCC_Initialize 0060                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 937C  
                             __size_of_isdigit 0022                      __end_of_max_Power_address D8FD  
                                     __ptext10 8136                                       __ptext11 8908  
                                     __ptext20 8D3A                                       __ptext12 8E72  
                                     __ptext21 929E                                       __ptext13 8EAA  
                                     __ptext30 3910                                       __ptext22 8FE2  
                                     __ptext14 8A04                                       __ptext31 938C  
                                     __ptext23 7CDE                                       __ptext15 8CF6  
                                     __ptext40 6D44                                       __ptext32 8B3E  
                                     __ptext24 5E46                                       __ptext16 9112  
                                     __ptext41 909A                                       __ptext33 91CC  
                                     __ptext25 9454                                       __ptext17 8DFA  
                                     __ptext50 8DBC                                       __ptext42 877A  
                                     __ptext34 5B80                                       __ptext26 9466  
                                     __ptext18 8848                                       __ptext51 75C4  
                                     __ptext43 82D8                                       __ptext35 459C  
                                     __ptext27 8C1E                                       __ptext19 91EE  
                                     __ptext60 93A8                                       __ptext52 7918  
                                     __ptext44 7B22                                       __ptext36 8558  
                                     __ptext28 936C                                       __ptext61 8B8A  
                                     __ptext53 8960                                       __ptext45 8C66  
                                     __ptext37 8252                                       __ptext29 139E  
                                     __ptext70 93C4                                       __ptext62 93B6  
                                     __ptext54 92B8                                       __ptext46 4C3E  
                                     __ptext38 6FE8                                       __ptext71 86A8  
                                     __ptext63 924A                                       __ptext55 89B2  
                                     __ptext47 9012                                       __ptext39 724E  
                                     __ptext80 93FC                                       __ptext72 93D2  
                                     __ptext64 7FF8                                       __ptext56 8F7E  
                                     __ptext48 665E                                       __ptext81 943E  
                                     __ptext73 93E0                                       __ptext65 9266  
                                     __ptext57 8AA4                                       __ptext49 8A54  
                                     __ptext90 8F4A                                       __ptext82 945A  
                                     __ptext74 88A8                                       __ptext66 92EA  
                                     __ptext58 939A                                       __ptext91 947A  
                                     __ptext83 9138                                       __ptext75 93EE  
                                     __ptext67 937C                                       __ptext59 8FB0  
                                     __ptext92 940A                                       __ptext84 90C2  
                                     __ptext68 9436                                       __ptext93 946A  
                                     __ptext85 9478                                       __ptext77 8F16  
                                     __ptext69 920E                                       __ptext94 9422  
                                     __ptext86 8D7C                                       __ptext78 9476  
                                     __ptext95 91A8                                       __ptext87 9446  
                                     __ptext79 933A                                       __ptext96 947C  
                                     __ptext88 8EE0                                       __ptext97 92D2  
                                     __ptext98 9282                                       __ptext99 946E  
                                     _sin$4372 0090                                       __powers_ D843  
                          ringBufferLUT@userID 02CC                                _Temp_ADC_Offset 02F6  
                  DATAEE_WriteByte@GIEBitValue 011A                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 006A  
                                   strcpy@from 0119                                       _max_Irms 0214  
                               i2_isdigit$3443 0002                                _Temp_ADC_Result 01CB  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 00BC  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 09E0                           __end_ofi2__div_to_l_ 74A0  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                            ??_DATAEE_ReadByte 0119                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      ringBufferLUT@channel_name 0293  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 940A  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                      printf@idx 0196  
                                    printf@len 0199                                      printf@exp 01A1  
                                    printf@val 01A7                                    atan@coeff_a D8FF  
                                  atan@coeff_b D92B                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 935C                              i2___awmod@divisor 0003  
                      ?_dimmingOffTimeCallback 0001                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0074  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 0177  
                                    sqrt@tfrac 0076                             _EXT_INT_Initialize 920E  
         __end_of_TMR6_DefaultInterruptHandler 947A          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 9478           __end_of_ADCC_DefaultInterruptHandler 9480  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 947E  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID 9112                               __tdiv_to_l_@quot 0120  
                              i2___xxtofl@sign 000D                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 02C8  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                          ?_EXT_INT_Initialize 0001                                    _reset_cause 02FA  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 01D7  
            __end_of_ADCPostProcessingCallback 3910                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                       __size_of_INT0_CallBack 0024                       __size_of_TMR7_WriteTimer 0026  
                                 ?_getDeviceID 0122                                       printf@ap 019B  
                                     printf@cp 0197                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString 9012                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult 9314                 ?_EUSART2_SetRxInterruptHandler 0117  
                                 ?__tdiv_to_l_ 0117                 __end_of_dimmingOffTimeCallback 92EA  
                       __size_of_EUSART2_Write 004C                            _EUSART2_Receive_ISR 7F4A  
                                     sqrt@frac 0085         __end_of_INTERRUPT_InterruptManagerHigh 7E8E  
      __size_of_INTERRUPT_InterruptManagerHigh 7E86                 _INTERRUPT_InterruptManagerHigh 0008  
                                     sqrt@sign 0074                    getMajorRevisionID@REVID_RAW 0125  
                                     sqrt@root 0081                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 9436                                    _printf$4169 0192  
                         ??_EXT_INT_Initialize 011A                     ??_recoverSRAMMaxFromEEPROM 0123  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01B4  
                             ___lldiv@quotient 0120                              ?i2_TMR5_StopTimer 0001  
                                     strcpy@cp 011B                                       strlen@cp 011B  
                                     strcpy@to 0117                           ??_getMinorRevisionID 0122  
                            _getDeviceIDString 8848                             ??i2_TMR5_StopTimer 0001  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6                                  ___fladd@signs 0139  
                           ?_getDeviceIDString 0124          __end_of_INTERRUPT_InterruptManagerLow 010A  
       __size_of_INTERRUPT_InterruptManagerLow 00F2                  _INTERRUPT_InterruptManagerLow 0018  
                            ??_TMR5_StartTimer 0001                 ??_ADCC_SetADTIInterruptHandler 011A  
               __end_of_PIN_MANAGER_Initialize 80A4                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 74A0                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                          ??_getDeviceIDString 0126                              ?i2_TMR7_StopTimer 0001  
            _EUSART2_RxDefaultInterruptHandler 0237                 __size_of_currentMeasuredToPeak 007C  
                             ??_TMR5_StopTimer 0117                  __end_of_currentMeasuredToPeak 84DE  
                 __size_of_ADCC_StopConversion 0004  
