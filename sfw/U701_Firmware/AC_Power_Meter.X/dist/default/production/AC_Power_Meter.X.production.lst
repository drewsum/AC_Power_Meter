

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 06 20:45:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   160                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   161  0000                     
   162                           ; Version 1.45 (B)
   163                           ; Generated 30/01/2018 GMT
   164                           ; 
   165                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   166                           ; All rights reserved.
   167                           ; 
   168                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   169                           ; 
   170                           ; Redistribution and use in source and binary forms, with or without modification, are
   171                           ; permitted provided that the following conditions are met:
   172                           ; 
   173                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   174                           ;        conditions and the following disclaimer.
   175                           ; 
   176                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   177                           ;        of conditions and the following disclaimer in the documentation and/or other
   178                           ;        materials provided with the distribution.
   179                           ; 
   180                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   181                           ;        software without specific prior written permission.
   182                           ; 
   183                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   184                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   185                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   186                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   187                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   188                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   189                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   190                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   191                           ; 
   192                           ; 
   193                           ; Code-generator required, PIC18LF67K40 Definitions
   194                           ; 
   195                           ; SFR Addresses
   196  0000                     
   197                           	psect	idataBANK0
   198  0192E8                     __pidataBANK0:
   199                           	opt stack 0
   200                           
   201                           ;initializer for _dimming_period
   202  0192E8  7FEE               	dw	32750
   203                           
   204                           ;initializer for _TRIAC_Firing_Angle
   205                           ;main.c: 72: volatile double FVR_ADC_Result;
   206                           ;main.c: 73: volatile double AVSS_ADC_Result;
   207                           ;main.c: 74: volatile double ADC_Result_Scaling;
   208                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   209                           ;main.c: 76: volatile double POS12_ADC_Result;
   210                           ;main.c: 77: volatile double Temp_ADC_Result;
   211                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   212                           ;main.c: 79: double Vpk_const = 169.7056274847714;
   213                           ;main.c: 80: volatile double Vpk;
   214                           ;main.c: 81: volatile double Ipk;
   215                           ;main.c: 82: volatile double Imeas;
   216                           ;main.c: 83: double Irms_offset = -0.113;
   217  0192EA  0000               	dw	0
   218  0192EC  42B4               	dw	17076
   219                           
   220                           	psect	idataBANK1
   221  01930C                     __pidataBANK1:
   222                           	opt stack 0
   223                           
   224                           ;initializer for _next_channel
   225  01930C  3C                 	db	60
   226                           
   227                           	psect	idataBANK2
   228  01909E                     __pidataBANK2:
   229                           	opt stack 0
   230                           
   231                           ;initializer for getCauseOfResetString@strings
   232  01909E  F7                 	db	low STR_152
   233  01909F  FD                 	db	high STR_152
   234  0190A0  67                 	db	low STR_153
   235  0190A1  FE                 	db	high STR_153
   236  0190A2  07                 	db	low STR_154
   237  0190A3  FE                 	db	high STR_154
   238  0190A4  48                 	db	low STR_155
   239  0190A5  FD                 	db	high STR_155
   240  0190A6  6E                 	db	low (STR_157+9)
   241  0190A7  F9                 	db	high (STR_157+9)
   242  0190A8  65                 	db	low STR_157
   243  0190A9  F9                 	db	high STR_157
   244  0190AA  35                 	db	low STR_158
   245  0190AB  FC                 	db	high STR_158
   246  0190AC  E0                 	db	low STR_159
   247  0190AD  FC                 	db	high STR_159
   248  0190AE  B4                 	db	low STR_160
   249  0190AF  FC                 	db	high STR_160
   250                           
   251                           ;initializer for getDeviceIDString@F17550
   252  0190B0  39                 	db	low STR_149
   253  0190B1  FF                 	db	high STR_149
   254  0190B2  05                 	db	low STR_150
   255  0190B3  FF                 	db	high STR_150
   256  0190B4  7C                 	db	low STR_68
   257  0190B5  FF                 	db	high STR_68
   258                           
   259                           ;initializer for _Irms_offset
   260  0190B6  6C8B               	dw	27787
   261  0190B8  BDE7               	dw	48615
   262                           
   263                           ;initializer for _Vpk_const
   264                           ;main.c: 72: volatile double FVR_ADC_Result;
   265                           ;main.c: 73: volatile double AVSS_ADC_Result;
   266                           ;main.c: 74: volatile double ADC_Result_Scaling;
   267                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   268                           ;main.c: 76: volatile double POS12_ADC_Result;
   269                           ;main.c: 77: volatile double Temp_ADC_Result;
   270                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   271  0190BA  B4A4               	dw	46244
   272  0190BC  4329               	dw	17193
   273                           
   274                           ;initializer for _Temp_ADC_Offset
   275                           ;main.c: 72: volatile double FVR_ADC_Result;
   276                           ;main.c: 73: volatile double AVSS_ADC_Result;
   277                           ;main.c: 74: volatile double ADC_Result_Scaling;
   278                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   279                           ;main.c: 76: volatile double POS12_ADC_Result;
   280                           ;main.c: 77: volatile double Temp_ADC_Result;
   281  0190BE  FF99               	dw	65433
   282  0190C0  441D               	dw	17437
   283                           
   284                           	psect	mediumconst
   285  00E3D2                     __pmediumconst:
   286                           	opt stack 0
   287  00E3D2  00                 	db	0
   288  00E3D3                     __powers_:
   289                           	opt stack 0
   290  00E3D3  0000               	dw	0
   291  00E3D5  3F80               	dw	16256
   292  00E3D7  0000               	dw	0
   293  00E3D9  4120               	dw	16672
   294  00E3DB  0000               	dw	0
   295  00E3DD  42C8               	dw	17096
   296  00E3DF  0000               	dw	0
   297  00E3E1  447A               	dw	17530
   298  00E3E3  4000               	dw	16384
   299  00E3E5  461C               	dw	17948
   300  00E3E7  5000               	dw	20480
   301  00E3E9  47C3               	dw	18371
   302  00E3EB  2400               	dw	9216
   303  00E3ED  4974               	dw	18804
   304  00E3EF  9680               	dw	38528
   305  00E3F1  4B18               	dw	19224
   306  00E3F3  BC20               	dw	48160
   307  00E3F5  4CBE               	dw	19646
   308  00E3F7  6B28               	dw	27432
   309  00E3F9  4E6E               	dw	20078
   310  00E3FB  02F9               	dw	761
   311  00E3FD  5015               	dw	20501
   312  00E3FF  78EC               	dw	30956
   313  00E401  60AD               	dw	24749
   314  00E403  F2CA               	dw	62154
   315  00E405  7149               	dw	29001
   316  00E407                     __end_of__powers_:
   317                           	opt stack 0
   318  00E407                     __npowers_:
   319                           	opt stack 0
   320  00E407  0000               	dw	0
   321  00E409  3F80               	dw	16256
   322  00E40B  CCCD               	dw	52429
   323  00E40D  3DCC               	dw	15820
   324  00E40F  D70A               	dw	55050
   325  00E411  3C23               	dw	15395
   326  00E413  126F               	dw	4719
   327  00E415  3A83               	dw	14979
   328  00E417  B717               	dw	46871
   329  00E419  38D1               	dw	14545
   330  00E41B  C5AC               	dw	50604
   331  00E41D  3727               	dw	14119
   332  00E41F  37BD               	dw	14269
   333  00E421  3586               	dw	13702
   334  00E423  BF95               	dw	49045
   335  00E425  33D6               	dw	13270
   336  00E427  CC77               	dw	52343
   337  00E429  322B               	dw	12843
   338  00E42B  705F               	dw	28767
   339  00E42D  3089               	dw	12425
   340  00E42F  E6FF               	dw	59135
   341  00E431  2EDB               	dw	11995
   342  00E433  E508               	dw	58632
   343  00E435  1E3C               	dw	7740
   344  00E437  4260               	dw	16992
   345  00E439  0DA2               	dw	3490
   346  00E43B                     __end_of__npowers_:
   347                           	opt stack 0
   348  00E43B                     _dpowers:
   349                           	opt stack 0
   350  00E43B  0001               	dw	1
   351  00E43D  0000               	dw	0
   352  00E43F  000A               	dw	10
   353  00E441  0000               	dw	0
   354  00E443  0064               	dw	100
   355  00E445  0000               	dw	0
   356  00E447  03E8               	dw	1000
   357  00E449  0000               	dw	0
   358  00E44B  2710               	dw	10000
   359  00E44D  0000               	dw	0
   360  00E44F  86A0               	dw	34464
   361  00E451  0001               	dw	1
   362  00E453  4240               	dw	16960
   363  00E455  000F               	dw	15
   364  00E457  9680               	dw	38528
   365  00E459  0098               	dw	152
   366  00E45B  E100               	dw	57600
   367  00E45D  05F5               	dw	1525
   368  00E45F  CA00               	dw	51712
   369  00E461  3B9A               	dw	15258
   370  00E463                     __end_of_dpowers:
   371                           	opt stack 0
   372  00E463                     _hexpowers:
   373                           	opt stack 0
   374  00E463  0001               	dw	1
   375  00E465  0000               	dw	0
   376  00E467  0010               	dw	16
   377  00E469  0000               	dw	0
   378  00E46B  0100               	dw	256
   379  00E46D  0000               	dw	0
   380  00E46F  1000               	dw	4096
   381  00E471  0000               	dw	0
   382  00E473  0000               	dw	0
   383  00E475  0001               	dw	1
   384  00E477  0000               	dw	0
   385  00E479  0010               	dw	16
   386  00E47B  0000               	dw	0
   387  00E47D  0100               	dw	256
   388  00E47F  0000               	dw	0
   389  00E481  1000               	dw	4096
   390  00E483                     __end_of_hexpowers:
   391                           	opt stack 0
   392  00E483                     _max_FVR_ADC_Result_address:
   393                           	opt stack 0
   394  00E483  0014               	dw	20
   395  00E485                     __end_of_max_FVR_ADC_Result_address:
   396                           	opt stack 0
   397  00E485                     _max_Temp_ADC_Result_address:
   398                           	opt stack 0
   399  00E485  0010               	dw	16
   400  00E487                     __end_of_max_Temp_ADC_Result_address:
   401                           	opt stack 0
   402  00E487                     _max_POS12_ADC_Result_address:
   403                           	opt stack 0
   404  00E487  000C               	dw	12
   405  00E489                     __end_of_max_POS12_ADC_Result_address:
   406                           	opt stack 0
   407  00E489                     _max_POS3P3_ADC_Result_address:
   408                           	opt stack 0
   409  00E489  0008               	dw	8
   410  00E48B                     __end_of_max_POS3P3_ADC_Result_address:
   411                           	opt stack 0
   412  00E48B                     _max_Power_address:
   413                           	opt stack 0
   414  00E48B  0004               	dw	4
   415  00E48D                     __end_of_max_Power_address:
   416                           	opt stack 0
   417  00E48D                     _max_Irms_address:
   418                           	opt stack 0
   419  00E48D  0000               	dw	0
   420  00E48F                     __end_of_max_Irms_address:
   421                           	opt stack 0
   422  00E48F                     atan@coeff_a:
   423                           	opt stack 0
   424  00E48F  3C06               	dw	15366
   425  00E491  4204               	dw	16900
   426  00E493  9F7D               	dw	40829
   427  00E495  426A               	dw	17002
   428  00E497  905C               	dw	36956
   429  00E499  4201               	dw	16897
   430  00E49B  4D60               	dw	19808
   431  00E49D  40BB               	dw	16571
   432  00E49F  EC51               	dw	60497
   433  00E4A1  3E47               	dw	15943
   434  00E4A3  8DDE               	dw	36318
   435  00E4A5  BB1F               	dw	47903
   436  00E4A7                     __end_ofatan@coeff_a:
   437                           	opt stack 0
   438  00E4A7                     sin@coeff_a:
   439                           	opt stack 0
   440  00E4A7  F3EC               	dw	62444
   441  00E4A9  484A               	dw	18506
   442  00E4AB  9535               	dw	38197
   443  00E4AD  C795               	dw	51093
   444  00E4AF  C117               	dw	49431
   445  00E4B1  45DC               	dw	17884
   446  00E4B3  DBFD               	dw	56317
   447  00E4B5  C36D               	dw	50029
   448  00E4B7  B372               	dw	45938
   449  00E4B9  4033               	dw	16435
   450  00E4BB                     __end_ofsin@coeff_a:
   451                           	opt stack 0
   452  00E4BB                     atan@coeff_b:
   453                           	opt stack 0
   454  00E4BB  3C06               	dw	15366
   455  00E4BD  4204               	dw	16900
   456  00E4BF  59C0               	dw	22976
   457  00E4C1  428B               	dw	17035
   458  00E4C3  0474               	dw	1140
   459  00E4C5  4244               	dw	16964
   460  00E4C7  9BF9               	dw	39929
   461  00E4C9  414F               	dw	16719
   462  00E4CB  0000               	dw	0
   463  00E4CD  3F80               	dw	16256
   464  00E4CF                     __end_ofatan@coeff_b:
   465                           	opt stack 0
   466  00E4CF                     sin@coeff_b:
   467                           	opt stack 0
   468  00E4CF  342B               	dw	13355
   469  00E4D1  4801               	dw	18433
   470  00E4D3  9D7F               	dw	40319
   471  00E4D5  45B0               	dw	17840
   472  00E4D7  FFE7               	dw	65511
   473  00E4D9  42D9               	dw	17113
   474  00E4DB  0000               	dw	0
   475  00E4DD  3F80               	dw	16256
   476  00E4DF                     __end_ofsin@coeff_b:
   477                           	opt stack 0
   478  00E4DF                     STR_135:
   479  00E4DF  4C                 	db	76	;'L'
   480  00E4E0  69                 	db	105	;'i'
   481  00E4E1  73                 	db	115	;'s'
   482  00E4E2  74                 	db	116	;'t'
   483  00E4E3  20                 	db	32
   484  00E4E4  6F                 	db	111	;'o'
   485  00E4E5  66                 	db	102	;'f'
   486  00E4E6  20                 	db	32
   487  00E4E7  73                 	db	115	;'s'
   488  00E4E8  75                 	db	117	;'u'
   489  00E4E9  70                 	db	112	;'p'
   490  00E4EA  70                 	db	112	;'p'
   491  00E4EB  6F                 	db	111	;'o'
   492  00E4EC  72                 	db	114	;'r'
   493  00E4ED  74                 	db	116	;'t'
   494  00E4EE  65                 	db	101	;'e'
   495  00E4EF  64                 	db	100	;'d'
   496  00E4F0  20                 	db	32
   497  00E4F1  44                 	db	68	;'D'
   498  00E4F2  65                 	db	101	;'e'
   499  00E4F3  76                 	db	118	;'v'
   500  00E4F4  69                 	db	105	;'i'
   501  00E4F5  63                 	db	99	;'c'
   502  00E4F6  65                 	db	101	;'e'
   503  00E4F7  20                 	db	32
   504  00E4F8  43                 	db	67	;'C'
   505  00E4F9  6F                 	db	111	;'o'
   506  00E4FA  6E                 	db	110	;'n'
   507  00E4FB  74                 	db	116	;'t'
   508  00E4FC  72                 	db	114	;'r'
   509  00E4FD  6F                 	db	111	;'o'
   510  00E4FE  6C                 	db	108	;'l'
   511  00E4FF  20                 	db	32
   512  00E500  43                 	db	67	;'C'
   513  00E501  6F                 	db	111	;'o'
   514  00E502  6D                 	db	109	;'m'
   515  00E503  6D                 	db	109	;'m'
   516  00E504  61                 	db	97	;'a'
   517  00E505  6E                 	db	110	;'n'
   518  00E506  64                 	db	100	;'d'
   519  00E507  73                 	db	115	;'s'
   520  00E508  3A                 	db	58	;':'
   521  00E509  0A                 	db	10
   522  00E50A  0D                 	db	13
   523  00E50B  20                 	db	32
   524  00E50C  20                 	db	32
   525  00E50D  20                 	db	32
   526  00E50E  52                 	db	82	;'R'
   527  00E50F  65                 	db	101	;'e'
   528  00E510  73                 	db	115	;'s'
   529  00E511  65                 	db	101	;'e'
   530  00E512  74                 	db	116	;'t'
   531  00E513  3A                 	db	58	;':'
   532  00E514  20                 	db	32
   533  00E515  43                 	db	67	;'C'
   534  00E516  6C                 	db	108	;'l'
   535  00E517  65                 	db	101	;'e'
   536  00E518  61                 	db	97	;'a'
   537  00E519  72                 	db	114	;'r'
   538  00E51A  73                 	db	115	;'s'
   539  00E51B  20                 	db	32
   540  00E51C  74                 	db	116	;'t'
   541  00E51D  68                 	db	104	;'h'
   542  00E51E  65                 	db	101	;'e'
   543  00E51F  20                 	db	32
   544  00E520  74                 	db	116	;'t'
   545  00E521  65                 	db	101	;'e'
   546  00E522  72                 	db	114	;'r'
   547  00E523  6D                 	db	109	;'m'
   548  00E524  69                 	db	105	;'i'
   549  00E525  6E                 	db	110	;'n'
   550  00E526  61                 	db	97	;'a'
   551  00E527  6C                 	db	108	;'l'
   552  00E528  20                 	db	32
   553  00E529  61                 	db	97	;'a'
   554  00E52A  6E                 	db	110	;'n'
   555  00E52B  64                 	db	100	;'d'
   556  00E52C  20                 	db	32
   557  00E52D  72                 	db	114	;'r'
   558  00E52E  65                 	db	101	;'e'
   559  00E52F  73                 	db	115	;'s'
   560  00E530  65                 	db	101	;'e'
   561  00E531  74                 	db	116	;'t'
   562  00E532  73                 	db	115	;'s'
   563  00E533  20                 	db	32
   564  00E534  74                 	db	116	;'t'
   565  00E535  68                 	db	104	;'h'
   566  00E536  65                 	db	101	;'e'
   567  00E537  20                 	db	32
   568  00E538  6D                 	db	109	;'m'
   569  00E539  69                 	db	105	;'i'
   570  00E53A  63                 	db	99	;'c'
   571  00E53B  72                 	db	114	;'r'
   572  00E53C  6F                 	db	111	;'o'
   573  00E53D  0A                 	db	10
   574  00E53E  0D                 	db	13
   575  00E53F  20                 	db	32
   576  00E540  20                 	db	32
   577  00E541  20                 	db	32
   578  00E542  43                 	db	67	;'C'
   579  00E543  6C                 	db	108	;'l'
   580  00E544  65                 	db	101	;'e'
   581  00E545  61                 	db	97	;'a'
   582  00E546  72                 	db	114	;'r'
   583  00E547  3A                 	db	58	;':'
   584  00E548  20                 	db	32
   585  00E549  43                 	db	67	;'C'
   586  00E54A  6C                 	db	108	;'l'
   587  00E54B  65                 	db	101	;'e'
   588  00E54C  61                 	db	97	;'a'
   589  00E54D  72                 	db	114	;'r'
   590  00E54E  73                 	db	115	;'s'
   591  00E54F  20                 	db	32
   592  00E550  74                 	db	116	;'t'
   593  00E551  68                 	db	104	;'h'
   594  00E552  65                 	db	101	;'e'
   595  00E553  20                 	db	32
   596  00E554  74                 	db	116	;'t'
   597  00E555  65                 	db	101	;'e'
   598  00E556  72                 	db	114	;'r'
   599  00E557  6D                 	db	109	;'m'
   600  00E558  69                 	db	105	;'i'
   601  00E559  6E                 	db	110	;'n'
   602  00E55A  61                 	db	97	;'a'
   603  00E55B  6C                 	db	108	;'l'
   604  00E55C  20                 	db	32
   605  00E55D  62                 	db	98	;'b'
   606  00E55E  75                 	db	117	;'u'
   607  00E55F  74                 	db	116	;'t'
   608  00E560  20                 	db	32
   609  00E561  64                 	db	100	;'d'
   610  00E562  6F                 	db	111	;'o'
   611  00E563  65                 	db	101	;'e'
   612  00E564  73                 	db	115	;'s'
   613  00E565  6E                 	db	110	;'n'
   614  00E566  27                 	db	39
   615  00E567  74                 	db	116	;'t'
   616  00E568  20                 	db	32
   617  00E569  72                 	db	114	;'r'
   618  00E56A  65                 	db	101	;'e'
   619  00E56B  73                 	db	115	;'s'
   620  00E56C  65                 	db	101	;'e'
   621  00E56D  74                 	db	116	;'t'
   622  00E56E  20                 	db	32
   623  00E56F  74                 	db	116	;'t'
   624  00E570  68                 	db	104	;'h'
   625  00E571  65                 	db	101	;'e'
   626  00E572  20                 	db	32
   627  00E573  6D                 	db	109	;'m'
   628  00E574  69                 	db	105	;'i'
   629  00E575  63                 	db	99	;'c'
   630  00E576  72                 	db	114	;'r'
   631  00E577  6F                 	db	111	;'o'
   632  00E578  0A                 	db	10
   633  00E579  0D                 	db	13
   634  00E57A  20                 	db	32
   635  00E57B  20                 	db	32
   636  00E57C  20                 	db	32
   637  00E57D  43                 	db	67	;'C'
   638  00E57E  61                 	db	97	;'a'
   639  00E57F  75                 	db	117	;'u'
   640  00E580  73                 	db	115	;'s'
   641  00E581  65                 	db	101	;'e'
   642  00E582  20                 	db	32
   643  00E583  6F                 	db	111	;'o'
   644  00E584  66                 	db	102	;'f'
   645  00E585  20                 	db	32
   646  00E586  52                 	db	82	;'R'
   647  00E587  65                 	db	101	;'e'
   648  00E588  73                 	db	115	;'s'
   649  00E589  65                 	db	101	;'e'
   650  00E58A  74                 	db	116	;'t'
   651  00E58B  3F                 	db	63	;'?'
   652  00E58C  3A                 	db	58	;':'
   653  00E58D  20                 	db	32
   654  00E58E  52                 	db	82	;'R'
   655  00E58F  65                 	db	101	;'e'
   656  00E590  74                 	db	116	;'t'
   657  00E591  75                 	db	117	;'u'
   658  00E592  72                 	db	114	;'r'
   659  00E593  6E                 	db	110	;'n'
   660  00E594  73                 	db	115	;'s'
   661  00E595  20                 	db	32
   662  00E596  74                 	db	116	;'t'
   663  00E597  68                 	db	104	;'h'
   664  00E598  65                 	db	101	;'e'
   665  00E599  20                 	db	32
   666  00E59A  63                 	db	99	;'c'
   667  00E59B  61                 	db	97	;'a'
   668  00E59C  75                 	db	117	;'u'
   669  00E59D  73                 	db	115	;'s'
   670  00E59E  65                 	db	101	;'e'
   671  00E59F  20                 	db	32
   672  00E5A0  6F                 	db	111	;'o'
   673  00E5A1  66                 	db	102	;'f'
   674  00E5A2  20                 	db	32
   675  00E5A3  74                 	db	116	;'t'
   676  00E5A4  68                 	db	104	;'h'
   677  00E5A5  65                 	db	101	;'e'
   678  00E5A6  20                 	db	32
   679  00E5A7  6D                 	db	109	;'m'
   680  00E5A8  6F                 	db	111	;'o'
   681  00E5A9  73                 	db	115	;'s'
   682  00E5AA  74                 	db	116	;'t'
   683  00E5AB  20                 	db	32
   684  00E5AC  72                 	db	114	;'r'
   685  00E5AD  65                 	db	101	;'e'
   686  00E5AE  63                 	db	99	;'c'
   687  00E5AF  65                 	db	101	;'e'
   688  00E5B0  6E                 	db	110	;'n'
   689  00E5B1  74                 	db	116	;'t'
   690  00E5B2  20                 	db	32
   691  00E5B3  64                 	db	100	;'d'
   692  00E5B4  65                 	db	101	;'e'
   693  00E5B5  76                 	db	118	;'v'
   694  00E5B6  69                 	db	105	;'i'
   695  00E5B7  63                 	db	99	;'c'
   696  00E5B8  65                 	db	101	;'e'
   697  00E5B9  20                 	db	32
   698  00E5BA  72                 	db	114	;'r'
   699  00E5BB  65                 	db	101	;'e'
   700  00E5BC  73                 	db	115	;'s'
   701  00E5BD  65                 	db	101	;'e'
   702  00E5BE  74                 	db	116	;'t'
   703  00E5BF  0A                 	db	10
   704  00E5C0  0D                 	db	13
   705  00E5C1  20                 	db	32
   706  00E5C2  20                 	db	32
   707  00E5C3  20                 	db	32
   708  00E5C4  2A                 	db	42
   709  00E5C5  49                 	db	73	;'I'
   710  00E5C6  44                 	db	68	;'D'
   711  00E5C7  4E                 	db	78	;'N'
   712  00E5C8  3F                 	db	63	;'?'
   713  00E5C9  3A                 	db	58	;':'
   714  00E5CA  20                 	db	32
   715  00E5CB  52                 	db	82	;'R'
   716  00E5CC  65                 	db	101	;'e'
   717  00E5CD  74                 	db	116	;'t'
   718  00E5CE  75                 	db	117	;'u'
   719  00E5CF  72                 	db	114	;'r'
   720  00E5D0  6E                 	db	110	;'n'
   721  00E5D1  73                 	db	115	;'s'
   722  00E5D2  20                 	db	32
   723  00E5D3  64                 	db	100	;'d'
   724  00E5D4  65                 	db	101	;'e'
   725  00E5D5  76                 	db	118	;'v'
   726  00E5D6  69                 	db	105	;'i'
   727  00E5D7  63                 	db	99	;'c'
   728  00E5D8  65                 	db	101	;'e'
   729  00E5D9  20                 	db	32
   730  00E5DA  69                 	db	105	;'i'
   731  00E5DB  64                 	db	100	;'d'
   732  00E5DC  65                 	db	101	;'e'
   733  00E5DD  6E                 	db	110	;'n'
   734  00E5DE  74                 	db	116	;'t'
   735  00E5DF  69                 	db	105	;'i'
   736  00E5E0  66                 	db	102	;'f'
   737  00E5E1  69                 	db	105	;'i'
   738  00E5E2  63                 	db	99	;'c'
   739  00E5E3  61                 	db	97	;'a'
   740  00E5E4  74                 	db	116	;'t'
   741  00E5E5  69                 	db	105	;'i'
   742  00E5E6  6F                 	db	111	;'o'
   743  00E5E7  6E                 	db	110	;'n'
   744  00E5E8  20                 	db	32
   745  00E5E9  73                 	db	115	;'s'
   746  00E5EA  74                 	db	116	;'t'
   747  00E5EB  72                 	db	114	;'r'
   748  00E5EC  69                 	db	105	;'i'
   749  00E5ED  6E                 	db	110	;'n'
   750  00E5EE  67                 	db	103	;'g'
   751  00E5EF  0A                 	db	10
   752  00E5F0  0D                 	db	13
   753  00E5F1  20                 	db	32
   754  00E5F2  20                 	db	32
   755  00E5F3  20                 	db	32
   756  00E5F4  44                 	db	68	;'D'
   757  00E5F5  65                 	db	101	;'e'
   758  00E5F6  76                 	db	118	;'v'
   759  00E5F7  69                 	db	105	;'i'
   760  00E5F8  63                 	db	99	;'c'
   761  00E5F9  65                 	db	101	;'e'
   762  00E5FA  20                 	db	32
   763  00E5FB  4F                 	db	79	;'O'
   764  00E5FC  6E                 	db	110	;'n'
   765  00E5FD  20                 	db	32
   766  00E5FE  54                 	db	84	;'T'
   767  00E5FF  69                 	db	105	;'i'
   768  00E600  6D                 	db	109	;'m'
   769  00E601  65                 	db	101	;'e'
   770  00E602  3F                 	db	63	;'?'
   771  00E603  3A                 	db	58	;':'
   772  00E604  20                 	db	32
   773  00E605  52                 	db	82	;'R'
   774  00E606  65                 	db	101	;'e'
   775  00E607  74                 	db	116	;'t'
   776  00E608  75                 	db	117	;'u'
   777  00E609  72                 	db	114	;'r'
   778  00E60A  6E                 	db	110	;'n'
   779  00E60B  73                 	db	115	;'s'
   780  00E60C  20                 	db	32
   781  00E60D  64                 	db	100	;'d'
   782  00E60E  65                 	db	101	;'e'
   783  00E60F  76                 	db	118	;'v'
   784  00E610  69                 	db	105	;'i'
   785  00E611  63                 	db	99	;'c'
   786  00E612  65                 	db	101	;'e'
   787  00E613  20                 	db	32
   788  00E614  6F                 	db	111	;'o'
   789  00E615  6E                 	db	110	;'n'
   790  00E616  20                 	db	32
   791  00E617  74                 	db	116	;'t'
   792  00E618  69                 	db	105	;'i'
   793  00E619  6D                 	db	109	;'m'
   794  00E61A  65                 	db	101	;'e'
   795  00E61B  20                 	db	32
   796  00E61C  73                 	db	115	;'s'
   797  00E61D  69                 	db	105	;'i'
   798  00E61E  6E                 	db	110	;'n'
   799  00E61F  63                 	db	99	;'c'
   800  00E620  65                 	db	101	;'e'
   801  00E621  20                 	db	32
   802  00E622  6C                 	db	108	;'l'
   803  00E623  61                 	db	97	;'a'
   804  00E624  73                 	db	115	;'s'
   805  00E625  74                 	db	116	;'t'
   806  00E626  20                 	db	32
   807  00E627  64                 	db	100	;'d'
   808  00E628  65                 	db	101	;'e'
   809  00E629  76                 	db	118	;'v'
   810  00E62A  69                 	db	105	;'i'
   811  00E62B  63                 	db	99	;'c'
   812  00E62C  65                 	db	101	;'e'
   813  00E62D  20                 	db	32
   814  00E62E  72                 	db	114	;'r'
   815  00E62F  65                 	db	101	;'e'
   816  00E630  73                 	db	115	;'s'
   817  00E631  65                 	db	101	;'e'
   818  00E632  74                 	db	116	;'t'
   819  00E633  0A                 	db	10
   820  00E634  0D                 	db	13
   821  00E635  20                 	db	32
   822  00E636  20                 	db	32
   823  00E637  20                 	db	32
   824  00E638  44                 	db	68	;'D'
   825  00E639  65                 	db	101	;'e'
   826  00E63A  76                 	db	118	;'v'
   827  00E63B  69                 	db	105	;'i'
   828  00E63C  63                 	db	99	;'c'
   829  00E63D  65                 	db	101	;'e'
   830  00E63E  20                 	db	32
   831  00E63F  49                 	db	73	;'I'
   832  00E640  44                 	db	68	;'D'
   833  00E641  3F                 	db	63	;'?'
   834  00E642  3A                 	db	58	;':'
   835  00E643  20                 	db	32
   836  00E644  52                 	db	82	;'R'
   837  00E645  65                 	db	101	;'e'
   838  00E646  74                 	db	116	;'t'
   839  00E647  75                 	db	117	;'u'
   840  00E648  72                 	db	114	;'r'
   841  00E649  6E                 	db	110	;'n'
   842  00E64A  73                 	db	115	;'s'
   843  00E64B  20                 	db	32
   844  00E64C  64                 	db	100	;'d'
   845  00E64D  65                 	db	101	;'e'
   846  00E64E  76                 	db	118	;'v'
   847  00E64F  69                 	db	105	;'i'
   848  00E650  63                 	db	99	;'c'
   849  00E651  65                 	db	101	;'e'
   850  00E652  20                 	db	32
   851  00E653  49                 	db	73	;'I'
   852  00E654  44                 	db	68	;'D'
   853  00E655  20                 	db	32
   854  00E656  61                 	db	97	;'a'
   855  00E657  73                 	db	115	;'s'
   856  00E658  20                 	db	32
   857  00E659  70                 	db	112	;'p'
   858  00E65A  72                 	db	114	;'r'
   859  00E65B  65                 	db	101	;'e'
   860  00E65C  2D                 	db	45
   861  00E65D  70                 	db	112	;'p'
   862  00E65E  72                 	db	114	;'r'
   863  00E65F  6F                 	db	111	;'o'
   864  00E660  67                 	db	103	;'g'
   865  00E661  72                 	db	114	;'r'
   866  00E662  61                 	db	97	;'a'
   867  00E663  6D                 	db	109	;'m'
   868  00E664  6D                 	db	109	;'m'
   869  00E665  65                 	db	101	;'e'
   870  00E666  64                 	db	100	;'d'
   871  00E667  20                 	db	32
   872  00E668  69                 	db	105	;'i'
   873  00E669  6E                 	db	110	;'n'
   874  00E66A  20                 	db	32
   875  00E66B  66                 	db	102	;'f'
   876  00E66C  6C                 	db	108	;'l'
   877  00E66D  61                 	db	97	;'a'
   878  00E66E  73                 	db	115	;'s'
   879  00E66F  68                 	db	104	;'h'
   880  00E670  20                 	db	32
   881  00E671  6D                 	db	109	;'m'
   882  00E672  65                 	db	101	;'e'
   883  00E673  6D                 	db	109	;'m'
   884  00E674  6F                 	db	111	;'o'
   885  00E675  72                 	db	114	;'r'
   886  00E676  79                 	db	121	;'y'
   887  00E677  0A                 	db	10
   888  00E678  0D                 	db	13
   889  00E679  20                 	db	32
   890  00E67A  20                 	db	32
   891  00E67B  20                 	db	32
   892  00E67C  52                 	db	82	;'R'
   893  00E67D  65                 	db	101	;'e'
   894  00E67E  76                 	db	118	;'v'
   895  00E67F  69                 	db	105	;'i'
   896  00E680  73                 	db	115	;'s'
   897  00E681  69                 	db	105	;'i'
   898  00E682  6F                 	db	111	;'o'
   899  00E683  6E                 	db	110	;'n'
   900  00E684  20                 	db	32
   901  00E685  49                 	db	73	;'I'
   902  00E686  44                 	db	68	;'D'
   903  00E687  3F                 	db	63	;'?'
   904  00E688  3A                 	db	58	;':'
   905  00E689  20                 	db	32
   906  00E68A  52                 	db	82	;'R'
   907  00E68B  65                 	db	101	;'e'
   908  00E68C  74                 	db	116	;'t'
   909  00E68D  75                 	db	117	;'u'
   910  00E68E  72                 	db	114	;'r'
   911  00E68F  6E                 	db	110	;'n'
   912  00E690  73                 	db	115	;'s'
   913  00E691  20                 	db	32
   914  00E692  64                 	db	100	;'d'
   915  00E693  65                 	db	101	;'e'
   916  00E694  76                 	db	118	;'v'
   917  00E695  69                 	db	105	;'i'
   918  00E696  63                 	db	99	;'c'
   919  00E697  65                 	db	101	;'e'
   920  00E698  20                 	db	32
   921  00E699  73                 	db	115	;'s'
   922  00E69A  69                 	db	105	;'i'
   923  00E69B  6C                 	db	108	;'l'
   924  00E69C  69                 	db	105	;'i'
   925  00E69D  63                 	db	99	;'c'
   926  00E69E  6F                 	db	111	;'o'
   927  00E69F  6E                 	db	110	;'n'
   928  00E6A0  20                 	db	32
   929  00E6A1  72                 	db	114	;'r'
   930  00E6A2  65                 	db	101	;'e'
   931  00E6A3  76                 	db	118	;'v'
   932  00E6A4  69                 	db	105	;'i'
   933  00E6A5  73                 	db	115	;'s'
   934  00E6A6  69                 	db	105	;'i'
   935  00E6A7  6F                 	db	111	;'o'
   936  00E6A8  6E                 	db	110	;'n'
   937  00E6A9  20                 	db	32
   938  00E6AA  49                 	db	73	;'I'
   939  00E6AB  44                 	db	68	;'D'
   940  00E6AC  20                 	db	32
   941  00E6AD  61                 	db	97	;'a'
   942  00E6AE  73                 	db	115	;'s'
   943  00E6AF  20                 	db	32
   944  00E6B0  70                 	db	112	;'p'
   945  00E6B1  72                 	db	114	;'r'
   946  00E6B2  65                 	db	101	;'e'
   947  00E6B3  2D                 	db	45
   948  00E6B4  70                 	db	112	;'p'
   949  00E6B5  72                 	db	114	;'r'
   950  00E6B6  6F                 	db	111	;'o'
   951  00E6B7  67                 	db	103	;'g'
   952  00E6B8  72                 	db	114	;'r'
   953  00E6B9  61                 	db	97	;'a'
   954  00E6BA  6D                 	db	109	;'m'
   955  00E6BB  6D                 	db	109	;'m'
   956  00E6BC  65                 	db	101	;'e'
   957  00E6BD  64                 	db	100	;'d'
   958  00E6BE  20                 	db	32
   959  00E6BF  69                 	db	105	;'i'
   960  00E6C0  6E                 	db	110	;'n'
   961  00E6C1  20                 	db	32
   962  00E6C2  66                 	db	102	;'f'
   963  00E6C3  6C                 	db	108	;'l'
   964  00E6C4  61                 	db	97	;'a'
   965  00E6C5  73                 	db	115	;'s'
   966  00E6C6  68                 	db	104	;'h'
   967  00E6C7  20                 	db	32
   968  00E6C8  6D                 	db	109	;'m'
   969  00E6C9  65                 	db	101	;'e'
   970  00E6CA  6D                 	db	109	;'m'
   971  00E6CB  6F                 	db	111	;'o'
   972  00E6CC  72                 	db	114	;'r'
   973  00E6CD  79                 	db	121	;'y'
   974  00E6CE  0A                 	db	10
   975  00E6CF  0D                 	db	13
   976  00E6D0  20                 	db	32
   977  00E6D1  20                 	db	32
   978  00E6D2  20                 	db	32
   979  00E6D3  55                 	db	85	;'U'
   980  00E6D4  73                 	db	115	;'s'
   981  00E6D5  65                 	db	101	;'e'
   982  00E6D6  72                 	db	114	;'r'
   983  00E6D7  20                 	db	32
   984  00E6D8  49                 	db	73	;'I'
   985  00E6D9  44                 	db	68	;'D'
   986  00E6DA  73                 	db	115	;'s'
   987  00E6DB  3F                 	db	63	;'?'
   988  00E6DC  3A                 	db	58	;':'
   989  00E6DD  20                 	db	32
   990  00E6DE  52                 	db	82	;'R'
   991  00E6DF  65                 	db	101	;'e'
   992  00E6E0  74                 	db	116	;'t'
   993  00E6E1  75                 	db	117	;'u'
   994  00E6E2  72                 	db	114	;'r'
   995  00E6E3  6E                 	db	110	;'n'
   996  00E6E4  73                 	db	115	;'s'
   997  00E6E5  20                 	db	32
   998  00E6E6  61                 	db	97	;'a'
   999  00E6E7  20                 	db	32
  1000  00E6E8  6C                 	db	108	;'l'
  1001  00E6E9  69                 	db	105	;'i'
  1002  00E6EA  73                 	db	115	;'s'
  1003  00E6EB  74                 	db	116	;'t'
  1004  00E6EC  20                 	db	32
  1005  00E6ED  6F                 	db	111	;'o'
  1006  00E6EE  66                 	db	102	;'f'
  1007  00E6EF  20                 	db	32
  1008  00E6F0  75                 	db	117	;'u'
  1009  00E6F1  73                 	db	115	;'s'
  1010  00E6F2  65                 	db	101	;'e'
  1011  00E6F3  72                 	db	114	;'r'
  1012  00E6F4  20                 	db	32
  1013  00E6F5  49                 	db	73	;'I'
  1014  00E6F6  44                 	db	68	;'D'
  1015  00E6F7  73                 	db	115	;'s'
  1016  00E6F8  20                 	db	32
  1017  00E6F9  28                 	db	40
  1018  00E6FA  64                 	db	100	;'d'
  1019  00E6FB  69                 	db	105	;'i'
  1020  00E6FC  73                 	db	115	;'s'
  1021  00E6FD  70                 	db	112	;'p'
  1022  00E6FE  6C                 	db	108	;'l'
  1023  00E6FF  61                 	db	97	;'a'
  1024  00E700  79                 	db	121	;'y'
  1025  00E701  65                 	db	101	;'e'
  1026  00E702  64                 	db	100	;'d'
  1027  00E703  20                 	db	32
  1028  00E704  69                 	db	105	;'i'
  1029  00E705  6E                 	db	110	;'n'
  1030  00E706  20                 	db	32
  1031  00E707  68                 	db	104	;'h'
  1032  00E708  65                 	db	101	;'e'
  1033  00E709  78                 	db	120	;'x'
  1034  00E70A  29                 	db	41
  1035  00E70B  20                 	db	32
  1036  00E70C  61                 	db	97	;'a'
  1037  00E70D  73                 	db	115	;'s'
  1038  00E70E  20                 	db	32
  1039  00E70F  73                 	db	115	;'s'
  1040  00E710  74                 	db	116	;'t'
  1041  00E711  6F                 	db	111	;'o'
  1042  00E712  72                 	db	114	;'r'
  1043  00E713  65                 	db	101	;'e'
  1044  00E714  64                 	db	100	;'d'
  1045  00E715  20                 	db	32
  1046  00E716  69                 	db	105	;'i'
  1047  00E717  6E                 	db	110	;'n'
  1048  00E718  20                 	db	32
  1049  00E719  66                 	db	102	;'f'
  1050  00E71A  6C                 	db	108	;'l'
  1051  00E71B  61                 	db	97	;'a'
  1052  00E71C  73                 	db	115	;'s'
  1053  00E71D  68                 	db	104	;'h'
  1054  00E71E  20                 	db	32
  1055  00E71F  6D                 	db	109	;'m'
  1056  00E720  65                 	db	101	;'e'
  1057  00E721  6D                 	db	109	;'m'
  1058  00E722  6F                 	db	111	;'o'
  1059  00E723  72                 	db	114	;'r'
  1060  00E724  79                 	db	121	;'y'
  1061  00E725  0A                 	db	10
  1062  00E726  0D                 	db	13
  1063  00E727  20                 	db	32
  1064  00E728  20                 	db	32
  1065  00E729  20                 	db	32
  1066  00E72A  41                 	db	65	;'A'
  1067  00E72B  44                 	db	68	;'D'
  1068  00E72C  43                 	db	67	;'C'
  1069  00E72D  20                 	db	32
  1070  00E72E  45                 	db	69	;'E'
  1071  00E72F  72                 	db	114	;'r'
  1072  00E730  72                 	db	114	;'r'
  1073  00E731  6F                 	db	111	;'o'
  1074  00E732  72                 	db	114	;'r'
  1075  00E733  3F                 	db	63	;'?'
  1076  00E734  3A                 	db	58	;':'
  1077  00E735  20                 	db	32
  1078  00E736  52                 	db	82	;'R'
  1079  00E737  65                 	db	101	;'e'
  1080  00E738  74                 	db	116	;'t'
  1081  00E739  75                 	db	117	;'u'
  1082  00E73A  72                 	db	114	;'r'
  1083  00E73B  6E                 	db	110	;'n'
  1084  00E73C  73                 	db	115	;'s'
  1085  00E73D  20                 	db	32
  1086  00E73E  74                 	db	116	;'t'
  1087  00E73F  68                 	db	104	;'h'
  1088  00E740  65                 	db	101	;'e'
  1089  00E741  20                 	db	32
  1090  00E742  63                 	db	99	;'c'
  1091  00E743  61                 	db	97	;'a'
  1092  00E744  75                 	db	117	;'u'
  1093  00E745  73                 	db	115	;'s'
  1094  00E746  65                 	db	101	;'e'
  1095  00E747  20                 	db	32
  1096  00E748  6F                 	db	111	;'o'
  1097  00E749  66                 	db	102	;'f'
  1098  00E74A  20                 	db	32
  1099  00E74B  61                 	db	97	;'a'
  1100  00E74C  6E                 	db	110	;'n'
  1101  00E74D  20                 	db	32
  1102  00E74E  41                 	db	65	;'A'
  1103  00E74F  44                 	db	68	;'D'
  1104  00E750  43                 	db	67	;'C'
  1105  00E751  20                 	db	32
  1106  00E752  65                 	db	101	;'e'
  1107  00E753  72                 	db	114	;'r'
  1108  00E754  72                 	db	114	;'r'
  1109  00E755  6F                 	db	111	;'o'
  1110  00E756  72                 	db	114	;'r'
  1111  00E757  20                 	db	32
  1112  00E758  69                 	db	105	;'i'
  1113  00E759  66                 	db	102	;'f'
  1114  00E75A  20                 	db	32
  1115  00E75B  61                 	db	97	;'a'
  1116  00E75C  6E                 	db	110	;'n'
  1117  00E75D  20                 	db	32
  1118  00E75E  65                 	db	101	;'e'
  1119  00E75F  72                 	db	114	;'r'
  1120  00E760  72                 	db	114	;'r'
  1121  00E761  6F                 	db	111	;'o'
  1122  00E762  72                 	db	114	;'r'
  1123  00E763  20                 	db	32
  1124  00E764  6F                 	db	111	;'o'
  1125  00E765  63                 	db	99	;'c'
  1126  00E766  63                 	db	99	;'c'
  1127  00E767  75                 	db	117	;'u'
  1128  00E768  72                 	db	114	;'r'
  1129  00E769  72                 	db	114	;'r'
  1130  00E76A  65                 	db	101	;'e'
  1131  00E76B  64                 	db	100	;'d'
  1132  00E76C  0A                 	db	10
  1133  00E76D  0D                 	db	13
  1134  00E76E  20                 	db	32
  1135  00E76F  20                 	db	32
  1136  00E770  20                 	db	32
  1137  00E771  43                 	db	67	;'C'
  1138  00E772  6C                 	db	108	;'l'
  1139  00E773  65                 	db	101	;'e'
  1140  00E774  61                 	db	97	;'a'
  1141  00E775  72                 	db	114	;'r'
  1142  00E776  20                 	db	32
  1143  00E777  41                 	db	65	;'A'
  1144  00E778  44                 	db	68	;'D'
  1145  00E779  43                 	db	67	;'C'
  1146  00E77A  20                 	db	32
  1147  00E77B  45                 	db	69	;'E'
  1148  00E77C  72                 	db	114	;'r'
  1149  00E77D  72                 	db	114	;'r'
  1150  00E77E  6F                 	db	111	;'o'
  1151  00E77F  72                 	db	114	;'r'
  1152  00E780  3A                 	db	58	;':'
  1153  00E781  20                 	db	32
  1154  00E782  43                 	db	67	;'C'
  1155  00E783  6C                 	db	108	;'l'
  1156  00E784  65                 	db	101	;'e'
  1157  00E785  61                 	db	97	;'a'
  1158  00E786  72                 	db	114	;'r'
  1159  00E787  73                 	db	115	;'s'
  1160  00E788  20                 	db	32
  1161  00E789  74                 	db	116	;'t'
  1162  00E78A  68                 	db	104	;'h'
  1163  00E78B  65                 	db	101	;'e'
  1164  00E78C  20                 	db	32
  1165  00E78D  41                 	db	65	;'A'
  1166  00E78E  44                 	db	68	;'D'
  1167  00E78F  43                 	db	67	;'C'
  1168  00E790  20                 	db	32
  1169  00E791  65                 	db	101	;'e'
  1170  00E792  72                 	db	114	;'r'
  1171  00E793  72                 	db	114	;'r'
  1172  00E794  6F                 	db	111	;'o'
  1173  00E795  72                 	db	114	;'r'
  1174  00E796  20                 	db	32
  1175  00E797  61                 	db	97	;'a'
  1176  00E798  6E                 	db	110	;'n'
  1177  00E799  64                 	db	100	;'d'
  1178  00E79A  20                 	db	32
  1179  00E79B  72                 	db	114	;'r'
  1180  00E79C  65                 	db	101	;'e'
  1181  00E79D  73                 	db	115	;'s'
  1182  00E79E  75                 	db	117	;'u'
  1183  00E79F  6D                 	db	109	;'m'
  1184  00E7A0  65                 	db	101	;'e'
  1185  00E7A1  73                 	db	115	;'s'
  1186  00E7A2  20                 	db	32
  1187  00E7A3  41                 	db	65	;'A'
  1188  00E7A4  44                 	db	68	;'D'
  1189  00E7A5  43                 	db	67	;'C'
  1190  00E7A6  20                 	db	32
  1191  00E7A7  63                 	db	99	;'c'
  1192  00E7A8  6F                 	db	111	;'o'
  1193  00E7A9  6E                 	db	110	;'n'
  1194  00E7AA  76                 	db	118	;'v'
  1195  00E7AB  65                 	db	101	;'e'
  1196  00E7AC  72                 	db	114	;'r'
  1197  00E7AD  73                 	db	115	;'s'
  1198  00E7AE  69                 	db	105	;'i'
  1199  00E7AF  6F                 	db	111	;'o'
  1200  00E7B0  6E                 	db	110	;'n'
  1201  00E7B1  73                 	db	115	;'s'
  1202  00E7B2  0A                 	db	10
  1203  00E7B3  0D                 	db	13
  1204  00E7B4  20                 	db	32
  1205  00E7B5  20                 	db	32
  1206  00E7B6  20                 	db	32
  1207  00E7B7  56                 	db	86	;'V'
  1208  00E7B8  43                 	db	67	;'C'
  1209  00E7B9  43                 	db	67	;'C'
  1210  00E7BA  20                 	db	32
  1211  00E7BB  4F                 	db	79	;'O'
  1212  00E7BC  76                 	db	118	;'v'
  1213  00E7BD  65                 	db	101	;'e'
  1214  00E7BE  72                 	db	114	;'r'
  1215  00E7BF  76                 	db	118	;'v'
  1216  00E7C0  6F                 	db	111	;'o'
  1217  00E7C1  6C                 	db	108	;'l'
  1218  00E7C2  74                 	db	116	;'t'
  1219  00E7C3  61                 	db	97	;'a'
  1220  00E7C4  67                 	db	103	;'g'
  1221  00E7C5  65                 	db	101	;'e'
  1222  00E7C6  3F                 	db	63	;'?'
  1223  00E7C7  3A                 	db	58	;':'
  1224  00E7C8  20                 	db	32
  1225  00E7C9  53                 	db	83	;'S'
  1226  00E7CA  74                 	db	116	;'t'
  1227  00E7CB  61                 	db	97	;'a'
  1228  00E7CC  74                 	db	116	;'t'
  1229  00E7CD  65                 	db	101	;'e'
  1230  00E7CE  73                 	db	115	;'s'
  1231  00E7CF  20                 	db	32
  1232  00E7D0  69                 	db	105	;'i'
  1233  00E7D1  66                 	db	102	;'f'
  1234  00E7D2  20                 	db	32
  1235  00E7D3  61                 	db	97	;'a'
  1236  00E7D4  20                 	db	32
  1237  00E7D5  56                 	db	86	;'V'
  1238  00E7D6  43                 	db	67	;'C'
  1239  00E7D7  43                 	db	67	;'C'
  1240  00E7D8  20                 	db	32
  1241  00E7D9  6F                 	db	111	;'o'
  1242  00E7DA  76                 	db	118	;'v'
  1243  00E7DB  65                 	db	101	;'e'
  1244  00E7DC  72                 	db	114	;'r'
  1245  00E7DD  76                 	db	118	;'v'
  1246  00E7DE  6F                 	db	111	;'o'
  1247  00E7DF  6C                 	db	108	;'l'
  1248  00E7E0  74                 	db	116	;'t'
  1249  00E7E1  61                 	db	97	;'a'
  1250  00E7E2  67                 	db	103	;'g'
  1251  00E7E3  65                 	db	101	;'e'
  1252  00E7E4  20                 	db	32
  1253  00E7E5  63                 	db	99	;'c'
  1254  00E7E6  6F                 	db	111	;'o'
  1255  00E7E7  6E                 	db	110	;'n'
  1256  00E7E8  64                 	db	100	;'d'
  1257  00E7E9  69                 	db	105	;'i'
  1258  00E7EA  74                 	db	116	;'t'
  1259  00E7EB  69                 	db	105	;'i'
  1260  00E7EC  6F                 	db	111	;'o'
  1261  00E7ED  6E                 	db	110	;'n'
  1262  00E7EE  20                 	db	32
  1263  00E7EF  68                 	db	104	;'h'
  1264  00E7F0  61                 	db	97	;'a'
  1265  00E7F1  73                 	db	115	;'s'
  1266  00E7F2  20                 	db	32
  1267  00E7F3  6F                 	db	111	;'o'
  1268  00E7F4  63                 	db	99	;'c'
  1269  00E7F5  63                 	db	99	;'c'
  1270  00E7F6  75                 	db	117	;'u'
  1271  00E7F7  72                 	db	114	;'r'
  1272  00E7F8  72                 	db	114	;'r'
  1273  00E7F9  65                 	db	101	;'e'
  1274  00E7FA  64                 	db	100	;'d'
  1275  00E7FB  20                 	db	32
  1276  00E7FC  6F                 	db	111	;'o'
  1277  00E7FD  72                 	db	114	;'r'
  1278  00E7FE  20                 	db	32
  1279  00E7FF  6E                 	db	110	;'n'
  1280  00E800  6F                 	db	111	;'o'
  1281  00E801  74                 	db	116	;'t'
  1282  00E802  0A                 	db	10
  1283  00E803  0D                 	db	13
  1284  00E804  20                 	db	32
  1285  00E805  20                 	db	32
  1286  00E806  20                 	db	32
  1287  00E807  43                 	db	67	;'C'
  1288  00E808  6C                 	db	108	;'l'
  1289  00E809  65                 	db	101	;'e'
  1290  00E80A  61                 	db	97	;'a'
  1291  00E80B  72                 	db	114	;'r'
  1292  00E80C  20                 	db	32
  1293  00E80D  4D                 	db	77	;'M'
  1294  00E80E  61                 	db	97	;'a'
  1295  00E80F  78                 	db	120	;'x'
  1296  00E810  20                 	db	32
  1297  00E811  56                 	db	86	;'V'
  1298  00E812  61                 	db	97	;'a'
  1299  00E813  6C                 	db	108	;'l'
  1300  00E814  75                 	db	117	;'u'
  1301  00E815  65                 	db	101	;'e'
  1302  00E816  73                 	db	115	;'s'
  1303  00E817  3A                 	db	58	;':'
  1304  00E818  20                 	db	32
  1305  00E819  45                 	db	69	;'E'
  1306  00E81A  72                 	db	114	;'r'
  1307  00E81B  61                 	db	97	;'a'
  1308  00E81C  73                 	db	115	;'s'
  1309  00E81D  65                 	db	101	;'e'
  1310  00E81E  73                 	db	115	;'s'
  1311  00E81F  20                 	db	32
  1312  00E820  6D                 	db	109	;'m'
  1313  00E821  61                 	db	97	;'a'
  1314  00E822  78                 	db	120	;'x'
  1315  00E823  69                 	db	105	;'i'
  1316  00E824  6D                 	db	109	;'m'
  1317  00E825  75                 	db	117	;'u'
  1318  00E826  6D                 	db	109	;'m'
  1319  00E827  20                 	db	32
  1320  00E828  72                 	db	114	;'r'
  1321  00E829  65                 	db	101	;'e'
  1322  00E82A  63                 	db	99	;'c'
  1323  00E82B  6F                 	db	111	;'o'
  1324  00E82C  72                 	db	114	;'r'
  1325  00E82D  64                 	db	100	;'d'
  1326  00E82E  65                 	db	101	;'e'
  1327  00E82F  64                 	db	100	;'d'
  1328  00E830  20                 	db	32
  1329  00E831  76                 	db	118	;'v'
  1330  00E832  61                 	db	97	;'a'
  1331  00E833  6C                 	db	108	;'l'
  1332  00E834  75                 	db	117	;'u'
  1333  00E835  65                 	db	101	;'e'
  1334  00E836  73                 	db	115	;'s'
  1335  00E837  20                 	db	32
  1336  00E838  66                 	db	102	;'f'
  1337  00E839  72                 	db	114	;'r'
  1338  00E83A  6F                 	db	111	;'o'
  1339  00E83B  6D                 	db	109	;'m'
  1340  00E83C  20                 	db	32
  1341  00E83D  45                 	db	69	;'E'
  1342  00E83E  45                 	db	69	;'E'
  1343  00E83F  50                 	db	80	;'P'
  1344  00E840  52                 	db	82	;'R'
  1345  00E841  4F                 	db	79	;'O'
  1346  00E842  4D                 	db	77	;'M'
  1347  00E843  0A                 	db	10
  1348  00E844  0D                 	db	13
  1349  00E845  20                 	db	32
  1350  00E846  20                 	db	32
  1351  00E847  20                 	db	32
  1352  00E848  48                 	db	72	;'H'
  1353  00E849  65                 	db	101	;'e'
  1354  00E84A  6C                 	db	108	;'l'
  1355  00E84B  70                 	db	112	;'p'
  1356  00E84C  3A                 	db	58	;':'
  1357  00E84D  20                 	db	32
  1358  00E84E  54                 	db	84	;'T'
  1359  00E84F  68                 	db	104	;'h'
  1360  00E850  69                 	db	105	;'i'
  1361  00E851  73                 	db	115	;'s'
  1362  00E852  20                 	db	32
  1363  00E853  6D                 	db	109	;'m'
  1364  00E854  65                 	db	101	;'e'
  1365  00E855  73                 	db	115	;'s'
  1366  00E856  73                 	db	115	;'s'
  1367  00E857  61                 	db	97	;'a'
  1368  00E858  67                 	db	103	;'g'
  1369  00E859  65                 	db	101	;'e'
  1370  00E85A  2C                 	db	44
  1371  00E85B  20                 	db	32
  1372  00E85C  6C                 	db	108	;'l'
  1373  00E85D  69                 	db	105	;'i'
  1374  00E85E  73                 	db	115	;'s'
  1375  00E85F  74                 	db	116	;'t'
  1376  00E860  73                 	db	115	;'s'
  1377  00E861  20                 	db	32
  1378  00E862  73                 	db	115	;'s'
  1379  00E863  75                 	db	117	;'u'
  1380  00E864  70                 	db	112	;'p'
  1381  00E865  70                 	db	112	;'p'
  1382  00E866  6F                 	db	111	;'o'
  1383  00E867  72                 	db	114	;'r'
  1384  00E868  74                 	db	116	;'t'
  1385  00E869  65                 	db	101	;'e'
  1386  00E86A  64                 	db	100	;'d'
  1387  00E86B  20                 	db	32
  1388  00E86C  63                 	db	99	;'c'
  1389  00E86D  6F                 	db	111	;'o'
  1390  00E86E  6D                 	db	109	;'m'
  1391  00E86F  6D                 	db	109	;'m'
  1392  00E870  61                 	db	97	;'a'
  1393  00E871  6E                 	db	110	;'n'
  1394  00E872  64                 	db	100	;'d'
  1395  00E873  73                 	db	115	;'s'
  1396  00E874  0A                 	db	10
  1397  00E875  0D                 	db	13
  1398  00E876  0A                 	db	10
  1399  00E877  0D                 	db	13
  1400  00E878  00                 	db	0
  1401  00E879                     STR_137:
  1402  00E879  4C                 	db	76	;'L'
  1403  00E87A  69                 	db	105	;'i'
  1404  00E87B  73                 	db	115	;'s'
  1405  00E87C  74                 	db	116	;'t'
  1406  00E87D  20                 	db	32
  1407  00E87E  6F                 	db	111	;'o'
  1408  00E87F  66                 	db	102	;'f'
  1409  00E880  20                 	db	32
  1410  00E881  73                 	db	115	;'s'
  1411  00E882  75                 	db	117	;'u'
  1412  00E883  70                 	db	112	;'p'
  1413  00E884  70                 	db	112	;'p'
  1414  00E885  6F                 	db	111	;'o'
  1415  00E886  72                 	db	114	;'r'
  1416  00E887  74                 	db	116	;'t'
  1417  00E888  65                 	db	101	;'e'
  1418  00E889  64                 	db	100	;'d'
  1419  00E88A  20                 	db	32
  1420  00E88B  44                 	db	68	;'D'
  1421  00E88C  65                 	db	101	;'e'
  1422  00E88D  76                 	db	118	;'v'
  1423  00E88E  69                 	db	105	;'i'
  1424  00E88F  63                 	db	99	;'c'
  1425  00E890  65                 	db	101	;'e'
  1426  00E891  20                 	db	32
  1427  00E892  4D                 	db	77	;'M'
  1428  00E893  65                 	db	101	;'e'
  1429  00E894  61                 	db	97	;'a'
  1430  00E895  73                 	db	115	;'s'
  1431  00E896  75                 	db	117	;'u'
  1432  00E897  72                 	db	114	;'r'
  1433  00E898  65                 	db	101	;'e'
  1434  00E899  6D                 	db	109	;'m'
  1435  00E89A  65                 	db	101	;'e'
  1436  00E89B  6E                 	db	110	;'n'
  1437  00E89C  74                 	db	116	;'t'
  1438  00E89D  20                 	db	32
  1439  00E89E  43                 	db	67	;'C'
  1440  00E89F  6F                 	db	111	;'o'
  1441  00E8A0  6D                 	db	109	;'m'
  1442  00E8A1  6D                 	db	109	;'m'
  1443  00E8A2  61                 	db	97	;'a'
  1444  00E8A3  6E                 	db	110	;'n'
  1445  00E8A4  64                 	db	100	;'d'
  1446  00E8A5  73                 	db	115	;'s'
  1447  00E8A6  3A                 	db	58	;':'
  1448  00E8A7  0A                 	db	10
  1449  00E8A8  0D                 	db	13
  1450  00E8A9  20                 	db	32
  1451  00E8AA  20                 	db	32
  1452  00E8AB  20                 	db	32
  1453  00E8AC  4D                 	db	77	;'M'
  1454  00E8AD  65                 	db	101	;'e'
  1455  00E8AE  61                 	db	97	;'a'
  1456  00E8AF  73                 	db	115	;'s'
  1457  00E8B0  75                 	db	117	;'u'
  1458  00E8B1  72                 	db	114	;'r'
  1459  00E8B2  65                 	db	101	;'e'
  1460  00E8B3  20                 	db	32
  1461  00E8B4  50                 	db	80	;'P'
  1462  00E8B5  4F                 	db	79	;'O'
  1463  00E8B6  53                 	db	83	;'S'
  1464  00E8B7  33                 	db	51	;'3'
  1465  00E8B8  50                 	db	80	;'P'
  1466  00E8B9  33                 	db	51	;'3'
  1467  00E8BA  3F                 	db	63	;'?'
  1468  00E8BB  3A                 	db	58	;':'
  1469  00E8BC  20                 	db	32
  1470  00E8BD  52                 	db	82	;'R'
  1471  00E8BE  65                 	db	101	;'e'
  1472  00E8BF  74                 	db	116	;'t'
  1473  00E8C0  75                 	db	117	;'u'
  1474  00E8C1  72                 	db	114	;'r'
  1475  00E8C2  6E                 	db	110	;'n'
  1476  00E8C3  73                 	db	115	;'s'
  1477  00E8C4  20                 	db	32
  1478  00E8C5  2B                 	db	43
  1479  00E8C6  33                 	db	51	;'3'
  1480  00E8C7  2E                 	db	46
  1481  00E8C8  33                 	db	51	;'3'
  1482  00E8C9  56                 	db	86	;'V'
  1483  00E8CA  20                 	db	32
  1484  00E8CB  41                 	db	65	;'A'
  1485  00E8CC  44                 	db	68	;'D'
  1486  00E8CD  43                 	db	67	;'C'
  1487  00E8CE  20                 	db	32
  1488  00E8CF  43                 	db	67	;'C'
  1489  00E8D0  6F                 	db	111	;'o'
  1490  00E8D1  6E                 	db	110	;'n'
  1491  00E8D2  76                 	db	118	;'v'
  1492  00E8D3  65                 	db	101	;'e'
  1493  00E8D4  72                 	db	114	;'r'
  1494  00E8D5  73                 	db	115	;'s'
  1495  00E8D6  69                 	db	105	;'i'
  1496  00E8D7  6F                 	db	111	;'o'
  1497  00E8D8  6E                 	db	110	;'n'
  1498  00E8D9  20                 	db	32
  1499  00E8DA  69                 	db	105	;'i'
  1500  00E8DB  6E                 	db	110	;'n'
  1501  00E8DC  20                 	db	32
  1502  00E8DD  76                 	db	118	;'v'
  1503  00E8DE  6F                 	db	111	;'o'
  1504  00E8DF  6C                 	db	108	;'l'
  1505  00E8E0  74                 	db	116	;'t'
  1506  00E8E1  73                 	db	115	;'s'
  1507  00E8E2  0A                 	db	10
  1508  00E8E3  0D                 	db	13
  1509  00E8E4  20                 	db	32
  1510  00E8E5  20                 	db	32
  1511  00E8E6  20                 	db	32
  1512  00E8E7  4D                 	db	77	;'M'
  1513  00E8E8  65                 	db	101	;'e'
  1514  00E8E9  61                 	db	97	;'a'
  1515  00E8EA  73                 	db	115	;'s'
  1516  00E8EB  75                 	db	117	;'u'
  1517  00E8EC  72                 	db	114	;'r'
  1518  00E8ED  65                 	db	101	;'e'
  1519  00E8EE  20                 	db	32
  1520  00E8EF  50                 	db	80	;'P'
  1521  00E8F0  4F                 	db	79	;'O'
  1522  00E8F1  53                 	db	83	;'S'
  1523  00E8F2  31                 	db	49	;'1'
  1524  00E8F3  32                 	db	50	;'2'
  1525  00E8F4  3F                 	db	63	;'?'
  1526  00E8F5  3A                 	db	58	;':'
  1527  00E8F6  20                 	db	32
  1528  00E8F7  52                 	db	82	;'R'
  1529  00E8F8  65                 	db	101	;'e'
  1530  00E8F9  74                 	db	116	;'t'
  1531  00E8FA  75                 	db	117	;'u'
  1532  00E8FB  72                 	db	114	;'r'
  1533  00E8FC  6E                 	db	110	;'n'
  1534  00E8FD  73                 	db	115	;'s'
  1535  00E8FE  20                 	db	32
  1536  00E8FF  2B                 	db	43
  1537  00E900  31                 	db	49	;'1'
  1538  00E901  32                 	db	50	;'2'
  1539  00E902  56                 	db	86	;'V'
  1540  00E903  20                 	db	32
  1541  00E904  41                 	db	65	;'A'
  1542  00E905  44                 	db	68	;'D'
  1543  00E906  43                 	db	67	;'C'
  1544  00E907  20                 	db	32
  1545  00E908  43                 	db	67	;'C'
  1546  00E909  6F                 	db	111	;'o'
  1547  00E90A  6E                 	db	110	;'n'
  1548  00E90B  76                 	db	118	;'v'
  1549  00E90C  65                 	db	101	;'e'
  1550  00E90D  72                 	db	114	;'r'
  1551  00E90E  73                 	db	115	;'s'
  1552  00E90F  69                 	db	105	;'i'
  1553  00E910  6F                 	db	111	;'o'
  1554  00E911  6E                 	db	110	;'n'
  1555  00E912  20                 	db	32
  1556  00E913  69                 	db	105	;'i'
  1557  00E914  6E                 	db	110	;'n'
  1558  00E915  20                 	db	32
  1559  00E916  76                 	db	118	;'v'
  1560  00E917  6F                 	db	111	;'o'
  1561  00E918  6C                 	db	108	;'l'
  1562  00E919  74                 	db	116	;'t'
  1563  00E91A  73                 	db	115	;'s'
  1564  00E91B  0A                 	db	10
  1565  00E91C  0D                 	db	13
  1566  00E91D  20                 	db	32
  1567  00E91E  20                 	db	32
  1568  00E91F  20                 	db	32
  1569  00E920  4D                 	db	77	;'M'
  1570  00E921  65                 	db	101	;'e'
  1571  00E922  61                 	db	97	;'a'
  1572  00E923  73                 	db	115	;'s'
  1573  00E924  75                 	db	117	;'u'
  1574  00E925  72                 	db	114	;'r'
  1575  00E926  65                 	db	101	;'e'
  1576  00E927  20                 	db	32
  1577  00E928  44                 	db	68	;'D'
  1578  00E929  69                 	db	105	;'i'
  1579  00E92A  65                 	db	101	;'e'
  1580  00E92B  20                 	db	32
  1581  00E92C  54                 	db	84	;'T'
  1582  00E92D  65                 	db	101	;'e'
  1583  00E92E  6D                 	db	109	;'m'
  1584  00E92F  70                 	db	112	;'p'
  1585  00E930  3F                 	db	63	;'?'
  1586  00E931  3A                 	db	58	;':'
  1587  00E932  20                 	db	32
  1588  00E933  52                 	db	82	;'R'
  1589  00E934  65                 	db	101	;'e'
  1590  00E935  74                 	db	116	;'t'
  1591  00E936  75                 	db	117	;'u'
  1592  00E937  72                 	db	114	;'r'
  1593  00E938  6E                 	db	110	;'n'
  1594  00E939  73                 	db	115	;'s'
  1595  00E93A  20                 	db	32
  1596  00E93B  74                 	db	116	;'t'
  1597  00E93C  68                 	db	104	;'h'
  1598  00E93D  65                 	db	101	;'e'
  1599  00E93E  20                 	db	32
  1600  00E93F  6D                 	db	109	;'m'
  1601  00E940  69                 	db	105	;'i'
  1602  00E941  63                 	db	99	;'c'
  1603  00E942  72                 	db	114	;'r'
  1604  00E943  6F                 	db	111	;'o'
  1605  00E944  63                 	db	99	;'c'
  1606  00E945  6F                 	db	111	;'o'
  1607  00E946  6E                 	db	110	;'n'
  1608  00E947  74                 	db	116	;'t'
  1609  00E948  72                 	db	114	;'r'
  1610  00E949  6F                 	db	111	;'o'
  1611  00E94A  6C                 	db	108	;'l'
  1612  00E94B  6C                 	db	108	;'l'
  1613  00E94C  65                 	db	101	;'e'
  1614  00E94D  72                 	db	114	;'r'
  1615  00E94E  20                 	db	32
  1616  00E94F  64                 	db	100	;'d'
  1617  00E950  69                 	db	105	;'i'
  1618  00E951  65                 	db	101	;'e'
  1619  00E952  20                 	db	32
  1620  00E953  74                 	db	116	;'t'
  1621  00E954  65                 	db	101	;'e'
  1622  00E955  6D                 	db	109	;'m'
  1623  00E956  70                 	db	112	;'p'
  1624  00E957  65                 	db	101	;'e'
  1625  00E958  72                 	db	114	;'r'
  1626  00E959  61                 	db	97	;'a'
  1627  00E95A  74                 	db	116	;'t'
  1628  00E95B  75                 	db	117	;'u'
  1629  00E95C  72                 	db	114	;'r'
  1630  00E95D  65                 	db	101	;'e'
  1631  00E95E  20                 	db	32
  1632  00E95F  69                 	db	105	;'i'
  1633  00E960  6E                 	db	110	;'n'
  1634  00E961  20                 	db	32
  1635  00E962  64                 	db	100	;'d'
  1636  00E963  65                 	db	101	;'e'
  1637  00E964  67                 	db	103	;'g'
  1638  00E965  72                 	db	114	;'r'
  1639  00E966  65                 	db	101	;'e'
  1640  00E967  65                 	db	101	;'e'
  1641  00E968  73                 	db	115	;'s'
  1642  00E969  20                 	db	32
  1643  00E96A  43                 	db	67	;'C'
  1644  00E96B  0A                 	db	10
  1645  00E96C  0D                 	db	13
  1646  00E96D  20                 	db	32
  1647  00E96E  20                 	db	32
  1648  00E96F  20                 	db	32
  1649  00E970  4D                 	db	77	;'M'
  1650  00E971  65                 	db	101	;'e'
  1651  00E972  61                 	db	97	;'a'
  1652  00E973  73                 	db	115	;'s'
  1653  00E974  75                 	db	117	;'u'
  1654  00E975  72                 	db	114	;'r'
  1655  00E976  65                 	db	101	;'e'
  1656  00E977  20                 	db	32
  1657  00E978  46                 	db	70	;'F'
  1658  00E979  56                 	db	86	;'V'
  1659  00E97A  52                 	db	82	;'R'
  1660  00E97B  3F                 	db	63	;'?'
  1661  00E97C  3A                 	db	58	;':'
  1662  00E97D  20                 	db	32
  1663  00E97E  52                 	db	82	;'R'
  1664  00E97F  65                 	db	101	;'e'
  1665  00E980  74                 	db	116	;'t'
  1666  00E981  75                 	db	117	;'u'
  1667  00E982  72                 	db	114	;'r'
  1668  00E983  6E                 	db	110	;'n'
  1669  00E984  73                 	db	115	;'s'
  1670  00E985  20                 	db	32
  1671  00E986  74                 	db	116	;'t'
  1672  00E987  68                 	db	104	;'h'
  1673  00E988  65                 	db	101	;'e'
  1674  00E989  20                 	db	32
  1675  00E98A  69                 	db	105	;'i'
  1676  00E98B  6E                 	db	110	;'n'
  1677  00E98C  74                 	db	116	;'t'
  1678  00E98D  65                 	db	101	;'e'
  1679  00E98E  72                 	db	114	;'r'
  1680  00E98F  6E                 	db	110	;'n'
  1681  00E990  61                 	db	97	;'a'
  1682  00E991  6C                 	db	108	;'l'
  1683  00E992  20                 	db	32
  1684  00E993  66                 	db	102	;'f'
  1685  00E994  69                 	db	105	;'i'
  1686  00E995  78                 	db	120	;'x'
  1687  00E996  65                 	db	101	;'e'
  1688  00E997  64                 	db	100	;'d'
  1689  00E998  20                 	db	32
  1690  00E999  76                 	db	118	;'v'
  1691  00E99A  6F                 	db	111	;'o'
  1692  00E99B  6C                 	db	108	;'l'
  1693  00E99C  74                 	db	116	;'t'
  1694  00E99D  61                 	db	97	;'a'
  1695  00E99E  67                 	db	103	;'g'
  1696  00E99F  65                 	db	101	;'e'
  1697  00E9A0  20                 	db	32
  1698  00E9A1  72                 	db	114	;'r'
  1699  00E9A2  65                 	db	101	;'e'
  1700  00E9A3  66                 	db	102	;'f'
  1701  00E9A4  65                 	db	101	;'e'
  1702  00E9A5  72                 	db	114	;'r'
  1703  00E9A6  65                 	db	101	;'e'
  1704  00E9A7  6E                 	db	110	;'n'
  1705  00E9A8  63                 	db	99	;'c'
  1706  00E9A9  65                 	db	101	;'e'
  1707  00E9AA  20                 	db	32
  1708  00E9AB  62                 	db	98	;'b'
  1709  00E9AC  75                 	db	117	;'u'
  1710  00E9AD  66                 	db	102	;'f'
  1711  00E9AE  66                 	db	102	;'f'
  1712  00E9AF  65                 	db	101	;'e'
  1713  00E9B0  72                 	db	114	;'r'
  1714  00E9B1  20                 	db	32
  1715  00E9B2  31                 	db	49	;'1'
  1716  00E9B3  20                 	db	32
  1717  00E9B4  6F                 	db	111	;'o'
  1718  00E9B5  75                 	db	117	;'u'
  1719  00E9B6  74                 	db	116	;'t'
  1720  00E9B7  70                 	db	112	;'p'
  1721  00E9B8  75                 	db	117	;'u'
  1722  00E9B9  74                 	db	116	;'t'
  1723  00E9BA  20                 	db	32
  1724  00E9BB  69                 	db	105	;'i'
  1725  00E9BC  6E                 	db	110	;'n'
  1726  00E9BD  20                 	db	32
  1727  00E9BE  76                 	db	118	;'v'
  1728  00E9BF  6F                 	db	111	;'o'
  1729  00E9C0  6C                 	db	108	;'l'
  1730  00E9C1  74                 	db	116	;'t'
  1731  00E9C2  73                 	db	115	;'s'
  1732  00E9C3  0A                 	db	10
  1733  00E9C4  0D                 	db	13
  1734  00E9C5  20                 	db	32
  1735  00E9C6  20                 	db	32
  1736  00E9C7  20                 	db	32
  1737  00E9C8  4D                 	db	77	;'M'
  1738  00E9C9  65                 	db	101	;'e'
  1739  00E9CA  61                 	db	97	;'a'
  1740  00E9CB  73                 	db	115	;'s'
  1741  00E9CC  75                 	db	117	;'u'
  1742  00E9CD  72                 	db	114	;'r'
  1743  00E9CE  65                 	db	101	;'e'
  1744  00E9CF  20                 	db	32
  1745  00E9D0  41                 	db	65	;'A'
  1746  00E9D1  56                 	db	86	;'V'
  1747  00E9D2  53                 	db	83	;'S'
  1748  00E9D3  53                 	db	83	;'S'
  1749  00E9D4  3F                 	db	63	;'?'
  1750  00E9D5  3A                 	db	58	;':'
  1751  00E9D6  20                 	db	32
  1752  00E9D7  52                 	db	82	;'R'
  1753  00E9D8  65                 	db	101	;'e'
  1754  00E9D9  74                 	db	116	;'t'
  1755  00E9DA  75                 	db	117	;'u'
  1756  00E9DB  72                 	db	114	;'r'
  1757  00E9DC  6E                 	db	110	;'n'
  1758  00E9DD  73                 	db	115	;'s'
  1759  00E9DE  20                 	db	32
  1760  00E9DF  74                 	db	116	;'t'
  1761  00E9E0  68                 	db	104	;'h'
  1762  00E9E1  65                 	db	101	;'e'
  1763  00E9E2  20                 	db	32
  1764  00E9E3  6D                 	db	109	;'m'
  1765  00E9E4  65                 	db	101	;'e'
  1766  00E9E5  61                 	db	97	;'a'
  1767  00E9E6  73                 	db	115	;'s'
  1768  00E9E7  75                 	db	117	;'u'
  1769  00E9E8  72                 	db	114	;'r'
  1770  00E9E9  65                 	db	101	;'e'
  1771  00E9EA  64                 	db	100	;'d'
  1772  00E9EB  20                 	db	32
  1773  00E9EC  76                 	db	118	;'v'
  1774  00E9ED  61                 	db	97	;'a'
  1775  00E9EE  6C                 	db	108	;'l'
  1776  00E9EF  75                 	db	117	;'u'
  1777  00E9F0  65                 	db	101	;'e'
  1778  00E9F1  20                 	db	32
  1779  00E9F2  6F                 	db	111	;'o'
  1780  00E9F3  66                 	db	102	;'f'
  1781  00E9F4  20                 	db	32
  1782  00E9F5  41                 	db	65	;'A'
  1783  00E9F6  6E                 	db	110	;'n'
  1784  00E9F7  61                 	db	97	;'a'
  1785  00E9F8  6C                 	db	108	;'l'
  1786  00E9F9  6F                 	db	111	;'o'
  1787  00E9FA  67                 	db	103	;'g'
  1788  00E9FB  20                 	db	32
  1789  00E9FC  56                 	db	86	;'V'
  1790  00E9FD  53                 	db	83	;'S'
  1791  00E9FE  53                 	db	83	;'S'
  1792  00E9FF  20                 	db	32
  1793  00EA00  69                 	db	105	;'i'
  1794  00EA01  6E                 	db	110	;'n'
  1795  00EA02  20                 	db	32
  1796  00EA03  76                 	db	118	;'v'
  1797  00EA04  6F                 	db	111	;'o'
  1798  00EA05  6C                 	db	108	;'l'
  1799  00EA06  74                 	db	116	;'t'
  1800  00EA07  73                 	db	115	;'s'
  1801  00EA08  0A                 	db	10
  1802  00EA09  0D                 	db	13
  1803  00EA0A  20                 	db	32
  1804  00EA0B  20                 	db	32
  1805  00EA0C  20                 	db	32
  1806  00EA0D  4D                 	db	77	;'M'
  1807  00EA0E  61                 	db	97	;'a'
  1808  00EA0F  78                 	db	120	;'x'
  1809  00EA10  20                 	db	32
  1810  00EA11  50                 	db	80	;'P'
  1811  00EA12  4F                 	db	79	;'O'
  1812  00EA13  53                 	db	83	;'S'
  1813  00EA14  33                 	db	51	;'3'
  1814  00EA15  50                 	db	80	;'P'
  1815  00EA16  33                 	db	51	;'3'
  1816  00EA17  20                 	db	32
  1817  00EA18  56                 	db	86	;'V'
  1818  00EA19  6F                 	db	111	;'o'
  1819  00EA1A  6C                 	db	108	;'l'
  1820  00EA1B  74                 	db	116	;'t'
  1821  00EA1C  61                 	db	97	;'a'
  1822  00EA1D  67                 	db	103	;'g'
  1823  00EA1E  65                 	db	101	;'e'
  1824  00EA1F  3F                 	db	63	;'?'
  1825  00EA20  3A                 	db	58	;':'
  1826  00EA21  20                 	db	32
  1827  00EA22  52                 	db	82	;'R'
  1828  00EA23  65                 	db	101	;'e'
  1829  00EA24  74                 	db	116	;'t'
  1830  00EA25  75                 	db	117	;'u'
  1831  00EA26  72                 	db	114	;'r'
  1832  00EA27  6E                 	db	110	;'n'
  1833  00EA28  73                 	db	115	;'s'
  1834  00EA29  20                 	db	32
  1835  00EA2A  74                 	db	116	;'t'
  1836  00EA2B  68                 	db	104	;'h'
  1837  00EA2C  65                 	db	101	;'e'
  1838  00EA2D  20                 	db	32
  1839  00EA2E  6D                 	db	109	;'m'
  1840  00EA2F  61                 	db	97	;'a'
  1841  00EA30  78                 	db	120	;'x'
  1842  00EA31  69                 	db	105	;'i'
  1843  00EA32  6D                 	db	109	;'m'
  1844  00EA33  75                 	db	117	;'u'
  1845  00EA34  6D                 	db	109	;'m'
  1846  00EA35  20                 	db	32
  1847  00EA36  72                 	db	114	;'r'
  1848  00EA37  65                 	db	101	;'e'
  1849  00EA38  63                 	db	99	;'c'
  1850  00EA39  6F                 	db	111	;'o'
  1851  00EA3A  72                 	db	114	;'r'
  1852  00EA3B  64                 	db	100	;'d'
  1853  00EA3C  65                 	db	101	;'e'
  1854  00EA3D  64                 	db	100	;'d'
  1855  00EA3E  20                 	db	32
  1856  00EA3F  2B                 	db	43
  1857  00EA40  33                 	db	51	;'3'
  1858  00EA41  2E                 	db	46
  1859  00EA42  33                 	db	51	;'3'
  1860  00EA43  56                 	db	86	;'V'
  1861  00EA44  20                 	db	32
  1862  00EA45  52                 	db	82	;'R'
  1863  00EA46  61                 	db	97	;'a'
  1864  00EA47  69                 	db	105	;'i'
  1865  00EA48  6C                 	db	108	;'l'
  1866  00EA49  20                 	db	32
  1867  00EA4A  56                 	db	86	;'V'
  1868  00EA4B  6F                 	db	111	;'o'
  1869  00EA4C  6C                 	db	108	;'l'
  1870  00EA4D  74                 	db	116	;'t'
  1871  00EA4E  61                 	db	97	;'a'
  1872  00EA4F  67                 	db	103	;'g'
  1873  00EA50  65                 	db	101	;'e'
  1874  00EA51  20                 	db	32
  1875  00EA52  6D                 	db	109	;'m'
  1876  00EA53  65                 	db	101	;'e'
  1877  00EA54  61                 	db	97	;'a'
  1878  00EA55  73                 	db	115	;'s'
  1879  00EA56  75                 	db	117	;'u'
  1880  00EA57  72                 	db	114	;'r'
  1881  00EA58  65                 	db	101	;'e'
  1882  00EA59  64                 	db	100	;'d'
  1883  00EA5A  0A                 	db	10
  1884  00EA5B  0D                 	db	13
  1885  00EA5C  20                 	db	32
  1886  00EA5D  20                 	db	32
  1887  00EA5E  20                 	db	32
  1888  00EA5F  4D                 	db	77	;'M'
  1889  00EA60  61                 	db	97	;'a'
  1890  00EA61  78                 	db	120	;'x'
  1891  00EA62  20                 	db	32
  1892  00EA63  50                 	db	80	;'P'
  1893  00EA64  4F                 	db	79	;'O'
  1894  00EA65  53                 	db	83	;'S'
  1895  00EA66  31                 	db	49	;'1'
  1896  00EA67  32                 	db	50	;'2'
  1897  00EA68  20                 	db	32
  1898  00EA69  56                 	db	86	;'V'
  1899  00EA6A  6F                 	db	111	;'o'
  1900  00EA6B  6C                 	db	108	;'l'
  1901  00EA6C  74                 	db	116	;'t'
  1902  00EA6D  61                 	db	97	;'a'
  1903  00EA6E  67                 	db	103	;'g'
  1904  00EA6F  65                 	db	101	;'e'
  1905  00EA70  3F                 	db	63	;'?'
  1906  00EA71  3A                 	db	58	;':'
  1907  00EA72  20                 	db	32
  1908  00EA73  52                 	db	82	;'R'
  1909  00EA74  65                 	db	101	;'e'
  1910  00EA75  74                 	db	116	;'t'
  1911  00EA76  75                 	db	117	;'u'
  1912  00EA77  72                 	db	114	;'r'
  1913  00EA78  6E                 	db	110	;'n'
  1914  00EA79  73                 	db	115	;'s'
  1915  00EA7A  20                 	db	32
  1916  00EA7B  74                 	db	116	;'t'
  1917  00EA7C  68                 	db	104	;'h'
  1918  00EA7D  65                 	db	101	;'e'
  1919  00EA7E  20                 	db	32
  1920  00EA7F  6D                 	db	109	;'m'
  1921  00EA80  61                 	db	97	;'a'
  1922  00EA81  78                 	db	120	;'x'
  1923  00EA82  69                 	db	105	;'i'
  1924  00EA83  6D                 	db	109	;'m'
  1925  00EA84  75                 	db	117	;'u'
  1926  00EA85  6D                 	db	109	;'m'
  1927  00EA86  20                 	db	32
  1928  00EA87  72                 	db	114	;'r'
  1929  00EA88  65                 	db	101	;'e'
  1930  00EA89  63                 	db	99	;'c'
  1931  00EA8A  6F                 	db	111	;'o'
  1932  00EA8B  72                 	db	114	;'r'
  1933  00EA8C  64                 	db	100	;'d'
  1934  00EA8D  65                 	db	101	;'e'
  1935  00EA8E  64                 	db	100	;'d'
  1936  00EA8F  20                 	db	32
  1937  00EA90  2B                 	db	43
  1938  00EA91  31                 	db	49	;'1'
  1939  00EA92  32                 	db	50	;'2'
  1940  00EA93  56                 	db	86	;'V'
  1941  00EA94  20                 	db	32
  1942  00EA95  52                 	db	82	;'R'
  1943  00EA96  61                 	db	97	;'a'
  1944  00EA97  69                 	db	105	;'i'
  1945  00EA98  6C                 	db	108	;'l'
  1946  00EA99  20                 	db	32
  1947  00EA9A  56                 	db	86	;'V'
  1948  00EA9B  6F                 	db	111	;'o'
  1949  00EA9C  6C                 	db	108	;'l'
  1950  00EA9D  74                 	db	116	;'t'
  1951  00EA9E  61                 	db	97	;'a'
  1952  00EA9F  67                 	db	103	;'g'
  1953  00EAA0  65                 	db	101	;'e'
  1954  00EAA1  20                 	db	32
  1955  00EAA2  6D                 	db	109	;'m'
  1956  00EAA3  65                 	db	101	;'e'
  1957  00EAA4  61                 	db	97	;'a'
  1958  00EAA5  73                 	db	115	;'s'
  1959  00EAA6  75                 	db	117	;'u'
  1960  00EAA7  72                 	db	114	;'r'
  1961  00EAA8  65                 	db	101	;'e'
  1962  00EAA9  64                 	db	100	;'d'
  1963  00EAAA  0A                 	db	10
  1964  00EAAB  0D                 	db	13
  1965  00EAAC  20                 	db	32
  1966  00EAAD  20                 	db	32
  1967  00EAAE  20                 	db	32
  1968  00EAAF  4D                 	db	77	;'M'
  1969  00EAB0  61                 	db	97	;'a'
  1970  00EAB1  78                 	db	120	;'x'
  1971  00EAB2  20                 	db	32
  1972  00EAB3  44                 	db	68	;'D'
  1973  00EAB4  69                 	db	105	;'i'
  1974  00EAB5  65                 	db	101	;'e'
  1975  00EAB6  20                 	db	32
  1976  00EAB7  54                 	db	84	;'T'
  1977  00EAB8  65                 	db	101	;'e'
  1978  00EAB9  6D                 	db	109	;'m'
  1979  00EABA  70                 	db	112	;'p'
  1980  00EABB  3F                 	db	63	;'?'
  1981  00EABC  3A                 	db	58	;':'
  1982  00EABD  20                 	db	32
  1983  00EABE  52                 	db	82	;'R'
  1984  00EABF  65                 	db	101	;'e'
  1985  00EAC0  74                 	db	116	;'t'
  1986  00EAC1  75                 	db	117	;'u'
  1987  00EAC2  72                 	db	114	;'r'
  1988  00EAC3  6E                 	db	110	;'n'
  1989  00EAC4  73                 	db	115	;'s'
  1990  00EAC5  20                 	db	32
  1991  00EAC6  74                 	db	116	;'t'
  1992  00EAC7  68                 	db	104	;'h'
  1993  00EAC8  65                 	db	101	;'e'
  1994  00EAC9  20                 	db	32
  1995  00EACA  6D                 	db	109	;'m'
  1996  00EACB  61                 	db	97	;'a'
  1997  00EACC  78                 	db	120	;'x'
  1998  00EACD  69                 	db	105	;'i'
  1999  00EACE  6D                 	db	109	;'m'
  2000  00EACF  75                 	db	117	;'u'
  2001  00EAD0  6D                 	db	109	;'m'
  2002  00EAD1  20                 	db	32
  2003  00EAD2  72                 	db	114	;'r'
  2004  00EAD3  65                 	db	101	;'e'
  2005  00EAD4  63                 	db	99	;'c'
  2006  00EAD5  6F                 	db	111	;'o'
  2007  00EAD6  72                 	db	114	;'r'
  2008  00EAD7  64                 	db	100	;'d'
  2009  00EAD8  65                 	db	101	;'e'
  2010  00EAD9  64                 	db	100	;'d'
  2011  00EADA  20                 	db	32
  2012  00EADB  64                 	db	100	;'d'
  2013  00EADC  69                 	db	105	;'i'
  2014  00EADD  65                 	db	101	;'e'
  2015  00EADE  20                 	db	32
  2016  00EADF  74                 	db	116	;'t'
  2017  00EAE0  65                 	db	101	;'e'
  2018  00EAE1  6D                 	db	109	;'m'
  2019  00EAE2  70                 	db	112	;'p'
  2020  00EAE3  65                 	db	101	;'e'
  2021  00EAE4  72                 	db	114	;'r'
  2022  00EAE5  61                 	db	97	;'a'
  2023  00EAE6  74                 	db	116	;'t'
  2024  00EAE7  75                 	db	117	;'u'
  2025  00EAE8  72                 	db	114	;'r'
  2026  00EAE9  65                 	db	101	;'e'
  2027  00EAEA  20                 	db	32
  2028  00EAEB  6D                 	db	109	;'m'
  2029  00EAEC  65                 	db	101	;'e'
  2030  00EAED  61                 	db	97	;'a'
  2031  00EAEE  73                 	db	115	;'s'
  2032  00EAEF  75                 	db	117	;'u'
  2033  00EAF0  72                 	db	114	;'r'
  2034  00EAF1  65                 	db	101	;'e'
  2035  00EAF2  64                 	db	100	;'d'
  2036  00EAF3  0A                 	db	10
  2037  00EAF4  0D                 	db	13
  2038  00EAF5  20                 	db	32
  2039  00EAF6  20                 	db	32
  2040  00EAF7  20                 	db	32
  2041  00EAF8  4D                 	db	77	;'M'
  2042  00EAF9  61                 	db	97	;'a'
  2043  00EAFA  78                 	db	120	;'x'
  2044  00EAFB  20                 	db	32
  2045  00EAFC  46                 	db	70	;'F'
  2046  00EAFD  56                 	db	86	;'V'
  2047  00EAFE  52                 	db	82	;'R'
  2048  00EAFF  20                 	db	32
  2049  00EB00  56                 	db	86	;'V'
  2050  00EB01  6F                 	db	111	;'o'
  2051  00EB02  6C                 	db	108	;'l'
  2052  00EB03  74                 	db	116	;'t'
  2053  00EB04  61                 	db	97	;'a'
  2054  00EB05  67                 	db	103	;'g'
  2055  00EB06  65                 	db	101	;'e'
  2056  00EB07  3F                 	db	63	;'?'
  2057  00EB08  3A                 	db	58	;':'
  2058  00EB09  20                 	db	32
  2059  00EB0A  52                 	db	82	;'R'
  2060  00EB0B  65                 	db	101	;'e'
  2061  00EB0C  74                 	db	116	;'t'
  2062  00EB0D  75                 	db	117	;'u'
  2063  00EB0E  72                 	db	114	;'r'
  2064  00EB0F  6E                 	db	110	;'n'
  2065  00EB10  73                 	db	115	;'s'
  2066  00EB11  20                 	db	32
  2067  00EB12  74                 	db	116	;'t'
  2068  00EB13  68                 	db	104	;'h'
  2069  00EB14  65                 	db	101	;'e'
  2070  00EB15  20                 	db	32
  2071  00EB16  6D                 	db	109	;'m'
  2072  00EB17  61                 	db	97	;'a'
  2073  00EB18  78                 	db	120	;'x'
  2074  00EB19  69                 	db	105	;'i'
  2075  00EB1A  6D                 	db	109	;'m'
  2076  00EB1B  75                 	db	117	;'u'
  2077  00EB1C  6D                 	db	109	;'m'
  2078  00EB1D  20                 	db	32
  2079  00EB1E  72                 	db	114	;'r'
  2080  00EB1F  65                 	db	101	;'e'
  2081  00EB20  63                 	db	99	;'c'
  2082  00EB21  6F                 	db	111	;'o'
  2083  00EB22  72                 	db	114	;'r'
  2084  00EB23  64                 	db	100	;'d'
  2085  00EB24  65                 	db	101	;'e'
  2086  00EB25  64                 	db	100	;'d'
  2087  00EB26  20                 	db	32
  2088  00EB27  46                 	db	70	;'F'
  2089  00EB28  56                 	db	86	;'V'
  2090  00EB29  52                 	db	82	;'R'
  2091  00EB2A  20                 	db	32
  2092  00EB2B  42                 	db	66	;'B'
  2093  00EB2C  75                 	db	117	;'u'
  2094  00EB2D  66                 	db	102	;'f'
  2095  00EB2E  66                 	db	102	;'f'
  2096  00EB2F  65                 	db	101	;'e'
  2097  00EB30  72                 	db	114	;'r'
  2098  00EB31  20                 	db	32
  2099  00EB32  31                 	db	49	;'1'
  2100  00EB33  20                 	db	32
  2101  00EB34  56                 	db	86	;'V'
  2102  00EB35  6F                 	db	111	;'o'
  2103  00EB36  6C                 	db	108	;'l'
  2104  00EB37  74                 	db	116	;'t'
  2105  00EB38  61                 	db	97	;'a'
  2106  00EB39  67                 	db	103	;'g'
  2107  00EB3A  65                 	db	101	;'e'
  2108  00EB3B  20                 	db	32
  2109  00EB3C  6D                 	db	109	;'m'
  2110  00EB3D  65                 	db	101	;'e'
  2111  00EB3E  61                 	db	97	;'a'
  2112  00EB3F  73                 	db	115	;'s'
  2113  00EB40  75                 	db	117	;'u'
  2114  00EB41  72                 	db	114	;'r'
  2115  00EB42  65                 	db	101	;'e'
  2116  00EB43  64                 	db	100	;'d'
  2117  00EB44  0A                 	db	10
  2118  00EB45  0D                 	db	13
  2119  00EB46  0A                 	db	10
  2120  00EB47  0D                 	db	13
  2121  00EB48  00                 	db	0
  2122  00EB49                     STR_139:
  2123  00EB49  4C                 	db	76	;'L'
  2124  00EB4A  69                 	db	105	;'i'
  2125  00EB4B  73                 	db	115	;'s'
  2126  00EB4C  74                 	db	116	;'t'
  2127  00EB4D  20                 	db	32
  2128  00EB4E  6F                 	db	111	;'o'
  2129  00EB4F  66                 	db	102	;'f'
  2130  00EB50  20                 	db	32
  2131  00EB51  73                 	db	115	;'s'
  2132  00EB52  75                 	db	117	;'u'
  2133  00EB53  70                 	db	112	;'p'
  2134  00EB54  70                 	db	112	;'p'
  2135  00EB55  6F                 	db	111	;'o'
  2136  00EB56  72                 	db	114	;'r'
  2137  00EB57  74                 	db	116	;'t'
  2138  00EB58  65                 	db	101	;'e'
  2139  00EB59  64                 	db	100	;'d'
  2140  00EB5A  20                 	db	32
  2141  00EB5B  50                 	db	80	;'P'
  2142  00EB5C  72                 	db	114	;'r'
  2143  00EB5D  69                 	db	105	;'i'
  2144  00EB5E  6D                 	db	109	;'m'
  2145  00EB5F  61                 	db	97	;'a'
  2146  00EB60  72                 	db	114	;'r'
  2147  00EB61  79                 	db	121	;'y'
  2148  00EB62  20                 	db	32
  2149  00EB63  4D                 	db	77	;'M'
  2150  00EB64  65                 	db	101	;'e'
  2151  00EB65  61                 	db	97	;'a'
  2152  00EB66  73                 	db	115	;'s'
  2153  00EB67  75                 	db	117	;'u'
  2154  00EB68  72                 	db	114	;'r'
  2155  00EB69  65                 	db	101	;'e'
  2156  00EB6A  6D                 	db	109	;'m'
  2157  00EB6B  65                 	db	101	;'e'
  2158  00EB6C  6E                 	db	110	;'n'
  2159  00EB6D  74                 	db	116	;'t'
  2160  00EB6E  20                 	db	32
  2161  00EB6F  43                 	db	67	;'C'
  2162  00EB70  6F                 	db	111	;'o'
  2163  00EB71  6D                 	db	109	;'m'
  2164  00EB72  6D                 	db	109	;'m'
  2165  00EB73  61                 	db	97	;'a'
  2166  00EB74  6E                 	db	110	;'n'
  2167  00EB75  64                 	db	100	;'d'
  2168  00EB76  73                 	db	115	;'s'
  2169  00EB77  3A                 	db	58	;':'
  2170  00EB78  0A                 	db	10
  2171  00EB79  0D                 	db	13
  2172  00EB7A  20                 	db	32
  2173  00EB7B  20                 	db	32
  2174  00EB7C  20                 	db	32
  2175  00EB7D  4D                 	db	77	;'M'
  2176  00EB7E  65                 	db	101	;'e'
  2177  00EB7F  61                 	db	97	;'a'
  2178  00EB80  73                 	db	115	;'s'
  2179  00EB81  75                 	db	117	;'u'
  2180  00EB82  72                 	db	114	;'r'
  2181  00EB83  65                 	db	101	;'e'
  2182  00EB84  20                 	db	32
  2183  00EB85  44                 	db	68	;'D'
  2184  00EB86  65                 	db	101	;'e'
  2185  00EB87  74                 	db	116	;'t'
  2186  00EB88  65                 	db	101	;'e'
  2187  00EB89  63                 	db	99	;'c'
  2188  00EB8A  74                 	db	116	;'t'
  2189  00EB8B  65                 	db	101	;'e'
  2190  00EB8C  64                 	db	100	;'d'
  2191  00EB8D  20                 	db	32
  2192  00EB8E  43                 	db	67	;'C'
  2193  00EB8F  75                 	db	117	;'u'
  2194  00EB90  72                 	db	114	;'r'
  2195  00EB91  72                 	db	114	;'r'
  2196  00EB92  65                 	db	101	;'e'
  2197  00EB93  6E                 	db	110	;'n'
  2198  00EB94  74                 	db	116	;'t'
  2199  00EB95  3F                 	db	63	;'?'
  2200  00EB96  3A                 	db	58	;':'
  2201  00EB97  20                 	db	32
  2202  00EB98  52                 	db	82	;'R'
  2203  00EB99  65                 	db	101	;'e'
  2204  00EB9A  74                 	db	116	;'t'
  2205  00EB9B  75                 	db	117	;'u'
  2206  00EB9C  72                 	db	114	;'r'
  2207  00EB9D  6E                 	db	110	;'n'
  2208  00EB9E  73                 	db	115	;'s'
  2209  00EB9F  20                 	db	32
  2210  00EBA0  6D                 	db	109	;'m'
  2211  00EBA1  65                 	db	101	;'e'
  2212  00EBA2  61                 	db	97	;'a'
  2213  00EBA3  73                 	db	115	;'s'
  2214  00EBA4  75                 	db	117	;'u'
  2215  00EBA5  72                 	db	114	;'r'
  2216  00EBA6  65                 	db	101	;'e'
  2217  00EBA7  64                 	db	100	;'d'
  2218  00EBA8  20                 	db	32
  2219  00EBA9  6F                 	db	111	;'o'
  2220  00EBAA  75                 	db	117	;'u'
  2221  00EBAB  74                 	db	116	;'t'
  2222  00EBAC  70                 	db	112	;'p'
  2223  00EBAD  75                 	db	117	;'u'
  2224  00EBAE  74                 	db	116	;'t'
  2225  00EBAF  20                 	db	32
  2226  00EBB0  63                 	db	99	;'c'
  2227  00EBB1  75                 	db	117	;'u'
  2228  00EBB2  72                 	db	114	;'r'
  2229  00EBB3  72                 	db	114	;'r'
  2230  00EBB4  65                 	db	101	;'e'
  2231  00EBB5  6E                 	db	110	;'n'
  2232  00EBB6  74                 	db	116	;'t'
  2233  00EBB7  20                 	db	32
  2234  00EBB8  69                 	db	105	;'i'
  2235  00EBB9  6E                 	db	110	;'n'
  2236  00EBBA  20                 	db	32
  2237  00EBBB  61                 	db	97	;'a'
  2238  00EBBC  6D                 	db	109	;'m'
  2239  00EBBD  70                 	db	112	;'p'
  2240  00EBBE  73                 	db	115	;'s'
  2241  00EBBF  20                 	db	32
  2242  00EBC0  61                 	db	97	;'a'
  2243  00EBC1  73                 	db	115	;'s'
  2244  00EBC2  20                 	db	32
  2245  00EBC3  73                 	db	115	;'s'
  2246  00EBC4  65                 	db	101	;'e'
  2247  00EBC5  65                 	db	101	;'e'
  2248  00EBC6  6E                 	db	110	;'n'
  2249  00EBC7  20                 	db	32
  2250  00EBC8  62                 	db	98	;'b'
  2251  00EBC9  79                 	db	121	;'y'
  2252  00EBCA  20                 	db	32
  2253  00EBCB  41                 	db	65	;'A'
  2254  00EBCC  44                 	db	68	;'D'
  2255  00EBCD  43                 	db	67	;'C'
  2256  00EBCE  0A                 	db	10
  2257  00EBCF  0D                 	db	13
  2258  00EBD0  20                 	db	32
  2259  00EBD1  20                 	db	32
  2260  00EBD2  20                 	db	32
  2261  00EBD3  4D                 	db	77	;'M'
  2262  00EBD4  65                 	db	101	;'e'
  2263  00EBD5  61                 	db	97	;'a'
  2264  00EBD6  73                 	db	115	;'s'
  2265  00EBD7  75                 	db	117	;'u'
  2266  00EBD8  72                 	db	114	;'r'
  2267  00EBD9  65                 	db	101	;'e'
  2268  00EBDA  20                 	db	32
  2269  00EBDB  52                 	db	82	;'R'
  2270  00EBDC  4D                 	db	77	;'M'
  2271  00EBDD  53                 	db	83	;'S'
  2272  00EBDE  20                 	db	32
  2273  00EBDF  43                 	db	67	;'C'
  2274  00EBE0  75                 	db	117	;'u'
  2275  00EBE1  72                 	db	114	;'r'
  2276  00EBE2  72                 	db	114	;'r'
  2277  00EBE3  65                 	db	101	;'e'
  2278  00EBE4  6E                 	db	110	;'n'
  2279  00EBE5  74                 	db	116	;'t'
  2280  00EBE6  3F                 	db	63	;'?'
  2281  00EBE7  3A                 	db	58	;':'
  2282  00EBE8  20                 	db	32
  2283  00EBE9  52                 	db	82	;'R'
  2284  00EBEA  65                 	db	101	;'e'
  2285  00EBEB  74                 	db	116	;'t'
  2286  00EBEC  75                 	db	117	;'u'
  2287  00EBED  72                 	db	114	;'r'
  2288  00EBEE  6E                 	db	110	;'n'
  2289  00EBEF  73                 	db	115	;'s'
  2290  00EBF0  20                 	db	32
  2291  00EBF1  74                 	db	116	;'t'
  2292  00EBF2  68                 	db	104	;'h'
  2293  00EBF3  65                 	db	101	;'e'
  2294  00EBF4  20                 	db	32
  2295  00EBF5  63                 	db	99	;'c'
  2296  00EBF6  61                 	db	97	;'a'
  2297  00EBF7  6C                 	db	108	;'l'
  2298  00EBF8  63                 	db	99	;'c'
  2299  00EBF9  75                 	db	117	;'u'
  2300  00EBFA  6C                 	db	108	;'l'
  2301  00EBFB  61                 	db	97	;'a'
  2302  00EBFC  74                 	db	116	;'t'
  2303  00EBFD  65                 	db	101	;'e'
  2304  00EBFE  64                 	db	100	;'d'
  2305  00EBFF  20                 	db	32
  2306  00EC00  52                 	db	82	;'R'
  2307  00EC01  4D                 	db	77	;'M'
  2308  00EC02  53                 	db	83	;'S'
  2309  00EC03  20                 	db	32
  2310  00EC04  6F                 	db	111	;'o'
  2311  00EC05  75                 	db	117	;'u'
  2312  00EC06  74                 	db	116	;'t'
  2313  00EC07  70                 	db	112	;'p'
  2314  00EC08  75                 	db	117	;'u'
  2315  00EC09  74                 	db	116	;'t'
  2316  00EC0A  20                 	db	32
  2317  00EC0B  63                 	db	99	;'c'
  2318  00EC0C  75                 	db	117	;'u'
  2319  00EC0D  72                 	db	114	;'r'
  2320  00EC0E  72                 	db	114	;'r'
  2321  00EC0F  65                 	db	101	;'e'
  2322  00EC10  6E                 	db	110	;'n'
  2323  00EC11  74                 	db	116	;'t'
  2324  00EC12  20                 	db	32
  2325  00EC13  66                 	db	102	;'f'
  2326  00EC14  72                 	db	114	;'r'
  2327  00EC15  6F                 	db	111	;'o'
  2328  00EC16  6D                 	db	109	;'m'
  2329  00EC17  20                 	db	32
  2330  00EC18  6D                 	db	109	;'m'
  2331  00EC19  65                 	db	101	;'e'
  2332  00EC1A  61                 	db	97	;'a'
  2333  00EC1B  73                 	db	115	;'s'
  2334  00EC1C  75                 	db	117	;'u'
  2335  00EC1D  72                 	db	114	;'r'
  2336  00EC1E  65                 	db	101	;'e'
  2337  00EC1F  6D                 	db	109	;'m'
  2338  00EC20  65                 	db	101	;'e'
  2339  00EC21  6E                 	db	110	;'n'
  2340  00EC22  74                 	db	116	;'t'
  2341  00EC23  73                 	db	115	;'s'
  2342  00EC24  20                 	db	32
  2343  00EC25  61                 	db	97	;'a'
  2344  00EC26  6E                 	db	110	;'n'
  2345  00EC27  64                 	db	100	;'d'
  2346  00EC28  20                 	db	32
  2347  00EC29  54                 	db	84	;'T'
  2348  00EC2A  52                 	db	82	;'R'
  2349  00EC2B  49                 	db	73	;'I'
  2350  00EC2C  41                 	db	65	;'A'
  2351  00EC2D  43                 	db	67	;'C'
  2352  00EC2E  20                 	db	32
  2353  00EC2F  66                 	db	102	;'f'
  2354  00EC30  69                 	db	105	;'i'
  2355  00EC31  72                 	db	114	;'r'
  2356  00EC32  69                 	db	105	;'i'
  2357  00EC33  6E                 	db	110	;'n'
  2358  00EC34  67                 	db	103	;'g'
  2359  00EC35  20                 	db	32
  2360  00EC36  61                 	db	97	;'a'
  2361  00EC37  6E                 	db	110	;'n'
  2362  00EC38  67                 	db	103	;'g'
  2363  00EC39  6C                 	db	108	;'l'
  2364  00EC3A  65                 	db	101	;'e'
  2365  00EC3B  0A                 	db	10
  2366  00EC3C  0D                 	db	13
  2367  00EC3D  20                 	db	32
  2368  00EC3E  20                 	db	32
  2369  00EC3F  20                 	db	32
  2370  00EC40  4D                 	db	77	;'M'
  2371  00EC41  65                 	db	101	;'e'
  2372  00EC42  61                 	db	97	;'a'
  2373  00EC43  73                 	db	115	;'s'
  2374  00EC44  75                 	db	117	;'u'
  2375  00EC45  72                 	db	114	;'r'
  2376  00EC46  65                 	db	101	;'e'
  2377  00EC47  20                 	db	32
  2378  00EC48  52                 	db	82	;'R'
  2379  00EC49  4D                 	db	77	;'M'
  2380  00EC4A  53                 	db	83	;'S'
  2381  00EC4B  20                 	db	32
  2382  00EC4C  56                 	db	86	;'V'
  2383  00EC4D  6F                 	db	111	;'o'
  2384  00EC4E  6C                 	db	108	;'l'
  2385  00EC4F  74                 	db	116	;'t'
  2386  00EC50  61                 	db	97	;'a'
  2387  00EC51  67                 	db	103	;'g'
  2388  00EC52  65                 	db	101	;'e'
  2389  00EC53  3F                 	db	63	;'?'
  2390  00EC54  3A                 	db	58	;':'
  2391  00EC55  20                 	db	32
  2392  00EC56  52                 	db	82	;'R'
  2393  00EC57  65                 	db	101	;'e'
  2394  00EC58  74                 	db	116	;'t'
  2395  00EC59  75                 	db	117	;'u'
  2396  00EC5A  72                 	db	114	;'r'
  2397  00EC5B  6E                 	db	110	;'n'
  2398  00EC5C  73                 	db	115	;'s'
  2399  00EC5D  20                 	db	32
  2400  00EC5E  74                 	db	116	;'t'
  2401  00EC5F  68                 	db	104	;'h'
  2402  00EC60  65                 	db	101	;'e'
  2403  00EC61  20                 	db	32
  2404  00EC62  63                 	db	99	;'c'
  2405  00EC63  61                 	db	97	;'a'
  2406  00EC64  6C                 	db	108	;'l'
  2407  00EC65  63                 	db	99	;'c'
  2408  00EC66  75                 	db	117	;'u'
  2409  00EC67  6C                 	db	108	;'l'
  2410  00EC68  61                 	db	97	;'a'
  2411  00EC69  74                 	db	116	;'t'
  2412  00EC6A  65                 	db	101	;'e'
  2413  00EC6B  64                 	db	100	;'d'
  2414  00EC6C  20                 	db	32
  2415  00EC6D  52                 	db	82	;'R'
  2416  00EC6E  4D                 	db	77	;'M'
  2417  00EC6F  53                 	db	83	;'S'
  2418  00EC70  20                 	db	32
  2419  00EC71  6F                 	db	111	;'o'
  2420  00EC72  75                 	db	117	;'u'
  2421  00EC73  74                 	db	116	;'t'
  2422  00EC74  70                 	db	112	;'p'
  2423  00EC75  75                 	db	117	;'u'
  2424  00EC76  74                 	db	116	;'t'
  2425  00EC77  20                 	db	32
  2426  00EC78  76                 	db	118	;'v'
  2427  00EC79  6F                 	db	111	;'o'
  2428  00EC7A  6C                 	db	108	;'l'
  2429  00EC7B  74                 	db	116	;'t'
  2430  00EC7C  61                 	db	97	;'a'
  2431  00EC7D  67                 	db	103	;'g'
  2432  00EC7E  65                 	db	101	;'e'
  2433  00EC7F  20                 	db	32
  2434  00EC80  66                 	db	102	;'f'
  2435  00EC81  72                 	db	114	;'r'
  2436  00EC82  6F                 	db	111	;'o'
  2437  00EC83  6D                 	db	109	;'m'
  2438  00EC84  20                 	db	32
  2439  00EC85  54                 	db	84	;'T'
  2440  00EC86  52                 	db	82	;'R'
  2441  00EC87  49                 	db	73	;'I'
  2442  00EC88  41                 	db	65	;'A'
  2443  00EC89  43                 	db	67	;'C'
  2444  00EC8A  20                 	db	32
  2445  00EC8B  66                 	db	102	;'f'
  2446  00EC8C  69                 	db	105	;'i'
  2447  00EC8D  72                 	db	114	;'r'
  2448  00EC8E  69                 	db	105	;'i'
  2449  00EC8F  6E                 	db	110	;'n'
  2450  00EC90  67                 	db	103	;'g'
  2451  00EC91  20                 	db	32
  2452  00EC92  61                 	db	97	;'a'
  2453  00EC93  6E                 	db	110	;'n'
  2454  00EC94  67                 	db	103	;'g'
  2455  00EC95  6C                 	db	108	;'l'
  2456  00EC96  65                 	db	101	;'e'
  2457  00EC97  0A                 	db	10
  2458  00EC98  0D                 	db	13
  2459  00EC99  20                 	db	32
  2460  00EC9A  20                 	db	32
  2461  00EC9B  20                 	db	32
  2462  00EC9C  4D                 	db	77	;'M'
  2463  00EC9D  65                 	db	101	;'e'
  2464  00EC9E  61                 	db	97	;'a'
  2465  00EC9F  73                 	db	115	;'s'
  2466  00ECA0  75                 	db	117	;'u'
  2467  00ECA1  72                 	db	114	;'r'
  2468  00ECA2  65                 	db	101	;'e'
  2469  00ECA3  20                 	db	32
  2470  00ECA4  50                 	db	80	;'P'
  2471  00ECA5  6F                 	db	111	;'o'
  2472  00ECA6  77                 	db	119	;'w'
  2473  00ECA7  65                 	db	101	;'e'
  2474  00ECA8  72                 	db	114	;'r'
  2475  00ECA9  3F                 	db	63	;'?'
  2476  00ECAA  3A                 	db	58	;':'
  2477  00ECAB  20                 	db	32
  2478  00ECAC  52                 	db	82	;'R'
  2479  00ECAD  65                 	db	101	;'e'
  2480  00ECAE  74                 	db	116	;'t'
  2481  00ECAF  75                 	db	117	;'u'
  2482  00ECB0  72                 	db	114	;'r'
  2483  00ECB1  6E                 	db	110	;'n'
  2484  00ECB2  73                 	db	115	;'s'
  2485  00ECB3  20                 	db	32
  2486  00ECB4  74                 	db	116	;'t'
  2487  00ECB5  68                 	db	104	;'h'
  2488  00ECB6  65                 	db	101	;'e'
  2489  00ECB7  20                 	db	32
  2490  00ECB8  63                 	db	99	;'c'
  2491  00ECB9  61                 	db	97	;'a'
  2492  00ECBA  6C                 	db	108	;'l'
  2493  00ECBB  63                 	db	99	;'c'
  2494  00ECBC  75                 	db	117	;'u'
  2495  00ECBD  6C                 	db	108	;'l'
  2496  00ECBE  61                 	db	97	;'a'
  2497  00ECBF  74                 	db	116	;'t'
  2498  00ECC0  65                 	db	101	;'e'
  2499  00ECC1  64                 	db	100	;'d'
  2500  00ECC2  20                 	db	32
  2501  00ECC3  6F                 	db	111	;'o'
  2502  00ECC4  75                 	db	117	;'u'
  2503  00ECC5  74                 	db	116	;'t'
  2504  00ECC6  70                 	db	112	;'p'
  2505  00ECC7  75                 	db	117	;'u'
  2506  00ECC8  74                 	db	116	;'t'
  2507  00ECC9  20                 	db	32
  2508  00ECCA  70                 	db	112	;'p'
  2509  00ECCB  6F                 	db	111	;'o'
  2510  00ECCC  77                 	db	119	;'w'
  2511  00ECCD  65                 	db	101	;'e'
  2512  00ECCE  72                 	db	114	;'r'
  2513  00ECCF  20                 	db	32
  2514  00ECD0  69                 	db	105	;'i'
  2515  00ECD1  6E                 	db	110	;'n'
  2516  00ECD2  20                 	db	32
  2517  00ECD3  57                 	db	87	;'W'
  2518  00ECD4  61                 	db	97	;'a'
  2519  00ECD5  74                 	db	116	;'t'
  2520  00ECD6  74                 	db	116	;'t'
  2521  00ECD7  73                 	db	115	;'s'
  2522  00ECD8  0A                 	db	10
  2523  00ECD9  0D                 	db	13
  2524  00ECDA  20                 	db	32
  2525  00ECDB  20                 	db	32
  2526  00ECDC  20                 	db	32
  2527  00ECDD  4C                 	db	76	;'L'
  2528  00ECDE  6F                 	db	111	;'o'
  2529  00ECDF  61                 	db	97	;'a'
  2530  00ECE0  64                 	db	100	;'d'
  2531  00ECE1  20                 	db	32
  2532  00ECE2  4F                 	db	79	;'O'
  2533  00ECE3  6E                 	db	110	;'n'
  2534  00ECE4  20                 	db	32
  2535  00ECE5  54                 	db	84	;'T'
  2536  00ECE6  69                 	db	105	;'i'
  2537  00ECE7  6D                 	db	109	;'m'
  2538  00ECE8  65                 	db	101	;'e'
  2539  00ECE9  3F                 	db	63	;'?'
  2540  00ECEA  3A                 	db	58	;':'
  2541  00ECEB  20                 	db	32
  2542  00ECEC  52                 	db	82	;'R'
  2543  00ECED  65                 	db	101	;'e'
  2544  00ECEE  74                 	db	116	;'t'
  2545  00ECEF  75                 	db	117	;'u'
  2546  00ECF0  72                 	db	114	;'r'
  2547  00ECF1  6E                 	db	110	;'n'
  2548  00ECF2  73                 	db	115	;'s'
  2549  00ECF3  20                 	db	32
  2550  00ECF4  6C                 	db	108	;'l'
  2551  00ECF5  6F                 	db	111	;'o'
  2552  00ECF6  61                 	db	97	;'a'
  2553  00ECF7  64                 	db	100	;'d'
  2554  00ECF8  20                 	db	32
  2555  00ECF9  6F                 	db	111	;'o'
  2556  00ECFA  6E                 	db	110	;'n'
  2557  00ECFB  20                 	db	32
  2558  00ECFC  74                 	db	116	;'t'
  2559  00ECFD  69                 	db	105	;'i'
  2560  00ECFE  6D                 	db	109	;'m'
  2561  00ECFF  65                 	db	101	;'e'
  2562  00ED00  20                 	db	32
  2563  00ED01  73                 	db	115	;'s'
  2564  00ED02  69                 	db	105	;'i'
  2565  00ED03  6E                 	db	110	;'n'
  2566  00ED04  63                 	db	99	;'c'
  2567  00ED05  65                 	db	101	;'e'
  2568  00ED06  20                 	db	32
  2569  00ED07  6C                 	db	108	;'l'
  2570  00ED08  61                 	db	97	;'a'
  2571  00ED09  73                 	db	115	;'s'
  2572  00ED0A  74                 	db	116	;'t'
  2573  00ED0B  20                 	db	32
  2574  00ED0C  64                 	db	100	;'d'
  2575  00ED0D  65                 	db	101	;'e'
  2576  00ED0E  76                 	db	118	;'v'
  2577  00ED0F  69                 	db	105	;'i'
  2578  00ED10  63                 	db	99	;'c'
  2579  00ED11  65                 	db	101	;'e'
  2580  00ED12  20                 	db	32
  2581  00ED13  72                 	db	114	;'r'
  2582  00ED14  65                 	db	101	;'e'
  2583  00ED15  73                 	db	115	;'s'
  2584  00ED16  65                 	db	101	;'e'
  2585  00ED17  74                 	db	116	;'t'
  2586  00ED18  20                 	db	32
  2587  00ED19  69                 	db	105	;'i'
  2588  00ED1A  6E                 	db	110	;'n'
  2589  00ED1B  20                 	db	32
  2590  00ED1C  73                 	db	115	;'s'
  2591  00ED1D  65                 	db	101	;'e'
  2592  00ED1E  63                 	db	99	;'c'
  2593  00ED1F  6F                 	db	111	;'o'
  2594  00ED20  6E                 	db	110	;'n'
  2595  00ED21  64                 	db	100	;'d'
  2596  00ED22  73                 	db	115	;'s'
  2597  00ED23  0A                 	db	10
  2598  00ED24  0D                 	db	13
  2599  00ED25  20                 	db	32
  2600  00ED26  20                 	db	32
  2601  00ED27  20                 	db	32
  2602  00ED28  4D                 	db	77	;'M'
  2603  00ED29  61                 	db	97	;'a'
  2604  00ED2A  78                 	db	120	;'x'
  2605  00ED2B  20                 	db	32
  2606  00ED2C  52                 	db	82	;'R'
  2607  00ED2D  4D                 	db	77	;'M'
  2608  00ED2E  53                 	db	83	;'S'
  2609  00ED2F  20                 	db	32
  2610  00ED30  43                 	db	67	;'C'
  2611  00ED31  75                 	db	117	;'u'
  2612  00ED32  72                 	db	114	;'r'
  2613  00ED33  72                 	db	114	;'r'
  2614  00ED34  65                 	db	101	;'e'
  2615  00ED35  6E                 	db	110	;'n'
  2616  00ED36  74                 	db	116	;'t'
  2617  00ED37  3F                 	db	63	;'?'
  2618  00ED38  3A                 	db	58	;':'
  2619  00ED39  20                 	db	32
  2620  00ED3A  50                 	db	80	;'P'
  2621  00ED3B  72                 	db	114	;'r'
  2622  00ED3C  69                 	db	105	;'i'
  2623  00ED3D  6E                 	db	110	;'n'
  2624  00ED3E  74                 	db	116	;'t'
  2625  00ED3F  73                 	db	115	;'s'
  2626  00ED40  20                 	db	32
  2627  00ED41  74                 	db	116	;'t'
  2628  00ED42  68                 	db	104	;'h'
  2629  00ED43  65                 	db	101	;'e'
  2630  00ED44  20                 	db	32
  2631  00ED45  6D                 	db	109	;'m'
  2632  00ED46  61                 	db	97	;'a'
  2633  00ED47  78                 	db	120	;'x'
  2634  00ED48  69                 	db	105	;'i'
  2635  00ED49  6D                 	db	109	;'m'
  2636  00ED4A  75                 	db	117	;'u'
  2637  00ED4B  6D                 	db	109	;'m'
  2638  00ED4C  20                 	db	32
  2639  00ED4D  72                 	db	114	;'r'
  2640  00ED4E  65                 	db	101	;'e'
  2641  00ED4F  63                 	db	99	;'c'
  2642  00ED50  6F                 	db	111	;'o'
  2643  00ED51  72                 	db	114	;'r'
  2644  00ED52  64                 	db	100	;'d'
  2645  00ED53  65                 	db	101	;'e'
  2646  00ED54  64                 	db	100	;'d'
  2647  00ED55  20                 	db	32
  2648  00ED56  52                 	db	82	;'R'
  2649  00ED57  4D                 	db	77	;'M'
  2650  00ED58  53                 	db	83	;'S'
  2651  00ED59  20                 	db	32
  2652  00ED5A  6F                 	db	111	;'o'
  2653  00ED5B  75                 	db	117	;'u'
  2654  00ED5C  74                 	db	116	;'t'
  2655  00ED5D  70                 	db	112	;'p'
  2656  00ED5E  75                 	db	117	;'u'
  2657  00ED5F  74                 	db	116	;'t'
  2658  00ED60  20                 	db	32
  2659  00ED61  63                 	db	99	;'c'
  2660  00ED62  75                 	db	117	;'u'
  2661  00ED63  72                 	db	114	;'r'
  2662  00ED64  72                 	db	114	;'r'
  2663  00ED65  65                 	db	101	;'e'
  2664  00ED66  6E                 	db	110	;'n'
  2665  00ED67  74                 	db	116	;'t'
  2666  00ED68  0A                 	db	10
  2667  00ED69  0D                 	db	13
  2668  00ED6A  20                 	db	32
  2669  00ED6B  20                 	db	32
  2670  00ED6C  20                 	db	32
  2671  00ED6D  4D                 	db	77	;'M'
  2672  00ED6E  61                 	db	97	;'a'
  2673  00ED6F  78                 	db	120	;'x'
  2674  00ED70  20                 	db	32
  2675  00ED71  50                 	db	80	;'P'
  2676  00ED72  6F                 	db	111	;'o'
  2677  00ED73  77                 	db	119	;'w'
  2678  00ED74  65                 	db	101	;'e'
  2679  00ED75  72                 	db	114	;'r'
  2680  00ED76  3F                 	db	63	;'?'
  2681  00ED77  3A                 	db	58	;':'
  2682  00ED78  20                 	db	32
  2683  00ED79  50                 	db	80	;'P'
  2684  00ED7A  72                 	db	114	;'r'
  2685  00ED7B  69                 	db	105	;'i'
  2686  00ED7C  6E                 	db	110	;'n'
  2687  00ED7D  74                 	db	116	;'t'
  2688  00ED7E  73                 	db	115	;'s'
  2689  00ED7F  20                 	db	32
  2690  00ED80  74                 	db	116	;'t'
  2691  00ED81  68                 	db	104	;'h'
  2692  00ED82  65                 	db	101	;'e'
  2693  00ED83  20                 	db	32
  2694  00ED84  6D                 	db	109	;'m'
  2695  00ED85  61                 	db	97	;'a'
  2696  00ED86  78                 	db	120	;'x'
  2697  00ED87  69                 	db	105	;'i'
  2698  00ED88  6D                 	db	109	;'m'
  2699  00ED89  75                 	db	117	;'u'
  2700  00ED8A  6D                 	db	109	;'m'
  2701  00ED8B  20                 	db	32
  2702  00ED8C  72                 	db	114	;'r'
  2703  00ED8D  65                 	db	101	;'e'
  2704  00ED8E  63                 	db	99	;'c'
  2705  00ED8F  6F                 	db	111	;'o'
  2706  00ED90  72                 	db	114	;'r'
  2707  00ED91  64                 	db	100	;'d'
  2708  00ED92  65                 	db	101	;'e'
  2709  00ED93  64                 	db	100	;'d'
  2710  00ED94  20                 	db	32
  2711  00ED95  6F                 	db	111	;'o'
  2712  00ED96  75                 	db	117	;'u'
  2713  00ED97  74                 	db	116	;'t'
  2714  00ED98  70                 	db	112	;'p'
  2715  00ED99  75                 	db	117	;'u'
  2716  00ED9A  74                 	db	116	;'t'
  2717  00ED9B  20                 	db	32
  2718  00ED9C  70                 	db	112	;'p'
  2719  00ED9D  6F                 	db	111	;'o'
  2720  00ED9E  77                 	db	119	;'w'
  2721  00ED9F  65                 	db	101	;'e'
  2722  00EDA0  72                 	db	114	;'r'
  2723  00EDA1  0A                 	db	10
  2724  00EDA2  0D                 	db	13
  2725  00EDA3  0A                 	db	10
  2726  00EDA4  0D                 	db	13
  2727  00EDA5  00                 	db	0
  2728  00EDA6                     STR_141:
  2729  00EDA6  4C                 	db	76	;'L'
  2730  00EDA7  69                 	db	105	;'i'
  2731  00EDA8  73                 	db	115	;'s'
  2732  00EDA9  74                 	db	116	;'t'
  2733  00EDAA  20                 	db	32
  2734  00EDAB  6F                 	db	111	;'o'
  2735  00EDAC  66                 	db	102	;'f'
  2736  00EDAD  20                 	db	32
  2737  00EDAE  73                 	db	115	;'s'
  2738  00EDAF  75                 	db	117	;'u'
  2739  00EDB0  70                 	db	112	;'p'
  2740  00EDB1  70                 	db	112	;'p'
  2741  00EDB2  6F                 	db	111	;'o'
  2742  00EDB3  72                 	db	114	;'r'
  2743  00EDB4  74                 	db	116	;'t'
  2744  00EDB5  65                 	db	101	;'e'
  2745  00EDB6  64                 	db	100	;'d'
  2746  00EDB7  20                 	db	32
  2747  00EDB8  4F                 	db	79	;'O'
  2748  00EDB9  75                 	db	117	;'u'
  2749  00EDBA  74                 	db	116	;'t'
  2750  00EDBB  70                 	db	112	;'p'
  2751  00EDBC  75                 	db	117	;'u'
  2752  00EDBD  74                 	db	116	;'t'
  2753  00EDBE  20                 	db	32
  2754  00EDBF  43                 	db	67	;'C'
  2755  00EDC0  6F                 	db	111	;'o'
  2756  00EDC1  6E                 	db	110	;'n'
  2757  00EDC2  74                 	db	116	;'t'
  2758  00EDC3  72                 	db	114	;'r'
  2759  00EDC4  6F                 	db	111	;'o'
  2760  00EDC5  6C                 	db	108	;'l'
  2761  00EDC6  20                 	db	32
  2762  00EDC7  43                 	db	67	;'C'
  2763  00EDC8  6F                 	db	111	;'o'
  2764  00EDC9  6D                 	db	109	;'m'
  2765  00EDCA  6D                 	db	109	;'m'
  2766  00EDCB  61                 	db	97	;'a'
  2767  00EDCC  6E                 	db	110	;'n'
  2768  00EDCD  64                 	db	100	;'d'
  2769  00EDCE  73                 	db	115	;'s'
  2770  00EDCF  3A                 	db	58	;':'
  2771  00EDD0  0A                 	db	10
  2772  00EDD1  0D                 	db	13
  2773  00EDD2  20                 	db	32
  2774  00EDD3  20                 	db	32
  2775  00EDD4  20                 	db	32
  2776  00EDD5  45                 	db	69	;'E'
  2777  00EDD6  6E                 	db	110	;'n'
  2778  00EDD7  61                 	db	97	;'a'
  2779  00EDD8  62                 	db	98	;'b'
  2780  00EDD9  6C                 	db	108	;'l'
  2781  00EDDA  65                 	db	101	;'e'
  2782  00EDDB  20                 	db	32
  2783  00EDDC  44                 	db	68	;'D'
  2784  00EDDD  69                 	db	105	;'i'
  2785  00EDDE  6D                 	db	109	;'m'
  2786  00EDDF  6D                 	db	109	;'m'
  2787  00EDE0  69                 	db	105	;'i'
  2788  00EDE1  6E                 	db	110	;'n'
  2789  00EDE2  67                 	db	103	;'g'
  2790  00EDE3  3A                 	db	58	;':'
  2791  00EDE4  20                 	db	32
  2792  00EDE5  45                 	db	69	;'E'
  2793  00EDE6  6E                 	db	110	;'n'
  2794  00EDE7  61                 	db	97	;'a'
  2795  00EDE8  62                 	db	98	;'b'
  2796  00EDE9  6C                 	db	108	;'l'
  2797  00EDEA  65                 	db	101	;'e'
  2798  00EDEB  20                 	db	32
  2799  00EDEC  54                 	db	84	;'T'
  2800  00EDED  52                 	db	82	;'R'
  2801  00EDEE  49                 	db	73	;'I'
  2802  00EDEF  41                 	db	65	;'A'
  2803  00EDF0  43                 	db	67	;'C'
  2804  00EDF1  20                 	db	32
  2805  00EDF2  6F                 	db	111	;'o'
  2806  00EDF3  75                 	db	117	;'u'
  2807  00EDF4  74                 	db	116	;'t'
  2808  00EDF5  70                 	db	112	;'p'
  2809  00EDF6  75                 	db	117	;'u'
  2810  00EDF7  74                 	db	116	;'t'
  2811  00EDF8  20                 	db	32
  2812  00EDF9  64                 	db	100	;'d'
  2813  00EDFA  69                 	db	105	;'i'
  2814  00EDFB  6D                 	db	109	;'m'
  2815  00EDFC  6D                 	db	109	;'m'
  2816  00EDFD  69                 	db	105	;'i'
  2817  00EDFE  6E                 	db	110	;'n'
  2818  00EDFF  67                 	db	103	;'g'
  2819  00EE00  0A                 	db	10
  2820  00EE01  0D                 	db	13
  2821  00EE02  20                 	db	32
  2822  00EE03  20                 	db	32
  2823  00EE04  20                 	db	32
  2824  00EE05  44                 	db	68	;'D'
  2825  00EE06  69                 	db	105	;'i'
  2826  00EE07  73                 	db	115	;'s'
  2827  00EE08  61                 	db	97	;'a'
  2828  00EE09  62                 	db	98	;'b'
  2829  00EE0A  6C                 	db	108	;'l'
  2830  00EE0B  65                 	db	101	;'e'
  2831  00EE0C  20                 	db	32
  2832  00EE0D  44                 	db	68	;'D'
  2833  00EE0E  69                 	db	105	;'i'
  2834  00EE0F  6D                 	db	109	;'m'
  2835  00EE10  6D                 	db	109	;'m'
  2836  00EE11  69                 	db	105	;'i'
  2837  00EE12  6E                 	db	110	;'n'
  2838  00EE13  67                 	db	103	;'g'
  2839  00EE14  3A                 	db	58	;':'
  2840  00EE15  20                 	db	32
  2841  00EE16  44                 	db	68	;'D'
  2842  00EE17  69                 	db	105	;'i'
  2843  00EE18  73                 	db	115	;'s'
  2844  00EE19  61                 	db	97	;'a'
  2845  00EE1A  62                 	db	98	;'b'
  2846  00EE1B  6C                 	db	108	;'l'
  2847  00EE1C  65                 	db	101	;'e'
  2848  00EE1D  20                 	db	32
  2849  00EE1E  54                 	db	84	;'T'
  2850  00EE1F  52                 	db	82	;'R'
  2851  00EE20  49                 	db	73	;'I'
  2852  00EE21  41                 	db	65	;'A'
  2853  00EE22  43                 	db	67	;'C'
  2854  00EE23  20                 	db	32
  2855  00EE24  6F                 	db	111	;'o'
  2856  00EE25  75                 	db	117	;'u'
  2857  00EE26  74                 	db	116	;'t'
  2858  00EE27  70                 	db	112	;'p'
  2859  00EE28  75                 	db	117	;'u'
  2860  00EE29  74                 	db	116	;'t'
  2861  00EE2A  20                 	db	32
  2862  00EE2B  64                 	db	100	;'d'
  2863  00EE2C  69                 	db	105	;'i'
  2864  00EE2D  6D                 	db	109	;'m'
  2865  00EE2E  6D                 	db	109	;'m'
  2866  00EE2F  69                 	db	105	;'i'
  2867  00EE30  6E                 	db	110	;'n'
  2868  00EE31  67                 	db	103	;'g'
  2869  00EE32  0A                 	db	10
  2870  00EE33  0D                 	db	13
  2871  00EE34  20                 	db	32
  2872  00EE35  20                 	db	32
  2873  00EE36  20                 	db	32
  2874  00EE37  45                 	db	69	;'E'
  2875  00EE38  6E                 	db	110	;'n'
  2876  00EE39  61                 	db	97	;'a'
  2877  00EE3A  62                 	db	98	;'b'
  2878  00EE3B  6C                 	db	108	;'l'
  2879  00EE3C  65                 	db	101	;'e'
  2880  00EE3D  20                 	db	32
  2881  00EE3E  4C                 	db	76	;'L'
  2882  00EE3F  6F                 	db	111	;'o'
  2883  00EE40  61                 	db	97	;'a'
  2884  00EE41  64                 	db	100	;'d'
  2885  00EE42  3A                 	db	58	;':'
  2886  00EE43  20                 	db	32
  2887  00EE44  45                 	db	69	;'E'
  2888  00EE45  6E                 	db	110	;'n'
  2889  00EE46  61                 	db	97	;'a'
  2890  00EE47  62                 	db	98	;'b'
  2891  00EE48  6C                 	db	108	;'l'
  2892  00EE49  65                 	db	101	;'e'
  2893  00EE4A  73                 	db	115	;'s'
  2894  00EE4B  20                 	db	32
  2895  00EE4C  74                 	db	116	;'t'
  2896  00EE4D  68                 	db	104	;'h'
  2897  00EE4E  65                 	db	101	;'e'
  2898  00EE4F  20                 	db	32
  2899  00EE50  6F                 	db	111	;'o'
  2900  00EE51  75                 	db	117	;'u'
  2901  00EE52  74                 	db	116	;'t'
  2902  00EE53  70                 	db	112	;'p'
  2903  00EE54  75                 	db	117	;'u'
  2904  00EE55  74                 	db	116	;'t'
  2905  00EE56  20                 	db	32
  2906  00EE57  54                 	db	84	;'T'
  2907  00EE58  52                 	db	82	;'R'
  2908  00EE59  49                 	db	73	;'I'
  2909  00EE5A  41                 	db	65	;'A'
  2910  00EE5B  43                 	db	67	;'C'
  2911  00EE5C  20                 	db	32
  2912  00EE5D  77                 	db	119	;'w'
  2913  00EE5E  69                 	db	105	;'i'
  2914  00EE5F  74                 	db	116	;'t'
  2915  00EE60  68                 	db	104	;'h'
  2916  00EE61  20                 	db	32
  2917  00EE62  64                 	db	100	;'d'
  2918  00EE63  69                 	db	105	;'i'
  2919  00EE64  6D                 	db	109	;'m'
  2920  00EE65  6D                 	db	109	;'m'
  2921  00EE66  69                 	db	105	;'i'
  2922  00EE67  6E                 	db	110	;'n'
  2923  00EE68  67                 	db	103	;'g'
  2924  00EE69  20                 	db	32
  2925  00EE6A  64                 	db	100	;'d'
  2926  00EE6B  69                 	db	105	;'i'
  2927  00EE6C  73                 	db	115	;'s'
  2928  00EE6D  61                 	db	97	;'a'
  2929  00EE6E  62                 	db	98	;'b'
  2930  00EE6F  6C                 	db	108	;'l'
  2931  00EE70  65                 	db	101	;'e'
  2932  00EE71  64                 	db	100	;'d'
  2933  00EE72  0A                 	db	10
  2934  00EE73  0D                 	db	13
  2935  00EE74  20                 	db	32
  2936  00EE75  20                 	db	32
  2937  00EE76  20                 	db	32
  2938  00EE77  44                 	db	68	;'D'
  2939  00EE78  69                 	db	105	;'i'
  2940  00EE79  73                 	db	115	;'s'
  2941  00EE7A  61                 	db	97	;'a'
  2942  00EE7B  62                 	db	98	;'b'
  2943  00EE7C  6C                 	db	108	;'l'
  2944  00EE7D  65                 	db	101	;'e'
  2945  00EE7E  20                 	db	32
  2946  00EE7F  4C                 	db	76	;'L'
  2947  00EE80  6F                 	db	111	;'o'
  2948  00EE81  61                 	db	97	;'a'
  2949  00EE82  64                 	db	100	;'d'
  2950  00EE83  3A                 	db	58	;':'
  2951  00EE84  20                 	db	32
  2952  00EE85  44                 	db	68	;'D'
  2953  00EE86  69                 	db	105	;'i'
  2954  00EE87  73                 	db	115	;'s'
  2955  00EE88  61                 	db	97	;'a'
  2956  00EE89  62                 	db	98	;'b'
  2957  00EE8A  6C                 	db	108	;'l'
  2958  00EE8B  65                 	db	101	;'e'
  2959  00EE8C  73                 	db	115	;'s'
  2960  00EE8D  20                 	db	32
  2961  00EE8E  74                 	db	116	;'t'
  2962  00EE8F  68                 	db	104	;'h'
  2963  00EE90  65                 	db	101	;'e'
  2964  00EE91  20                 	db	32
  2965  00EE92  6F                 	db	111	;'o'
  2966  00EE93  75                 	db	117	;'u'
  2967  00EE94  74                 	db	116	;'t'
  2968  00EE95  70                 	db	112	;'p'
  2969  00EE96  75                 	db	117	;'u'
  2970  00EE97  74                 	db	116	;'t'
  2971  00EE98  20                 	db	32
  2972  00EE99  54                 	db	84	;'T'
  2973  00EE9A  52                 	db	82	;'R'
  2974  00EE9B  49                 	db	73	;'I'
  2975  00EE9C  41                 	db	65	;'A'
  2976  00EE9D  43                 	db	67	;'C'
  2977  00EE9E  20                 	db	32
  2978  00EE9F  63                 	db	99	;'c'
  2979  00EEA0  6F                 	db	111	;'o'
  2980  00EEA1  6D                 	db	109	;'m'
  2981  00EEA2  70                 	db	112	;'p'
  2982  00EEA3  6C                 	db	108	;'l'
  2983  00EEA4  65                 	db	101	;'e'
  2984  00EEA5  74                 	db	116	;'t'
  2985  00EEA6  65                 	db	101	;'e'
  2986  00EEA7  6C                 	db	108	;'l'
  2987  00EEA8  79                 	db	121	;'y'
  2988  00EEA9  0A                 	db	10
  2989  00EEAA  0D                 	db	13
  2990  00EEAB  20                 	db	32
  2991  00EEAC  20                 	db	32
  2992  00EEAD  20                 	db	32
  2993  00EEAE  4C                 	db	76	;'L'
  2994  00EEAF  6F                 	db	111	;'o'
  2995  00EEB0  61                 	db	97	;'a'
  2996  00EEB1  64                 	db	100	;'d'
  2997  00EEB2  20                 	db	32
  2998  00EEB3  45                 	db	69	;'E'
  2999  00EEB4  6E                 	db	110	;'n'
  3000  00EEB5  61                 	db	97	;'a'
  3001  00EEB6  62                 	db	98	;'b'
  3002  00EEB7  6C                 	db	108	;'l'
  3003  00EEB8  65                 	db	101	;'e'
  3004  00EEB9  64                 	db	100	;'d'
  3005  00EEBA  3F                 	db	63	;'?'
  3006  00EEBB  3A                 	db	58	;':'
  3007  00EEBC  20                 	db	32
  3008  00EEBD  52                 	db	82	;'R'
  3009  00EEBE  65                 	db	101	;'e'
  3010  00EEBF  74                 	db	116	;'t'
  3011  00EEC0  75                 	db	117	;'u'
  3012  00EEC1  72                 	db	114	;'r'
  3013  00EEC2  6E                 	db	110	;'n'
  3014  00EEC3  73                 	db	115	;'s'
  3015  00EEC4  20                 	db	32
  3016  00EEC5  69                 	db	105	;'i'
  3017  00EEC6  66                 	db	102	;'f'
  3018  00EEC7  20                 	db	32
  3019  00EEC8  74                 	db	116	;'t'
  3020  00EEC9  68                 	db	104	;'h'
  3021  00EECA  65                 	db	101	;'e'
  3022  00EECB  20                 	db	32
  3023  00EECC  6F                 	db	111	;'o'
  3024  00EECD  75                 	db	117	;'u'
  3025  00EECE  74                 	db	116	;'t'
  3026  00EECF  70                 	db	112	;'p'
  3027  00EED0  75                 	db	117	;'u'
  3028  00EED1  74                 	db	116	;'t'
  3029  00EED2  20                 	db	32
  3030  00EED3  6C                 	db	108	;'l'
  3031  00EED4  6F                 	db	111	;'o'
  3032  00EED5  61                 	db	97	;'a'
  3033  00EED6  64                 	db	100	;'d'
  3034  00EED7  20                 	db	32
  3035  00EED8  69                 	db	105	;'i'
  3036  00EED9  73                 	db	115	;'s'
  3037  00EEDA  20                 	db	32
  3038  00EEDB  65                 	db	101	;'e'
  3039  00EEDC  6E                 	db	110	;'n'
  3040  00EEDD  61                 	db	97	;'a'
  3041  00EEDE  62                 	db	98	;'b'
  3042  00EEDF  6C                 	db	108	;'l'
  3043  00EEE0  65                 	db	101	;'e'
  3044  00EEE1  64                 	db	100	;'d'
  3045  00EEE2  20                 	db	32
  3046  00EEE3  6F                 	db	111	;'o'
  3047  00EEE4  72                 	db	114	;'r'
  3048  00EEE5  20                 	db	32
  3049  00EEE6  64                 	db	100	;'d'
  3050  00EEE7  69                 	db	105	;'i'
  3051  00EEE8  73                 	db	115	;'s'
  3052  00EEE9  61                 	db	97	;'a'
  3053  00EEEA  62                 	db	98	;'b'
  3054  00EEEB  6C                 	db	108	;'l'
  3055  00EEEC  65                 	db	101	;'e'
  3056  00EEED  64                 	db	100	;'d'
  3057  00EEEE  0A                 	db	10
  3058  00EEEF  0D                 	db	13
  3059  00EEF0  20                 	db	32
  3060  00EEF1  20                 	db	32
  3061  00EEF2  20                 	db	32
  3062  00EEF3  44                 	db	68	;'D'
  3063  00EEF4  69                 	db	105	;'i'
  3064  00EEF5  6D                 	db	109	;'m'
  3065  00EEF6  6D                 	db	109	;'m'
  3066  00EEF7  69                 	db	105	;'i'
  3067  00EEF8  6E                 	db	110	;'n'
  3068  00EEF9  67                 	db	103	;'g'
  3069  00EEFA  20                 	db	32
  3070  00EEFB  45                 	db	69	;'E'
  3071  00EEFC  6E                 	db	110	;'n'
  3072  00EEFD  61                 	db	97	;'a'
  3073  00EEFE  62                 	db	98	;'b'
  3074  00EEFF  6C                 	db	108	;'l'
  3075  00EF00  65                 	db	101	;'e'
  3076  00EF01  64                 	db	100	;'d'
  3077  00EF02  3F                 	db	63	;'?'
  3078  00EF03  3A                 	db	58	;':'
  3079  00EF04  20                 	db	32
  3080  00EF05  52                 	db	82	;'R'
  3081  00EF06  65                 	db	101	;'e'
  3082  00EF07  74                 	db	116	;'t'
  3083  00EF08  75                 	db	117	;'u'
  3084  00EF09  72                 	db	114	;'r'
  3085  00EF0A  6E                 	db	110	;'n'
  3086  00EF0B  73                 	db	115	;'s'
  3087  00EF0C  20                 	db	32
  3088  00EF0D  69                 	db	105	;'i'
  3089  00EF0E  66                 	db	102	;'f'
  3090  00EF0F  20                 	db	32
  3091  00EF10  64                 	db	100	;'d'
  3092  00EF11  69                 	db	105	;'i'
  3093  00EF12  6D                 	db	109	;'m'
  3094  00EF13  6D                 	db	109	;'m'
  3095  00EF14  69                 	db	105	;'i'
  3096  00EF15  6E                 	db	110	;'n'
  3097  00EF16  67                 	db	103	;'g'
  3098  00EF17  20                 	db	32
  3099  00EF18  6F                 	db	111	;'o'
  3100  00EF19  66                 	db	102	;'f'
  3101  00EF1A  20                 	db	32
  3102  00EF1B  74                 	db	116	;'t'
  3103  00EF1C  68                 	db	104	;'h'
  3104  00EF1D  65                 	db	101	;'e'
  3105  00EF1E  20                 	db	32
  3106  00EF1F  6F                 	db	111	;'o'
  3107  00EF20  75                 	db	117	;'u'
  3108  00EF21  74                 	db	116	;'t'
  3109  00EF22  70                 	db	112	;'p'
  3110  00EF23  75                 	db	117	;'u'
  3111  00EF24  74                 	db	116	;'t'
  3112  00EF25  20                 	db	32
  3113  00EF26  6C                 	db	108	;'l'
  3114  00EF27  6F                 	db	111	;'o'
  3115  00EF28  61                 	db	97	;'a'
  3116  00EF29  64                 	db	100	;'d'
  3117  00EF2A  20                 	db	32
  3118  00EF2B  69                 	db	105	;'i'
  3119  00EF2C  73                 	db	115	;'s'
  3120  00EF2D  20                 	db	32
  3121  00EF2E  65                 	db	101	;'e'
  3122  00EF2F  6E                 	db	110	;'n'
  3123  00EF30  61                 	db	97	;'a'
  3124  00EF31  62                 	db	98	;'b'
  3125  00EF32  6C                 	db	108	;'l'
  3126  00EF33  65                 	db	101	;'e'
  3127  00EF34  64                 	db	100	;'d'
  3128  00EF35  20                 	db	32
  3129  00EF36  6F                 	db	111	;'o'
  3130  00EF37  72                 	db	114	;'r'
  3131  00EF38  20                 	db	32
  3132  00EF39  6E                 	db	110	;'n'
  3133  00EF3A  6F                 	db	111	;'o'
  3134  00EF3B  74                 	db	116	;'t'
  3135  00EF3C  0A                 	db	10
  3136  00EF3D  0D                 	db	13
  3137  00EF3E  20                 	db	32
  3138  00EF3F  20                 	db	32
  3139  00EF40  20                 	db	32
  3140  00EF41  53                 	db	83	;'S'
  3141  00EF42  65                 	db	101	;'e'
  3142  00EF43  74                 	db	116	;'t'
  3143  00EF44  20                 	db	32
  3144  00EF45  44                 	db	68	;'D'
  3145  00EF46  69                 	db	105	;'i'
  3146  00EF47  6D                 	db	109	;'m'
  3147  00EF48  6D                 	db	109	;'m'
  3148  00EF49  69                 	db	105	;'i'
  3149  00EF4A  6E                 	db	110	;'n'
  3150  00EF4B  67                 	db	103	;'g'
  3151  00EF4C  20                 	db	32
  3152  00EF4D  50                 	db	80	;'P'
  3153  00EF4E  65                 	db	101	;'e'
  3154  00EF4F  72                 	db	114	;'r'
  3155  00EF50  63                 	db	99	;'c'
  3156  00EF51  65                 	db	101	;'e'
  3157  00EF52  6E                 	db	110	;'n'
  3158  00EF53  74                 	db	116	;'t'
  3159  00EF54  61                 	db	97	;'a'
  3160  00EF55  67                 	db	103	;'g'
  3161  00EF56  65                 	db	101	;'e'
  3162  00EF57  3A                 	db	58	;':'
  3163  00EF58  20                 	db	32
  3164  00EF59  3C                 	db	60	;'<'
  3165  00EF5A  78                 	db	120	;'x'
  3166  00EF5B  3E                 	db	62	;'>'
  3167  00EF5C  3A                 	db	58	;':'
  3168  00EF5D  20                 	db	32
  3169  00EF5E  53                 	db	83	;'S'
  3170  00EF5F  65                 	db	101	;'e'
  3171  00EF60  74                 	db	116	;'t'
  3172  00EF61  73                 	db	115	;'s'
  3173  00EF62  20                 	db	32
  3174  00EF63  74                 	db	116	;'t'
  3175  00EF64  68                 	db	104	;'h'
  3176  00EF65  65                 	db	101	;'e'
  3177  00EF66  20                 	db	32
  3178  00EF67  6F                 	db	111	;'o'
  3179  00EF68  75                 	db	117	;'u'
  3180  00EF69  74                 	db	116	;'t'
  3181  00EF6A  70                 	db	112	;'p'
  3182  00EF6B  75                 	db	117	;'u'
  3183  00EF6C  74                 	db	116	;'t'
  3184  00EF6D  20                 	db	32
  3185  00EF6E  64                 	db	100	;'d'
  3186  00EF6F  69                 	db	105	;'i'
  3187  00EF70  6D                 	db	109	;'m'
  3188  00EF71  6D                 	db	109	;'m'
  3189  00EF72  69                 	db	105	;'i'
  3190  00EF73  6E                 	db	110	;'n'
  3191  00EF74  67                 	db	103	;'g'
  3192  00EF75  20                 	db	32
  3193  00EF76  70                 	db	112	;'p'
  3194  00EF77  65                 	db	101	;'e'
  3195  00EF78  72                 	db	114	;'r'
  3196  00EF79  63                 	db	99	;'c'
  3197  00EF7A  65                 	db	101	;'e'
  3198  00EF7B  6E                 	db	110	;'n'
  3199  00EF7C  74                 	db	116	;'t'
  3200  00EF7D  61                 	db	97	;'a'
  3201  00EF7E  67                 	db	103	;'g'
  3202  00EF7F  65                 	db	101	;'e'
  3203  00EF80  20                 	db	32
  3204  00EF81  61                 	db	97	;'a'
  3205  00EF82  73                 	db	115	;'s'
  3206  00EF83  20                 	db	32
  3207  00EF84  78                 	db	120	;'x'
  3208  00EF85  20                 	db	32
  3209  00EF86  70                 	db	112	;'p'
  3210  00EF87  65                 	db	101	;'e'
  3211  00EF88  72                 	db	114	;'r'
  3212  00EF89  63                 	db	99	;'c'
  3213  00EF8A  65                 	db	101	;'e'
  3214  00EF8B  6E                 	db	110	;'n'
  3215  00EF8C  74                 	db	116	;'t'
  3216  00EF8D  0A                 	db	10
  3217  00EF8E  0D                 	db	13
  3218  00EF8F  0A                 	db	10
  3219  00EF90  0D                 	db	13
  3220  00EF91  00                 	db	0
  3221  00EF92                     STR_143:
  3222  00EF92  50                 	db	80	;'P'
  3223  00EF93  6C                 	db	108	;'l'
  3224  00EF94  65                 	db	101	;'e'
  3225  00EF95  61                 	db	97	;'a'
  3226  00EF96  73                 	db	115	;'s'
  3227  00EF97  65                 	db	101	;'e'
  3228  00EF98  20                 	db	32
  3229  00EF99  73                 	db	115	;'s'
  3230  00EF9A  70                 	db	112	;'p'
  3231  00EF9B  65                 	db	101	;'e'
  3232  00EF9C  63                 	db	99	;'c'
  3233  00EF9D  69                 	db	105	;'i'
  3234  00EF9E  66                 	db	102	;'f'
  3235  00EF9F  79                 	db	121	;'y'
  3236  00EFA0  20                 	db	32
  3237  00EFA1  77                 	db	119	;'w'
  3238  00EFA2  68                 	db	104	;'h'
  3239  00EFA3  61                 	db	97	;'a'
  3240  00EFA4  74                 	db	116	;'t'
  3241  00EFA5  20                 	db	32
  3242  00EFA6  74                 	db	116	;'t'
  3243  00EFA7  79                 	db	121	;'y'
  3244  00EFA8  70                 	db	112	;'p'
  3245  00EFA9  65                 	db	101	;'e'
  3246  00EFAA  20                 	db	32
  3247  00EFAB  6F                 	db	111	;'o'
  3248  00EFAC  66                 	db	102	;'f'
  3249  00EFAD  20                 	db	32
  3250  00EFAE  63                 	db	99	;'c'
  3251  00EFAF  6F                 	db	111	;'o'
  3252  00EFB0  6D                 	db	109	;'m'
  3253  00EFB1  6D                 	db	109	;'m'
  3254  00EFB2  61                 	db	97	;'a'
  3255  00EFB3  6E                 	db	110	;'n'
  3256  00EFB4  64                 	db	100	;'d'
  3257  00EFB5  73                 	db	115	;'s'
  3258  00EFB6  20                 	db	32
  3259  00EFB7  79                 	db	121	;'y'
  3260  00EFB8  6F                 	db	111	;'o'
  3261  00EFB9  75                 	db	117	;'u'
  3262  00EFBA  27                 	db	39
  3263  00EFBB  64                 	db	100	;'d'
  3264  00EFBC  20                 	db	32
  3265  00EFBD  6C                 	db	108	;'l'
  3266  00EFBE  69                 	db	105	;'i'
  3267  00EFBF  6B                 	db	107	;'k'
  3268  00EFC0  65                 	db	101	;'e'
  3269  00EFC1  20                 	db	32
  3270  00EFC2  68                 	db	104	;'h'
  3271  00EFC3  65                 	db	101	;'e'
  3272  00EFC4  6C                 	db	108	;'l'
  3273  00EFC5  70                 	db	112	;'p'
  3274  00EFC6  20                 	db	32
  3275  00EFC7  77                 	db	119	;'w'
  3276  00EFC8  69                 	db	105	;'i'
  3277  00EFC9  74                 	db	116	;'t'
  3278  00EFCA  68                 	db	104	;'h'
  3279  00EFCB  3A                 	db	58	;':'
  3280  00EFCC  0A                 	db	10
  3281  00EFCD  0D                 	db	13
  3282  00EFCE  54                 	db	84	;'T'
  3283  00EFCF  72                 	db	114	;'r'
  3284  00EFD0  79                 	db	121	;'y'
  3285  00EFD1  20                 	db	32
  3286  00EFD2  27                 	db	39
  3287  00EFD3  48                 	db	72	;'H'
  3288  00EFD4  65                 	db	101	;'e'
  3289  00EFD5  6C                 	db	108	;'l'
  3290  00EFD6  70                 	db	112	;'p'
  3291  00EFD7  20                 	db	32
  3292  00EFD8  3C                 	db	60	;'<'
  3293  00EFD9  63                 	db	99	;'c'
  3294  00EFDA  6F                 	db	111	;'o'
  3295  00EFDB  6D                 	db	109	;'m'
  3296  00EFDC  6D                 	db	109	;'m'
  3297  00EFDD  61                 	db	97	;'a'
  3298  00EFDE  6E                 	db	110	;'n'
  3299  00EFDF  64                 	db	100	;'d'
  3300  00EFE0  20                 	db	32
  3301  00EFE1  73                 	db	115	;'s'
  3302  00EFE2  65                 	db	101	;'e'
  3303  00EFE3  74                 	db	116	;'t'
  3304  00EFE4  3E                 	db	62	;'>'
  3305  00EFE5  27                 	db	39
  3306  00EFE6  0A                 	db	10
  3307  00EFE7  0D                 	db	13
  3308  00EFE8  0A                 	db	10
  3309  00EFE9  0D                 	db	13
  3310  00EFEA  53                 	db	83	;'S'
  3311  00EFEB  75                 	db	117	;'u'
  3312  00EFEC  70                 	db	112	;'p'
  3313  00EFED  70                 	db	112	;'p'
  3314  00EFEE  6F                 	db	111	;'o'
  3315  00EFEF  72                 	db	114	;'r'
  3316  00EFF0  74                 	db	116	;'t'
  3317  00EFF1  65                 	db	101	;'e'
  3318  00EFF2  64                 	db	100	;'d'
  3319  00EFF3  20                 	db	32
  3320  00EFF4  43                 	db	67	;'C'
  3321  00EFF5  6F                 	db	111	;'o'
  3322  00EFF6  6D                 	db	109	;'m'
  3323  00EFF7  6D                 	db	109	;'m'
  3324  00EFF8  61                 	db	97	;'a'
  3325  00EFF9  6E                 	db	110	;'n'
  3326  00EFFA  64                 	db	100	;'d'
  3327  00EFFB  20                 	db	32
  3328  00EFFC  53                 	db	83	;'S'
  3329  00EFFD  65                 	db	101	;'e'
  3330  00EFFE  74                 	db	116	;'t'
  3331  00EFFF  73                 	db	115	;'s'
  3332  00F000  3A                 	db	58	;':'
  3333  00F001  0A                 	db	10
  3334  00F002  0D                 	db	13
  3335  00F003  20                 	db	32
  3336  00F004  20                 	db	32
  3337  00F005  20                 	db	32
  3338  00F006  44                 	db	68	;'D'
  3339  00F007  65                 	db	101	;'e'
  3340  00F008  76                 	db	118	;'v'
  3341  00F009  69                 	db	105	;'i'
  3342  00F00A  63                 	db	99	;'c'
  3343  00F00B  65                 	db	101	;'e'
  3344  00F00C  20                 	db	32
  3345  00F00D  43                 	db	67	;'C'
  3346  00F00E  6F                 	db	111	;'o'
  3347  00F00F  6E                 	db	110	;'n'
  3348  00F010  74                 	db	116	;'t'
  3349  00F011  72                 	db	114	;'r'
  3350  00F012  6F                 	db	111	;'o'
  3351  00F013  6C                 	db	108	;'l'
  3352  00F014  20                 	db	32
  3353  00F015  43                 	db	67	;'C'
  3354  00F016  6F                 	db	111	;'o'
  3355  00F017  6D                 	db	109	;'m'
  3356  00F018  6D                 	db	109	;'m'
  3357  00F019  61                 	db	97	;'a'
  3358  00F01A  6E                 	db	110	;'n'
  3359  00F01B  64                 	db	100	;'d'
  3360  00F01C  73                 	db	115	;'s'
  3361  00F01D  3A                 	db	58	;':'
  3362  00F01E  20                 	db	32
  3363  00F01F  43                 	db	67	;'C'
  3364  00F020  6F                 	db	111	;'o'
  3365  00F021  6D                 	db	109	;'m'
  3366  00F022  6D                 	db	109	;'m'
  3367  00F023  61                 	db	97	;'a'
  3368  00F024  6E                 	db	110	;'n'
  3369  00F025  64                 	db	100	;'d'
  3370  00F026  73                 	db	115	;'s'
  3371  00F027  20                 	db	32
  3372  00F028  74                 	db	116	;'t'
  3373  00F029  6F                 	db	111	;'o'
  3374  00F02A  20                 	db	32
  3375  00F02B  76                 	db	118	;'v'
  3376  00F02C  69                 	db	105	;'i'
  3377  00F02D  65                 	db	101	;'e'
  3378  00F02E  77                 	db	119	;'w'
  3379  00F02F  20                 	db	32
  3380  00F030  61                 	db	97	;'a'
  3381  00F031  6E                 	db	110	;'n'
  3382  00F032  64                 	db	100	;'d'
  3383  00F033  20                 	db	32
  3384  00F034  63                 	db	99	;'c'
  3385  00F035  6F                 	db	111	;'o'
  3386  00F036  6E                 	db	110	;'n'
  3387  00F037  74                 	db	116	;'t'
  3388  00F038  72                 	db	114	;'r'
  3389  00F039  6F                 	db	111	;'o'
  3390  00F03A  6C                 	db	108	;'l'
  3391  00F03B  20                 	db	32
  3392  00F03C  6C                 	db	108	;'l'
  3393  00F03D  6F                 	db	111	;'o'
  3394  00F03E  77                 	db	119	;'w'
  3395  00F03F  20                 	db	32
  3396  00F040  6C                 	db	108	;'l'
  3397  00F041  65                 	db	101	;'e'
  3398  00F042  76                 	db	118	;'v'
  3399  00F043  65                 	db	101	;'e'
  3400  00F044  6C                 	db	108	;'l'
  3401  00F045  20                 	db	32
  3402  00F046  73                 	db	115	;'s'
  3403  00F047  79                 	db	121	;'y'
  3404  00F048  73                 	db	115	;'s'
  3405  00F049  74                 	db	116	;'t'
  3406  00F04A  65                 	db	101	;'e'
  3407  00F04B  6D                 	db	109	;'m'
  3408  00F04C  20                 	db	32
  3409  00F04D  66                 	db	102	;'f'
  3410  00F04E  75                 	db	117	;'u'
  3411  00F04F  6E                 	db	110	;'n'
  3412  00F050  63                 	db	99	;'c'
  3413  00F051  74                 	db	116	;'t'
  3414  00F052  69                 	db	105	;'i'
  3415  00F053  6F                 	db	111	;'o'
  3416  00F054  6E                 	db	110	;'n'
  3417  00F055  61                 	db	97	;'a'
  3418  00F056  6C                 	db	108	;'l'
  3419  00F057  69                 	db	105	;'i'
  3420  00F058  74                 	db	116	;'t'
  3421  00F059  79                 	db	121	;'y'
  3422  00F05A  0A                 	db	10
  3423  00F05B  0D                 	db	13
  3424  00F05C  20                 	db	32
  3425  00F05D  20                 	db	32
  3426  00F05E  20                 	db	32
  3427  00F05F  44                 	db	68	;'D'
  3428  00F060  65                 	db	101	;'e'
  3429  00F061  76                 	db	118	;'v'
  3430  00F062  69                 	db	105	;'i'
  3431  00F063  63                 	db	99	;'c'
  3432  00F064  65                 	db	101	;'e'
  3433  00F065  20                 	db	32
  3434  00F066  4D                 	db	77	;'M'
  3435  00F067  65                 	db	101	;'e'
  3436  00F068  61                 	db	97	;'a'
  3437  00F069  73                 	db	115	;'s'
  3438  00F06A  75                 	db	117	;'u'
  3439  00F06B  72                 	db	114	;'r'
  3440  00F06C  65                 	db	101	;'e'
  3441  00F06D  6D                 	db	109	;'m'
  3442  00F06E  65                 	db	101	;'e'
  3443  00F06F  6E                 	db	110	;'n'
  3444  00F070  74                 	db	116	;'t'
  3445  00F071  20                 	db	32
  3446  00F072  43                 	db	67	;'C'
  3447  00F073  6F                 	db	111	;'o'
  3448  00F074  6D                 	db	109	;'m'
  3449  00F075  6D                 	db	109	;'m'
  3450  00F076  61                 	db	97	;'a'
  3451  00F077  6E                 	db	110	;'n'
  3452  00F078  64                 	db	100	;'d'
  3453  00F079  73                 	db	115	;'s'
  3454  00F07A  3A                 	db	58	;':'
  3455  00F07B  20                 	db	32
  3456  00F07C  56                 	db	86	;'V'
  3457  00F07D  69                 	db	105	;'i'
  3458  00F07E  65                 	db	101	;'e'
  3459  00F07F  77                 	db	119	;'w'
  3460  00F080  20                 	db	32
  3461  00F081  6C                 	db	108	;'l'
  3462  00F082  6F                 	db	111	;'o'
  3463  00F083  77                 	db	119	;'w'
  3464  00F084  20                 	db	32
  3465  00F085  6C                 	db	108	;'l'
  3466  00F086  65                 	db	101	;'e'
  3467  00F087  76                 	db	118	;'v'
  3468  00F088  65                 	db	101	;'e'
  3469  00F089  6C                 	db	108	;'l'
  3470  00F08A  20                 	db	32
  3471  00F08B  73                 	db	115	;'s'
  3472  00F08C  79                 	db	121	;'y'
  3473  00F08D  73                 	db	115	;'s'
  3474  00F08E  74                 	db	116	;'t'
  3475  00F08F  65                 	db	101	;'e'
  3476  00F090  6D                 	db	109	;'m'
  3477  00F091  20                 	db	32
  3478  00F092  6D                 	db	109	;'m'
  3479  00F093  65                 	db	101	;'e'
  3480  00F094  61                 	db	97	;'a'
  3481  00F095  73                 	db	115	;'s'
  3482  00F096  75                 	db	117	;'u'
  3483  00F097  72                 	db	114	;'r'
  3484  00F098  65                 	db	101	;'e'
  3485  00F099  6D                 	db	109	;'m'
  3486  00F09A  65                 	db	101	;'e'
  3487  00F09B  6E                 	db	110	;'n'
  3488  00F09C  74                 	db	116	;'t'
  3489  00F09D  73                 	db	115	;'s'
  3490  00F09E  0A                 	db	10
  3491  00F09F  0D                 	db	13
  3492  00F0A0  20                 	db	32
  3493  00F0A1  20                 	db	32
  3494  00F0A2  20                 	db	32
  3495  00F0A3  50                 	db	80	;'P'
  3496  00F0A4  72                 	db	114	;'r'
  3497  00F0A5  69                 	db	105	;'i'
  3498  00F0A6  6D                 	db	109	;'m'
  3499  00F0A7  61                 	db	97	;'a'
  3500  00F0A8  72                 	db	114	;'r'
  3501  00F0A9  79                 	db	121	;'y'
  3502  00F0AA  20                 	db	32
  3503  00F0AB  4D                 	db	77	;'M'
  3504  00F0AC  65                 	db	101	;'e'
  3505  00F0AD  61                 	db	97	;'a'
  3506  00F0AE  73                 	db	115	;'s'
  3507  00F0AF  75                 	db	117	;'u'
  3508  00F0B0  72                 	db	114	;'r'
  3509  00F0B1  65                 	db	101	;'e'
  3510  00F0B2  6D                 	db	109	;'m'
  3511  00F0B3  65                 	db	101	;'e'
  3512  00F0B4  6E                 	db	110	;'n'
  3513  00F0B5  74                 	db	116	;'t'
  3514  00F0B6  20                 	db	32
  3515  00F0B7  43                 	db	67	;'C'
  3516  00F0B8  6F                 	db	111	;'o'
  3517  00F0B9  6D                 	db	109	;'m'
  3518  00F0BA  6D                 	db	109	;'m'
  3519  00F0BB  61                 	db	97	;'a'
  3520  00F0BC  6E                 	db	110	;'n'
  3521  00F0BD  64                 	db	100	;'d'
  3522  00F0BE  73                 	db	115	;'s'
  3523  00F0BF  3A                 	db	58	;':'
  3524  00F0C0  20                 	db	32
  3525  00F0C1  56                 	db	86	;'V'
  3526  00F0C2  69                 	db	105	;'i'
  3527  00F0C3  65                 	db	101	;'e'
  3528  00F0C4  77                 	db	119	;'w'
  3529  00F0C5  20                 	db	32
  3530  00F0C6  68                 	db	104	;'h'
  3531  00F0C7  69                 	db	105	;'i'
  3532  00F0C8  67                 	db	103	;'g'
  3533  00F0C9  68                 	db	104	;'h'
  3534  00F0CA  20                 	db	32
  3535  00F0CB  6C                 	db	108	;'l'
  3536  00F0CC  65                 	db	101	;'e'
  3537  00F0CD  76                 	db	118	;'v'
  3538  00F0CE  65                 	db	101	;'e'
  3539  00F0CF  6C                 	db	108	;'l'
  3540  00F0D0  20                 	db	32
  3541  00F0D1  6F                 	db	111	;'o'
  3542  00F0D2  75                 	db	117	;'u'
  3543  00F0D3  74                 	db	116	;'t'
  3544  00F0D4  70                 	db	112	;'p'
  3545  00F0D5  75                 	db	117	;'u'
  3546  00F0D6  74                 	db	116	;'t'
  3547  00F0D7  20                 	db	32
  3548  00F0D8  6D                 	db	109	;'m'
  3549  00F0D9  65                 	db	101	;'e'
  3550  00F0DA  61                 	db	97	;'a'
  3551  00F0DB  73                 	db	115	;'s'
  3552  00F0DC  75                 	db	117	;'u'
  3553  00F0DD  72                 	db	114	;'r'
  3554  00F0DE  65                 	db	101	;'e'
  3555  00F0DF  6D                 	db	109	;'m'
  3556  00F0E0  65                 	db	101	;'e'
  3557  00F0E1  6E                 	db	110	;'n'
  3558  00F0E2  74                 	db	116	;'t'
  3559  00F0E3  73                 	db	115	;'s'
  3560  00F0E4  20                 	db	32
  3561  00F0E5  61                 	db	97	;'a'
  3562  00F0E6  6E                 	db	110	;'n'
  3563  00F0E7  64                 	db	100	;'d'
  3564  00F0E8  20                 	db	32
  3565  00F0E9  63                 	db	99	;'c'
  3566  00F0EA  61                 	db	97	;'a'
  3567  00F0EB  6C                 	db	108	;'l'
  3568  00F0EC  63                 	db	99	;'c'
  3569  00F0ED  75                 	db	117	;'u'
  3570  00F0EE  6C                 	db	108	;'l'
  3571  00F0EF  61                 	db	97	;'a'
  3572  00F0F0  74                 	db	116	;'t'
  3573  00F0F1  69                 	db	105	;'i'
  3574  00F0F2  6F                 	db	111	;'o'
  3575  00F0F3  6E                 	db	110	;'n'
  3576  00F0F4  73                 	db	115	;'s'
  3577  00F0F5  0A                 	db	10
  3578  00F0F6  0D                 	db	13
  3579  00F0F7  20                 	db	32
  3580  00F0F8  20                 	db	32
  3581  00F0F9  20                 	db	32
  3582  00F0FA  4F                 	db	79	;'O'
  3583  00F0FB  75                 	db	117	;'u'
  3584  00F0FC  74                 	db	116	;'t'
  3585  00F0FD  70                 	db	112	;'p'
  3586  00F0FE  75                 	db	117	;'u'
  3587  00F0FF  74                 	db	116	;'t'
  3588  00F100  20                 	db	32
  3589  00F101  43                 	db	67	;'C'
  3590  00F102  6F                 	db	111	;'o'
  3591  00F103  6E                 	db	110	;'n'
  3592  00F104  74                 	db	116	;'t'
  3593  00F105  72                 	db	114	;'r'
  3594  00F106  6F                 	db	111	;'o'
  3595  00F107  6C                 	db	108	;'l'
  3596  00F108  20                 	db	32
  3597  00F109  43                 	db	67	;'C'
  3598  00F10A  6F                 	db	111	;'o'
  3599  00F10B  6D                 	db	109	;'m'
  3600  00F10C  6D                 	db	109	;'m'
  3601  00F10D  61                 	db	97	;'a'
  3602  00F10E  6E                 	db	110	;'n'
  3603  00F10F  64                 	db	100	;'d'
  3604  00F110  73                 	db	115	;'s'
  3605  00F111  3A                 	db	58	;':'
  3606  00F112  20                 	db	32
  3607  00F113  43                 	db	67	;'C'
  3608  00F114  6F                 	db	111	;'o'
  3609  00F115  6E                 	db	110	;'n'
  3610  00F116  74                 	db	116	;'t'
  3611  00F117  72                 	db	114	;'r'
  3612  00F118  6F                 	db	111	;'o'
  3613  00F119  6C                 	db	108	;'l'
  3614  00F11A  20                 	db	32
  3615  00F11B  74                 	db	116	;'t'
  3616  00F11C  68                 	db	104	;'h'
  3617  00F11D  65                 	db	101	;'e'
  3618  00F11E  20                 	db	32
  3619  00F11F  6F                 	db	111	;'o'
  3620  00F120  75                 	db	117	;'u'
  3621  00F121  74                 	db	116	;'t'
  3622  00F122  70                 	db	112	;'p'
  3623  00F123  75                 	db	117	;'u'
  3624  00F124  74                 	db	116	;'t'
  3625  00F125  20                 	db	32
  3626  00F126  73                 	db	115	;'s'
  3627  00F127  74                 	db	116	;'t'
  3628  00F128  61                 	db	97	;'a'
  3629  00F129  74                 	db	116	;'t'
  3630  00F12A  65                 	db	101	;'e'
  3631  00F12B  20                 	db	32
  3632  00F12C  61                 	db	97	;'a'
  3633  00F12D  6E                 	db	110	;'n'
  3634  00F12E  64                 	db	100	;'d'
  3635  00F12F  20                 	db	32
  3636  00F130  64                 	db	100	;'d'
  3637  00F131  69                 	db	105	;'i'
  3638  00F132  6D                 	db	109	;'m'
  3639  00F133  6D                 	db	109	;'m'
  3640  00F134  69                 	db	105	;'i'
  3641  00F135  6E                 	db	110	;'n'
  3642  00F136  67                 	db	103	;'g'
  3643  00F137  20                 	db	32
  3644  00F138  66                 	db	102	;'f'
  3645  00F139  65                 	db	101	;'e'
  3646  00F13A  61                 	db	97	;'a'
  3647  00F13B  74                 	db	116	;'t'
  3648  00F13C  75                 	db	117	;'u'
  3649  00F13D  72                 	db	114	;'r'
  3650  00F13E  65                 	db	101	;'e'
  3651  00F13F  73                 	db	115	;'s'
  3652  00F140  0A                 	db	10
  3653  00F141  0D                 	db	13
  3654  00F142  00                 	db	0
  3655  00F143  20                 	db	32
  3656  00F144  20                 	db	32
  3657  00F145  20                 	db	32
  3658  00F146  20                 	db	32
  3659  00F147  42                 	db	66	;'B'
  3660  00F148  6F                 	db	111	;'o'
  3661  00F149  6F                 	db	111	;'o'
  3662  00F14A  74                 	db	116	;'t'
  3663  00F14B  20                 	db	32
  3664  00F14C  63                 	db	99	;'c'
  3665  00F14D  6F                 	db	111	;'o'
  3666  00F14E  6D                 	db	109	;'m'
  3667  00F14F  70                 	db	112	;'p'
  3668  00F150  6C                 	db	108	;'l'
  3669  00F151  65                 	db	101	;'e'
  3670  00F152  74                 	db	116	;'t'
  3671  00F153  65                 	db	101	;'e'
  3672  00F154  0A                 	db	10
  3673  00F155  0D                 	db	13
  3674  00F156  20                 	db	32
  3675  00F157  20                 	db	32
  3676  00F158  20                 	db	32
  3677  00F159  20                 	db	32
  3678  00F15A  50                 	db	80	;'P'
  3679  00F15B  49                 	db	73	;'I'
  3680  00F15C  43                 	db	67	;'C'
  3681  00F15D  31                 	db	49	;'1'
  3682  00F15E  38                 	db	56	;'8'
  3683  00F15F  46                 	db	70	;'F'
  3684  00F160  36                 	db	54	;'6'
  3685  00F161  37                 	db	55	;'7'
  3686  00F162  4B                 	db	75	;'K'
  3687  00F163  34                 	db	52	;'4'
  3688  00F164  30                 	db	48	;'0'
  3689  00F165  20                 	db	32
  3690  00F166  6D                 	db	109	;'m'
  3691  00F167  54                 	db	84	;'T'
  3692  00F168  6F                 	db	111	;'o'
  3693  00F169  75                 	db	117	;'u'
  3694  00F16A  63                 	db	99	;'c'
  3695  00F16B  68                 	db	104	;'h'
  3696  00F16C  20                 	db	32
  3697  00F16D  54                 	db	84	;'T'
  3698  00F16E  65                 	db	101	;'e'
  3699  00F16F  73                 	db	115	;'s'
  3700  00F170  74                 	db	116	;'t'
  3701  00F171  20                 	db	32
  3702  00F172  42                 	db	66	;'B'
  3703  00F173  6F                 	db	111	;'o'
  3704  00F174  61                 	db	97	;'a'
  3705  00F175  72                 	db	114	;'r'
  3706  00F176  64                 	db	100	;'d'
  3707  00F177  0A                 	db	10
  3708  00F178  0D                 	db	13
  3709  00F179  20                 	db	32
  3710  00F17A  20                 	db	32
  3711  00F17B  20                 	db	32
  3712  00F17C  20                 	db	32
  3713  00F17D  45                 	db	69	;'E'
  3714  00F17E  76                 	db	118	;'v'
  3715  00F17F  61                 	db	97	;'a'
  3716  00F180  6C                 	db	108	;'l'
  3717  00F181  75                 	db	117	;'u'
  3718  00F182  61                 	db	97	;'a'
  3719  00F183  74                 	db	116	;'t'
  3720  00F184  65                 	db	101	;'e'
  3721  00F185  73                 	db	115	;'s'
  3722  00F186  20                 	db	32
  3723  00F187  74                 	db	116	;'t'
  3724  00F188  68                 	db	104	;'h'
  3725  00F189  65                 	db	101	;'e'
  3726  00F18A  20                 	db	32
  3727  00F18B  6D                 	db	109	;'m'
  3728  00F18C  54                 	db	84	;'T'
  3729  00F18D  6F                 	db	111	;'o'
  3730  00F18E  75                 	db	117	;'u'
  3731  00F18F  63                 	db	99	;'c'
  3732  00F190  68                 	db	104	;'h'
  3733  00F191  20                 	db	32
  3734  00F192  63                 	db	99	;'c'
  3735  00F193  61                 	db	97	;'a'
  3736  00F194  70                 	db	112	;'p'
  3737  00F195  61                 	db	97	;'a'
  3738  00F196  63                 	db	99	;'c'
  3739  00F197  69                 	db	105	;'i'
  3740  00F198  74                 	db	116	;'t'
  3741  00F199  69                 	db	105	;'i'
  3742  00F19A  76                 	db	118	;'v'
  3743  00F19B  65                 	db	101	;'e'
  3744  00F19C  20                 	db	32
  3745  00F19D  74                 	db	116	;'t'
  3746  00F19E  6F                 	db	111	;'o'
  3747  00F19F  75                 	db	117	;'u'
  3748  00F1A0  63                 	db	99	;'c'
  3749  00F1A1  68                 	db	104	;'h'
  3750  00F1A2  20                 	db	32
  3751  00F1A3  6C                 	db	108	;'l'
  3752  00F1A4  69                 	db	105	;'i'
  3753  00F1A5  62                 	db	98	;'b'
  3754  00F1A6  72                 	db	114	;'r'
  3755  00F1A7  61                 	db	97	;'a'
  3756  00F1A8  72                 	db	114	;'r'
  3757  00F1A9  79                 	db	121	;'y'
  3758  00F1AA  20                 	db	32
  3759  00F1AB  64                 	db	100	;'d'
  3760  00F1AC  69                 	db	105	;'i'
  3761  00F1AD  73                 	db	115	;'s'
  3762  00F1AE  74                 	db	116	;'t'
  3763  00F1AF  72                 	db	114	;'r'
  3764  00F1B0  69                 	db	105	;'i'
  3765  00F1B1  62                 	db	98	;'b'
  3766  00F1B2  75                 	db	117	;'u'
  3767  00F1B3  74                 	db	116	;'t'
  3768  00F1B4  65                 	db	101	;'e'
  3769  00F1B5  64                 	db	100	;'d'
  3770  00F1B6  20                 	db	32
  3771  00F1B7  62                 	db	98	;'b'
  3772  00F1B8  79                 	db	121	;'y'
  3773  00F1B9  20                 	db	32
  3774  00F1BA  4D                 	db	77	;'M'
  3775  00F1BB  69                 	db	105	;'i'
  3776  00F1BC  63                 	db	99	;'c'
  3777  00F1BD  72                 	db	114	;'r'
  3778  00F1BE  6F                 	db	111	;'o'
  3779  00F1BF  63                 	db	99	;'c'
  3780  00F1C0  68                 	db	104	;'h'
  3781  00F1C1  69                 	db	105	;'i'
  3782  00F1C2  70                 	db	112	;'p'
  3783  00F1C3  0A                 	db	10
  3784  00F1C4  0D                 	db	13
  3785  00F1C5  20                 	db	32
  3786  00F1C6  20                 	db	32
  3787  00F1C7  20                 	db	32
  3788  00F1C8  20                 	db	32
  3789  00F1C9  53                 	db	83	;'S'
  3790  00F1CA  65                 	db	101	;'e'
  3791  00F1CB  74                 	db	116	;'t'
  3792  00F1CC  73                 	db	115	;'s'
  3793  00F1CD  20                 	db	32
  3794  00F1CE  74                 	db	116	;'t'
  3795  00F1CF  68                 	db	104	;'h'
  3796  00F1D0  65                 	db	101	;'e'
  3797  00F1D1  20                 	db	32
  3798  00F1D2  73                 	db	115	;'s'
  3799  00F1D3  74                 	db	116	;'t'
  3800  00F1D4  61                 	db	97	;'a'
  3801  00F1D5  74                 	db	116	;'t'
  3802  00F1D6  65                 	db	101	;'e'
  3803  00F1D7  20                 	db	32
  3804  00F1D8  6F                 	db	111	;'o'
  3805  00F1D9  66                 	db	102	;'f'
  3806  00F1DA  20                 	db	32
  3807  00F1DB  66                 	db	102	;'f'
  3808  00F1DC  69                 	db	105	;'i'
  3809  00F1DD  76                 	db	118	;'v'
  3810  00F1DE  65                 	db	101	;'e'
  3811  00F1DF  20                 	db	32
  3812  00F1E0  4C                 	db	76	;'L'
  3813  00F1E1  45                 	db	69	;'E'
  3814  00F1E2  44                 	db	68	;'D'
  3815  00F1E3  73                 	db	115	;'s'
  3816  00F1E4  20                 	db	32
  3817  00F1E5  62                 	db	98	;'b'
  3818  00F1E6  61                 	db	97	;'a'
  3819  00F1E7  73                 	db	115	;'s'
  3820  00F1E8  65                 	db	101	;'e'
  3821  00F1E9  64                 	db	100	;'d'
  3822  00F1EA  20                 	db	32
  3823  00F1EB  6F                 	db	111	;'o'
  3824  00F1EC  6E                 	db	110	;'n'
  3825  00F1ED  20                 	db	32
  3826  00F1EE  6D                 	db	109	;'m'
  3827  00F1EF  54                 	db	84	;'T'
  3828  00F1F0  6F                 	db	111	;'o'
  3829  00F1F1  75                 	db	117	;'u'
  3830  00F1F2  63                 	db	99	;'c'
  3831  00F1F3  68                 	db	104	;'h'
  3832  00F1F4  20                 	db	32
  3833  00F1F5  63                 	db	99	;'c'
  3834  00F1F6  61                 	db	97	;'a'
  3835  00F1F7  70                 	db	112	;'p'
  3836  00F1F8  61                 	db	97	;'a'
  3837  00F1F9  63                 	db	99	;'c'
  3838  00F1FA  69                 	db	105	;'i'
  3839  00F1FB  74                 	db	116	;'t'
  3840  00F1FC  69                 	db	105	;'i'
  3841  00F1FD  76                 	db	118	;'v'
  3842  00F1FE  65                 	db	101	;'e'
  3843  00F1FF  20                 	db	32
  3844  00F200  70                 	db	112	;'p'
  3845  00F201  75                 	db	117	;'u'
  3846  00F202  73                 	db	115	;'s'
  3847  00F203  68                 	db	104	;'h'
  3848  00F204  62                 	db	98	;'b'
  3849  00F205  75                 	db	117	;'u'
  3850  00F206  74                 	db	116	;'t'
  3851  00F207  74                 	db	116	;'t'
  3852  00F208  6F                 	db	111	;'o'
  3853  00F209  6E                 	db	110	;'n'
  3854  00F20A  73                 	db	115	;'s'
  3855  00F20B  0A                 	db	10
  3856  00F20C  0D                 	db	13
  3857  00F20D  20                 	db	32
  3858  00F20E  20                 	db	32
  3859  00F20F  20                 	db	32
  3860  00F210  20                 	db	32
  3861  00F211  42                 	db	66	;'B'
  3862  00F212  61                 	db	97	;'a'
  3863  00F213  75                 	db	117	;'u'
  3864  00F214  64                 	db	100	;'d'
  3865  00F215  20                 	db	32
  3866  00F216  72                 	db	114	;'r'
  3867  00F217  61                 	db	97	;'a'
  3868  00F218  74                 	db	116	;'t'
  3869  00F219  65                 	db	101	;'e'
  3870  00F21A  3A                 	db	58	;':'
  3871  00F21B  20                 	db	32
  3872  00F21C  31                 	db	49	;'1'
  3873  00F21D  31                 	db	49	;'1'
  3874  00F21E  35                 	db	53	;'5'
  3875  00F21F  32                 	db	50	;'2'
  3876  00F220  30                 	db	48	;'0'
  3877  00F221  30                 	db	48	;'0'
  3878  00F222  20                 	db	32
  3879  00F223  62                 	db	98	;'b'
  3880  00F224  70                 	db	112	;'p'
  3881  00F225  73                 	db	115	;'s'
  3882  00F226  0A                 	db	10
  3883  00F227  0D                 	db	13
  3884  00F228  20                 	db	32
  3885  00F229  20                 	db	32
  3886  00F22A  20                 	db	32
  3887  00F22B  20                 	db	32
  3888  00F22C  4E                 	db	78	;'N'
  3889  00F22D  6F                 	db	111	;'o'
  3890  00F22E  20                 	db	32
  3891  00F22F  70                 	db	112	;'p'
  3892  00F230  61                 	db	97	;'a'
  3893  00F231  72                 	db	114	;'r'
  3894  00F232  69                 	db	105	;'i'
  3895  00F233  74                 	db	116	;'t'
  3896  00F234  79                 	db	121	;'y'
  3897  00F235  2C                 	db	44
  3898  00F236  20                 	db	32
  3899  00F237  38                 	db	56	;'8'
  3900  00F238  20                 	db	32
  3901  00F239  62                 	db	98	;'b'
  3902  00F23A  69                 	db	105	;'i'
  3903  00F23B  74                 	db	116	;'t'
  3904  00F23C  73                 	db	115	;'s'
  3905  00F23D  2C                 	db	44
  3906  00F23E  20                 	db	32
  3907  00F23F  6E                 	db	110	;'n'
  3908  00F240  6F                 	db	111	;'o'
  3909  00F241  20                 	db	32
  3910  00F242  66                 	db	102	;'f'
  3911  00F243  6C                 	db	108	;'l'
  3912  00F244  6F                 	db	111	;'o'
  3913  00F245  77                 	db	119	;'w'
  3914  00F246  20                 	db	32
  3915  00F247  63                 	db	99	;'c'
  3916  00F248  6F                 	db	111	;'o'
  3917  00F249  6E                 	db	110	;'n'
  3918  00F24A  74                 	db	116	;'t'
  3919  00F24B  72                 	db	114	;'r'
  3920  00F24C  6F                 	db	111	;'o'
  3921  00F24D  6C                 	db	108	;'l'
  3922  00F24E  2C                 	db	44
  3923  00F24F  20                 	db	32
  3924  00F250  31                 	db	49	;'1'
  3925  00F251  20                 	db	32
  3926  00F252  73                 	db	115	;'s'
  3927  00F253  74                 	db	116	;'t'
  3928  00F254  6F                 	db	111	;'o'
  3929  00F255  70                 	db	112	;'p'
  3930  00F256  20                 	db	32
  3931  00F257  62                 	db	98	;'b'
  3932  00F258  69                 	db	105	;'i'
  3933  00F259  74                 	db	116	;'t'
  3934  00F25A  0A                 	db	10
  3935  00F25B  0D                 	db	13
  3936  00F25C  20                 	db	32
  3937  00F25D  20                 	db	32
  3938  00F25E  20                 	db	32
  3939  00F25F  20                 	db	32
  3940  00F260  43                 	db	67	;'C'
  3941  00F261  6F                 	db	111	;'o'
  3942  00F262  6D                 	db	109	;'m'
  3943  00F263  6D                 	db	109	;'m'
  3944  00F264  61                 	db	97	;'a'
  3945  00F265  6E                 	db	110	;'n'
  3946  00F266  64                 	db	100	;'d'
  3947  00F267  73                 	db	115	;'s'
  3948  00F268  20                 	db	32
  3949  00F269  61                 	db	97	;'a'
  3950  00F26A  72                 	db	114	;'r'
  3951  00F26B  65                 	db	101	;'e'
  3952  00F26C  20                 	db	32
  3953  00F26D  63                 	db	99	;'c'
  3954  00F26E  61                 	db	97	;'a'
  3955  00F26F  73                 	db	115	;'s'
  3956  00F270  65                 	db	101	;'e'
  3957  00F271  20                 	db	32
  3958  00F272  73                 	db	115	;'s'
  3959  00F273  65                 	db	101	;'e'
  3960  00F274  6E                 	db	110	;'n'
  3961  00F275  73                 	db	115	;'s'
  3962  00F276  69                 	db	105	;'i'
  3963  00F277  74                 	db	116	;'t'
  3964  00F278  69                 	db	105	;'i'
  3965  00F279  76                 	db	118	;'v'
  3966  00F27A  65                 	db	101	;'e'
  3967  00F27B  0A                 	db	10
  3968  00F27C  0D                 	db	13
  3969  00F27D  20                 	db	32
  3970  00F27E  20                 	db	32
  3971  00F27F  20                 	db	32
  3972  00F280  20                 	db	32
  3973  00F281  45                 	db	69	;'E'
  3974  00F282  6E                 	db	110	;'n'
  3975  00F283  74                 	db	116	;'t'
  3976  00F284  65                 	db	101	;'e'
  3977  00F285  72                 	db	114	;'r'
  3978  00F286  20                 	db	32
  3979  00F287  61                 	db	97	;'a'
  3980  00F288  20                 	db	32
  3981  00F289  63                 	db	99	;'c'
  3982  00F28A  6F                 	db	111	;'o'
  3983  00F28B  6D                 	db	109	;'m'
  3984  00F28C  6D                 	db	109	;'m'
  3985  00F28D  61                 	db	97	;'a'
  3986  00F28E  6E                 	db	110	;'n'
  3987  00F28F  64                 	db	100	;'d'
  3988  00F290  2C                 	db	44
  3989  00F291  20                 	db	32
  3990  00F292  6F                 	db	111	;'o'
  3991  00F293  72                 	db	114	;'r'
  3992  00F294  20                 	db	32
  3993  00F295  65                 	db	101	;'e'
  3994  00F296  6E                 	db	110	;'n'
  3995  00F297  74                 	db	116	;'t'
  3996  00F298  65                 	db	101	;'e'
  3997  00F299  72                 	db	114	;'r'
  3998  00F29A  20                 	db	32
  3999  00F29B  48                 	db	72	;'H'
  4000  00F29C  65                 	db	101	;'e'
  4001  00F29D  6C                 	db	108	;'l'
  4002  00F29E  70                 	db	112	;'p'
  4003  00F29F  20                 	db	32
  4004  00F2A0  66                 	db	102	;'f'
  4005  00F2A1  6F                 	db	111	;'o'
  4006  00F2A2  72                 	db	114	;'r'
  4007  00F2A3  20                 	db	32
  4008  00F2A4  6C                 	db	108	;'l'
  4009  00F2A5  69                 	db	105	;'i'
  4010  00F2A6  73                 	db	115	;'s'
  4011  00F2A7  74                 	db	116	;'t'
  4012  00F2A8  20                 	db	32
  4013  00F2A9  6F                 	db	111	;'o'
  4014  00F2AA  66                 	db	102	;'f'
  4015  00F2AB  20                 	db	32
  4016  00F2AC  63                 	db	99	;'c'
  4017  00F2AD  6F                 	db	111	;'o'
  4018  00F2AE  6D                 	db	109	;'m'
  4019  00F2AF  6D                 	db	109	;'m'
  4020  00F2B0  61                 	db	97	;'a'
  4021  00F2B1  6E                 	db	110	;'n'
  4022  00F2B2  64                 	db	100	;'d'
  4023  00F2B3  73                 	db	115	;'s'
  4024  00F2B4  0A                 	db	10
  4025  00F2B5  0D                 	db	13
  4026  00F2B6  00                 	db	0
  4027  00F2B7                     STR_111:
  4028  00F2B7  49                 	db	73	;'I'
  4029  00F2B8  66                 	db	102	;'f'
  4030  00F2B9  20                 	db	32
  4031  00F2BA  79                 	db	121	;'y'
  4032  00F2BB  6F                 	db	111	;'o'
  4033  00F2BC  75                 	db	117	;'u'
  4034  00F2BD  27                 	db	39
  4035  00F2BE  64                 	db	100	;'d'
  4036  00F2BF  20                 	db	32
  4037  00F2C0  6C                 	db	108	;'l'
  4038  00F2C1  69                 	db	105	;'i'
  4039  00F2C2  6B                 	db	107	;'k'
  4040  00F2C3  65                 	db	101	;'e'
  4041  00F2C4  20                 	db	32
  4042  00F2C5  74                 	db	116	;'t'
  4043  00F2C6  6F                 	db	111	;'o'
  4044  00F2C7  20                 	db	32
  4045  00F2C8  63                 	db	99	;'c'
  4046  00F2C9  6F                 	db	111	;'o'
  4047  00F2CA  6D                 	db	109	;'m'
  4048  00F2CB  70                 	db	112	;'p'
  4049  00F2CC  6C                 	db	108	;'l'
  4050  00F2CD  65                 	db	101	;'e'
  4051  00F2CE  74                 	db	116	;'t'
  4052  00F2CF  65                 	db	101	;'e'
  4053  00F2D0  6C                 	db	108	;'l'
  4054  00F2D1  79                 	db	121	;'y'
  4055  00F2D2  20                 	db	32
  4056  00F2D3  65                 	db	101	;'e'
  4057  00F2D4  6E                 	db	110	;'n'
  4058  00F2D5  61                 	db	97	;'a'
  4059  00F2D6  62                 	db	98	;'b'
  4060  00F2D7  6C                 	db	108	;'l'
  4061  00F2D8  65                 	db	101	;'e'
  4062  00F2D9  20                 	db	32
  4063  00F2DA  6F                 	db	111	;'o'
  4064  00F2DB  72                 	db	114	;'r'
  4065  00F2DC  20                 	db	32
  4066  00F2DD  64                 	db	100	;'d'
  4067  00F2DE  69                 	db	105	;'i'
  4068  00F2DF  73                 	db	115	;'s'
  4069  00F2E0  61                 	db	97	;'a'
  4070  00F2E1  62                 	db	98	;'b'
  4071  00F2E2  6C                 	db	108	;'l'
  4072  00F2E3  65                 	db	101	;'e'
  4073  00F2E4  20                 	db	32
  4074  00F2E5  74                 	db	116	;'t'
  4075  00F2E6  68                 	db	104	;'h'
  4076  00F2E7  65                 	db	101	;'e'
  4077  00F2E8  20                 	db	32
  4078  00F2E9  6C                 	db	108	;'l'
  4079  00F2EA  6F                 	db	111	;'o'
  4080  00F2EB  61                 	db	97	;'a'
  4081  00F2EC  64                 	db	100	;'d'
  4082  00F2ED  2C                 	db	44
  4083  00F2EE  20                 	db	32
  4084  00F2EF  64                 	db	100	;'d'
  4085  00F2F0  69                 	db	105	;'i'
  4086  00F2F1  73                 	db	115	;'s'
  4087  00F2F2  61                 	db	97	;'a'
  4088  00F2F3  62                 	db	98	;'b'
  4089  00F2F4  6C                 	db	108	;'l'
  4090  00F2F5  65                 	db	101	;'e'
  4091  00F2F6  20                 	db	32
  4092  00F2F7  64                 	db	100	;'d'
  4093  00F2F8  69                 	db	105	;'i'
  4094  00F2F9  6D                 	db	109	;'m'
  4095  00F2FA  6D                 	db	109	;'m'
  4096  00F2FB  69                 	db	105	;'i'
  4097  00F2FC  6E                 	db	110	;'n'
  4098  00F2FD  67                 	db	103	;'g'
  4099  00F2FE  20                 	db	32
  4100  00F2FF  61                 	db	97	;'a'
  4101  00F300  6E                 	db	110	;'n'
  4102  00F301  64                 	db	100	;'d'
  4103  00F302  20                 	db	32
  4104  00F303  75                 	db	117	;'u'
  4105  00F304  73                 	db	115	;'s'
  4106  00F305  65                 	db	101	;'e'
  4107  00F306  20                 	db	32
  4108  00F307  72                 	db	114	;'r'
  4109  00F308  65                 	db	101	;'e'
  4110  00F309  73                 	db	115	;'s'
  4111  00F30A  70                 	db	112	;'p'
  4112  00F30B  65                 	db	101	;'e'
  4113  00F30C  63                 	db	99	;'c'
  4114  00F30D  74                 	db	116	;'t'
  4115  00F30E  69                 	db	105	;'i'
  4116  00F30F  76                 	db	118	;'v'
  4117  00F310  65                 	db	101	;'e'
  4118  00F311  20                 	db	32
  4119  00F312  63                 	db	99	;'c'
  4120  00F313  6F                 	db	111	;'o'
  4121  00F314  6D                 	db	109	;'m'
  4122  00F315  6D                 	db	109	;'m'
  4123  00F316  61                 	db	97	;'a'
  4124  00F317  6E                 	db	110	;'n'
  4125  00F318  64                 	db	100	;'d'
  4126  00F319  73                 	db	115	;'s'
  4127  00F31A  0A                 	db	10
  4128  00F31B  0D                 	db	13
  4129  00F31C  00                 	db	0
  4130  00F31D                     STR_110:
  4131  00F31D  45                 	db	69	;'E'
  4132  00F31E  52                 	db	82	;'R'
  4133  00F31F  52                 	db	82	;'R'
  4134  00F320  4F                 	db	79	;'O'
  4135  00F321  52                 	db	82	;'R'
  4136  00F322  3A                 	db	58	;':'
  4137  00F323  20                 	db	32
  4138  00F324  50                 	db	80	;'P'
  4139  00F325  6C                 	db	108	;'l'
  4140  00F326  65                 	db	101	;'e'
  4141  00F327  61                 	db	97	;'a'
  4142  00F328  73                 	db	115	;'s'
  4143  00F329  65                 	db	101	;'e'
  4144  00F32A  20                 	db	32
  4145  00F32B  73                 	db	115	;'s'
  4146  00F32C  65                 	db	101	;'e'
  4147  00F32D  74                 	db	116	;'t'
  4148  00F32E  20                 	db	32
  4149  00F32F  64                 	db	100	;'d'
  4150  00F330  69                 	db	105	;'i'
  4151  00F331  6D                 	db	109	;'m'
  4152  00F332  6D                 	db	109	;'m'
  4153  00F333  69                 	db	105	;'i'
  4154  00F334  6E                 	db	110	;'n'
  4155  00F335  67                 	db	103	;'g'
  4156  00F336  20                 	db	32
  4157  00F337  70                 	db	112	;'p'
  4158  00F338  65                 	db	101	;'e'
  4159  00F339  72                 	db	114	;'r'
  4160  00F33A  63                 	db	99	;'c'
  4161  00F33B  65                 	db	101	;'e'
  4162  00F33C  6E                 	db	110	;'n'
  4163  00F33D  74                 	db	116	;'t'
  4164  00F33E  61                 	db	97	;'a'
  4165  00F33F  67                 	db	103	;'g'
  4166  00F340  65                 	db	101	;'e'
  4167  00F341  20                 	db	32
  4168  00F342  74                 	db	116	;'t'
  4169  00F343  6F                 	db	111	;'o'
  4170  00F344  20                 	db	32
  4171  00F345  61                 	db	97	;'a'
  4172  00F346  6E                 	db	110	;'n'
  4173  00F347  20                 	db	32
  4174  00F348  69                 	db	105	;'i'
  4175  00F349  6E                 	db	110	;'n'
  4176  00F34A  74                 	db	116	;'t'
  4177  00F34B  65                 	db	101	;'e'
  4178  00F34C  67                 	db	103	;'g'
  4179  00F34D  65                 	db	101	;'e'
  4180  00F34E  72                 	db	114	;'r'
  4181  00F34F  20                 	db	32
  4182  00F350  67                 	db	103	;'g'
  4183  00F351  72                 	db	114	;'r'
  4184  00F352  65                 	db	101	;'e'
  4185  00F353  61                 	db	97	;'a'
  4186  00F354  74                 	db	116	;'t'
  4187  00F355  65                 	db	101	;'e'
  4188  00F356  72                 	db	114	;'r'
  4189  00F357  20                 	db	32
  4190  00F358  74                 	db	116	;'t'
  4191  00F359  68                 	db	104	;'h'
  4192  00F35A  61                 	db	97	;'a'
  4193  00F35B  6E                 	db	110	;'n'
  4194  00F35C  20                 	db	32
  4195  00F35D  30                 	db	48	;'0'
  4196  00F35E  20                 	db	32
  4197  00F35F  61                 	db	97	;'a'
  4198  00F360  6E                 	db	110	;'n'
  4199  00F361  64                 	db	100	;'d'
  4200  00F362  20                 	db	32
  4201  00F363  6C                 	db	108	;'l'
  4202  00F364  65                 	db	101	;'e'
  4203  00F365  73                 	db	115	;'s'
  4204  00F366  73                 	db	115	;'s'
  4205  00F367  20                 	db	32
  4206  00F368  74                 	db	116	;'t'
  4207  00F369  68                 	db	104	;'h'
  4208  00F36A  61                 	db	97	;'a'
  4209  00F36B  6E                 	db	110	;'n'
  4210  00F36C  20                 	db	32
  4211  00F36D  31                 	db	49	;'1'
  4212  00F36E  30                 	db	48	;'0'
  4213  00F36F  30                 	db	48	;'0'
  4214  00F370  0A                 	db	10
  4215  00F371  0D                 	db	13
  4216  00F372  00                 	db	0
  4217  00F373                     STR_54:
  4218  00F373  44                 	db	68	;'D'
  4219  00F374  65                 	db	101	;'e'
  4220  00F375  76                 	db	118	;'v'
  4221  00F376  69                 	db	105	;'i'
  4222  00F377  63                 	db	99	;'c'
  4223  00F378  65                 	db	101	;'e'
  4224  00F379  20                 	db	32
  4225  00F37A  49                 	db	73	;'I'
  4226  00F37B  44                 	db	68	;'D'
  4227  00F37C  20                 	db	32
  4228  00F37D  73                 	db	115	;'s'
  4229  00F37E  74                 	db	116	;'t'
  4230  00F37F  6F                 	db	111	;'o'
  4231  00F380  72                 	db	114	;'r'
  4232  00F381  65                 	db	101	;'e'
  4233  00F382  64                 	db	100	;'d'
  4234  00F383  20                 	db	32
  4235  00F384  69                 	db	105	;'i'
  4236  00F385  6E                 	db	110	;'n'
  4237  00F386  20                 	db	32
  4238  00F387  46                 	db	70	;'F'
  4239  00F388  6C                 	db	108	;'l'
  4240  00F389  61                 	db	97	;'a'
  4241  00F38A  73                 	db	115	;'s'
  4242  00F38B  68                 	db	104	;'h'
  4243  00F38C  20                 	db	32
  4244  00F38D  69                 	db	105	;'i'
  4245  00F38E  73                 	db	115	;'s'
  4246  00F38F  3A                 	db	58	;':'
  4247  00F390  20                 	db	32
  4248  00F391  30                 	db	48	;'0'
  4249  00F392  78                 	db	120	;'x'
  4250  00F393  25                 	db	37
  4251  00F394  58                 	db	88	;'X'
  4252  00F395  2E                 	db	46
  4253  00F396  20                 	db	32
  4254  00F397  54                 	db	84	;'T'
  4255  00F398  68                 	db	104	;'h'
  4256  00F399  69                 	db	105	;'i'
  4257  00F39A  73                 	db	115	;'s'
  4258  00F39B  20                 	db	32
  4259  00F39C  63                 	db	99	;'c'
  4260  00F39D  6F                 	db	111	;'o'
  4261  00F39E  72                 	db	114	;'r'
  4262  00F39F  72                 	db	114	;'r'
  4263  00F3A0  65                 	db	101	;'e'
  4264  00F3A1  73                 	db	115	;'s'
  4265  00F3A2  70                 	db	112	;'p'
  4266  00F3A3  6F                 	db	111	;'o'
  4267  00F3A4  6E                 	db	110	;'n'
  4268  00F3A5  64                 	db	100	;'d'
  4269  00F3A6  73                 	db	115	;'s'
  4270  00F3A7  20                 	db	32
  4271  00F3A8  74                 	db	116	;'t'
  4272  00F3A9  6F                 	db	111	;'o'
  4273  00F3AA  20                 	db	32
  4274  00F3AB  61                 	db	97	;'a'
  4275  00F3AC  20                 	db	32
  4276  00F3AD  64                 	db	100	;'d'
  4277  00F3AE  65                 	db	101	;'e'
  4278  00F3AF  76                 	db	118	;'v'
  4279  00F3B0  69                 	db	105	;'i'
  4280  00F3B1  63                 	db	99	;'c'
  4281  00F3B2  65                 	db	101	;'e'
  4282  00F3B3  20                 	db	32
  4283  00F3B4  70                 	db	112	;'p'
  4284  00F3B5  61                 	db	97	;'a'
  4285  00F3B6  72                 	db	114	;'r'
  4286  00F3B7  74                 	db	116	;'t'
  4287  00F3B8  20                 	db	32
  4288  00F3B9  6E                 	db	110	;'n'
  4289  00F3BA  75                 	db	117	;'u'
  4290  00F3BB  6D                 	db	109	;'m'
  4291  00F3BC  62                 	db	98	;'b'
  4292  00F3BD  65                 	db	101	;'e'
  4293  00F3BE  72                 	db	114	;'r'
  4294  00F3BF  20                 	db	32
  4295  00F3C0  6F                 	db	111	;'o'
  4296  00F3C1  66                 	db	102	;'f'
  4297  00F3C2  20                 	db	32
  4298  00F3C3  25                 	db	37
  4299  00F3C4  73                 	db	115	;'s'
  4300  00F3C5  0A                 	db	10
  4301  00F3C6  0D                 	db	13
  4302  00F3C7  00                 	db	0
  4303  00F3C8                     STR_115:
  4304  00F3C8  54                 	db	84	;'T'
  4305  00F3C9  68                 	db	104	;'h'
  4306  00F3CA  69                 	db	105	;'i'
  4307  00F3CB  73                 	db	115	;'s'
  4308  00F3CC  20                 	db	32
  4309  00F3CD  63                 	db	99	;'c'
  4310  00F3CE  6F                 	db	111	;'o'
  4311  00F3CF  72                 	db	114	;'r'
  4312  00F3D0  72                 	db	114	;'r'
  4313  00F3D1  65                 	db	101	;'e'
  4314  00F3D2  73                 	db	115	;'s'
  4315  00F3D3  70                 	db	112	;'p'
  4316  00F3D4  6F                 	db	111	;'o'
  4317  00F3D5  6E                 	db	110	;'n'
  4318  00F3D6  64                 	db	100	;'d'
  4319  00F3D7  73                 	db	115	;'s'
  4320  00F3D8  20                 	db	32
  4321  00F3D9  74                 	db	116	;'t'
  4322  00F3DA  6F                 	db	111	;'o'
  4323  00F3DB  20                 	db	32
  4324  00F3DC  61                 	db	97	;'a'
  4325  00F3DD  20                 	db	32
  4326  00F3DE  31                 	db	49	;'1'
  4327  00F3DF  36                 	db	54	;'6'
  4328  00F3E0  20                 	db	32
  4329  00F3E1  62                 	db	98	;'b'
  4330  00F3E2  69                 	db	105	;'i'
  4331  00F3E3  74                 	db	116	;'t'
  4332  00F3E4  20                 	db	32
  4333  00F3E5  74                 	db	116	;'t'
  4334  00F3E6  69                 	db	105	;'i'
  4335  00F3E7  6D                 	db	109	;'m'
  4336  00F3E8  65                 	db	101	;'e'
  4337  00F3E9  72                 	db	114	;'r'
  4338  00F3EA  20                 	db	32
  4339  00F3EB  70                 	db	112	;'p'
  4340  00F3EC  72                 	db	114	;'r'
  4341  00F3ED  65                 	db	101	;'e'
  4342  00F3EE  2D                 	db	45
  4343  00F3EF  6C                 	db	108	;'l'
  4344  00F3F0  6F                 	db	111	;'o'
  4345  00F3F1  61                 	db	97	;'a'
  4346  00F3F2  64                 	db	100	;'d'
  4347  00F3F3  20                 	db	32
  4348  00F3F4  76                 	db	118	;'v'
  4349  00F3F5  61                 	db	97	;'a'
  4350  00F3F6  6C                 	db	108	;'l'
  4351  00F3F7  75                 	db	117	;'u'
  4352  00F3F8  65                 	db	101	;'e'
  4353  00F3F9  20                 	db	32
  4354  00F3FA  6F                 	db	111	;'o'
  4355  00F3FB  66                 	db	102	;'f'
  4356  00F3FC  20                 	db	32
  4357  00F3FD  30                 	db	48	;'0'
  4358  00F3FE  78                 	db	120	;'x'
  4359  00F3FF  25                 	db	37
  4360  00F400  58                 	db	88	;'X'
  4361  00F401  20                 	db	32
  4362  00F402  28                 	db	40
  4363  00F403  25                 	db	37
  4364  00F404  75                 	db	117	;'u'
  4365  00F405  20                 	db	32
  4366  00F406  4C                 	db	76	;'L'
  4367  00F407  53                 	db	83	;'S'
  4368  00F408  42                 	db	66	;'B'
  4369  00F409  73                 	db	115	;'s'
  4370  00F40A  29                 	db	41
  4371  00F40B  20                 	db	32
  4372  00F40C  0A                 	db	10
  4373  00F40D  0D                 	db	13
  4374  00F40E  00                 	db	0
  4375  00F40F                     STR_74:
  4376  00F40F  56                 	db	86	;'V'
  4377  00F410  43                 	db	67	;'C'
  4378  00F411  43                 	db	67	;'C'
  4379  00F412  20                 	db	32
  4380  00F413  4F                 	db	79	;'O'
  4381  00F414  76                 	db	118	;'v'
  4382  00F415  65                 	db	101	;'e'
  4383  00F416  72                 	db	114	;'r'
  4384  00F417  76                 	db	118	;'v'
  4385  00F418  6F                 	db	111	;'o'
  4386  00F419  6C                 	db	108	;'l'
  4387  00F41A  74                 	db	116	;'t'
  4388  00F41B  61                 	db	97	;'a'
  4389  00F41C  67                 	db	103	;'g'
  4390  00F41D  65                 	db	101	;'e'
  4391  00F41E  20                 	db	32
  4392  00F41F  63                 	db	99	;'c'
  4393  00F420  6F                 	db	111	;'o'
  4394  00F421  6E                 	db	110	;'n'
  4395  00F422  64                 	db	100	;'d'
  4396  00F423  69                 	db	105	;'i'
  4397  00F424  74                 	db	116	;'t'
  4398  00F425  69                 	db	105	;'i'
  4399  00F426  6F                 	db	111	;'o'
  4400  00F427  6E                 	db	110	;'n'
  4401  00F428  20                 	db	32
  4402  00F429  68                 	db	104	;'h'
  4403  00F42A  61                 	db	97	;'a'
  4404  00F42B  73                 	db	115	;'s'
  4405  00F42C  20                 	db	32
  4406  00F42D  6F                 	db	111	;'o'
  4407  00F42E  63                 	db	99	;'c'
  4408  00F42F  63                 	db	99	;'c'
  4409  00F430  75                 	db	117	;'u'
  4410  00F431  72                 	db	114	;'r'
  4411  00F432  72                 	db	114	;'r'
  4412  00F433  65                 	db	101	;'e'
  4413  00F434  64                 	db	100	;'d'
  4414  00F435  20                 	db	32
  4415  00F436  28                 	db	40
  4416  00F437  56                 	db	86	;'V'
  4417  00F438  43                 	db	67	;'C'
  4418  00F439  43                 	db	67	;'C'
  4419  00F43A  20                 	db	32
  4420  00F43B  68                 	db	104	;'h'
  4421  00F43C  61                 	db	97	;'a'
  4422  00F43D  73                 	db	115	;'s'
  4423  00F43E  20                 	db	32
  4424  00F43F  65                 	db	101	;'e'
  4425  00F440  78                 	db	120	;'x'
  4426  00F441  63                 	db	99	;'c'
  4427  00F442  65                 	db	101	;'e'
  4428  00F443  65                 	db	101	;'e'
  4429  00F444  64                 	db	100	;'d'
  4430  00F445  65                 	db	101	;'e'
  4431  00F446  64                 	db	100	;'d'
  4432  00F447  20                 	db	32
  4433  00F448  33                 	db	51	;'3'
  4434  00F449  2E                 	db	46
  4435  00F44A  36                 	db	54	;'6'
  4436  00F44B  30                 	db	48	;'0'
  4437  00F44C  56                 	db	86	;'V'
  4438  00F44D  29                 	db	41
  4439  00F44E  0A                 	db	10
  4440  00F44F  0D                 	db	13
  4441  00F450  00                 	db	0
  4442  00F451                     STR_58:
  4443  00F451  54                 	db	84	;'T'
  4444  00F452  68                 	db	104	;'h'
  4445  00F453  65                 	db	101	;'e'
  4446  00F454  20                 	db	32
  4447  00F455  66                 	db	102	;'f'
  4448  00F456  6F                 	db	111	;'o'
  4449  00F457  6C                 	db	108	;'l'
  4450  00F458  6C                 	db	108	;'l'
  4451  00F459  6F                 	db	111	;'o'
  4452  00F45A  77                 	db	119	;'w'
  4453  00F45B  69                 	db	105	;'i'
  4454  00F45C  6E                 	db	110	;'n'
  4455  00F45D  67                 	db	103	;'g'
  4456  00F45E  20                 	db	32
  4457  00F45F  55                 	db	85	;'U'
  4458  00F460  73                 	db	115	;'s'
  4459  00F461  65                 	db	101	;'e'
  4460  00F462  72                 	db	114	;'r'
  4461  00F463  20                 	db	32
  4462  00F464  49                 	db	73	;'I'
  4463  00F465  44                 	db	68	;'D'
  4464  00F466  73                 	db	115	;'s'
  4465  00F467  20                 	db	32
  4466  00F468  68                 	db	104	;'h'
  4467  00F469  61                 	db	97	;'a'
  4468  00F46A  76                 	db	118	;'v'
  4469  00F46B  65                 	db	101	;'e'
  4470  00F46C  20                 	db	32
  4471  00F46D  62                 	db	98	;'b'
  4472  00F46E  65                 	db	101	;'e'
  4473  00F46F  65                 	db	101	;'e'
  4474  00F470  6E                 	db	110	;'n'
  4475  00F471  20                 	db	32
  4476  00F472  72                 	db	114	;'r'
  4477  00F473  65                 	db	101	;'e'
  4478  00F474  74                 	db	116	;'t'
  4479  00F475  72                 	db	114	;'r'
  4480  00F476  69                 	db	105	;'i'
  4481  00F477  65                 	db	101	;'e'
  4482  00F478  76                 	db	118	;'v'
  4483  00F479  65                 	db	101	;'e'
  4484  00F47A  64                 	db	100	;'d'
  4485  00F47B  20                 	db	32
  4486  00F47C  66                 	db	102	;'f'
  4487  00F47D  72                 	db	114	;'r'
  4488  00F47E  6F                 	db	111	;'o'
  4489  00F47F  6D                 	db	109	;'m'
  4490  00F480  20                 	db	32
  4491  00F481  66                 	db	102	;'f'
  4492  00F482  6C                 	db	108	;'l'
  4493  00F483  61                 	db	97	;'a'
  4494  00F484  73                 	db	115	;'s'
  4495  00F485  68                 	db	104	;'h'
  4496  00F486  20                 	db	32
  4497  00F487  6D                 	db	109	;'m'
  4498  00F488  65                 	db	101	;'e'
  4499  00F489  6D                 	db	109	;'m'
  4500  00F48A  6F                 	db	111	;'o'
  4501  00F48B  72                 	db	114	;'r'
  4502  00F48C  79                 	db	121	;'y'
  4503  00F48D  3A                 	db	58	;':'
  4504  00F48E  0A                 	db	10
  4505  00F48F  0D                 	db	13
  4506  00F490  00                 	db	0
  4507  00F491                     STR_114:
  4508  00F491  43                 	db	67	;'C'
  4509  00F492  61                 	db	97	;'a'
  4510  00F493  6C                 	db	108	;'l'
  4511  00F494  63                 	db	99	;'c'
  4512  00F495  75                 	db	117	;'u'
  4513  00F496  6C                 	db	108	;'l'
  4514  00F497  61                 	db	97	;'a'
  4515  00F498  74                 	db	116	;'t'
  4516  00F499  65                 	db	101	;'e'
  4517  00F49A  64                 	db	100	;'d'
  4518  00F49B  20                 	db	32
  4519  00F49C  54                 	db	84	;'T'
  4520  00F49D  52                 	db	82	;'R'
  4521  00F49E  49                 	db	73	;'I'
  4522  00F49F  41                 	db	65	;'A'
  4523  00F4A0  43                 	db	67	;'C'
  4524  00F4A1  20                 	db	32
  4525  00F4A2  66                 	db	102	;'f'
  4526  00F4A3  69                 	db	105	;'i'
  4527  00F4A4  72                 	db	114	;'r'
  4528  00F4A5  69                 	db	105	;'i'
  4529  00F4A6  6E                 	db	110	;'n'
  4530  00F4A7  67                 	db	103	;'g'
  4531  00F4A8  20                 	db	32
  4532  00F4A9  61                 	db	97	;'a'
  4533  00F4AA  6E                 	db	110	;'n'
  4534  00F4AB  67                 	db	103	;'g'
  4535  00F4AC  6C                 	db	108	;'l'
  4536  00F4AD  65                 	db	101	;'e'
  4537  00F4AE  20                 	db	32
  4538  00F4AF  69                 	db	105	;'i'
  4539  00F4B0  73                 	db	115	;'s'
  4540  00F4B1  20                 	db	32
  4541  00F4B2  25                 	db	37
  4542  00F4B3  2E                 	db	46
  4543  00F4B4  33                 	db	51	;'3'
  4544  00F4B5  66                 	db	102	;'f'
  4545  00F4B6  20                 	db	32
  4546  00F4B7  72                 	db	114	;'r'
  4547  00F4B8  61                 	db	97	;'a'
  4548  00F4B9  64                 	db	100	;'d'
  4549  00F4BA  69                 	db	105	;'i'
  4550  00F4BB  61                 	db	97	;'a'
  4551  00F4BC  6E                 	db	110	;'n'
  4552  00F4BD  73                 	db	115	;'s'
  4553  00F4BE  20                 	db	32
  4554  00F4BF  28                 	db	40
  4555  00F4C0  25                 	db	37
  4556  00F4C1  2E                 	db	46
  4557  00F4C2  33                 	db	51	;'3'
  4558  00F4C3  66                 	db	102	;'f'
  4559  00F4C4  20                 	db	32
  4560  00F4C5  64                 	db	100	;'d'
  4561  00F4C6  65                 	db	101	;'e'
  4562  00F4C7  67                 	db	103	;'g'
  4563  00F4C8  72                 	db	114	;'r'
  4564  00F4C9  65                 	db	101	;'e'
  4565  00F4CA  65                 	db	101	;'e'
  4566  00F4CB  73                 	db	115	;'s'
  4567  00F4CC  29                 	db	41
  4568  00F4CD  0A                 	db	10
  4569  00F4CE  0D                 	db	13
  4570  00F4CF  00                 	db	0
  4571  00F4D0                     STR_145:
  4572  00F4D0  53                 	db	83	;'S'
  4573  00F4D1  79                 	db	121	;'y'
  4574  00F4D2  73                 	db	115	;'s'
  4575  00F4D3  74                 	db	116	;'t'
  4576  00F4D4  65                 	db	101	;'e'
  4577  00F4D5  6D                 	db	109	;'m'
  4578  00F4D6  20                 	db	32
  4579  00F4D7  70                 	db	112	;'p'
  4580  00F4D8  61                 	db	97	;'a'
  4581  00F4D9  72                 	db	114	;'r'
  4582  00F4DA  61                 	db	97	;'a'
  4583  00F4DB  6D                 	db	109	;'m'
  4584  00F4DC  65                 	db	101	;'e'
  4585  00F4DD  74                 	db	116	;'t'
  4586  00F4DE  65                 	db	101	;'e'
  4587  00F4DF  72                 	db	114	;'r'
  4588  00F4E0  73                 	db	115	;'s'
  4589  00F4E1  20                 	db	32
  4590  00F4E2  61                 	db	97	;'a'
  4591  00F4E3  6E                 	db	110	;'n'
  4592  00F4E4  64                 	db	100	;'d'
  4593  00F4E5  20                 	db	32
  4594  00F4E6  61                 	db	97	;'a'
  4595  00F4E7  66                 	db	102	;'f'
  4596  00F4E8  66                 	db	102	;'f'
  4597  00F4E9  69                 	db	105	;'i'
  4598  00F4EA  72                 	db	114	;'r'
  4599  00F4EB  6D                 	db	109	;'m'
  4600  00F4EC  61                 	db	97	;'a'
  4601  00F4ED  74                 	db	116	;'t'
  4602  00F4EE  69                 	db	105	;'i'
  4603  00F4EF  76                 	db	118	;'v'
  4604  00F4F0  65                 	db	101	;'e'
  4605  00F4F1  20                 	db	32
  4606  00F4F2  72                 	db	114	;'r'
  4607  00F4F3  65                 	db	101	;'e'
  4608  00F4F4  73                 	db	115	;'s'
  4609  00F4F5  70                 	db	112	;'p'
  4610  00F4F6  6F                 	db	111	;'o'
  4611  00F4F7  6E                 	db	110	;'n'
  4612  00F4F8  73                 	db	115	;'s'
  4613  00F4F9  65                 	db	101	;'e'
  4614  00F4FA  73                 	db	115	;'s'
  4615  00F4FB  20                 	db	32
  4616  00F4FC  61                 	db	97	;'a'
  4617  00F4FD  70                 	db	112	;'p'
  4618  00F4FE  70                 	db	112	;'p'
  4619  00F4FF  65                 	db	101	;'e'
  4620  00F500  61                 	db	97	;'a'
  4621  00F501  72                 	db	114	;'r'
  4622  00F502  20                 	db	32
  4623  00F503  69                 	db	105	;'i'
  4624  00F504  6E                 	db	110	;'n'
  4625  00F505  20                 	db	32
  4626  00F506  67                 	db	103	;'g'
  4627  00F507  72                 	db	114	;'r'
  4628  00F508  65                 	db	101	;'e'
  4629  00F509  65                 	db	101	;'e'
  4630  00F50A  6E                 	db	110	;'n'
  4631  00F50B  0A                 	db	10
  4632  00F50C  0D                 	db	13
  4633  00F50D  00                 	db	0
  4634  00F50E                     STR_56:
  4635  00F50E  44                 	db	68	;'D'
  4636  00F50F  65                 	db	101	;'e'
  4637  00F510  76                 	db	118	;'v'
  4638  00F511  69                 	db	105	;'i'
  4639  00F512  63                 	db	99	;'c'
  4640  00F513  65                 	db	101	;'e'
  4641  00F514  20                 	db	32
  4642  00F515  73                 	db	115	;'s'
  4643  00F516  69                 	db	105	;'i'
  4644  00F517  6C                 	db	108	;'l'
  4645  00F518  69                 	db	105	;'i'
  4646  00F519  63                 	db	99	;'c'
  4647  00F51A  6F                 	db	111	;'o'
  4648  00F51B  6E                 	db	110	;'n'
  4649  00F51C  20                 	db	32
  4650  00F51D  72                 	db	114	;'r'
  4651  00F51E  65                 	db	101	;'e'
  4652  00F51F  76                 	db	118	;'v'
  4653  00F520  69                 	db	105	;'i'
  4654  00F521  73                 	db	115	;'s'
  4655  00F522  69                 	db	105	;'i'
  4656  00F523  6F                 	db	111	;'o'
  4657  00F524  6E                 	db	110	;'n'
  4658  00F525  20                 	db	32
  4659  00F526  49                 	db	73	;'I'
  4660  00F527  44                 	db	68	;'D'
  4661  00F528  20                 	db	32
  4662  00F529  61                 	db	97	;'a'
  4663  00F52A  73                 	db	115	;'s'
  4664  00F52B  20                 	db	32
  4665  00F52C  73                 	db	115	;'s'
  4666  00F52D  74                 	db	116	;'t'
  4667  00F52E  6F                 	db	111	;'o'
  4668  00F52F  72                 	db	114	;'r'
  4669  00F530  65                 	db	101	;'e'
  4670  00F531  64                 	db	100	;'d'
  4671  00F532  20                 	db	32
  4672  00F533  69                 	db	105	;'i'
  4673  00F534  6E                 	db	110	;'n'
  4674  00F535  20                 	db	32
  4675  00F536  46                 	db	70	;'F'
  4676  00F537  6C                 	db	108	;'l'
  4677  00F538  61                 	db	97	;'a'
  4678  00F539  73                 	db	115	;'s'
  4679  00F53A  68                 	db	104	;'h'
  4680  00F53B  20                 	db	32
  4681  00F53C  69                 	db	105	;'i'
  4682  00F53D  73                 	db	115	;'s'
  4683  00F53E  3A                 	db	58	;':'
  4684  00F53F  20                 	db	32
  4685  00F540  25                 	db	37
  4686  00F541  63                 	db	99	;'c'
  4687  00F542  25                 	db	37
  4688  00F543  30                 	db	48	;'0'
  4689  00F544  33                 	db	51	;'3'
  4690  00F545  64                 	db	100	;'d'
  4691  00F546  0A                 	db	10
  4692  00F547  0D                 	db	13
  4693  00F548  00                 	db	0
  4694  00F549                     STR_117:
  4695  00F549  44                 	db	68	;'D'
  4696  00F54A  65                 	db	101	;'e'
  4697  00F54B  76                 	db	118	;'v'
  4698  00F54C  69                 	db	105	;'i'
  4699  00F54D  63                 	db	99	;'c'
  4700  00F54E  65                 	db	101	;'e'
  4701  00F54F  20                 	db	32
  4702  00F550  6F                 	db	111	;'o'
  4703  00F551  6E                 	db	110	;'n'
  4704  00F552  20                 	db	32
  4705  00F553  74                 	db	116	;'t'
  4706  00F554  69                 	db	105	;'i'
  4707  00F555  6D                 	db	109	;'m'
  4708  00F556  65                 	db	101	;'e'
  4709  00F557  20                 	db	32
  4710  00F558  73                 	db	115	;'s'
  4711  00F559  69                 	db	105	;'i'
  4712  00F55A  6E                 	db	110	;'n'
  4713  00F55B  63                 	db	99	;'c'
  4714  00F55C  65                 	db	101	;'e'
  4715  00F55D  20                 	db	32
  4716  00F55E  6C                 	db	108	;'l'
  4717  00F55F  61                 	db	97	;'a'
  4718  00F560  73                 	db	115	;'s'
  4719  00F561  74                 	db	116	;'t'
  4720  00F562  20                 	db	32
  4721  00F563  72                 	db	114	;'r'
  4722  00F564  65                 	db	101	;'e'
  4723  00F565  73                 	db	115	;'s'
  4724  00F566  65                 	db	101	;'e'
  4725  00F567  74                 	db	116	;'t'
  4726  00F568  20                 	db	32
  4727  00F569  63                 	db	99	;'c'
  4728  00F56A  6F                 	db	111	;'o'
  4729  00F56B  6E                 	db	110	;'n'
  4730  00F56C  64                 	db	100	;'d'
  4731  00F56D  69                 	db	105	;'i'
  4732  00F56E  74                 	db	116	;'t'
  4733  00F56F  69                 	db	105	;'i'
  4734  00F570  6F                 	db	111	;'o'
  4735  00F571  6E                 	db	110	;'n'
  4736  00F572  20                 	db	32
  4737  00F573  69                 	db	105	;'i'
  4738  00F574  73                 	db	115	;'s'
  4739  00F575  20                 	db	32
  4740  00F576  25                 	db	37
  4741  00F577  64                 	db	100	;'d'
  4742  00F578  20                 	db	32
  4743  00F579  73                 	db	115	;'s'
  4744  00F57A  65                 	db	101	;'e'
  4745  00F57B  63                 	db	99	;'c'
  4746  00F57C  6F                 	db	111	;'o'
  4747  00F57D  6E                 	db	110	;'n'
  4748  00F57E  64                 	db	100	;'d'
  4749  00F57F  73                 	db	115	;'s'
  4750  00F580  0A                 	db	10
  4751  00F581  0D                 	db	13
  4752  00F582  00                 	db	0
  4753  00F583                     STR_83:
  4754  00F583  46                 	db	70	;'F'
  4755  00F584  69                 	db	105	;'i'
  4756  00F585  78                 	db	120	;'x'
  4757  00F586  65                 	db	101	;'e'
  4758  00F587  64                 	db	100	;'d'
  4759  00F588  20                 	db	32
  4760  00F589  56                 	db	86	;'V'
  4761  00F58A  6F                 	db	111	;'o'
  4762  00F58B  6C                 	db	108	;'l'
  4763  00F58C  74                 	db	116	;'t'
  4764  00F58D  61                 	db	97	;'a'
  4765  00F58E  67                 	db	103	;'g'
  4766  00F58F  65                 	db	101	;'e'
  4767  00F590  20                 	db	32
  4768  00F591  52                 	db	82	;'R'
  4769  00F592  65                 	db	101	;'e'
  4770  00F593  66                 	db	102	;'f'
  4771  00F594  65                 	db	101	;'e'
  4772  00F595  72                 	db	114	;'r'
  4773  00F596  65                 	db	101	;'e'
  4774  00F597  6E                 	db	110	;'n'
  4775  00F598  63                 	db	99	;'c'
  4776  00F599  65                 	db	101	;'e'
  4777  00F59A  20                 	db	32
  4778  00F59B  42                 	db	66	;'B'
  4779  00F59C  75                 	db	117	;'u'
  4780  00F59D  66                 	db	102	;'f'
  4781  00F59E  66                 	db	102	;'f'
  4782  00F59F  65                 	db	101	;'e'
  4783  00F5A0  72                 	db	114	;'r'
  4784  00F5A1  20                 	db	32
  4785  00F5A2  31                 	db	49	;'1'
  4786  00F5A3  20                 	db	32
  4787  00F5A4  6D                 	db	109	;'m'
  4788  00F5A5  65                 	db	101	;'e'
  4789  00F5A6  61                 	db	97	;'a'
  4790  00F5A7  73                 	db	115	;'s'
  4791  00F5A8  75                 	db	117	;'u'
  4792  00F5A9  72                 	db	114	;'r'
  4793  00F5AA  65                 	db	101	;'e'
  4794  00F5AB  64                 	db	100	;'d'
  4795  00F5AC  20                 	db	32
  4796  00F5AD  61                 	db	97	;'a'
  4797  00F5AE  73                 	db	115	;'s'
  4798  00F5AF  20                 	db	32
  4799  00F5B0  25                 	db	37
  4800  00F5B1  2E                 	db	46
  4801  00F5B2  33                 	db	51	;'3'
  4802  00F5B3  66                 	db	102	;'f'
  4803  00F5B4  20                 	db	32
  4804  00F5B5  56                 	db	86	;'V'
  4805  00F5B6  6F                 	db	111	;'o'
  4806  00F5B7  6C                 	db	108	;'l'
  4807  00F5B8  74                 	db	116	;'t'
  4808  00F5B9  73                 	db	115	;'s'
  4809  00F5BA  0A                 	db	10
  4810  00F5BB  0D                 	db	13
  4811  00F5BC  00                 	db	0
  4812  00F5BD                     STR_93:
  4813  00F5BD  4F                 	db	79	;'O'
  4814  00F5BE  75                 	db	117	;'u'
  4815  00F5BF  74                 	db	116	;'t'
  4816  00F5C0  70                 	db	112	;'p'
  4817  00F5C1  75                 	db	117	;'u'
  4818  00F5C2  74                 	db	116	;'t'
  4819  00F5C3  20                 	db	32
  4820  00F5C4  70                 	db	112	;'p'
  4821  00F5C5  6F                 	db	111	;'o'
  4822  00F5C6  77                 	db	119	;'w'
  4823  00F5C7  65                 	db	101	;'e'
  4824  00F5C8  72                 	db	114	;'r'
  4825  00F5C9  20                 	db	32
  4826  00F5CA  63                 	db	99	;'c'
  4827  00F5CB  61                 	db	97	;'a'
  4828  00F5CC  6C                 	db	108	;'l'
  4829  00F5CD  63                 	db	99	;'c'
  4830  00F5CE  75                 	db	117	;'u'
  4831  00F5CF  6C                 	db	108	;'l'
  4832  00F5D0  61                 	db	97	;'a'
  4833  00F5D1  74                 	db	116	;'t'
  4834  00F5D2  65                 	db	101	;'e'
  4835  00F5D3  64                 	db	100	;'d'
  4836  00F5D4  20                 	db	32
  4837  00F5D5  61                 	db	97	;'a'
  4838  00F5D6  73                 	db	115	;'s'
  4839  00F5D7  20                 	db	32
  4840  00F5D8  25                 	db	37
  4841  00F5D9  2E                 	db	46
  4842  00F5DA  33                 	db	51	;'3'
  4843  00F5DB  66                 	db	102	;'f'
  4844  00F5DC  20                 	db	32
  4845  00F5DD  57                 	db	87	;'W'
  4846  00F5DE  61                 	db	97	;'a'
  4847  00F5DF  74                 	db	116	;'t'
  4848  00F5E0  74                 	db	116	;'t'
  4849  00F5E1  73                 	db	115	;'s'
  4850  00F5E2  20                 	db	32
  4851  00F5E3  66                 	db	102	;'f'
  4852  00F5E4  72                 	db	114	;'r'
  4853  00F5E5  6F                 	db	111	;'o'
  4854  00F5E6  6D                 	db	109	;'m'
  4855  00F5E7  20                 	db	32
  4856  00F5E8  52                 	db	82	;'R'
  4857  00F5E9  4D                 	db	77	;'M'
  4858  00F5EA  53                 	db	83	;'S'
  4859  00F5EB  20                 	db	32
  4860  00F5EC  76                 	db	118	;'v'
  4861  00F5ED  61                 	db	97	;'a'
  4862  00F5EE  6C                 	db	108	;'l'
  4863  00F5EF  75                 	db	117	;'u'
  4864  00F5F0  65                 	db	101	;'e'
  4865  00F5F1  73                 	db	115	;'s'
  4866  00F5F2  0A                 	db	10
  4867  00F5F3  0D                 	db	13
  4868  00F5F4  00                 	db	0
  4869  00F5F5                     STR_144:
  4870  00F5F5  48                 	db	72	;'H'
  4871  00F5F6  65                 	db	101	;'e'
  4872  00F5F7  6C                 	db	108	;'l'
  4873  00F5F8  70                 	db	112	;'p'
  4874  00F5F9  20                 	db	32
  4875  00F5FA  6D                 	db	109	;'m'
  4876  00F5FB  65                 	db	101	;'e'
  4877  00F5FC  73                 	db	115	;'s'
  4878  00F5FD  73                 	db	115	;'s'
  4879  00F5FE  61                 	db	97	;'a'
  4880  00F5FF  67                 	db	103	;'g'
  4881  00F600  65                 	db	101	;'e'
  4882  00F601  73                 	db	115	;'s'
  4883  00F602  20                 	db	32
  4884  00F603  61                 	db	97	;'a'
  4885  00F604  6E                 	db	110	;'n'
  4886  00F605  64                 	db	100	;'d'
  4887  00F606  20                 	db	32
  4888  00F607  6E                 	db	110	;'n'
  4889  00F608  65                 	db	101	;'e'
  4890  00F609  75                 	db	117	;'u'
  4891  00F60A  74                 	db	116	;'t'
  4892  00F60B  72                 	db	114	;'r'
  4893  00F60C  61                 	db	97	;'a'
  4894  00F60D  6C                 	db	108	;'l'
  4895  00F60E  20                 	db	32
  4896  00F60F  72                 	db	114	;'r'
  4897  00F610  65                 	db	101	;'e'
  4898  00F611  73                 	db	115	;'s'
  4899  00F612  70                 	db	112	;'p'
  4900  00F613  6F                 	db	111	;'o'
  4901  00F614  6E                 	db	110	;'n'
  4902  00F615  73                 	db	115	;'s'
  4903  00F616  65                 	db	101	;'e'
  4904  00F617  73                 	db	115	;'s'
  4905  00F618  20                 	db	32
  4906  00F619  61                 	db	97	;'a'
  4907  00F61A  70                 	db	112	;'p'
  4908  00F61B  70                 	db	112	;'p'
  4909  00F61C  65                 	db	101	;'e'
  4910  00F61D  61                 	db	97	;'a'
  4911  00F61E  72                 	db	114	;'r'
  4912  00F61F  20                 	db	32
  4913  00F620  69                 	db	105	;'i'
  4914  00F621  6E                 	db	110	;'n'
  4915  00F622  20                 	db	32
  4916  00F623  79                 	db	121	;'y'
  4917  00F624  65                 	db	101	;'e'
  4918  00F625  6C                 	db	108	;'l'
  4919  00F626  6C                 	db	108	;'l'
  4920  00F627  6F                 	db	111	;'o'
  4921  00F628  77                 	db	119	;'w'
  4922  00F629  0A                 	db	10
  4923  00F62A  0D                 	db	13
  4924  00F62B  00                 	db	0
  4925  00F62C                     STR_59:
  4926  00F62C  20                 	db	32
  4927  00F62D  20                 	db	32
  4928  00F62E  20                 	db	32
  4929  00F62F  20                 	db	32
  4930  00F630  55                 	db	85	;'U'
  4931  00F631  73                 	db	115	;'s'
  4932  00F632  65                 	db	101	;'e'
  4933  00F633  72                 	db	114	;'r'
  4934  00F634  20                 	db	32
  4935  00F635  49                 	db	73	;'I'
  4936  00F636  44                 	db	68	;'D'
  4937  00F637  20                 	db	32
  4938  00F638  57                 	db	87	;'W'
  4939  00F639  6F                 	db	111	;'o'
  4940  00F63A  72                 	db	114	;'r'
  4941  00F63B  64                 	db	100	;'d'
  4942  00F63C  20                 	db	32
  4943  00F63D  25                 	db	37
  4944  00F63E  64                 	db	100	;'d'
  4945  00F63F  20                 	db	32
  4946  00F640  28                 	db	40
  4947  00F641  46                 	db	70	;'F'
  4948  00F642  6C                 	db	108	;'l'
  4949  00F643  61                 	db	97	;'a'
  4950  00F644  73                 	db	115	;'s'
  4951  00F645  68                 	db	104	;'h'
  4952  00F646  20                 	db	32
  4953  00F647  61                 	db	97	;'a'
  4954  00F648  64                 	db	100	;'d'
  4955  00F649  64                 	db	100	;'d'
  4956  00F64A  72                 	db	114	;'r'
  4957  00F64B  65                 	db	101	;'e'
  4958  00F64C  73                 	db	115	;'s'
  4959  00F64D  73                 	db	115	;'s'
  4960  00F64E  20                 	db	32
  4961  00F64F  30                 	db	48	;'0'
  4962  00F650  78                 	db	120	;'x'
  4963  00F651  32                 	db	50	;'2'
  4964  00F652  30                 	db	48	;'0'
  4965  00F653  30                 	db	48	;'0'
  4966  00F654  30                 	db	48	;'0'
  4967  00F655  30                 	db	48	;'0'
  4968  00F656  25                 	db	37
  4969  00F657  58                 	db	88	;'X'
  4970  00F658  29                 	db	41
  4971  00F659  3A                 	db	58	;':'
  4972  00F65A  20                 	db	32
  4973  00F65B  30                 	db	48	;'0'
  4974  00F65C  78                 	db	120	;'x'
  4975  00F65D  25                 	db	37
  4976  00F65E  58                 	db	88	;'X'
  4977  00F65F  0A                 	db	10
  4978  00F660  0D                 	db	13
  4979  00F661  00                 	db	0
  4980  00F662                     STR_105:
  4981  00F662  4C                 	db	76	;'L'
  4982  00F663  6F                 	db	111	;'o'
  4983  00F664  61                 	db	97	;'a'
  4984  00F665  64                 	db	100	;'d'
  4985  00F666  20                 	db	32
  4986  00F667  69                 	db	105	;'i'
  4987  00F668  73                 	db	115	;'s'
  4988  00F669  20                 	db	32
  4989  00F66A  63                 	db	99	;'c'
  4990  00F66B  75                 	db	117	;'u'
  4991  00F66C  72                 	db	114	;'r'
  4992  00F66D  72                 	db	114	;'r'
  4993  00F66E  65                 	db	101	;'e'
  4994  00F66F  6E                 	db	110	;'n'
  4995  00F670  74                 	db	116	;'t'
  4996  00F671  6C                 	db	108	;'l'
  4997  00F672  79                 	db	121	;'y'
  4998  00F673  20                 	db	32
  4999  00F674  65                 	db	101	;'e'
  5000  00F675  6E                 	db	110	;'n'
  5001  00F676  61                 	db	97	;'a'
  5002  00F677  62                 	db	98	;'b'
  5003  00F678  6C                 	db	108	;'l'
  5004  00F679  65                 	db	101	;'e'
  5005  00F67A  64                 	db	100	;'d'
  5006  00F67B  2C                 	db	44
  5007  00F67C  20                 	db	32
  5008  00F67D  62                 	db	98	;'b'
  5009  00F67E  75                 	db	117	;'u'
  5010  00F67F  74                 	db	116	;'t'
  5011  00F680  20                 	db	32
  5012  00F681  64                 	db	100	;'d'
  5013  00F682  69                 	db	105	;'i'
  5014  00F683  6D                 	db	109	;'m'
  5015  00F684  6D                 	db	109	;'m'
  5016  00F685  69                 	db	105	;'i'
  5017  00F686  6E                 	db	110	;'n'
  5018  00F687  67                 	db	103	;'g'
  5019  00F688  20                 	db	32
  5020  00F689  69                 	db	105	;'i'
  5021  00F68A  73                 	db	115	;'s'
  5022  00F68B  20                 	db	32
  5023  00F68C  64                 	db	100	;'d'
  5024  00F68D  69                 	db	105	;'i'
  5025  00F68E  73                 	db	115	;'s'
  5026  00F68F  61                 	db	97	;'a'
  5027  00F690  62                 	db	98	;'b'
  5028  00F691  6C                 	db	108	;'l'
  5029  00F692  65                 	db	101	;'e'
  5030  00F693  64                 	db	100	;'d'
  5031  00F694  0A                 	db	10
  5032  00F695  0D                 	db	13
  5033  00F696  00                 	db	0
  5034  00F697                     STR_119:
  5035  00F697  4C                 	db	76	;'L'
  5036  00F698  6F                 	db	111	;'o'
  5037  00F699  61                 	db	97	;'a'
  5038  00F69A  64                 	db	100	;'d'
  5039  00F69B  20                 	db	32
  5040  00F69C  6F                 	db	111	;'o'
  5041  00F69D  6E                 	db	110	;'n'
  5042  00F69E  20                 	db	32
  5043  00F69F  74                 	db	116	;'t'
  5044  00F6A0  69                 	db	105	;'i'
  5045  00F6A1  6D                 	db	109	;'m'
  5046  00F6A2  65                 	db	101	;'e'
  5047  00F6A3  20                 	db	32
  5048  00F6A4  73                 	db	115	;'s'
  5049  00F6A5  69                 	db	105	;'i'
  5050  00F6A6  6E                 	db	110	;'n'
  5051  00F6A7  63                 	db	99	;'c'
  5052  00F6A8  65                 	db	101	;'e'
  5053  00F6A9  20                 	db	32
  5054  00F6AA  6C                 	db	108	;'l'
  5055  00F6AB  61                 	db	97	;'a'
  5056  00F6AC  73                 	db	115	;'s'
  5057  00F6AD  74                 	db	116	;'t'
  5058  00F6AE  20                 	db	32
  5059  00F6AF  64                 	db	100	;'d'
  5060  00F6B0  65                 	db	101	;'e'
  5061  00F6B1  76                 	db	118	;'v'
  5062  00F6B2  69                 	db	105	;'i'
  5063  00F6B3  63                 	db	99	;'c'
  5064  00F6B4  65                 	db	101	;'e'
  5065  00F6B5  20                 	db	32
  5066  00F6B6  72                 	db	114	;'r'
  5067  00F6B7  65                 	db	101	;'e'
  5068  00F6B8  73                 	db	115	;'s'
  5069  00F6B9  65                 	db	101	;'e'
  5070  00F6BA  74                 	db	116	;'t'
  5071  00F6BB  20                 	db	32
  5072  00F6BC  69                 	db	105	;'i'
  5073  00F6BD  73                 	db	115	;'s'
  5074  00F6BE  20                 	db	32
  5075  00F6BF  25                 	db	37
  5076  00F6C0  64                 	db	100	;'d'
  5077  00F6C1  20                 	db	32
  5078  00F6C2  73                 	db	115	;'s'
  5079  00F6C3  65                 	db	101	;'e'
  5080  00F6C4  63                 	db	99	;'c'
  5081  00F6C5  6F                 	db	111	;'o'
  5082  00F6C6  6E                 	db	110	;'n'
  5083  00F6C7  64                 	db	100	;'d'
  5084  00F6C8  73                 	db	115	;'s'
  5085  00F6C9  0A                 	db	10
  5086  00F6CA  0D                 	db	13
  5087  00F6CB  00                 	db	0
  5088  00F6CC                     STR_48:
  5089  00F6CC  54                 	db	84	;'T'
  5090  00F6CD  68                 	db	104	;'h'
  5091  00F6CE  65                 	db	101	;'e'
  5092  00F6CF  20                 	db	32
  5093  00F6D0  63                 	db	99	;'c'
  5094  00F6D1  61                 	db	97	;'a'
  5095  00F6D2  75                 	db	117	;'u'
  5096  00F6D3  73                 	db	115	;'s'
  5097  00F6D4  65                 	db	101	;'e'
  5098  00F6D5  20                 	db	32
  5099  00F6D6  6F                 	db	111	;'o'
  5100  00F6D7  66                 	db	102	;'f'
  5101  00F6D8  20                 	db	32
  5102  00F6D9  74                 	db	116	;'t'
  5103  00F6DA  68                 	db	104	;'h'
  5104  00F6DB  65                 	db	101	;'e'
  5105  00F6DC  20                 	db	32
  5106  00F6DD  6D                 	db	109	;'m'
  5107  00F6DE  6F                 	db	111	;'o'
  5108  00F6DF  73                 	db	115	;'s'
  5109  00F6E0  74                 	db	116	;'t'
  5110  00F6E1  20                 	db	32
  5111  00F6E2  72                 	db	114	;'r'
  5112  00F6E3  65                 	db	101	;'e'
  5113  00F6E4  63                 	db	99	;'c'
  5114  00F6E5  65                 	db	101	;'e'
  5115  00F6E6  6E                 	db	110	;'n'
  5116  00F6E7  74                 	db	116	;'t'
  5117  00F6E8  20                 	db	32
  5118  00F6E9  64                 	db	100	;'d'
  5119  00F6EA  65                 	db	101	;'e'
  5120  00F6EB  76                 	db	118	;'v'
  5121  00F6EC  69                 	db	105	;'i'
  5122  00F6ED  63                 	db	99	;'c'
  5123  00F6EE  65                 	db	101	;'e'
  5124  00F6EF  20                 	db	32
  5125  00F6F0  72                 	db	114	;'r'
  5126  00F6F1  65                 	db	101	;'e'
  5127  00F6F2  73                 	db	115	;'s'
  5128  00F6F3  65                 	db	101	;'e'
  5129  00F6F4  74                 	db	116	;'t'
  5130  00F6F5  20                 	db	32
  5131  00F6F6  77                 	db	119	;'w'
  5132  00F6F7  61                 	db	97	;'a'
  5133  00F6F8  73                 	db	115	;'s'
  5134  00F6F9  3A                 	db	58	;':'
  5135  00F6FA  20                 	db	32
  5136  00F6FB  25                 	db	37
  5137  00F6FC  73                 	db	115	;'s'
  5138  00F6FD  0A                 	db	10
  5139  00F6FE  0D                 	db	13
  5140  00F6FF  00                 	db	0
  5141  00F700                     STR_125:
  5142  00F700  4D                 	db	77	;'M'
  5143  00F701  61                 	db	97	;'a'
  5144  00F702  78                 	db	120	;'x'
  5145  00F703  69                 	db	105	;'i'
  5146  00F704  6D                 	db	109	;'m'
  5147  00F705  75                 	db	117	;'u'
  5148  00F706  6D                 	db	109	;'m'
  5149  00F707  20                 	db	32
  5150  00F708  72                 	db	114	;'r'
  5151  00F709  65                 	db	101	;'e'
  5152  00F70A  63                 	db	99	;'c'
  5153  00F70B  6F                 	db	111	;'o'
  5154  00F70C  72                 	db	114	;'r'
  5155  00F70D  64                 	db	100	;'d'
  5156  00F70E  65                 	db	101	;'e'
  5157  00F70F  64                 	db	100	;'d'
  5158  00F710  20                 	db	32
  5159  00F711  2B                 	db	43
  5160  00F712  33                 	db	51	;'3'
  5161  00F713  2E                 	db	46
  5162  00F714  33                 	db	51	;'3'
  5163  00F715  56                 	db	86	;'V'
  5164  00F716  20                 	db	32
  5165  00F717  52                 	db	82	;'R'
  5166  00F718  61                 	db	97	;'a'
  5167  00F719  69                 	db	105	;'i'
  5168  00F71A  6C                 	db	108	;'l'
  5169  00F71B  20                 	db	32
  5170  00F71C  56                 	db	86	;'V'
  5171  00F71D  6F                 	db	111	;'o'
  5172  00F71E  6C                 	db	108	;'l'
  5173  00F71F  74                 	db	116	;'t'
  5174  00F720  61                 	db	97	;'a'
  5175  00F721  67                 	db	103	;'g'
  5176  00F722  65                 	db	101	;'e'
  5177  00F723  20                 	db	32
  5178  00F724  69                 	db	105	;'i'
  5179  00F725  73                 	db	115	;'s'
  5180  00F726  20                 	db	32
  5181  00F727  25                 	db	37
  5182  00F728  2E                 	db	46
  5183  00F729  33                 	db	51	;'3'
  5184  00F72A  66                 	db	102	;'f'
  5185  00F72B  20                 	db	32
  5186  00F72C  56                 	db	86	;'V'
  5187  00F72D  6F                 	db	111	;'o'
  5188  00F72E  6C                 	db	108	;'l'
  5189  00F72F  74                 	db	116	;'t'
  5190  00F730  73                 	db	115	;'s'
  5191  00F731  0A                 	db	10
  5192  00F732  0D                 	db	13
  5193  00F733  00                 	db	0
  5194  00F734                     STR_131:
  5195  00F734  4D                 	db	77	;'M'
  5196  00F735  61                 	db	97	;'a'
  5197  00F736  78                 	db	120	;'x'
  5198  00F737  69                 	db	105	;'i'
  5199  00F738  6D                 	db	109	;'m'
  5200  00F739  75                 	db	117	;'u'
  5201  00F73A  6D                 	db	109	;'m'
  5202  00F73B  20                 	db	32
  5203  00F73C  72                 	db	114	;'r'
  5204  00F73D  65                 	db	101	;'e'
  5205  00F73E  63                 	db	99	;'c'
  5206  00F73F  6F                 	db	111	;'o'
  5207  00F740  72                 	db	114	;'r'
  5208  00F741  64                 	db	100	;'d'
  5209  00F742  65                 	db	101	;'e'
  5210  00F743  64                 	db	100	;'d'
  5211  00F744  20                 	db	32
  5212  00F745  46                 	db	70	;'F'
  5213  00F746  56                 	db	86	;'V'
  5214  00F747  52                 	db	82	;'R'
  5215  00F748  20                 	db	32
  5216  00F749  42                 	db	66	;'B'
  5217  00F74A  75                 	db	117	;'u'
  5218  00F74B  66                 	db	102	;'f'
  5219  00F74C  66                 	db	102	;'f'
  5220  00F74D  65                 	db	101	;'e'
  5221  00F74E  72                 	db	114	;'r'
  5222  00F74F  20                 	db	32
  5223  00F750  56                 	db	86	;'V'
  5224  00F751  6F                 	db	111	;'o'
  5225  00F752  6C                 	db	108	;'l'
  5226  00F753  74                 	db	116	;'t'
  5227  00F754  61                 	db	97	;'a'
  5228  00F755  67                 	db	103	;'g'
  5229  00F756  65                 	db	101	;'e'
  5230  00F757  20                 	db	32
  5231  00F758  69                 	db	105	;'i'
  5232  00F759  73                 	db	115	;'s'
  5233  00F75A  20                 	db	32
  5234  00F75B  25                 	db	37
  5235  00F75C  2E                 	db	46
  5236  00F75D  33                 	db	51	;'3'
  5237  00F75E  66                 	db	102	;'f'
  5238  00F75F  20                 	db	32
  5239  00F760  56                 	db	86	;'V'
  5240  00F761  6F                 	db	111	;'o'
  5241  00F762  6C                 	db	108	;'l'
  5242  00F763  74                 	db	116	;'t'
  5243  00F764  73                 	db	115	;'s'
  5244  00F765  0A                 	db	10
  5245  00F766  0D                 	db	13
  5246  00F767  00                 	db	0
  5247  00F768                     STR_121:
  5248  00F768  4D                 	db	77	;'M'
  5249  00F769  61                 	db	97	;'a'
  5250  00F76A  78                 	db	120	;'x'
  5251  00F76B  69                 	db	105	;'i'
  5252  00F76C  6D                 	db	109	;'m'
  5253  00F76D  75                 	db	117	;'u'
  5254  00F76E  6D                 	db	109	;'m'
  5255  00F76F  20                 	db	32
  5256  00F770  72                 	db	114	;'r'
  5257  00F771  65                 	db	101	;'e'
  5258  00F772  63                 	db	99	;'c'
  5259  00F773  6F                 	db	111	;'o'
  5260  00F774  72                 	db	114	;'r'
  5261  00F775  64                 	db	100	;'d'
  5262  00F776  65                 	db	101	;'e'
  5263  00F777  64                 	db	100	;'d'
  5264  00F778  20                 	db	32
  5265  00F779  52                 	db	82	;'R'
  5266  00F77A  4D                 	db	77	;'M'
  5267  00F77B  53                 	db	83	;'S'
  5268  00F77C  20                 	db	32
  5269  00F77D  6F                 	db	111	;'o'
  5270  00F77E  75                 	db	117	;'u'
  5271  00F77F  74                 	db	116	;'t'
  5272  00F780  70                 	db	112	;'p'
  5273  00F781  75                 	db	117	;'u'
  5274  00F782  74                 	db	116	;'t'
  5275  00F783  20                 	db	32
  5276  00F784  63                 	db	99	;'c'
  5277  00F785  75                 	db	117	;'u'
  5278  00F786  72                 	db	114	;'r'
  5279  00F787  72                 	db	114	;'r'
  5280  00F788  65                 	db	101	;'e'
  5281  00F789  6E                 	db	110	;'n'
  5282  00F78A  74                 	db	116	;'t'
  5283  00F78B  20                 	db	32
  5284  00F78C  69                 	db	105	;'i'
  5285  00F78D  73                 	db	115	;'s'
  5286  00F78E  20                 	db	32
  5287  00F78F  25                 	db	37
  5288  00F790  2E                 	db	46
  5289  00F791  33                 	db	51	;'3'
  5290  00F792  66                 	db	102	;'f'
  5291  00F793  20                 	db	32
  5292  00F794  41                 	db	65	;'A'
  5293  00F795  72                 	db	114	;'r'
  5294  00F796  6D                 	db	109	;'m'
  5295  00F797  73                 	db	115	;'s'
  5296  00F798  0A                 	db	10
  5297  00F799  0D                 	db	13
  5298  00F79A  00                 	db	0
  5299  00F79B                     STR_127:
  5300  00F79B  4D                 	db	77	;'M'
  5301  00F79C  61                 	db	97	;'a'
  5302  00F79D  78                 	db	120	;'x'
  5303  00F79E  69                 	db	105	;'i'
  5304  00F79F  6D                 	db	109	;'m'
  5305  00F7A0  75                 	db	117	;'u'
  5306  00F7A1  6D                 	db	109	;'m'
  5307  00F7A2  20                 	db	32
  5308  00F7A3  72                 	db	114	;'r'
  5309  00F7A4  65                 	db	101	;'e'
  5310  00F7A5  63                 	db	99	;'c'
  5311  00F7A6  6F                 	db	111	;'o'
  5312  00F7A7  72                 	db	114	;'r'
  5313  00F7A8  64                 	db	100	;'d'
  5314  00F7A9  65                 	db	101	;'e'
  5315  00F7AA  64                 	db	100	;'d'
  5316  00F7AB  20                 	db	32
  5317  00F7AC  2B                 	db	43
  5318  00F7AD  31                 	db	49	;'1'
  5319  00F7AE  32                 	db	50	;'2'
  5320  00F7AF  56                 	db	86	;'V'
  5321  00F7B0  20                 	db	32
  5322  00F7B1  52                 	db	82	;'R'
  5323  00F7B2  61                 	db	97	;'a'
  5324  00F7B3  69                 	db	105	;'i'
  5325  00F7B4  6C                 	db	108	;'l'
  5326  00F7B5  20                 	db	32
  5327  00F7B6  56                 	db	86	;'V'
  5328  00F7B7  6F                 	db	111	;'o'
  5329  00F7B8  6C                 	db	108	;'l'
  5330  00F7B9  74                 	db	116	;'t'
  5331  00F7BA  61                 	db	97	;'a'
  5332  00F7BB  67                 	db	103	;'g'
  5333  00F7BC  65                 	db	101	;'e'
  5334  00F7BD  20                 	db	32
  5335  00F7BE  69                 	db	105	;'i'
  5336  00F7BF  73                 	db	115	;'s'
  5337  00F7C0  20                 	db	32
  5338  00F7C1  25                 	db	37
  5339  00F7C2  2E                 	db	46
  5340  00F7C3  33                 	db	51	;'3'
  5341  00F7C4  66                 	db	102	;'f'
  5342  00F7C5  20                 	db	32
  5343  00F7C6  56                 	db	86	;'V'
  5344  00F7C7  6F                 	db	111	;'o'
  5345  00F7C8  6C                 	db	108	;'l'
  5346  00F7C9  74                 	db	116	;'t'
  5347  00F7CA  73                 	db	115	;'s'
  5348  00F7CB  0A                 	db	10
  5349  00F7CC  0D                 	db	13
  5350  00F7CD  00                 	db	0
  5351  00F7CE                     STR_69:
  5352  00F7CE  54                 	db	84	;'T'
  5353  00F7CF  68                 	db	104	;'h'
  5354  00F7D0  65                 	db	101	;'e'
  5355  00F7D1  20                 	db	32
  5356  00F7D2  66                 	db	102	;'f'
  5357  00F7D3  6F                 	db	111	;'o'
  5358  00F7D4  6C                 	db	108	;'l'
  5359  00F7D5  6C                 	db	108	;'l'
  5360  00F7D6  6F                 	db	111	;'o'
  5361  00F7D7  77                 	db	119	;'w'
  5362  00F7D8  69                 	db	105	;'i'
  5363  00F7D9  6E                 	db	110	;'n'
  5364  00F7DA  67                 	db	103	;'g'
  5365  00F7DB  20                 	db	32
  5366  00F7DC  63                 	db	99	;'c'
  5367  00F7DD  68                 	db	104	;'h'
  5368  00F7DE  61                 	db	97	;'a'
  5369  00F7DF  6E                 	db	110	;'n'
  5370  00F7E0  6E                 	db	110	;'n'
  5371  00F7E1  65                 	db	101	;'e'
  5372  00F7E2  6C                 	db	108	;'l'
  5373  00F7E3  20                 	db	32
  5374  00F7E4  63                 	db	99	;'c'
  5375  00F7E5  61                 	db	97	;'a'
  5376  00F7E6  75                 	db	117	;'u'
  5377  00F7E7  73                 	db	115	;'s'
  5378  00F7E8  65                 	db	101	;'e'
  5379  00F7E9  64                 	db	100	;'d'
  5380  00F7EA  20                 	db	32
  5381  00F7EB  61                 	db	97	;'a'
  5382  00F7EC  6E                 	db	110	;'n'
  5383  00F7ED  20                 	db	32
  5384  00F7EE  41                 	db	65	;'A'
  5385  00F7EF  44                 	db	68	;'D'
  5386  00F7F0  43                 	db	67	;'C'
  5387  00F7F1  20                 	db	32
  5388  00F7F2  65                 	db	101	;'e'
  5389  00F7F3  72                 	db	114	;'r'
  5390  00F7F4  72                 	db	114	;'r'
  5391  00F7F5  6F                 	db	111	;'o'
  5392  00F7F6  72                 	db	114	;'r'
  5393  00F7F7  3A                 	db	58	;':'
  5394  00F7F8  20                 	db	32
  5395  00F7F9  25                 	db	37
  5396  00F7FA  73                 	db	115	;'s'
  5397  00F7FB  0A                 	db	10
  5398  00F7FC  0D                 	db	13
  5399  00F7FD  00                 	db	0
  5400  00F7FE                     STR_52:
  5401  00F7FE  4D                 	db	77	;'M'
  5402  00F7FF  61                 	db	97	;'a'
  5403  00F800  72                 	db	114	;'r'
  5404  00F801  71                 	db	113	;'q'
  5405  00F802  75                 	db	117	;'u'
  5406  00F803  65                 	db	101	;'e'
  5407  00F804  74                 	db	116	;'t'
  5408  00F805  74                 	db	116	;'t'
  5409  00F806  65                 	db	101	;'e'
  5410  00F807  20                 	db	32
  5411  00F808  55                 	db	85	;'U'
  5412  00F809  6E                 	db	110	;'n'
  5413  00F80A  69                 	db	105	;'i'
  5414  00F80B  76                 	db	118	;'v'
  5415  00F80C  65                 	db	101	;'e'
  5416  00F80D  72                 	db	114	;'r'
  5417  00F80E  73                 	db	115	;'s'
  5418  00F80F  69                 	db	105	;'i'
  5419  00F810  74                 	db	116	;'t'
  5420  00F811  79                 	db	121	;'y'
  5421  00F812  20                 	db	32
  5422  00F813  45                 	db	69	;'E'
  5423  00F814  4C                 	db	76	;'L'
  5424  00F815  45                 	db	69	;'E'
  5425  00F816  4E                 	db	78	;'N'
  5426  00F817  20                 	db	32
  5427  00F818  33                 	db	51	;'3'
  5428  00F819  30                 	db	48	;'0'
  5429  00F81A  33                 	db	51	;'3'
  5430  00F81B  35                 	db	53	;'5'
  5431  00F81C  20                 	db	32
  5432  00F81D  46                 	db	70	;'F'
  5433  00F81E  69                 	db	105	;'i'
  5434  00F81F  6E                 	db	110	;'n'
  5435  00F820  61                 	db	97	;'a'
  5436  00F821  6C                 	db	108	;'l'
  5437  00F822  20                 	db	32
  5438  00F823  50                 	db	80	;'P'
  5439  00F824  72                 	db	114	;'r'
  5440  00F825  6F                 	db	111	;'o'
  5441  00F826  6A                 	db	106	;'j'
  5442  00F827  65                 	db	101	;'e'
  5443  00F828  63                 	db	99	;'c'
  5444  00F829  74                 	db	116	;'t'
  5445  00F82A  0A                 	db	10
  5446  00F82B  0D                 	db	13
  5447  00F82C  00                 	db	0
  5448  00F82D                     STR_147:
  5449  00F82D  45                 	db	69	;'E'
  5450  00F82E  72                 	db	114	;'r'
  5451  00F82F  72                 	db	114	;'r'
  5452  00F830  6F                 	db	111	;'o'
  5453  00F831  72                 	db	114	;'r'
  5454  00F832  73                 	db	115	;'s'
  5455  00F833  20                 	db	32
  5456  00F834  61                 	db	97	;'a'
  5457  00F835  6E                 	db	110	;'n'
  5458  00F836  64                 	db	100	;'d'
  5459  00F837  20                 	db	32
  5460  00F838  6E                 	db	110	;'n'
  5461  00F839  65                 	db	101	;'e'
  5462  00F83A  67                 	db	103	;'g'
  5463  00F83B  61                 	db	97	;'a'
  5464  00F83C  74                 	db	116	;'t'
  5465  00F83D  69                 	db	105	;'i'
  5466  00F83E  76                 	db	118	;'v'
  5467  00F83F  65                 	db	101	;'e'
  5468  00F840  20                 	db	32
  5469  00F841  72                 	db	114	;'r'
  5470  00F842  65                 	db	101	;'e'
  5471  00F843  73                 	db	115	;'s'
  5472  00F844  70                 	db	112	;'p'
  5473  00F845  6F                 	db	111	;'o'
  5474  00F846  6E                 	db	110	;'n'
  5475  00F847  73                 	db	115	;'s'
  5476  00F848  65                 	db	101	;'e'
  5477  00F849  73                 	db	115	;'s'
  5478  00F84A  20                 	db	32
  5479  00F84B  61                 	db	97	;'a'
  5480  00F84C  70                 	db	112	;'p'
  5481  00F84D  70                 	db	112	;'p'
  5482  00F84E  65                 	db	101	;'e'
  5483  00F84F  61                 	db	97	;'a'
  5484  00F850  72                 	db	114	;'r'
  5485  00F851  20                 	db	32
  5486  00F852  69                 	db	105	;'i'
  5487  00F853  6E                 	db	110	;'n'
  5488  00F854  20                 	db	32
  5489  00F855  72                 	db	114	;'r'
  5490  00F856  65                 	db	101	;'e'
  5491  00F857  64                 	db	100	;'d'
  5492  00F858  0A                 	db	10
  5493  00F859  0D                 	db	13
  5494  00F85A  00                 	db	0
  5495  00F85B                     STR_112:
  5496  00F85B  45                 	db	69	;'E'
  5497  00F85C  6E                 	db	110	;'n'
  5498  00F85D  74                 	db	116	;'t'
  5499  00F85E  65                 	db	101	;'e'
  5500  00F85F  72                 	db	114	;'r'
  5501  00F860  20                 	db	32
  5502  00F861  27                 	db	39
  5503  00F862  48                 	db	72	;'H'
  5504  00F863  65                 	db	101	;'e'
  5505  00F864  6C                 	db	108	;'l'
  5506  00F865  70                 	db	112	;'p'
  5507  00F866  27                 	db	39
  5508  00F867  20                 	db	32
  5509  00F868  66                 	db	102	;'f'
  5510  00F869  6F                 	db	111	;'o'
  5511  00F86A  72                 	db	114	;'r'
  5512  00F86B  20                 	db	32
  5513  00F86C  6C                 	db	108	;'l'
  5514  00F86D  69                 	db	105	;'i'
  5515  00F86E  73                 	db	115	;'s'
  5516  00F86F  74                 	db	116	;'t'
  5517  00F870  20                 	db	32
  5518  00F871  6F                 	db	111	;'o'
  5519  00F872  66                 	db	102	;'f'
  5520  00F873  20                 	db	32
  5521  00F874  61                 	db	97	;'a'
  5522  00F875  76                 	db	118	;'v'
  5523  00F876  61                 	db	97	;'a'
  5524  00F877  69                 	db	105	;'i'
  5525  00F878  6C                 	db	108	;'l'
  5526  00F879  61                 	db	97	;'a'
  5527  00F87A  62                 	db	98	;'b'
  5528  00F87B  6C                 	db	108	;'l'
  5529  00F87C  65                 	db	101	;'e'
  5530  00F87D  20                 	db	32
  5531  00F87E  63                 	db	99	;'c'
  5532  00F87F  6F                 	db	111	;'o'
  5533  00F880  6D                 	db	109	;'m'
  5534  00F881  6D                 	db	109	;'m'
  5535  00F882  61                 	db	97	;'a'
  5536  00F883  6E                 	db	110	;'n'
  5537  00F884  64                 	db	100	;'d'
  5538  00F885  73                 	db	115	;'s'
  5539  00F886  0A                 	db	10
  5540  00F887  0D                 	db	13
  5541  00F888  00                 	db	0
  5542  00F889                     STR_123:
  5543  00F889  4D                 	db	77	;'M'
  5544  00F88A  61                 	db	97	;'a'
  5545  00F88B  78                 	db	120	;'x'
  5546  00F88C  69                 	db	105	;'i'
  5547  00F88D  6D                 	db	109	;'m'
  5548  00F88E  75                 	db	117	;'u'
  5549  00F88F  6D                 	db	109	;'m'
  5550  00F890  20                 	db	32
  5551  00F891  72                 	db	114	;'r'
  5552  00F892  65                 	db	101	;'e'
  5553  00F893  63                 	db	99	;'c'
  5554  00F894  6F                 	db	111	;'o'
  5555  00F895  72                 	db	114	;'r'
  5556  00F896  64                 	db	100	;'d'
  5557  00F897  65                 	db	101	;'e'
  5558  00F898  64                 	db	100	;'d'
  5559  00F899  20                 	db	32
  5560  00F89A  6F                 	db	111	;'o'
  5561  00F89B  75                 	db	117	;'u'
  5562  00F89C  74                 	db	116	;'t'
  5563  00F89D  70                 	db	112	;'p'
  5564  00F89E  75                 	db	117	;'u'
  5565  00F89F  74                 	db	116	;'t'
  5566  00F8A0  20                 	db	32
  5567  00F8A1  50                 	db	80	;'P'
  5568  00F8A2  6F                 	db	111	;'o'
  5569  00F8A3  77                 	db	119	;'w'
  5570  00F8A4  65                 	db	101	;'e'
  5571  00F8A5  72                 	db	114	;'r'
  5572  00F8A6  20                 	db	32
  5573  00F8A7  69                 	db	105	;'i'
  5574  00F8A8  73                 	db	115	;'s'
  5575  00F8A9  20                 	db	32
  5576  00F8AA  25                 	db	37
  5577  00F8AB  2E                 	db	46
  5578  00F8AC  33                 	db	51	;'3'
  5579  00F8AD  66                 	db	102	;'f'
  5580  00F8AE  20                 	db	32
  5581  00F8AF  57                 	db	87	;'W'
  5582  00F8B0  61                 	db	97	;'a'
  5583  00F8B1  74                 	db	116	;'t'
  5584  00F8B2  74                 	db	116	;'t'
  5585  00F8B3  73                 	db	115	;'s'
  5586  00F8B4  0A                 	db	10
  5587  00F8B5  0D                 	db	13
  5588  00F8B6  00                 	db	0
  5589  00F8B7                     STR_129:
  5590  00F8B7  4D                 	db	77	;'M'
  5591  00F8B8  61                 	db	97	;'a'
  5592  00F8B9  78                 	db	120	;'x'
  5593  00F8BA  69                 	db	105	;'i'
  5594  00F8BB  6D                 	db	109	;'m'
  5595  00F8BC  75                 	db	117	;'u'
  5596  00F8BD  6D                 	db	109	;'m'
  5597  00F8BE  20                 	db	32
  5598  00F8BF  72                 	db	114	;'r'
  5599  00F8C0  65                 	db	101	;'e'
  5600  00F8C1  63                 	db	99	;'c'
  5601  00F8C2  6F                 	db	111	;'o'
  5602  00F8C3  72                 	db	114	;'r'
  5603  00F8C4  64                 	db	100	;'d'
  5604  00F8C5  65                 	db	101	;'e'
  5605  00F8C6  64                 	db	100	;'d'
  5606  00F8C7  20                 	db	32
  5607  00F8C8  44                 	db	68	;'D'
  5608  00F8C9  69                 	db	105	;'i'
  5609  00F8CA  65                 	db	101	;'e'
  5610  00F8CB  20                 	db	32
  5611  00F8CC  54                 	db	84	;'T'
  5612  00F8CD  65                 	db	101	;'e'
  5613  00F8CE  6D                 	db	109	;'m'
  5614  00F8CF  70                 	db	112	;'p'
  5615  00F8D0  65                 	db	101	;'e'
  5616  00F8D1  72                 	db	114	;'r'
  5617  00F8D2  61                 	db	97	;'a'
  5618  00F8D3  74                 	db	116	;'t'
  5619  00F8D4  75                 	db	117	;'u'
  5620  00F8D5  72                 	db	114	;'r'
  5621  00F8D6  65                 	db	101	;'e'
  5622  00F8D7  20                 	db	32
  5623  00F8D8  69                 	db	105	;'i'
  5624  00F8D9  73                 	db	115	;'s'
  5625  00F8DA  20                 	db	32
  5626  00F8DB  25                 	db	37
  5627  00F8DC  2E                 	db	46
  5628  00F8DD  33                 	db	51	;'3'
  5629  00F8DE  66                 	db	102	;'f'
  5630  00F8DF  20                 	db	32
  5631  00F8E0  43                 	db	67	;'C'
  5632  00F8E1  0A                 	db	10
  5633  00F8E2  0D                 	db	13
  5634  00F8E3  00                 	db	0
  5635  00F8E4                     STR_75:
  5636  00F8E4  56                 	db	86	;'V'
  5637  00F8E5  43                 	db	67	;'C'
  5638  00F8E6  43                 	db	67	;'C'
  5639  00F8E7  20                 	db	32
  5640  00F8E8  4F                 	db	79	;'O'
  5641  00F8E9  76                 	db	118	;'v'
  5642  00F8EA  65                 	db	101	;'e'
  5643  00F8EB  72                 	db	114	;'r'
  5644  00F8EC  76                 	db	118	;'v'
  5645  00F8ED  6F                 	db	111	;'o'
  5646  00F8EE  6C                 	db	108	;'l'
  5647  00F8EF  74                 	db	116	;'t'
  5648  00F8F0  61                 	db	97	;'a'
  5649  00F8F1  67                 	db	103	;'g'
  5650  00F8F2  65                 	db	101	;'e'
  5651  00F8F3  20                 	db	32
  5652  00F8F4  63                 	db	99	;'c'
  5653  00F8F5  6F                 	db	111	;'o'
  5654  00F8F6  6E                 	db	110	;'n'
  5655  00F8F7  64                 	db	100	;'d'
  5656  00F8F8  69                 	db	105	;'i'
  5657  00F8F9  74                 	db	116	;'t'
  5658  00F8FA  69                 	db	105	;'i'
  5659  00F8FB  6F                 	db	111	;'o'
  5660  00F8FC  6E                 	db	110	;'n'
  5661  00F8FD  20                 	db	32
  5662  00F8FE  68                 	db	104	;'h'
  5663  00F8FF  61                 	db	97	;'a'
  5664  00F900  73                 	db	115	;'s'
  5665  00F901  20                 	db	32
  5666  00F902  6E                 	db	110	;'n'
  5667  00F903  6F                 	db	111	;'o'
  5668  00F904  74                 	db	116	;'t'
  5669  00F905  20                 	db	32
  5670  00F906  6F                 	db	111	;'o'
  5671  00F907  63                 	db	99	;'c'
  5672  00F908  63                 	db	99	;'c'
  5673  00F909  75                 	db	117	;'u'
  5674  00F90A  72                 	db	114	;'r'
  5675  00F90B  72                 	db	114	;'r'
  5676  00F90C  65                 	db	101	;'e'
  5677  00F90D  64                 	db	100	;'d'
  5678  00F90E  0A                 	db	10
  5679  00F90F  0D                 	db	13
  5680  00F910  00                 	db	0
  5681  00F911                     STR_99:
  5682  00F911  4C                 	db	76	;'L'
  5683  00F912  6F                 	db	111	;'o'
  5684  00F913  61                 	db	97	;'a'
  5685  00F914  64                 	db	100	;'d'
  5686  00F915  20                 	db	32
  5687  00F916  68                 	db	104	;'h'
  5688  00F917  61                 	db	97	;'a'
  5689  00F918  73                 	db	115	;'s'
  5690  00F919  20                 	db	32
  5691  00F91A  62                 	db	98	;'b'
  5692  00F91B  65                 	db	101	;'e'
  5693  00F91C  65                 	db	101	;'e'
  5694  00F91D  6E                 	db	110	;'n'
  5695  00F91E  20                 	db	32
  5696  00F91F  65                 	db	101	;'e'
  5697  00F920  6E                 	db	110	;'n'
  5698  00F921  61                 	db	97	;'a'
  5699  00F922  62                 	db	98	;'b'
  5700  00F923  6C                 	db	108	;'l'
  5701  00F924  65                 	db	101	;'e'
  5702  00F925  64                 	db	100	;'d'
  5703  00F926  2C                 	db	44
  5704  00F927  20                 	db	32
  5705  00F928  64                 	db	100	;'d'
  5706  00F929  69                 	db	105	;'i'
  5707  00F92A  6D                 	db	109	;'m'
  5708  00F92B  6D                 	db	109	;'m'
  5709  00F92C  69                 	db	105	;'i'
  5710  00F92D  6E                 	db	110	;'n'
  5711  00F92E  67                 	db	103	;'g'
  5712  00F92F  20                 	db	32
  5713  00F930  64                 	db	100	;'d'
  5714  00F931  69                 	db	105	;'i'
  5715  00F932  73                 	db	115	;'s'
  5716  00F933  61                 	db	97	;'a'
  5717  00F934  62                 	db	98	;'b'
  5718  00F935  6C                 	db	108	;'l'
  5719  00F936  65                 	db	101	;'e'
  5720  00F937  64                 	db	100	;'d'
  5721  00F938  0A                 	db	10
  5722  00F939  0D                 	db	13
  5723  00F93A  00                 	db	0
  5724  00F93B                     STR_106:
  5725  00F93B  4C                 	db	76	;'L'
  5726  00F93C  6F                 	db	111	;'o'
  5727  00F93D  61                 	db	97	;'a'
  5728  00F93E  64                 	db	100	;'d'
  5729  00F93F  20                 	db	32
  5730  00F940  61                 	db	97	;'a'
  5731  00F941  6E                 	db	110	;'n'
  5732  00F942  64                 	db	100	;'d'
  5733  00F943  20                 	db	32
  5734  00F944  64                 	db	100	;'d'
  5735  00F945  69                 	db	105	;'i'
  5736  00F946  6D                 	db	109	;'m'
  5737  00F947  6D                 	db	109	;'m'
  5738  00F948  69                 	db	105	;'i'
  5739  00F949  6E                 	db	110	;'n'
  5740  00F94A  67                 	db	103	;'g'
  5741  00F94B  20                 	db	32
  5742  00F94C  61                 	db	97	;'a'
  5743  00F94D  72                 	db	114	;'r'
  5744  00F94E  65                 	db	101	;'e'
  5745  00F94F  20                 	db	32
  5746  00F950  63                 	db	99	;'c'
  5747  00F951  75                 	db	117	;'u'
  5748  00F952  72                 	db	114	;'r'
  5749  00F953  72                 	db	114	;'r'
  5750  00F954  65                 	db	101	;'e'
  5751  00F955  6E                 	db	110	;'n'
  5752  00F956  74                 	db	116	;'t'
  5753  00F957  6C                 	db	108	;'l'
  5754  00F958  79                 	db	121	;'y'
  5755  00F959  20                 	db	32
  5756  00F95A  64                 	db	100	;'d'
  5757  00F95B  69                 	db	105	;'i'
  5758  00F95C  73                 	db	115	;'s'
  5759  00F95D  61                 	db	97	;'a'
  5760  00F95E  62                 	db	98	;'b'
  5761  00F95F  6C                 	db	108	;'l'
  5762  00F960  65                 	db	101	;'e'
  5763  00F961  64                 	db	100	;'d'
  5764  00F962  0A                 	db	10
  5765  00F963  0D                 	db	13
  5766  00F964  00                 	db	0
  5767  00F965                     STR_157:
  5768  00F965  57                 	db	87	;'W'
  5769  00F966  69                 	db	105	;'i'
  5770  00F967  6E                 	db	110	;'n'
  5771  00F968  64                 	db	100	;'d'
  5772  00F969  6F                 	db	111	;'o'
  5773  00F96A  77                 	db	119	;'w'
  5774  00F96B  65                 	db	101	;'e'
  5775  00F96C  64                 	db	100	;'d'
  5776  00F96D  20                 	db	32
  5777  00F96E  57                 	db	87	;'W'
  5778  00F96F  61                 	db	97	;'a'
  5779  00F970  74                 	db	116	;'t'
  5780  00F971  63                 	db	99	;'c'
  5781  00F972  68                 	db	104	;'h'
  5782  00F973  20                 	db	32
  5783  00F974  44                 	db	68	;'D'
  5784  00F975  6F                 	db	111	;'o'
  5785  00F976  67                 	db	103	;'g'
  5786  00F977  20                 	db	32
  5787  00F978  54                 	db	84	;'T'
  5788  00F979  69                 	db	105	;'i'
  5789  00F97A  6D                 	db	109	;'m'
  5790  00F97B  65                 	db	101	;'e'
  5791  00F97C  72                 	db	114	;'r'
  5792  00F97D  20                 	db	32
  5793  00F97E  56                 	db	86	;'V'
  5794  00F97F  69                 	db	105	;'i'
  5795  00F980  6F                 	db	111	;'o'
  5796  00F981  6C                 	db	108	;'l'
  5797  00F982  61                 	db	97	;'a'
  5798  00F983  74                 	db	116	;'t'
  5799  00F984  69                 	db	105	;'i'
  5800  00F985  6F                 	db	111	;'o'
  5801  00F986  6E                 	db	110	;'n'
  5802  00F987  20                 	db	32
  5803  00F988  52                 	db	82	;'R'
  5804  00F989  65                 	db	101	;'e'
  5805  00F98A  73                 	db	115	;'s'
  5806  00F98B  65                 	db	101	;'e'
  5807  00F98C  74                 	db	116	;'t'
  5808  00F98D  00                 	db	0
  5809  00F98E                     STR_97:
  5810  00F98E  54                 	db	84	;'T'
  5811  00F98F  52                 	db	82	;'R'
  5812  00F990  49                 	db	73	;'I'
  5813  00F991  41                 	db	65	;'A'
  5814  00F992  43                 	db	67	;'C'
  5815  00F993  20                 	db	32
  5816  00F994  6F                 	db	111	;'o'
  5817  00F995  75                 	db	117	;'u'
  5818  00F996  74                 	db	116	;'t'
  5819  00F997  70                 	db	112	;'p'
  5820  00F998  75                 	db	117	;'u'
  5821  00F999  74                 	db	116	;'t'
  5822  00F99A  20                 	db	32
  5823  00F99B  64                 	db	100	;'d'
  5824  00F99C  69                 	db	105	;'i'
  5825  00F99D  6D                 	db	109	;'m'
  5826  00F99E  6D                 	db	109	;'m'
  5827  00F99F  69                 	db	105	;'i'
  5828  00F9A0  6E                 	db	110	;'n'
  5829  00F9A1  67                 	db	103	;'g'
  5830  00F9A2  20                 	db	32
  5831  00F9A3  68                 	db	104	;'h'
  5832  00F9A4  61                 	db	97	;'a'
  5833  00F9A5  73                 	db	115	;'s'
  5834  00F9A6  20                 	db	32
  5835  00F9A7  62                 	db	98	;'b'
  5836  00F9A8  65                 	db	101	;'e'
  5837  00F9A9  65                 	db	101	;'e'
  5838  00F9AA  6E                 	db	110	;'n'
  5839  00F9AB  20                 	db	32
  5840  00F9AC  64                 	db	100	;'d'
  5841  00F9AD  69                 	db	105	;'i'
  5842  00F9AE  73                 	db	115	;'s'
  5843  00F9AF  61                 	db	97	;'a'
  5844  00F9B0  62                 	db	98	;'b'
  5845  00F9B1  6C                 	db	108	;'l'
  5846  00F9B2  65                 	db	101	;'e'
  5847  00F9B3  64                 	db	100	;'d'
  5848  00F9B4  0A                 	db	10
  5849  00F9B5  0D                 	db	13
  5850  00F9B6  00                 	db	0
  5851  00F9B7                     STR_95:
  5852  00F9B7  54                 	db	84	;'T'
  5853  00F9B8  52                 	db	82	;'R'
  5854  00F9B9  49                 	db	73	;'I'
  5855  00F9BA  41                 	db	65	;'A'
  5856  00F9BB  43                 	db	67	;'C'
  5857  00F9BC  20                 	db	32
  5858  00F9BD  6F                 	db	111	;'o'
  5859  00F9BE  75                 	db	117	;'u'
  5860  00F9BF  74                 	db	116	;'t'
  5861  00F9C0  70                 	db	112	;'p'
  5862  00F9C1  75                 	db	117	;'u'
  5863  00F9C2  74                 	db	116	;'t'
  5864  00F9C3  20                 	db	32
  5865  00F9C4  64                 	db	100	;'d'
  5866  00F9C5  69                 	db	105	;'i'
  5867  00F9C6  6D                 	db	109	;'m'
  5868  00F9C7  6D                 	db	109	;'m'
  5869  00F9C8  69                 	db	105	;'i'
  5870  00F9C9  6E                 	db	110	;'n'
  5871  00F9CA  67                 	db	103	;'g'
  5872  00F9CB  20                 	db	32
  5873  00F9CC  68                 	db	104	;'h'
  5874  00F9CD  61                 	db	97	;'a'
  5875  00F9CE  73                 	db	115	;'s'
  5876  00F9CF  20                 	db	32
  5877  00F9D0  62                 	db	98	;'b'
  5878  00F9D1  65                 	db	101	;'e'
  5879  00F9D2  65                 	db	101	;'e'
  5880  00F9D3  6E                 	db	110	;'n'
  5881  00F9D4  20                 	db	32
  5882  00F9D5  65                 	db	101	;'e'
  5883  00F9D6  6E                 	db	110	;'n'
  5884  00F9D7  61                 	db	97	;'a'
  5885  00F9D8  62                 	db	98	;'b'
  5886  00F9D9  6C                 	db	108	;'l'
  5887  00F9DA  65                 	db	101	;'e'
  5888  00F9DB  64                 	db	100	;'d'
  5889  00F9DC  0A                 	db	10
  5890  00F9DD  0D                 	db	13
  5891  00F9DE  00                 	db	0
  5892  00F9DF                     STR_146:
  5893  00F9DF  4D                 	db	77	;'M'
  5894  00F9E0  65                 	db	101	;'e'
  5895  00F9E1  61                 	db	97	;'a'
  5896  00F9E2  73                 	db	115	;'s'
  5897  00F9E3  75                 	db	117	;'u'
  5898  00F9E4  72                 	db	114	;'r'
  5899  00F9E5  65                 	db	101	;'e'
  5900  00F9E6  6D                 	db	109	;'m'
  5901  00F9E7  65                 	db	101	;'e'
  5902  00F9E8  6E                 	db	110	;'n'
  5903  00F9E9  74                 	db	116	;'t'
  5904  00F9EA  20                 	db	32
  5905  00F9EB  72                 	db	114	;'r'
  5906  00F9EC  65                 	db	101	;'e'
  5907  00F9ED  73                 	db	115	;'s'
  5908  00F9EE  70                 	db	112	;'p'
  5909  00F9EF  6F                 	db	111	;'o'
  5910  00F9F0  6E                 	db	110	;'n'
  5911  00F9F1  73                 	db	115	;'s'
  5912  00F9F2  65                 	db	101	;'e'
  5913  00F9F3  73                 	db	115	;'s'
  5914  00F9F4  20                 	db	32
  5915  00F9F5  61                 	db	97	;'a'
  5916  00F9F6  70                 	db	112	;'p'
  5917  00F9F7  70                 	db	112	;'p'
  5918  00F9F8  65                 	db	101	;'e'
  5919  00F9F9  61                 	db	97	;'a'
  5920  00F9FA  72                 	db	114	;'r'
  5921  00F9FB  20                 	db	32
  5922  00F9FC  69                 	db	105	;'i'
  5923  00F9FD  6E                 	db	110	;'n'
  5924  00F9FE  20                 	db	32
  5925  00F9FF  63                 	db	99	;'c'
  5926  00FA00  79                 	db	121	;'y'
  5927  00FA01  61                 	db	97	;'a'
  5928  00FA02  6E                 	db	110	;'n'
  5929  00FA03  0A                 	db	10
  5930  00FA04  0D                 	db	13
  5931  00FA05  00                 	db	0
  5932  00FA06                     STR_85:
  5933  00FA06  41                 	db	65	;'A'
  5934  00FA07  56                 	db	86	;'V'
  5935  00FA08  53                 	db	83	;'S'
  5936  00FA09  53                 	db	83	;'S'
  5937  00FA0A  20                 	db	32
  5938  00FA0B  6D                 	db	109	;'m'
  5939  00FA0C  65                 	db	101	;'e'
  5940  00FA0D  61                 	db	97	;'a'
  5941  00FA0E  73                 	db	115	;'s'
  5942  00FA0F  75                 	db	117	;'u'
  5943  00FA10  72                 	db	114	;'r'
  5944  00FA11  65                 	db	101	;'e'
  5945  00FA12  64                 	db	100	;'d'
  5946  00FA13  20                 	db	32
  5947  00FA14  61                 	db	97	;'a'
  5948  00FA15  73                 	db	115	;'s'
  5949  00FA16  20                 	db	32
  5950  00FA17  25                 	db	37
  5951  00FA18  2E                 	db	46
  5952  00FA19  33                 	db	51	;'3'
  5953  00FA1A  66                 	db	102	;'f'
  5954  00FA1B  20                 	db	32
  5955  00FA1C  56                 	db	86	;'V'
  5956  00FA1D  6F                 	db	111	;'o'
  5957  00FA1E  6C                 	db	108	;'l'
  5958  00FA1F  74                 	db	116	;'t'
  5959  00FA20  73                 	db	115	;'s'
  5960  00FA21  20                 	db	32
  5961  00FA22  62                 	db	98	;'b'
  5962  00FA23  79                 	db	121	;'y'
  5963  00FA24  20                 	db	32
  5964  00FA25  41                 	db	65	;'A'
  5965  00FA26  44                 	db	68	;'D'
  5966  00FA27  43                 	db	67	;'C'
  5967  00FA28  0A                 	db	10
  5968  00FA29  0D                 	db	13
  5969  00FA2A  00                 	db	0
  5970  00FA2B                     STR_77:
  5971  00FA2B  2B                 	db	43
  5972  00FA2C  33                 	db	51	;'3'
  5973  00FA2D  2E                 	db	46
  5974  00FA2E  33                 	db	51	;'3'
  5975  00FA2F  56                 	db	86	;'V'
  5976  00FA30  20                 	db	32
  5977  00FA31  72                 	db	114	;'r'
  5978  00FA32  61                 	db	97	;'a'
  5979  00FA33  69                 	db	105	;'i'
  5980  00FA34  6C                 	db	108	;'l'
  5981  00FA35  20                 	db	32
  5982  00FA36  6D                 	db	109	;'m'
  5983  00FA37  65                 	db	101	;'e'
  5984  00FA38  61                 	db	97	;'a'
  5985  00FA39  73                 	db	115	;'s'
  5986  00FA3A  75                 	db	117	;'u'
  5987  00FA3B  72                 	db	114	;'r'
  5988  00FA3C  65                 	db	101	;'e'
  5989  00FA3D  64                 	db	100	;'d'
  5990  00FA3E  20                 	db	32
  5991  00FA3F  61                 	db	97	;'a'
  5992  00FA40  73                 	db	115	;'s'
  5993  00FA41  20                 	db	32
  5994  00FA42  2B                 	db	43
  5995  00FA43  25                 	db	37
  5996  00FA44  2E                 	db	46
  5997  00FA45  33                 	db	51	;'3'
  5998  00FA46  66                 	db	102	;'f'
  5999  00FA47  20                 	db	32
  6000  00FA48  56                 	db	86	;'V'
  6001  00FA49  6F                 	db	111	;'o'
  6002  00FA4A  6C                 	db	108	;'l'
  6003  00FA4B  74                 	db	116	;'t'
  6004  00FA4C  73                 	db	115	;'s'
  6005  00FA4D  0A                 	db	10
  6006  00FA4E  0D                 	db	13
  6007  00FA4F  00                 	db	0
  6008  00FA50                     STR_113:
  6009  00FA50  44                 	db	68	;'D'
  6010  00FA51  69                 	db	105	;'i'
  6011  00FA52  6D                 	db	109	;'m'
  6012  00FA53  6D                 	db	109	;'m'
  6013  00FA54  69                 	db	105	;'i'
  6014  00FA55  6E                 	db	110	;'n'
  6015  00FA56  67                 	db	103	;'g'
  6016  00FA57  20                 	db	32
  6017  00FA58  68                 	db	104	;'h'
  6018  00FA59  61                 	db	97	;'a'
  6019  00FA5A  73                 	db	115	;'s'
  6020  00FA5B  20                 	db	32
  6021  00FA5C  62                 	db	98	;'b'
  6022  00FA5D  65                 	db	101	;'e'
  6023  00FA5E  65                 	db	101	;'e'
  6024  00FA5F  6E                 	db	110	;'n'
  6025  00FA60  20                 	db	32
  6026  00FA61  73                 	db	115	;'s'
  6027  00FA62  65                 	db	101	;'e'
  6028  00FA63  74                 	db	116	;'t'
  6029  00FA64  20                 	db	32
  6030  00FA65  74                 	db	116	;'t'
  6031  00FA66  6F                 	db	111	;'o'
  6032  00FA67  20                 	db	32
  6033  00FA68  25                 	db	37
  6034  00FA69  64                 	db	100	;'d'
  6035  00FA6A  20                 	db	32
  6036  00FA6B  70                 	db	112	;'p'
  6037  00FA6C  65                 	db	101	;'e'
  6038  00FA6D  72                 	db	114	;'r'
  6039  00FA6E  63                 	db	99	;'c'
  6040  00FA6F  65                 	db	101	;'e'
  6041  00FA70  6E                 	db	110	;'n'
  6042  00FA71  74                 	db	116	;'t'
  6043  00FA72  0A                 	db	10
  6044  00FA73  0D                 	db	13
  6045  00FA74  00                 	db	0
  6046  00FA75                     STR_81:
  6047  00FA75  44                 	db	68	;'D'
  6048  00FA76  69                 	db	105	;'i'
  6049  00FA77  65                 	db	101	;'e'
  6050  00FA78  20                 	db	32
  6051  00FA79  54                 	db	84	;'T'
  6052  00FA7A  65                 	db	101	;'e'
  6053  00FA7B  6D                 	db	109	;'m'
  6054  00FA7C  70                 	db	112	;'p'
  6055  00FA7D  65                 	db	101	;'e'
  6056  00FA7E  72                 	db	114	;'r'
  6057  00FA7F  61                 	db	97	;'a'
  6058  00FA80  74                 	db	116	;'t'
  6059  00FA81  75                 	db	117	;'u'
  6060  00FA82  72                 	db	114	;'r'
  6061  00FA83  65                 	db	101	;'e'
  6062  00FA84  20                 	db	32
  6063  00FA85  6D                 	db	109	;'m'
  6064  00FA86  65                 	db	101	;'e'
  6065  00FA87  61                 	db	97	;'a'
  6066  00FA88  73                 	db	115	;'s'
  6067  00FA89  75                 	db	117	;'u'
  6068  00FA8A  72                 	db	114	;'r'
  6069  00FA8B  65                 	db	101	;'e'
  6070  00FA8C  64                 	db	100	;'d'
  6071  00FA8D  20                 	db	32
  6072  00FA8E  61                 	db	97	;'a'
  6073  00FA8F  73                 	db	115	;'s'
  6074  00FA90  20                 	db	32
  6075  00FA91  25                 	db	37
  6076  00FA92  2E                 	db	46
  6077  00FA93  33                 	db	51	;'3'
  6078  00FA94  66                 	db	102	;'f'
  6079  00FA95  43                 	db	67	;'C'
  6080  00FA96  0A                 	db	10
  6081  00FA97  0D                 	db	13
  6082  00FA98  00                 	db	0
  6083  00FA99                     STR_79:
  6084  00FA99  2B                 	db	43
  6085  00FA9A  31                 	db	49	;'1'
  6086  00FA9B  32                 	db	50	;'2'
  6087  00FA9C  56                 	db	86	;'V'
  6088  00FA9D  20                 	db	32
  6089  00FA9E  72                 	db	114	;'r'
  6090  00FA9F  61                 	db	97	;'a'
  6091  00FAA0  69                 	db	105	;'i'
  6092  00FAA1  6C                 	db	108	;'l'
  6093  00FAA2  20                 	db	32
  6094  00FAA3  6D                 	db	109	;'m'
  6095  00FAA4  65                 	db	101	;'e'
  6096  00FAA5  61                 	db	97	;'a'
  6097  00FAA6  73                 	db	115	;'s'
  6098  00FAA7  75                 	db	117	;'u'
  6099  00FAA8  72                 	db	114	;'r'
  6100  00FAA9  65                 	db	101	;'e'
  6101  00FAAA  64                 	db	100	;'d'
  6102  00FAAB  20                 	db	32
  6103  00FAAC  61                 	db	97	;'a'
  6104  00FAAD  73                 	db	115	;'s'
  6105  00FAAE  20                 	db	32
  6106  00FAAF  2B                 	db	43
  6107  00FAB0  25                 	db	37
  6108  00FAB1  2E                 	db	46
  6109  00FAB2  33                 	db	51	;'3'
  6110  00FAB3  66                 	db	102	;'f'
  6111  00FAB4  20                 	db	32
  6112  00FAB5  56                 	db	86	;'V'
  6113  00FAB6  6F                 	db	111	;'o'
  6114  00FAB7  6C                 	db	108	;'l'
  6115  00FAB8  74                 	db	116	;'t'
  6116  00FAB9  73                 	db	115	;'s'
  6117  00FABA  0A                 	db	10
  6118  00FABB  0D                 	db	13
  6119  00FABC  00                 	db	0
  6120  00FABD                     STR_89:
  6121  00FABD  52                 	db	82	;'R'
  6122  00FABE  4D                 	db	77	;'M'
  6123  00FABF  53                 	db	83	;'S'
  6124  00FAC0  20                 	db	32
  6125  00FAC1  4F                 	db	79	;'O'
  6126  00FAC2  75                 	db	117	;'u'
  6127  00FAC3  74                 	db	116	;'t'
  6128  00FAC4  70                 	db	112	;'p'
  6129  00FAC5  75                 	db	117	;'u'
  6130  00FAC6  74                 	db	116	;'t'
  6131  00FAC7  20                 	db	32
  6132  00FAC8  43                 	db	67	;'C'
  6133  00FAC9  75                 	db	117	;'u'
  6134  00FACA  72                 	db	114	;'r'
  6135  00FACB  72                 	db	114	;'r'
  6136  00FACC  65                 	db	101	;'e'
  6137  00FACD  6E                 	db	110	;'n'
  6138  00FACE  74                 	db	116	;'t'
  6139  00FACF  20                 	db	32
  6140  00FAD0  69                 	db	105	;'i'
  6141  00FAD1  73                 	db	115	;'s'
  6142  00FAD2  20                 	db	32
  6143  00FAD3  25                 	db	37
  6144  00FAD4  2E                 	db	46
  6145  00FAD5  33                 	db	51	;'3'
  6146  00FAD6  66                 	db	102	;'f'
  6147  00FAD7  20                 	db	32
  6148  00FAD8  41                 	db	65	;'A'
  6149  00FAD9  72                 	db	114	;'r'
  6150  00FADA  6D                 	db	109	;'m'
  6151  00FADB  73                 	db	115	;'s'
  6152  00FADC  0A                 	db	10
  6153  00FADD  0D                 	db	13
  6154  00FADE  00                 	db	0
  6155  00FADF                     STR_91:
  6156  00FADF  52                 	db	82	;'R'
  6157  00FAE0  4D                 	db	77	;'M'
  6158  00FAE1  53                 	db	83	;'S'
  6159  00FAE2  20                 	db	32
  6160  00FAE3  4F                 	db	79	;'O'
  6161  00FAE4  75                 	db	117	;'u'
  6162  00FAE5  74                 	db	116	;'t'
  6163  00FAE6  70                 	db	112	;'p'
  6164  00FAE7  75                 	db	117	;'u'
  6165  00FAE8  74                 	db	116	;'t'
  6166  00FAE9  20                 	db	32
  6167  00FAEA  56                 	db	86	;'V'
  6168  00FAEB  6F                 	db	111	;'o'
  6169  00FAEC  6C                 	db	108	;'l'
  6170  00FAED  74                 	db	116	;'t'
  6171  00FAEE  61                 	db	97	;'a'
  6172  00FAEF  67                 	db	103	;'g'
  6173  00FAF0  65                 	db	101	;'e'
  6174  00FAF1  20                 	db	32
  6175  00FAF2  69                 	db	105	;'i'
  6176  00FAF3  73                 	db	115	;'s'
  6177  00FAF4  20                 	db	32
  6178  00FAF5  25                 	db	37
  6179  00FAF6  2E                 	db	46
  6180  00FAF7  33                 	db	51	;'3'
  6181  00FAF8  66                 	db	102	;'f'
  6182  00FAF9  20                 	db	32
  6183  00FAFA  56                 	db	86	;'V'
  6184  00FAFB  72                 	db	114	;'r'
  6185  00FAFC  6D                 	db	109	;'m'
  6186  00FAFD  73                 	db	115	;'s'
  6187  00FAFE  0A                 	db	10
  6188  00FAFF  0D                 	db	13
  6189  00FB00  00                 	db	0
  6190  00FB01                     STR_138:
  6191  00FB01  48                 	db	72	;'H'
  6192  00FB02  65                 	db	101	;'e'
  6193  00FB03  6C                 	db	108	;'l'
  6194  00FB04  70                 	db	112	;'p'
  6195  00FB05  20                 	db	32
  6196  00FB06  50                 	db	80	;'P'
  6197  00FB07  72                 	db	114	;'r'
  6198  00FB08  69                 	db	105	;'i'
  6199  00FB09  6D                 	db	109	;'m'
  6200  00FB0A  61                 	db	97	;'a'
  6201  00FB0B  72                 	db	114	;'r'
  6202  00FB0C  79                 	db	121	;'y'
  6203  00FB0D  20                 	db	32
  6204  00FB0E  4D                 	db	77	;'M'
  6205  00FB0F  65                 	db	101	;'e'
  6206  00FB10  61                 	db	97	;'a'
  6207  00FB11  73                 	db	115	;'s'
  6208  00FB12  75                 	db	117	;'u'
  6209  00FB13  72                 	db	114	;'r'
  6210  00FB14  65                 	db	101	;'e'
  6211  00FB15  6D                 	db	109	;'m'
  6212  00FB16  65                 	db	101	;'e'
  6213  00FB17  6E                 	db	110	;'n'
  6214  00FB18  74                 	db	116	;'t'
  6215  00FB19  20                 	db	32
  6216  00FB1A  43                 	db	67	;'C'
  6217  00FB1B  6F                 	db	111	;'o'
  6218  00FB1C  6D                 	db	109	;'m'
  6219  00FB1D  6D                 	db	109	;'m'
  6220  00FB1E  61                 	db	97	;'a'
  6221  00FB1F  6E                 	db	110	;'n'
  6222  00FB20  64                 	db	100	;'d'
  6223  00FB21  73                 	db	115	;'s'
  6224  00FB22  00                 	db	0
  6225  00FB23                     STR_133:
  6226  00FB23  4D                 	db	77	;'M'
  6227  00FB24  61                 	db	97	;'a'
  6228  00FB25  78                 	db	120	;'x'
  6229  00FB26  69                 	db	105	;'i'
  6230  00FB27  6D                 	db	109	;'m'
  6231  00FB28  75                 	db	117	;'u'
  6232  00FB29  6D                 	db	109	;'m'
  6233  00FB2A  20                 	db	32
  6234  00FB2B  72                 	db	114	;'r'
  6235  00FB2C  65                 	db	101	;'e'
  6236  00FB2D  63                 	db	99	;'c'
  6237  00FB2E  6F                 	db	111	;'o'
  6238  00FB2F  72                 	db	114	;'r'
  6239  00FB30  64                 	db	100	;'d'
  6240  00FB31  65                 	db	101	;'e'
  6241  00FB32  64                 	db	100	;'d'
  6242  00FB33  20                 	db	32
  6243  00FB34  76                 	db	118	;'v'
  6244  00FB35  61                 	db	97	;'a'
  6245  00FB36  6C                 	db	108	;'l'
  6246  00FB37  75                 	db	117	;'u'
  6247  00FB38  65                 	db	101	;'e'
  6248  00FB39  73                 	db	115	;'s'
  6249  00FB3A  20                 	db	32
  6250  00FB3B  65                 	db	101	;'e'
  6251  00FB3C  72                 	db	114	;'r'
  6252  00FB3D  61                 	db	97	;'a'
  6253  00FB3E  73                 	db	115	;'s'
  6254  00FB3F  65                 	db	101	;'e'
  6255  00FB40  64                 	db	100	;'d'
  6256  00FB41  0A                 	db	10
  6257  00FB42  0D                 	db	13
  6258  00FB43  00                 	db	0
  6259  00FB44                     STR_136:
  6260  00FB44  48                 	db	72	;'H'
  6261  00FB45  65                 	db	101	;'e'
  6262  00FB46  6C                 	db	108	;'l'
  6263  00FB47  70                 	db	112	;'p'
  6264  00FB48  20                 	db	32
  6265  00FB49  44                 	db	68	;'D'
  6266  00FB4A  65                 	db	101	;'e'
  6267  00FB4B  76                 	db	118	;'v'
  6268  00FB4C  69                 	db	105	;'i'
  6269  00FB4D  63                 	db	99	;'c'
  6270  00FB4E  65                 	db	101	;'e'
  6271  00FB4F  20                 	db	32
  6272  00FB50  4D                 	db	77	;'M'
  6273  00FB51  65                 	db	101	;'e'
  6274  00FB52  61                 	db	97	;'a'
  6275  00FB53  73                 	db	115	;'s'
  6276  00FB54  75                 	db	117	;'u'
  6277  00FB55  72                 	db	114	;'r'
  6278  00FB56  65                 	db	101	;'e'
  6279  00FB57  6D                 	db	109	;'m'
  6280  00FB58  65                 	db	101	;'e'
  6281  00FB59  6E                 	db	110	;'n'
  6282  00FB5A  74                 	db	116	;'t'
  6283  00FB5B  20                 	db	32
  6284  00FB5C  43                 	db	67	;'C'
  6285  00FB5D  6F                 	db	111	;'o'
  6286  00FB5E  6D                 	db	109	;'m'
  6287  00FB5F  6D                 	db	109	;'m'
  6288  00FB60  61                 	db	97	;'a'
  6289  00FB61  6E                 	db	110	;'n'
  6290  00FB62  64                 	db	100	;'d'
  6291  00FB63  73                 	db	115	;'s'
  6292  00FB64  00                 	db	0
  6293  00FB65                     STR_87:
  6294  00FB65  4D                 	db	77	;'M'
  6295  00FB66  65                 	db	101	;'e'
  6296  00FB67  61                 	db	97	;'a'
  6297  00FB68  73                 	db	115	;'s'
  6298  00FB69  75                 	db	117	;'u'
  6299  00FB6A  72                 	db	114	;'r'
  6300  00FB6B  65                 	db	101	;'e'
  6301  00FB6C  64                 	db	100	;'d'
  6302  00FB6D  20                 	db	32
  6303  00FB6E  43                 	db	67	;'C'
  6304  00FB6F  75                 	db	117	;'u'
  6305  00FB70  72                 	db	114	;'r'
  6306  00FB71  72                 	db	114	;'r'
  6307  00FB72  65                 	db	101	;'e'
  6308  00FB73  6E                 	db	110	;'n'
  6309  00FB74  74                 	db	116	;'t'
  6310  00FB75  20                 	db	32
  6311  00FB76  69                 	db	105	;'i'
  6312  00FB77  73                 	db	115	;'s'
  6313  00FB78  20                 	db	32
  6314  00FB79  25                 	db	37
  6315  00FB7A  2E                 	db	46
  6316  00FB7B  33                 	db	51	;'3'
  6317  00FB7C  66                 	db	102	;'f'
  6318  00FB7D  20                 	db	32
  6319  00FB7E  41                 	db	65	;'A'
  6320  00FB7F  6D                 	db	109	;'m'
  6321  00FB80  70                 	db	112	;'p'
  6322  00FB81  73                 	db	115	;'s'
  6323  00FB82  0A                 	db	10
  6324  00FB83  0D                 	db	13
  6325  00FB84  00                 	db	0
  6326  00FB85                     STR_104:
  6327  00FB85  44                 	db	68	;'D'
  6328  00FB86  69                 	db	105	;'i'
  6329  00FB87  6D                 	db	109	;'m'
  6330  00FB88  6D                 	db	109	;'m'
  6331  00FB89  69                 	db	105	;'i'
  6332  00FB8A  6E                 	db	110	;'n'
  6333  00FB8B  67                 	db	103	;'g'
  6334  00FB8C  20                 	db	32
  6335  00FB8D  69                 	db	105	;'i'
  6336  00FB8E  73                 	db	115	;'s'
  6337  00FB8F  20                 	db	32
  6338  00FB90  63                 	db	99	;'c'
  6339  00FB91  75                 	db	117	;'u'
  6340  00FB92  72                 	db	114	;'r'
  6341  00FB93  72                 	db	114	;'r'
  6342  00FB94  65                 	db	101	;'e'
  6343  00FB95  6E                 	db	110	;'n'
  6344  00FB96  74                 	db	116	;'t'
  6345  00FB97  6C                 	db	108	;'l'
  6346  00FB98  79                 	db	121	;'y'
  6347  00FB99  20                 	db	32
  6348  00FB9A  65                 	db	101	;'e'
  6349  00FB9B  6E                 	db	110	;'n'
  6350  00FB9C  61                 	db	97	;'a'
  6351  00FB9D  62                 	db	98	;'b'
  6352  00FB9E  6C                 	db	108	;'l'
  6353  00FB9F  65                 	db	101	;'e'
  6354  00FBA0  64                 	db	100	;'d'
  6355  00FBA1  0A                 	db	10
  6356  00FBA2  0D                 	db	13
  6357  00FBA3  00                 	db	0
  6358  00FBA4                     STR_148:
  6359  00FBA4  55                 	db	85	;'U'
  6360  00FBA5  73                 	db	115	;'s'
  6361  00FBA6  65                 	db	101	;'e'
  6362  00FBA7  72                 	db	114	;'r'
  6363  00FBA8  20                 	db	32
  6364  00FBA9  69                 	db	105	;'i'
  6365  00FBAA  6E                 	db	110	;'n'
  6366  00FBAB  70                 	db	112	;'p'
  6367  00FBAC  75                 	db	117	;'u'
  6368  00FBAD  74                 	db	116	;'t'
  6369  00FBAE  20                 	db	32
  6370  00FBAF  61                 	db	97	;'a'
  6371  00FBB0  70                 	db	112	;'p'
  6372  00FBB1  70                 	db	112	;'p'
  6373  00FBB2  65                 	db	101	;'e'
  6374  00FBB3  61                 	db	97	;'a'
  6375  00FBB4  72                 	db	114	;'r'
  6376  00FBB5  73                 	db	115	;'s'
  6377  00FBB6  20                 	db	32
  6378  00FBB7  69                 	db	105	;'i'
  6379  00FBB8  6E                 	db	110	;'n'
  6380  00FBB9  20                 	db	32
  6381  00FBBA  77                 	db	119	;'w'
  6382  00FBBB  68                 	db	104	;'h'
  6383  00FBBC  69                 	db	105	;'i'
  6384  00FBBD  74                 	db	116	;'t'
  6385  00FBBE  65                 	db	101	;'e'
  6386  00FBBF  0A                 	db	10
  6387  00FBC0  0D                 	db	13
  6388  00FBC1  00                 	db	0
  6389  00FBC2                     STR_102:
  6390  00FBC2  4C                 	db	76	;'L'
  6391  00FBC3  6F                 	db	111	;'o'
  6392  00FBC4  61                 	db	97	;'a'
  6393  00FBC5  64                 	db	100	;'d'
  6394  00FBC6  20                 	db	32
  6395  00FBC7  69                 	db	105	;'i'
  6396  00FBC8  73                 	db	115	;'s'
  6397  00FBC9  20                 	db	32
  6398  00FBCA  63                 	db	99	;'c'
  6399  00FBCB  75                 	db	117	;'u'
  6400  00FBCC  72                 	db	114	;'r'
  6401  00FBCD  72                 	db	114	;'r'
  6402  00FBCE  65                 	db	101	;'e'
  6403  00FBCF  6E                 	db	110	;'n'
  6404  00FBD0  74                 	db	116	;'t'
  6405  00FBD1  6C                 	db	108	;'l'
  6406  00FBD2  79                 	db	121	;'y'
  6407  00FBD3  20                 	db	32
  6408  00FBD4  64                 	db	100	;'d'
  6409  00FBD5  69                 	db	105	;'i'
  6410  00FBD6  73                 	db	115	;'s'
  6411  00FBD7  61                 	db	97	;'a'
  6412  00FBD8  62                 	db	98	;'b'
  6413  00FBD9  6C                 	db	108	;'l'
  6414  00FBDA  65                 	db	101	;'e'
  6415  00FBDB  64                 	db	100	;'d'
  6416  00FBDC  0A                 	db	10
  6417  00FBDD  0D                 	db	13
  6418  00FBDE  00                 	db	0
  6419  00FBDF                     STR_134:
  6420  00FBDF  48                 	db	72	;'H'
  6421  00FBE0  65                 	db	101	;'e'
  6422  00FBE1  6C                 	db	108	;'l'
  6423  00FBE2  70                 	db	112	;'p'
  6424  00FBE3  20                 	db	32
  6425  00FBE4  44                 	db	68	;'D'
  6426  00FBE5  65                 	db	101	;'e'
  6427  00FBE6  76                 	db	118	;'v'
  6428  00FBE7  69                 	db	105	;'i'
  6429  00FBE8  63                 	db	99	;'c'
  6430  00FBE9  65                 	db	101	;'e'
  6431  00FBEA  20                 	db	32
  6432  00FBEB  43                 	db	67	;'C'
  6433  00FBEC  6F                 	db	111	;'o'
  6434  00FBED  6E                 	db	110	;'n'
  6435  00FBEE  74                 	db	116	;'t'
  6436  00FBEF  72                 	db	114	;'r'
  6437  00FBF0  6F                 	db	111	;'o'
  6438  00FBF1  6C                 	db	108	;'l'
  6439  00FBF2  20                 	db	32
  6440  00FBF3  43                 	db	67	;'C'
  6441  00FBF4  6F                 	db	111	;'o'
  6442  00FBF5  6D                 	db	109	;'m'
  6443  00FBF6  6D                 	db	109	;'m'
  6444  00FBF7  61                 	db	97	;'a'
  6445  00FBF8  6E                 	db	110	;'n'
  6446  00FBF9  64                 	db	100	;'d'
  6447  00FBFA  73                 	db	115	;'s'
  6448  00FBFB  00                 	db	0
  6449  00FBFC                     STR_140:
  6450  00FBFC  48                 	db	72	;'H'
  6451  00FBFD  65                 	db	101	;'e'
  6452  00FBFE  6C                 	db	108	;'l'
  6453  00FBFF  70                 	db	112	;'p'
  6454  00FC00  20                 	db	32
  6455  00FC01  4F                 	db	79	;'O'
  6456  00FC02  75                 	db	117	;'u'
  6457  00FC03  74                 	db	116	;'t'
  6458  00FC04  70                 	db	112	;'p'
  6459  00FC05  75                 	db	117	;'u'
  6460  00FC06  74                 	db	116	;'t'
  6461  00FC07  20                 	db	32
  6462  00FC08  43                 	db	67	;'C'
  6463  00FC09  6F                 	db	111	;'o'
  6464  00FC0A  6E                 	db	110	;'n'
  6465  00FC0B  74                 	db	116	;'t'
  6466  00FC0C  72                 	db	114	;'r'
  6467  00FC0D  6F                 	db	111	;'o'
  6468  00FC0E  6C                 	db	108	;'l'
  6469  00FC0F  20                 	db	32
  6470  00FC10  43                 	db	67	;'C'
  6471  00FC11  6F                 	db	111	;'o'
  6472  00FC12  6D                 	db	109	;'m'
  6473  00FC13  6D                 	db	109	;'m'
  6474  00FC14  61                 	db	97	;'a'
  6475  00FC15  6E                 	db	110	;'n'
  6476  00FC16  64                 	db	100	;'d'
  6477  00FC17  73                 	db	115	;'s'
  6478  00FC18  00                 	db	0
  6479  00FC19                     STR_101:
  6480  00FC19  4C                 	db	76	;'L'
  6481  00FC1A  6F                 	db	111	;'o'
  6482  00FC1B  61                 	db	97	;'a'
  6483  00FC1C  64                 	db	100	;'d'
  6484  00FC1D  20                 	db	32
  6485  00FC1E  69                 	db	105	;'i'
  6486  00FC1F  73                 	db	115	;'s'
  6487  00FC20  20                 	db	32
  6488  00FC21  63                 	db	99	;'c'
  6489  00FC22  75                 	db	117	;'u'
  6490  00FC23  72                 	db	114	;'r'
  6491  00FC24  72                 	db	114	;'r'
  6492  00FC25  65                 	db	101	;'e'
  6493  00FC26  6E                 	db	110	;'n'
  6494  00FC27  74                 	db	116	;'t'
  6495  00FC28  6C                 	db	108	;'l'
  6496  00FC29  79                 	db	121	;'y'
  6497  00FC2A  20                 	db	32
  6498  00FC2B  65                 	db	101	;'e'
  6499  00FC2C  6E                 	db	110	;'n'
  6500  00FC2D  61                 	db	97	;'a'
  6501  00FC2E  62                 	db	98	;'b'
  6502  00FC2F  6C                 	db	108	;'l'
  6503  00FC30  65                 	db	101	;'e'
  6504  00FC31  64                 	db	100	;'d'
  6505  00FC32  0A                 	db	10
  6506  00FC33  0D                 	db	13
  6507  00FC34  00                 	db	0
  6508  00FC35                     STR_158:
  6509  00FC35  52                 	db	82	;'R'
  6510  00FC36  45                 	db	69	;'E'
  6511  00FC37  53                 	db	83	;'S'
  6512  00FC38  45                 	db	69	;'E'
  6513  00FC39  54                 	db	84	;'T'
  6514  00FC3A  20                 	db	32
  6515  00FC3B  49                 	db	73	;'I'
  6516  00FC3C  6E                 	db	110	;'n'
  6517  00FC3D  73                 	db	115	;'s'
  6518  00FC3E  74                 	db	116	;'t'
  6519  00FC3F  72                 	db	114	;'r'
  6520  00FC40  75                 	db	117	;'u'
  6521  00FC41  63                 	db	99	;'c'
  6522  00FC42  74                 	db	116	;'t'
  6523  00FC43  69                 	db	105	;'i'
  6524  00FC44  6F                 	db	111	;'o'
  6525  00FC45  6E                 	db	110	;'n'
  6526  00FC46  20                 	db	32
  6527  00FC47  45                 	db	69	;'E'
  6528  00FC48  78                 	db	120	;'x'
  6529  00FC49  65                 	db	101	;'e'
  6530  00FC4A  63                 	db	99	;'c'
  6531  00FC4B  75                 	db	117	;'u'
  6532  00FC4C  74                 	db	116	;'t'
  6533  00FC4D  65                 	db	101	;'e'
  6534  00FC4E  64                 	db	100	;'d'
  6535  00FC4F  00                 	db	0
  6536  00FC50                     STR_86:
  6537  00FC50  4D                 	db	77	;'M'
  6538  00FC51  65                 	db	101	;'e'
  6539  00FC52  61                 	db	97	;'a'
  6540  00FC53  73                 	db	115	;'s'
  6541  00FC54  75                 	db	117	;'u'
  6542  00FC55  72                 	db	114	;'r'
  6543  00FC56  65                 	db	101	;'e'
  6544  00FC57  20                 	db	32
  6545  00FC58  44                 	db	68	;'D'
  6546  00FC59  65                 	db	101	;'e'
  6547  00FC5A  74                 	db	116	;'t'
  6548  00FC5B  65                 	db	101	;'e'
  6549  00FC5C  63                 	db	99	;'c'
  6550  00FC5D  74                 	db	116	;'t'
  6551  00FC5E  65                 	db	101	;'e'
  6552  00FC5F  64                 	db	100	;'d'
  6553  00FC60  20                 	db	32
  6554  00FC61  43                 	db	67	;'C'
  6555  00FC62  75                 	db	117	;'u'
  6556  00FC63  72                 	db	114	;'r'
  6557  00FC64  72                 	db	114	;'r'
  6558  00FC65  65                 	db	101	;'e'
  6559  00FC66  6E                 	db	110	;'n'
  6560  00FC67  74                 	db	116	;'t'
  6561  00FC68  3F                 	db	63	;'?'
  6562  00FC69  00                 	db	0
  6563  00FC6A                     STR_108:
  6564  00FC6A  4C                 	db	76	;'L'
  6565  00FC6B  6F                 	db	111	;'o'
  6566  00FC6C  61                 	db	97	;'a'
  6567  00FC6D  64                 	db	100	;'d'
  6568  00FC6E  20                 	db	32
  6569  00FC6F  68                 	db	104	;'h'
  6570  00FC70  61                 	db	97	;'a'
  6571  00FC71  73                 	db	115	;'s'
  6572  00FC72  20                 	db	32
  6573  00FC73  62                 	db	98	;'b'
  6574  00FC74  65                 	db	101	;'e'
  6575  00FC75  65                 	db	101	;'e'
  6576  00FC76  6E                 	db	110	;'n'
  6577  00FC77  20                 	db	32
  6578  00FC78  64                 	db	100	;'d'
  6579  00FC79  69                 	db	105	;'i'
  6580  00FC7A  73                 	db	115	;'s'
  6581  00FC7B  61                 	db	97	;'a'
  6582  00FC7C  62                 	db	98	;'b'
  6583  00FC7D  6C                 	db	108	;'l'
  6584  00FC7E  65                 	db	101	;'e'
  6585  00FC7F  64                 	db	100	;'d'
  6586  00FC80  0A                 	db	10
  6587  00FC81  0D                 	db	13
  6588  00FC82  00                 	db	0
  6589  00FC83                     STR_109:
  6590  00FC83  53                 	db	83	;'S'
  6591  00FC84  65                 	db	101	;'e'
  6592  00FC85  74                 	db	116	;'t'
  6593  00FC86  20                 	db	32
  6594  00FC87  44                 	db	68	;'D'
  6595  00FC88  69                 	db	105	;'i'
  6596  00FC89  6D                 	db	109	;'m'
  6597  00FC8A  6D                 	db	109	;'m'
  6598  00FC8B  69                 	db	105	;'i'
  6599  00FC8C  6E                 	db	110	;'n'
  6600  00FC8D  67                 	db	103	;'g'
  6601  00FC8E  20                 	db	32
  6602  00FC8F  50                 	db	80	;'P'
  6603  00FC90  65                 	db	101	;'e'
  6604  00FC91  72                 	db	114	;'r'
  6605  00FC92  63                 	db	99	;'c'
  6606  00FC93  65                 	db	101	;'e'
  6607  00FC94  6E                 	db	110	;'n'
  6608  00FC95  74                 	db	116	;'t'
  6609  00FC96  61                 	db	97	;'a'
  6610  00FC97  67                 	db	103	;'g'
  6611  00FC98  65                 	db	101	;'e'
  6612  00FC99  3A                 	db	58	;':'
  6613  00FC9A  20                 	db	32
  6614  00FC9B  00                 	db	0
  6615  00FC9C                     STR_70:
  6616  00FC9C  4E                 	db	78	;'N'
  6617  00FC9D  6F                 	db	111	;'o'
  6618  00FC9E  20                 	db	32
  6619  00FC9F  41                 	db	65	;'A'
  6620  00FCA0  44                 	db	68	;'D'
  6621  00FCA1  43                 	db	67	;'C'
  6622  00FCA2  20                 	db	32
  6623  00FCA3  45                 	db	69	;'E'
  6624  00FCA4  72                 	db	114	;'r'
  6625  00FCA5  72                 	db	114	;'r'
  6626  00FCA6  6F                 	db	111	;'o'
  6627  00FCA7  72                 	db	114	;'r'
  6628  00FCA8  20                 	db	32
  6629  00FCA9  64                 	db	100	;'d'
  6630  00FCAA  65                 	db	101	;'e'
  6631  00FCAB  74                 	db	116	;'t'
  6632  00FCAC  65                 	db	101	;'e'
  6633  00FCAD  63                 	db	99	;'c'
  6634  00FCAE  74                 	db	116	;'t'
  6635  00FCAF  65                 	db	101	;'e'
  6636  00FCB0  64                 	db	100	;'d'
  6637  00FCB1  0A                 	db	10
  6638  00FCB2  0D                 	db	13
  6639  00FCB3  00                 	db	0
  6640  00FCB4                     STR_160:
  6641  00FCB4  53                 	db	83	;'S'
  6642  00FCB5  74                 	db	116	;'t'
  6643  00FCB6  61                 	db	97	;'a'
  6644  00FCB7  63                 	db	99	;'c'
  6645  00FCB8  6B                 	db	107	;'k'
  6646  00FCB9  20                 	db	32
  6647  00FCBA  55                 	db	85	;'U'
  6648  00FCBB  6E                 	db	110	;'n'
  6649  00FCBC  64                 	db	100	;'d'
  6650  00FCBD  65                 	db	101	;'e'
  6651  00FCBE  72                 	db	114	;'r'
  6652  00FCBF  66                 	db	102	;'f'
  6653  00FCC0  6C                 	db	108	;'l'
  6654  00FCC1  6F                 	db	111	;'o'
  6655  00FCC2  77                 	db	119	;'w'
  6656  00FCC3  20                 	db	32
  6657  00FCC4  52                 	db	82	;'R'
  6658  00FCC5  65                 	db	101	;'e'
  6659  00FCC6  73                 	db	115	;'s'
  6660  00FCC7  65                 	db	101	;'e'
  6661  00FCC8  74                 	db	116	;'t'
  6662  00FCC9  00                 	db	0
  6663  00FCCA                     STR_67:
  6664  00FCCA  49                 	db	73	;'I'
  6665  00FCCB  6E                 	db	110	;'n'
  6666  00FCCC  74                 	db	116	;'t'
  6667  00FCCD  65                 	db	101	;'e'
  6668  00FCCE  72                 	db	114	;'r'
  6669  00FCCF  6E                 	db	110	;'n'
  6670  00FCD0  61                 	db	97	;'a'
  6671  00FCD1  6C                 	db	108	;'l'
  6672  00FCD2  20                 	db	32
  6673  00FCD3  46                 	db	70	;'F'
  6674  00FCD4  56                 	db	86	;'V'
  6675  00FCD5  52                 	db	82	;'R'
  6676  00FCD6  20                 	db	32
  6677  00FCD7  42                 	db	66	;'B'
  6678  00FCD8  75                 	db	117	;'u'
  6679  00FCD9  66                 	db	102	;'f'
  6680  00FCDA  66                 	db	102	;'f'
  6681  00FCDB  65                 	db	101	;'e'
  6682  00FCDC  72                 	db	114	;'r'
  6683  00FCDD  20                 	db	32
  6684  00FCDE  31                 	db	49	;'1'
  6685  00FCDF  00                 	db	0
  6686  00FCE0                     STR_159:
  6687  00FCE0  53                 	db	83	;'S'
  6688  00FCE1  74                 	db	116	;'t'
  6689  00FCE2  61                 	db	97	;'a'
  6690  00FCE3  63                 	db	99	;'c'
  6691  00FCE4  6B                 	db	107	;'k'
  6692  00FCE5  20                 	db	32
  6693  00FCE6  4F                 	db	79	;'O'
  6694  00FCE7  76                 	db	118	;'v'
  6695  00FCE8  65                 	db	101	;'e'
  6696  00FCE9  72                 	db	114	;'r'
  6697  00FCEA  66                 	db	102	;'f'
  6698  00FCEB  6C                 	db	108	;'l'
  6699  00FCEC  6F                 	db	111	;'o'
  6700  00FCED  77                 	db	119	;'w'
  6701  00FCEE  20                 	db	32
  6702  00FCEF  52                 	db	82	;'R'
  6703  00FCF0  65                 	db	101	;'e'
  6704  00FCF1  73                 	db	115	;'s'
  6705  00FCF2  65                 	db	101	;'e'
  6706  00FCF3  74                 	db	116	;'t'
  6707  00FCF4  00                 	db	0
  6708  00FCF5                     STR_72:
  6709  00FCF5  43                 	db	67	;'C'
  6710  00FCF6  6C                 	db	108	;'l'
  6711  00FCF7  65                 	db	101	;'e'
  6712  00FCF8  61                 	db	97	;'a'
  6713  00FCF9  72                 	db	114	;'r'
  6714  00FCFA  69                 	db	105	;'i'
  6715  00FCFB  6E                 	db	110	;'n'
  6716  00FCFC  67                 	db	103	;'g'
  6717  00FCFD  20                 	db	32
  6718  00FCFE  41                 	db	65	;'A'
  6719  00FCFF  44                 	db	68	;'D'
  6720  00FD00  43                 	db	67	;'C'
  6721  00FD01  20                 	db	32
  6722  00FD02  45                 	db	69	;'E'
  6723  00FD03  72                 	db	114	;'r'
  6724  00FD04  72                 	db	114	;'r'
  6725  00FD05  6F                 	db	111	;'o'
  6726  00FD06  72                 	db	114	;'r'
  6727  00FD07  0A                 	db	10
  6728  00FD08  0D                 	db	13
  6729  00FD09  00                 	db	0
  6730  00FD0A                     STR_90:
  6731  00FD0A  4D                 	db	77	;'M'
  6732  00FD0B  65                 	db	101	;'e'
  6733  00FD0C  61                 	db	97	;'a'
  6734  00FD0D  73                 	db	115	;'s'
  6735  00FD0E  75                 	db	117	;'u'
  6736  00FD0F  72                 	db	114	;'r'
  6737  00FD10  65                 	db	101	;'e'
  6738  00FD11  20                 	db	32
  6739  00FD12  52                 	db	82	;'R'
  6740  00FD13  4D                 	db	77	;'M'
  6741  00FD14  53                 	db	83	;'S'
  6742  00FD15  20                 	db	32
  6743  00FD16  56                 	db	86	;'V'
  6744  00FD17  6F                 	db	111	;'o'
  6745  00FD18  6C                 	db	108	;'l'
  6746  00FD19  74                 	db	116	;'t'
  6747  00FD1A  61                 	db	97	;'a'
  6748  00FD1B  67                 	db	103	;'g'
  6749  00FD1C  65                 	db	101	;'e'
  6750  00FD1D  3F                 	db	63	;'?'
  6751  00FD1E  00                 	db	0
  6752  00FD1F                     STR_88:
  6753  00FD1F  4D                 	db	77	;'M'
  6754  00FD20  65                 	db	101	;'e'
  6755  00FD21  61                 	db	97	;'a'
  6756  00FD22  73                 	db	115	;'s'
  6757  00FD23  75                 	db	117	;'u'
  6758  00FD24  72                 	db	114	;'r'
  6759  00FD25  65                 	db	101	;'e'
  6760  00FD26  20                 	db	32
  6761  00FD27  52                 	db	82	;'R'
  6762  00FD28  4D                 	db	77	;'M'
  6763  00FD29  53                 	db	83	;'S'
  6764  00FD2A  20                 	db	32
  6765  00FD2B  43                 	db	67	;'C'
  6766  00FD2C  75                 	db	117	;'u'
  6767  00FD2D  72                 	db	114	;'r'
  6768  00FD2E  72                 	db	114	;'r'
  6769  00FD2F  65                 	db	101	;'e'
  6770  00FD30  6E                 	db	110	;'n'
  6771  00FD31  74                 	db	116	;'t'
  6772  00FD32  3F                 	db	63	;'?'
  6773  00FD33  00                 	db	0
  6774  00FD34                     STR_124:
  6775  00FD34  4D                 	db	77	;'M'
  6776  00FD35  61                 	db	97	;'a'
  6777  00FD36  78                 	db	120	;'x'
  6778  00FD37  20                 	db	32
  6779  00FD38  50                 	db	80	;'P'
  6780  00FD39  4F                 	db	79	;'O'
  6781  00FD3A  53                 	db	83	;'S'
  6782  00FD3B  33                 	db	51	;'3'
  6783  00FD3C  50                 	db	80	;'P'
  6784  00FD3D  33                 	db	51	;'3'
  6785  00FD3E  20                 	db	32
  6786  00FD3F  56                 	db	86	;'V'
  6787  00FD40  6F                 	db	111	;'o'
  6788  00FD41  6C                 	db	108	;'l'
  6789  00FD42  74                 	db	116	;'t'
  6790  00FD43  61                 	db	97	;'a'
  6791  00FD44  67                 	db	103	;'g'
  6792  00FD45  65                 	db	101	;'e'
  6793  00FD46  3F                 	db	63	;'?'
  6794  00FD47  00                 	db	0
  6795  00FD48                     STR_155:
  6796  00FD48  4D                 	db	77	;'M'
  6797  00FD49  61                 	db	97	;'a'
  6798  00FD4A  73                 	db	115	;'s'
  6799  00FD4B  74                 	db	116	;'t'
  6800  00FD4C  65                 	db	101	;'e'
  6801  00FD4D  72                 	db	114	;'r'
  6802  00FD4E  20                 	db	32
  6803  00FD4F  43                 	db	67	;'C'
  6804  00FD50  6C                 	db	108	;'l'
  6805  00FD51  65                 	db	101	;'e'
  6806  00FD52  61                 	db	97	;'a'
  6807  00FD53  72                 	db	114	;'r'
  6808  00FD54  20                 	db	32
  6809  00FD55  52                 	db	82	;'R'
  6810  00FD56  65                 	db	101	;'e'
  6811  00FD57  73                 	db	115	;'s'
  6812  00FD58  65                 	db	101	;'e'
  6813  00FD59  74                 	db	116	;'t'
  6814  00FD5A  00                 	db	0
  6815  00FD5B                     STR_126:
  6816  00FD5B  4D                 	db	77	;'M'
  6817  00FD5C  61                 	db	97	;'a'
  6818  00FD5D  78                 	db	120	;'x'
  6819  00FD5E  20                 	db	32
  6820  00FD5F  50                 	db	80	;'P'
  6821  00FD60  4F                 	db	79	;'O'
  6822  00FD61  53                 	db	83	;'S'
  6823  00FD62  31                 	db	49	;'1'
  6824  00FD63  32                 	db	50	;'2'
  6825  00FD64  20                 	db	32
  6826  00FD65  56                 	db	86	;'V'
  6827  00FD66  6F                 	db	111	;'o'
  6828  00FD67  6C                 	db	108	;'l'
  6829  00FD68  74                 	db	116	;'t'
  6830  00FD69  61                 	db	97	;'a'
  6831  00FD6A  67                 	db	103	;'g'
  6832  00FD6B  65                 	db	101	;'e'
  6833  00FD6C  3F                 	db	63	;'?'
  6834  00FD6D  00                 	db	0
  6835  00FD6E                     STR_80:
  6836  00FD6E  4D                 	db	77	;'M'
  6837  00FD6F  65                 	db	101	;'e'
  6838  00FD70  61                 	db	97	;'a'
  6839  00FD71  73                 	db	115	;'s'
  6840  00FD72  75                 	db	117	;'u'
  6841  00FD73  72                 	db	114	;'r'
  6842  00FD74  65                 	db	101	;'e'
  6843  00FD75  20                 	db	32
  6844  00FD76  44                 	db	68	;'D'
  6845  00FD77  69                 	db	105	;'i'
  6846  00FD78  65                 	db	101	;'e'
  6847  00FD79  20                 	db	32
  6848  00FD7A  54                 	db	84	;'T'
  6849  00FD7B  65                 	db	101	;'e'
  6850  00FD7C  6D                 	db	109	;'m'
  6851  00FD7D  70                 	db	112	;'p'
  6852  00FD7E  3F                 	db	63	;'?'
  6853  00FD7F  00                 	db	0
  6854  00FD80                     STR_163:
  6855  00FD80  30                 	db	48	;'0'
  6856  00FD81  31                 	db	49	;'1'
  6857  00FD82  32                 	db	50	;'2'
  6858  00FD83  33                 	db	51	;'3'
  6859  00FD84  34                 	db	52	;'4'
  6860  00FD85  35                 	db	53	;'5'
  6861  00FD86  36                 	db	54	;'6'
  6862  00FD87  37                 	db	55	;'7'
  6863  00FD88  38                 	db	56	;'8'
  6864  00FD89  39                 	db	57	;'9'
  6865  00FD8A  41                 	db	65	;'A'
  6866  00FD8B  42                 	db	66	;'B'
  6867  00FD8C  43                 	db	67	;'C'
  6868  00FD8D  44                 	db	68	;'D'
  6869  00FD8E  45                 	db	69	;'E'
  6870  00FD8F  46                 	db	70	;'F'
  6871  00FD90  00                 	db	0
  6872  00FD91                     STR_51:
  6873  00FD91  41                 	db	65	;'A'
  6874  00FD92  43                 	db	67	;'C'
  6875  00FD93  20                 	db	32
  6876  00FD94  50                 	db	80	;'P'
  6877  00FD95  6F                 	db	111	;'o'
  6878  00FD96  77                 	db	119	;'w'
  6879  00FD97  65                 	db	101	;'e'
  6880  00FD98  72                 	db	114	;'r'
  6881  00FD99  20                 	db	32
  6882  00FD9A  4D                 	db	77	;'M'
  6883  00FD9B  65                 	db	101	;'e'
  6884  00FD9C  74                 	db	116	;'t'
  6885  00FD9D  65                 	db	101	;'e'
  6886  00FD9E  72                 	db	114	;'r'
  6887  00FD9F  0A                 	db	10
  6888  00FDA0  0D                 	db	13
  6889  00FDA1  00                 	db	0
  6890  00FDA2                     STR_103:
  6891  00FDA2  44                 	db	68	;'D'
  6892  00FDA3  69                 	db	105	;'i'
  6893  00FDA4  6D                 	db	109	;'m'
  6894  00FDA5  6D                 	db	109	;'m'
  6895  00FDA6  69                 	db	105	;'i'
  6896  00FDA7  6E                 	db	110	;'n'
  6897  00FDA8  67                 	db	103	;'g'
  6898  00FDA9  20                 	db	32
  6899  00FDAA  45                 	db	69	;'E'
  6900  00FDAB  6E                 	db	110	;'n'
  6901  00FDAC  61                 	db	97	;'a'
  6902  00FDAD  62                 	db	98	;'b'
  6903  00FDAE  6C                 	db	108	;'l'
  6904  00FDAF  65                 	db	101	;'e'
  6905  00FDB0  64                 	db	100	;'d'
  6906  00FDB1  3F                 	db	63	;'?'
  6907  00FDB2  00                 	db	0
  6908  00FDB3                     STR_130:
  6909  00FDB3  4D                 	db	77	;'M'
  6910  00FDB4  61                 	db	97	;'a'
  6911  00FDB5  78                 	db	120	;'x'
  6912  00FDB6  20                 	db	32
  6913  00FDB7  46                 	db	70	;'F'
  6914  00FDB8  56                 	db	86	;'V'
  6915  00FDB9  52                 	db	82	;'R'
  6916  00FDBA  20                 	db	32
  6917  00FDBB  56                 	db	86	;'V'
  6918  00FDBC  6F                 	db	111	;'o'
  6919  00FDBD  6C                 	db	108	;'l'
  6920  00FDBE  74                 	db	116	;'t'
  6921  00FDBF  61                 	db	97	;'a'
  6922  00FDC0  67                 	db	103	;'g'
  6923  00FDC1  65                 	db	101	;'e'
  6924  00FDC2  3F                 	db	63	;'?'
  6925  00FDC3  00                 	db	0
  6926  00FDC4                     STR_73:
  6927  00FDC4  56                 	db	86	;'V'
  6928  00FDC5  43                 	db	67	;'C'
  6929  00FDC6  43                 	db	67	;'C'
  6930  00FDC7  20                 	db	32
  6931  00FDC8  4F                 	db	79	;'O'
  6932  00FDC9  76                 	db	118	;'v'
  6933  00FDCA  65                 	db	101	;'e'
  6934  00FDCB  72                 	db	114	;'r'
  6935  00FDCC  76                 	db	118	;'v'
  6936  00FDCD  6F                 	db	111	;'o'
  6937  00FDCE  6C                 	db	108	;'l'
  6938  00FDCF  74                 	db	116	;'t'
  6939  00FDD0  61                 	db	97	;'a'
  6940  00FDD1  67                 	db	103	;'g'
  6941  00FDD2  65                 	db	101	;'e'
  6942  00FDD3  3F                 	db	63	;'?'
  6943  00FDD4  00                 	db	0
  6944  00FDD5                     STR_120:
  6945  00FDD5  4D                 	db	77	;'M'
  6946  00FDD6  61                 	db	97	;'a'
  6947  00FDD7  78                 	db	120	;'x'
  6948  00FDD8  20                 	db	32
  6949  00FDD9  52                 	db	82	;'R'
  6950  00FDDA  4D                 	db	77	;'M'
  6951  00FDDB  53                 	db	83	;'S'
  6952  00FDDC  20                 	db	32
  6953  00FDDD  43                 	db	67	;'C'
  6954  00FDDE  75                 	db	117	;'u'
  6955  00FDDF  72                 	db	114	;'r'
  6956  00FDE0  72                 	db	114	;'r'
  6957  00FDE1  65                 	db	101	;'e'
  6958  00FDE2  6E                 	db	110	;'n'
  6959  00FDE3  74                 	db	116	;'t'
  6960  00FDE4  3F                 	db	63	;'?'
  6961  00FDE5  00                 	db	0
  6962  00FDE6                     STR_132:
  6963  00FDE6  43                 	db	67	;'C'
  6964  00FDE7  6C                 	db	108	;'l'
  6965  00FDE8  65                 	db	101	;'e'
  6966  00FDE9  61                 	db	97	;'a'
  6967  00FDEA  72                 	db	114	;'r'
  6968  00FDEB  20                 	db	32
  6969  00FDEC  4D                 	db	77	;'M'
  6970  00FDED  61                 	db	97	;'a'
  6971  00FDEE  78                 	db	120	;'x'
  6972  00FDEF  20                 	db	32
  6973  00FDF0  56                 	db	86	;'V'
  6974  00FDF1  61                 	db	97	;'a'
  6975  00FDF2  6C                 	db	108	;'l'
  6976  00FDF3  75                 	db	117	;'u'
  6977  00FDF4  65                 	db	101	;'e'
  6978  00FDF5  73                 	db	115	;'s'
  6979  00FDF6  00                 	db	0
  6980  00FDF7                     STR_152:
  6981  00FDF7  55                 	db	85	;'U'
  6982  00FDF8  6E                 	db	110	;'n'
  6983  00FDF9  64                 	db	100	;'d'
  6984  00FDFA  65                 	db	101	;'e'
  6985  00FDFB  66                 	db	102	;'f'
  6986  00FDFC  69                 	db	105	;'i'
  6987  00FDFD  6E                 	db	110	;'n'
  6988  00FDFE  65                 	db	101	;'e'
  6989  00FDFF  64                 	db	100	;'d'
  6990  00FE00  20                 	db	32
  6991  00FE01  52                 	db	82	;'R'
  6992  00FE02  65                 	db	101	;'e'
  6993  00FE03  73                 	db	115	;'s'
  6994  00FE04  65                 	db	101	;'e'
  6995  00FE05  74                 	db	116	;'t'
  6996  00FE06  00                 	db	0
  6997  00FE07                     STR_154:
  6998  00FE07  42                 	db	66	;'B'
  6999  00FE08  72                 	db	114	;'r'
  7000  00FE09  6F                 	db	111	;'o'
  7001  00FE0A  77                 	db	119	;'w'
  7002  00FE0B  6E                 	db	110	;'n'
  7003  00FE0C  20                 	db	32
  7004  00FE0D  4F                 	db	79	;'O'
  7005  00FE0E  75                 	db	117	;'u'
  7006  00FE0F  74                 	db	116	;'t'
  7007  00FE10  20                 	db	32
  7008  00FE11  52                 	db	82	;'R'
  7009  00FE12  65                 	db	101	;'e'
  7010  00FE13  73                 	db	115	;'s'
  7011  00FE14  65                 	db	101	;'e'
  7012  00FE15  74                 	db	116	;'t'
  7013  00FE16  00                 	db	0
  7014  00FE17                     STR_76:
  7015  00FE17  4D                 	db	77	;'M'
  7016  00FE18  65                 	db	101	;'e'
  7017  00FE19  61                 	db	97	;'a'
  7018  00FE1A  73                 	db	115	;'s'
  7019  00FE1B  75                 	db	117	;'u'
  7020  00FE1C  72                 	db	114	;'r'
  7021  00FE1D  65                 	db	101	;'e'
  7022  00FE1E  20                 	db	32
  7023  00FE1F  50                 	db	80	;'P'
  7024  00FE20  4F                 	db	79	;'O'
  7025  00FE21  53                 	db	83	;'S'
  7026  00FE22  33                 	db	51	;'3'
  7027  00FE23  50                 	db	80	;'P'
  7028  00FE24  33                 	db	51	;'3'
  7029  00FE25  3F                 	db	63	;'?'
  7030  00FE26  00                 	db	0
  7031  00FE27                     STR_116:
  7032  00FE27  44                 	db	68	;'D'
  7033  00FE28  65                 	db	101	;'e'
  7034  00FE29  76                 	db	118	;'v'
  7035  00FE2A  69                 	db	105	;'i'
  7036  00FE2B  63                 	db	99	;'c'
  7037  00FE2C  65                 	db	101	;'e'
  7038  00FE2D  20                 	db	32
  7039  00FE2E  4F                 	db	79	;'O'
  7040  00FE2F  6E                 	db	110	;'n'
  7041  00FE30  20                 	db	32
  7042  00FE31  54                 	db	84	;'T'
  7043  00FE32  69                 	db	105	;'i'
  7044  00FE33  6D                 	db	109	;'m'
  7045  00FE34  65                 	db	101	;'e'
  7046  00FE35  3F                 	db	63	;'?'
  7047  00FE36  00                 	db	0
  7048  00FE37                     STR_47:
  7049  00FE37  43                 	db	67	;'C'
  7050  00FE38  61                 	db	97	;'a'
  7051  00FE39  75                 	db	117	;'u'
  7052  00FE3A  73                 	db	115	;'s'
  7053  00FE3B  65                 	db	101	;'e'
  7054  00FE3C  20                 	db	32
  7055  00FE3D  6F                 	db	111	;'o'
  7056  00FE3E  66                 	db	102	;'f'
  7057  00FE3F  20                 	db	32
  7058  00FE40  52                 	db	82	;'R'
  7059  00FE41  65                 	db	101	;'e'
  7060  00FE42  73                 	db	115	;'s'
  7061  00FE43  65                 	db	101	;'e'
  7062  00FE44  74                 	db	116	;'t'
  7063  00FE45  3F                 	db	63	;'?'
  7064  00FE46  00                 	db	0
  7065  00FE47                     STR_96:
  7066  00FE47  44                 	db	68	;'D'
  7067  00FE48  69                 	db	105	;'i'
  7068  00FE49  73                 	db	115	;'s'
  7069  00FE4A  61                 	db	97	;'a'
  7070  00FE4B  62                 	db	98	;'b'
  7071  00FE4C  6C                 	db	108	;'l'
  7072  00FE4D  65                 	db	101	;'e'
  7073  00FE4E  20                 	db	32
  7074  00FE4F  44                 	db	68	;'D'
  7075  00FE50  69                 	db	105	;'i'
  7076  00FE51  6D                 	db	109	;'m'
  7077  00FE52  6D                 	db	109	;'m'
  7078  00FE53  69                 	db	105	;'i'
  7079  00FE54  6E                 	db	110	;'n'
  7080  00FE55  67                 	db	103	;'g'
  7081  00FE56  00                 	db	0
  7082  00FE57                     STR_71:
  7083  00FE57  43                 	db	67	;'C'
  7084  00FE58  6C                 	db	108	;'l'
  7085  00FE59  65                 	db	101	;'e'
  7086  00FE5A  61                 	db	97	;'a'
  7087  00FE5B  72                 	db	114	;'r'
  7088  00FE5C  20                 	db	32
  7089  00FE5D  41                 	db	65	;'A'
  7090  00FE5E  44                 	db	68	;'D'
  7091  00FE5F  43                 	db	67	;'C'
  7092  00FE60  20                 	db	32
  7093  00FE61  45                 	db	69	;'E'
  7094  00FE62  72                 	db	114	;'r'
  7095  00FE63  72                 	db	114	;'r'
  7096  00FE64  6F                 	db	111	;'o'
  7097  00FE65  72                 	db	114	;'r'
  7098  00FE66  00                 	db	0
  7099  00FE67                     STR_153:
  7100  00FE67  50                 	db	80	;'P'
  7101  00FE68  6F                 	db	111	;'o'
  7102  00FE69  77                 	db	119	;'w'
  7103  00FE6A  65                 	db	101	;'e'
  7104  00FE6B  72                 	db	114	;'r'
  7105  00FE6C  20                 	db	32
  7106  00FE6D  4F                 	db	79	;'O'
  7107  00FE6E  6E                 	db	110	;'n'
  7108  00FE6F  20                 	db	32
  7109  00FE70  52                 	db	82	;'R'
  7110  00FE71  65                 	db	101	;'e'
  7111  00FE72  73                 	db	115	;'s'
  7112  00FE73  65                 	db	101	;'e'
  7113  00FE74  74                 	db	116	;'t'
  7114  00FE75  00                 	db	0
  7115  00FE76                     STR_78:
  7116  00FE76  4D                 	db	77	;'M'
  7117  00FE77  65                 	db	101	;'e'
  7118  00FE78  61                 	db	97	;'a'
  7119  00FE79  73                 	db	115	;'s'
  7120  00FE7A  75                 	db	117	;'u'
  7121  00FE7B  72                 	db	114	;'r'
  7122  00FE7C  65                 	db	101	;'e'
  7123  00FE7D  20                 	db	32
  7124  00FE7E  50                 	db	80	;'P'
  7125  00FE7F  4F                 	db	79	;'O'
  7126  00FE80  53                 	db	83	;'S'
  7127  00FE81  31                 	db	49	;'1'
  7128  00FE82  32                 	db	50	;'2'
  7129  00FE83  3F                 	db	63	;'?'
  7130  00FE84  00                 	db	0
  7131  00FE85                     STR_92:
  7132  00FE85  4D                 	db	77	;'M'
  7133  00FE86  65                 	db	101	;'e'
  7134  00FE87  61                 	db	97	;'a'
  7135  00FE88  73                 	db	115	;'s'
  7136  00FE89  75                 	db	117	;'u'
  7137  00FE8A  72                 	db	114	;'r'
  7138  00FE8B  65                 	db	101	;'e'
  7139  00FE8C  20                 	db	32
  7140  00FE8D  50                 	db	80	;'P'
  7141  00FE8E  6F                 	db	111	;'o'
  7142  00FE8F  77                 	db	119	;'w'
  7143  00FE90  65                 	db	101	;'e'
  7144  00FE91  72                 	db	114	;'r'
  7145  00FE92  3F                 	db	63	;'?'
  7146  00FE93  00                 	db	0
  7147  00FE94                     STR_94:
  7148  00FE94  45                 	db	69	;'E'
  7149  00FE95  6E                 	db	110	;'n'
  7150  00FE96  61                 	db	97	;'a'
  7151  00FE97  62                 	db	98	;'b'
  7152  00FE98  6C                 	db	108	;'l'
  7153  00FE99  65                 	db	101	;'e'
  7154  00FE9A  20                 	db	32
  7155  00FE9B  44                 	db	68	;'D'
  7156  00FE9C  69                 	db	105	;'i'
  7157  00FE9D  6D                 	db	109	;'m'
  7158  00FE9E  6D                 	db	109	;'m'
  7159  00FE9F  69                 	db	105	;'i'
  7160  00FEA0  6E                 	db	110	;'n'
  7161  00FEA1  67                 	db	103	;'g'
  7162  00FEA2  00                 	db	0
  7163  00FEA3                     STR_66:
  7164  00FEA3  49                 	db	73	;'I'
  7165  00FEA4  6E                 	db	110	;'n'
  7166  00FEA5  74                 	db	116	;'t'
  7167  00FEA6  65                 	db	101	;'e'
  7168  00FEA7  72                 	db	114	;'r'
  7169  00FEA8  6E                 	db	110	;'n'
  7170  00FEA9  61                 	db	97	;'a'
  7171  00FEAA  6C                 	db	108	;'l'
  7172  00FEAB  20                 	db	32
  7173  00FEAC  44                 	db	68	;'D'
  7174  00FEAD  41                 	db	65	;'A'
  7175  00FEAE  43                 	db	67	;'C'
  7176  00FEAF  31                 	db	49	;'1'
  7177  00FEB0  00                 	db	0
  7178  00FEB1                     STR_84:
  7179  00FEB1  4D                 	db	77	;'M'
  7180  00FEB2  65                 	db	101	;'e'
  7181  00FEB3  61                 	db	97	;'a'
  7182  00FEB4  73                 	db	115	;'s'
  7183  00FEB5  75                 	db	117	;'u'
  7184  00FEB6  72                 	db	114	;'r'
  7185  00FEB7  65                 	db	101	;'e'
  7186  00FEB8  20                 	db	32
  7187  00FEB9  41                 	db	65	;'A'
  7188  00FEBA  56                 	db	86	;'V'
  7189  00FEBB  53                 	db	83	;'S'
  7190  00FEBC  53                 	db	83	;'S'
  7191  00FEBD  3F                 	db	63	;'?'
  7192  00FEBE  00                 	db	0
  7193  00FEBF                     STR_100:
  7194  00FEBF  4C                 	db	76	;'L'
  7195  00FEC0  6F                 	db	111	;'o'
  7196  00FEC1  61                 	db	97	;'a'
  7197  00FEC2  64                 	db	100	;'d'
  7198  00FEC3  20                 	db	32
  7199  00FEC4  45                 	db	69	;'E'
  7200  00FEC5  6E                 	db	110	;'n'
  7201  00FEC6  61                 	db	97	;'a'
  7202  00FEC7  62                 	db	98	;'b'
  7203  00FEC8  6C                 	db	108	;'l'
  7204  00FEC9  65                 	db	101	;'e'
  7205  00FECA  64                 	db	100	;'d'
  7206  00FECB  3F                 	db	63	;'?'
  7207  00FECC  00                 	db	0
  7208  00FECD                     STR_118:
  7209  00FECD  4C                 	db	76	;'L'
  7210  00FECE  6F                 	db	111	;'o'
  7211  00FECF  61                 	db	97	;'a'
  7212  00FED0  64                 	db	100	;'d'
  7213  00FED1  20                 	db	32
  7214  00FED2  4F                 	db	79	;'O'
  7215  00FED3  6E                 	db	110	;'n'
  7216  00FED4  20                 	db	32
  7217  00FED5  54                 	db	84	;'T'
  7218  00FED6  69                 	db	105	;'i'
  7219  00FED7  6D                 	db	109	;'m'
  7220  00FED8  65                 	db	101	;'e'
  7221  00FED9  3F                 	db	63	;'?'
  7222  00FEDA  00                 	db	0
  7223  00FEDB                     STR_128:
  7224  00FEDB  4D                 	db	77	;'M'
  7225  00FEDC  61                 	db	97	;'a'
  7226  00FEDD  78                 	db	120	;'x'
  7227  00FEDE  20                 	db	32
  7228  00FEDF  44                 	db	68	;'D'
  7229  00FEE0  69                 	db	105	;'i'
  7230  00FEE1  65                 	db	101	;'e'
  7231  00FEE2  20                 	db	32
  7232  00FEE3  54                 	db	84	;'T'
  7233  00FEE4  65                 	db	101	;'e'
  7234  00FEE5  6D                 	db	109	;'m'
  7235  00FEE6  70                 	db	112	;'p'
  7236  00FEE7  3F                 	db	63	;'?'
  7237  00FEE8  00                 	db	0
  7238  00FEE9                     STR_64:
  7239  00FEE9  49                 	db	73	;'I'
  7240  00FEEA  6E                 	db	110	;'n'
  7241  00FEEB  74                 	db	116	;'t'
  7242  00FEEC  65                 	db	101	;'e'
  7243  00FEED  72                 	db	114	;'r'
  7244  00FEEE  6E                 	db	110	;'n'
  7245  00FEEF  61                 	db	97	;'a'
  7246  00FEF0  6C                 	db	108	;'l'
  7247  00FEF1  20                 	db	32
  7248  00FEF2  41                 	db	65	;'A'
  7249  00FEF3  56                 	db	86	;'V'
  7250  00FEF4  53                 	db	83	;'S'
  7251  00FEF5  53                 	db	83	;'S'
  7252  00FEF6  00                 	db	0
  7253  00FEF7                     STR_65:
  7254  00FEF7  49                 	db	73	;'I'
  7255  00FEF8  6E                 	db	110	;'n'
  7256  00FEF9  74                 	db	116	;'t'
  7257  00FEFA  65                 	db	101	;'e'
  7258  00FEFB  72                 	db	114	;'r'
  7259  00FEFC  6E                 	db	110	;'n'
  7260  00FEFD  61                 	db	97	;'a'
  7261  00FEFE  6C                 	db	108	;'l'
  7262  00FEFF  20                 	db	32
  7263  00FF00  54                 	db	84	;'T'
  7264  00FF01  65                 	db	101	;'e'
  7265  00FF02  6D                 	db	109	;'m'
  7266  00FF03  70                 	db	112	;'p'
  7267  00FF04  00                 	db	0
  7268  00FF05                     STR_150:
  7269  00FF05  50                 	db	80	;'P'
  7270  00FF06  49                 	db	73	;'I'
  7271  00FF07  43                 	db	67	;'C'
  7272  00FF08  31                 	db	49	;'1'
  7273  00FF09  38                 	db	56	;'8'
  7274  00FF0A  4C                 	db	76	;'L'
  7275  00FF0B  46                 	db	70	;'F'
  7276  00FF0C  36                 	db	54	;'6'
  7277  00FF0D  37                 	db	55	;'7'
  7278  00FF0E  4B                 	db	75	;'K'
  7279  00FF0F  34                 	db	52	;'4'
  7280  00FF10  30                 	db	48	;'0'
  7281  00FF11  00                 	db	0
  7282  00FF12                     STR_55:
  7283  00FF12  52                 	db	82	;'R'
  7284  00FF13  65                 	db	101	;'e'
  7285  00FF14  76                 	db	118	;'v'
  7286  00FF15  69                 	db	105	;'i'
  7287  00FF16  73                 	db	115	;'s'
  7288  00FF17  69                 	db	105	;'i'
  7289  00FF18  6F                 	db	111	;'o'
  7290  00FF19  6E                 	db	110	;'n'
  7291  00FF1A  20                 	db	32
  7292  00FF1B  49                 	db	73	;'I'
  7293  00FF1C  44                 	db	68	;'D'
  7294  00FF1D  3F                 	db	63	;'?'
  7295  00FF1E  00                 	db	0
  7296  00FF1F                     STR_82:
  7297  00FF1F  4D                 	db	77	;'M'
  7298  00FF20  65                 	db	101	;'e'
  7299  00FF21  61                 	db	97	;'a'
  7300  00FF22  73                 	db	115	;'s'
  7301  00FF23  75                 	db	117	;'u'
  7302  00FF24  72                 	db	114	;'r'
  7303  00FF25  65                 	db	101	;'e'
  7304  00FF26  20                 	db	32
  7305  00FF27  46                 	db	70	;'F'
  7306  00FF28  56                 	db	86	;'V'
  7307  00FF29  52                 	db	82	;'R'
  7308  00FF2A  3F                 	db	63	;'?'
  7309  00FF2B  00                 	db	0
  7310  00FF2C                     STR_107:
  7311  00FF2C  44                 	db	68	;'D'
  7312  00FF2D  69                 	db	105	;'i'
  7313  00FF2E  73                 	db	115	;'s'
  7314  00FF2F  61                 	db	97	;'a'
  7315  00FF30  62                 	db	98	;'b'
  7316  00FF31  6C                 	db	108	;'l'
  7317  00FF32  65                 	db	101	;'e'
  7318  00FF33  20                 	db	32
  7319  00FF34  4C                 	db	76	;'L'
  7320  00FF35  6F                 	db	111	;'o'
  7321  00FF36  61                 	db	97	;'a'
  7322  00FF37  64                 	db	100	;'d'
  7323  00FF38  00                 	db	0
  7324  00FF39                     STR_149:
  7325  00FF39  50                 	db	80	;'P'
  7326  00FF3A  49                 	db	73	;'I'
  7327  00FF3B  43                 	db	67	;'C'
  7328  00FF3C  31                 	db	49	;'1'
  7329  00FF3D  38                 	db	56	;'8'
  7330  00FF3E  46                 	db	70	;'F'
  7331  00FF3F  36                 	db	54	;'6'
  7332  00FF40  37                 	db	55	;'7'
  7333  00FF41  4B                 	db	75	;'K'
  7334  00FF42  34                 	db	52	;'4'
  7335  00FF43  30                 	db	48	;'0'
  7336  00FF44  00                 	db	0
  7337  00FF45                     STR_98:
  7338  00FF45  45                 	db	69	;'E'
  7339  00FF46  6E                 	db	110	;'n'
  7340  00FF47  61                 	db	97	;'a'
  7341  00FF48  62                 	db	98	;'b'
  7342  00FF49  6C                 	db	108	;'l'
  7343  00FF4A  65                 	db	101	;'e'
  7344  00FF4B  20                 	db	32
  7345  00FF4C  4C                 	db	76	;'L'
  7346  00FF4D  6F                 	db	111	;'o'
  7347  00FF4E  61                 	db	97	;'a'
  7348  00FF4F  64                 	db	100	;'d'
  7349  00FF50  00                 	db	0
  7350  00FF51                     STR_53:
  7351  00FF51  44                 	db	68	;'D'
  7352  00FF52  65                 	db	101	;'e'
  7353  00FF53  76                 	db	118	;'v'
  7354  00FF54  69                 	db	105	;'i'
  7355  00FF55  63                 	db	99	;'c'
  7356  00FF56  65                 	db	101	;'e'
  7357  00FF57  20                 	db	32
  7358  00FF58  49                 	db	73	;'I'
  7359  00FF59  44                 	db	68	;'D'
  7360  00FF5A  3F                 	db	63	;'?'
  7361  00FF5B  00                 	db	0
  7362  00FF5C                     STR_122:
  7363  00FF5C  4D                 	db	77	;'M'
  7364  00FF5D  61                 	db	97	;'a'
  7365  00FF5E  78                 	db	120	;'x'
  7366  00FF5F  20                 	db	32
  7367  00FF60  50                 	db	80	;'P'
  7368  00FF61  6F                 	db	111	;'o'
  7369  00FF62  77                 	db	119	;'w'
  7370  00FF63  65                 	db	101	;'e'
  7371  00FF64  72                 	db	114	;'r'
  7372  00FF65  3F                 	db	63	;'?'
  7373  00FF66  00                 	db	0
  7374  00FF67                     STR_60:
  7375  00FF67  41                 	db	65	;'A'
  7376  00FF68  44                 	db	68	;'D'
  7377  00FF69  43                 	db	67	;'C'
  7378  00FF6A  20                 	db	32
  7379  00FF6B  45                 	db	69	;'E'
  7380  00FF6C  72                 	db	114	;'r'
  7381  00FF6D  72                 	db	114	;'r'
  7382  00FF6E  6F                 	db	111	;'o'
  7383  00FF6F  72                 	db	114	;'r'
  7384  00FF70  3F                 	db	63	;'?'
  7385  00FF71  00                 	db	0
  7386  00FF72                     STR_57:
  7387  00FF72  55                 	db	85	;'U'
  7388  00FF73  73                 	db	115	;'s'
  7389  00FF74  65                 	db	101	;'e'
  7390  00FF75  72                 	db	114	;'r'
  7391  00FF76  20                 	db	32
  7392  00FF77  49                 	db	73	;'I'
  7393  00FF78  44                 	db	68	;'D'
  7394  00FF79  73                 	db	115	;'s'
  7395  00FF7A  3F                 	db	63	;'?'
  7396  00FF7B  00                 	db	0
  7397  00FF7C                     STR_68:
  7398  00FF7C  55                 	db	85	;'U'
  7399  00FF7D  6E                 	db	110	;'n'
  7400  00FF7E  64                 	db	100	;'d'
  7401  00FF7F  65                 	db	101	;'e'
  7402  00FF80  66                 	db	102	;'f'
  7403  00FF81  69                 	db	105	;'i'
  7404  00FF82  6E                 	db	110	;'n'
  7405  00FF83  65                 	db	101	;'e'
  7406  00FF84  64                 	db	100	;'d'
  7407  00FF85  00                 	db	0
  7408  00FF86                     STR_162:
  7409  00FF86  28                 	db	40
  7410  00FF87  6E                 	db	110	;'n'
  7411  00FF88  75                 	db	117	;'u'
  7412  00FF89  6C                 	db	108	;'l'
  7413  00FF8A  6C                 	db	108	;'l'
  7414  00FF8B  29                 	db	41
  7415  00FF8C  00                 	db	0
  7416  00FF8D                     STR_63:
  7417  00FF8D  50                 	db	80	;'P'
  7418  00FF8E  4F                 	db	79	;'O'
  7419  00FF8F  53                 	db	83	;'S'
  7420  00FF90  33                 	db	51	;'3'
  7421  00FF91  50                 	db	80	;'P'
  7422  00FF92  33                 	db	51	;'3'
  7423  00FF93  00                 	db	0
  7424  00FF94                     STR_62:
  7425  00FF94  50                 	db	80	;'P'
  7426  00FF95  4F                 	db	79	;'O'
  7427  00FF96  53                 	db	83	;'S'
  7428  00FF97  31                 	db	49	;'1'
  7429  00FF98  32                 	db	50	;'2'
  7430  00FF99  00                 	db	0
  7431  00FF9A                     STR_49:
  7432  00FF9A  2A                 	db	42
  7433  00FF9B  49                 	db	73	;'I'
  7434  00FF9C  44                 	db	68	;'D'
  7435  00FF9D  4E                 	db	78	;'N'
  7436  00FF9E  3F                 	db	63	;'?'
  7437  00FF9F  00                 	db	0
  7438  00FFA0                     STR_44:
  7439  00FFA0  43                 	db	67	;'C'
  7440  00FFA1  6C                 	db	108	;'l'
  7441  00FFA2  65                 	db	101	;'e'
  7442  00FFA3  61                 	db	97	;'a'
  7443  00FFA4  72                 	db	114	;'r'
  7444  00FFA5  00                 	db	0
  7445  00FFA6                     STR_61:
  7446  00FFA6  49                 	db	73	;'I'
  7447  00FFA7  53                 	db	83	;'S'
  7448  00FFA8  4E                 	db	78	;'N'
  7449  00FFA9  53                 	db	83	;'S'
  7450  00FFAA  00                 	db	0
  7451  00FFAB                     STR_142:
  7452  00FFAB  48                 	db	72	;'H'
  7453  00FFAC  65                 	db	101	;'e'
  7454  00FFAD  6C                 	db	108	;'l'
  7455  00FFAE  70                 	db	112	;'p'
  7456  00FFAF  00                 	db	0
  7457  00FFB0                     STR_2:
  7458  00FFB0  1B                 	db	27
  7459  00FFB1  5B                 	db	91	;'['
  7460  00FFB2  32                 	db	50	;'2'
  7461  00FFB3  4A                 	db	74	;'J'
  7462  00FFB4  00                 	db	0
  7463  00FFB5                     STR_50:
  7464  00FFB5  49                 	db	73	;'I'
  7465  00FFB6  44                 	db	68	;'D'
  7466  00FFB7  4E                 	db	78	;'N'
  7467  00FFB8  00                 	db	0
  7468  00FFB9                     STR_3:
  7469  00FFB9  1B                 	db	27
  7470  00FFBA  5B                 	db	91	;'['
  7471  00FFBB  48                 	db	72	;'H'
  7472  00FFBC  00                 	db	0
  7473  00FFBD  1B                 	db	27
  7474  00FFBE  5B                 	db	91	;'['
  7475  00FFBF  73                 	db	115	;'s'
  7476  00FFC0  00                 	db	0
  7477  00FFC1  1B                 	db	27
  7478  00FFC2  5B                 	db	91	;'['
  7479  00FFC3  75                 	db	117	;'u'
  7480  00FFC4  00                 	db	0
  7481  00FFC5                     STR_1:
  7482  00FFC5  1B                 	db	27
  7483  00FFC6  5B                 	db	91	;'['
  7484  00FFC7  4B                 	db	75	;'K'
  7485  00FFC8  00                 	db	0
  7486  00FFC9                     STR_20:
  7487  00FFC9  33                 	db	51	;'3'
  7488  00FFCA  30                 	db	48	;'0'
  7489  00FFCB  00                 	db	0
  7490  00FFCC                     STR_21:
  7491  00FFCC  33                 	db	51	;'3'
  7492  00FFCD  31                 	db	49	;'1'
  7493  00FFCE  00                 	db	0
  7494  00FFCF                     STR_31:
  7495  00FFCF  34                 	db	52	;'4'
  7496  00FFD0  31                 	db	49	;'1'
  7497  00FFD1  00                 	db	0
  7498  00FFD2                     STR_22:
  7499  00FFD2  33                 	db	51	;'3'
  7500  00FFD3  32                 	db	50	;'2'
  7501  00FFD4  00                 	db	0
  7502  00FFD5                     STR_32:
  7503  00FFD5  34                 	db	52	;'4'
  7504  00FFD6  32                 	db	50	;'2'
  7505  00FFD7  00                 	db	0
  7506  00FFD8                     STR_23:
  7507  00FFD8  33                 	db	51	;'3'
  7508  00FFD9  33                 	db	51	;'3'
  7509  00FFDA  00                 	db	0
  7510  00FFDB                     STR_33:
  7511  00FFDB  34                 	db	52	;'4'
  7512  00FFDC  33                 	db	51	;'3'
  7513  00FFDD  00                 	db	0
  7514  00FFDE                     STR_24:
  7515  00FFDE  33                 	db	51	;'3'
  7516  00FFDF  34                 	db	52	;'4'
  7517  00FFE0  00                 	db	0
  7518  00FFE1                     STR_34:
  7519  00FFE1  34                 	db	52	;'4'
  7520  00FFE2  34                 	db	52	;'4'
  7521  00FFE3  00                 	db	0
  7522  00FFE4                     STR_25:
  7523  00FFE4  33                 	db	51	;'3'
  7524  00FFE5  35                 	db	53	;'5'
  7525  00FFE6  00                 	db	0
  7526  00FFE7                     STR_35:
  7527  00FFE7  34                 	db	52	;'4'
  7528  00FFE8  35                 	db	53	;'5'
  7529  00FFE9  00                 	db	0
  7530  00FFEA                     STR_26:
  7531  00FFEA  33                 	db	51	;'3'
  7532  00FFEB  36                 	db	54	;'6'
  7533  00FFEC  00                 	db	0
  7534  00FFED                     STR_36:
  7535  00FFED  34                 	db	52	;'4'
  7536  00FFEE  36                 	db	54	;'6'
  7537  00FFEF  00                 	db	0
  7538  00FFF0                     STR_27:
  7539  00FFF0  33                 	db	51	;'3'
  7540  00FFF1  37                 	db	55	;'7'
  7541  00FFF2  00                 	db	0
  7542  00FFF3                     STR_37:
  7543  00FFF3  34                 	db	52	;'4'
  7544  00FFF4  37                 	db	55	;'7'
  7545  00FFF5  00                 	db	0
  7546  00FFF6                     STR_11:
  7547  00FFF6  1B                 	db	27
  7548  00FFF7  5B                 	db	91	;'['
  7549  00FFF8  00                 	db	0
  7550  00FFF9                     STR_17:
  7551  00FFF9  38                 	db	56	;'8'
  7552  00FFFA  00                 	db	0
  7553  00FFFB                     STR_19:
  7554  00FFFB  3B                 	db	59	;';'
  7555  00FFFC  00                 	db	0
  7556  00FFFD                     STR_39:
  7557  00FFFD  6D                 	db	109	;'m'
  7558  00FFFE  00                 	db	0
  7559  0000                     
  7560                           ; #config settings
  7561  00FFFF  00                 	db	0	; dummy byte at the end
  7562  0000                     
  7563                           	psect	nvBANK2
  7564  0002F7                     __pnvBANK2:
  7565                           	opt stack 0
  7566  0002F7                     _reset_cause:
  7567                           	opt stack 0
  7568  0002F7                     	ds	1
  7569  0000                     _HLVDCON0bits	set	3778
  7570  0000                     _HLVDCON0	set	3778
  7571  0000                     _HLVDCON1	set	3779
  7572  0000                     _PIR8bits	set	3643
  7573  0000                     _FVRCONbits	set	3780
  7574  0000                     _FVRCON	set	3780
  7575  0000                     _RC2REG	set	3825
  7576  0000                     _RC2STAbits	set	3829
  7577  0000                     _TX2REG	set	3826
  7578  0000                     _TX2STAbits	set	3830
  7579  0000                     _SP2BRGH	set	3828
  7580  0000                     _SP2BRGL	set	3827
  7581  0000                     _TX2STA	set	3830
  7582  0000                     _RC2STA	set	3829
  7583  0000                     _BAUD2CON	set	3831
  7584  0000                     _PIR2bits	set	3637
  7585  0000                     _PIE2bits	set	3627
  7586  0000                     _PIR1bits	set	3636
  7587  0000                     _PIE1bits	set	3626
  7588  0000                     _PIR5bits	set	3640
  7589  0000                     _PIE5bits	set	3630
  7590  0000                     _PIR3bits	set	3638
  7591  0000                     _PIE3bits	set	3628
  7592  0000                     _IPR2bits	set	3617
  7593  0000                     _IPR1bits	set	3616
  7594  0000                     _IPR5bits	set	3620
  7595  0000                     _IPR3bits	set	3618
  7596  0000                     _RX2PPS	set	3601
  7597  0000                     _RG7PPS	set	3721
  7598  0000                     _SLRCONH	set	3774
  7599  0000                     _SLRCONG	set	3769
  7600  0000                     _SLRCONF	set	3761
  7601  0000                     _SLRCONE	set	3756
  7602  0000                     _SLRCOND	set	3748
  7603  0000                     _SLRCONC	set	3743
  7604  0000                     _SLRCONB	set	3735
  7605  0000                     _SLRCONA	set	3727
  7606  0000                     _ODCOND	set	3749
  7607  0000                     _ODCONC	set	3744
  7608  0000                     _ODCONH	set	3775
  7609  0000                     _ODCONB	set	3736
  7610  0000                     _ODCONG	set	3770
  7611  0000                     _ODCONA	set	3728
  7612  0000                     _ODCONF	set	3762
  7613  0000                     _ODCONE	set	3757
  7614  0000                     _WPUH	set	3776
  7615  0000                     _WPUC	set	3745
  7616  0000                     _WPUA	set	3729
  7617  0000                     _WPUG	set	3771
  7618  0000                     _WPUB	set	3737
  7619  0000                     _WPUE	set	3758
  7620  0000                     _WPUF	set	3763
  7621  0000                     _WPUD	set	3750
  7622  0000                     _ANSELA	set	3730
  7623  0000                     _ANSELF	set	3764
  7624  0000                     _ANSELG	set	3772
  7625  0000                     _ANSELE	set	3759
  7626  0000                     _ANSELB	set	3738
  7627  0000                     _ANSELD	set	3751
  7628  0000                     _PMD5	set	3665
  7629  0000                     _PMD4	set	3664
  7630  0000                     _PMD3	set	3663
  7631  0000                     _PMD2	set	3662
  7632  0000                     _PMD1	set	3661
  7633  0000                     _PMD0	set	3660
  7634  0000                     _OSCTUNE	set	3656
  7635  0000                     _OSCFRQ	set	3657
  7636  0000                     _OSCEN	set	3655
  7637  0000                     _OSCCON3	set	3653
  7638  0000                     _OSCCON1	set	3651
  7639  0000                     _PLLR	set	29232
  7640  0000                     _T7GCONbits	set	3889
  7641  0000                     _T7CONbits	set	3888
  7642  0000                     _T7CON	set	3888
  7643  0000                     _TMR7L	set	3886
  7644  0000                     _TMR7H	set	3887
  7645  0000                     _T7CLK	set	3891
  7646  0000                     _T7GATE	set	3890
  7647  0000                     _T7GCON	set	3889
  7648  0000                     _ADCON1bits	set	3929
  7649  0000                     _ADCON2bits	set	3930
  7650  0000                     _ADPRE	set	3934
  7651  0000                     _ADCON3bits	set	3931
  7652  0000                     _ADACQ	set	3932
  7653  0000                     _ADCLK	set	3927
  7654  0000                     _ADACT	set	3926
  7655  0000                     _ADREF	set	3928
  7656  0000                     _ADCON3	set	3931
  7657  0000                     _ADCON2	set	3930
  7658  0000                     _ADCON1	set	3929
  7659  0000                     _ADCAP	set	3933
  7660  0000                     _ADPCH	set	3935
  7661  0000                     _PCON0bits	set	4055
  7662  0000                     _LATGbits	set	3967
  7663  0000                     _NVMDAT	set	3958
  7664  0000                     _NVMADRL	set	3956
  7665  0000                     _NVMADRH	set	3957
  7666  0000                     _NVMCON2	set	3960
  7667  0000                     _TABLAT	set	4085
  7668  0000                     _TBLPTRL	set	4086
  7669  0000                     _TBLPTRH	set	4087
  7670  0000                     _TBLPTRU	set	4088
  7671  0000                     _NVMCON1bits	set	3959
  7672  0000                     _T5GCONbits	set	4036
  7673  0000                     _T5CONbits	set	4035
  7674  0000                     _T5CON	set	4035
  7675  0000                     _TMR5L	set	4033
  7676  0000                     _TMR5H	set	4034
  7677  0000                     _T5CLK	set	4038
  7678  0000                     _T5GATE	set	4037
  7679  0000                     _T5GCON	set	4036
  7680  0000                     _ADERRL	set	3950
  7681  0000                     _ADERRH	set	3951
  7682  0000                     _ADPREVL	set	3937
  7683  0000                     _ADPREVH	set	3938
  7684  0000                     _ADFLTRL	set	3954
  7685  0000                     _ADFLTRH	set	3955
  7686  0000                     _ADSTATbits	set	3941
  7687  0000                     _ADACCL	set	3952
  7688  0000                     _ADACCH	set	3953
  7689  0000                     _ADCNT	set	3943
  7690  0000                     _ADRESL	set	3939
  7691  0000                     _ADRESH	set	3940
  7692  0000                     _ADCON0bits	set	3936
  7693  0000                     _ADCON0	set	3936
  7694  0000                     _ADSTAT	set	3941
  7695  0000                     _ADRPT	set	3942
  7696  0000                     _ADSTPTH	set	3945
  7697  0000                     _ADSTPTL	set	3944
  7698  0000                     _ADUTHH	set	3949
  7699  0000                     _ADUTHL	set	3948
  7700  0000                     _ADLTHH	set	3947
  7701  0000                     _ADLTHL	set	3946
  7702  0000                     _LATFbits	set	3966
  7703  0000                     _PR6	set	4016
  7704  0000                     _TMR6	set	4015
  7705  0000                     _T6CONbits	set	4017
  7706  0000                     _T6RSTbits	set	4020
  7707  0000                     _T6HLTbits	set	4018
  7708  0000                     _T6CON	set	4017
  7709  0000                     _T6TMR	set	4015
  7710  0000                     _T6PR	set	4016
  7711  0000                     _T6RST	set	4020
  7712  0000                     _T6HLT	set	4018
  7713  0000                     _T6CLKCON	set	4019
  7714  0000                     _INTCONbits	set	4082
  7715  0000                     _TRISD	set	3972
  7716  0000                     _TRISC	set	3971
  7717  0000                     _TRISH	set	3976
  7718  0000                     _TRISB	set	3970
  7719  0000                     _TRISG	set	3975
  7720  0000                     _TRISA	set	3969
  7721  0000                     _TRISF	set	3974
  7722  0000                     _TRISE	set	3973
  7723  0000                     _LATH	set	3968
  7724  0000                     _LATC	set	3963
  7725  0000                     _LATG	set	3967
  7726  0000                     _LATB	set	3962
  7727  0000                     _LATF	set	3966
  7728  0000                     _LATA	set	3961
  7729  0000                     _LATD	set	3964
  7730  0000                     _LATE	set	3965
  7731                           
  7732                           	psect	cinit
  7733  017F32                     __pcinit:
  7734                           	opt stack 0
  7735  017F32                     start_initialization:
  7736                           	opt stack 0
  7737  017F32                     __initialization:
  7738                           	opt stack 0
  7739                           
  7740                           ; Initialize objects allocated to BANK2 (36 bytes)
  7741                           ; load TBLPTR registers with __pidataBANK2
  7742  017F32  0E9E               	movlw	low __pidataBANK2
  7743  017F34  6EF6               	movwf	tblptrl,c
  7744  017F36  0E90               	movlw	high __pidataBANK2
  7745  017F38  6EF7               	movwf	tblptrh,c
  7746  017F3A  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  7747  017F3C  6EF8               	movwf	tblptru,c
  7748  017F3E  EE02  F0D3         	lfsr	0,__pdataBANK2
  7749  017F42  EE10 F024          	lfsr	1,36
  7750  017F46                     copy_data0:
  7751  017F46  0009               	tblrd		*+
  7752  017F48  CFF5 FFEE          	movff	tablat,postinc0
  7753  017F4C  50E5               	movf	postdec1,w,c
  7754  017F4E  50E1               	movf	fsr1l,w,c
  7755  017F50  E1FA               	bnz	copy_data0
  7756                           
  7757                           ; Initialize objects allocated to BANK1 (1 bytes)
  7758                           ; load TBLPTR registers with __pidataBANK1
  7759  017F52  0E0C               	movlw	low __pidataBANK1
  7760  017F54  6EF6               	movwf	tblptrl,c
  7761  017F56  0E93               	movlw	high __pidataBANK1
  7762  017F58  6EF7               	movwf	tblptrh,c
  7763  017F5A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  7764  017F5C  6EF8               	movwf	tblptru,c
  7765  017F5E  0009               	tblrd		*+	;fetch initializer
  7766  017F60  CFF5 F1E8          	movff	tablat,__pdataBANK1
  7767                           
  7768                           ; Initialize objects allocated to BANK0 (6 bytes)
  7769                           ; load TBLPTR registers with __pidataBANK0
  7770  017F64  0EE8               	movlw	low __pidataBANK0
  7771  017F66  6EF6               	movwf	tblptrl,c
  7772  017F68  0E92               	movlw	high __pidataBANK0
  7773  017F6A  6EF7               	movwf	tblptrh,c
  7774  017F6C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  7775  017F6E  6EF8               	movwf	tblptru,c
  7776  017F70  EE00  F0F0         	lfsr	0,__pdataBANK0
  7777  017F74  EE10 F006          	lfsr	1,6
  7778  017F78                     copy_data1:
  7779  017F78  0009               	tblrd		*+
  7780  017F7A  CFF5 FFEE          	movff	tablat,postinc0
  7781  017F7E  50E5               	movf	postdec1,w,c
  7782  017F80  50E1               	movf	fsr1l,w,c
  7783  017F82  E1FA               	bnz	copy_data1
  7784                           
  7785                           ; Clear objects allocated to BANK3 (192 bytes)
  7786  017F84  EE03  F000         	lfsr	0,__pbssBANK3
  7787  017F88  0EC0               	movlw	192
  7788  017F8A                     clear_0:
  7789  017F8A  6AEE               	clrf	postinc0,c
  7790  017F8C  06E8               	decf	wreg,f,c
  7791  017F8E  E1FD               	bnz	clear_0
  7792                           
  7793                           ; Clear objects allocated to BANK2 (128 bytes)
  7794  017F90  EE02  F000         	lfsr	0,__pbssBANK2
  7795  017F94  0E80               	movlw	128
  7796  017F96                     clear_1:
  7797  017F96  6AEE               	clrf	postinc0,c
  7798  017F98  06E8               	decf	wreg,f,c
  7799  017F9A  E1FD               	bnz	clear_1
  7800                           
  7801                           ; Clear objects allocated to BANK1 (45 bytes)
  7802  017F9C  EE01  F0BB         	lfsr	0,__pbssBANK1
  7803  017FA0  0E2D               	movlw	45
  7804  017FA2                     clear_2:
  7805  017FA2  6AEE               	clrf	postinc0,c
  7806  017FA4  06E8               	decf	wreg,f,c
  7807  017FA6  E1FD               	bnz	clear_2
  7808                           
  7809                           ; Clear objects allocated to BITBANK0 (1 bytes)
  7810  017FA8  0100               	movlb	0
  7811  017FAA  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  7812                           
  7813                           ; Clear objects allocated to BANK0 (5 bytes)
  7814  017FAC  0100               	movlb	0
  7815  017FAE  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
  7816  017FB0  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
  7817  017FB2  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
  7818  017FB4  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
  7819  017FB6  6BF6               	clrf	__pbssBANK0& (0+255),b
  7820                           
  7821                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  7822  017FB8  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  7823  017FBA                     end_of_initialization:
  7824                           	opt stack 0
  7825  017FBA                     __end_of__initialization:
  7826                           	opt stack 0
  7827  017FBA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7828  017FBC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7829  017FBE  0100               	movlb	0
  7830  017FC0  EFE2  F0BF         	goto	_main	;jump to C main() function
  7831                           tblptru	equ	0xFF8
  7832                           tblptrh	equ	0xFF7
  7833                           tblptrl	equ	0xFF6
  7834                           tablat	equ	0xFF5
  7835                           postinc0	equ	0xFEE
  7836                           wreg	equ	0xFE8
  7837                           postdec1	equ	0xFE5
  7838                           fsr1l	equ	0xFE1
  7839                           
  7840                           	psect	bitbssCOMRAM
  7841  0002F0                     __pbitbssCOMRAM:
  7842                           	opt stack 0
  7843  0002F0                     _adc_error_flag:
  7844                           	opt stack 0
  7845  0002F0                     	ds	1
  7846  0002F1                     _load_enable:
  7847                           	opt stack 0
  7848  0002F1                     	ds	1
  7849  0002F2                     _VCC_overvoltage_flag:
  7850                           	opt stack 0
  7851  0002F2                     	ds	1
  7852                           tblptru	equ	0xFF8
  7853                           tblptrh	equ	0xFF7
  7854                           tblptrl	equ	0xFF6
  7855                           tablat	equ	0xFF5
  7856                           postinc0	equ	0xFEE
  7857                           wreg	equ	0xFE8
  7858                           postdec1	equ	0xFE5
  7859                           fsr1l	equ	0xFE1
  7860                           
  7861                           	psect	bitbssBANK0
  7862  0007D8                     __pbitbssBANK0:
  7863                           	opt stack 0
  7864  0007D8                     _eusart2RxStringReady:
  7865                           	opt stack 0
  7866  0007D8                     	ds	1
  7867                           tblptru	equ	0xFF8
  7868                           tblptrh	equ	0xFF7
  7869                           tblptrl	equ	0xFF6
  7870                           tablat	equ	0xFF5
  7871                           postinc0	equ	0xFEE
  7872                           wreg	equ	0xFE8
  7873                           postdec1	equ	0xFE5
  7874                           fsr1l	equ	0xFE1
  7875                           
  7876                           	psect	bssBANK0
  7877  0000F6                     __pbssBANK0:
  7878                           	opt stack 0
  7879  0000F6                     _Ipk:
  7880                           	opt stack 0
  7881  0000F6                     	ds	4
  7882  0000FA                     _eusart2RxHead:
  7883                           	opt stack 0
  7884  0000FA                     	ds	1
  7885                           tblptru	equ	0xFF8
  7886                           tblptrh	equ	0xFF7
  7887                           tblptrl	equ	0xFF6
  7888                           tablat	equ	0xFF5
  7889                           postinc0	equ	0xFEE
  7890                           wreg	equ	0xFE8
  7891                           postdec1	equ	0xFE5
  7892                           fsr1l	equ	0xFE1
  7893                           
  7894                           	psect	dataBANK0
  7895  0000F0                     __pdataBANK0:
  7896                           	opt stack 0
  7897  0000F0                     _dimming_period:
  7898                           	opt stack 0
  7899  0000F0                     	ds	2
  7900  0000F2                     _TRIAC_Firing_Angle:
  7901                           	opt stack 0
  7902  0000F2                     	ds	4
  7903                           tblptru	equ	0xFF8
  7904                           tblptrh	equ	0xFF7
  7905                           tblptrl	equ	0xFF6
  7906                           tablat	equ	0xFF5
  7907                           postinc0	equ	0xFEE
  7908                           wreg	equ	0xFE8
  7909                           postdec1	equ	0xFE5
  7910                           fsr1l	equ	0xFE1
  7911                           
  7912                           	psect	bssBANK1
  7913  0001BB                     __pbssBANK1:
  7914                           	opt stack 0
  7915  0001BB                     _Avg_Power:
  7916                           	opt stack 0
  7917  0001BB                     	ds	4
  7918  0001BF                     _Vrms:
  7919                           	opt stack 0
  7920  0001BF                     	ds	4
  7921  0001C3                     _Irms:
  7922                           	opt stack 0
  7923  0001C3                     	ds	4
  7924  0001C7                     _Imeas:
  7925                           	opt stack 0
  7926  0001C7                     	ds	4
  7927  0001CB                     _Temp_ADC_Result:
  7928                           	opt stack 0
  7929  0001CB                     	ds	4
  7930  0001CF                     _POS12_ADC_Result:
  7931                           	opt stack 0
  7932  0001CF                     	ds	4
  7933  0001D3                     _POS3P3_ADC_Result:
  7934                           	opt stack 0
  7935  0001D3                     	ds	4
  7936  0001D7                     _AVSS_ADC_Result:
  7937                           	opt stack 0
  7938  0001D7                     	ds	4
  7939  0001DB                     _timer5ReloadVal:
  7940                           	opt stack 0
  7941  0001DB                     	ds	2
  7942  0001DD                     _timer7ReloadVal:
  7943                           	opt stack 0
  7944  0001DD                     	ds	2
  7945  0001DF                     _eusart2RxCount:
  7946                           	opt stack 0
  7947  0001DF                     	ds	1
  7948  0001E0                     _eusart2RxTail:
  7949                           	opt stack 0
  7950  0001E0                     	ds	1
  7951  0001E1                     _eusart2TxBufferRemaining:
  7952                           	opt stack 0
  7953  0001E1                     	ds	1
  7954  0001E2                     _eusart2TxTail:
  7955                           	opt stack 0
  7956  0001E2                     	ds	1
  7957  0001E3                     _eusart2TxHead:
  7958                           	opt stack 0
  7959  0001E3                     	ds	1
  7960  0001E4                     _FVR_ADC_Result:
  7961                           	opt stack 0
  7962  0001E4                     	ds	4
  7963                           tblptru	equ	0xFF8
  7964                           tblptrh	equ	0xFF7
  7965                           tblptrl	equ	0xFF6
  7966                           tablat	equ	0xFF5
  7967                           postinc0	equ	0xFEE
  7968                           wreg	equ	0xFE8
  7969                           postdec1	equ	0xFE5
  7970                           fsr1l	equ	0xFE1
  7971                           
  7972                           	psect	dataBANK1
  7973  0001E8                     __pdataBANK1:
  7974                           	opt stack 0
  7975  0001E8                     _next_channel:
  7976                           	opt stack 0
  7977  0001E8                     	ds	1
  7978                           tblptru	equ	0xFF8
  7979                           tblptrh	equ	0xFF7
  7980                           tblptrl	equ	0xFF6
  7981                           tablat	equ	0xFF5
  7982                           postinc0	equ	0xFEE
  7983                           wreg	equ	0xFE8
  7984                           postdec1	equ	0xFE5
  7985                           fsr1l	equ	0xFE1
  7986                           
  7987                           	psect	bssBANK2
  7988  000200                     __pbssBANK2:
  7989                           	opt stack 0
  7990  000200                     _max_FVR_ADC_Result:
  7991                           	opt stack 0
  7992  000200                     	ds	4
  7993  000204                     _max_Temp_ADC_Result:
  7994                           	opt stack 0
  7995  000204                     	ds	4
  7996  000208                     _max_POS12_ADC_Result:
  7997                           	opt stack 0
  7998  000208                     	ds	4
  7999  00020C                     _max_POS3P3_ADC_Result:
  8000                           	opt stack 0
  8001  00020C                     	ds	4
  8002  000210                     _max_Power:
  8003                           	opt stack 0
  8004  000210                     	ds	4
  8005  000214                     _max_Irms:
  8006                           	opt stack 0
  8007  000214                     	ds	4
  8008  000218                     _load_on_time:
  8009                           	opt stack 0
  8010  000218                     	ds	4
  8011  00021C                     _dev_on_time:
  8012                           	opt stack 0
  8013  00021C                     	ds	4
  8014  000220                     _Vpk:
  8015                           	opt stack 0
  8016  000220                     	ds	4
  8017  000224                     _ADC_Result_Scaling:
  8018                           	opt stack 0
  8019  000224                     	ds	4
  8020  000228                     _TMR5_InterruptHandler:
  8021                           	opt stack 0
  8022  000228                     	ds	3
  8023  00022B                     _TMR7_InterruptHandler:
  8024                           	opt stack 0
  8025  00022B                     	ds	3
  8026  00022E                     _ADCC_ADTI_InterruptHandler:
  8027                           	opt stack 0
  8028  00022E                     	ds	3
  8029  000231                     _TMR6_InterruptHandler:
  8030                           	opt stack 0
  8031  000231                     	ds	3
  8032  000234                     _EUSART2_RxDefaultInterruptHandler:
  8033                           	opt stack 0
  8034  000234                     	ds	3
  8035  000237                     _EUSART2_TxDefaultInterruptHandler:
  8036                           	opt stack 0
  8037  000237                     	ds	3
  8038  00023A                     _errno:
  8039                           	opt stack 0
  8040  00023A                     	ds	2
  8041  00023C                     _current_adc_channel:
  8042                           	opt stack 0
  8043  00023C                     	ds	1
  8044  00023D                     _background_color:
  8045                           	opt stack 0
  8046  00023D                     	ds	1
  8047  00023E                     _foreground_color:
  8048                           	opt stack 0
  8049  00023E                     	ds	1
  8050  00023F                     _attribute:
  8051                           	opt stack 0
  8052  00023F                     	ds	1
  8053  000240                     _line:
  8054                           	opt stack 0
  8055  000240                     	ds	64
  8056                           tblptru	equ	0xFF8
  8057                           tblptrh	equ	0xFF7
  8058                           tblptrl	equ	0xFF6
  8059                           tablat	equ	0xFF5
  8060                           postinc0	equ	0xFEE
  8061                           wreg	equ	0xFE8
  8062                           postdec1	equ	0xFE5
  8063                           fsr1l	equ	0xFE1
  8064                           
  8065                           	psect	dataBANK2
  8066  0002D3                     __pdataBANK2:
  8067                           	opt stack 0
  8068  0002D3                     getCauseOfResetString@strings:
  8069                           	opt stack 0
  8070  0002D3                     	ds	18
  8071  0002E5                     getDeviceIDString@F17550:
  8072                           	opt stack 0
  8073  0002E5                     	ds	6
  8074  0002EB                     _Irms_offset:
  8075                           	opt stack 0
  8076  0002EB                     	ds	4
  8077  0002EF                     _Vpk_const:
  8078                           	opt stack 0
  8079  0002EF                     	ds	4
  8080  0002F3                     _Temp_ADC_Offset:
  8081                           	opt stack 0
  8082  0002F3                     	ds	4
  8083                           tblptru	equ	0xFF8
  8084                           tblptrh	equ	0xFF7
  8085                           tblptrl	equ	0xFF6
  8086                           tablat	equ	0xFF5
  8087                           postinc0	equ	0xFEE
  8088                           wreg	equ	0xFE8
  8089                           postdec1	equ	0xFE5
  8090                           fsr1l	equ	0xFE1
  8091                           
  8092                           	psect	bssBANK3
  8093  000300                     __pbssBANK3:
  8094                           	opt stack 0
  8095  000300                     _eusart2TxBuffer:
  8096                           	opt stack 0
  8097  000300                     	ds	128
  8098  000380                     _eusart2RxBuffer:
  8099                           	opt stack 0
  8100  000380                     	ds	64
  8101                           tblptru	equ	0xFF8
  8102                           tblptrh	equ	0xFF7
  8103                           tblptrl	equ	0xFF6
  8104                           tablat	equ	0xFF5
  8105                           postinc0	equ	0xFEE
  8106                           wreg	equ	0xFE8
  8107                           postdec1	equ	0xFE5
  8108                           fsr1l	equ	0xFE1
  8109                           
  8110                           	psect	cstackBANK2
  8111  000280                     __pcstackBANK2:
  8112                           	opt stack 0
  8113  000280                     terminal_textAttributes@foreground_color:
  8114                           	opt stack 0
  8115                           
  8116                           ; 1 bytes @ 0x0
  8117  000280                     	ds	1
  8118  000281                     terminal_textAttributes@output_buff:
  8119                           	opt stack 0
  8120                           
  8121                           ; 15 bytes @ 0x1
  8122  000281                     	ds	15
  8123  000290                     ringBufferLUT@channel_name:
  8124                           	opt stack 0
  8125                           
  8126                           ; 22 bytes @ 0x10
  8127  000290                     	ds	22
  8128  0002A6                     ringBufferLUT@angle_degrees:
  8129                           	opt stack 0
  8130                           
  8131                           ; 4 bytes @ 0x26
  8132  0002A6                     	ds	4
  8133  0002AA                     ringBufferLUT@max_current_print:
  8134                           	opt stack 0
  8135                           
  8136                           ; 4 bytes @ 0x2A
  8137  0002AA                     	ds	4
  8138  0002AE                     ringBufferLUT@max_Power_print:
  8139                           	opt stack 0
  8140                           
  8141                           ; 4 bytes @ 0x2E
  8142  0002AE                     	ds	4
  8143  0002B2                     ringBufferLUT@max_voltage_print:
  8144                           	opt stack 0
  8145                           
  8146                           ; 4 bytes @ 0x32
  8147  0002B2                     	ds	4
  8148  0002B6                     ringBufferLUT@max_voltage_print_2750:
  8149                           	opt stack 0
  8150                           
  8151                           ; 4 bytes @ 0x36
  8152  0002B6                     	ds	4
  8153  0002BA                     ringBufferLUT@max_temp_print:
  8154                           	opt stack 0
  8155                           
  8156                           ; 4 bytes @ 0x3A
  8157  0002BA                     	ds	4
  8158  0002BE                     ringBufferLUT@max_voltage_print_2756:
  8159                           	opt stack 0
  8160                           
  8161                           ; 4 bytes @ 0x3E
  8162  0002BE                     	ds	4
  8163  0002C2                     ringBufferLUT@arg_buff:
  8164                           	opt stack 0
  8165                           
  8166                           ; 3 bytes @ 0x42
  8167  0002C2                     	ds	3
  8168  0002C5                     ringBufferLUT@index:
  8169                           	opt stack 0
  8170                           
  8171                           ; 2 bytes @ 0x45
  8172  0002C5                     	ds	2
  8173  0002C7                     ringBufferLUT@percentage:
  8174                           	opt stack 0
  8175                           
  8176                           ; 2 bytes @ 0x47
  8177  0002C7                     	ds	2
  8178  0002C9                     ringBufferLUT@userID:
  8179                           	opt stack 0
  8180                           
  8181                           ; 2 bytes @ 0x49
  8182  0002C9                     	ds	2
  8183  0002CB                     terminal_ringBufferPull@charNumber:
  8184                           	opt stack 0
  8185                           
  8186                           ; 2 bytes @ 0x4B
  8187  0002CB                     	ds	2
  8188  0002CD                     terminal_ringBufferPull@index_2424:
  8189                           	opt stack 0
  8190                           
  8191                           ; 2 bytes @ 0x4D
  8192  0002CD                     	ds	2
  8193  0002CF                     terminal_ringBufferPull@index:
  8194                           	opt stack 0
  8195                           
  8196                           ; 2 bytes @ 0x4F
  8197  0002CF                     	ds	2
  8198  0002D1                     ??_main:
  8199                           
  8200                           ; 1 bytes @ 0x51
  8201  0002D1                     	ds	2
  8202                           tblptru	equ	0xFF8
  8203                           tblptrh	equ	0xFF7
  8204                           tblptrl	equ	0xFF6
  8205                           tablat	equ	0xFF5
  8206                           postinc0	equ	0xFEE
  8207                           wreg	equ	0xFE8
  8208                           postdec1	equ	0xFE5
  8209                           fsr1l	equ	0xFE1
  8210                           
  8211                           	psect	cstackBANK1
  8212  000100                     __pcstackBANK1:
  8213                           	opt stack 0
  8214  000100                     ??_heartbeatTimerCallback:
  8215  000100                     ADCC_StartConversion@channel:
  8216                           	opt stack 0
  8217  000100                     TMR7_WriteTimer@timerVal:
  8218                           	opt stack 0
  8219                           
  8220                           ; 2 bytes @ 0x0
  8221  000100                     	ds	1
  8222  000101                     
  8223                           ; 1 bytes @ 0x1
  8224  000101                     	ds	1
  8225  000102                     ??_INTERRUPT_InterruptManagerLow:
  8226  000102                     
  8227                           ; 1 bytes @ 0x2
  8228  000102                     	ds	21
  8229  000117                     ??_isdigit:
  8230  000117                     ?_strlen:
  8231                           	opt stack 0
  8232  000117                     ?_strcmp:
  8233                           	opt stack 0
  8234  000117                     ?_getCauseOfResetString:
  8235                           	opt stack 0
  8236  000117                     ?_strchr:
  8237                           	opt stack 0
  8238  000117                     ?___wmul:
  8239                           	opt stack 0
  8240  000117                     ?___awmod:
  8241                           	opt stack 0
  8242  000117                     ?__tdiv_to_l_:
  8243                           	opt stack 0
  8244  000117                     ?__div_to_l_:
  8245                           	opt stack 0
  8246  000117                     ?___lldiv:
  8247                           	opt stack 0
  8248  000117                     ?___xxtofl:
  8249                           	opt stack 0
  8250  000117                     EUSART2_Read@readValue:
  8251                           	opt stack 0
  8252  000117                     EUSART2_Write@txData:
  8253                           	opt stack 0
  8254  000117                     getCauseOfReset@return_reset_cause:
  8255                           	opt stack 0
  8256  000117                     DATAEE_WriteByte@bAdd:
  8257                           	opt stack 0
  8258  000117                     DATAEE_ReadByte@bAdd:
  8259                           	opt stack 0
  8260  000117                     ___wmul@multiplier:
  8261                           	opt stack 0
  8262  000117                     ___awmod@dividend:
  8263                           	opt stack 0
  8264  000117                     strcat@to:
  8265                           	opt stack 0
  8266  000117                     strcmp@s1:
  8267                           	opt stack 0
  8268  000117                     strcpy@to:
  8269                           	opt stack 0
  8270  000117                     strlen@s:
  8271                           	opt stack 0
  8272  000117                     strncpy@to:
  8273                           	opt stack 0
  8274  000117                     strchr@ptr:
  8275                           	opt stack 0
  8276  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  8277                           	opt stack 0
  8278  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  8279                           	opt stack 0
  8280  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  8281                           	opt stack 0
  8282  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
  8283                           	opt stack 0
  8284  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  8285                           	opt stack 0
  8286  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  8287                           	opt stack 0
  8288  000117                     __tdiv_to_l_@f1:
  8289                           	opt stack 0
  8290  000117                     FLASH_ReadByte@flashAddr:
  8291                           	opt stack 0
  8292  000117                     __div_to_l_@f1:
  8293                           	opt stack 0
  8294  000117                     ___flge@ff1:
  8295                           	opt stack 0
  8296  000117                     ___lldiv@dividend:
  8297                           	opt stack 0
  8298  000117                     ___xxtofl@val:
  8299                           	opt stack 0
  8300                           
  8301                           ; 4 bytes @ 0x17
  8302  000117                     	ds	1
  8303  000118                     putch@txData:
  8304                           	opt stack 0
  8305  000118                     _isdigit$3264:
  8306                           	opt stack 0
  8307                           
  8308                           ; 1 bytes @ 0x18
  8309  000118                     	ds	1
  8310  000119                     ??_strlen:
  8311  000119                     ?_readDoubleFromEEPROM:
  8312                           	opt stack 0
  8313  000119                     DATAEE_WriteByte@bData:
  8314                           	opt stack 0
  8315  000119                     getCauseOfResetString@r:
  8316                           	opt stack 0
  8317  000119                     isdigit@c:
  8318                           	opt stack 0
  8319  000119                     readDoubleFromEEPROM@starting_address:
  8320                           	opt stack 0
  8321  000119                     ___wmul@multiplicand:
  8322                           	opt stack 0
  8323  000119                     ___awmod@divisor:
  8324                           	opt stack 0
  8325  000119                     strcat@from:
  8326                           	opt stack 0
  8327  000119                     strcmp@s2:
  8328                           	opt stack 0
  8329  000119                     strcpy@from:
  8330                           	opt stack 0
  8331  000119                     strncpy@from:
  8332                           	opt stack 0
  8333  000119                     strchr@chr:
  8334                           	opt stack 0
  8335                           
  8336                           ; 2 bytes @ 0x19
  8337  000119                     	ds	1
  8338  00011A                     ??_TMR7_Initialize:
  8339  00011A                     ??_TMR5_Initialize:
  8340  00011A                     DATAEE_WriteByte@GIEBitValue:
  8341                           	opt stack 0
  8342  00011A                     __tdiv_to_l_@f2:
  8343                           	opt stack 0
  8344                           
  8345                           ; 3 bytes @ 0x1A
  8346  00011A                     	ds	1
  8347  00011B                     ??_strcmp:
  8348  00011B                     ??___xxtofl:
  8349  00011B                     ?_FLASH_ReadWord:
  8350                           	opt stack 0
  8351  00011B                     ___awmod@counter:
  8352                           	opt stack 0
  8353  00011B                     ___wmul@product:
  8354                           	opt stack 0
  8355  00011B                     strcat@cp:
  8356                           	opt stack 0
  8357  00011B                     strcpy@cp:
  8358                           	opt stack 0
  8359  00011B                     strlen@cp:
  8360                           	opt stack 0
  8361  00011B                     strncpy@size:
  8362                           	opt stack 0
  8363  00011B                     FLASH_ReadWord@flashAddr:
  8364                           	opt stack 0
  8365  00011B                     writeDoubleToEEPROM@input_double:
  8366                           	opt stack 0
  8367  00011B                     __div_to_l_@f2:
  8368                           	opt stack 0
  8369  00011B                     ___flge@ff2:
  8370                           	opt stack 0
  8371  00011B                     ___lldiv@divisor:
  8372                           	opt stack 0
  8373                           
  8374                           ; 4 bytes @ 0x1B
  8375  00011B                     	ds	1
  8376  00011C                     ___awmod@sign:
  8377                           	opt stack 0
  8378  00011C                     strcmp@r:
  8379                           	opt stack 0
  8380                           
  8381                           ; 1 bytes @ 0x1C
  8382  00011C                     	ds	1
  8383  00011D                     ??__tdiv_to_l_:
  8384  00011D                     ?_atoi:
  8385                           	opt stack 0
  8386  00011D                     ?_strncmp:
  8387                           	opt stack 0
  8388  00011D                     ?___awdiv:
  8389                           	opt stack 0
  8390  00011D                     atoi@s:
  8391                           	opt stack 0
  8392  00011D                     ___awdiv@dividend:
  8393                           	opt stack 0
  8394  00011D                     strncpy@cp:
  8395                           	opt stack 0
  8396  00011D                     strncmp@s1:
  8397                           	opt stack 0
  8398  00011D                     readDoubleFromEEPROM@output_data:
  8399                           	opt stack 0
  8400                           
  8401                           ; 4 bytes @ 0x1D
  8402  00011D                     	ds	2
  8403  00011F                     ??_atoi:
  8404  00011F                     ??_FLASH_ReadWord:
  8405  00011F                     ??___flge:
  8406  00011F                     ___lldiv@counter:
  8407                           	opt stack 0
  8408  00011F                     ___xxtofl@sign:
  8409                           	opt stack 0
  8410  00011F                     writeDoubleToEEPROM@starting_address:
  8411                           	opt stack 0
  8412  00011F                     ___awdiv@divisor:
  8413                           	opt stack 0
  8414  00011F                     strncmp@s2:
  8415                           	opt stack 0
  8416  00011F                     __div_to_l_@quot:
  8417                           	opt stack 0
  8418                           
  8419                           ; 4 bytes @ 0x1F
  8420  00011F                     	ds	1
  8421  000120                     ___xxtofl@exp:
  8422                           	opt stack 0
  8423  000120                     __tdiv_to_l_@quot:
  8424                           	opt stack 0
  8425  000120                     ___lldiv@quotient:
  8426                           	opt stack 0
  8427                           
  8428                           ; 4 bytes @ 0x20
  8429  000120                     	ds	1
  8430  000121                     atoi@sign:
  8431                           	opt stack 0
  8432  000121                     ___awdiv@counter:
  8433                           	opt stack 0
  8434  000121                     readDoubleFromEEPROM@byte_index:
  8435                           	opt stack 0
  8436  000121                     strncmp@len:
  8437                           	opt stack 0
  8438  000121                     writeDoubleToEEPROM@input_data:
  8439                           	opt stack 0
  8440  000121                     ___xxtofl@arg:
  8441                           	opt stack 0
  8442                           
  8443                           ; 4 bytes @ 0x21
  8444  000121                     	ds	1
  8445  000122                     ??_getMajorRevisionID:
  8446  000122                     ?_getDeviceID:
  8447                           	opt stack 0
  8448  000122                     ?_getUserID:
  8449                           	opt stack 0
  8450  000122                     ___awdiv@sign:
  8451                           	opt stack 0
  8452  000122                     getMinorRevisionID@REVID_RAW:
  8453                           	opt stack 0
  8454  000122                     atoi@a:
  8455                           	opt stack 0
  8456                           
  8457                           ; 2 bytes @ 0x22
  8458  000122                     	ds	1
  8459  000123                     ??_strncmp:
  8460  000123                     __div_to_l_@cntr:
  8461                           	opt stack 0
  8462  000123                     ___awdiv@quotient:
  8463                           	opt stack 0
  8464                           
  8465                           ; 2 bytes @ 0x23
  8466  000123                     	ds	1
  8467  000124                     ?_getDeviceIDString:
  8468                           	opt stack 0
  8469  000124                     ?___llmod:
  8470                           	opt stack 0
  8471  000124                     getUserID@inputUserID:
  8472                           	opt stack 0
  8473  000124                     __div_to_l_@exp1:
  8474                           	opt stack 0
  8475  000124                     __tdiv_to_l_@cntr:
  8476                           	opt stack 0
  8477  000124                     getDeviceIDString@inputDevID:
  8478                           	opt stack 0
  8479  000124                     ___llmod@dividend:
  8480                           	opt stack 0
  8481                           
  8482                           ; 4 bytes @ 0x24
  8483  000124                     	ds	1
  8484  000125                     ?___flneg:
  8485                           	opt stack 0
  8486  000125                     __tdiv_to_l_@exp1:
  8487                           	opt stack 0
  8488  000125                     getMajorRevisionID@REVID_RAW:
  8489                           	opt stack 0
  8490  000125                     writeDoubleToEEPROM@byte_index:
  8491                           	opt stack 0
  8492  000125                     getUserID@initialOffset:
  8493                           	opt stack 0
  8494  000125                     ___flneg@f1:
  8495                           	opt stack 0
  8496                           
  8497                           ; 4 bytes @ 0x25
  8498  000125                     	ds	1
  8499  000126                     ??_getDeviceIDString:
  8500  000126                     ?_strstr:
  8501                           	opt stack 0
  8502  000126                     strstr@s1:
  8503                           	opt stack 0
  8504                           
  8505                           ; 2 bytes @ 0x26
  8506  000126                     	ds	1
  8507  000127                     
  8508                           ; 1 bytes @ 0x27
  8509  000127                     	ds	1
  8510  000128                     strstr@s2:
  8511                           	opt stack 0
  8512  000128                     ___llmod@divisor:
  8513                           	opt stack 0
  8514  000128                     getDeviceIDString@strings:
  8515                           	opt stack 0
  8516                           
  8517                           ; 6 bytes @ 0x28
  8518  000128                     	ds	1
  8519  000129                     ?___fladd:
  8520                           	opt stack 0
  8521  000129                     getUserID@IDOffset:
  8522                           	opt stack 0
  8523  000129                     ___fladd@b:
  8524                           	opt stack 0
  8525                           
  8526                           ; 4 bytes @ 0x29
  8527  000129                     	ds	1
  8528  00012A                     
  8529                           ; 1 bytes @ 0x2A
  8530  00012A                     	ds	2
  8531  00012C                     ___llmod@counter:
  8532                           	opt stack 0
  8533                           
  8534                           ; 1 bytes @ 0x2C
  8535  00012C                     	ds	1
  8536  00012D                     ___fladd@a:
  8537                           	opt stack 0
  8538                           
  8539                           ; 4 bytes @ 0x2D
  8540  00012D                     	ds	4
  8541  000131                     ??___fladd:
  8542                           
  8543                           ; 1 bytes @ 0x31
  8544  000131                     	ds	8
  8545  000139                     ___fladd@signs:
  8546                           	opt stack 0
  8547                           
  8548                           ; 1 bytes @ 0x39
  8549  000139                     	ds	1
  8550  00013A                     ___fladd@aexp:
  8551                           	opt stack 0
  8552                           
  8553                           ; 1 bytes @ 0x3A
  8554  00013A                     	ds	1
  8555  00013B                     ___fladd@bexp:
  8556                           	opt stack 0
  8557                           
  8558                           ; 1 bytes @ 0x3B
  8559  00013B                     	ds	1
  8560  00013C                     ___fladd@grs:
  8561                           	opt stack 0
  8562                           
  8563                           ; 1 bytes @ 0x3C
  8564  00013C                     	ds	1
  8565  00013D                     ?___fldiv:
  8566                           	opt stack 0
  8567  00013D                     ?___flsub:
  8568                           	opt stack 0
  8569  00013D                     ___flsub@b:
  8570                           	opt stack 0
  8571  00013D                     ___fldiv@b:
  8572                           	opt stack 0
  8573                           
  8574                           ; 4 bytes @ 0x3D
  8575  00013D                     	ds	4
  8576  000141                     ___flsub@a:
  8577                           	opt stack 0
  8578  000141                     ___fldiv@a:
  8579                           	opt stack 0
  8580                           
  8581                           ; 4 bytes @ 0x41
  8582  000141                     	ds	4
  8583  000145                     ??___fldiv:
  8584  000145                     
  8585                           ; 1 bytes @ 0x45
  8586  000145                     	ds	4
  8587  000149                     ___fldiv@sign:
  8588                           	opt stack 0
  8589                           
  8590                           ; 1 bytes @ 0x49
  8591  000149                     	ds	1
  8592  00014A                     ___fldiv@rem:
  8593                           	opt stack 0
  8594                           
  8595                           ; 4 bytes @ 0x4A
  8596  00014A                     	ds	4
  8597  00014E                     ___fldiv@new_exp:
  8598                           	opt stack 0
  8599                           
  8600                           ; 2 bytes @ 0x4E
  8601  00014E                     	ds	2
  8602  000150                     ___fldiv@grs:
  8603                           	opt stack 0
  8604                           
  8605                           ; 4 bytes @ 0x50
  8606  000150                     	ds	4
  8607  000154                     ___fldiv@bexp:
  8608                           	opt stack 0
  8609                           
  8610                           ; 1 bytes @ 0x54
  8611  000154                     	ds	1
  8612  000155                     ___fldiv@aexp:
  8613                           	opt stack 0
  8614                           
  8615                           ; 1 bytes @ 0x55
  8616  000155                     	ds	1
  8617  000156                     ?___flmul:
  8618                           	opt stack 0
  8619  000156                     ___flmul@b:
  8620                           	opt stack 0
  8621                           
  8622                           ; 4 bytes @ 0x56
  8623  000156                     	ds	4
  8624  00015A                     ___flmul@a:
  8625                           	opt stack 0
  8626                           
  8627                           ; 4 bytes @ 0x5A
  8628  00015A                     	ds	4
  8629  00015E                     ??___flmul:
  8630                           
  8631                           ; 1 bytes @ 0x5E
  8632  00015E                     	ds	4
  8633  000162                     ___flmul@sign:
  8634                           	opt stack 0
  8635                           
  8636                           ; 1 bytes @ 0x62
  8637  000162                     	ds	1
  8638  000163                     ___flmul@aexp:
  8639                           	opt stack 0
  8640                           
  8641                           ; 1 bytes @ 0x63
  8642  000163                     	ds	1
  8643  000164                     ___flmul@bexp:
  8644                           	opt stack 0
  8645                           
  8646                           ; 1 bytes @ 0x64
  8647  000164                     	ds	1
  8648  000165                     ___flmul@grs:
  8649                           	opt stack 0
  8650                           
  8651                           ; 4 bytes @ 0x65
  8652  000165                     	ds	4
  8653  000169                     ___flmul@prod:
  8654                           	opt stack 0
  8655                           
  8656                           ; 4 bytes @ 0x69
  8657  000169                     	ds	4
  8658  00016D                     ___flmul@temp:
  8659                           	opt stack 0
  8660                           
  8661                           ; 2 bytes @ 0x6D
  8662  00016D                     	ds	2
  8663  00016F                     ?_fround:
  8664                           	opt stack 0
  8665  00016F                     ?_scale:
  8666                           	opt stack 0
  8667                           
  8668                           ; 4 bytes @ 0x6F
  8669  00016F                     	ds	4
  8670  000173                     _fround$3981:
  8671                           	opt stack 0
  8672  000173                     _scale$3982:
  8673                           	opt stack 0
  8674                           
  8675                           ; 4 bytes @ 0x73
  8676  000173                     	ds	4
  8677  000177                     scale@scl:
  8678                           	opt stack 0
  8679  000177                     _fround$3980:
  8680                           	opt stack 0
  8681                           
  8682                           ; 4 bytes @ 0x77
  8683  000177                     	ds	1
  8684  000178                     ?___fltol:
  8685                           	opt stack 0
  8686  000178                     ___fltol@f1:
  8687                           	opt stack 0
  8688                           
  8689                           ; 4 bytes @ 0x78
  8690  000178                     	ds	3
  8691  00017B                     fround@prec:
  8692                           	opt stack 0
  8693                           
  8694                           ; 1 bytes @ 0x7B
  8695  00017B                     	ds	1
  8696  00017C                     ??___fltol:
  8697                           
  8698                           ; 1 bytes @ 0x7C
  8699  00017C                     	ds	4
  8700  000180                     ___fltol@sign1:
  8701                           	opt stack 0
  8702                           
  8703                           ; 1 bytes @ 0x80
  8704  000180                     	ds	1
  8705  000181                     ___fltol@exp1:
  8706                           	opt stack 0
  8707                           
  8708                           ; 1 bytes @ 0x81
  8709  000181                     	ds	1
  8710  000182                     ?_printf:
  8711                           	opt stack 0
  8712  000182                     printf@f:
  8713                           	opt stack 0
  8714                           
  8715                           ; 2 bytes @ 0x82
  8716  000182                     	ds	10
  8717  00018C                     ??_printf:
  8718                           
  8719                           ; 1 bytes @ 0x8C
  8720  00018C                     	ds	6
  8721  000192                     _printf$3983:
  8722                           	opt stack 0
  8723                           
  8724                           ; 4 bytes @ 0x92
  8725  000192                     	ds	4
  8726  000196                     printf@idx:
  8727                           	opt stack 0
  8728                           
  8729                           ; 1 bytes @ 0x96
  8730  000196                     	ds	1
  8731  000197                     printf@cp:
  8732                           	opt stack 0
  8733                           
  8734                           ; 2 bytes @ 0x97
  8735  000197                     	ds	2
  8736  000199                     printf@len:
  8737                           	opt stack 0
  8738                           
  8739                           ; 2 bytes @ 0x99
  8740  000199                     	ds	2
  8741  00019B                     printf@ap:
  8742                           	opt stack 0
  8743                           
  8744                           ; 2 bytes @ 0x9B
  8745  00019B                     	ds	2
  8746  00019D                     printf@tmpval:
  8747                           	opt stack 0
  8748                           
  8749                           ; 4 bytes @ 0x9D
  8750  00019D                     	ds	4
  8751  0001A1                     printf@exp:
  8752                           	opt stack 0
  8753                           
  8754                           ; 2 bytes @ 0xA1
  8755  0001A1                     	ds	2
  8756  0001A3                     printf@fval:
  8757                           	opt stack 0
  8758                           
  8759                           ; 4 bytes @ 0xA3
  8760  0001A3                     	ds	4
  8761  0001A7                     printf@val:
  8762                           	opt stack 0
  8763                           
  8764                           ; 4 bytes @ 0xA7
  8765  0001A7                     	ds	4
  8766  0001AB                     printf@flag:
  8767                           	opt stack 0
  8768                           
  8769                           ; 2 bytes @ 0xAB
  8770  0001AB                     	ds	2
  8771  0001AD                     printf@width:
  8772                           	opt stack 0
  8773                           
  8774                           ; 2 bytes @ 0xAD
  8775  0001AD                     	ds	2
  8776  0001AF                     printf@prec:
  8777                           	opt stack 0
  8778                           
  8779                           ; 2 bytes @ 0xAF
  8780  0001AF                     	ds	2
  8781  0001B1                     printf@c:
  8782                           	opt stack 0
  8783                           
  8784                           ; 1 bytes @ 0xB1
  8785  0001B1                     	ds	1
  8786  0001B2                     terminal_textAttributes@background_color:
  8787                           	opt stack 0
  8788                           
  8789                           ; 1 bytes @ 0xB2
  8790  0001B2                     	ds	1
  8791  0001B3                     terminal_textAttributes@input_attribute:
  8792                           	opt stack 0
  8793                           
  8794                           ; 1 bytes @ 0xB3
  8795  0001B3                     	ds	1
  8796  0001B4                     ringBufferLUT@line:
  8797                           	opt stack 0
  8798                           
  8799                           ; 2 bytes @ 0xB4
  8800  0001B4                     	ds	2
  8801  0001B6                     ??_ringBufferLUT:
  8802                           
  8803                           ; 1 bytes @ 0xB6
  8804  0001B6                     	ds	2
  8805  0001B8                     ??_terminal_ringBufferPull:
  8806                           
  8807                           ; 1 bytes @ 0xB8
  8808  0001B8                     	ds	3
  8809                           tblptru	equ	0xFF8
  8810                           tblptrh	equ	0xFF7
  8811                           tblptrl	equ	0xFF6
  8812                           tablat	equ	0xFF5
  8813                           postinc0	equ	0xFEE
  8814                           wreg	equ	0xFE8
  8815                           postdec1	equ	0xFE5
  8816                           fsr1l	equ	0xFE1
  8817                           
  8818                           	psect	cstackBANK0
  8819  000060                     __pcstackBANK0:
  8820                           	opt stack 0
  8821  000060                     ??i2___fladd:
  8822                           
  8823                           ; 1 bytes @ 0x0
  8824  000060                     	ds	8
  8825  000068                     i2___fladd@signs:
  8826                           	opt stack 0
  8827                           
  8828                           ; 1 bytes @ 0x8
  8829  000068                     	ds	1
  8830  000069                     i2___fladd@aexp:
  8831                           	opt stack 0
  8832                           
  8833                           ; 1 bytes @ 0x9
  8834  000069                     	ds	1
  8835  00006A                     i2___fladd@bexp:
  8836                           	opt stack 0
  8837                           
  8838                           ; 1 bytes @ 0xA
  8839  00006A                     	ds	1
  8840  00006B                     i2___fladd@grs:
  8841                           	opt stack 0
  8842                           
  8843                           ; 1 bytes @ 0xB
  8844  00006B                     	ds	1
  8845  00006C                     ?_sqrt:
  8846                           	opt stack 0
  8847  00006C                     ?_eval_poly:
  8848                           	opt stack 0
  8849  00006C                     ?i2___fltol:
  8850                           	opt stack 0
  8851  00006C                     eval_poly@x:
  8852                           	opt stack 0
  8853  00006C                     sqrt@a:
  8854                           	opt stack 0
  8855  00006C                     i2___fltol@f1:
  8856                           	opt stack 0
  8857                           
  8858                           ; 4 bytes @ 0xC
  8859  00006C                     	ds	4
  8860  000070                     ??_sqrt:
  8861  000070                     ??i2___fltol:
  8862  000070                     eval_poly@d:
  8863                           	opt stack 0
  8864                           
  8865                           ; 2 bytes @ 0x10
  8866  000070                     	ds	2
  8867  000072                     eval_poly@n:
  8868                           	opt stack 0
  8869                           
  8870                           ; 2 bytes @ 0x12
  8871  000072                     	ds	2
  8872  000074                     ??_eval_poly:
  8873  000074                     sqrt@sign:
  8874                           	opt stack 0
  8875  000074                     i2___fltol@sign1:
  8876                           	opt stack 0
  8877                           
  8878                           ; 1 bytes @ 0x14
  8879  000074                     	ds	1
  8880  000075                     sqrt@i:
  8881                           	opt stack 0
  8882  000075                     i2___fltol@exp1:
  8883                           	opt stack 0
  8884                           
  8885                           ; 1 bytes @ 0x15
  8886  000075                     	ds	1
  8887  000076                     ?_abs:
  8888                           	opt stack 0
  8889  000076                     ?_floor:
  8890                           	opt stack 0
  8891  000076                     abs@a:
  8892                           	opt stack 0
  8893  000076                     sqrt@tfrac:
  8894                           	opt stack 0
  8895  000076                     floor@x:
  8896                           	opt stack 0
  8897                           
  8898                           ; 4 bytes @ 0x16
  8899  000076                     	ds	2
  8900  000078                     ??_abs:
  8901  000078                     eval_poly@res:
  8902                           	opt stack 0
  8903                           
  8904                           ; 4 bytes @ 0x18
  8905  000078                     	ds	2
  8906  00007A                     sqrt@p:
  8907                           	opt stack 0
  8908  00007A                     floor@i:
  8909                           	opt stack 0
  8910                           
  8911                           ; 4 bytes @ 0x1A
  8912  00007A                     	ds	1
  8913  00007B                     sqrt@grs:
  8914                           	opt stack 0
  8915                           
  8916                           ; 4 bytes @ 0x1B
  8917  00007B                     	ds	1
  8918  00007C                     ?_atan:
  8919                           	opt stack 0
  8920  00007C                     atan@f:
  8921                           	opt stack 0
  8922                           
  8923                           ; 4 bytes @ 0x1C
  8924  00007C                     	ds	2
  8925  00007E                     floor@expon:
  8926                           	opt stack 0
  8927                           
  8928                           ; 2 bytes @ 0x1E
  8929  00007E                     	ds	1
  8930  00007F                     sqrt@exp:
  8931                           	opt stack 0
  8932                           
  8933                           ; 2 bytes @ 0x1F
  8934  00007F                     	ds	1
  8935  000080                     ?i2___flsub:
  8936                           	opt stack 0
  8937  000080                     atan@y:
  8938                           	opt stack 0
  8939  000080                     i2___flsub@b:
  8940                           	opt stack 0
  8941                           
  8942                           ; 4 bytes @ 0x20
  8943  000080                     	ds	1
  8944  000081                     sqrt@root:
  8945                           	opt stack 0
  8946                           
  8947                           ; 4 bytes @ 0x21
  8948  000081                     	ds	3
  8949  000084                     atan@x:
  8950                           	opt stack 0
  8951  000084                     i2___flsub@a:
  8952                           	opt stack 0
  8953                           
  8954                           ; 4 bytes @ 0x24
  8955  000084                     	ds	1
  8956  000085                     sqrt@frac:
  8957                           	opt stack 0
  8958                           
  8959                           ; 4 bytes @ 0x25
  8960  000085                     	ds	3
  8961  000088                     ?i2_printf:
  8962                           	opt stack 0
  8963  000088                     ?_sin:
  8964                           	opt stack 0
  8965  000088                     atan@recip:
  8966                           	opt stack 0
  8967  000088                     i2printf@f:
  8968                           	opt stack 0
  8969  000088                     sin@f:
  8970                           	opt stack 0
  8971                           
  8972                           ; 4 bytes @ 0x28
  8973  000088                     	ds	1
  8974  000089                     atan@val_squared:
  8975                           	opt stack 0
  8976                           
  8977                           ; 4 bytes @ 0x29
  8978  000089                     	ds	1
  8979  00008A                     ??i2_printf:
  8980                           
  8981                           ; 1 bytes @ 0x2A
  8982  00008A                     	ds	2
  8983  00008C                     sin@y:
  8984                           	opt stack 0
  8985                           
  8986                           ; 4 bytes @ 0x2C
  8987  00008C                     	ds	1
  8988  00008D                     atan@val:
  8989                           	opt stack 0
  8990                           
  8991                           ; 4 bytes @ 0x2D
  8992  00008D                     	ds	3
  8993  000090                     _sin$4182:
  8994                           	opt stack 0
  8995  000090                     i2_printf$4186:
  8996                           	opt stack 0
  8997                           
  8998                           ; 4 bytes @ 0x30
  8999  000090                     	ds	1
  9000  000091                     ?_asin:
  9001                           	opt stack 0
  9002  000091                     asin@x:
  9003                           	opt stack 0
  9004                           
  9005                           ; 4 bytes @ 0x31
  9006  000091                     	ds	3
  9007  000094                     i2printf@idx:
  9008                           	opt stack 0
  9009  000094                     sin@x2:
  9010                           	opt stack 0
  9011                           
  9012                           ; 4 bytes @ 0x34
  9013  000094                     	ds	1
  9014  000095                     i2printf@cp:
  9015                           	opt stack 0
  9016  000095                     asin@sgn:
  9017                           	opt stack 0
  9018                           
  9019                           ; 4 bytes @ 0x35
  9020  000095                     	ds	2
  9021  000097                     i2printf@len:
  9022                           	opt stack 0
  9023                           
  9024                           ; 2 bytes @ 0x37
  9025  000097                     	ds	1
  9026  000098                     sin@sgn:
  9027                           	opt stack 0
  9028                           
  9029                           ; 1 bytes @ 0x38
  9030  000098                     	ds	1
  9031  000099                     ?_currentMeasuredToPeak:
  9032                           	opt stack 0
  9033  000099                     i2printf@ap:
  9034                           	opt stack 0
  9035  000099                     currentMeasuredToPeak@Measured:
  9036                           	opt stack 0
  9037  000099                     _asin$4181:
  9038                           	opt stack 0
  9039                           
  9040                           ; 4 bytes @ 0x39
  9041  000099                     	ds	2
  9042  00009B                     i2printf@tmpval:
  9043                           	opt stack 0
  9044                           
  9045                           ; 4 bytes @ 0x3B
  9046  00009B                     	ds	2
  9047  00009D                     currentMeasuredToPeak@Angle:
  9048                           	opt stack 0
  9049  00009D                     _asin$4180:
  9050                           	opt stack 0
  9051                           
  9052                           ; 4 bytes @ 0x3D
  9053  00009D                     	ds	2
  9054  00009F                     i2printf@exp:
  9055                           	opt stack 0
  9056                           
  9057                           ; 2 bytes @ 0x3F
  9058  00009F                     	ds	2
  9059  0000A1                     currentMeasuredToPeak@Peak:
  9060                           	opt stack 0
  9061  0000A1                     asin@y:
  9062                           	opt stack 0
  9063  0000A1                     i2printf@val:
  9064                           	opt stack 0
  9065                           
  9066                           ; 4 bytes @ 0x41
  9067  0000A1                     	ds	4
  9068  0000A5                     i2printf@fval:
  9069                           	opt stack 0
  9070  0000A5                     _asin$4179:
  9071                           	opt stack 0
  9072                           
  9073                           ; 4 bytes @ 0x45
  9074  0000A5                     	ds	4
  9075  0000A9                     ?_acos:
  9076                           	opt stack 0
  9077  0000A9                     i2printf@flag:
  9078                           	opt stack 0
  9079  0000A9                     acos@x:
  9080                           	opt stack 0
  9081                           
  9082                           ; 4 bytes @ 0x49
  9083  0000A9                     	ds	2
  9084  0000AB                     i2printf@width:
  9085                           	opt stack 0
  9086                           
  9087                           ; 2 bytes @ 0x4B
  9088  0000AB                     	ds	2
  9089  0000AD                     i2printf@prec:
  9090                           	opt stack 0
  9091  0000AD                     _acos$4178:
  9092                           	opt stack 0
  9093                           
  9094                           ; 4 bytes @ 0x4D
  9095  0000AD                     	ds	2
  9096  0000AF                     i2printf@c:
  9097                           	opt stack 0
  9098                           
  9099                           ; 1 bytes @ 0x4F
  9100  0000AF                     	ds	2
  9101  0000B1                     ?_peakToRMS:
  9102                           	opt stack 0
  9103  0000B1                     peakToRMS@Peak:
  9104                           	opt stack 0
  9105                           
  9106                           ; 4 bytes @ 0x51
  9107  0000B1                     	ds	4
  9108  0000B5                     peakToRMS@Angle:
  9109                           	opt stack 0
  9110                           
  9111                           ; 4 bytes @ 0x55
  9112  0000B5                     	ds	4
  9113  0000B9                     _peakToRMS$4171:
  9114                           	opt stack 0
  9115                           
  9116                           ; 4 bytes @ 0x59
  9117  0000B9                     	ds	4
  9118  0000BD                     _peakToRMS$4172:
  9119                           	opt stack 0
  9120                           
  9121                           ; 4 bytes @ 0x5D
  9122  0000BD                     	ds	4
  9123  0000C1                     _peakToRMS$4170:
  9124                           	opt stack 0
  9125                           
  9126                           ; 4 bytes @ 0x61
  9127  0000C1                     	ds	4
  9128  0000C5                     peakToRMS@RMS:
  9129                           	opt stack 0
  9130                           
  9131                           ; 4 bytes @ 0x65
  9132  0000C5                     	ds	4
  9133  0000C9                     _ADCPostProcessingCallback$4175:
  9134                           	opt stack 0
  9135                           
  9136                           ; 4 bytes @ 0x69
  9137  0000C9                     	ds	4
  9138  0000CD                     _ADCPostProcessingCallback$4176:
  9139                           	opt stack 0
  9140                           
  9141                           ; 4 bytes @ 0x6D
  9142  0000CD                     	ds	4
  9143  0000D1                     _ADCPostProcessingCallback$4177:
  9144                           	opt stack 0
  9145                           
  9146                           ; 4 bytes @ 0x71
  9147  0000D1                     	ds	4
  9148  0000D5                     ADCPostProcessingCallback@current_adc_channel:
  9149                           	opt stack 0
  9150                           
  9151                           ; 1 bytes @ 0x75
  9152  0000D5                     	ds	1
  9153  0000D6                     _ADCPostProcessingCallback$4173:
  9154                           	opt stack 0
  9155                           
  9156                           ; 4 bytes @ 0x76
  9157  0000D6                     	ds	4
  9158  0000DA                     _ADCPostProcessingCallback$4174:
  9159                           	opt stack 0
  9160                           
  9161                           ; 4 bytes @ 0x7A
  9162  0000DA                     	ds	4
  9163  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
  9164                           
  9165                           ; 1 bytes @ 0x7E
  9166  0000DE                     	ds	18
  9167                           tblptru	equ	0xFF8
  9168                           tblptrh	equ	0xFF7
  9169                           tblptrl	equ	0xFF6
  9170                           tablat	equ	0xFF5
  9171                           postinc0	equ	0xFEE
  9172                           wreg	equ	0xFE8
  9173                           postdec1	equ	0xFE5
  9174                           fsr1l	equ	0xFE1
  9175                           
  9176                           	psect	cstackCOMRAM
  9177  000001                     __pcstackCOMRAM:
  9178                           	opt stack 0
  9179  000001                     ??i2_isdigit:
  9180  000001                     ?_ADCC_GetConversionResult:
  9181                           	opt stack 0
  9182  000001                     ?_ADCC_GetFilterValue:
  9183                           	opt stack 0
  9184  000001                     ?i2___wmul:
  9185                           	opt stack 0
  9186  000001                     ?i2___awmod:
  9187                           	opt stack 0
  9188  000001                     ?i2__div_to_l_:
  9189                           	opt stack 0
  9190  000001                     ?i2__tdiv_to_l_:
  9191                           	opt stack 0
  9192  000001                     ?i2___lldiv:
  9193                           	opt stack 0
  9194  000001                     i2EUSART2_Write@txData:
  9195                           	opt stack 0
  9196  000001                     TMR5_WriteTimer@timerVal:
  9197                           	opt stack 0
  9198  000001                     i2___wmul@multiplier:
  9199                           	opt stack 0
  9200  000001                     i2___awmod@dividend:
  9201                           	opt stack 0
  9202  000001                     i2__tdiv_to_l_@f1:
  9203                           	opt stack 0
  9204  000001                     frexp@value:
  9205                           	opt stack 0
  9206  000001                     i2__div_to_l_@f1:
  9207                           	opt stack 0
  9208  000001                     i2___lldiv@dividend:
  9209                           	opt stack 0
  9210                           
  9211                           ; 4 bytes @ 0x0
  9212  000001                     	ds	1
  9213  000002                     i2putch@txData:
  9214                           	opt stack 0
  9215  000002                     i2_isdigit$3264:
  9216                           	opt stack 0
  9217                           
  9218                           ; 1 bytes @ 0x1
  9219  000002                     	ds	1
  9220  000003                     ??_ADCC_GetConversionResult:
  9221  000003                     ??_ADCC_GetFilterValue:
  9222  000003                     i2isdigit@c:
  9223                           	opt stack 0
  9224  000003                     i2___wmul@multiplicand:
  9225                           	opt stack 0
  9226  000003                     i2___awmod@divisor:
  9227                           	opt stack 0
  9228                           
  9229                           ; 2 bytes @ 0x2
  9230  000003                     	ds	1
  9231  000004                     i2__tdiv_to_l_@f2:
  9232                           	opt stack 0
  9233                           
  9234                           ; 3 bytes @ 0x3
  9235  000004                     	ds	1
  9236  000005                     ?i2___xxtofl:
  9237                           	opt stack 0
  9238  000005                     i2___awmod@counter:
  9239                           	opt stack 0
  9240  000005                     frexp@eptr:
  9241                           	opt stack 0
  9242  000005                     i2___wmul@product:
  9243                           	opt stack 0
  9244  000005                     i2__div_to_l_@f2:
  9245                           	opt stack 0
  9246  000005                     i2___lldiv@divisor:
  9247                           	opt stack 0
  9248  000005                     i2___xxtofl@val:
  9249                           	opt stack 0
  9250                           
  9251                           ; 4 bytes @ 0x4
  9252  000005                     	ds	1
  9253  000006                     i2___awmod@sign:
  9254                           	opt stack 0
  9255                           
  9256                           ; 1 bytes @ 0x5
  9257  000006                     	ds	1
  9258  000007                     ??_frexp:
  9259  000007                     ??i2__tdiv_to_l_:
  9260  000007                     ?i2___awdiv:
  9261                           	opt stack 0
  9262  000007                     i2___awdiv@dividend:
  9263                           	opt stack 0
  9264                           
  9265                           ; 2 bytes @ 0x6
  9266  000007                     	ds	2
  9267  000009                     ??i2___xxtofl:
  9268  000009                     i2___awdiv@divisor:
  9269                           	opt stack 0
  9270  000009                     i2__div_to_l_@quot:
  9271                           	opt stack 0
  9272  000009                     i2___lldiv@quotient:
  9273                           	opt stack 0
  9274                           
  9275                           ; 4 bytes @ 0x8
  9276  000009                     	ds	1
  9277  00000A                     i2__tdiv_to_l_@quot:
  9278                           	opt stack 0
  9279                           
  9280                           ; 4 bytes @ 0x9
  9281  00000A                     	ds	1
  9282  00000B                     i2___awdiv@counter:
  9283                           	opt stack 0
  9284                           
  9285                           ; 1 bytes @ 0xA
  9286  00000B                     	ds	1
  9287  00000C                     i2___awdiv@sign:
  9288                           	opt stack 0
  9289                           
  9290                           ; 1 bytes @ 0xB
  9291  00000C                     	ds	1
  9292  00000D                     i2__div_to_l_@cntr:
  9293                           	opt stack 0
  9294  00000D                     i2___lldiv@counter:
  9295                           	opt stack 0
  9296  00000D                     i2___xxtofl@sign:
  9297                           	opt stack 0
  9298  00000D                     i2___awdiv@quotient:
  9299                           	opt stack 0
  9300                           
  9301                           ; 2 bytes @ 0xC
  9302  00000D                     	ds	1
  9303  00000E                     ?i2___llmod:
  9304                           	opt stack 0
  9305  00000E                     i2__div_to_l_@exp1:
  9306                           	opt stack 0
  9307  00000E                     i2__tdiv_to_l_@cntr:
  9308                           	opt stack 0
  9309  00000E                     i2___xxtofl@exp:
  9310                           	opt stack 0
  9311  00000E                     i2___llmod@dividend:
  9312                           	opt stack 0
  9313                           
  9314                           ; 4 bytes @ 0xD
  9315  00000E                     	ds	1
  9316  00000F                     i2__tdiv_to_l_@exp1:
  9317                           	opt stack 0
  9318  00000F                     i2___xxtofl@arg:
  9319                           	opt stack 0
  9320                           
  9321                           ; 4 bytes @ 0xE
  9322  00000F                     	ds	3
  9323  000012                     i2___llmod@divisor:
  9324                           	opt stack 0
  9325                           
  9326                           ; 4 bytes @ 0x11
  9327  000012                     	ds	1
  9328  000013                     ?i2___fldiv:
  9329                           	opt stack 0
  9330  000013                     i2___fldiv@b:
  9331                           	opt stack 0
  9332                           
  9333                           ; 4 bytes @ 0x12
  9334  000013                     	ds	3
  9335  000016                     i2___llmod@counter:
  9336                           	opt stack 0
  9337                           
  9338                           ; 1 bytes @ 0x15
  9339  000016                     	ds	1
  9340  000017                     i2___fldiv@a:
  9341                           	opt stack 0
  9342                           
  9343                           ; 4 bytes @ 0x16
  9344  000017                     	ds	4
  9345  00001B                     ??i2___fldiv:
  9346                           
  9347                           ; 1 bytes @ 0x1A
  9348  00001B                     	ds	4
  9349  00001F                     i2___fldiv@sign:
  9350                           	opt stack 0
  9351                           
  9352                           ; 1 bytes @ 0x1E
  9353  00001F                     	ds	1
  9354  000020                     i2___fldiv@rem:
  9355                           	opt stack 0
  9356                           
  9357                           ; 4 bytes @ 0x1F
  9358  000020                     	ds	4
  9359  000024                     i2___fldiv@new_exp:
  9360                           	opt stack 0
  9361                           
  9362                           ; 2 bytes @ 0x23
  9363  000024                     	ds	2
  9364  000026                     i2___fldiv@grs:
  9365                           	opt stack 0
  9366                           
  9367                           ; 4 bytes @ 0x25
  9368  000026                     	ds	4
  9369  00002A                     i2___fldiv@bexp:
  9370                           	opt stack 0
  9371                           
  9372                           ; 1 bytes @ 0x29
  9373  00002A                     	ds	1
  9374  00002B                     i2___fldiv@aexp:
  9375                           	opt stack 0
  9376                           
  9377                           ; 1 bytes @ 0x2A
  9378  00002B                     	ds	1
  9379  00002C                     ?i2___flneg:
  9380                           	opt stack 0
  9381  00002C                     i2___flneg@f1:
  9382                           	opt stack 0
  9383                           
  9384                           ; 4 bytes @ 0x2B
  9385  00002C                     	ds	4
  9386  000030                     ?_fabs:
  9387                           	opt stack 0
  9388  000030                     ?i2___flmul:
  9389                           	opt stack 0
  9390  000030                     fabs@d:
  9391                           	opt stack 0
  9392  000030                     i2___flmul@b:
  9393                           	opt stack 0
  9394                           
  9395                           ; 4 bytes @ 0x2F
  9396  000030                     	ds	4
  9397  000034                     i2___flge@ff1:
  9398                           	opt stack 0
  9399  000034                     i2___flmul@a:
  9400                           	opt stack 0
  9401                           
  9402                           ; 4 bytes @ 0x33
  9403  000034                     	ds	4
  9404  000038                     ??i2___flmul:
  9405  000038                     i2___flge@ff2:
  9406                           	opt stack 0
  9407                           
  9408                           ; 4 bytes @ 0x37
  9409  000038                     	ds	4
  9410  00003C                     ??i2___flge:
  9411  00003C                     i2___flmul@sign:
  9412                           	opt stack 0
  9413                           
  9414                           ; 1 bytes @ 0x3B
  9415  00003C                     	ds	1
  9416  00003D                     i2___flmul@aexp:
  9417                           	opt stack 0
  9418                           
  9419                           ; 1 bytes @ 0x3C
  9420  00003D                     	ds	1
  9421  00003E                     i2___flmul@grs:
  9422                           	opt stack 0
  9423                           
  9424                           ; 4 bytes @ 0x3D
  9425  00003E                     	ds	4
  9426  000042                     i2___flmul@bexp:
  9427                           	opt stack 0
  9428                           
  9429                           ; 1 bytes @ 0x41
  9430  000042                     	ds	1
  9431  000043                     i2___flmul@prod:
  9432                           	opt stack 0
  9433                           
  9434                           ; 4 bytes @ 0x42
  9435  000043                     	ds	4
  9436  000047                     i2___flmul@temp:
  9437                           	opt stack 0
  9438                           
  9439                           ; 2 bytes @ 0x46
  9440  000047                     	ds	2
  9441  000049                     ?i2_fround:
  9442                           	opt stack 0
  9443  000049                     ?i2_scale:
  9444                           	opt stack 0
  9445                           
  9446                           ; 4 bytes @ 0x48
  9447  000049                     	ds	4
  9448  00004D                     i2_fround$4184:
  9449                           	opt stack 0
  9450  00004D                     i2_scale$4185:
  9451                           	opt stack 0
  9452                           
  9453                           ; 4 bytes @ 0x4C
  9454  00004D                     	ds	4
  9455  000051                     i2scale@scl:
  9456                           	opt stack 0
  9457  000051                     i2_fround$4183:
  9458                           	opt stack 0
  9459                           
  9460                           ; 4 bytes @ 0x50
  9461  000051                     	ds	4
  9462  000055                     i2fround@prec:
  9463                           	opt stack 0
  9464                           
  9465                           ; 1 bytes @ 0x54
  9466  000055                     	ds	1
  9467  000056                     ?i2___fladd:
  9468                           	opt stack 0
  9469  000056                     i2___fladd@b:
  9470                           	opt stack 0
  9471                           
  9472                           ; 4 bytes @ 0x55
  9473  000056                     	ds	4
  9474  00005A                     i2___fladd@a:
  9475                           	opt stack 0
  9476                           
  9477                           ; 4 bytes @ 0x59
  9478  00005A                     	ds	4
  9479  00005E                     tblptru	equ	0xFF8
  9480                           tblptrh	equ	0xFF7
  9481                           tblptrl	equ	0xFF6
  9482                           tablat	equ	0xFF5
  9483                           postinc0	equ	0xFEE
  9484                           wreg	equ	0xFE8
  9485                           postdec1	equ	0xFE5
  9486                           fsr1l	equ	0xFE1
  9487                           
  9488                           ; 1 bytes @ 0x5D
  9489 ;;
  9490 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9491 ;;
  9492 ;; *************** function _main *****************
  9493 ;; Defined at:
  9494 ;;		line 443 in file "main.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;		None
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;		None
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1    wreg      void 
  9501 ;; Registers used:
  9502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9510 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
  9511 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
  9512 ;;Total ram usage:        2 bytes
  9513 ;; Hardware stack levels required when called:   20
  9514 ;; This function calls:
  9515 ;;		_ADCC_SetADTIInterruptHandler
  9516 ;;		_SYSTEM_Initialize
  9517 ;;		_TMR6_SetInterruptHandler
  9518 ;;		_TMR7_SetInterruptHandler
  9519 ;;		_getCauseOfReset
  9520 ;;		_readMaxFromEEPROM
  9521 ;;		_saveMaxToEEPROM
  9522 ;;		_terminal_clearTerminal
  9523 ;;		_terminal_ringBufferPull
  9524 ;;		_terminal_setCursorHome
  9525 ;;		_terminal_textAttributesReset
  9526 ;; This function is called by:
  9527 ;;		Startup code after reset
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text0
  9532  017FC4                     __ptext0:
  9533                           	opt stack 0
  9534  017FC4                     _main:
  9535                           	opt stack 11
  9536                           
  9537                           ;main.c: 447: reset_cause = getCauseOfReset();
  9538                           
  9539                           ;incstack = 0
  9540  017FC4  EC68  F0C4         	call	_getCauseOfReset	;wreg free
  9541  017FC8  0102               	movlb	2	; () banked
  9542  017FCA  6FF7               	movwf	_reset_cause& (0+255),b
  9543                           
  9544                           ; BSR set to: 2
  9545                           ;main.c: 451: _delay((unsigned long)((250)*(64000000/4000.0)));
  9546  017FCC  0E15               	movlw	21
  9547  017FCE  0102               	movlb	2	; () banked
  9548  017FD0  6FD2               	movwf	(??_main+1)& (0+255),b
  9549  017FD2  0E4B               	movlw	75
  9550  017FD4  6FD1               	movwf	??_main& (0+255),b
  9551  017FD6  0EBE               	movlw	190
  9552  017FD8                     u27007:
  9553  017FD8  2EE8               	decfsz	wreg,f,c
  9554  017FDA  D7FE               	bra	u27007
  9555  017FDC  2FD1               	decfsz	??_main& (0+255),f,b
  9556  017FDE  D7FC               	bra	u27007
  9557  017FE0  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  9558  017FE2  D7FA               	bra	u27007
  9559  017FE4  F000               	nop	
  9560                           
  9561                           ;main.c: 454: SYSTEM_Initialize();
  9562  017FE6  EC97  F0C7         	call	_SYSTEM_Initialize	;wreg free
  9563                           
  9564                           ;main.c: 457: LATGbits.LATG0 = 0;
  9565  017FEA  907F               	bcf	3967,0,c	;volatile
  9566                           
  9567                           ;main.c: 458: LATGbits.LATG1 = 0;
  9568  017FEC  927F               	bcf	3967,1,c	;volatile
  9569                           
  9570                           ;main.c: 459: load_enable = 0;
  9571  017FEE  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9572                           
  9573                           ;main.c: 462: ADCON2bits.ADCRS = 7;
  9574  017FF0  010F               	movlb	15	; () banked
  9575  017FF2  895A               	bsf	90,4,b	;volatile
  9576  017FF4  8B5A               	bsf	90,5,b	;volatile
  9577  017FF6  8D5A               	bsf	90,6,b	;volatile
  9578                           
  9579                           ; BSR set to: 15
  9580                           ;main.c: 463: ADCAP = 20;
  9581  017FF8  0E14               	movlw	20
  9582  017FFA  6F5D               	movwf	93,b	;volatile
  9583                           
  9584                           ; BSR set to: 15
  9585                           ;main.c: 466: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  9586  017FFC  0E9A               	movlw	low _heartbeatTimerCallback
  9587  017FFE  0101               	movlb	1	; () banked
  9588  018000  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  9589  018002  0E8C               	movlw	high _heartbeatTimerCallback
  9590  018004  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9591  018006  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  9592  018008  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9593  01800A  EC33  F0C9         	call	_TMR6_SetInterruptHandler	;wreg free
  9594                           
  9595                           ;main.c: 469: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
  9596  01800E  0E90               	movlw	low _ADCPostProcessingCallback
  9597  018010  0101               	movlb	1	; () banked
  9598  018012  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
  9599  018014  0E2E               	movlw	high _ADCPostProcessingCallback
  9600  018016  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
  9601  018018  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  9602  01801A  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
  9603  01801C  EC4F  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9604                           
  9605                           ;main.c: 472: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  9606  018020  0EF8               	movlw	low _acquisitionTimerCallback
  9607  018022  0101               	movlb	1	; () banked
  9608  018024  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  9609  018026  0E91               	movlw	high _acquisitionTimerCallback
  9610  018028  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9611  01802A  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  9612  01802C  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9613  01802E  EC2C  F0C9         	call	_TMR7_SetInterruptHandler	;wreg free
  9614                           
  9615                           ;main.c: 475: readMaxFromEEPROM();
  9616  018032  EC3C  F0BC         	call	_readMaxFromEEPROM	;wreg free
  9617                           
  9618                           ;main.c: 478: (INTCONbits.GIEH = 1);
  9619  018036  8EF2               	bsf	intcon,7,c	;volatile
  9620                           
  9621                           ;main.c: 481: (INTCONbits.GIEL = 1);
  9622  018038  8CF2               	bsf	intcon,6,c	;volatile
  9623                           
  9624                           ;main.c: 484: terminal_clearTerminal();
  9625  01803A  EC15  F0C9         	call	_terminal_clearTerminal	;wreg free
  9626                           
  9627                           ;main.c: 485: terminal_setCursorHome();
  9628  01803E  EC05  F0C9         	call	_terminal_setCursorHome	;wreg free
  9629                           
  9630                           ;main.c: 486: terminal_textAttributesReset();
  9631  018042  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
  9632  018046                     
  9633                           ;main.c: 490: {
  9634                           ;main.c: 493: if (eusart2RxStringReady) {
  9635  018046  0100               	movlb	0	; () banked
  9636  018048  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;main.c: 495: terminal_ringBufferPull();
  9640  01804A  EC00  F0BA         	call	_terminal_ringBufferPull	;wreg free
  9641                           
  9642                           ;main.c: 497: }
  9643                           ;main.c: 500: saveMaxToEEPROM();
  9644  01804E  ECDF  F0B2         	call	_saveMaxToEEPROM	;wreg free
  9645  018052  D7F9               	goto	l1038
  9646  018054                     __end_of_main:
  9647                           	opt stack 0
  9648                           tblptru	equ	0xFF8
  9649                           tblptrh	equ	0xFF7
  9650                           tblptrl	equ	0xFF6
  9651                           tablat	equ	0xFF5
  9652                           intcon	equ	0xFF2
  9653                           postinc0	equ	0xFEE
  9654                           wreg	equ	0xFE8
  9655                           postdec1	equ	0xFE5
  9656                           fsr1l	equ	0xFE1
  9657                           
  9658 ;; *************** function _terminal_setCursorHome *****************
  9659 ;; Defined at:
  9660 ;;		line 85 in file "ring_buffer_interface.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;		None
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;		None
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  1    wreg      void 
  9667 ;; Registers used:
  9668 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9678 ;;Total ram usage:        0 bytes
  9679 ;; Hardware stack levels used:    1
  9680 ;; Hardware stack levels required when called:   16
  9681 ;; This function calls:
  9682 ;;		_printf
  9683 ;; This function is called by:
  9684 ;;		_main
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text1
  9689  01920A                     __ptext1:
  9690                           	opt stack 0
  9691  01920A                     _terminal_setCursorHome:
  9692                           	opt stack 14
  9693                           
  9694                           ;ring_buffer_interface.c: 86: printf("\033[H");
  9695                           
  9696                           ;incstack = 0
  9697  01920A  0EB9               	movlw	low STR_3
  9698  01920C  0101               	movlb	1	; () banked
  9699  01920E  6F82               	movwf	printf@f& (0+255),b
  9700  019210  0EFF               	movlw	high STR_3
  9701  019212  6F83               	movwf	(printf@f+1)& (0+255),b
  9702  019214  EC7F  F089         	call	_printf	;wreg free
  9703  019218  0012               	return		;funcret
  9704  01921A                     __end_of_terminal_setCursorHome:
  9705                           	opt stack 0
  9706                           tblptru	equ	0xFF8
  9707                           tblptrh	equ	0xFF7
  9708                           tblptrl	equ	0xFF6
  9709                           tablat	equ	0xFF5
  9710                           intcon	equ	0xFF2
  9711                           postinc0	equ	0xFEE
  9712                           wreg	equ	0xFE8
  9713                           postdec1	equ	0xFE5
  9714                           fsr1l	equ	0xFE1
  9715                           
  9716 ;; *************** function _terminal_ringBufferPull *****************
  9717 ;; Defined at:
  9718 ;;		line 12 in file "ring_buffer_interface.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;		None
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  index           2   77[BANK2 ] int 
  9723 ;;  index           2   79[BANK2 ] int 
  9724 ;;  charNumber      2   75[BANK2 ] int 
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  1    wreg      void 
  9727 ;; Registers used:
  9728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9735 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
  9736 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9737 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
  9738 ;;Total ram usage:        9 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; Hardware stack levels required when called:   19
  9741 ;; This function calls:
  9742 ;;		_EUSART2_Read
  9743 ;;		_ringBufferLUT
  9744 ;;		_strlen
  9745 ;; This function is called by:
  9746 ;;		_main
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750                           	psect	text2
  9751  017400                     __ptext2:
  9752                           	opt stack 0
  9753  017400                     _terminal_ringBufferPull:
  9754                           	opt stack 11
  9755                           
  9756                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  9757                           
  9758                           ;incstack = 0
  9759  017400  C1DF  F2CB         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  9760  017404  0102               	movlb	2	; () banked
  9761  017406  6BCC               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  9762                           
  9763                           ; BSR set to: 2
  9764                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  9765  017408  0E00               	movlw	0
  9766  01740A  6FD0               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  9767  01740C  0E00               	movlw	0
  9768  01740E  6FCF               	movwf	terminal_ringBufferPull@index& (0+255),b
  9769  017410                     l19896:
  9770                           
  9771                           ; BSR set to: 2
  9772  017410  BFD0               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  9773  017412  D006               	goto	l1077
  9774  017414  51D0               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  9775  017416  E10F               	bnz	l19906
  9776  017418  0E40               	movlw	64
  9777  01741A  5DCF               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  9778  01741C  B0D8               	btfsc	status,0,c
  9779  01741E  D00B               	goto	u26770
  9780  017420                     l1077:
  9781                           
  9782                           ; BSR set to: 2
  9783                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  9784                           
  9785                           ; BSR set to: 2
  9786  017420  0E40               	movlw	low _line
  9787  017422  25CF               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  9788  017424  6ED9               	movwf	fsr2l,c
  9789  017426  0E02               	movlw	high _line
  9790  017428  21D0               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  9791  01742A  6EDA               	movwf	fsr2h,c
  9792  01742C  0E00               	movlw	0
  9793  01742E  6EDF               	movwf	indf2,c
  9794                           
  9795                           ; BSR set to: 2
  9796  017430  4BCF               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  9797  017432  2BD0               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  9798  017434  D7ED               	goto	l19896
  9799  017436                     u26770:
  9800  017436                     l19906:
  9801                           
  9802                           ; BSR set to: 2
  9803                           ;ring_buffer_interface.c: 21: }
  9804                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  9805  017436  0E00               	movlw	0
  9806  017438  6FCE               	movwf	(terminal_ringBufferPull@index_2424+1)& (0+255),b
  9807  01743A  0E00               	movlw	0
  9808  01743C  6FCD               	movwf	terminal_ringBufferPull@index_2424& (0+255),b
  9809  01743E  D00F               	goto	l1079
  9810  017440                     
  9811                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  9812                           
  9813                           ; BSR set to: 2
  9814  017440  EC9E  F0C5         	call	_EUSART2_Read	;wreg free
  9815  017444  0101               	movlb	1	; () banked
  9816  017446  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  9817  017448  0E40               	movlw	low _line
  9818  01744A  0102               	movlb	2	; () banked
  9819  01744C  25CD               	addwf	terminal_ringBufferPull@index_2424& (0+255),w,b
  9820  01744E  6ED9               	movwf	fsr2l,c
  9821  017450  0E02               	movlw	high _line
  9822  017452  21CE               	addwfc	(terminal_ringBufferPull@index_2424+1)& (0+255),w,b
  9823  017454  6EDA               	movwf	fsr2h,c
  9824  017456  C1B8  FFDF         	movff	??_terminal_ringBufferPull,indf2
  9825                           
  9826                           ; BSR set to: 2
  9827  01745A  4BCD               	infsnz	terminal_ringBufferPull@index_2424& (0+255),f,b
  9828  01745C  2BCE               	incf	(terminal_ringBufferPull@index_2424+1)& (0+255),f,b
  9829  01745E                     l1079:
  9830                           
  9831                           ; BSR set to: 2
  9832                           
  9833                           ; BSR set to: 2
  9834  01745E  51CB               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  9835  017460  5DCD               	subwf	terminal_ringBufferPull@index_2424& (0+255),w,b
  9836  017462  51CE               	movf	(terminal_ringBufferPull@index_2424+1)& (0+255),w,b
  9837  017464  0A80               	xorlw	128
  9838  017466  0101               	movlb	1	; () banked
  9839  017468  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  9840  01746A  0102               	movlb	2	; () banked
  9841  01746C  51CC               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  9842  01746E  0A80               	xorlw	128
  9843  017470  0101               	movlb	1	; () banked
  9844  017472  59B8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  9845  017474  A0D8               	btfss	status,0,c
  9846  017476  D7E4               	goto	l1080
  9847                           
  9848                           ; BSR set to: 1
  9849                           ;ring_buffer_interface.c: 28: }
  9850                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  9851  017478  C0FA  F1E0         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  9852                           
  9853                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  9854                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  9855  01747C  D017               	goto	l1082
  9856  01747E                     
  9857                           ; BSR set to: 1
  9858                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  9859                           
  9860                           ; BSR set to: 1
  9861  01747E  0EFF               	movlw	255
  9862  017480  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  9863  017482  0EFF               	movlw	255
  9864  017484  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  9865  017486  0E40               	movlw	low _line
  9866  017488  6F17               	movwf	strlen@s& (0+255),b
  9867  01748A  0E02               	movlw	high _line
  9868  01748C  6F18               	movwf	(strlen@s+1)& (0+255),b
  9869  01748E  EC13  F0C4         	call	_strlen	;wreg free
  9870  017492  0101               	movlb	1	; () banked
  9871  017494  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  9872  017496  2717               	addwf	?_strlen& (0+255),f,b
  9873  017498  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  9874  01749A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  9875  01749C  0E40               	movlw	low _line
  9876  01749E  2517               	addwf	?_strlen& (0+255),w,b
  9877  0174A0  6ED9               	movwf	fsr2l,c
  9878  0174A2  0E02               	movlw	high _line
  9879  0174A4  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  9880  0174A6  6EDA               	movwf	fsr2h,c
  9881  0174A8  0E00               	movlw	0
  9882  0174AA  6EDF               	movwf	indf2,c
  9883  0174AC                     l1082:
  9884                           
  9885                           ; BSR set to: 1
  9886  0174AC  0EFF               	movlw	255
  9887  0174AE  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  9888  0174B0  0EFF               	movlw	255
  9889  0174B2  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  9890  0174B4  0E40               	movlw	low _line
  9891  0174B6  6F17               	movwf	strlen@s& (0+255),b
  9892  0174B8  0E02               	movlw	high _line
  9893  0174BA  6F18               	movwf	(strlen@s+1)& (0+255),b
  9894  0174BC  EC13  F0C4         	call	_strlen	;wreg free
  9895  0174C0  0101               	movlb	1	; () banked
  9896  0174C2  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  9897  0174C4  2717               	addwf	?_strlen& (0+255),f,b
  9898  0174C6  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  9899  0174C8  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  9900  0174CA  0E40               	movlw	low _line
  9901  0174CC  2517               	addwf	?_strlen& (0+255),w,b
  9902  0174CE  6ED9               	movwf	fsr2l,c
  9903  0174D0  0E02               	movlw	high _line
  9904  0174D2  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  9905  0174D4  6EDA               	movwf	fsr2h,c
  9906  0174D6  0E0A               	movlw	10
  9907  0174D8  18DE               	xorwf	postinc2,w,c
  9908  0174DA  B4D8               	btfsc	status,2,c
  9909  0174DC  D7D0               	goto	l1083
  9910                           
  9911                           ; BSR set to: 1
  9912  0174DE  0EFF               	movlw	255
  9913  0174E0  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
  9914  0174E2  0EFF               	movlw	255
  9915  0174E4  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  9916  0174E6  0E40               	movlw	low _line
  9917  0174E8  6F17               	movwf	strlen@s& (0+255),b
  9918  0174EA  0E02               	movlw	high _line
  9919  0174EC  6F18               	movwf	(strlen@s+1)& (0+255),b
  9920  0174EE  EC13  F0C4         	call	_strlen	;wreg free
  9921  0174F2  0101               	movlb	1	; () banked
  9922  0174F4  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  9923  0174F6  2717               	addwf	?_strlen& (0+255),f,b
  9924  0174F8  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  9925  0174FA  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  9926  0174FC  0E40               	movlw	low _line
  9927  0174FE  2517               	addwf	?_strlen& (0+255),w,b
  9928  017500  6ED9               	movwf	fsr2l,c
  9929  017502  0E02               	movlw	high _line
  9930  017504  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  9931  017506  6EDA               	movwf	fsr2h,c
  9932  017508  0E0D               	movlw	13
  9933  01750A  18DE               	xorwf	postinc2,w,c
  9934  01750C  B4D8               	btfsc	status,2,c
  9935  01750E  D7B7               	goto	l1083
  9936                           
  9937                           ; BSR set to: 1
  9938                           ;ring_buffer_interface.c: 40: }
  9939                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  9940  017510  0100               	movlb	0	; () banked
  9941  017512  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  9945  017514  0E40               	movlw	low _line
  9946  017516  0101               	movlb	1	; () banked
  9947  017518  6FB4               	movwf	ringBufferLUT@line& (0+255),b
  9948  01751A  0E02               	movlw	high _line
  9949  01751C  6FB5               	movwf	(ringBufferLUT@line+1)& (0+255),b
  9950  01751E  EC00  F080         	call	_ringBufferLUT	;wreg free
  9951  017522  0012               	return		;funcret
  9952  017524                     __end_of_terminal_ringBufferPull:
  9953                           	opt stack 0
  9954                           tblptru	equ	0xFF8
  9955                           tblptrh	equ	0xFF7
  9956                           tblptrl	equ	0xFF6
  9957                           tablat	equ	0xFF5
  9958                           intcon	equ	0xFF2
  9959                           postinc0	equ	0xFEE
  9960                           wreg	equ	0xFE8
  9961                           postdec1	equ	0xFE5
  9962                           fsr1l	equ	0xFE1
  9963                           indf2	equ	0xFDF
  9964                           postinc2	equ	0xFDE
  9965                           fsr2h	equ	0xFDA
  9966                           fsr2l	equ	0xFD9
  9967                           status	equ	0xFD8
  9968                           
  9969 ;; *************** function _ringBufferLUT *****************
  9970 ;; Defined at:
  9971 ;;		line 52 in file "ring_buffer_LUT.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  line            2  180[BANK1 ] PTR unsigned char 
  9974 ;;		 -> line(64), 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  angle_degree    4   38[BANK2 ] PTR unsigned char 
  9977 ;;  index           2   69[BANK2 ] int 
  9978 ;;  channel_name   22   16[BANK2 ] unsigned char [22]
  9979 ;;  userID          2   73[BANK2 ] int 
  9980 ;;  max_voltage_    4   62[BANK2 ] int 
  9981 ;;  max_temp_pri    4   58[BANK2 ] int 
  9982 ;;  max_voltage_    4   54[BANK2 ] int 
  9983 ;;  max_voltage_    4   50[BANK2 ] int 
  9984 ;;  max_Power_pr    4   46[BANK2 ] int 
  9985 ;;  max_current_    4   42[BANK2 ] int 
  9986 ;;  arg_buff        3   66[BANK2 ] unsigned char [3]
  9987 ;;  percentage      2   71[BANK2 ] int 
  9988 ;; Return value:  Size  Location     Type
  9989 ;;                  1    wreg      void 
  9990 ;; Registers used:
  9991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 0/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9997 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9998 ;;      Locals:         0       0       0      59       0       0       0       0       0       0       0       0       
      +0       0       0
  9999 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10000 ;;      Totals:         0       0       4      59       0       0       0       0       0       0       0       0       
      +0       0       0
 10001 ;;Total ram usage:       63 bytes
 10002 ;; Hardware stack levels used:    1
 10003 ;; Hardware stack levels required when called:   18
 10004 ;; This function calls:
 10005 ;;		_TMR7_StopTimer
 10006 ;;		___fladd
 10007 ;;		___fldiv
 10008 ;;		___flmul
 10009 ;;		___flneg
 10010 ;;		___wmul
 10011 ;;		___xxtofl
 10012 ;;		_atoi
 10013 ;;		_getCauseOfResetString
 10014 ;;		_getDeviceID
 10015 ;;		_getDeviceIDString
 10016 ;;		_getMajorRevisionID
 10017 ;;		_getMinorRevisionID
 10018 ;;		_getUserID
 10019 ;;		_printf
 10020 ;;		_readDoubleFromEEPROM
 10021 ;;		_strcmp
 10022 ;;		_strcpy
 10023 ;;		_strstr
 10024 ;;		_terminal_printNewline
 10025 ;;		_terminal_textAttributes
 10026 ;;		_terminal_textAttributesReset
 10027 ;;		_writeDoubleToEEPROM
 10028 ;; This function is called by:
 10029 ;;		_terminal_ringBufferPull
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           	psect	text3
 10034  010000                     __ptext3:
 10035                           	opt stack 0
 10036  010000                     _ringBufferLUT:
 10037                           	opt stack 11
 10038                           
 10039                           ;ring_buffer_LUT.c: 58: if((0 == strcmp(line, "Reset"))) {
 10040                           
 10041                           ;incstack = 0
 10042  010000  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10043  010004  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10044  010008  0E01               	movlw	low (STR_152+10)
 10045  01000A  0101               	movlb	1	; () banked
 10046  01000C  6F19               	movwf	strcmp@s2& (0+255),b
 10047  01000E  0EFE               	movlw	high (STR_152+10)
 10048  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10049  010012  EC91  F0C4         	call	_strcmp	;wreg free
 10050  010016  0101               	movlb	1	; () banked
 10051  010018  5117               	movf	?_strcmp& (0+255),w,b
 10052  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10053  01001C  A4D8               	btfss	status,2,c
 10054  01001E  D00F               	goto	l1242
 10055                           
 10056                           ; BSR set to: 1
 10057                           ;ring_buffer_LUT.c: 61: printf("\033[2J");
 10058  010020  0EB0               	movlw	low STR_2
 10059  010022  6F82               	movwf	printf@f& (0+255),b
 10060  010024  0EFF               	movlw	high STR_2
 10061  010026  6F83               	movwf	(printf@f+1)& (0+255),b
 10062  010028  EC7F  F089         	call	_printf	;wreg free
 10063                           
 10064                           ;ring_buffer_LUT.c: 64: printf("\033[H");
 10065  01002C  0EB9               	movlw	low STR_3
 10066  01002E  0101               	movlb	1	; () banked
 10067  010030  6F82               	movwf	printf@f& (0+255),b
 10068  010032  0EFF               	movlw	high STR_3
 10069  010034  6F83               	movwf	(printf@f+1)& (0+255),b
 10070  010036  EC7F  F089         	call	_printf	;wreg free
 10071  01003A  00FF               	reset		;# 
 10072                           
 10073                           ;ring_buffer_LUT.c: 69: }
 10074  01003C  0012               	return	
 10075  01003E                     l1242:
 10076                           
 10077                           ;ring_buffer_LUT.c: 72: else if((0 == strcmp(line, "Clear"))) {
 10078  01003E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10079  010042  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10080  010046  0EA0               	movlw	low STR_44
 10081  010048  0101               	movlb	1	; () banked
 10082  01004A  6F19               	movwf	strcmp@s2& (0+255),b
 10083  01004C  0EFF               	movlw	high STR_44
 10084  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10085  010050  EC91  F0C4         	call	_strcmp	;wreg free
 10086  010054  0101               	movlb	1	; () banked
 10087  010056  5117               	movf	?_strcmp& (0+255),w,b
 10088  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10089  01005A  A4D8               	btfss	status,2,c
 10090  01005C  D00E               	goto	l1244
 10091                           
 10092                           ; BSR set to: 1
 10093                           ;ring_buffer_LUT.c: 75: printf("\033[2J");
 10094  01005E  0EB0               	movlw	low STR_2
 10095  010060  6F82               	movwf	printf@f& (0+255),b
 10096  010062  0EFF               	movlw	high STR_2
 10097  010064  6F83               	movwf	(printf@f+1)& (0+255),b
 10098  010066  EC7F  F089         	call	_printf	;wreg free
 10099                           
 10100                           ;ring_buffer_LUT.c: 78: printf("\033[H");
 10101  01006A  0EB9               	movlw	low STR_3
 10102  01006C  0101               	movlb	1	; () banked
 10103  01006E  6F82               	movwf	printf@f& (0+255),b
 10104  010070  0EFF               	movlw	high STR_3
 10105  010072  6F83               	movwf	(printf@f+1)& (0+255),b
 10106  010074  EC7F  F089         	call	_printf	;wreg free
 10107                           
 10108                           ;ring_buffer_LUT.c: 80: }
 10109  010078  0012               	return	
 10110  01007A                     l1244:
 10111                           
 10112                           ;ring_buffer_LUT.c: 83: else if((0 == strcmp(line, "Cause of Reset?"))) {
 10113  01007A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10114  01007E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10115  010082  0E37               	movlw	low STR_47
 10116  010084  0101               	movlb	1	; () banked
 10117  010086  6F19               	movwf	strcmp@s2& (0+255),b
 10118  010088  0EFE               	movlw	high STR_47
 10119  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10120  01008C  EC91  F0C4         	call	_strcmp	;wreg free
 10121  010090  0101               	movlb	1	; () banked
 10122  010092  5117               	movf	?_strcmp& (0+255),w,b
 10123  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10124  010096  A4D8               	btfss	status,2,c
 10125  010098  D019               	goto	l1246
 10126                           
 10127                           ; BSR set to: 1
 10128                           ;ring_buffer_LUT.c: 85: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10129  01009A  0E00               	movlw	0
 10130  01009C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10131  01009E  0E00               	movlw	0
 10132  0100A0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10133  0100A2  0E02               	movlw	2
 10134  0100A4  ECCA  F0A0         	call	_terminal_textAttributes
 10135                           
 10136                           ;ring_buffer_LUT.c: 88: printf("The cause of the most recent device reset was: %s\n\r",
 10137                           ;ring_buffer_LUT.c: 89: getCauseOfResetString(reset_cause));
 10138  0100A8  0ECC               	movlw	low STR_48
 10139  0100AA  0101               	movlb	1	; () banked
 10140  0100AC  6F82               	movwf	printf@f& (0+255),b
 10141  0100AE  0EF6               	movlw	high STR_48
 10142  0100B0  6F83               	movwf	(printf@f+1)& (0+255),b
 10143  0100B2  0102               	movlb	2	; () banked
 10144  0100B4  51F7               	movf	_reset_cause& (0+255),w,b
 10145  0100B6  EC67  F0C7         	call	_getCauseOfResetString
 10146  0100BA  C117  F184         	movff	?_getCauseOfResetString,?_printf+2
 10147  0100BE  C118  F185         	movff	?_getCauseOfResetString+1,?_printf+3
 10148  0100C2  EC7F  F089         	call	_printf	;wreg free
 10149                           
 10150                           ;ring_buffer_LUT.c: 91: terminal_textAttributesReset();
 10151  0100C6  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10152                           
 10153                           ;ring_buffer_LUT.c: 93: }
 10154  0100CA  0012               	return	
 10155  0100CC                     l1246:
 10156                           
 10157                           ;ring_buffer_LUT.c: 96: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
 10158  0100CC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10159  0100D0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10160  0100D4  0E9A               	movlw	low STR_49
 10161  0100D6  0101               	movlb	1	; () banked
 10162  0100D8  6F19               	movwf	strcmp@s2& (0+255),b
 10163  0100DA  0EFF               	movlw	high STR_49
 10164  0100DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10165  0100DE  EC91  F0C4         	call	_strcmp	;wreg free
 10166  0100E2  0101               	movlb	1	; () banked
 10167  0100E4  5117               	movf	?_strcmp& (0+255),w,b
 10168  0100E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10169  0100E8  B4D8               	btfsc	status,2,c
 10170  0100EA  D00F               	goto	u26130
 10171                           
 10172                           ; BSR set to: 1
 10173  0100EC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10174  0100F0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10175  0100F4  0EB5               	movlw	low STR_50
 10176  0100F6  6F19               	movwf	strcmp@s2& (0+255),b
 10177  0100F8  0EFF               	movlw	high STR_50
 10178  0100FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10179  0100FC  EC91  F0C4         	call	_strcmp	;wreg free
 10180  010100  0101               	movlb	1	; () banked
 10181  010102  5117               	movf	?_strcmp& (0+255),w,b
 10182  010104  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10183  010106  A4D8               	btfss	status,2,c
 10184  010108  D018               	goto	l1248
 10185  01010A                     u26130:
 10186                           
 10187                           ; BSR set to: 1
 10188                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10189                           
 10190                           ; BSR set to: 1
 10191  01010A  0E00               	movlw	0
 10192  01010C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10193  01010E  0E00               	movlw	0
 10194  010110  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10195  010112  0E02               	movlw	2
 10196  010114  ECCA  F0A0         	call	_terminal_textAttributes
 10197                           
 10198                           ;ring_buffer_LUT.c: 99: printf("AC Power Meter\n\r");
 10199  010118  0E91               	movlw	low STR_51
 10200  01011A  0101               	movlb	1	; () banked
 10201  01011C  6F82               	movwf	printf@f& (0+255),b
 10202  01011E  0EFD               	movlw	high STR_51
 10203  010120  6F83               	movwf	(printf@f+1)& (0+255),b
 10204  010122  EC7F  F089         	call	_printf	;wreg free
 10205                           
 10206                           ;ring_buffer_LUT.c: 100: printf("Marquette University ELEN 3035 Final Project\n\r");
 10207  010126  0EFE               	movlw	low STR_52
 10208  010128  0101               	movlb	1	; () banked
 10209  01012A  6F82               	movwf	printf@f& (0+255),b
 10210  01012C  0EF7               	movlw	high STR_52
 10211  01012E  6F83               	movwf	(printf@f+1)& (0+255),b
 10212  010130  EC7F  F089         	call	_printf	;wreg free
 10213                           
 10214                           ;ring_buffer_LUT.c: 101: terminal_textAttributesReset();
 10215  010134  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10216                           
 10217                           ;ring_buffer_LUT.c: 103: }
 10218  010138  0012               	return	
 10219  01013A                     l1248:
 10220                           
 10221                           ;ring_buffer_LUT.c: 106: else if((0 == strcmp(line, "Device ID?"))) {
 10222  01013A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10223  01013E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10224  010142  0E51               	movlw	low STR_53
 10225  010144  0101               	movlb	1	; () banked
 10226  010146  6F19               	movwf	strcmp@s2& (0+255),b
 10227  010148  0EFF               	movlw	high STR_53
 10228  01014A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10229  01014C  EC91  F0C4         	call	_strcmp	;wreg free
 10230  010150  0101               	movlb	1	; () banked
 10231  010152  5117               	movf	?_strcmp& (0+255),w,b
 10232  010154  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10233  010156  A4D8               	btfss	status,2,c
 10234  010158  D023               	goto	l1252
 10235                           
 10236                           ; BSR set to: 1
 10237                           ;ring_buffer_LUT.c: 108: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10238  01015A  0E00               	movlw	0
 10239  01015C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10240  01015E  0E00               	movlw	0
 10241  010160  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10242  010162  0E02               	movlw	2
 10243  010164  ECCA  F0A0         	call	_terminal_textAttributes
 10244                           
 10245                           ;ring_buffer_LUT.c: 111: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 10246                           ;ring_buffer_LUT.c: 112: "part number of %s\n\r",
 10247                           ;ring_buffer_LUT.c: 113: getDeviceID(),
 10248                           ;ring_buffer_LUT.c: 114: getDeviceIDString(getDeviceID()));
 10249  010168  0E73               	movlw	low STR_54
 10250  01016A  0101               	movlb	1	; () banked
 10251  01016C  6F82               	movwf	printf@f& (0+255),b
 10252  01016E  0EF3               	movlw	high STR_54
 10253  010170  6F83               	movwf	(printf@f+1)& (0+255),b
 10254  010172  EC72  F0C8         	call	_getDeviceID	;wreg free
 10255  010176  C122  F184         	movff	?_getDeviceID,?_printf+2
 10256  01017A  C123  F185         	movff	?_getDeviceID+1,?_printf+3
 10257  01017E  EC72  F0C8         	call	_getDeviceID	;wreg free
 10258  010182  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 10259  010186  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 10260  01018A  ECB3  F0C3         	call	_getDeviceIDString	;wreg free
 10261  01018E  C124  F186         	movff	?_getDeviceIDString,?_printf+4
 10262  010192  C125  F187         	movff	?_getDeviceIDString+1,?_printf+5
 10263  010196  EC7F  F089         	call	_printf	;wreg free
 10264                           
 10265                           ;ring_buffer_LUT.c: 116: terminal_textAttributesReset();
 10266  01019A  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10267                           
 10268                           ;ring_buffer_LUT.c: 118: }
 10269  01019E  0012               	return	
 10270  0101A0                     l1252:
 10271                           
 10272                           ;ring_buffer_LUT.c: 121: else if((0 == strcmp(line, "Revision ID?"))) {
 10273  0101A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10274  0101A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10275  0101A8  0E12               	movlw	low STR_55
 10276  0101AA  0101               	movlb	1	; () banked
 10277  0101AC  6F19               	movwf	strcmp@s2& (0+255),b
 10278  0101AE  0EFF               	movlw	high STR_55
 10279  0101B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10280  0101B2  EC91  F0C4         	call	_strcmp	;wreg free
 10281  0101B6  0101               	movlb	1	; () banked
 10282  0101B8  5117               	movf	?_strcmp& (0+255),w,b
 10283  0101BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10284  0101BC  A4D8               	btfss	status,2,c
 10285  0101BE  D022               	goto	l1254
 10286                           
 10287                           ; BSR set to: 1
 10288                           ;ring_buffer_LUT.c: 123: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10289  0101C0  0E00               	movlw	0
 10290  0101C2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10291  0101C4  0E00               	movlw	0
 10292  0101C6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10293  0101C8  0E02               	movlw	2
 10294  0101CA  ECCA  F0A0         	call	_terminal_textAttributes
 10295                           
 10296                           ;ring_buffer_LUT.c: 126: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 10297                           ;ring_buffer_LUT.c: 127: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 10298  0101CE  0E0E               	movlw	low STR_56
 10299  0101D0  0101               	movlb	1	; () banked
 10300  0101D2  6F82               	movwf	printf@f& (0+255),b
 10301  0101D4  0EF5               	movlw	high STR_56
 10302  0101D6  6F83               	movwf	(printf@f+1)& (0+255),b
 10303  0101D8  EC8C  F0C6         	call	_getMajorRevisionID	;wreg free
 10304  0101DC  0101               	movlb	1	; () banked
 10305  0101DE  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 10306  0101E0  0E41               	movlw	65
 10307  0101E2  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 10308  0101E4  6F84               	movwf	(?_printf+2)& (0+255),b
 10309  0101E6  6B85               	clrf	(?_printf+3)& (0+255),b
 10310  0101E8  0E00               	movlw	0
 10311  0101EA  2385               	addwfc	(?_printf+3)& (0+255),f,b
 10312  0101EC  EC16  F0C8         	call	_getMinorRevisionID	;wreg free
 10313  0101F0  0101               	movlb	1	; () banked
 10314  0101F2  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 10315  0101F4  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 10316  0101F6  6F86               	movwf	(?_printf+4)& (0+255),b
 10317  0101F8  6B87               	clrf	(?_printf+5)& (0+255),b
 10318  0101FA  EC7F  F089         	call	_printf	;wreg free
 10319                           
 10320                           ;ring_buffer_LUT.c: 129: terminal_textAttributesReset();
 10321  0101FE  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10322                           
 10323                           ;ring_buffer_LUT.c: 131: }
 10324  010202  0012               	return	
 10325  010204                     l1254:
 10326                           
 10327                           ;ring_buffer_LUT.c: 134: else if((0 == strcmp(line, "User IDs?"))) {
 10328  010204  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10329  010208  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10330  01020C  0E72               	movlw	low STR_57
 10331  01020E  0101               	movlb	1	; () banked
 10332  010210  6F19               	movwf	strcmp@s2& (0+255),b
 10333  010212  0EFF               	movlw	high STR_57
 10334  010214  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10335  010216  EC91  F0C4         	call	_strcmp	;wreg free
 10336  01021A  0101               	movlb	1	; () banked
 10337  01021C  5117               	movf	?_strcmp& (0+255),w,b
 10338  01021E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10339  010220  A4D8               	btfss	status,2,c
 10340  010222  D03E               	goto	l1256
 10341                           
 10342                           ; BSR set to: 1
 10343                           ;ring_buffer_LUT.c: 136: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10344  010224  0E00               	movlw	0
 10345  010226  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10346  010228  0E00               	movlw	0
 10347  01022A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10348  01022C  0E02               	movlw	2
 10349  01022E  ECCA  F0A0         	call	_terminal_textAttributes
 10350                           
 10351                           ;ring_buffer_LUT.c: 138: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 10352  010232  0E51               	movlw	low STR_58
 10353  010234  0101               	movlb	1	; () banked
 10354  010236  6F82               	movwf	printf@f& (0+255),b
 10355  010238  0EF4               	movlw	high STR_58
 10356  01023A  6F83               	movwf	(printf@f+1)& (0+255),b
 10357  01023C  EC7F  F089         	call	_printf	;wreg free
 10358                           
 10359                           ;ring_buffer_LUT.c: 141: for (int userID = 0; userID <= 7; userID++) {
 10360  010240  0E00               	movlw	0
 10361  010242  0102               	movlb	2	; () banked
 10362  010244  6FCA               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 10363  010246  0E00               	movlw	0
 10364  010248  6FC9               	movwf	ringBufferLUT@userID& (0+255),b
 10365  01024A                     l19544:
 10366                           
 10367                           ; BSR set to: 2
 10368  01024A  BFCA               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 10369  01024C  D006               	goto	l1257
 10370  01024E  51CA               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 10371  010250  E124               	bnz	l19554
 10372  010252  0E08               	movlw	8
 10373  010254  5DC9               	subwf	ringBufferLUT@userID& (0+255),w,b
 10374  010256  B0D8               	btfsc	status,0,c
 10375  010258  D020               	goto	u26180
 10376  01025A                     l1257:
 10377                           
 10378                           ; BSR set to: 2
 10379                           ;ring_buffer_LUT.c: 143: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 10380                           ;ring_buffer_LUT.c: 144: userID,
 10381                           ;ring_buffer_LUT.c: 145: (2 * userID),
 10382                           ;ring_buffer_LUT.c: 146: getUserID(userID));
 10383                           
 10384                           ; BSR set to: 2
 10385  01025A  0E2C               	movlw	low STR_59
 10386  01025C  0101               	movlb	1	; () banked
 10387  01025E  6F82               	movwf	printf@f& (0+255),b
 10388  010260  0EF6               	movlw	high STR_59
 10389  010262  6F83               	movwf	(printf@f+1)& (0+255),b
 10390  010264  C2C9  F184         	movff	ringBufferLUT@userID,?_printf+2
 10391  010268  C2CA  F185         	movff	ringBufferLUT@userID+1,?_printf+3
 10392  01026C  90D8               	bcf	status,0,c
 10393  01026E  0102               	movlb	2	; () banked
 10394  010270  35C9               	rlcf	ringBufferLUT@userID& (0+255),w,b
 10395  010272  0101               	movlb	1	; () banked
 10396  010274  6F86               	movwf	(?_printf+4)& (0+255),b
 10397  010276  0102               	movlb	2	; () banked
 10398  010278  35CA               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 10399  01027A  0101               	movlb	1	; () banked
 10400  01027C  6F87               	movwf	(?_printf+5)& (0+255),b
 10401  01027E  0102               	movlb	2	; () banked
 10402  010280  51C9               	movf	ringBufferLUT@userID& (0+255),w,b
 10403  010282  EC0A  F0C6         	call	_getUserID
 10404  010286  C122  F188         	movff	?_getUserID,?_printf+6
 10405  01028A  C123  F189         	movff	?_getUserID+1,?_printf+7
 10406  01028E  EC7F  F089         	call	_printf	;wreg free
 10407  010292  0102               	movlb	2	; () banked
 10408  010294  4BC9               	infsnz	ringBufferLUT@userID& (0+255),f,b
 10409  010296  2BCA               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 10410  010298  D7D8               	goto	l19544
 10411  01029A                     u26180:
 10412  01029A                     l19554:
 10413                           
 10414                           ; BSR set to: 2
 10415                           ;ring_buffer_LUT.c: 148: }
 10416                           ;ring_buffer_LUT.c: 150: terminal_textAttributesReset();
 10417  01029A  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10418                           
 10419                           ;ring_buffer_LUT.c: 152: }
 10420  01029E  0012               	return	
 10421  0102A0                     l1256:
 10422                           
 10423                           ;ring_buffer_LUT.c: 155: else if((0 == strcmp(line, "ADC Error?"))) {
 10424  0102A0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10425  0102A4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10426  0102A8  0E67               	movlw	low STR_60
 10427  0102AA  0101               	movlb	1	; () banked
 10428  0102AC  6F19               	movwf	strcmp@s2& (0+255),b
 10429  0102AE  0EFF               	movlw	high STR_60
 10430  0102B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10431  0102B2  EC91  F0C4         	call	_strcmp	;wreg free
 10432  0102B6  0101               	movlb	1	; () banked
 10433  0102B8  5117               	movf	?_strcmp& (0+255),w,b
 10434  0102BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10435  0102BC  A4D8               	btfss	status,2,c
 10436  0102BE  D0A4               	goto	l1260
 10437                           
 10438                           ; BSR set to: 1
 10439                           ;ring_buffer_LUT.c: 157: if (adc_error_flag) {
 10440  0102C0  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 10441  0102C2  D090               	goto	l1261
 10442                           
 10443                           ; BSR set to: 1
 10444                           ;ring_buffer_LUT.c: 159: terminal_textAttributes(RED, BLACK, NORMAL);
 10445  0102C4  0E00               	movlw	0
 10446  0102C6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10447  0102C8  0E00               	movlw	0
 10448  0102CA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10449  0102CC  0E01               	movlw	1
 10450  0102CE  ECCA  F0A0         	call	_terminal_textAttributes
 10451                           
 10452                           ;ring_buffer_LUT.c: 162: current_adc_channel = ADPCH;
 10453  0102D2  CF5F F23C          	movff	3935,_current_adc_channel	;volatile
 10454                           
 10455                           ;ring_buffer_LUT.c: 165: char channel_name[22];
 10456                           ;ring_buffer_LUT.c: 167: switch (current_adc_channel) {
 10457  0102D6  D060               	goto	l1262
 10458  0102D8                     
 10459                           ;ring_buffer_LUT.c: 170: strcpy(channel_name, "ISNS");
 10460  0102D8  0E90               	movlw	low ringBufferLUT@channel_name
 10461  0102DA  0101               	movlb	1	; () banked
 10462  0102DC  6F17               	movwf	strcpy@to& (0+255),b
 10463  0102DE  0E02               	movlw	high ringBufferLUT@channel_name
 10464  0102E0  6F18               	movwf	(strcpy@to+1)& (0+255),b
 10465  0102E2  0EA6               	movlw	low STR_61
 10466  0102E4  6F19               	movwf	strcpy@from& (0+255),b
 10467  0102E6  0EFF               	movlw	high STR_61
 10468  0102E8  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 10469  0102EA  ECE4  F0C6         	call	_strcpy	;wreg free
 10470                           
 10471                           ;ring_buffer_LUT.c: 171: break;
 10472  0102EE  D06C               	goto	l1264
 10473  0102F0                     
 10474                           ;ring_buffer_LUT.c: 174: strcpy(channel_name, "POS12");
 10475  0102F0  0E90               	movlw	low ringBufferLUT@channel_name
 10476  0102F2  0101               	movlb	1	; () banked
 10477  0102F4  6F17               	movwf	strcpy@to& (0+255),b
 10478  0102F6  0E02               	movlw	high ringBufferLUT@channel_name
 10479  0102F8  6F18               	movwf	(strcpy@to+1)& (0+255),b
 10480  0102FA  0E94               	movlw	low STR_62
 10481  0102FC  6F19               	movwf	strcpy@from& (0+255),b
 10482  0102FE  0EFF               	movlw	high STR_62
 10483  010300  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 10484  010302  ECE4  F0C6         	call	_strcpy	;wreg free
 10485                           
 10486                           ;ring_buffer_LUT.c: 175: break;
 10487  010306  D060               	goto	l1264
 10488  010308                     
 10489                           ;ring_buffer_LUT.c: 178: strcpy(channel_name, "POS3P3");
 10490  010308  0E90               	movlw	low ringBufferLUT@channel_name
 10491  01030A  0101               	movlb	1	; () banked
 10492  01030C  6F17               	movwf	strcpy@to& (0+255),b
 10493  01030E  0E02               	movlw	high ringBufferLUT@channel_name
 10494  010310  6F18               	movwf	(strcpy@to+1)& (0+255),b
 10495  010312  0E8D               	movlw	low STR_63
 10496  010314  6F19               	movwf	strcpy@from& (0+255),b
 10497  010316  0EFF               	movlw	high STR_63
 10498  010318  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 10499  01031A  ECE4  F0C6         	call	_strcpy	;wreg free
 10500                           
 10501                           ;ring_buffer_LUT.c: 179: break;
 10502  01031E  D054               	goto	l1264
 10503  010320                     
 10504                           ;ring_buffer_LUT.c: 182: strcpy(channel_name, "Internal AVSS");
 10505  010320  0E90               	movlw	low ringBufferLUT@channel_name
 10506  010322  0101               	movlb	1	; () banked
 10507  010324  6F17               	movwf	strcpy@to& (0+255),b
 10508  010326  0E02               	movlw	high ringBufferLUT@channel_name
 10509  010328  6F18               	movwf	(strcpy@to+1)& (0+255),b
 10510  01032A  0EE9               	movlw	low STR_64
 10511  01032C  6F19               	movwf	strcpy@from& (0+255),b
 10512  01032E  0EFE               	movlw	high STR_64
 10513  010330  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 10514  010332  ECE4  F0C6         	call	_strcpy	;wreg free
 10515                           
 10516                           ;ring_buffer_LUT.c: 183: break;
 10517  010336  D048               	goto	l1264
 10518  010338                     
 10519                           ;ring_buffer_LUT.c: 186: strcpy(channel_name, "Internal Temp");
 10520  010338  0E90               	movlw	low ringBufferLUT@channel_name
 10521  01033A  0101               	movlb	1	; () banked
 10522  01033C  6F17               	movwf	strcpy@to& (0+255),b
 10523  01033E  0E02               	movlw	high ringBufferLUT@channel_name
 10524  010340  6F18               	movwf	(strcpy@to+1)& (0+255),b
 10525  010342  0EF7               	movlw	low STR_65
 10526  010344  6F19               	movwf	strcpy@from& (0+255),b
 10527  010346  0EFE               	movlw	high STR_65
 10528  010348  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 10529  01034A  ECE4  F0C6         	call	_strcpy	;wreg free
 10530                           
 10531                           ;ring_buffer_LUT.c: 187: break;
 10532  01034E  D03C               	goto	l1264
 10533  010350                     
 10534                           ;ring_buffer_LUT.c: 190: strcpy(channel_name, "Internal DAC1");
 10535  010350  0E90               	movlw	low ringBufferLUT@channel_name
 10536  010352  0101               	movlb	1	; () banked
 10537  010354  6F17               	movwf	strcpy@to& (0+255),b
 10538  010356  0E02               	movlw	high ringBufferLUT@channel_name
 10539  010358  6F18               	movwf	(strcpy@to+1)& (0+255),b
 10540  01035A  0EA3               	movlw	low STR_66
 10541  01035C  6F19               	movwf	strcpy@from& (0+255),b
 10542  01035E  0EFE               	movlw	high STR_66
 10543  010360  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 10544  010362  ECE4  F0C6         	call	_strcpy	;wreg free
 10545                           
 10546                           ;ring_buffer_LUT.c: 191: break;
 10547  010366  D030               	goto	l1264
 10548  010368                     
 10549                           ;ring_buffer_LUT.c: 194: strcpy(channel_name, "Internal FVR Buffer 1");
 10550  010368  0E90               	movlw	low ringBufferLUT@channel_name
 10551  01036A  0101               	movlb	1	; () banked
 10552  01036C  6F17               	movwf	strcpy@to& (0+255),b
 10553  01036E  0E02               	movlw	high ringBufferLUT@channel_name
 10554  010370  6F18               	movwf	(strcpy@to+1)& (0+255),b
 10555  010372  0ECA               	movlw	low STR_67
 10556  010374  6F19               	movwf	strcpy@from& (0+255),b
 10557  010376  0EFC               	movlw	high STR_67
 10558  010378  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 10559  01037A  ECE4  F0C6         	call	_strcpy	;wreg free
 10560                           
 10561                           ;ring_buffer_LUT.c: 195: break;
 10562  01037E  D024               	goto	l1264
 10563  010380                     
 10564                           ;ring_buffer_LUT.c: 198: strcpy(channel_name, "Undefined");
 10565  010380  0E90               	movlw	low ringBufferLUT@channel_name
 10566  010382  0101               	movlb	1	; () banked
 10567  010384  6F17               	movwf	strcpy@to& (0+255),b
 10568  010386  0E02               	movlw	high ringBufferLUT@channel_name
 10569  010388  6F18               	movwf	(strcpy@to+1)& (0+255),b
 10570  01038A  0E7C               	movlw	low STR_68
 10571  01038C  6F19               	movwf	strcpy@from& (0+255),b
 10572  01038E  0EFF               	movlw	high STR_68
 10573  010390  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 10574  010392  ECE4  F0C6         	call	_strcpy	;wreg free
 10575                           
 10576                           ;ring_buffer_LUT.c: 201: }
 10577                           
 10578                           ;ring_buffer_LUT.c: 199: break;
 10579  010396  D018               	goto	l1264
 10580  010398                     l1262:
 10581  010398  0102               	movlb	2	; () banked
 10582  01039A  513C               	movf	_current_adc_channel& (0+255),w,b
 10583                           
 10584                           ; Switch size 1, requested type "space"
 10585                           ; Number of cases is 7, Range of values is 0 to 63
 10586                           ; switch strategies available:
 10587                           ; Name         Instructions Cycles
 10588                           ; simple_byte           22    12 (average)
 10589                           ;	Chosen strategy is simple_byte
 10590  01039C  0A00               	xorlw	0	; case 0
 10591  01039E  B4D8               	btfsc	status,2,c
 10592  0103A0  D79B               	goto	l1263
 10593  0103A2  0A04               	xorlw	4	; case 4
 10594  0103A4  B4D8               	btfsc	status,2,c
 10595  0103A6  D7A4               	goto	l1265
 10596  0103A8  0A26               	xorlw	38	; case 34
 10597  0103AA  B4D8               	btfsc	status,2,c
 10598  0103AC  D7AD               	goto	l1266
 10599  0103AE  0A1E               	xorlw	30	; case 60
 10600  0103B0  B4D8               	btfsc	status,2,c
 10601  0103B2  D7B6               	goto	l1267
 10602  0103B4  0A01               	xorlw	1	; case 61
 10603  0103B6  B4D8               	btfsc	status,2,c
 10604  0103B8  D7BF               	goto	l1268
 10605  0103BA  0A03               	xorlw	3	; case 62
 10606  0103BC  B4D8               	btfsc	status,2,c
 10607  0103BE  D7C8               	goto	l1269
 10608  0103C0  0A01               	xorlw	1	; case 63
 10609  0103C2  B4D8               	btfsc	status,2,c
 10610  0103C4  D7D1               	goto	l1270
 10611  0103C6  D7DC               	goto	l1271
 10612  0103C8                     l1264:
 10613                           
 10614                           ;ring_buffer_LUT.c: 204: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
 10615                           
 10616                           ; BSR set to: 2
 10617  0103C8  0ECE               	movlw	low STR_69
 10618  0103CA  0101               	movlb	1	; () banked
 10619  0103CC  6F82               	movwf	printf@f& (0+255),b
 10620  0103CE  0EF7               	movlw	high STR_69
 10621  0103D0  6F83               	movwf	(printf@f+1)& (0+255),b
 10622  0103D2  0E90               	movlw	low ringBufferLUT@channel_name
 10623  0103D4  6F84               	movwf	(?_printf+2)& (0+255),b
 10624  0103D6  0E02               	movlw	high ringBufferLUT@channel_name
 10625  0103D8  6F85               	movwf	(?_printf+3)& (0+255),b
 10626  0103DA  EC7F  F089         	call	_printf	;wreg free
 10627                           
 10628                           ;ring_buffer_LUT.c: 205: terminal_textAttributesReset();
 10629  0103DE  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10630                           
 10631                           ;ring_buffer_LUT.c: 207: }
 10632  0103E2  0012               	return	
 10633  0103E4                     l1261:
 10634                           
 10635                           ;ring_buffer_LUT.c: 209: else {
 10636                           ;ring_buffer_LUT.c: 211: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10637  0103E4  0E00               	movlw	0
 10638  0103E6  0101               	movlb	1	; () banked
 10639  0103E8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10640  0103EA  0E00               	movlw	0
 10641  0103EC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10642  0103EE  0E02               	movlw	2
 10643  0103F0  ECCA  F0A0         	call	_terminal_textAttributes
 10644                           
 10645                           ;ring_buffer_LUT.c: 212: printf("No ADC Error detected\n\r");
 10646  0103F4  0E9C               	movlw	low STR_70
 10647  0103F6  0101               	movlb	1	; () banked
 10648  0103F8  6F82               	movwf	printf@f& (0+255),b
 10649  0103FA  0EFC               	movlw	high STR_70
 10650  0103FC  6F83               	movwf	(printf@f+1)& (0+255),b
 10651  0103FE  EC7F  F089         	call	_printf	;wreg free
 10652                           
 10653                           ;ring_buffer_LUT.c: 213: terminal_textAttributesReset();
 10654  010402  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10655                           
 10656                           ;ring_buffer_LUT.c: 215: }
 10657                           ;ring_buffer_LUT.c: 217: }
 10658  010406  0012               	return	
 10659  010408                     l1260:
 10660                           
 10661                           ;ring_buffer_LUT.c: 220: else if((0 == strcmp(line, "Clear ADC Error"))) {
 10662  010408  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10663  01040C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10664  010410  0E57               	movlw	low STR_71
 10665  010412  0101               	movlb	1	; () banked
 10666  010414  6F19               	movwf	strcmp@s2& (0+255),b
 10667  010416  0EFE               	movlw	high STR_71
 10668  010418  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10669  01041A  EC91  F0C4         	call	_strcmp	;wreg free
 10670  01041E  0101               	movlb	1	; () banked
 10671  010420  5117               	movf	?_strcmp& (0+255),w,b
 10672  010422  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10673  010424  A4D8               	btfss	status,2,c
 10674  010426  D018               	goto	l1274
 10675                           
 10676                           ; BSR set to: 1
 10677                           ;ring_buffer_LUT.c: 222: LATFbits.LATF3 = 0;
 10678  010428  967E               	bcf	3966,3,c	;volatile
 10679                           
 10680                           ;ring_buffer_LUT.c: 223: adc_error_flag = 0;
 10681  01042A  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 10682                           
 10683                           ;ring_buffer_LUT.c: 225: PIE5bits.TMR7IE = 1;
 10684  01042C  010E               	movlb	14	; () banked
 10685  01042E  8D2E               	bsf	46,6,b	;volatile
 10686                           
 10687                           ; BSR set to: 14
 10688                           ;ring_buffer_LUT.c: 226: TMR7_StopTimer();
 10689  010430  EC77  F0C9         	call	_TMR7_StopTimer	;wreg free
 10690                           
 10691                           ;ring_buffer_LUT.c: 228: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10692  010434  0E00               	movlw	0
 10693  010436  0101               	movlb	1	; () banked
 10694  010438  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10695  01043A  0E00               	movlw	0
 10696  01043C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10697  01043E  0E02               	movlw	2
 10698  010440  ECCA  F0A0         	call	_terminal_textAttributes
 10699                           
 10700                           ;ring_buffer_LUT.c: 229: printf("Clearing ADC Error\n\r");
 10701  010444  0EF5               	movlw	low STR_72
 10702  010446  0101               	movlb	1	; () banked
 10703  010448  6F82               	movwf	printf@f& (0+255),b
 10704  01044A  0EFC               	movlw	high STR_72
 10705  01044C  6F83               	movwf	(printf@f+1)& (0+255),b
 10706  01044E  EC7F  F089         	call	_printf	;wreg free
 10707                           
 10708                           ;ring_buffer_LUT.c: 230: terminal_textAttributesReset();
 10709  010452  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10710                           
 10711                           ;ring_buffer_LUT.c: 232: }
 10712  010456  0012               	return	
 10713  010458                     l1274:
 10714                           
 10715                           ;ring_buffer_LUT.c: 235: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
 10716  010458  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10717  01045C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10718  010460  0EC4               	movlw	low STR_73
 10719  010462  0101               	movlb	1	; () banked
 10720  010464  6F19               	movwf	strcmp@s2& (0+255),b
 10721  010466  0EFD               	movlw	high STR_73
 10722  010468  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10723  01046A  EC91  F0C4         	call	_strcmp	;wreg free
 10724  01046E  0101               	movlb	1	; () banked
 10725  010470  5117               	movf	?_strcmp& (0+255),w,b
 10726  010472  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10727  010474  A4D8               	btfss	status,2,c
 10728  010476  D026               	goto	l1276
 10729                           
 10730                           ; BSR set to: 1
 10731                           ;ring_buffer_LUT.c: 238: if (VCC_overvoltage_flag == 1) {
 10732  010478  A45E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 10733  01047A  D012               	goto	l1277
 10734                           
 10735                           ; BSR set to: 1
 10736                           ;ring_buffer_LUT.c: 240: terminal_textAttributes(RED, BLACK, NORMAL);
 10737  01047C  0E00               	movlw	0
 10738  01047E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10739  010480  0E00               	movlw	0
 10740  010482  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10741  010484  0E01               	movlw	1
 10742  010486  ECCA  F0A0         	call	_terminal_textAttributes
 10743                           
 10744                           ;ring_buffer_LUT.c: 241: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
 10745  01048A  0E0F               	movlw	low STR_74
 10746  01048C  0101               	movlb	1	; () banked
 10747  01048E  6F82               	movwf	printf@f& (0+255),b
 10748  010490  0EF4               	movlw	high STR_74
 10749  010492  6F83               	movwf	(printf@f+1)& (0+255),b
 10750  010494  EC7F  F089         	call	_printf	;wreg free
 10751                           
 10752                           ;ring_buffer_LUT.c: 242: terminal_textAttributesReset();
 10753  010498  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10754                           
 10755                           ;ring_buffer_LUT.c: 245: VCC_overvoltage_flag = 0;
 10756  01049C  945E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 10757                           
 10758                           ;ring_buffer_LUT.c: 247: }
 10759  01049E  0012               	return	
 10760  0104A0                     l1277:
 10761                           
 10762                           ;ring_buffer_LUT.c: 249: else {
 10763                           ;ring_buffer_LUT.c: 251: terminal_textAttributes(GREEN, BLACK, NORMAL);
 10764  0104A0  0E00               	movlw	0
 10765  0104A2  0101               	movlb	1	; () banked
 10766  0104A4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10767  0104A6  0E00               	movlw	0
 10768  0104A8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10769  0104AA  0E02               	movlw	2
 10770  0104AC  ECCA  F0A0         	call	_terminal_textAttributes
 10771                           
 10772                           ;ring_buffer_LUT.c: 252: printf("VCC Overvoltage condition has not occurred\n\r");
 10773  0104B0  0EE4               	movlw	low STR_75
 10774  0104B2  0101               	movlb	1	; () banked
 10775  0104B4  6F82               	movwf	printf@f& (0+255),b
 10776  0104B6  0EF8               	movlw	high STR_75
 10777  0104B8  6F83               	movwf	(printf@f+1)& (0+255),b
 10778  0104BA  EC7F  F089         	call	_printf	;wreg free
 10779                           
 10780                           ;ring_buffer_LUT.c: 253: terminal_textAttributesReset();
 10781  0104BE  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10782                           
 10783                           ;ring_buffer_LUT.c: 255: }
 10784                           ;ring_buffer_LUT.c: 257: }
 10785  0104C2  0012               	return	
 10786  0104C4                     l1276:
 10787                           
 10788                           ;ring_buffer_LUT.c: 260: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 10789  0104C4  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10790  0104C8  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10791  0104CC  0E17               	movlw	low STR_76
 10792  0104CE  0101               	movlb	1	; () banked
 10793  0104D0  6F19               	movwf	strcmp@s2& (0+255),b
 10794  0104D2  0EFE               	movlw	high STR_76
 10795  0104D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10796  0104D6  EC91  F0C4         	call	_strcmp	;wreg free
 10797  0104DA  0101               	movlb	1	; () banked
 10798  0104DC  5117               	movf	?_strcmp& (0+255),w,b
 10799  0104DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10800  0104E0  A4D8               	btfss	status,2,c
 10801  0104E2  D019               	goto	l1280
 10802                           
 10803                           ; BSR set to: 1
 10804                           ;ring_buffer_LUT.c: 262: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10805  0104E4  0E00               	movlw	0
 10806  0104E6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10807  0104E8  0E00               	movlw	0
 10808  0104EA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10809  0104EC  0E06               	movlw	6
 10810  0104EE  ECCA  F0A0         	call	_terminal_textAttributes
 10811                           
 10812                           ;ring_buffer_LUT.c: 263: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 10813  0104F2  0E2B               	movlw	low STR_77
 10814  0104F4  0101               	movlb	1	; () banked
 10815  0104F6  6F82               	movwf	printf@f& (0+255),b
 10816  0104F8  0EFA               	movlw	high STR_77
 10817  0104FA  6F83               	movwf	(printf@f+1)& (0+255),b
 10818  0104FC  C1D3  F184         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 10819  010500  C1D4  F185         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 10820  010504  C1D5  F186         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 10821  010508  C1D6  F187         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 10822  01050C  EC7F  F089         	call	_printf	;wreg free
 10823                           
 10824                           ;ring_buffer_LUT.c: 264: terminal_textAttributesReset();
 10825  010510  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10826                           
 10827                           ;ring_buffer_LUT.c: 266: }
 10828  010514  0012               	return	
 10829  010516                     l1280:
 10830                           
 10831                           ;ring_buffer_LUT.c: 269: else if((0 == strcmp(line, "Measure POS12?"))) {
 10832  010516  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10833  01051A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10834  01051E  0E76               	movlw	low STR_78
 10835  010520  0101               	movlb	1	; () banked
 10836  010522  6F19               	movwf	strcmp@s2& (0+255),b
 10837  010524  0EFE               	movlw	high STR_78
 10838  010526  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10839  010528  EC91  F0C4         	call	_strcmp	;wreg free
 10840  01052C  0101               	movlb	1	; () banked
 10841  01052E  5117               	movf	?_strcmp& (0+255),w,b
 10842  010530  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10843  010532  A4D8               	btfss	status,2,c
 10844  010534  D019               	goto	l1282
 10845                           
 10846                           ; BSR set to: 1
 10847                           ;ring_buffer_LUT.c: 271: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10848  010536  0E00               	movlw	0
 10849  010538  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10850  01053A  0E00               	movlw	0
 10851  01053C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10852  01053E  0E06               	movlw	6
 10853  010540  ECCA  F0A0         	call	_terminal_textAttributes
 10854                           
 10855                           ;ring_buffer_LUT.c: 272: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 10856  010544  0E99               	movlw	low STR_79
 10857  010546  0101               	movlb	1	; () banked
 10858  010548  6F82               	movwf	printf@f& (0+255),b
 10859  01054A  0EFA               	movlw	high STR_79
 10860  01054C  6F83               	movwf	(printf@f+1)& (0+255),b
 10861  01054E  C1CF  F184         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 10862  010552  C1D0  F185         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 10863  010556  C1D1  F186         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 10864  01055A  C1D2  F187         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 10865  01055E  EC7F  F089         	call	_printf	;wreg free
 10866                           
 10867                           ;ring_buffer_LUT.c: 273: terminal_textAttributesReset();
 10868  010562  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10869                           
 10870                           ;ring_buffer_LUT.c: 275: }
 10871  010566  0012               	return	
 10872  010568                     l1282:
 10873                           
 10874                           ;ring_buffer_LUT.c: 278: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 10875  010568  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10876  01056C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10877  010570  0E6E               	movlw	low STR_80
 10878  010572  0101               	movlb	1	; () banked
 10879  010574  6F19               	movwf	strcmp@s2& (0+255),b
 10880  010576  0EFD               	movlw	high STR_80
 10881  010578  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10882  01057A  EC91  F0C4         	call	_strcmp	;wreg free
 10883  01057E  0101               	movlb	1	; () banked
 10884  010580  5117               	movf	?_strcmp& (0+255),w,b
 10885  010582  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10886  010584  A4D8               	btfss	status,2,c
 10887  010586  D019               	goto	l1284
 10888                           
 10889                           ; BSR set to: 1
 10890                           ;ring_buffer_LUT.c: 280: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10891  010588  0E00               	movlw	0
 10892  01058A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10893  01058C  0E00               	movlw	0
 10894  01058E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10895  010590  0E06               	movlw	6
 10896  010592  ECCA  F0A0         	call	_terminal_textAttributes
 10897                           
 10898                           ;ring_buffer_LUT.c: 281: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 10899  010596  0E75               	movlw	low STR_81
 10900  010598  0101               	movlb	1	; () banked
 10901  01059A  6F82               	movwf	printf@f& (0+255),b
 10902  01059C  0EFA               	movlw	high STR_81
 10903  01059E  6F83               	movwf	(printf@f+1)& (0+255),b
 10904  0105A0  C1CB  F184         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 10905  0105A4  C1CC  F185         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 10906  0105A8  C1CD  F186         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 10907  0105AC  C1CE  F187         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 10908  0105B0  EC7F  F089         	call	_printf	;wreg free
 10909                           
 10910                           ;ring_buffer_LUT.c: 282: terminal_textAttributesReset();
 10911  0105B4  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10912                           
 10913                           ;ring_buffer_LUT.c: 286: }
 10914  0105B8  0012               	return	
 10915  0105BA                     l1284:
 10916                           
 10917                           ;ring_buffer_LUT.c: 289: else if((0 == strcmp(line, "Measure FVR?"))) {
 10918  0105BA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10919  0105BE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10920  0105C2  0E1F               	movlw	low STR_82
 10921  0105C4  0101               	movlb	1	; () banked
 10922  0105C6  6F19               	movwf	strcmp@s2& (0+255),b
 10923  0105C8  0EFF               	movlw	high STR_82
 10924  0105CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10925  0105CC  EC91  F0C4         	call	_strcmp	;wreg free
 10926  0105D0  0101               	movlb	1	; () banked
 10927  0105D2  5117               	movf	?_strcmp& (0+255),w,b
 10928  0105D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10929  0105D6  A4D8               	btfss	status,2,c
 10930  0105D8  D019               	goto	l1286
 10931                           
 10932                           ; BSR set to: 1
 10933                           ;ring_buffer_LUT.c: 291: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10934  0105DA  0E00               	movlw	0
 10935  0105DC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10936  0105DE  0E00               	movlw	0
 10937  0105E0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10938  0105E2  0E06               	movlw	6
 10939  0105E4  ECCA  F0A0         	call	_terminal_textAttributes
 10940                           
 10941                           ;ring_buffer_LUT.c: 292: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 10942  0105E8  0E83               	movlw	low STR_83
 10943  0105EA  0101               	movlb	1	; () banked
 10944  0105EC  6F82               	movwf	printf@f& (0+255),b
 10945  0105EE  0EF5               	movlw	high STR_83
 10946  0105F0  6F83               	movwf	(printf@f+1)& (0+255),b
 10947  0105F2  C1E4  F184         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 10948  0105F6  C1E5  F185         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 10949  0105FA  C1E6  F186         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 10950  0105FE  C1E7  F187         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 10951  010602  EC7F  F089         	call	_printf	;wreg free
 10952                           
 10953                           ;ring_buffer_LUT.c: 293: terminal_textAttributesReset();
 10954  010606  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10955                           
 10956                           ;ring_buffer_LUT.c: 295: }
 10957  01060A  0012               	return	
 10958  01060C                     l1286:
 10959                           
 10960                           ;ring_buffer_LUT.c: 298: else if((0 == strcmp(line, "Measure AVSS?"))) {
 10961  01060C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 10962  010610  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 10963  010614  0EB1               	movlw	low STR_84
 10964  010616  0101               	movlb	1	; () banked
 10965  010618  6F19               	movwf	strcmp@s2& (0+255),b
 10966  01061A  0EFE               	movlw	high STR_84
 10967  01061C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 10968  01061E  EC91  F0C4         	call	_strcmp	;wreg free
 10969  010622  0101               	movlb	1	; () banked
 10970  010624  5117               	movf	?_strcmp& (0+255),w,b
 10971  010626  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 10972  010628  A4D8               	btfss	status,2,c
 10973  01062A  D019               	goto	l1288
 10974                           
 10975                           ; BSR set to: 1
 10976                           ;ring_buffer_LUT.c: 300: terminal_textAttributes(CYAN, BLACK, NORMAL);
 10977  01062C  0E00               	movlw	0
 10978  01062E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 10979  010630  0E00               	movlw	0
 10980  010632  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 10981  010634  0E06               	movlw	6
 10982  010636  ECCA  F0A0         	call	_terminal_textAttributes
 10983                           
 10984                           ;ring_buffer_LUT.c: 301: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 10985  01063A  0E06               	movlw	low STR_85
 10986  01063C  0101               	movlb	1	; () banked
 10987  01063E  6F82               	movwf	printf@f& (0+255),b
 10988  010640  0EFA               	movlw	high STR_85
 10989  010642  6F83               	movwf	(printf@f+1)& (0+255),b
 10990  010644  C1D7  F184         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 10991  010648  C1D8  F185         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 10992  01064C  C1D9  F186         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 10993  010650  C1DA  F187         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 10994  010654  EC7F  F089         	call	_printf	;wreg free
 10995                           
 10996                           ;ring_buffer_LUT.c: 302: terminal_textAttributesReset();
 10997  010658  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 10998                           
 10999                           ;ring_buffer_LUT.c: 304: }
 11000  01065C  0012               	return	
 11001  01065E                     l1288:
 11002                           
 11003                           ;ring_buffer_LUT.c: 307: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 11004  01065E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11005  010662  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11006  010666  0E50               	movlw	low STR_86
 11007  010668  0101               	movlb	1	; () banked
 11008  01066A  6F19               	movwf	strcmp@s2& (0+255),b
 11009  01066C  0EFC               	movlw	high STR_86
 11010  01066E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11011  010670  EC91  F0C4         	call	_strcmp	;wreg free
 11012  010674  0101               	movlb	1	; () banked
 11013  010676  5117               	movf	?_strcmp& (0+255),w,b
 11014  010678  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11015  01067A  A4D8               	btfss	status,2,c
 11016  01067C  D019               	goto	l1290
 11017                           
 11018                           ; BSR set to: 1
 11019                           ;ring_buffer_LUT.c: 309: terminal_textAttributes(CYAN, BLACK, NORMAL);
 11020  01067E  0E00               	movlw	0
 11021  010680  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11022  010682  0E00               	movlw	0
 11023  010684  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11024  010686  0E06               	movlw	6
 11025  010688  ECCA  F0A0         	call	_terminal_textAttributes
 11026                           
 11027                           ;ring_buffer_LUT.c: 310: printf("Measured Current is %.3f Amps\n\r", Imeas);
 11028  01068C  0E65               	movlw	low STR_87
 11029  01068E  0101               	movlb	1	; () banked
 11030  010690  6F82               	movwf	printf@f& (0+255),b
 11031  010692  0EFB               	movlw	high STR_87
 11032  010694  6F83               	movwf	(printf@f+1)& (0+255),b
 11033  010696  C1C7  F184         	movff	_Imeas,?_printf+2	;volatile
 11034  01069A  C1C8  F185         	movff	_Imeas+1,?_printf+3	;volatile
 11035  01069E  C1C9  F186         	movff	_Imeas+2,?_printf+4	;volatile
 11036  0106A2  C1CA  F187         	movff	_Imeas+3,?_printf+5	;volatile
 11037  0106A6  EC7F  F089         	call	_printf	;wreg free
 11038                           
 11039                           ;ring_buffer_LUT.c: 311: terminal_textAttributesReset();
 11040  0106AA  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11041                           
 11042                           ;ring_buffer_LUT.c: 313: }
 11043  0106AE  0012               	return	
 11044  0106B0                     l1290:
 11045                           
 11046                           ;ring_buffer_LUT.c: 316: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 11047  0106B0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11048  0106B4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11049  0106B8  0E1F               	movlw	low STR_88
 11050  0106BA  0101               	movlb	1	; () banked
 11051  0106BC  6F19               	movwf	strcmp@s2& (0+255),b
 11052  0106BE  0EFD               	movlw	high STR_88
 11053  0106C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11054  0106C2  EC91  F0C4         	call	_strcmp	;wreg free
 11055  0106C6  0101               	movlb	1	; () banked
 11056  0106C8  5117               	movf	?_strcmp& (0+255),w,b
 11057  0106CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11058  0106CC  A4D8               	btfss	status,2,c
 11059  0106CE  D019               	goto	l1292
 11060                           
 11061                           ; BSR set to: 1
 11062                           ;ring_buffer_LUT.c: 318: terminal_textAttributes(CYAN, BLACK, NORMAL);
 11063  0106D0  0E00               	movlw	0
 11064  0106D2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11065  0106D4  0E00               	movlw	0
 11066  0106D6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11067  0106D8  0E06               	movlw	6
 11068  0106DA  ECCA  F0A0         	call	_terminal_textAttributes
 11069                           
 11070                           ;ring_buffer_LUT.c: 319: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 11071  0106DE  0EBD               	movlw	low STR_89
 11072  0106E0  0101               	movlb	1	; () banked
 11073  0106E2  6F82               	movwf	printf@f& (0+255),b
 11074  0106E4  0EFA               	movlw	high STR_89
 11075  0106E6  6F83               	movwf	(printf@f+1)& (0+255),b
 11076  0106E8  C1C3  F184         	movff	_Irms,?_printf+2	;volatile
 11077  0106EC  C1C4  F185         	movff	_Irms+1,?_printf+3	;volatile
 11078  0106F0  C1C5  F186         	movff	_Irms+2,?_printf+4	;volatile
 11079  0106F4  C1C6  F187         	movff	_Irms+3,?_printf+5	;volatile
 11080  0106F8  EC7F  F089         	call	_printf	;wreg free
 11081                           
 11082                           ;ring_buffer_LUT.c: 320: terminal_textAttributesReset();
 11083  0106FC  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11084                           
 11085                           ;ring_buffer_LUT.c: 322: }
 11086  010700  0012               	return	
 11087  010702                     l1292:
 11088                           
 11089                           ;ring_buffer_LUT.c: 325: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 11090  010702  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11091  010706  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11092  01070A  0E0A               	movlw	low STR_90
 11093  01070C  0101               	movlb	1	; () banked
 11094  01070E  6F19               	movwf	strcmp@s2& (0+255),b
 11095  010710  0EFD               	movlw	high STR_90
 11096  010712  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11097  010714  EC91  F0C4         	call	_strcmp	;wreg free
 11098  010718  0101               	movlb	1	; () banked
 11099  01071A  5117               	movf	?_strcmp& (0+255),w,b
 11100  01071C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11101  01071E  A4D8               	btfss	status,2,c
 11102  010720  D019               	goto	l1294
 11103                           
 11104                           ; BSR set to: 1
 11105                           ;ring_buffer_LUT.c: 327: terminal_textAttributes(CYAN, BLACK, NORMAL);
 11106  010722  0E00               	movlw	0
 11107  010724  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11108  010726  0E00               	movlw	0
 11109  010728  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11110  01072A  0E06               	movlw	6
 11111  01072C  ECCA  F0A0         	call	_terminal_textAttributes
 11112                           
 11113                           ;ring_buffer_LUT.c: 328: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 11114  010730  0EDF               	movlw	low STR_91
 11115  010732  0101               	movlb	1	; () banked
 11116  010734  6F82               	movwf	printf@f& (0+255),b
 11117  010736  0EFA               	movlw	high STR_91
 11118  010738  6F83               	movwf	(printf@f+1)& (0+255),b
 11119  01073A  C1BF  F184         	movff	_Vrms,?_printf+2	;volatile
 11120  01073E  C1C0  F185         	movff	_Vrms+1,?_printf+3	;volatile
 11121  010742  C1C1  F186         	movff	_Vrms+2,?_printf+4	;volatile
 11122  010746  C1C2  F187         	movff	_Vrms+3,?_printf+5	;volatile
 11123  01074A  EC7F  F089         	call	_printf	;wreg free
 11124                           
 11125                           ;ring_buffer_LUT.c: 329: terminal_textAttributesReset();
 11126  01074E  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11127                           
 11128                           ;ring_buffer_LUT.c: 331: }
 11129  010752  0012               	return	
 11130  010754                     l1294:
 11131                           
 11132                           ;ring_buffer_LUT.c: 334: else if ((0 == strcmp(line, "Measure Power?"))) {
 11133  010754  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11134  010758  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11135  01075C  0E85               	movlw	low STR_92
 11136  01075E  0101               	movlb	1	; () banked
 11137  010760  6F19               	movwf	strcmp@s2& (0+255),b
 11138  010762  0EFE               	movlw	high STR_92
 11139  010764  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11140  010766  EC91  F0C4         	call	_strcmp	;wreg free
 11141  01076A  0101               	movlb	1	; () banked
 11142  01076C  5117               	movf	?_strcmp& (0+255),w,b
 11143  01076E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11144  010770  A4D8               	btfss	status,2,c
 11145  010772  D019               	goto	l1296
 11146                           
 11147                           ; BSR set to: 1
 11148                           ;ring_buffer_LUT.c: 336: terminal_textAttributes(CYAN, BLACK, NORMAL);
 11149  010774  0E00               	movlw	0
 11150  010776  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11151  010778  0E00               	movlw	0
 11152  01077A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11153  01077C  0E06               	movlw	6
 11154  01077E  ECCA  F0A0         	call	_terminal_textAttributes
 11155                           
 11156                           ;ring_buffer_LUT.c: 337: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 11157  010782  0EBD               	movlw	low STR_93
 11158  010784  0101               	movlb	1	; () banked
 11159  010786  6F82               	movwf	printf@f& (0+255),b
 11160  010788  0EF5               	movlw	high STR_93
 11161  01078A  6F83               	movwf	(printf@f+1)& (0+255),b
 11162  01078C  C1BB  F184         	movff	_Avg_Power,?_printf+2	;volatile
 11163  010790  C1BC  F185         	movff	_Avg_Power+1,?_printf+3	;volatile
 11164  010794  C1BD  F186         	movff	_Avg_Power+2,?_printf+4	;volatile
 11165  010798  C1BE  F187         	movff	_Avg_Power+3,?_printf+5	;volatile
 11166  01079C  EC7F  F089         	call	_printf	;wreg free
 11167                           
 11168                           ;ring_buffer_LUT.c: 338: terminal_textAttributesReset();
 11169  0107A0  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11170                           
 11171                           ;ring_buffer_LUT.c: 340: }
 11172  0107A4  0012               	return	
 11173  0107A6                     l1296:
 11174                           
 11175                           ;ring_buffer_LUT.c: 343: else if ((0 == strcmp(line, "Enable Dimming"))) {
 11176  0107A6  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11177  0107AA  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11178  0107AE  0E94               	movlw	low STR_94
 11179  0107B0  0101               	movlb	1	; () banked
 11180  0107B2  6F19               	movwf	strcmp@s2& (0+255),b
 11181  0107B4  0EFE               	movlw	high STR_94
 11182  0107B6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11183  0107B8  EC91  F0C4         	call	_strcmp	;wreg free
 11184  0107BC  0101               	movlb	1	; () banked
 11185  0107BE  5117               	movf	?_strcmp& (0+255),w,b
 11186  0107C0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11187  0107C2  A4D8               	btfss	status,2,c
 11188  0107C4  D012               	goto	l1298
 11189                           
 11190                           ; BSR set to: 1
 11191                           ;ring_buffer_LUT.c: 346: LATGbits.LATG0 = 0;
 11192  0107C6  907F               	bcf	3967,0,c	;volatile
 11193                           
 11194                           ; BSR set to: 1
 11195                           ;ring_buffer_LUT.c: 348: terminal_textAttributes(GREEN, BLACK, NORMAL);
 11196  0107C8  0E00               	movlw	0
 11197  0107CA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11198  0107CC  0E00               	movlw	0
 11199  0107CE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11200  0107D0  0E02               	movlw	2
 11201  0107D2  ECCA  F0A0         	call	_terminal_textAttributes
 11202                           
 11203                           ;ring_buffer_LUT.c: 349: printf("TRIAC output dimming has been enabled\n\r");
 11204  0107D6  0EB7               	movlw	low STR_95
 11205  0107D8  0101               	movlb	1	; () banked
 11206  0107DA  6F82               	movwf	printf@f& (0+255),b
 11207  0107DC  0EF9               	movlw	high STR_95
 11208  0107DE  6F83               	movwf	(printf@f+1)& (0+255),b
 11209  0107E0  EC7F  F089         	call	_printf	;wreg free
 11210                           
 11211                           ;ring_buffer_LUT.c: 350: terminal_textAttributesReset();
 11212  0107E4  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11213                           
 11214                           ;ring_buffer_LUT.c: 352: }
 11215  0107E8  0012               	return	
 11216  0107EA                     l1298:
 11217                           
 11218                           ;ring_buffer_LUT.c: 355: else if ((0 == strcmp(line, "Disable Dimming"))) {
 11219  0107EA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11220  0107EE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11221  0107F2  0E47               	movlw	low STR_96
 11222  0107F4  0101               	movlb	1	; () banked
 11223  0107F6  6F19               	movwf	strcmp@s2& (0+255),b
 11224  0107F8  0EFE               	movlw	high STR_96
 11225  0107FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11226  0107FC  EC91  F0C4         	call	_strcmp	;wreg free
 11227  010800  0101               	movlb	1	; () banked
 11228  010802  5117               	movf	?_strcmp& (0+255),w,b
 11229  010804  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11230  010806  A4D8               	btfss	status,2,c
 11231  010808  D012               	goto	l1300
 11232                           
 11233                           ; BSR set to: 1
 11234                           ;ring_buffer_LUT.c: 358: LATGbits.LATG0 = 1;
 11235  01080A  807F               	bsf	3967,0,c	;volatile
 11236                           
 11237                           ; BSR set to: 1
 11238                           ;ring_buffer_LUT.c: 360: terminal_textAttributes(RED, BLACK, NORMAL);
 11239  01080C  0E00               	movlw	0
 11240  01080E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11241  010810  0E00               	movlw	0
 11242  010812  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11243  010814  0E01               	movlw	1
 11244  010816  ECCA  F0A0         	call	_terminal_textAttributes
 11245                           
 11246                           ;ring_buffer_LUT.c: 361: printf("TRIAC output dimming has been disabled\n\r");
 11247  01081A  0E8E               	movlw	low STR_97
 11248  01081C  0101               	movlb	1	; () banked
 11249  01081E  6F82               	movwf	printf@f& (0+255),b
 11250  010820  0EF9               	movlw	high STR_97
 11251  010822  6F83               	movwf	(printf@f+1)& (0+255),b
 11252  010824  EC7F  F089         	call	_printf	;wreg free
 11253                           
 11254                           ;ring_buffer_LUT.c: 362: terminal_textAttributesReset();
 11255  010828  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11256                           
 11257                           ;ring_buffer_LUT.c: 364: }
 11258  01082C  0012               	return	
 11259  01082E                     l1300:
 11260                           
 11261                           ;ring_buffer_LUT.c: 367: else if ((0 == strcmp(line, "Enable Load"))) {
 11262  01082E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11263  010832  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11264  010836  0E45               	movlw	low STR_98
 11265  010838  0101               	movlb	1	; () banked
 11266  01083A  6F19               	movwf	strcmp@s2& (0+255),b
 11267  01083C  0EFF               	movlw	high STR_98
 11268  01083E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11269  010840  EC91  F0C4         	call	_strcmp	;wreg free
 11270  010844  0101               	movlb	1	; () banked
 11271  010846  5117               	movf	?_strcmp& (0+255),w,b
 11272  010848  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11273  01084A  A4D8               	btfss	status,2,c
 11274  01084C  D014               	goto	l1302
 11275                           
 11276                           ; BSR set to: 1
 11277                           ;ring_buffer_LUT.c: 369: LATGbits.LATG0 = 1;
 11278  01084E  807F               	bsf	3967,0,c	;volatile
 11279                           
 11280                           ;ring_buffer_LUT.c: 370: LATGbits.LATG1 = 0;
 11281  010850  927F               	bcf	3967,1,c	;volatile
 11282                           
 11283                           ;ring_buffer_LUT.c: 371: load_enable = 1;
 11284  010852  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 11285                           
 11286                           ; BSR set to: 1
 11287                           ;ring_buffer_LUT.c: 373: terminal_textAttributes(GREEN, BLACK, NORMAL);
 11288  010854  0E00               	movlw	0
 11289  010856  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11290  010858  0E00               	movlw	0
 11291  01085A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11292  01085C  0E02               	movlw	2
 11293  01085E  ECCA  F0A0         	call	_terminal_textAttributes
 11294                           
 11295                           ;ring_buffer_LUT.c: 374: printf("Load has been enabled, dimming disabled\n\r");
 11296  010862  0E11               	movlw	low STR_99
 11297  010864  0101               	movlb	1	; () banked
 11298  010866  6F82               	movwf	printf@f& (0+255),b
 11299  010868  0EF9               	movlw	high STR_99
 11300  01086A  6F83               	movwf	(printf@f+1)& (0+255),b
 11301  01086C  EC7F  F089         	call	_printf	;wreg free
 11302                           
 11303                           ;ring_buffer_LUT.c: 375: terminal_textAttributesReset();
 11304  010870  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11305                           
 11306                           ;ring_buffer_LUT.c: 377: }
 11307  010874  0012               	return	
 11308  010876                     l1302:
 11309                           
 11310                           ;ring_buffer_LUT.c: 380: else if ((0 == strcmp(line, "Load Enabled?"))) {
 11311  010876  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11312  01087A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11313  01087E  0EBF               	movlw	low STR_100
 11314  010880  0101               	movlb	1	; () banked
 11315  010882  6F19               	movwf	strcmp@s2& (0+255),b
 11316  010884  0EFE               	movlw	high STR_100
 11317  010886  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11318  010888  EC91  F0C4         	call	_strcmp	;wreg free
 11319  01088C  0101               	movlb	1	; () banked
 11320  01088E  5117               	movf	?_strcmp& (0+255),w,b
 11321  010890  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11322  010892  A4D8               	btfss	status,2,c
 11323  010894  D025               	goto	l1304
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;ring_buffer_LUT.c: 382: if (load_enable == 1) {
 11327  010896  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 11328  010898  D011               	goto	l1305
 11329                           
 11330                           ; BSR set to: 1
 11331                           ;ring_buffer_LUT.c: 384: terminal_textAttributes(GREEN, BLACK, NORMAL);
 11332  01089A  0E00               	movlw	0
 11333  01089C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11334  01089E  0E00               	movlw	0
 11335  0108A0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11336  0108A2  0E02               	movlw	2
 11337  0108A4  ECCA  F0A0         	call	_terminal_textAttributes
 11338                           
 11339                           ;ring_buffer_LUT.c: 385: printf("Load is currently enabled\n\r");
 11340  0108A8  0E19               	movlw	low STR_101
 11341  0108AA  0101               	movlb	1	; () banked
 11342  0108AC  6F82               	movwf	printf@f& (0+255),b
 11343  0108AE  0EFC               	movlw	high STR_101
 11344  0108B0  6F83               	movwf	(printf@f+1)& (0+255),b
 11345  0108B2  EC7F  F089         	call	_printf	;wreg free
 11346                           
 11347                           ;ring_buffer_LUT.c: 386: terminal_textAttributesReset();
 11348  0108B6  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11349                           
 11350                           ;ring_buffer_LUT.c: 388: }
 11351  0108BA  0012               	return	
 11352  0108BC                     l1305:
 11353                           
 11354                           ;ring_buffer_LUT.c: 390: else {
 11355                           ;ring_buffer_LUT.c: 392: terminal_textAttributes(RED, BLACK, NORMAL);
 11356  0108BC  0E00               	movlw	0
 11357  0108BE  0101               	movlb	1	; () banked
 11358  0108C0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11359  0108C2  0E00               	movlw	0
 11360  0108C4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11361  0108C6  0E01               	movlw	1
 11362  0108C8  ECCA  F0A0         	call	_terminal_textAttributes
 11363                           
 11364                           ;ring_buffer_LUT.c: 393: printf("Load is currently disabled\n\r");
 11365  0108CC  0EC2               	movlw	low STR_102
 11366  0108CE  0101               	movlb	1	; () banked
 11367  0108D0  6F82               	movwf	printf@f& (0+255),b
 11368  0108D2  0EFB               	movlw	high STR_102
 11369  0108D4  6F83               	movwf	(printf@f+1)& (0+255),b
 11370  0108D6  EC7F  F089         	call	_printf	;wreg free
 11371                           
 11372                           ;ring_buffer_LUT.c: 394: terminal_textAttributesReset();
 11373  0108DA  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11374                           
 11375                           ;ring_buffer_LUT.c: 397: }
 11376                           ;ring_buffer_LUT.c: 399: }
 11377  0108DE  0012               	return	
 11378  0108E0                     l1304:
 11379                           
 11380                           ;ring_buffer_LUT.c: 402: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 11381  0108E0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11382  0108E4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11383  0108E8  0EA2               	movlw	low STR_103
 11384  0108EA  0101               	movlb	1	; () banked
 11385  0108EC  6F19               	movwf	strcmp@s2& (0+255),b
 11386  0108EE  0EFD               	movlw	high STR_103
 11387  0108F0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11388  0108F2  EC91  F0C4         	call	_strcmp	;wreg free
 11389  0108F6  0101               	movlb	1	; () banked
 11390  0108F8  5117               	movf	?_strcmp& (0+255),w,b
 11391  0108FA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11392  0108FC  A4D8               	btfss	status,2,c
 11393  0108FE  D039               	goto	l1308
 11394                           
 11395                           ; BSR set to: 1
 11396                           ;ring_buffer_LUT.c: 404: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 11397  010900  B25E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 11398                           
 11399                           ; BSR set to: 1
 11400  010902  B07F               	btfsc	3967,0,c	;volatile
 11401  010904  D011               	goto	l1309
 11402                           
 11403                           ; BSR set to: 1
 11404                           ;ring_buffer_LUT.c: 406: terminal_textAttributes(GREEN, BLACK, NORMAL);
 11405  010906  0E00               	movlw	0
 11406  010908  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11407  01090A  0E00               	movlw	0
 11408  01090C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11409  01090E  0E02               	movlw	2
 11410  010910  ECCA  F0A0         	call	_terminal_textAttributes
 11411                           
 11412                           ;ring_buffer_LUT.c: 407: printf("Dimming is currently enabled\n\r");
 11413  010914  0E85               	movlw	low STR_104
 11414  010916  0101               	movlb	1	; () banked
 11415  010918  6F82               	movwf	printf@f& (0+255),b
 11416  01091A  0EFB               	movlw	high STR_104
 11417  01091C  6F83               	movwf	(printf@f+1)& (0+255),b
 11418  01091E  EC7F  F089         	call	_printf	;wreg free
 11419                           
 11420                           ;ring_buffer_LUT.c: 408: terminal_textAttributesReset();
 11421  010922  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11422                           
 11423                           ;ring_buffer_LUT.c: 410: }
 11424  010926  0012               	return	
 11425  010928                     l1309:
 11426                           
 11427                           ; BSR set to: 1
 11428                           ;ring_buffer_LUT.c: 412: else if (load_enable == 1){
 11429  010928  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 11430  01092A  D011               	goto	l1311
 11431                           
 11432                           ; BSR set to: 1
 11433                           ;ring_buffer_LUT.c: 414: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 11434  01092C  0E00               	movlw	0
 11435  01092E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11436  010930  0E00               	movlw	0
 11437  010932  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11438  010934  0E03               	movlw	3
 11439  010936  ECCA  F0A0         	call	_terminal_textAttributes
 11440                           
 11441                           ;ring_buffer_LUT.c: 415: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 11442  01093A  0E62               	movlw	low STR_105
 11443  01093C  0101               	movlb	1	; () banked
 11444  01093E  6F82               	movwf	printf@f& (0+255),b
 11445  010940  0EF6               	movlw	high STR_105
 11446  010942  6F83               	movwf	(printf@f+1)& (0+255),b
 11447  010944  EC7F  F089         	call	_printf	;wreg free
 11448                           
 11449                           ;ring_buffer_LUT.c: 416: terminal_textAttributesReset();
 11450  010948  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11451                           
 11452                           ;ring_buffer_LUT.c: 418: }
 11453  01094C  0012               	return	
 11454  01094E                     l1311:
 11455                           
 11456                           ;ring_buffer_LUT.c: 420: else {
 11457                           ;ring_buffer_LUT.c: 422: terminal_textAttributes(RED, BLACK, NORMAL);
 11458  01094E  0E00               	movlw	0
 11459  010950  0101               	movlb	1	; () banked
 11460  010952  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11461  010954  0E00               	movlw	0
 11462  010956  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11463  010958  0E01               	movlw	1
 11464  01095A  ECCA  F0A0         	call	_terminal_textAttributes
 11465                           
 11466                           ;ring_buffer_LUT.c: 423: printf("Load and dimming are currently disabled\n\r");
 11467  01095E  0E3B               	movlw	low STR_106
 11468  010960  0101               	movlb	1	; () banked
 11469  010962  6F82               	movwf	printf@f& (0+255),b
 11470  010964  0EF9               	movlw	high STR_106
 11471  010966  6F83               	movwf	(printf@f+1)& (0+255),b
 11472  010968  EC7F  F089         	call	_printf	;wreg free
 11473                           
 11474                           ;ring_buffer_LUT.c: 424: terminal_textAttributesReset();
 11475  01096C  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11476                           
 11477                           ;ring_buffer_LUT.c: 426: }
 11478                           ;ring_buffer_LUT.c: 430: }
 11479  010970  0012               	return	
 11480  010972                     l1308:
 11481                           
 11482                           ;ring_buffer_LUT.c: 435: else if ((0 == strcmp(line, "Disable Load"))) {
 11483  010972  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11484  010976  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11485  01097A  0E2C               	movlw	low STR_107
 11486  01097C  0101               	movlb	1	; () banked
 11487  01097E  6F19               	movwf	strcmp@s2& (0+255),b
 11488  010980  0EFF               	movlw	high STR_107
 11489  010982  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11490  010984  EC91  F0C4         	call	_strcmp	;wreg free
 11491  010988  0101               	movlb	1	; () banked
 11492  01098A  5117               	movf	?_strcmp& (0+255),w,b
 11493  01098C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11494  01098E  A4D8               	btfss	status,2,c
 11495  010990  D014               	goto	l1314
 11496                           
 11497                           ; BSR set to: 1
 11498                           ;ring_buffer_LUT.c: 437: LATGbits.LATG1 = 0;
 11499  010992  927F               	bcf	3967,1,c	;volatile
 11500                           
 11501                           ;ring_buffer_LUT.c: 438: LATGbits.LATG0 = 0;
 11502  010994  907F               	bcf	3967,0,c	;volatile
 11503                           
 11504                           ;ring_buffer_LUT.c: 439: load_enable = 0;
 11505  010996  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 11506                           
 11507                           ; BSR set to: 1
 11508                           ;ring_buffer_LUT.c: 441: terminal_textAttributes(RED, BLACK, NORMAL);
 11509  010998  0E00               	movlw	0
 11510  01099A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11511  01099C  0E00               	movlw	0
 11512  01099E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11513  0109A0  0E01               	movlw	1
 11514  0109A2  ECCA  F0A0         	call	_terminal_textAttributes
 11515                           
 11516                           ;ring_buffer_LUT.c: 442: printf("Load has been disabled\n\r");
 11517  0109A6  0E6A               	movlw	low STR_108
 11518  0109A8  0101               	movlb	1	; () banked
 11519  0109AA  6F82               	movwf	printf@f& (0+255),b
 11520  0109AC  0EFC               	movlw	high STR_108
 11521  0109AE  6F83               	movwf	(printf@f+1)& (0+255),b
 11522  0109B0  EC7F  F089         	call	_printf	;wreg free
 11523                           
 11524                           ;ring_buffer_LUT.c: 443: terminal_textAttributesReset();
 11525  0109B4  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11526                           
 11527                           ;ring_buffer_LUT.c: 445: }
 11528  0109B8  0012               	return	
 11529  0109BA                     l1314:
 11530                           
 11531                           ;ring_buffer_LUT.c: 448: else if ((strstr(line, "Set Dimming Percentage: "))) {
 11532  0109BA  C1B4  F126         	movff	ringBufferLUT@line,strstr@s1
 11533  0109BE  C1B5  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 11534  0109C2  0E83               	movlw	low STR_109
 11535  0109C4  0101               	movlb	1	; () banked
 11536  0109C6  6F28               	movwf	strstr@s2& (0+255),b
 11537  0109C8  0EFC               	movlw	high STR_109
 11538  0109CA  6F29               	movwf	(strstr@s2+1)& (0+255),b
 11539  0109CC  EC72  F0C0         	call	_strstr	;wreg free
 11540  0109D0  0101               	movlb	1	; () banked
 11541  0109D2  5126               	movf	?_strstr& (0+255),w,b
 11542  0109D4  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 11543  0109D6  B4D8               	btfsc	status,2,c
 11544  0109D8  D131               	goto	l1316
 11545                           
 11546                           ; BSR set to: 1
 11547                           ;ring_buffer_LUT.c: 451: char arg_buff[3];
 11548                           ;ring_buffer_LUT.c: 454: for (int index = 0; index < 3; index++) {
 11549  0109DA  0E00               	movlw	0
 11550  0109DC  0102               	movlb	2	; () banked
 11551  0109DE  6FC6               	movwf	(ringBufferLUT@index+1)& (0+255),b
 11552  0109E0  0E00               	movlw	0
 11553  0109E2  6FC5               	movwf	ringBufferLUT@index& (0+255),b
 11554  0109E4                     l19694:
 11555                           
 11556                           ; BSR set to: 2
 11557  0109E4  BFC6               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 11558  0109E6  D006               	goto	l1317
 11559  0109E8  51C6               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 11560  0109EA  E11F               	bnz	l19704
 11561  0109EC  0E03               	movlw	3
 11562  0109EE  5DC5               	subwf	ringBufferLUT@index& (0+255),w,b
 11563  0109F0  B0D8               	btfsc	status,0,c
 11564  0109F2  D01B               	goto	u26450
 11565  0109F4                     l1317:
 11566                           
 11567                           ; BSR set to: 2
 11568                           ;ring_buffer_LUT.c: 456: arg_buff[index] = line[index + 24];
 11569                           
 11570                           ; BSR set to: 2
 11571  0109F4  0E18               	movlw	24
 11572  0109F6  25C5               	addwf	ringBufferLUT@index& (0+255),w,b
 11573  0109F8  0101               	movlb	1	; () banked
 11574  0109FA  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 11575  0109FC  0E00               	movlw	0
 11576  0109FE  0102               	movlb	2	; () banked
 11577  010A00  21C6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 11578  010A02  0101               	movlb	1	; () banked
 11579  010A04  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 11580  010A06  51B6               	movf	??_ringBufferLUT& (0+255),w,b
 11581  010A08  25B4               	addwf	ringBufferLUT@line& (0+255),w,b
 11582  010A0A  6ED9               	movwf	fsr2l,c
 11583  010A0C  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 11584  010A0E  21B5               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 11585  010A10  6EDA               	movwf	fsr2h,c
 11586  010A12  0EC2               	movlw	low ringBufferLUT@arg_buff
 11587  010A14  0102               	movlb	2	; () banked
 11588  010A16  25C5               	addwf	ringBufferLUT@index& (0+255),w,b
 11589  010A18  6EE1               	movwf	fsr1l,c
 11590  010A1A  0E02               	movlw	high ringBufferLUT@arg_buff
 11591  010A1C  21C6               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 11592  010A1E  6EE2               	movwf	fsr1h,c
 11593  010A20  CFDF FFE7          	movff	indf2,indf1
 11594                           
 11595                           ; BSR set to: 2
 11596  010A24  4BC5               	infsnz	ringBufferLUT@index& (0+255),f,b
 11597  010A26  2BC6               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 11598  010A28  D7DD               	goto	l19694
 11599  010A2A                     u26450:
 11600  010A2A                     l19704:
 11601                           
 11602                           ; BSR set to: 2
 11603                           ;ring_buffer_LUT.c: 458: }
 11604                           ;ring_buffer_LUT.c: 460: int percentage = atoi(arg_buff);
 11605  010A2A  0EC2               	movlw	low ringBufferLUT@arg_buff
 11606  010A2C  0101               	movlb	1	; () banked
 11607  010A2E  6F1D               	movwf	atoi@s& (0+255),b
 11608  010A30  0E02               	movlw	high ringBufferLUT@arg_buff
 11609  010A32  6F1E               	movwf	(atoi@s+1)& (0+255),b
 11610  010A34  EC1F  F0BE         	call	_atoi	;wreg free
 11611  010A38  C11D  F2C7         	movff	?_atoi,ringBufferLUT@percentage
 11612  010A3C  C11E  F2C8         	movff	?_atoi+1,ringBufferLUT@percentage+1
 11613                           
 11614                           ;ring_buffer_LUT.c: 463: if ( (percentage >= 100) ||
 11615                           ;ring_buffer_LUT.c: 464: (percentage <= 0)) {
 11616  010A40  0102               	movlb	2	; () banked
 11617  010A42  BFC8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 11618  010A44  D006               	goto	u26460
 11619  010A46  51C8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 11620  010A48  E10B               	bnz	l19710
 11621  010A4A  0E64               	movlw	100
 11622  010A4C  5DC7               	subwf	ringBufferLUT@percentage& (0+255),w,b
 11623  010A4E  B0D8               	btfsc	status,0,c
 11624  010A50  D007               	goto	u26470
 11625  010A52                     u26460:
 11626                           
 11627                           ; BSR set to: 2
 11628  010A52  BFC8               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 11629  010A54  D005               	goto	u26470
 11630  010A56  51C8               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 11631  010A58  E12B               	bnz	l19712
 11632  010A5A  05C7               	decf	ringBufferLUT@percentage& (0+255),w,b
 11633  010A5C  B0D8               	btfsc	status,0,c
 11634  010A5E  D028               	goto	l1319
 11635  010A60                     u26470:
 11636  010A60                     l19710:
 11637                           
 11638                           ; BSR set to: 2
 11639                           ;ring_buffer_LUT.c: 466: terminal_textAttributes(RED, BLACK, NORMAL);
 11640  010A60  0E00               	movlw	0
 11641  010A62  0101               	movlb	1	; () banked
 11642  010A64  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11643  010A66  0E00               	movlw	0
 11644  010A68  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11645  010A6A  0E01               	movlw	1
 11646  010A6C  ECCA  F0A0         	call	_terminal_textAttributes
 11647                           
 11648                           ;ring_buffer_LUT.c: 467: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 11649  010A70  0E1D               	movlw	low STR_110
 11650  010A72  0101               	movlb	1	; () banked
 11651  010A74  6F82               	movwf	printf@f& (0+255),b
 11652  010A76  0EF3               	movlw	high STR_110
 11653  010A78  6F83               	movwf	(printf@f+1)& (0+255),b
 11654  010A7A  EC7F  F089         	call	_printf	;wreg free
 11655                           
 11656                           ;ring_buffer_LUT.c: 468: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 11657  010A7E  0E00               	movlw	0
 11658  010A80  0101               	movlb	1	; () banked
 11659  010A82  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11660  010A84  0E00               	movlw	0
 11661  010A86  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11662  010A88  0E03               	movlw	3
 11663  010A8A  ECCA  F0A0         	call	_terminal_textAttributes
 11664                           
 11665                           ;ring_buffer_LUT.c: 469: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 11666  010A8E  0EB7               	movlw	low STR_111
 11667  010A90  0101               	movlb	1	; () banked
 11668  010A92  6F82               	movwf	printf@f& (0+255),b
 11669  010A94  0EF2               	movlw	high STR_111
 11670  010A96  6F83               	movwf	(printf@f+1)& (0+255),b
 11671  010A98  EC7F  F089         	call	_printf	;wreg free
 11672                           
 11673                           ;ring_buffer_LUT.c: 470: printf("Enter 'Help' for list of available commands\n\r");
 11674  010A9C  0E5B               	movlw	low STR_112
 11675  010A9E  0101               	movlb	1	; () banked
 11676  010AA0  6F82               	movwf	printf@f& (0+255),b
 11677  010AA2  0EF8               	movlw	high STR_112
 11678  010AA4  6F83               	movwf	(printf@f+1)& (0+255),b
 11679  010AA6  EC7F  F089         	call	_printf	;wreg free
 11680                           
 11681                           ;ring_buffer_LUT.c: 471: terminal_textAttributesReset();
 11682  010AAA  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11683                           
 11684                           ;ring_buffer_LUT.c: 473: }
 11685  010AAE  0012               	return	
 11686  010AB0                     l1319:
 11687  010AB0                     l19712:
 11688                           
 11689                           ;ring_buffer_LUT.c: 476: else {
 11690                           ;ring_buffer_LUT.c: 479: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 11691  010AB0  0E00               	movlw	0
 11692  010AB2  0101               	movlb	1	; () banked
 11693  010AB4  6F41               	movwf	___fldiv@a& (0+255),b
 11694  010AB6  0E00               	movlw	0
 11695  010AB8  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 11696  010ABA  0EC8               	movlw	200
 11697  010ABC  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 11698  010ABE  0E42               	movlw	66
 11699  010AC0  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 11700  010AC2  0E00               	movlw	0
 11701  010AC4  6F2D               	movwf	___fladd@a& (0+255),b
 11702  010AC6  0E00               	movlw	0
 11703  010AC8  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 11704  010ACA  0EC8               	movlw	200
 11705  010ACC  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 11706  010ACE  0E42               	movlw	66
 11707  010AD0  6F30               	movwf	(___fladd@a+3)& (0+255),b
 11708  010AD2  C2C7  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 11709  010AD6  C2C8  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 11710  010ADA  0E00               	movlw	0
 11711  010ADC  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 11712  010ADE  0EFF               	movlw	-1
 11713  010AE0  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 11714  010AE2  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 11715  010AE4  0E01               	movlw	1
 11716  010AE6  EC52  F0B6         	call	___xxtofl
 11717  010AEA  C117  F125         	movff	?___xxtofl,___flneg@f1
 11718  010AEE  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 11719  010AF2  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 11720  010AF6  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 11721  010AFA  EC7F  F0C7         	call	___flneg	;wreg free
 11722  010AFE  C125  F129         	movff	?___flneg,___fladd@b
 11723  010B02  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 11724  010B06  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 11725  010B0A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 11726  010B0E  ECCF  F0A5         	call	___fladd	;wreg free
 11727  010B12  C129  F13D         	movff	?___fladd,___fldiv@b
 11728  010B16  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 11729  010B1A  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 11730  010B1E  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 11731  010B22  ECD3  F0AE         	call	___fldiv	;wreg free
 11732  010B26  C13D  F156         	movff	?___fldiv,___flmul@b
 11733  010B2A  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 11734  010B2E  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 11735  010B32  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 11736  010B36  0EDB               	movlw	219
 11737  010B38  0101               	movlb	1	; () banked
 11738  010B3A  6F5A               	movwf	___flmul@a& (0+255),b
 11739  010B3C  0E0F               	movlw	15
 11740  010B3E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 11741  010B40  0E49               	movlw	73
 11742  010B42  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 11743  010B44  0E40               	movlw	64
 11744  010B46  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 11745  010B48  EC7E  F0A2         	call	___flmul	;wreg free
 11746  010B4C  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 11747  010B50  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 11748  010B54  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 11749  010B58  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 11750                           
 11751                           ;ring_buffer_LUT.c: 480: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 11752  010B5C  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 11753  010B60  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 11754  010B64  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 11755  010B68  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 11756  010B6C  0EE1               	movlw	225
 11757  010B6E  0101               	movlb	1	; () banked
 11758  010B70  6F5A               	movwf	___flmul@a& (0+255),b
 11759  010B72  0E2E               	movlw	46
 11760  010B74  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 11761  010B76  0E65               	movlw	101
 11762  010B78  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 11763  010B7A  0E42               	movlw	66
 11764  010B7C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 11765  010B7E  EC7E  F0A2         	call	___flmul	;wreg free
 11766  010B82  C156  F2A6         	movff	?___flmul,ringBufferLUT@angle_degrees
 11767  010B86  C157  F2A7         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 11768  010B8A  C158  F2A8         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 11769  010B8E  C159  F2A9         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 11770                           
 11771                           ;ring_buffer_LUT.c: 481: dimming_period = (100 - percentage) * (0xFFFF / 100);
 11772  010B92  C2C7  F1B6         	movff	ringBufferLUT@percentage,??_ringBufferLUT
 11773  010B96  C2C8  F1B7         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
 11774  010B9A  0101               	movlb	1	; () banked
 11775  010B9C  1FB6               	comf	??_ringBufferLUT& (0+255),f,b
 11776  010B9E  1FB7               	comf	(??_ringBufferLUT+1)& (0+255),f,b
 11777  010BA0  4BB6               	infsnz	??_ringBufferLUT& (0+255),f,b
 11778  010BA2  2BB7               	incf	(??_ringBufferLUT+1)& (0+255),f,b
 11779  010BA4  0E64               	movlw	100
 11780  010BA6  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 11781  010BA8  6F17               	movwf	___wmul@multiplier& (0+255),b
 11782  010BAA  0E00               	movlw	0
 11783  010BAC  21B7               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
 11784  010BAE  6F18               	movwf	(___wmul@multiplier+1)& (0+255),b
 11785  010BB0  0E02               	movlw	2
 11786  010BB2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11787  010BB4  0E8F               	movlw	143
 11788  010BB6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 11789  010BB8  ECDA  F0C7         	call	___wmul	;wreg free
 11790  010BBC  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 11791  010BC0  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 11792                           
 11793                           ;ring_buffer_LUT.c: 483: terminal_textAttributes(GREEN, BLACK, NORMAL);
 11794  010BC4  0E00               	movlw	0
 11795  010BC6  0101               	movlb	1	; () banked
 11796  010BC8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11797  010BCA  0E00               	movlw	0
 11798  010BCC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11799  010BCE  0E02               	movlw	2
 11800  010BD0  ECCA  F0A0         	call	_terminal_textAttributes
 11801                           
 11802                           ;ring_buffer_LUT.c: 484: printf("Dimming has been set to %d percent\n\r", percentage);
 11803  010BD4  0E50               	movlw	low STR_113
 11804  010BD6  0101               	movlb	1	; () banked
 11805  010BD8  6F82               	movwf	printf@f& (0+255),b
 11806  010BDA  0EFA               	movlw	high STR_113
 11807  010BDC  6F83               	movwf	(printf@f+1)& (0+255),b
 11808  010BDE  C2C7  F184         	movff	ringBufferLUT@percentage,?_printf+2
 11809  010BE2  C2C8  F185         	movff	ringBufferLUT@percentage+1,?_printf+3
 11810  010BE6  EC7F  F089         	call	_printf	;wreg free
 11811                           
 11812                           ;ring_buffer_LUT.c: 485: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 11813  010BEA  0E91               	movlw	low STR_114
 11814  010BEC  0101               	movlb	1	; () banked
 11815  010BEE  6F82               	movwf	printf@f& (0+255),b
 11816  010BF0  0EF4               	movlw	high STR_114
 11817  010BF2  6F83               	movwf	(printf@f+1)& (0+255),b
 11818  010BF4  C0F2  F184         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 11819  010BF8  C0F3  F185         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 11820  010BFC  C0F4  F186         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 11821  010C00  C0F5  F187         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 11822  010C04  C2A6  F188         	movff	ringBufferLUT@angle_degrees,?_printf+6
 11823  010C08  C2A7  F189         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 11824  010C0C  C2A8  F18A         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 11825  010C10  C2A9  F18B         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 11826  010C14  EC7F  F089         	call	_printf	;wreg free
 11827                           
 11828                           ;ring_buffer_LUT.c: 486: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 11829  010C18  0EC8               	movlw	low STR_115
 11830  010C1A  0101               	movlb	1	; () banked
 11831  010C1C  6F82               	movwf	printf@f& (0+255),b
 11832  010C1E  0EF3               	movlw	high STR_115
 11833  010C20  6F83               	movwf	(printf@f+1)& (0+255),b
 11834  010C22  C0F0  F184         	movff	_dimming_period,?_printf+2	;volatile
 11835  010C26  C0F1  F185         	movff	_dimming_period+1,?_printf+3	;volatile
 11836  010C2A  C0F0  F186         	movff	_dimming_period,?_printf+4	;volatile
 11837  010C2E  C0F1  F187         	movff	_dimming_period+1,?_printf+5	;volatile
 11838  010C32  EC7F  F089         	call	_printf	;wreg free
 11839                           
 11840                           ;ring_buffer_LUT.c: 487: terminal_textAttributesReset();
 11841  010C36  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11842                           
 11843                           ;ring_buffer_LUT.c: 489: }
 11844                           ;ring_buffer_LUT.c: 491: }
 11845  010C3A  0012               	return	
 11846  010C3C                     l1316:
 11847                           
 11848                           ;ring_buffer_LUT.c: 494: else if((0 == strcmp(line, "Device On Time?"))) {
 11849  010C3C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11850  010C40  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11851  010C44  0E27               	movlw	low STR_116
 11852  010C46  0101               	movlb	1	; () banked
 11853  010C48  6F19               	movwf	strcmp@s2& (0+255),b
 11854  010C4A  0EFE               	movlw	high STR_116
 11855  010C4C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11856  010C4E  EC91  F0C4         	call	_strcmp	;wreg free
 11857  010C52  0101               	movlb	1	; () banked
 11858  010C54  5117               	movf	?_strcmp& (0+255),w,b
 11859  010C56  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11860  010C58  A4D8               	btfss	status,2,c
 11861  010C5A  D019               	goto	l1324
 11862                           
 11863                           ; BSR set to: 1
 11864                           ;ring_buffer_LUT.c: 496: terminal_textAttributes(GREEN, BLACK, NORMAL);
 11865  010C5C  0E00               	movlw	0
 11866  010C5E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11867  010C60  0E00               	movlw	0
 11868  010C62  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11869  010C64  0E02               	movlw	2
 11870  010C66  ECCA  F0A0         	call	_terminal_textAttributes
 11871                           
 11872                           ;ring_buffer_LUT.c: 497: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 11873  010C6A  0E49               	movlw	low STR_117
 11874  010C6C  0101               	movlb	1	; () banked
 11875  010C6E  6F82               	movwf	printf@f& (0+255),b
 11876  010C70  0EF5               	movlw	high STR_117
 11877  010C72  6F83               	movwf	(printf@f+1)& (0+255),b
 11878  010C74  C21C  F184         	movff	_dev_on_time,?_printf+2	;volatile
 11879  010C78  C21D  F185         	movff	_dev_on_time+1,?_printf+3	;volatile
 11880  010C7C  C21E  F186         	movff	_dev_on_time+2,?_printf+4	;volatile
 11881  010C80  C21F  F187         	movff	_dev_on_time+3,?_printf+5	;volatile
 11882  010C84  EC7F  F089         	call	_printf	;wreg free
 11883                           
 11884                           ;ring_buffer_LUT.c: 498: terminal_textAttributesReset();
 11885  010C88  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11886                           
 11887                           ;ring_buffer_LUT.c: 500: }
 11888  010C8C  0012               	return	
 11889  010C8E                     l1324:
 11890                           
 11891                           ;ring_buffer_LUT.c: 503: else if((0 == strcmp(line, "Load On Time?"))) {
 11892  010C8E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11893  010C92  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11894  010C96  0ECD               	movlw	low STR_118
 11895  010C98  0101               	movlb	1	; () banked
 11896  010C9A  6F19               	movwf	strcmp@s2& (0+255),b
 11897  010C9C  0EFE               	movlw	high STR_118
 11898  010C9E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11899  010CA0  EC91  F0C4         	call	_strcmp	;wreg free
 11900  010CA4  0101               	movlb	1	; () banked
 11901  010CA6  5117               	movf	?_strcmp& (0+255),w,b
 11902  010CA8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11903  010CAA  A4D8               	btfss	status,2,c
 11904  010CAC  D019               	goto	l1326
 11905                           
 11906                           ; BSR set to: 1
 11907                           ;ring_buffer_LUT.c: 505: terminal_textAttributes(GREEN, BLACK, NORMAL);
 11908  010CAE  0E00               	movlw	0
 11909  010CB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11910  010CB2  0E00               	movlw	0
 11911  010CB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11912  010CB6  0E02               	movlw	2
 11913  010CB8  ECCA  F0A0         	call	_terminal_textAttributes
 11914                           
 11915                           ;ring_buffer_LUT.c: 506: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 11916  010CBC  0E97               	movlw	low STR_119
 11917  010CBE  0101               	movlb	1	; () banked
 11918  010CC0  6F82               	movwf	printf@f& (0+255),b
 11919  010CC2  0EF6               	movlw	high STR_119
 11920  010CC4  6F83               	movwf	(printf@f+1)& (0+255),b
 11921  010CC6  C218  F184         	movff	_load_on_time,?_printf+2	;volatile
 11922  010CCA  C219  F185         	movff	_load_on_time+1,?_printf+3	;volatile
 11923  010CCE  C21A  F186         	movff	_load_on_time+2,?_printf+4	;volatile
 11924  010CD2  C21B  F187         	movff	_load_on_time+3,?_printf+5	;volatile
 11925  010CD6  EC7F  F089         	call	_printf	;wreg free
 11926                           
 11927                           ;ring_buffer_LUT.c: 507: terminal_textAttributesReset();
 11928  010CDA  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11929                           
 11930                           ;ring_buffer_LUT.c: 509: }
 11931  010CDE  0012               	return	
 11932  010CE0                     l1326:
 11933                           
 11934                           ;ring_buffer_LUT.c: 512: else if((0 == strcmp(line, "Max RMS Current?"))) {
 11935  010CE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 11936  010CE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 11937  010CE8  0ED5               	movlw	low STR_120
 11938  010CEA  0101               	movlb	1	; () banked
 11939  010CEC  6F19               	movwf	strcmp@s2& (0+255),b
 11940  010CEE  0EFD               	movlw	high STR_120
 11941  010CF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 11942  010CF2  EC91  F0C4         	call	_strcmp	;wreg free
 11943  010CF6  0101               	movlb	1	; () banked
 11944  010CF8  5117               	movf	?_strcmp& (0+255),w,b
 11945  010CFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 11946  010CFC  A4D8               	btfss	status,2,c
 11947  010CFE  D030               	goto	l1328
 11948                           
 11949                           ; BSR set to: 1
 11950                           ;ring_buffer_LUT.c: 515: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 11951  010D00  0E8D               	movlw	low _max_Irms_address
 11952  010D02  6EF6               	movwf	tblptrl,c
 11953  010D04                     	if	1	;There is more than 1 active tblptr byte
 11954  010D04  0EE4               	movlw	high _max_Irms_address
 11955  010D06  6EF7               	movwf	tblptrh,c
 11956  010D08                     	endif
 11957  010D08                     	if	1	;There are 3 active tblptr bytes
 11958  010D08  0E00               	movlw	low (_max_Irms_address shr (0+16))
 11959  010D0A  6EF8               	movwf	tblptru,c
 11960  010D0C                     	endif
 11961  010D0C  0009               	tblrd		*+
 11962  010D0E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 11963  010D12  000A               	tblrd		*-
 11964  010D14  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 11965  010D18  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 11966  010D1C  C119  F2AA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 11967  010D20  C11A  F2AB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 11968  010D24  C11B  F2AC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 11969  010D28  C11C  F2AD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 11970                           
 11971                           ;ring_buffer_LUT.c: 517: terminal_textAttributes(CYAN, BLACK, NORMAL);
 11972  010D2C  0E00               	movlw	0
 11973  010D2E  0101               	movlb	1	; () banked
 11974  010D30  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 11975  010D32  0E00               	movlw	0
 11976  010D34  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 11977  010D36  0E06               	movlw	6
 11978  010D38  ECCA  F0A0         	call	_terminal_textAttributes
 11979                           
 11980                           ;ring_buffer_LUT.c: 518: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 11981  010D3C  0E68               	movlw	low STR_121
 11982  010D3E  0101               	movlb	1	; () banked
 11983  010D40  6F82               	movwf	printf@f& (0+255),b
 11984  010D42  0EF7               	movlw	high STR_121
 11985  010D44  6F83               	movwf	(printf@f+1)& (0+255),b
 11986  010D46  C2AA  F184         	movff	ringBufferLUT@max_current_print,?_printf+2
 11987  010D4A  C2AB  F185         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 11988  010D4E  C2AC  F186         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 11989  010D52  C2AD  F187         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 11990  010D56  EC7F  F089         	call	_printf	;wreg free
 11991                           
 11992                           ;ring_buffer_LUT.c: 519: terminal_textAttributesReset();
 11993  010D5A  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 11994                           
 11995                           ;ring_buffer_LUT.c: 521: }
 11996  010D5E  0012               	return	
 11997  010D60                     l1328:
 11998                           
 11999                           ;ring_buffer_LUT.c: 524: else if((0 == strcmp(line, "Max Power?"))) {
 12000  010D60  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12001  010D64  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12002  010D68  0E5C               	movlw	low STR_122
 12003  010D6A  0101               	movlb	1	; () banked
 12004  010D6C  6F19               	movwf	strcmp@s2& (0+255),b
 12005  010D6E  0EFF               	movlw	high STR_122
 12006  010D70  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12007  010D72  EC91  F0C4         	call	_strcmp	;wreg free
 12008  010D76  0101               	movlb	1	; () banked
 12009  010D78  5117               	movf	?_strcmp& (0+255),w,b
 12010  010D7A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12011  010D7C  A4D8               	btfss	status,2,c
 12012  010D7E  D030               	goto	l1330
 12013                           
 12014                           ; BSR set to: 1
 12015                           ;ring_buffer_LUT.c: 527: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 12016  010D80  0E8B               	movlw	low _max_Power_address
 12017  010D82  6EF6               	movwf	tblptrl,c
 12018  010D84                     	if	1	;There is more than 1 active tblptr byte
 12019  010D84  0EE4               	movlw	high _max_Power_address
 12020  010D86  6EF7               	movwf	tblptrh,c
 12021  010D88                     	endif
 12022  010D88                     	if	1	;There are 3 active tblptr bytes
 12023  010D88  0E00               	movlw	low (_max_Power_address shr (0+16))
 12024  010D8A  6EF8               	movwf	tblptru,c
 12025  010D8C                     	endif
 12026  010D8C  0009               	tblrd		*+
 12027  010D8E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 12028  010D92  000A               	tblrd		*-
 12029  010D94  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 12030  010D98  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 12031  010D9C  C119  F2AE         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 12032  010DA0  C11A  F2AF         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 12033  010DA4  C11B  F2B0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 12034  010DA8  C11C  F2B1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 12035                           
 12036                           ;ring_buffer_LUT.c: 529: terminal_textAttributes(CYAN, BLACK, NORMAL);
 12037  010DAC  0E00               	movlw	0
 12038  010DAE  0101               	movlb	1	; () banked
 12039  010DB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12040  010DB2  0E00               	movlw	0
 12041  010DB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12042  010DB6  0E06               	movlw	6
 12043  010DB8  ECCA  F0A0         	call	_terminal_textAttributes
 12044                           
 12045                           ;ring_buffer_LUT.c: 530: printf("Maximum recorded output Power is %.3f Watts\n\r", max_P
      +                          ower_print);
 12046  010DBC  0E89               	movlw	low STR_123
 12047  010DBE  0101               	movlb	1	; () banked
 12048  010DC0  6F82               	movwf	printf@f& (0+255),b
 12049  010DC2  0EF8               	movlw	high STR_123
 12050  010DC4  6F83               	movwf	(printf@f+1)& (0+255),b
 12051  010DC6  C2AE  F184         	movff	ringBufferLUT@max_Power_print,?_printf+2
 12052  010DCA  C2AF  F185         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 12053  010DCE  C2B0  F186         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 12054  010DD2  C2B1  F187         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 12055  010DD6  EC7F  F089         	call	_printf	;wreg free
 12056                           
 12057                           ;ring_buffer_LUT.c: 531: terminal_textAttributesReset();
 12058  010DDA  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12059                           
 12060                           ;ring_buffer_LUT.c: 533: }
 12061  010DDE  0012               	return	
 12062  010DE0                     l1330:
 12063                           
 12064                           ;ring_buffer_LUT.c: 536: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 12065  010DE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12066  010DE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12067  010DE8  0E34               	movlw	low STR_124
 12068  010DEA  0101               	movlb	1	; () banked
 12069  010DEC  6F19               	movwf	strcmp@s2& (0+255),b
 12070  010DEE  0EFD               	movlw	high STR_124
 12071  010DF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12072  010DF2  EC91  F0C4         	call	_strcmp	;wreg free
 12073  010DF6  0101               	movlb	1	; () banked
 12074  010DF8  5117               	movf	?_strcmp& (0+255),w,b
 12075  010DFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12076  010DFC  A4D8               	btfss	status,2,c
 12077  010DFE  D030               	goto	l1332
 12078                           
 12079                           ; BSR set to: 1
 12080                           ;ring_buffer_LUT.c: 539: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 12081  010E00  0E89               	movlw	low _max_POS3P3_ADC_Result_address
 12082  010E02  6EF6               	movwf	tblptrl,c
 12083  010E04                     	if	1	;There is more than 1 active tblptr byte
 12084  010E04  0EE4               	movlw	high _max_POS3P3_ADC_Result_address
 12085  010E06  6EF7               	movwf	tblptrh,c
 12086  010E08                     	endif
 12087  010E08                     	if	1	;There are 3 active tblptr bytes
 12088  010E08  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 12089  010E0A  6EF8               	movwf	tblptru,c
 12090  010E0C                     	endif
 12091  010E0C  0009               	tblrd		*+
 12092  010E0E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 12093  010E12  000A               	tblrd		*-
 12094  010E14  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 12095  010E18  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 12096  010E1C  C119  F2B2         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 12097  010E20  C11A  F2B3         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 12098  010E24  C11B  F2B4         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 12099  010E28  C11C  F2B5         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 12100                           
 12101                           ;ring_buffer_LUT.c: 541: terminal_textAttributes(CYAN, BLACK, NORMAL);
 12102  010E2C  0E00               	movlw	0
 12103  010E2E  0101               	movlb	1	; () banked
 12104  010E30  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12105  010E32  0E00               	movlw	0
 12106  010E34  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12107  010E36  0E06               	movlw	6
 12108  010E38  ECCA  F0A0         	call	_terminal_textAttributes
 12109                           
 12110                           ;ring_buffer_LUT.c: 542: printf("Maximum recorded +3.3V Rail Voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 12111  010E3C  0E00               	movlw	low STR_125
 12112  010E3E  0101               	movlb	1	; () banked
 12113  010E40  6F82               	movwf	printf@f& (0+255),b
 12114  010E42  0EF7               	movlw	high STR_125
 12115  010E44  6F83               	movwf	(printf@f+1)& (0+255),b
 12116  010E46  C2B2  F184         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 12117  010E4A  C2B3  F185         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 12118  010E4E  C2B4  F186         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 12119  010E52  C2B5  F187         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 12120  010E56  EC7F  F089         	call	_printf	;wreg free
 12121                           
 12122                           ;ring_buffer_LUT.c: 543: terminal_textAttributesReset();
 12123  010E5A  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12124                           
 12125                           ;ring_buffer_LUT.c: 545: }
 12126  010E5E  0012               	return	
 12127  010E60                     l1332:
 12128                           
 12129                           ;ring_buffer_LUT.c: 548: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 12130  010E60  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12131  010E64  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12132  010E68  0E5B               	movlw	low STR_126
 12133  010E6A  0101               	movlb	1	; () banked
 12134  010E6C  6F19               	movwf	strcmp@s2& (0+255),b
 12135  010E6E  0EFD               	movlw	high STR_126
 12136  010E70  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12137  010E72  EC91  F0C4         	call	_strcmp	;wreg free
 12138  010E76  0101               	movlb	1	; () banked
 12139  010E78  5117               	movf	?_strcmp& (0+255),w,b
 12140  010E7A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12141  010E7C  A4D8               	btfss	status,2,c
 12142  010E7E  D030               	goto	l1334
 12143                           
 12144                           ; BSR set to: 1
 12145                           ;ring_buffer_LUT.c: 551: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 12146  010E80  0E87               	movlw	low _max_POS12_ADC_Result_address
 12147  010E82  6EF6               	movwf	tblptrl,c
 12148  010E84                     	if	1	;There is more than 1 active tblptr byte
 12149  010E84  0EE4               	movlw	high _max_POS12_ADC_Result_address
 12150  010E86  6EF7               	movwf	tblptrh,c
 12151  010E88                     	endif
 12152  010E88                     	if	1	;There are 3 active tblptr bytes
 12153  010E88  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 12154  010E8A  6EF8               	movwf	tblptru,c
 12155  010E8C                     	endif
 12156  010E8C  0009               	tblrd		*+
 12157  010E8E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 12158  010E92  000A               	tblrd		*-
 12159  010E94  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 12160  010E98  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 12161  010E9C  C119  F2B6         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_2750
 12162  010EA0  C11A  F2B7         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_2750+1
 12163  010EA4  C11B  F2B8         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_2750+2
 12164  010EA8  C11C  F2B9         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_2750+3
 12165                           
 12166                           ;ring_buffer_LUT.c: 553: terminal_textAttributes(CYAN, BLACK, NORMAL);
 12167  010EAC  0E00               	movlw	0
 12168  010EAE  0101               	movlb	1	; () banked
 12169  010EB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12170  010EB2  0E00               	movlw	0
 12171  010EB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12172  010EB6  0E06               	movlw	6
 12173  010EB8  ECCA  F0A0         	call	_terminal_textAttributes
 12174                           
 12175                           ;ring_buffer_LUT.c: 554: printf("Maximum recorded +12V Rail Voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 12176  010EBC  0E9B               	movlw	low STR_127
 12177  010EBE  0101               	movlb	1	; () banked
 12178  010EC0  6F82               	movwf	printf@f& (0+255),b
 12179  010EC2  0EF7               	movlw	high STR_127
 12180  010EC4  6F83               	movwf	(printf@f+1)& (0+255),b
 12181  010EC6  C2B6  F184         	movff	ringBufferLUT@max_voltage_print_2750,?_printf+2
 12182  010ECA  C2B7  F185         	movff	ringBufferLUT@max_voltage_print_2750+1,?_printf+3
 12183  010ECE  C2B8  F186         	movff	ringBufferLUT@max_voltage_print_2750+2,?_printf+4
 12184  010ED2  C2B9  F187         	movff	ringBufferLUT@max_voltage_print_2750+3,?_printf+5
 12185  010ED6  EC7F  F089         	call	_printf	;wreg free
 12186                           
 12187                           ;ring_buffer_LUT.c: 555: terminal_textAttributesReset();
 12188  010EDA  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12189                           
 12190                           ;ring_buffer_LUT.c: 557: }
 12191  010EDE  0012               	return	
 12192  010EE0                     l1334:
 12193                           
 12194                           ;ring_buffer_LUT.c: 560: else if((0 == strcmp(line, "Max Die Temp?"))) {
 12195  010EE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12196  010EE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12197  010EE8  0EDB               	movlw	low STR_128
 12198  010EEA  0101               	movlb	1	; () banked
 12199  010EEC  6F19               	movwf	strcmp@s2& (0+255),b
 12200  010EEE  0EFE               	movlw	high STR_128
 12201  010EF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12202  010EF2  EC91  F0C4         	call	_strcmp	;wreg free
 12203  010EF6  0101               	movlb	1	; () banked
 12204  010EF8  5117               	movf	?_strcmp& (0+255),w,b
 12205  010EFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12206  010EFC  A4D8               	btfss	status,2,c
 12207  010EFE  D030               	goto	l1336
 12208                           
 12209                           ; BSR set to: 1
 12210                           ;ring_buffer_LUT.c: 563: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 12211  010F00  0E85               	movlw	low _max_Temp_ADC_Result_address
 12212  010F02  6EF6               	movwf	tblptrl,c
 12213  010F04                     	if	1	;There is more than 1 active tblptr byte
 12214  010F04  0EE4               	movlw	high _max_Temp_ADC_Result_address
 12215  010F06  6EF7               	movwf	tblptrh,c
 12216  010F08                     	endif
 12217  010F08                     	if	1	;There are 3 active tblptr bytes
 12218  010F08  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 12219  010F0A  6EF8               	movwf	tblptru,c
 12220  010F0C                     	endif
 12221  010F0C  0009               	tblrd		*+
 12222  010F0E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 12223  010F12  000A               	tblrd		*-
 12224  010F14  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 12225  010F18  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 12226  010F1C  C119  F2BA         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 12227  010F20  C11A  F2BB         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 12228  010F24  C11B  F2BC         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 12229  010F28  C11C  F2BD         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 12230                           
 12231                           ;ring_buffer_LUT.c: 565: terminal_textAttributes(CYAN, BLACK, NORMAL);
 12232  010F2C  0E00               	movlw	0
 12233  010F2E  0101               	movlb	1	; () banked
 12234  010F30  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12235  010F32  0E00               	movlw	0
 12236  010F34  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12237  010F36  0E06               	movlw	6
 12238  010F38  ECCA  F0A0         	call	_terminal_textAttributes
 12239                           
 12240                           ;ring_buffer_LUT.c: 566: printf("Maximum recorded Die Temperature is %.3f C\n\r", max_te
      +                          mp_print);
 12241  010F3C  0EB7               	movlw	low STR_129
 12242  010F3E  0101               	movlb	1	; () banked
 12243  010F40  6F82               	movwf	printf@f& (0+255),b
 12244  010F42  0EF8               	movlw	high STR_129
 12245  010F44  6F83               	movwf	(printf@f+1)& (0+255),b
 12246  010F46  C2BA  F184         	movff	ringBufferLUT@max_temp_print,?_printf+2
 12247  010F4A  C2BB  F185         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 12248  010F4E  C2BC  F186         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 12249  010F52  C2BD  F187         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 12250  010F56  EC7F  F089         	call	_printf	;wreg free
 12251                           
 12252                           ;ring_buffer_LUT.c: 567: terminal_textAttributesReset();
 12253  010F5A  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12254                           
 12255                           ;ring_buffer_LUT.c: 569: }
 12256  010F5E  0012               	return	
 12257  010F60                     l1336:
 12258                           
 12259                           ;ring_buffer_LUT.c: 572: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 12260  010F60  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12261  010F64  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12262  010F68  0EB3               	movlw	low STR_130
 12263  010F6A  0101               	movlb	1	; () banked
 12264  010F6C  6F19               	movwf	strcmp@s2& (0+255),b
 12265  010F6E  0EFD               	movlw	high STR_130
 12266  010F70  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12267  010F72  EC91  F0C4         	call	_strcmp	;wreg free
 12268  010F76  0101               	movlb	1	; () banked
 12269  010F78  5117               	movf	?_strcmp& (0+255),w,b
 12270  010F7A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12271  010F7C  A4D8               	btfss	status,2,c
 12272  010F7E  D030               	goto	l1338
 12273                           
 12274                           ; BSR set to: 1
 12275                           ;ring_buffer_LUT.c: 575: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 12276  010F80  0E83               	movlw	low _max_FVR_ADC_Result_address
 12277  010F82  6EF6               	movwf	tblptrl,c
 12278  010F84                     	if	1	;There is more than 1 active tblptr byte
 12279  010F84  0EE4               	movlw	high _max_FVR_ADC_Result_address
 12280  010F86  6EF7               	movwf	tblptrh,c
 12281  010F88                     	endif
 12282  010F88                     	if	1	;There are 3 active tblptr bytes
 12283  010F88  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 12284  010F8A  6EF8               	movwf	tblptru,c
 12285  010F8C                     	endif
 12286  010F8C  0009               	tblrd		*+
 12287  010F8E  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 12288  010F92  000A               	tblrd		*-
 12289  010F94  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 12290  010F98  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 12291  010F9C  C119  F2BE         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_2756
 12292  010FA0  C11A  F2BF         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_2756+1
 12293  010FA4  C11B  F2C0         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_2756+2
 12294  010FA8  C11C  F2C1         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_2756+3
 12295                           
 12296                           ;ring_buffer_LUT.c: 577: terminal_textAttributes(CYAN, BLACK, NORMAL);
 12297  010FAC  0E00               	movlw	0
 12298  010FAE  0101               	movlb	1	; () banked
 12299  010FB0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12300  010FB2  0E00               	movlw	0
 12301  010FB4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12302  010FB6  0E06               	movlw	6
 12303  010FB8  ECCA  F0A0         	call	_terminal_textAttributes
 12304                           
 12305                           ;ring_buffer_LUT.c: 578: printf("Maximum recorded FVR Buffer Voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 12306  010FBC  0E34               	movlw	low STR_131
 12307  010FBE  0101               	movlb	1	; () banked
 12308  010FC0  6F82               	movwf	printf@f& (0+255),b
 12309  010FC2  0EF7               	movlw	high STR_131
 12310  010FC4  6F83               	movwf	(printf@f+1)& (0+255),b
 12311  010FC6  C2BE  F184         	movff	ringBufferLUT@max_voltage_print_2756,?_printf+2
 12312  010FCA  C2BF  F185         	movff	ringBufferLUT@max_voltage_print_2756+1,?_printf+3
 12313  010FCE  C2C0  F186         	movff	ringBufferLUT@max_voltage_print_2756+2,?_printf+4
 12314  010FD2  C2C1  F187         	movff	ringBufferLUT@max_voltage_print_2756+3,?_printf+5
 12315  010FD6  EC7F  F089         	call	_printf	;wreg free
 12316                           
 12317                           ;ring_buffer_LUT.c: 579: terminal_textAttributesReset();
 12318  010FDA  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12319                           
 12320                           ;ring_buffer_LUT.c: 581: }
 12321  010FDE  0012               	return	
 12322  010FE0                     l1338:
 12323                           
 12324                           ;ring_buffer_LUT.c: 584: else if((0 == strcmp(line, "Clear Max Values"))) {
 12325  010FE0  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12326  010FE4  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12327  010FE8  0EE6               	movlw	low STR_132
 12328  010FEA  0101               	movlb	1	; () banked
 12329  010FEC  6F19               	movwf	strcmp@s2& (0+255),b
 12330  010FEE  0EFD               	movlw	high STR_132
 12331  010FF0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12332  010FF2  EC91  F0C4         	call	_strcmp	;wreg free
 12333  010FF6  0101               	movlb	1	; () banked
 12334  010FF8  5117               	movf	?_strcmp& (0+255),w,b
 12335  010FFA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12336  010FFC  A4D8               	btfss	status,2,c
 12337  010FFE  D09B               	goto	l1340
 12338                           
 12339                           ; BSR set to: 1
 12340                           ;ring_buffer_LUT.c: 586: writeDoubleToEEPROM(0.0, max_Irms_address);
 12341  011000  0E00               	movlw	0
 12342  011002  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 12343  011004  0E00               	movlw	0
 12344  011006  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 12345  011008  0E00               	movlw	0
 12346  01100A  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 12347  01100C  0E00               	movlw	0
 12348  01100E  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 12349  011010  0E8D               	movlw	low _max_Irms_address
 12350  011012  6EF6               	movwf	tblptrl,c
 12351  011014                     	if	1	;There is more than 1 active tblptr byte
 12352  011014  0EE4               	movlw	high _max_Irms_address
 12353  011016  6EF7               	movwf	tblptrh,c
 12354  011018                     	endif
 12355  011018                     	if	1	;There are 3 active tblptr bytes
 12356  011018  0E00               	movlw	low (_max_Irms_address shr (0+16))
 12357  01101A  6EF8               	movwf	tblptru,c
 12358  01101C                     	endif
 12359  01101C  0009               	tblrd		*+
 12360  01101E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 12361  011022  000A               	tblrd		*-
 12362  011024  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 12363  011028  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 12364                           
 12365                           ;ring_buffer_LUT.c: 587: writeDoubleToEEPROM(0.0, max_Power_address);
 12366  01102C  0E00               	movlw	0
 12367  01102E  0101               	movlb	1	; () banked
 12368  011030  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 12369  011032  0E00               	movlw	0
 12370  011034  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 12371  011036  0E00               	movlw	0
 12372  011038  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 12373  01103A  0E00               	movlw	0
 12374  01103C  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 12375  01103E  0E8B               	movlw	low _max_Power_address
 12376  011040  6EF6               	movwf	tblptrl,c
 12377  011042                     	if	1	;There is more than 1 active tblptr byte
 12378  011042  0EE4               	movlw	high _max_Power_address
 12379  011044  6EF7               	movwf	tblptrh,c
 12380  011046                     	endif
 12381  011046                     	if	1	;There are 3 active tblptr bytes
 12382  011046  0E00               	movlw	low (_max_Power_address shr (0+16))
 12383  011048  6EF8               	movwf	tblptru,c
 12384  01104A                     	endif
 12385  01104A  0009               	tblrd		*+
 12386  01104C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 12387  011050  000A               	tblrd		*-
 12388  011052  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 12389  011056  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 12390                           
 12391                           ;ring_buffer_LUT.c: 588: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 12392  01105A  0E00               	movlw	0
 12393  01105C  0101               	movlb	1	; () banked
 12394  01105E  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 12395  011060  0E00               	movlw	0
 12396  011062  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 12397  011064  0E00               	movlw	0
 12398  011066  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 12399  011068  0E00               	movlw	0
 12400  01106A  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 12401  01106C  0E89               	movlw	low _max_POS3P3_ADC_Result_address
 12402  01106E  6EF6               	movwf	tblptrl,c
 12403  011070                     	if	1	;There is more than 1 active tblptr byte
 12404  011070  0EE4               	movlw	high _max_POS3P3_ADC_Result_address
 12405  011072  6EF7               	movwf	tblptrh,c
 12406  011074                     	endif
 12407  011074                     	if	1	;There are 3 active tblptr bytes
 12408  011074  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 12409  011076  6EF8               	movwf	tblptru,c
 12410  011078                     	endif
 12411  011078  0009               	tblrd		*+
 12412  01107A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 12413  01107E  000A               	tblrd		*-
 12414  011080  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 12415  011084  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 12416                           
 12417                           ;ring_buffer_LUT.c: 589: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 12418  011088  0E00               	movlw	0
 12419  01108A  0101               	movlb	1	; () banked
 12420  01108C  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 12421  01108E  0E00               	movlw	0
 12422  011090  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 12423  011092  0E00               	movlw	0
 12424  011094  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 12425  011096  0E00               	movlw	0
 12426  011098  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 12427  01109A  0E87               	movlw	low _max_POS12_ADC_Result_address
 12428  01109C  6EF6               	movwf	tblptrl,c
 12429  01109E                     	if	1	;There is more than 1 active tblptr byte
 12430  01109E  0EE4               	movlw	high _max_POS12_ADC_Result_address
 12431  0110A0  6EF7               	movwf	tblptrh,c
 12432  0110A2                     	endif
 12433  0110A2                     	if	1	;There are 3 active tblptr bytes
 12434  0110A2  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 12435  0110A4  6EF8               	movwf	tblptru,c
 12436  0110A6                     	endif
 12437  0110A6  0009               	tblrd		*+
 12438  0110A8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 12439  0110AC  000A               	tblrd		*-
 12440  0110AE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 12441  0110B2  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 12442                           
 12443                           ;ring_buffer_LUT.c: 590: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 12444  0110B6  0E00               	movlw	0
 12445  0110B8  0101               	movlb	1	; () banked
 12446  0110BA  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 12447  0110BC  0E00               	movlw	0
 12448  0110BE  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 12449  0110C0  0E00               	movlw	0
 12450  0110C2  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 12451  0110C4  0E00               	movlw	0
 12452  0110C6  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 12453  0110C8  0E85               	movlw	low _max_Temp_ADC_Result_address
 12454  0110CA  6EF6               	movwf	tblptrl,c
 12455  0110CC                     	if	1	;There is more than 1 active tblptr byte
 12456  0110CC  0EE4               	movlw	high _max_Temp_ADC_Result_address
 12457  0110CE  6EF7               	movwf	tblptrh,c
 12458  0110D0                     	endif
 12459  0110D0                     	if	1	;There are 3 active tblptr bytes
 12460  0110D0  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 12461  0110D2  6EF8               	movwf	tblptru,c
 12462  0110D4                     	endif
 12463  0110D4  0009               	tblrd		*+
 12464  0110D6  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 12465  0110DA  000A               	tblrd		*-
 12466  0110DC  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 12467  0110E0  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 12468                           
 12469                           ;ring_buffer_LUT.c: 591: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 12470  0110E4  0E00               	movlw	0
 12471  0110E6  0101               	movlb	1	; () banked
 12472  0110E8  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 12473  0110EA  0E00               	movlw	0
 12474  0110EC  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 12475  0110EE  0E00               	movlw	0
 12476  0110F0  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 12477  0110F2  0E00               	movlw	0
 12478  0110F4  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 12479  0110F6  0E83               	movlw	low _max_FVR_ADC_Result_address
 12480  0110F8  6EF6               	movwf	tblptrl,c
 12481  0110FA                     	if	1	;There is more than 1 active tblptr byte
 12482  0110FA  0EE4               	movlw	high _max_FVR_ADC_Result_address
 12483  0110FC  6EF7               	movwf	tblptrh,c
 12484  0110FE                     	endif
 12485  0110FE                     	if	1	;There are 3 active tblptr bytes
 12486  0110FE  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 12487  011100  6EF8               	movwf	tblptru,c
 12488  011102                     	endif
 12489  011102  0009               	tblrd		*+
 12490  011104  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 12491  011108  000A               	tblrd		*-
 12492  01110A  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 12493  01110E  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 12494                           
 12495                           ;ring_buffer_LUT.c: 593: terminal_textAttributes(GREEN, BLACK, NORMAL);
 12496  011112  0E00               	movlw	0
 12497  011114  0101               	movlb	1	; () banked
 12498  011116  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12499  011118  0E00               	movlw	0
 12500  01111A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12501  01111C  0E02               	movlw	2
 12502  01111E  ECCA  F0A0         	call	_terminal_textAttributes
 12503                           
 12504                           ;ring_buffer_LUT.c: 594: printf("Maximum recorded values erased\n\r");
 12505  011122  0E23               	movlw	low STR_133
 12506  011124  0101               	movlb	1	; () banked
 12507  011126  6F82               	movwf	printf@f& (0+255),b
 12508  011128  0EFB               	movlw	high STR_133
 12509  01112A  6F83               	movwf	(printf@f+1)& (0+255),b
 12510  01112C  EC7F  F089         	call	_printf	;wreg free
 12511                           
 12512                           ;ring_buffer_LUT.c: 595: terminal_textAttributesReset();
 12513  011130  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12514                           
 12515                           ;ring_buffer_LUT.c: 597: }
 12516  011134  0012               	return	
 12517  011136                     l1340:
 12518                           
 12519                           ;ring_buffer_LUT.c: 601: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 12520  011136  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12521  01113A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12522  01113E  0EDF               	movlw	low STR_134
 12523  011140  0101               	movlb	1	; () banked
 12524  011142  6F19               	movwf	strcmp@s2& (0+255),b
 12525  011144  0EFB               	movlw	high STR_134
 12526  011146  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12527  011148  EC91  F0C4         	call	_strcmp	;wreg free
 12528  01114C  0101               	movlb	1	; () banked
 12529  01114E  5117               	movf	?_strcmp& (0+255),w,b
 12530  011150  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12531  011152  A4D8               	btfss	status,2,c
 12532  011154  D011               	goto	l1342
 12533                           
 12534                           ; BSR set to: 1
 12535                           ;ring_buffer_LUT.c: 603: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 12536  011156  0E00               	movlw	0
 12537  011158  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12538  01115A  0E00               	movlw	0
 12539  01115C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12540  01115E  0E03               	movlw	3
 12541  011160  ECCA  F0A0         	call	_terminal_textAttributes
 12542                           
 12543                           ;ring_buffer_LUT.c: 604: printf("List of supported Device Control Commands:\n\r"
 12544                           ;ring_buffer_LUT.c: 606: "   Reset: Clears the terminal and resets the micro\n\r"
 12545                           ;ring_buffer_LUT.c: 607: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 12546                           ;ring_buffer_LUT.c: 608: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 12547                           ;ring_buffer_LUT.c: 609: "   *IDN?: Returns device identification string\n\r"
 12548                           ;ring_buffer_LUT.c: 610: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 12549  011164  0EDF               	movlw	low STR_135
 12550  011166  0101               	movlb	1	; () banked
 12551  011168  6F82               	movwf	printf@f& (0+255),b
 12552  01116A  0EE4               	movlw	high STR_135
 12553  01116C  6F83               	movwf	(printf@f+1)& (0+255),b
 12554  01116E  EC7F  F089         	call	_printf	;wreg free
 12555                           
 12556                           ;ring_buffer_LUT.c: 621: terminal_textAttributesReset();
 12557  011172  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12558                           
 12559                           ;ring_buffer_LUT.c: 623: }
 12560  011176  0012               	return	
 12561  011178                     l1342:
 12562                           
 12563                           ;ring_buffer_LUT.c: 626: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 12564  011178  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12565  01117C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12566  011180  0E44               	movlw	low STR_136
 12567  011182  0101               	movlb	1	; () banked
 12568  011184  6F19               	movwf	strcmp@s2& (0+255),b
 12569  011186  0EFB               	movlw	high STR_136
 12570  011188  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12571  01118A  EC91  F0C4         	call	_strcmp	;wreg free
 12572  01118E  0101               	movlb	1	; () banked
 12573  011190  5117               	movf	?_strcmp& (0+255),w,b
 12574  011192  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12575  011194  A4D8               	btfss	status,2,c
 12576  011196  D011               	goto	l1344
 12577                           
 12578                           ; BSR set to: 1
 12579                           ;ring_buffer_LUT.c: 628: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 12580  011198  0E00               	movlw	0
 12581  01119A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12582  01119C  0E00               	movlw	0
 12583  01119E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12584  0111A0  0E03               	movlw	3
 12585  0111A2  ECCA  F0A0         	call	_terminal_textAttributes
 12586                           
 12587                           ;ring_buffer_LUT.c: 629: printf("List of supported Device Measurement Commands:\n\r"
 12588                           ;ring_buffer_LUT.c: 631: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 12589                           ;ring_buffer_LUT.c: 632: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 12590                           ;ring_buffer_LUT.c: 633: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 12591                           ;ring_buffer_LUT.c: 634: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 12592                           ;ring_buffer_LUT.c: 635: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 12593  0111A6  0E79               	movlw	low STR_137
 12594  0111A8  0101               	movlb	1	; () banked
 12595  0111AA  6F82               	movwf	printf@f& (0+255),b
 12596  0111AC  0EE8               	movlw	high STR_137
 12597  0111AE  6F83               	movwf	(printf@f+1)& (0+255),b
 12598  0111B0  EC7F  F089         	call	_printf	;wreg free
 12599                           
 12600                           ;ring_buffer_LUT.c: 642: terminal_textAttributesReset();
 12601  0111B4  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12602                           
 12603                           ;ring_buffer_LUT.c: 644: }
 12604  0111B8  0012               	return	
 12605  0111BA                     l1344:
 12606                           
 12607                           ;ring_buffer_LUT.c: 647: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 12608  0111BA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12609  0111BE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12610  0111C2  0E01               	movlw	low STR_138
 12611  0111C4  0101               	movlb	1	; () banked
 12612  0111C6  6F19               	movwf	strcmp@s2& (0+255),b
 12613  0111C8  0EFB               	movlw	high STR_138
 12614  0111CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12615  0111CC  EC91  F0C4         	call	_strcmp	;wreg free
 12616  0111D0  0101               	movlb	1	; () banked
 12617  0111D2  5117               	movf	?_strcmp& (0+255),w,b
 12618  0111D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12619  0111D6  A4D8               	btfss	status,2,c
 12620  0111D8  D011               	goto	l1346
 12621                           
 12622                           ; BSR set to: 1
 12623                           ;ring_buffer_LUT.c: 649: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 12624  0111DA  0E00               	movlw	0
 12625  0111DC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12626  0111DE  0E00               	movlw	0
 12627  0111E0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12628  0111E2  0E03               	movlw	3
 12629  0111E4  ECCA  F0A0         	call	_terminal_textAttributes
 12630                           
 12631                           ;ring_buffer_LUT.c: 650: printf("List of supported Primary Measurement Commands:\n\r"
 12632                           ;ring_buffer_LUT.c: 652: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 12633                           ;ring_buffer_LUT.c: 653: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 12634                           ;ring_buffer_LUT.c: 654: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 12635                           ;ring_buffer_LUT.c: 655: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 12636  0111E8  0E49               	movlw	low STR_139
 12637  0111EA  0101               	movlb	1	; () banked
 12638  0111EC  6F82               	movwf	printf@f& (0+255),b
 12639  0111EE  0EEB               	movlw	high STR_139
 12640  0111F0  6F83               	movwf	(printf@f+1)& (0+255),b
 12641  0111F2  EC7F  F089         	call	_printf	;wreg free
 12642                           
 12643                           ;ring_buffer_LUT.c: 661: terminal_textAttributesReset();
 12644  0111F6  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12645                           
 12646                           ;ring_buffer_LUT.c: 663: }
 12647  0111FA  0012               	return	
 12648  0111FC                     l1346:
 12649                           
 12650                           ;ring_buffer_LUT.c: 666: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 12651  0111FC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12652  011200  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12653  011204  0EFC               	movlw	low STR_140
 12654  011206  0101               	movlb	1	; () banked
 12655  011208  6F19               	movwf	strcmp@s2& (0+255),b
 12656  01120A  0EFB               	movlw	high STR_140
 12657  01120C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12658  01120E  EC91  F0C4         	call	_strcmp	;wreg free
 12659  011212  0101               	movlb	1	; () banked
 12660  011214  5117               	movf	?_strcmp& (0+255),w,b
 12661  011216  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12662  011218  A4D8               	btfss	status,2,c
 12663  01121A  D011               	goto	l1348
 12664                           
 12665                           ; BSR set to: 1
 12666                           ;ring_buffer_LUT.c: 668: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 12667  01121C  0E00               	movlw	0
 12668  01121E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12669  011220  0E00               	movlw	0
 12670  011222  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12671  011224  0E03               	movlw	3
 12672  011226  ECCA  F0A0         	call	_terminal_textAttributes
 12673                           
 12674                           ;ring_buffer_LUT.c: 669: printf("List of supported Output Control Commands:\n\r"
 12675                           ;ring_buffer_LUT.c: 671: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 12676                           ;ring_buffer_LUT.c: 672: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 12677                           ;ring_buffer_LUT.c: 673: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 12678                           ;ring_buffer_LUT.c: 674: "   Disable Load: Disables the output TRIAC completely\n\r"
 12679                           ;ring_buffer_LUT.c: 675: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 12680  01122A  0EA6               	movlw	low STR_141
 12681  01122C  0101               	movlb	1	; () banked
 12682  01122E  6F82               	movwf	printf@f& (0+255),b
 12683  011230  0EED               	movlw	high STR_141
 12684  011232  6F83               	movwf	(printf@f+1)& (0+255),b
 12685  011234  EC7F  F089         	call	_printf	;wreg free
 12686                           
 12687                           ;ring_buffer_LUT.c: 680: terminal_textAttributesReset();
 12688  011238  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12689                           
 12690                           ;ring_buffer_LUT.c: 682: }
 12691  01123C  0012               	return	
 12692  01123E                     l1348:
 12693                           
 12694                           ;ring_buffer_LUT.c: 686: else if((0 == strcmp(line, "Help"))) {
 12695  01123E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 12696  011242  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 12697  011246  0EAB               	movlw	low STR_142
 12698  011248  0101               	movlb	1	; () banked
 12699  01124A  6F19               	movwf	strcmp@s2& (0+255),b
 12700  01124C  0EFF               	movlw	high STR_142
 12701  01124E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 12702  011250  EC91  F0C4         	call	_strcmp	;wreg free
 12703  011254  0101               	movlb	1	; () banked
 12704  011256  5117               	movf	?_strcmp& (0+255),w,b
 12705  011258  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 12706  01125A  A4D8               	btfss	status,2,c
 12707  01125C  0012               	return	
 12708                           
 12709                           ; BSR set to: 1
 12710                           ;ring_buffer_LUT.c: 688: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 12711  01125E  0E00               	movlw	0
 12712  011260  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12713  011262  0E00               	movlw	0
 12714  011264  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12715  011266  0E03               	movlw	3
 12716  011268  ECCA  F0A0         	call	_terminal_textAttributes
 12717                           
 12718                           ;ring_buffer_LUT.c: 689: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 12719                           ;ring_buffer_LUT.c: 690: "Try 'Help <command set>'\n\r\n\r"
 12720                           ;ring_buffer_LUT.c: 691: "Supported Command Sets:\n\r"
 12721                           ;ring_buffer_LUT.c: 692: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 12722                           ;ring_buffer_LUT.c: 693: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 12723                           ;ring_buffer_LUT.c: 694: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 12724  01126C  0E92               	movlw	low STR_143
 12725  01126E  0101               	movlb	1	; () banked
 12726  011270  6F82               	movwf	printf@f& (0+255),b
 12727  011272  0EEF               	movlw	high STR_143
 12728  011274  6F83               	movwf	(printf@f+1)& (0+255),b
 12729  011276  EC7F  F089         	call	_printf	;wreg free
 12730                           
 12731                           ;ring_buffer_LUT.c: 699: terminal_printNewline();
 12732  01127A  EC0D  F0C9         	call	_terminal_printNewline	;wreg free
 12733                           
 12734                           ;ring_buffer_LUT.c: 700: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 12735  01127E  0EF5               	movlw	low STR_144
 12736  011280  0101               	movlb	1	; () banked
 12737  011282  6F82               	movwf	printf@f& (0+255),b
 12738  011284  0EF5               	movlw	high STR_144
 12739  011286  6F83               	movwf	(printf@f+1)& (0+255),b
 12740  011288  EC7F  F089         	call	_printf	;wreg free
 12741                           
 12742                           ;ring_buffer_LUT.c: 702: terminal_textAttributes(GREEN, BLACK, NORMAL);
 12743  01128C  0E00               	movlw	0
 12744  01128E  0101               	movlb	1	; () banked
 12745  011290  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12746  011292  0E00               	movlw	0
 12747  011294  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12748  011296  0E02               	movlw	2
 12749  011298  ECCA  F0A0         	call	_terminal_textAttributes
 12750                           
 12751                           ;ring_buffer_LUT.c: 703: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 12752  01129C  0ED0               	movlw	low STR_145
 12753  01129E  0101               	movlb	1	; () banked
 12754  0112A0  6F82               	movwf	printf@f& (0+255),b
 12755  0112A2  0EF4               	movlw	high STR_145
 12756  0112A4  6F83               	movwf	(printf@f+1)& (0+255),b
 12757  0112A6  EC7F  F089         	call	_printf	;wreg free
 12758                           
 12759                           ;ring_buffer_LUT.c: 704: terminal_textAttributes(CYAN, BLACK, NORMAL);
 12760  0112AA  0E00               	movlw	0
 12761  0112AC  0101               	movlb	1	; () banked
 12762  0112AE  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12763  0112B0  0E00               	movlw	0
 12764  0112B2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12765  0112B4  0E06               	movlw	6
 12766  0112B6  ECCA  F0A0         	call	_terminal_textAttributes
 12767                           
 12768                           ;ring_buffer_LUT.c: 705: printf("Measurement responses appear in cyan\n\r");
 12769  0112BA  0EDF               	movlw	low STR_146
 12770  0112BC  0101               	movlb	1	; () banked
 12771  0112BE  6F82               	movwf	printf@f& (0+255),b
 12772  0112C0  0EF9               	movlw	high STR_146
 12773  0112C2  6F83               	movwf	(printf@f+1)& (0+255),b
 12774  0112C4  EC7F  F089         	call	_printf	;wreg free
 12775                           
 12776                           ;ring_buffer_LUT.c: 706: terminal_textAttributes(RED, BLACK, NORMAL);
 12777  0112C8  0E00               	movlw	0
 12778  0112CA  0101               	movlb	1	; () banked
 12779  0112CC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12780  0112CE  0E00               	movlw	0
 12781  0112D0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12782  0112D2  0E01               	movlw	1
 12783  0112D4  ECCA  F0A0         	call	_terminal_textAttributes
 12784                           
 12785                           ;ring_buffer_LUT.c: 707: printf("Errors and negative responses appear in red\n\r");
 12786  0112D8  0E2D               	movlw	low STR_147
 12787  0112DA  0101               	movlb	1	; () banked
 12788  0112DC  6F82               	movwf	printf@f& (0+255),b
 12789  0112DE  0EF8               	movlw	high STR_147
 12790  0112E0  6F83               	movwf	(printf@f+1)& (0+255),b
 12791  0112E2  EC7F  F089         	call	_printf	;wreg free
 12792                           
 12793                           ;ring_buffer_LUT.c: 708: terminal_textAttributesReset();
 12794  0112E6  ECF3  F0C8         	call	_terminal_textAttributesReset	;wreg free
 12795                           
 12796                           ;ring_buffer_LUT.c: 709: printf("User input appears in white\n\r");
 12797  0112EA  0EA4               	movlw	low STR_148
 12798  0112EC  0101               	movlb	1	; () banked
 12799  0112EE  6F82               	movwf	printf@f& (0+255),b
 12800  0112F0  0EFB               	movlw	high STR_148
 12801  0112F2  6F83               	movwf	(printf@f+1)& (0+255),b
 12802  0112F4  EC7F  F089         	call	_printf	;wreg free
 12803                           
 12804                           ;ring_buffer_LUT.c: 712: terminal_printNewline();
 12805  0112F8  EC0D  F0C9         	call	_terminal_printNewline	;wreg free
 12806  0112FC  0012               	return	
 12807  0112FE                     __end_of_ringBufferLUT:
 12808                           	opt stack 0
 12809                           tblptru	equ	0xFF8
 12810                           tblptrh	equ	0xFF7
 12811                           tblptrl	equ	0xFF6
 12812                           tablat	equ	0xFF5
 12813                           intcon	equ	0xFF2
 12814                           postinc0	equ	0xFEE
 12815                           wreg	equ	0xFE8
 12816                           indf1	equ	0xFE7
 12817                           postdec1	equ	0xFE5
 12818                           fsr1h	equ	0xFE2
 12819                           fsr1l	equ	0xFE1
 12820                           indf2	equ	0xFDF
 12821                           postinc2	equ	0xFDE
 12822                           fsr2h	equ	0xFDA
 12823                           fsr2l	equ	0xFD9
 12824                           status	equ	0xFD8
 12825                           
 12826 ;; *************** function _terminal_textAttributesReset *****************
 12827 ;; Defined at:
 12828 ;;		line 223 in file "ring_buffer_interface.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;		None
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;		None
 12833 ;; Return value:  Size  Location     Type
 12834 ;;                  1    wreg      void 
 12835 ;; Registers used:
 12836 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12846 ;;Total ram usage:        0 bytes
 12847 ;; Hardware stack levels used:    1
 12848 ;; Hardware stack levels required when called:   17
 12849 ;; This function calls:
 12850 ;;		_terminal_textAttributes
 12851 ;; This function is called by:
 12852 ;;		_main
 12853 ;;		_ringBufferLUT
 12854 ;; This function uses a non-reentrant model
 12855 ;;
 12856                           
 12857                           	psect	text4
 12858  0191E6                     __ptext4:
 12859                           	opt stack 0
 12860  0191E6                     _terminal_textAttributesReset:
 12861                           	opt stack 13
 12862                           
 12863                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 12864                           
 12865                           ;incstack = 0
 12866  0191E6  0E00               	movlw	0
 12867  0191E8  0101               	movlb	1	; () banked
 12868  0191EA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 12869  0191EC  0E00               	movlw	0
 12870  0191EE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 12871  0191F0  0E07               	movlw	7
 12872  0191F2  ECCA  F0A0         	call	_terminal_textAttributes
 12873  0191F6  0012               	return		;funcret
 12874  0191F8                     __end_of_terminal_textAttributesReset:
 12875                           	opt stack 0
 12876                           tblptru	equ	0xFF8
 12877                           tblptrh	equ	0xFF7
 12878                           tblptrl	equ	0xFF6
 12879                           tablat	equ	0xFF5
 12880                           intcon	equ	0xFF2
 12881                           postinc0	equ	0xFEE
 12882                           wreg	equ	0xFE8
 12883                           indf1	equ	0xFE7
 12884                           postdec1	equ	0xFE5
 12885                           fsr1h	equ	0xFE2
 12886                           fsr1l	equ	0xFE1
 12887                           indf2	equ	0xFDF
 12888                           postinc2	equ	0xFDE
 12889                           fsr2h	equ	0xFDA
 12890                           fsr2l	equ	0xFD9
 12891                           status	equ	0xFD8
 12892                           
 12893 ;; *************** function _terminal_textAttributes *****************
 12894 ;; Defined at:
 12895 ;;		line 115 in file "ring_buffer_interface.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;  foreground_c    1    wreg     enum E17893
 12898 ;;  background_c    1  178[BANK1 ] enum E17893
 12899 ;;  input_attrib    1  179[BANK1 ] enum E17885
 12900 ;; Auto vars:     Size  Location     Type
 12901 ;;  foreground_c    1    0[BANK2 ] enum E17893
 12902 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 12903 ;; Return value:  Size  Location     Type
 12904 ;;                  1    wreg      void 
 12905 ;; Registers used:
 12906 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12907 ;; Tracked objects:
 12908 ;;		On entry : 0/0
 12909 ;;		On exit  : 0/0
 12910 ;;		Unchanged: 0/0
 12911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12912 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12913 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 12914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12915 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 12916 ;;Total ram usage:       18 bytes
 12917 ;; Hardware stack levels used:    1
 12918 ;; Hardware stack levels required when called:   16
 12919 ;; This function calls:
 12920 ;;		_printf
 12921 ;;		_strcat
 12922 ;;		_strncpy
 12923 ;; This function is called by:
 12924 ;;		_terminal_textAttributesReset
 12925 ;;		_ringBufferLUT
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text5
 12930  014194                     __ptext5:
 12931                           	opt stack 0
 12932  014194                     _terminal_textAttributes:
 12933                           	opt stack 13
 12934                           
 12935                           ;incstack = 0
 12936                           ;terminal_textAttributes@foreground_color stored from wreg
 12937  014194  0102               	movlb	2	; () banked
 12938  014196  6F80               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 12939                           
 12940                           ;ring_buffer_interface.c: 119: char output_buff[15];
 12941                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 12942  014198  0E81               	movlw	low terminal_textAttributes@output_buff
 12943  01419A  0101               	movlb	1	; () banked
 12944  01419C  6F17               	movwf	strncpy@to& (0+255),b
 12945  01419E  0E02               	movlw	high terminal_textAttributes@output_buff
 12946  0141A0  6F18               	movwf	(strncpy@to+1)& (0+255),b
 12947  0141A2  0EF6               	movlw	low STR_11
 12948  0141A4  6F19               	movwf	strncpy@from& (0+255),b
 12949  0141A6  0EFF               	movlw	high STR_11
 12950  0141A8  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 12951  0141AA  0E00               	movlw	0
 12952  0141AC  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 12953  0141AE  0E0F               	movlw	15
 12954  0141B0  6F1B               	movwf	strncpy@size& (0+255),b
 12955  0141B2  EC18  F0C3         	call	_strncpy	;wreg free
 12956                           
 12957                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 12958  0141B6  D054               	goto	l1106
 12959  0141B8                     
 12960                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 12961  0141B8  0E81               	movlw	low terminal_textAttributes@output_buff
 12962  0141BA  0101               	movlb	1	; () banked
 12963  0141BC  6F17               	movwf	strcat@to& (0+255),b
 12964  0141BE  0E02               	movlw	high terminal_textAttributes@output_buff
 12965  0141C0  6F18               	movwf	(strcat@to+1)& (0+255),b
 12966  0141C2  0ECA               	movlw	low (STR_20+1)
 12967  0141C4  6F19               	movwf	strcat@from& (0+255),b
 12968  0141C6  0EFF               	movlw	high (STR_20+1)
 12969  0141C8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 12970  0141CA  EC08  F0C5         	call	_strcat	;wreg free
 12971                           
 12972                           ;ring_buffer_interface.c: 127: break;
 12973  0141CE  D05D               	goto	l1108
 12974  0141D0                     
 12975                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 12976  0141D0  0E81               	movlw	low terminal_textAttributes@output_buff
 12977  0141D2  0101               	movlb	1	; () banked
 12978  0141D4  6F17               	movwf	strcat@to& (0+255),b
 12979  0141D6  0E02               	movlw	high terminal_textAttributes@output_buff
 12980  0141D8  6F18               	movwf	(strcat@to+1)& (0+255),b
 12981  0141DA  0EDE               	movlw	low (STR_67+20)
 12982  0141DC  6F19               	movwf	strcat@from& (0+255),b
 12983  0141DE  0EFC               	movlw	high (STR_67+20)
 12984  0141E0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 12985  0141E2  EC08  F0C5         	call	_strcat	;wreg free
 12986                           
 12987                           ;ring_buffer_interface.c: 130: break;
 12988  0141E6  D051               	goto	l1108
 12989  0141E8                     
 12990                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 12991  0141E8  0E81               	movlw	low terminal_textAttributes@output_buff
 12992  0141EA  0101               	movlb	1	; () banked
 12993  0141EC  6F17               	movwf	strcat@to& (0+255),b
 12994  0141EE  0E02               	movlw	high terminal_textAttributes@output_buff
 12995  0141F0  6F18               	movwf	(strcat@to+1)& (0+255),b
 12996  0141F2  0EDF               	movlw	low (STR_24+1)
 12997  0141F4  6F19               	movwf	strcat@from& (0+255),b
 12998  0141F6  0EFF               	movlw	high (STR_24+1)
 12999  0141F8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13000  0141FA  EC08  F0C5         	call	_strcat	;wreg free
 13001                           
 13002                           ;ring_buffer_interface.c: 133: break;
 13003  0141FE  D045               	goto	l1108
 13004  014200                     
 13005                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 13006  014200  0E81               	movlw	low terminal_textAttributes@output_buff
 13007  014202  0101               	movlb	1	; () banked
 13008  014204  6F17               	movwf	strcat@to& (0+255),b
 13009  014206  0E02               	movlw	high terminal_textAttributes@output_buff
 13010  014208  6F18               	movwf	(strcat@to+1)& (0+255),b
 13011  01420A  0EE5               	movlw	low (STR_25+1)
 13012  01420C  6F19               	movwf	strcat@from& (0+255),b
 13013  01420E  0EFF               	movlw	high (STR_25+1)
 13014  014210  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13015  014212  EC08  F0C5         	call	_strcat	;wreg free
 13016                           
 13017                           ;ring_buffer_interface.c: 136: break;
 13018  014216  D039               	goto	l1108
 13019  014218                     
 13020                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 13021  014218  0E81               	movlw	low terminal_textAttributes@output_buff
 13022  01421A  0101               	movlb	1	; () banked
 13023  01421C  6F17               	movwf	strcat@to& (0+255),b
 13024  01421E  0E02               	movlw	high terminal_textAttributes@output_buff
 13025  014220  6F18               	movwf	(strcat@to+1)& (0+255),b
 13026  014222  0EF1               	movlw	low (STR_27+1)
 13027  014224  6F19               	movwf	strcat@from& (0+255),b
 13028  014226  0EFF               	movlw	high (STR_27+1)
 13029  014228  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13030  01422A  EC08  F0C5         	call	_strcat	;wreg free
 13031                           
 13032                           ;ring_buffer_interface.c: 139: break;
 13033  01422E  D02D               	goto	l1108
 13034  014230                     
 13035                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 13036  014230  0E81               	movlw	low terminal_textAttributes@output_buff
 13037  014232  0101               	movlb	1	; () banked
 13038  014234  6F17               	movwf	strcat@to& (0+255),b
 13039  014236  0E02               	movlw	high terminal_textAttributes@output_buff
 13040  014238  6F18               	movwf	(strcat@to+1)& (0+255),b
 13041  01423A  0EF9               	movlw	low STR_17
 13042  01423C  6F19               	movwf	strcat@from& (0+255),b
 13043  01423E  0EFF               	movlw	high STR_17
 13044  014240  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13045  014242  EC08  F0C5         	call	_strcat	;wreg free
 13046                           
 13047                           ;ring_buffer_interface.c: 142: break;
 13048  014246  D021               	goto	l1108
 13049  014248                     
 13050                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 13051  014248  0E81               	movlw	low terminal_textAttributes@output_buff
 13052  01424A  0101               	movlb	1	; () banked
 13053  01424C  6F17               	movwf	strcat@to& (0+255),b
 13054  01424E  0E02               	movlw	high terminal_textAttributes@output_buff
 13055  014250  6F18               	movwf	(strcat@to+1)& (0+255),b
 13056  014252  0ECA               	movlw	low (STR_20+1)
 13057  014254  6F19               	movwf	strcat@from& (0+255),b
 13058  014256  0EFF               	movlw	high (STR_20+1)
 13059  014258  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13060  01425A  EC08  F0C5         	call	_strcat	;wreg free
 13061                           
 13062                           ;ring_buffer_interface.c: 147: }
 13063                           
 13064                           ;ring_buffer_interface.c: 146: break;
 13065  01425E  D015               	goto	l1108
 13066  014260                     l1106:
 13067  014260  0101               	movlb	1	; () banked
 13068  014262  51B3               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 13069                           
 13070                           ; Switch size 1, requested type "space"
 13071                           ; Number of cases is 6, Range of values is 0 to 5
 13072                           ; switch strategies available:
 13073                           ; Name         Instructions Cycles
 13074                           ; simple_byte           19    10 (average)
 13075                           ;	Chosen strategy is simple_byte
 13076  014264  0A00               	xorlw	0	; case 0
 13077  014266  B4D8               	btfsc	status,2,c
 13078  014268  D7A7               	goto	l1107
 13079  01426A  0A01               	xorlw	1	; case 1
 13080  01426C  B4D8               	btfsc	status,2,c
 13081  01426E  D7B0               	goto	l1109
 13082  014270  0A03               	xorlw	3	; case 2
 13083  014272  B4D8               	btfsc	status,2,c
 13084  014274  D7B9               	goto	l1110
 13085  014276  0A01               	xorlw	1	; case 3
 13086  014278  B4D8               	btfsc	status,2,c
 13087  01427A  D7C2               	goto	l1111
 13088  01427C  0A07               	xorlw	7	; case 4
 13089  01427E  B4D8               	btfsc	status,2,c
 13090  014280  D7CB               	goto	l1112
 13091  014282  0A01               	xorlw	1	; case 5
 13092  014284  B4D8               	btfsc	status,2,c
 13093  014286  D7D4               	goto	l1113
 13094  014288  D7DF               	goto	l1114
 13095  01428A                     l1108:
 13096                           
 13097                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 13098                           
 13099                           ; BSR set to: 1
 13100  01428A  0E81               	movlw	low terminal_textAttributes@output_buff
 13101  01428C  0101               	movlb	1	; () banked
 13102  01428E  6F17               	movwf	strcat@to& (0+255),b
 13103  014290  0E02               	movlw	high terminal_textAttributes@output_buff
 13104  014292  6F18               	movwf	(strcat@to+1)& (0+255),b
 13105  014294  0EFB               	movlw	low STR_19
 13106  014296  6F19               	movwf	strcat@from& (0+255),b
 13107  014298  0EFF               	movlw	high STR_19
 13108  01429A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13109  01429C  EC08  F0C5         	call	_strcat	;wreg free
 13110                           
 13111                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 13112  0142A0  D06C               	goto	l1115
 13113  0142A2                     
 13114                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 13115  0142A2  0E81               	movlw	low terminal_textAttributes@output_buff
 13116  0142A4  0101               	movlb	1	; () banked
 13117  0142A6  6F17               	movwf	strcat@to& (0+255),b
 13118  0142A8  0E02               	movlw	high terminal_textAttributes@output_buff
 13119  0142AA  6F18               	movwf	(strcat@to+1)& (0+255),b
 13120  0142AC  0EC9               	movlw	low STR_20
 13121  0142AE  6F19               	movwf	strcat@from& (0+255),b
 13122  0142B0  0EFF               	movlw	high STR_20
 13123  0142B2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13124  0142B4  EC08  F0C5         	call	_strcat	;wreg free
 13125                           
 13126                           ;ring_buffer_interface.c: 155: break;
 13127  0142B8  D07B               	goto	l1117
 13128  0142BA                     
 13129                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 13130  0142BA  0E81               	movlw	low terminal_textAttributes@output_buff
 13131  0142BC  0101               	movlb	1	; () banked
 13132  0142BE  6F17               	movwf	strcat@to& (0+255),b
 13133  0142C0  0E02               	movlw	high terminal_textAttributes@output_buff
 13134  0142C2  6F18               	movwf	(strcat@to+1)& (0+255),b
 13135  0142C4  0ECC               	movlw	low STR_21
 13136  0142C6  6F19               	movwf	strcat@from& (0+255),b
 13137  0142C8  0EFF               	movlw	high STR_21
 13138  0142CA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13139  0142CC  EC08  F0C5         	call	_strcat	;wreg free
 13140                           
 13141                           ;ring_buffer_interface.c: 158: break;
 13142  0142D0  D06F               	goto	l1117
 13143  0142D2                     
 13144                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 13145  0142D2  0E81               	movlw	low terminal_textAttributes@output_buff
 13146  0142D4  0101               	movlb	1	; () banked
 13147  0142D6  6F17               	movwf	strcat@to& (0+255),b
 13148  0142D8  0E02               	movlw	high terminal_textAttributes@output_buff
 13149  0142DA  6F18               	movwf	(strcat@to+1)& (0+255),b
 13150  0142DC  0ED2               	movlw	low STR_22
 13151  0142DE  6F19               	movwf	strcat@from& (0+255),b
 13152  0142E0  0EFF               	movlw	high STR_22
 13153  0142E2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13154  0142E4  EC08  F0C5         	call	_strcat	;wreg free
 13155                           
 13156                           ;ring_buffer_interface.c: 161: break;
 13157  0142E8  D063               	goto	l1117
 13158  0142EA                     
 13159                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 13160  0142EA  0E81               	movlw	low terminal_textAttributes@output_buff
 13161  0142EC  0101               	movlb	1	; () banked
 13162  0142EE  6F17               	movwf	strcat@to& (0+255),b
 13163  0142F0  0E02               	movlw	high terminal_textAttributes@output_buff
 13164  0142F2  6F18               	movwf	(strcat@to+1)& (0+255),b
 13165  0142F4  0ED8               	movlw	low STR_23
 13166  0142F6  6F19               	movwf	strcat@from& (0+255),b
 13167  0142F8  0EFF               	movlw	high STR_23
 13168  0142FA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13169  0142FC  EC08  F0C5         	call	_strcat	;wreg free
 13170                           
 13171                           ;ring_buffer_interface.c: 164: break;
 13172  014300  D057               	goto	l1117
 13173  014302                     
 13174                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 13175  014302  0E81               	movlw	low terminal_textAttributes@output_buff
 13176  014304  0101               	movlb	1	; () banked
 13177  014306  6F17               	movwf	strcat@to& (0+255),b
 13178  014308  0E02               	movlw	high terminal_textAttributes@output_buff
 13179  01430A  6F18               	movwf	(strcat@to+1)& (0+255),b
 13180  01430C  0EDE               	movlw	low STR_24
 13181  01430E  6F19               	movwf	strcat@from& (0+255),b
 13182  014310  0EFF               	movlw	high STR_24
 13183  014312  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13184  014314  EC08  F0C5         	call	_strcat	;wreg free
 13185                           
 13186                           ;ring_buffer_interface.c: 167: break;
 13187  014318  D04B               	goto	l1117
 13188  01431A                     
 13189                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 13190  01431A  0E81               	movlw	low terminal_textAttributes@output_buff
 13191  01431C  0101               	movlb	1	; () banked
 13192  01431E  6F17               	movwf	strcat@to& (0+255),b
 13193  014320  0E02               	movlw	high terminal_textAttributes@output_buff
 13194  014322  6F18               	movwf	(strcat@to+1)& (0+255),b
 13195  014324  0EE4               	movlw	low STR_25
 13196  014326  6F19               	movwf	strcat@from& (0+255),b
 13197  014328  0EFF               	movlw	high STR_25
 13198  01432A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13199  01432C  EC08  F0C5         	call	_strcat	;wreg free
 13200                           
 13201                           ;ring_buffer_interface.c: 170: break;
 13202  014330  D03F               	goto	l1117
 13203  014332                     
 13204                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 13205  014332  0E81               	movlw	low terminal_textAttributes@output_buff
 13206  014334  0101               	movlb	1	; () banked
 13207  014336  6F17               	movwf	strcat@to& (0+255),b
 13208  014338  0E02               	movlw	high terminal_textAttributes@output_buff
 13209  01433A  6F18               	movwf	(strcat@to+1)& (0+255),b
 13210  01433C  0EEA               	movlw	low STR_26
 13211  01433E  6F19               	movwf	strcat@from& (0+255),b
 13212  014340  0EFF               	movlw	high STR_26
 13213  014342  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13214  014344  EC08  F0C5         	call	_strcat	;wreg free
 13215                           
 13216                           ;ring_buffer_interface.c: 173: break;
 13217  014348  D033               	goto	l1117
 13218  01434A                     
 13219                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 13220  01434A  0E81               	movlw	low terminal_textAttributes@output_buff
 13221  01434C  0101               	movlb	1	; () banked
 13222  01434E  6F17               	movwf	strcat@to& (0+255),b
 13223  014350  0E02               	movlw	high terminal_textAttributes@output_buff
 13224  014352  6F18               	movwf	(strcat@to+1)& (0+255),b
 13225  014354  0EF0               	movlw	low STR_27
 13226  014356  6F19               	movwf	strcat@from& (0+255),b
 13227  014358  0EFF               	movlw	high STR_27
 13228  01435A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13229  01435C  EC08  F0C5         	call	_strcat	;wreg free
 13230                           
 13231                           ;ring_buffer_interface.c: 176: break;
 13232  014360  D027               	goto	l1117
 13233  014362                     
 13234                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 13235  014362  0E81               	movlw	low terminal_textAttributes@output_buff
 13236  014364  0101               	movlb	1	; () banked
 13237  014366  6F17               	movwf	strcat@to& (0+255),b
 13238  014368  0E02               	movlw	high terminal_textAttributes@output_buff
 13239  01436A  6F18               	movwf	(strcat@to+1)& (0+255),b
 13240  01436C  0EF0               	movlw	low STR_27
 13241  01436E  6F19               	movwf	strcat@from& (0+255),b
 13242  014370  0EFF               	movlw	high STR_27
 13243  014372  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13244  014374  EC08  F0C5         	call	_strcat	;wreg free
 13245                           
 13246                           ;ring_buffer_interface.c: 181: }
 13247                           
 13248                           ;ring_buffer_interface.c: 180: break;
 13249  014378  D01B               	goto	l1117
 13250  01437A                     l1115:
 13251  01437A  0102               	movlb	2	; () banked
 13252  01437C  5180               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 13253                           
 13254                           ; Switch size 1, requested type "space"
 13255                           ; Number of cases is 8, Range of values is 0 to 7
 13256                           ; switch strategies available:
 13257                           ; Name         Instructions Cycles
 13258                           ; simple_byte           25    13 (average)
 13259                           ;	Chosen strategy is simple_byte
 13260  01437E  0A00               	xorlw	0	; case 0
 13261  014380  B4D8               	btfsc	status,2,c
 13262  014382  D78F               	goto	l1116
 13263  014384  0A01               	xorlw	1	; case 1
 13264  014386  B4D8               	btfsc	status,2,c
 13265  014388  D798               	goto	l1118
 13266  01438A  0A03               	xorlw	3	; case 2
 13267  01438C  B4D8               	btfsc	status,2,c
 13268  01438E  D7A1               	goto	l1119
 13269  014390  0A01               	xorlw	1	; case 3
 13270  014392  B4D8               	btfsc	status,2,c
 13271  014394  D7AA               	goto	l1120
 13272  014396  0A07               	xorlw	7	; case 4
 13273  014398  B4D8               	btfsc	status,2,c
 13274  01439A  D7B3               	goto	l1121
 13275  01439C  0A01               	xorlw	1	; case 5
 13276  01439E  B4D8               	btfsc	status,2,c
 13277  0143A0  D7BC               	goto	l1122
 13278  0143A2  0A03               	xorlw	3	; case 6
 13279  0143A4  B4D8               	btfsc	status,2,c
 13280  0143A6  D7C5               	goto	l1123
 13281  0143A8  0A01               	xorlw	1	; case 7
 13282  0143AA  B4D8               	btfsc	status,2,c
 13283  0143AC  D7CE               	goto	l1124
 13284  0143AE  D7D9               	goto	l1125
 13285  0143B0                     l1117:
 13286                           
 13287                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 13288                           
 13289                           ; BSR set to: 2
 13290  0143B0  0E81               	movlw	low terminal_textAttributes@output_buff
 13291  0143B2  0101               	movlb	1	; () banked
 13292  0143B4  6F17               	movwf	strcat@to& (0+255),b
 13293  0143B6  0E02               	movlw	high terminal_textAttributes@output_buff
 13294  0143B8  6F18               	movwf	(strcat@to+1)& (0+255),b
 13295  0143BA  0EFB               	movlw	low STR_19
 13296  0143BC  6F19               	movwf	strcat@from& (0+255),b
 13297  0143BE  0EFF               	movlw	high STR_19
 13298  0143C0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13299  0143C2  EC08  F0C5         	call	_strcat	;wreg free
 13300                           
 13301                           ;ring_buffer_interface.c: 185: switch (background_color) {
 13302  0143C6  D06C               	goto	l1126
 13303  0143C8                     
 13304                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 13305  0143C8  0E81               	movlw	low terminal_textAttributes@output_buff
 13306  0143CA  0101               	movlb	1	; () banked
 13307  0143CC  6F17               	movwf	strcat@to& (0+255),b
 13308  0143CE  0E02               	movlw	high terminal_textAttributes@output_buff
 13309  0143D0  6F18               	movwf	(strcat@to+1)& (0+255),b
 13310  0143D2  0E42               	movlw	low (STR_149+9)
 13311  0143D4  6F19               	movwf	strcat@from& (0+255),b
 13312  0143D6  0EFF               	movlw	high (STR_149+9)
 13313  0143D8  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13314  0143DA  EC08  F0C5         	call	_strcat	;wreg free
 13315                           
 13316                           ;ring_buffer_interface.c: 189: break;
 13317  0143DE  D07B               	goto	l1128
 13318  0143E0                     
 13319                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 13320  0143E0  0E81               	movlw	low terminal_textAttributes@output_buff
 13321  0143E2  0101               	movlb	1	; () banked
 13322  0143E4  6F17               	movwf	strcat@to& (0+255),b
 13323  0143E6  0E02               	movlw	high terminal_textAttributes@output_buff
 13324  0143E8  6F18               	movwf	(strcat@to+1)& (0+255),b
 13325  0143EA  0ECF               	movlw	low STR_31
 13326  0143EC  6F19               	movwf	strcat@from& (0+255),b
 13327  0143EE  0EFF               	movlw	high STR_31
 13328  0143F0  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13329  0143F2  EC08  F0C5         	call	_strcat	;wreg free
 13330                           
 13331                           ;ring_buffer_interface.c: 192: break;
 13332  0143F6  D06F               	goto	l1128
 13333  0143F8                     
 13334                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 13335  0143F8  0E81               	movlw	low terminal_textAttributes@output_buff
 13336  0143FA  0101               	movlb	1	; () banked
 13337  0143FC  6F17               	movwf	strcat@to& (0+255),b
 13338  0143FE  0E02               	movlw	high terminal_textAttributes@output_buff
 13339  014400  6F18               	movwf	(strcat@to+1)& (0+255),b
 13340  014402  0ED5               	movlw	low STR_32
 13341  014404  6F19               	movwf	strcat@from& (0+255),b
 13342  014406  0EFF               	movlw	high STR_32
 13343  014408  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13344  01440A  EC08  F0C5         	call	_strcat	;wreg free
 13345                           
 13346                           ;ring_buffer_interface.c: 195: break;
 13347  01440E  D063               	goto	l1128
 13348  014410                     
 13349                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 13350  014410  0E81               	movlw	low terminal_textAttributes@output_buff
 13351  014412  0101               	movlb	1	; () banked
 13352  014414  6F17               	movwf	strcat@to& (0+255),b
 13353  014416  0E02               	movlw	high terminal_textAttributes@output_buff
 13354  014418  6F18               	movwf	(strcat@to+1)& (0+255),b
 13355  01441A  0EDB               	movlw	low STR_33
 13356  01441C  6F19               	movwf	strcat@from& (0+255),b
 13357  01441E  0EFF               	movlw	high STR_33
 13358  014420  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13359  014422  EC08  F0C5         	call	_strcat	;wreg free
 13360                           
 13361                           ;ring_buffer_interface.c: 198: break;
 13362  014426  D057               	goto	l1128
 13363  014428                     
 13364                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 13365  014428  0E81               	movlw	low terminal_textAttributes@output_buff
 13366  01442A  0101               	movlb	1	; () banked
 13367  01442C  6F17               	movwf	strcat@to& (0+255),b
 13368  01442E  0E02               	movlw	high terminal_textAttributes@output_buff
 13369  014430  6F18               	movwf	(strcat@to+1)& (0+255),b
 13370  014432  0EE1               	movlw	low STR_34
 13371  014434  6F19               	movwf	strcat@from& (0+255),b
 13372  014436  0EFF               	movlw	high STR_34
 13373  014438  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13374  01443A  EC08  F0C5         	call	_strcat	;wreg free
 13375                           
 13376                           ;ring_buffer_interface.c: 201: break;
 13377  01443E  D04B               	goto	l1128
 13378  014440                     
 13379                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 13380  014440  0E81               	movlw	low terminal_textAttributes@output_buff
 13381  014442  0101               	movlb	1	; () banked
 13382  014444  6F17               	movwf	strcat@to& (0+255),b
 13383  014446  0E02               	movlw	high terminal_textAttributes@output_buff
 13384  014448  6F18               	movwf	(strcat@to+1)& (0+255),b
 13385  01444A  0EE7               	movlw	low STR_35
 13386  01444C  6F19               	movwf	strcat@from& (0+255),b
 13387  01444E  0EFF               	movlw	high STR_35
 13388  014450  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13389  014452  EC08  F0C5         	call	_strcat	;wreg free
 13390                           
 13391                           ;ring_buffer_interface.c: 204: break;
 13392  014456  D03F               	goto	l1128
 13393  014458                     
 13394                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 13395  014458  0E81               	movlw	low terminal_textAttributes@output_buff
 13396  01445A  0101               	movlb	1	; () banked
 13397  01445C  6F17               	movwf	strcat@to& (0+255),b
 13398  01445E  0E02               	movlw	high terminal_textAttributes@output_buff
 13399  014460  6F18               	movwf	(strcat@to+1)& (0+255),b
 13400  014462  0EED               	movlw	low STR_36
 13401  014464  6F19               	movwf	strcat@from& (0+255),b
 13402  014466  0EFF               	movlw	high STR_36
 13403  014468  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13404  01446A  EC08  F0C5         	call	_strcat	;wreg free
 13405                           
 13406                           ;ring_buffer_interface.c: 207: break;
 13407  01446E  D033               	goto	l1128
 13408  014470                     
 13409                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 13410  014470  0E81               	movlw	low terminal_textAttributes@output_buff
 13411  014472  0101               	movlb	1	; () banked
 13412  014474  6F17               	movwf	strcat@to& (0+255),b
 13413  014476  0E02               	movlw	high terminal_textAttributes@output_buff
 13414  014478  6F18               	movwf	(strcat@to+1)& (0+255),b
 13415  01447A  0EF3               	movlw	low STR_37
 13416  01447C  6F19               	movwf	strcat@from& (0+255),b
 13417  01447E  0EFF               	movlw	high STR_37
 13418  014480  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13419  014482  EC08  F0C5         	call	_strcat	;wreg free
 13420                           
 13421                           ;ring_buffer_interface.c: 210: break;
 13422  014486  D027               	goto	l1128
 13423  014488                     
 13424                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 13425  014488  0E81               	movlw	low terminal_textAttributes@output_buff
 13426  01448A  0101               	movlb	1	; () banked
 13427  01448C  6F17               	movwf	strcat@to& (0+255),b
 13428  01448E  0E02               	movlw	high terminal_textAttributes@output_buff
 13429  014490  6F18               	movwf	(strcat@to+1)& (0+255),b
 13430  014492  0EF3               	movlw	low STR_37
 13431  014494  6F19               	movwf	strcat@from& (0+255),b
 13432  014496  0EFF               	movlw	high STR_37
 13433  014498  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13434  01449A  EC08  F0C5         	call	_strcat	;wreg free
 13435                           
 13436                           ;ring_buffer_interface.c: 215: }
 13437                           
 13438                           ;ring_buffer_interface.c: 214: break;
 13439  01449E  D01B               	goto	l1128
 13440  0144A0                     l1126:
 13441  0144A0  0101               	movlb	1	; () banked
 13442  0144A2  51B2               	movf	terminal_textAttributes@background_color& (0+255),w,b
 13443                           
 13444                           ; Switch size 1, requested type "space"
 13445                           ; Number of cases is 8, Range of values is 0 to 7
 13446                           ; switch strategies available:
 13447                           ; Name         Instructions Cycles
 13448                           ; simple_byte           25    13 (average)
 13449                           ;	Chosen strategy is simple_byte
 13450  0144A4  0A00               	xorlw	0	; case 0
 13451  0144A6  B4D8               	btfsc	status,2,c
 13452  0144A8  D78F               	goto	l1127
 13453  0144AA  0A01               	xorlw	1	; case 1
 13454  0144AC  B4D8               	btfsc	status,2,c
 13455  0144AE  D798               	goto	l1129
 13456  0144B0  0A03               	xorlw	3	; case 2
 13457  0144B2  B4D8               	btfsc	status,2,c
 13458  0144B4  D7A1               	goto	l1130
 13459  0144B6  0A01               	xorlw	1	; case 3
 13460  0144B8  B4D8               	btfsc	status,2,c
 13461  0144BA  D7AA               	goto	l1131
 13462  0144BC  0A07               	xorlw	7	; case 4
 13463  0144BE  B4D8               	btfsc	status,2,c
 13464  0144C0  D7B3               	goto	l1132
 13465  0144C2  0A01               	xorlw	1	; case 5
 13466  0144C4  B4D8               	btfsc	status,2,c
 13467  0144C6  D7BC               	goto	l1133
 13468  0144C8  0A03               	xorlw	3	; case 6
 13469  0144CA  B4D8               	btfsc	status,2,c
 13470  0144CC  D7C5               	goto	l1134
 13471  0144CE  0A01               	xorlw	1	; case 7
 13472  0144D0  B4D8               	btfsc	status,2,c
 13473  0144D2  D7CE               	goto	l1135
 13474  0144D4  D7D9               	goto	l1136
 13475  0144D6                     l1128:
 13476                           
 13477                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 13478                           
 13479                           ; BSR set to: 1
 13480  0144D6  0E81               	movlw	low terminal_textAttributes@output_buff
 13481  0144D8  0101               	movlb	1	; () banked
 13482  0144DA  6F17               	movwf	strcat@to& (0+255),b
 13483  0144DC  0E02               	movlw	high terminal_textAttributes@output_buff
 13484  0144DE  6F18               	movwf	(strcat@to+1)& (0+255),b
 13485  0144E0  0EFD               	movlw	low STR_39
 13486  0144E2  6F19               	movwf	strcat@from& (0+255),b
 13487  0144E4  0EFF               	movlw	high STR_39
 13488  0144E6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 13489  0144E8  EC08  F0C5         	call	_strcat	;wreg free
 13490                           
 13491                           ;ring_buffer_interface.c: 219: printf(output_buff);
 13492  0144EC  0E81               	movlw	low terminal_textAttributes@output_buff
 13493  0144EE  0101               	movlb	1	; () banked
 13494  0144F0  6F82               	movwf	printf@f& (0+255),b
 13495  0144F2  0E02               	movlw	high terminal_textAttributes@output_buff
 13496  0144F4  6F83               	movwf	(printf@f+1)& (0+255),b
 13497  0144F6  EC7F  F089         	call	_printf	;wreg free
 13498  0144FA  0012               	return		;funcret
 13499  0144FC                     __end_of_terminal_textAttributes:
 13500                           	opt stack 0
 13501                           tblptru	equ	0xFF8
 13502                           tblptrh	equ	0xFF7
 13503                           tblptrl	equ	0xFF6
 13504                           tablat	equ	0xFF5
 13505                           intcon	equ	0xFF2
 13506                           postinc0	equ	0xFEE
 13507                           wreg	equ	0xFE8
 13508                           indf1	equ	0xFE7
 13509                           postdec1	equ	0xFE5
 13510                           fsr1h	equ	0xFE2
 13511                           fsr1l	equ	0xFE1
 13512                           indf2	equ	0xFDF
 13513                           postinc2	equ	0xFDE
 13514                           fsr2h	equ	0xFDA
 13515                           fsr2l	equ	0xFD9
 13516                           status	equ	0xFD8
 13517                           
 13518 ;; *************** function _strncpy *****************
 13519 ;; Defined at:
 13520 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 13521 ;; Parameters:    Size  Location     Type
 13522 ;;  to              2   23[BANK1 ] PTR unsigned char 
 13523 ;;		 -> terminal_textAttributes@output_buff(15), 
 13524 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 13525 ;;		 -> STR_11(3), 
 13526 ;;  size            2   27[BANK1 ] unsigned int 
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 13529 ;;		 -> terminal_textAttributes@output_buff(15), 
 13530 ;; Return value:  Size  Location     Type
 13531 ;;                  2   23[BANK1 ] PTR unsigned char 
 13532 ;; Registers used:
 13533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13534 ;; Tracked objects:
 13535 ;;		On entry : 0/0
 13536 ;;		On exit  : 0/0
 13537 ;;		Unchanged: 0/0
 13538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13539 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13540 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;Total ram usage:        8 bytes
 13544 ;; Hardware stack levels used:    1
 13545 ;; Hardware stack levels required when called:   13
 13546 ;; This function calls:
 13547 ;;		Nothing
 13548 ;; This function is called by:
 13549 ;;		_terminal_textAttributes
 13550 ;; This function uses a non-reentrant model
 13551 ;;
 13552                           
 13553                           	psect	text6
 13554  018630                     __ptext6:
 13555                           	opt stack 0
 13556  018630                     _strncpy:
 13557                           	opt stack 15
 13558                           
 13559                           ;incstack = 0
 13560  018630  C117  F11D         	movff	strncpy@to,strncpy@cp
 13561  018634  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 13562  018638  D018               	goto	l2315
 13563  01863A  0101               	movlb	1	; () banked
 13564  01863C  071B               	decf	strncpy@size& (0+255),f,b
 13565  01863E  A0D8               	btfss	status,0,c
 13566  018640  071C               	decf	(strncpy@size+1)& (0+255),f,b
 13567                           
 13568                           ; BSR set to: 1
 13569  018642  C119  FFF6         	movff	strncpy@from,tblptrl
 13570  018646  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 13571  01864A  4B19               	infsnz	strncpy@from& (0+255),f,b
 13572  01864C  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 13573  01864E                     	if	0	;tblptru may be non-zero
 13574  01864E                     	endif
 13575  01864E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13576  01864E  0E00               	movlw	low (__mediumconst shr (0+16))
 13577  018650  6EF8               	movwf	tblptru,c
 13578  018652                     	endif
 13579  018652  C11D  FFD9         	movff	strncpy@cp,fsr2l
 13580  018656  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 13581  01865A  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 13582  01865C  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 13583  01865E  0008               	tblrd		*
 13584  018660  CFF5 FFDF          	movff	tablat,indf2
 13585  018664  50DF               	movf	indf2,w,c
 13586  018666  B4D8               	btfsc	status,2,c
 13587  018668  D00E               	goto	l2317
 13588  01866A                     l2315:
 13589                           
 13590                           ; BSR set to: 1
 13591                           
 13592                           ; BSR set to: 1
 13593  01866A  0101               	movlb	1	; () banked
 13594  01866C  511B               	movf	strncpy@size& (0+255),w,b
 13595  01866E  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 13596  018670  B4D8               	btfsc	status,2,c
 13597  018672  D009               	goto	l2317
 13598  018674  D7E2               	goto	l2314
 13599  018676                     l19018:
 13600                           
 13601                           ; BSR set to: 1
 13602  018676  C11D  FFD9         	movff	strncpy@cp,fsr2l
 13603  01867A  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 13604  01867E  0E00               	movlw	0
 13605  018680  6EDF               	movwf	indf2,c
 13606                           
 13607                           ; BSR set to: 1
 13608  018682  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 13609  018684  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 13610  018686                     l2317:
 13611                           
 13612                           ; BSR set to: 1
 13613                           
 13614                           ; BSR set to: 1
 13615  018686  071B               	decf	strncpy@size& (0+255),f,b
 13616  018688  A0D8               	btfss	status,0,c
 13617  01868A  071C               	decf	(strncpy@size+1)& (0+255),f,b
 13618  01868C  291B               	incf	strncpy@size& (0+255),w,b
 13619  01868E  E1F3               	bnz	l19018
 13620  018690  291C               	incf	(strncpy@size+1)& (0+255),w,b
 13621  018692  B4D8               	btfsc	status,2,c
 13622  018694  0012               	return	
 13623  018696  D7EF               	goto	l2318
 13624  018698                     __end_of_strncpy:
 13625                           	opt stack 0
 13626                           tblptru	equ	0xFF8
 13627                           tblptrh	equ	0xFF7
 13628                           tblptrl	equ	0xFF6
 13629                           tablat	equ	0xFF5
 13630                           intcon	equ	0xFF2
 13631                           postinc0	equ	0xFEE
 13632                           wreg	equ	0xFE8
 13633                           indf1	equ	0xFE7
 13634                           postdec1	equ	0xFE5
 13635                           fsr1h	equ	0xFE2
 13636                           fsr1l	equ	0xFE1
 13637                           indf2	equ	0xFDF
 13638                           postinc2	equ	0xFDE
 13639                           fsr2h	equ	0xFDA
 13640                           fsr2l	equ	0xFD9
 13641                           status	equ	0xFD8
 13642                           
 13643 ;; *************** function _strcat *****************
 13644 ;; Defined at:
 13645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 13646 ;; Parameters:    Size  Location     Type
 13647 ;;  to              2   23[BANK1 ] PTR unsigned char 
 13648 ;;		 -> terminal_textAttributes@output_buff(15), 
 13649 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 13650 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 13651 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 13652 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 13653 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 13654 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 13655 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 13656 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 13659 ;;		 -> terminal_textAttributes@output_buff(15), 
 13660 ;; Return value:  Size  Location     Type
 13661 ;;                  2   23[BANK1 ] PTR unsigned char 
 13662 ;; Registers used:
 13663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13664 ;; Tracked objects:
 13665 ;;		On entry : 0/0
 13666 ;;		On exit  : 0/0
 13667 ;;		Unchanged: 0/0
 13668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13669 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13670 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13672 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13673 ;;Total ram usage:        6 bytes
 13674 ;; Hardware stack levels used:    1
 13675 ;; Hardware stack levels required when called:   13
 13676 ;; This function calls:
 13677 ;;		Nothing
 13678 ;; This function is called by:
 13679 ;;		_terminal_textAttributes
 13680 ;; This function uses a non-reentrant model
 13681 ;;
 13682                           
 13683                           	psect	text7
 13684  018A10                     __ptext7:
 13685                           	opt stack 0
 13686  018A10                     _strcat:
 13687                           	opt stack 15
 13688                           
 13689                           ; BSR set to: 1
 13690                           ;incstack = 0
 13691  018A10  C117  F11B         	movff	strcat@to,strcat@cp
 13692  018A14  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 13693  018A18  D003               	goto	l2284
 13694  018A1A  0101               	movlb	1	; () banked
 13695  018A1C  4B1B               	infsnz	strcat@cp& (0+255),f,b
 13696  018A1E  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 13697  018A20                     l2284:
 13698                           
 13699                           ; BSR set to: 1
 13700  018A20  C11B  FFD9         	movff	strcat@cp,fsr2l
 13701  018A24  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 13702  018A28  50DF               	movf	indf2,w,c
 13703  018A2A  B4D8               	btfsc	status,2,c
 13704  018A2C  D006               	goto	l2287
 13705  018A2E  D7F5               	goto	l2285
 13706  018A30  0101               	movlb	1	; () banked
 13707  018A32  4B1B               	infsnz	strcat@cp& (0+255),f,b
 13708  018A34  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 13709  018A36  4B19               	infsnz	strcat@from& (0+255),f,b
 13710  018A38  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 13711  018A3A                     l2287:
 13712                           
 13713                           ; BSR set to: 1
 13714  018A3A  C119  FFF6         	movff	strcat@from,tblptrl
 13715  018A3E  C11A  FFF7         	movff	strcat@from+1,tblptrh
 13716  018A42                     	if	0	;tblptru may be non-zero
 13717  018A42                     	endif
 13718  018A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13719  018A42  0E00               	movlw	low (__mediumconst shr (0+16))
 13720  018A44  6EF8               	movwf	tblptru,c
 13721  018A46                     	endif
 13722  018A46  C11B  FFD9         	movff	strcat@cp,fsr2l
 13723  018A4A  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 13724  018A4E  0008               	tblrd		*
 13725  018A50  CFF5 FFDF          	movff	tablat,indf2
 13726  018A54  50DF               	movf	indf2,w,c
 13727  018A56  B4D8               	btfsc	status,2,c
 13728  018A58  0012               	return	
 13729  018A5A  D7EA               	goto	l2288
 13730  018A5C                     __end_of_strcat:
 13731                           	opt stack 0
 13732                           tblptru	equ	0xFF8
 13733                           tblptrh	equ	0xFF7
 13734                           tblptrl	equ	0xFF6
 13735                           tablat	equ	0xFF5
 13736                           intcon	equ	0xFF2
 13737                           postinc0	equ	0xFEE
 13738                           wreg	equ	0xFE8
 13739                           indf1	equ	0xFE7
 13740                           postdec1	equ	0xFE5
 13741                           fsr1h	equ	0xFE2
 13742                           fsr1l	equ	0xFE1
 13743                           indf2	equ	0xFDF
 13744                           postinc2	equ	0xFDE
 13745                           fsr2h	equ	0xFDA
 13746                           fsr2l	equ	0xFD9
 13747                           status	equ	0xFD8
 13748                           
 13749 ;; *************** function _terminal_printNewline *****************
 13750 ;; Defined at:
 13751 ;;		line 230 in file "ring_buffer_interface.c"
 13752 ;; Parameters:    Size  Location     Type
 13753 ;;		None
 13754 ;; Auto vars:     Size  Location     Type
 13755 ;;		None
 13756 ;; Return value:  Size  Location     Type
 13757 ;;                  1    wreg      void 
 13758 ;; Registers used:
 13759 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13760 ;; Tracked objects:
 13761 ;;		On entry : 0/0
 13762 ;;		On exit  : 0/0
 13763 ;;		Unchanged: 0/0
 13764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13769 ;;Total ram usage:        0 bytes
 13770 ;; Hardware stack levels used:    1
 13771 ;; Hardware stack levels required when called:   16
 13772 ;; This function calls:
 13773 ;;		_printf
 13774 ;; This function is called by:
 13775 ;;		_ringBufferLUT
 13776 ;; This function uses a non-reentrant model
 13777 ;;
 13778                           
 13779                           	psect	text8
 13780  01921A                     __ptext8:
 13781                           	opt stack 0
 13782  01921A                     _terminal_printNewline:
 13783                           	opt stack 12
 13784                           
 13785                           ;ring_buffer_interface.c: 232: printf("\n\r");
 13786                           
 13787                           ;incstack = 0
 13788  01921A  0E46               	movlw	low (STR_137+717)
 13789  01921C  0101               	movlb	1	; () banked
 13790  01921E  6F82               	movwf	printf@f& (0+255),b
 13791  019220  0EEB               	movlw	high (STR_137+717)
 13792  019222  6F83               	movwf	(printf@f+1)& (0+255),b
 13793  019224  EC7F  F089         	call	_printf	;wreg free
 13794  019228  0012               	return		;funcret
 13795  01922A                     __end_of_terminal_printNewline:
 13796                           	opt stack 0
 13797                           tblptru	equ	0xFF8
 13798                           tblptrh	equ	0xFF7
 13799                           tblptrl	equ	0xFF6
 13800                           tablat	equ	0xFF5
 13801                           intcon	equ	0xFF2
 13802                           postinc0	equ	0xFEE
 13803                           wreg	equ	0xFE8
 13804                           indf1	equ	0xFE7
 13805                           postdec1	equ	0xFE5
 13806                           fsr1h	equ	0xFE2
 13807                           fsr1l	equ	0xFE1
 13808                           indf2	equ	0xFDF
 13809                           postinc2	equ	0xFDE
 13810                           fsr2h	equ	0xFDA
 13811                           fsr2l	equ	0xFD9
 13812                           status	equ	0xFD8
 13813                           
 13814 ;; *************** function _strstr *****************
 13815 ;; Defined at:
 13816 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 13819 ;;		 -> NULL(0), line(64), 
 13820 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 13821 ;;		 -> STR_109(25), 
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;		None
 13824 ;; Return value:  Size  Location     Type
 13825 ;;                  2   38[BANK1 ] PTR unsigned char 
 13826 ;; Registers used:
 13827 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13828 ;; Tracked objects:
 13829 ;;		On entry : 0/0
 13830 ;;		On exit  : 0/0
 13831 ;;		Unchanged: 0/0
 13832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13833 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13836 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13837 ;;Total ram usage:        4 bytes
 13838 ;; Hardware stack levels used:    1
 13839 ;; Hardware stack levels required when called:   14
 13840 ;; This function calls:
 13841 ;;		_strchr
 13842 ;;		_strlen
 13843 ;;		_strncmp
 13844 ;; This function is called by:
 13845 ;;		_ringBufferLUT
 13846 ;; This function uses a non-reentrant model
 13847 ;;
 13848                           
 13849                           	psect	text9
 13850  0180E4                     __ptext9:
 13851                           	opt stack 0
 13852  0180E4                     _strstr:
 13853                           	opt stack 14
 13854                           
 13855                           ;incstack = 0
 13856  0180E4  D034               	goto	l2329
 13857  0180E6  C126  F11D         	movff	strstr@s1,strncmp@s1
 13858  0180EA  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 13859  0180EE  C128  F11F         	movff	strstr@s2,strncmp@s2
 13860  0180F2  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 13861  0180F6  C128  F117         	movff	strstr@s2,strlen@s
 13862  0180FA  C129  F118         	movff	strstr@s2+1,strlen@s+1
 13863  0180FE  EC13  F0C4         	call	_strlen	;wreg free
 13864  018102  C117  F121         	movff	?_strlen,strncmp@len
 13865  018106  C118  F122         	movff	?_strlen+1,strncmp@len+1
 13866  01810A  EC2A  F0C0         	call	_strncmp	;wreg free
 13867  01810E  0101               	movlb	1	; () banked
 13868  018110  511D               	movf	?_strncmp& (0+255),w,b
 13869  018112  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 13870  018114  A4D8               	btfss	status,2,c
 13871  018116  D005               	goto	l2331
 13872                           
 13873                           ; BSR set to: 1
 13874  018118  C126  F126         	movff	strstr@s1,?_strstr
 13875  01811C  C127  F127         	movff	strstr@s1+1,?_strstr+1
 13876                           
 13877                           ; BSR set to: 1
 13878  018120  0012               	return	
 13879  018122                     l2331:
 13880                           
 13881                           ; BSR set to: 1
 13882                           
 13883                           ; BSR set to: 1
 13884  018122  0E01               	movlw	1
 13885  018124  2526               	addwf	strstr@s1& (0+255),w,b
 13886  018126  6F17               	movwf	strchr@ptr& (0+255),b
 13887  018128  0E00               	movlw	0
 13888  01812A  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 13889  01812C  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 13890  01812E  C128  FFF6         	movff	strstr@s2,tblptrl
 13891  018132  C129  FFF7         	movff	strstr@s2+1,tblptrh
 13892  018136                     	if	0	;tblptru may be non-zero
 13893  018136                     	endif
 13894  018136                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13895  018136  0E00               	movlw	low (__mediumconst shr (0+16))
 13896  018138  6EF8               	movwf	tblptru,c
 13897  01813A                     	endif
 13898  01813A  0008               	tblrd		*
 13899  01813C  50F5               	movf	tablat,w,c
 13900  01813E  6F19               	movwf	strchr@chr& (0+255),b
 13901  018140  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 13902  018142  ECC8  F0C6         	call	_strchr	;wreg free
 13903  018146  C117  F126         	movff	?_strchr,strstr@s1
 13904  01814A  C118  F127         	movff	?_strchr+1,strstr@s1+1
 13905  01814E                     l2329:
 13906  01814E  0101               	movlb	1	; () banked
 13907  018150  5126               	movf	strstr@s1& (0+255),w,b
 13908  018152  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 13909  018154  B4D8               	btfsc	status,2,c
 13910  018156  D007               	goto	u25770
 13911                           
 13912                           ; BSR set to: 1
 13913  018158  C126  FFD9         	movff	strstr@s1,fsr2l
 13914  01815C  C127  FFDA         	movff	strstr@s1+1,fsr2h
 13915  018160  50DF               	movf	indf2,w,c
 13916  018162  A4D8               	btfss	status,2,c
 13917  018164  D7C0               	goto	l2330
 13918  018166                     u25770:
 13919                           
 13920                           ; BSR set to: 1
 13921                           
 13922                           ; BSR set to: 1
 13923                           
 13924                           ; BSR set to: 1
 13925  018166  0E00               	movlw	0
 13926  018168  6F26               	movwf	?_strstr& (0+255),b
 13927  01816A  0E00               	movlw	0
 13928  01816C  6F27               	movwf	(?_strstr+1)& (0+255),b
 13929  01816E  0012               	return	
 13930  018170                     __end_of_strstr:
 13931                           	opt stack 0
 13932                           tblptru	equ	0xFF8
 13933                           tblptrh	equ	0xFF7
 13934                           tblptrl	equ	0xFF6
 13935                           tablat	equ	0xFF5
 13936                           intcon	equ	0xFF2
 13937                           postinc0	equ	0xFEE
 13938                           wreg	equ	0xFE8
 13939                           indf1	equ	0xFE7
 13940                           postdec1	equ	0xFE5
 13941                           fsr1h	equ	0xFE2
 13942                           fsr1l	equ	0xFE1
 13943                           indf2	equ	0xFDF
 13944                           postinc2	equ	0xFDE
 13945                           fsr2h	equ	0xFDA
 13946                           fsr2l	equ	0xFD9
 13947                           status	equ	0xFD8
 13948                           
 13949 ;; *************** function _strncmp *****************
 13950 ;; Defined at:
 13951 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 13952 ;; Parameters:    Size  Location     Type
 13953 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 13954 ;;		 -> NULL(0), line(64), 
 13955 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 13956 ;;		 -> STR_109(25), 
 13957 ;;  len             2   33[BANK1 ] unsigned int 
 13958 ;; Auto vars:     Size  Location     Type
 13959 ;;		None
 13960 ;; Return value:  Size  Location     Type
 13961 ;;                  2   29[BANK1 ] int 
 13962 ;; Registers used:
 13963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13964 ;; Tracked objects:
 13965 ;;		On entry : 0/0
 13966 ;;		On exit  : 0/0
 13967 ;;		Unchanged: 0/0
 13968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13969 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13971 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13972 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13973 ;;Total ram usage:        9 bytes
 13974 ;; Hardware stack levels used:    1
 13975 ;; Hardware stack levels required when called:   13
 13976 ;; This function calls:
 13977 ;;		Nothing
 13978 ;; This function is called by:
 13979 ;;		_strstr
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983                           	psect	text10
 13984  018054                     __ptext10:
 13985                           	opt stack 0
 13986  018054                     _strncmp:
 13987                           	opt stack 14
 13988                           
 13989                           ; BSR set to: 1
 13990                           ;incstack = 0
 13991  018054  D039               	goto	l2388
 13992  018056                     l19158:
 13993  018056  C11D  FFD9         	movff	strncmp@s1,fsr2l
 13994  01805A  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 13995  01805E  50DF               	movf	indf2,w,c
 13996  018060  B4D8               	btfsc	status,2,c
 13997  018062  D012               	goto	u25610
 13998  018064  C11D  FFD9         	movff	strncmp@s1,fsr2l
 13999  018068  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 14000  01806C  50DF               	movf	indf2,w,c
 14001  01806E  0101               	movlb	1	; () banked
 14002  018070  6F23               	movwf	??_strncmp& (0+255),b
 14003  018072  C11F  FFF6         	movff	strncmp@s2,tblptrl
 14004  018076  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 14005  01807A                     	if	0	;tblptru may be non-zero
 14006  01807A                     	endif
 14007  01807A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14008  01807A  0E00               	movlw	low (__mediumconst shr (0+16))
 14009  01807C  6EF8               	movwf	tblptru,c
 14010  01807E                     	endif
 14011  01807E  0008               	tblrd		*
 14012  018080  50F5               	movf	tablat,w,c
 14013  018082  1923               	xorwf	??_strncmp& (0+255),w,b
 14014  018084  B4D8               	btfsc	status,2,c
 14015  018086  D01C               	goto	l2390
 14016  018088                     u25610:
 14017                           
 14018                           ; BSR set to: 1
 14019  018088  C11F  FFF6         	movff	strncmp@s2,tblptrl
 14020  01808C  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 14021  018090                     	if	0	;tblptru may be non-zero
 14022  018090                     	endif
 14023  018090                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14024  018090  0E00               	movlw	low (__mediumconst shr (0+16))
 14025  018092  6EF8               	movwf	tblptru,c
 14026  018094                     	endif
 14027  018094  0008               	tblrd		*
 14028  018096  50F5               	movf	tablat,w,c
 14029  018098  0101               	movlb	1	; () banked
 14030  01809A  6F23               	movwf	??_strncmp& (0+255),b
 14031  01809C  6B24               	clrf	(??_strncmp+1)& (0+255),b
 14032  01809E  1F23               	comf	??_strncmp& (0+255),f,b
 14033  0180A0  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 14034  0180A2  4B23               	infsnz	??_strncmp& (0+255),f,b
 14035  0180A4  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 14036  0180A6  C11D  FFD9         	movff	strncmp@s1,fsr2l
 14037  0180AA  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 14038  0180AE  50DF               	movf	indf2,w,c
 14039  0180B0  6F25               	movwf	(??_strncmp+2)& (0+255),b
 14040  0180B2  5125               	movf	(??_strncmp+2)& (0+255),w,b
 14041  0180B4  2523               	addwf	??_strncmp& (0+255),w,b
 14042  0180B6  6F1D               	movwf	?_strncmp& (0+255),b
 14043  0180B8  0E00               	movlw	0
 14044  0180BA  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 14045  0180BC  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 14046                           
 14047                           ; BSR set to: 1
 14048  0180BE  0012               	return	
 14049  0180C0                     l2390:
 14050                           
 14051                           ; BSR set to: 1
 14052                           
 14053                           ; BSR set to: 1
 14054  0180C0  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 14055  0180C2  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 14056  0180C4  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 14057  0180C6  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 14058  0180C8                     l2388:
 14059                           
 14060                           ; BSR set to: 1
 14061  0180C8  0101               	movlb	1	; () banked
 14062  0180CA  0721               	decf	strncmp@len& (0+255),f,b
 14063  0180CC  A0D8               	btfss	status,0,c
 14064  0180CE  0722               	decf	(strncmp@len+1)& (0+255),f,b
 14065  0180D0  2921               	incf	strncmp@len& (0+255),w,b
 14066  0180D2  E1C1               	bnz	l19158
 14067  0180D4  2922               	incf	(strncmp@len+1)& (0+255),w,b
 14068  0180D6  A4D8               	btfss	status,2,c
 14069  0180D8  D7BE               	goto	l2389
 14070                           
 14071                           ; BSR set to: 1
 14072                           
 14073                           ; BSR set to: 1
 14074  0180DA  0E00               	movlw	0
 14075  0180DC  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 14076  0180DE  0E00               	movlw	0
 14077  0180E0  6F1D               	movwf	?_strncmp& (0+255),b
 14078  0180E2  0012               	return	
 14079  0180E4                     __end_of_strncmp:
 14080                           	opt stack 0
 14081                           tblptru	equ	0xFF8
 14082                           tblptrh	equ	0xFF7
 14083                           tblptrl	equ	0xFF6
 14084                           tablat	equ	0xFF5
 14085                           intcon	equ	0xFF2
 14086                           postinc0	equ	0xFEE
 14087                           wreg	equ	0xFE8
 14088                           indf1	equ	0xFE7
 14089                           postdec1	equ	0xFE5
 14090                           fsr1h	equ	0xFE2
 14091                           fsr1l	equ	0xFE1
 14092                           indf2	equ	0xFDF
 14093                           postinc2	equ	0xFDE
 14094                           fsr2h	equ	0xFDA
 14095                           fsr2l	equ	0xFD9
 14096                           status	equ	0xFD8
 14097                           
 14098 ;; *************** function _strlen *****************
 14099 ;; Defined at:
 14100 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 14101 ;; Parameters:    Size  Location     Type
 14102 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 14103 ;;		 -> STR_109(25), line(64), 
 14104 ;; Auto vars:     Size  Location     Type
 14105 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 14106 ;;		 -> STR_109(25), line(64), 
 14107 ;; Return value:  Size  Location     Type
 14108 ;;                  2   23[BANK1 ] unsigned int 
 14109 ;; Registers used:
 14110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 14111 ;; Tracked objects:
 14112 ;;		On entry : 0/0
 14113 ;;		On exit  : 0/0
 14114 ;;		Unchanged: 0/0
 14115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14116 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14117 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14118 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14119 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14120 ;;Total ram usage:        6 bytes
 14121 ;; Hardware stack levels used:    1
 14122 ;; Hardware stack levels required when called:   13
 14123 ;; This function calls:
 14124 ;;		Nothing
 14125 ;; This function is called by:
 14126 ;;		_terminal_ringBufferPull
 14127 ;;		_strstr
 14128 ;; This function uses a non-reentrant model
 14129 ;;
 14130                           
 14131                           	psect	text11
 14132  018826                     __ptext11:
 14133                           	opt stack 0
 14134  018826                     _strlen:
 14135                           	opt stack 16
 14136                           
 14137                           ; BSR set to: 1
 14138                           ;incstack = 0
 14139  018826  C117  F11B         	movff	strlen@s,strlen@cp
 14140  01882A  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 14141  01882E  D003               	goto	l2307
 14142  018830  0101               	movlb	1	; () banked
 14143  018832  4B1B               	infsnz	strlen@cp& (0+255),f,b
 14144  018834  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 14145  018836                     l2307:
 14146                           
 14147                           ; BSR set to: 1
 14148  018836  C11B  FFF6         	movff	strlen@cp,tblptrl
 14149  01883A  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 14150  01883E  0E00               	movlw	low (__mediumconst shr (0+16))
 14151  018840  6EF8               	movwf	tblptru,c
 14152  018842  0E0D               	movlw	(high __ramtop+-1)
 14153  018844  64F7               	cpfsgt	tblptrh,c
 14154  018846  D003               	bra	u25587
 14155  018848  0008               	tblrd		*
 14156  01884A  50F5               	movf	tablat,w,c
 14157  01884C  D005               	bra	u25580
 14158  01884E                     u25587:
 14159  01884E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14160  018852  CFF7 FFEA          	movff	tblptrh,fsr0h
 14161  018856  50EF               	movf	indf0,w,c
 14162  018858                     u25580:
 14163  018858  0900               	iorlw	0
 14164  01885A  A4D8               	btfss	status,2,c
 14165  01885C  D7E9               	goto	l2308
 14166  01885E  C117  F119         	movff	strlen@s,??_strlen
 14167  018862  C118  F11A         	movff	strlen@s+1,??_strlen+1
 14168  018866  0101               	movlb	1	; () banked
 14169  018868  1F19               	comf	??_strlen& (0+255),f,b
 14170  01886A  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 14171  01886C  4B19               	infsnz	??_strlen& (0+255),f,b
 14172  01886E  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 14173  018870  511B               	movf	strlen@cp& (0+255),w,b
 14174  018872  2519               	addwf	??_strlen& (0+255),w,b
 14175  018874  6F17               	movwf	?_strlen& (0+255),b
 14176  018876  511C               	movf	(strlen@cp+1)& (0+255),w,b
 14177  018878  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 14178  01887A  6F18               	movwf	(?_strlen+1)& (0+255),b
 14179  01887C  0012               	return	
 14180  01887E                     __end_of_strlen:
 14181                           	opt stack 0
 14182                           tblptru	equ	0xFF8
 14183                           tblptrh	equ	0xFF7
 14184                           tblptrl	equ	0xFF6
 14185                           tablat	equ	0xFF5
 14186                           intcon	equ	0xFF2
 14187                           indf0	equ	0xFEF
 14188                           postinc0	equ	0xFEE
 14189                           fsr0h	equ	0xFEA
 14190                           fsr0l	equ	0xFE9
 14191                           wreg	equ	0xFE8
 14192                           indf1	equ	0xFE7
 14193                           postdec1	equ	0xFE5
 14194                           fsr1h	equ	0xFE2
 14195                           fsr1l	equ	0xFE1
 14196                           indf2	equ	0xFDF
 14197                           postinc2	equ	0xFDE
 14198                           fsr2h	equ	0xFDA
 14199                           fsr2l	equ	0xFD9
 14200                           status	equ	0xFD8
 14201                           
 14202 ;; *************** function _strchr *****************
 14203 ;; Defined at:
 14204 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 14205 ;; Parameters:    Size  Location     Type
 14206 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 14207 ;;		 -> NULL(0), line(64), 
 14208 ;;  chr             2   25[BANK1 ] int 
 14209 ;; Auto vars:     Size  Location     Type
 14210 ;;		None
 14211 ;; Return value:  Size  Location     Type
 14212 ;;                  2   23[BANK1 ] PTR unsigned char 
 14213 ;; Registers used:
 14214 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14215 ;; Tracked objects:
 14216 ;;		On entry : 0/0
 14217 ;;		On exit  : 0/0
 14218 ;;		Unchanged: 0/0
 14219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14220 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14222 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14223 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14224 ;;Total ram usage:        5 bytes
 14225 ;; Hardware stack levels used:    1
 14226 ;; Hardware stack levels required when called:   13
 14227 ;; This function calls:
 14228 ;;		Nothing
 14229 ;; This function is called by:
 14230 ;;		_strstr
 14231 ;; This function uses a non-reentrant model
 14232 ;;
 14233                           
 14234                           	psect	text12
 14235  018D90                     __ptext12:
 14236                           	opt stack 0
 14237  018D90                     _strchr:
 14238                           	opt stack 14
 14239                           
 14240                           ; BSR set to: 1
 14241                           ;incstack = 0
 14242  018D90  C117  FFD9         	movff	strchr@ptr,fsr2l
 14243  018D94  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 14244  018D98  0101               	movlb	1	; () banked
 14245  018D9A  5119               	movf	strchr@chr& (0+255),w,b
 14246  018D9C  18DE               	xorwf	postinc2,w,c
 14247  018D9E  A4D8               	btfss	status,2,c
 14248  018DA0  D005               	goto	l2383
 14249                           
 14250                           ; BSR set to: 1
 14251  018DA2  C117  F117         	movff	strchr@ptr,?_strchr
 14252  018DA6  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 14253                           
 14254                           ; BSR set to: 1
 14255  018DAA  0012               	return	
 14256  018DAC                     l2383:
 14257                           
 14258                           ; BSR set to: 1
 14259                           
 14260                           ; BSR set to: 1
 14261  018DAC  C117  FFD9         	movff	strchr@ptr,fsr2l
 14262  018DB0  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 14263  018DB4  4B17               	infsnz	strchr@ptr& (0+255),f,b
 14264  018DB6  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 14265  018DB8  50DF               	movf	indf2,w,c
 14266  018DBA  A4D8               	btfss	status,2,c
 14267  018DBC  D7E9               	goto	_strchr
 14268                           
 14269                           ; BSR set to: 1
 14270                           
 14271                           ; BSR set to: 1
 14272  018DBE  0E00               	movlw	0
 14273  018DC0  6F17               	movwf	?_strchr& (0+255),b
 14274  018DC2  0E00               	movlw	0
 14275  018DC4  6F18               	movwf	(?_strchr+1)& (0+255),b
 14276  018DC6  0012               	return	
 14277  018DC8                     __end_of_strchr:
 14278                           	opt stack 0
 14279                           tblptru	equ	0xFF8
 14280                           tblptrh	equ	0xFF7
 14281                           tblptrl	equ	0xFF6
 14282                           tablat	equ	0xFF5
 14283                           intcon	equ	0xFF2
 14284                           indf0	equ	0xFEF
 14285                           postinc0	equ	0xFEE
 14286                           fsr0h	equ	0xFEA
 14287                           fsr0l	equ	0xFE9
 14288                           wreg	equ	0xFE8
 14289                           indf1	equ	0xFE7
 14290                           postdec1	equ	0xFE5
 14291                           fsr1h	equ	0xFE2
 14292                           fsr1l	equ	0xFE1
 14293                           indf2	equ	0xFDF
 14294                           postinc2	equ	0xFDE
 14295                           fsr2h	equ	0xFDA
 14296                           fsr2l	equ	0xFD9
 14297                           status	equ	0xFD8
 14298                           
 14299 ;; *************** function _strcpy *****************
 14300 ;; Defined at:
 14301 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 14302 ;; Parameters:    Size  Location     Type
 14303 ;;  to              2   23[BANK1 ] PTR unsigned char 
 14304 ;;		 -> ringBufferLUT@channel_name(22), 
 14305 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 14306 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 14307 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 14308 ;; Auto vars:     Size  Location     Type
 14309 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 14310 ;;		 -> ringBufferLUT@channel_name(22), 
 14311 ;; Return value:  Size  Location     Type
 14312 ;;                  2   23[BANK1 ] PTR unsigned char 
 14313 ;; Registers used:
 14314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14315 ;; Tracked objects:
 14316 ;;		On entry : 0/0
 14317 ;;		On exit  : 0/0
 14318 ;;		Unchanged: 0/0
 14319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14320 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14321 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14323 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14324 ;;Total ram usage:        6 bytes
 14325 ;; Hardware stack levels used:    1
 14326 ;; Hardware stack levels required when called:   13
 14327 ;; This function calls:
 14328 ;;		Nothing
 14329 ;; This function is called by:
 14330 ;;		_ringBufferLUT
 14331 ;; This function uses a non-reentrant model
 14332 ;;
 14333                           
 14334                           	psect	text13
 14335  018DC8                     __ptext13:
 14336                           	opt stack 0
 14337  018DC8                     _strcpy:
 14338                           	opt stack 15
 14339                           
 14340                           ; BSR set to: 1
 14341                           ;incstack = 0
 14342  018DC8  C117  F11B         	movff	strcpy@to,strcpy@cp
 14343  018DCC  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 14344  018DD0  D005               	goto	l2301
 14345  018DD2  0101               	movlb	1	; () banked
 14346  018DD4  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 14347  018DD6  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 14348  018DD8  4B19               	infsnz	strcpy@from& (0+255),f,b
 14349  018DDA  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 14350  018DDC                     l2301:
 14351                           
 14352                           ; BSR set to: 1
 14353  018DDC  C119  FFF6         	movff	strcpy@from,tblptrl
 14354  018DE0  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 14355  018DE4                     	if	0	;tblptru may be non-zero
 14356  018DE4                     	endif
 14357  018DE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14358  018DE4  0E00               	movlw	low (__mediumconst shr (0+16))
 14359  018DE6  6EF8               	movwf	tblptru,c
 14360  018DE8                     	endif
 14361  018DE8  C11B  FFD9         	movff	strcpy@cp,fsr2l
 14362  018DEC  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 14363  018DF0  0008               	tblrd		*
 14364  018DF2  CFF5 FFDF          	movff	tablat,indf2
 14365  018DF6  50DF               	movf	indf2,w,c
 14366  018DF8  B4D8               	btfsc	status,2,c
 14367  018DFA  0012               	return	
 14368  018DFC  D7EA               	goto	l2302
 14369  018DFE                     __end_of_strcpy:
 14370                           	opt stack 0
 14371                           tblptru	equ	0xFF8
 14372                           tblptrh	equ	0xFF7
 14373                           tblptrl	equ	0xFF6
 14374                           tablat	equ	0xFF5
 14375                           intcon	equ	0xFF2
 14376                           indf0	equ	0xFEF
 14377                           postinc0	equ	0xFEE
 14378                           fsr0h	equ	0xFEA
 14379                           fsr0l	equ	0xFE9
 14380                           wreg	equ	0xFE8
 14381                           indf1	equ	0xFE7
 14382                           postdec1	equ	0xFE5
 14383                           fsr1h	equ	0xFE2
 14384                           fsr1l	equ	0xFE1
 14385                           indf2	equ	0xFDF
 14386                           postinc2	equ	0xFDE
 14387                           fsr2h	equ	0xFDA
 14388                           fsr2l	equ	0xFD9
 14389                           status	equ	0xFD8
 14390                           
 14391 ;; *************** function _strcmp *****************
 14392 ;; Defined at:
 14393 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 14394 ;; Parameters:    Size  Location     Type
 14395 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 14396 ;;		 -> line(64), 
 14397 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 14398 ;;		 -> STR_142(5), STR_140(29), STR_138(34), STR_136(33), 
 14399 ;;		 -> STR_134(29), STR_132(17), STR_130(17), STR_128(14), 
 14400 ;;		 -> STR_126(19), STR_124(20), STR_122(11), STR_120(17), 
 14401 ;;		 -> STR_118(14), STR_116(16), STR_107(13), STR_103(17), 
 14402 ;;		 -> STR_100(14), STR_98(12), STR_96(16), STR_94(15), 
 14403 ;;		 -> STR_92(15), STR_90(21), STR_88(21), STR_86(26), 
 14404 ;;		 -> STR_84(14), STR_82(13), STR_80(18), STR_78(15), 
 14405 ;;		 -> STR_76(16), STR_73(17), STR_71(16), STR_60(11), 
 14406 ;;		 -> STR_57(10), STR_55(13), STR_53(11), STR_50(4), 
 14407 ;;		 -> STR_49(6), STR_47(16), STR_44(6), STR_41(6), 
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;  r               1   28[BANK1 ] char 
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  2   23[BANK1 ] int 
 14412 ;; Registers used:
 14413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14419 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14420 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14421 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14422 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14423 ;;Total ram usage:        6 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:   13
 14426 ;; This function calls:
 14427 ;;		Nothing
 14428 ;; This function is called by:
 14429 ;;		_ringBufferLUT
 14430 ;; This function uses a non-reentrant model
 14431 ;;
 14432                           
 14433                           	psect	text14
 14434  018922                     __ptext14:
 14435                           	opt stack 0
 14436  018922                     _strcmp:
 14437                           	opt stack 15
 14438                           
 14439                           ;incstack = 0
 14440  018922  D005               	goto	l2293
 14441  018924  0101               	movlb	1	; () banked
 14442  018926  4B17               	infsnz	strcmp@s1& (0+255),f,b
 14443  018928  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 14444  01892A  4B19               	infsnz	strcmp@s2& (0+255),f,b
 14445  01892C  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 14446  01892E                     l2293:
 14447                           
 14448                           ; BSR set to: 1
 14449  01892E  C117  FFD9         	movff	strcmp@s1,fsr2l
 14450  018932  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 14451  018936  50DF               	movf	indf2,w,c
 14452  018938  0101               	movlb	1	; () banked
 14453  01893A  6F1B               	movwf	??_strcmp& (0+255),b
 14454  01893C  C119  FFF6         	movff	strcmp@s2,tblptrl
 14455  018940  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 14456  018944                     	if	0	;tblptru may be non-zero
 14457  018944                     	endif
 14458  018944                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14459  018944  0E00               	movlw	low (__mediumconst shr (0+16))
 14460  018946  6EF8               	movwf	tblptru,c
 14461  018948                     	endif
 14462  018948  0008               	tblrd		*
 14463  01894A  50F5               	movf	tablat,w,c
 14464  01894C  0800               	sublw	0
 14465  01894E  251B               	addwf	??_strcmp& (0+255),w,b
 14466  018950  6F1C               	movwf	strcmp@r& (0+255),b
 14467  018952  511C               	movf	strcmp@r& (0+255),w,b
 14468  018954  A4D8               	btfss	status,2,c
 14469  018956  D007               	goto	u25700
 14470                           
 14471                           ; BSR set to: 1
 14472  018958  C117  FFD9         	movff	strcmp@s1,fsr2l
 14473  01895C  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 14474  018960  50DF               	movf	indf2,w,c
 14475  018962  A4D8               	btfss	status,2,c
 14476  018964  D7DF               	goto	l2294
 14477  018966                     u25700:
 14478                           
 14479                           ; BSR set to: 1
 14480                           
 14481                           ; BSR set to: 1
 14482                           
 14483                           ; BSR set to: 1
 14484  018966  511C               	movf	strcmp@r& (0+255),w,b
 14485  018968  6F17               	movwf	?_strcmp& (0+255),b
 14486  01896A  6B18               	clrf	(?_strcmp+1)& (0+255),b
 14487  01896C  BF17               	btfsc	?_strcmp& (0+255),7,b
 14488  01896E  0718               	decf	(?_strcmp+1)& (0+255),f,b
 14489  018970  0012               	return	
 14490  018972                     __end_of_strcmp:
 14491                           	opt stack 0
 14492                           tblptru	equ	0xFF8
 14493                           tblptrh	equ	0xFF7
 14494                           tblptrl	equ	0xFF6
 14495                           tablat	equ	0xFF5
 14496                           intcon	equ	0xFF2
 14497                           indf0	equ	0xFEF
 14498                           postinc0	equ	0xFEE
 14499                           fsr0h	equ	0xFEA
 14500                           fsr0l	equ	0xFE9
 14501                           wreg	equ	0xFE8
 14502                           indf1	equ	0xFE7
 14503                           postdec1	equ	0xFE5
 14504                           fsr1h	equ	0xFE2
 14505                           fsr1l	equ	0xFE1
 14506                           indf2	equ	0xFDF
 14507                           postinc2	equ	0xFDE
 14508                           fsr2h	equ	0xFDA
 14509                           fsr2l	equ	0xFD9
 14510                           status	equ	0xFD8
 14511                           
 14512 ;; *************** function _getUserID *****************
 14513 ;; Defined at:
 14514 ;;		line 65 in file "device_IDs.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;  inputUserID     1    wreg     unsigned char 
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;  inputUserID     1   36[BANK1 ] unsigned char 
 14519 ;;  initialOffse    4   37[BANK1 ] unsigned long 
 14520 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 14521 ;; Return value:  Size  Location     Type
 14522 ;;                  2   34[BANK1 ] unsigned int 
 14523 ;; Registers used:
 14524 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14525 ;; Tracked objects:
 14526 ;;		On entry : 0/0
 14527 ;;		On exit  : 0/0
 14528 ;;		Unchanged: 0/0
 14529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14530 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14531 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14533 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14534 ;;Total ram usage:        8 bytes
 14535 ;; Hardware stack levels used:    1
 14536 ;; Hardware stack levels required when called:   15
 14537 ;; This function calls:
 14538 ;;		_FLASH_ReadWord
 14539 ;; This function is called by:
 14540 ;;		_ringBufferLUT
 14541 ;; This function uses a non-reentrant model
 14542 ;;
 14543                           
 14544                           	psect	text15
 14545  018C14                     __ptext15:
 14546                           	opt stack 0
 14547  018C14                     _getUserID:
 14548                           	opt stack 13
 14549                           
 14550                           ; BSR set to: 1
 14551                           ;incstack = 0
 14552                           ;getUserID@inputUserID stored from wreg
 14553  018C14  0101               	movlb	1	; () banked
 14554  018C16  6F24               	movwf	getUserID@inputUserID& (0+255),b
 14555                           
 14556                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 14557  018C18  0E00               	movlw	0
 14558  018C1A  0101               	movlb	1	; () banked
 14559  018C1C  6F25               	movwf	getUserID@initialOffset& (0+255),b
 14560  018C1E  0E00               	movlw	0
 14561  018C20  6F26               	movwf	(getUserID@initialOffset+1)& (0+255),b
 14562  018C22  0E20               	movlw	32
 14563  018C24  6F27               	movwf	(getUserID@initialOffset+2)& (0+255),b
 14564  018C26  0E00               	movlw	0
 14565  018C28  6F28               	movwf	(getUserID@initialOffset+3)& (0+255),b
 14566                           
 14567                           ; BSR set to: 1
 14568                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 14569  018C2A  5124               	movf	getUserID@inputUserID& (0+255),w,b
 14570  018C2C  0D02               	mullw	2
 14571  018C2E  CFF3 F129          	movff	prodl,getUserID@IDOffset
 14572                           
 14573                           ; BSR set to: 1
 14574                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 14575  018C32  5129               	movf	getUserID@IDOffset& (0+255),w,b
 14576  018C34  2525               	addwf	getUserID@initialOffset& (0+255),w,b
 14577  018C36  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 14578  018C38  0E00               	movlw	0
 14579  018C3A  2126               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 14580  018C3C  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 14581  018C3E  0E00               	movlw	0
 14582  018C40  2127               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 14583  018C42  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 14584  018C44  0E00               	movlw	0
 14585  018C46  2128               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 14586  018C48  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 14587  018C4A  EC2C  F0C6         	call	_FLASH_ReadWord	;wreg free
 14588  018C4E  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 14589  018C52  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 14590  018C56  0012               	return	
 14591  018C58                     __end_of_getUserID:
 14592                           	opt stack 0
 14593                           tblptru	equ	0xFF8
 14594                           tblptrh	equ	0xFF7
 14595                           tblptrl	equ	0xFF6
 14596                           tablat	equ	0xFF5
 14597                           prodl	equ	0xFF3
 14598                           intcon	equ	0xFF2
 14599                           indf0	equ	0xFEF
 14600                           postinc0	equ	0xFEE
 14601                           fsr0h	equ	0xFEA
 14602                           fsr0l	equ	0xFE9
 14603                           wreg	equ	0xFE8
 14604                           indf1	equ	0xFE7
 14605                           postdec1	equ	0xFE5
 14606                           fsr1h	equ	0xFE2
 14607                           fsr1l	equ	0xFE1
 14608                           indf2	equ	0xFDF
 14609                           postinc2	equ	0xFDE
 14610                           fsr2h	equ	0xFDA
 14611                           fsr2l	equ	0xFD9
 14612                           status	equ	0xFD8
 14613                           
 14614 ;; *************** function _getMinorRevisionID *****************
 14615 ;; Defined at:
 14616 ;;		line 23 in file "device_IDs.c"
 14617 ;; Parameters:    Size  Location     Type
 14618 ;;		None
 14619 ;; Auto vars:     Size  Location     Type
 14620 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 14621 ;; Return value:  Size  Location     Type
 14622 ;;                  1    wreg      unsigned char 
 14623 ;; Registers used:
 14624 ;;		wreg, status,2, status,0, cstack
 14625 ;; Tracked objects:
 14626 ;;		On entry : 0/0
 14627 ;;		On exit  : 0/0
 14628 ;;		Unchanged: 0/0
 14629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14631 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14633 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14634 ;;Total ram usage:        2 bytes
 14635 ;; Hardware stack levels used:    1
 14636 ;; Hardware stack levels required when called:   15
 14637 ;; This function calls:
 14638 ;;		_FLASH_ReadWord
 14639 ;; This function is called by:
 14640 ;;		_ringBufferLUT
 14641 ;; This function uses a non-reentrant model
 14642 ;;
 14643                           
 14644                           	psect	text16
 14645  01902C                     __ptext16:
 14646                           	opt stack 0
 14647  01902C                     _getMinorRevisionID:
 14648                           	opt stack 13
 14649                           
 14650                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 14651                           
 14652                           ;incstack = 0
 14653  01902C  0EFC               	movlw	252
 14654  01902E  0101               	movlb	1	; () banked
 14655  019030  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 14656  019032  0EFF               	movlw	255
 14657  019034  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 14658  019036  0E3F               	movlw	63
 14659  019038  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 14660  01903A  0E00               	movlw	0
 14661  01903C  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 14662  01903E  EC2C  F0C6         	call	_FLASH_ReadWord	;wreg free
 14663  019042  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 14664  019046  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 14665                           
 14666                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 14667  01904A  0101               	movlb	1	; () banked
 14668  01904C  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 14669  01904E  0B1F               	andlw	31
 14670  019050  0012               	return	
 14671  019052                     __end_of_getMinorRevisionID:
 14672                           	opt stack 0
 14673                           tblptru	equ	0xFF8
 14674                           tblptrh	equ	0xFF7
 14675                           tblptrl	equ	0xFF6
 14676                           tablat	equ	0xFF5
 14677                           prodl	equ	0xFF3
 14678                           intcon	equ	0xFF2
 14679                           indf0	equ	0xFEF
 14680                           postinc0	equ	0xFEE
 14681                           fsr0h	equ	0xFEA
 14682                           fsr0l	equ	0xFE9
 14683                           wreg	equ	0xFE8
 14684                           indf1	equ	0xFE7
 14685                           postdec1	equ	0xFE5
 14686                           fsr1h	equ	0xFE2
 14687                           fsr1l	equ	0xFE1
 14688                           indf2	equ	0xFDF
 14689                           postinc2	equ	0xFDE
 14690                           fsr2h	equ	0xFDA
 14691                           fsr2l	equ	0xFD9
 14692                           status	equ	0xFD8
 14693                           
 14694 ;; *************** function _getMajorRevisionID *****************
 14695 ;; Defined at:
 14696 ;;		line 12 in file "device_IDs.c"
 14697 ;; Parameters:    Size  Location     Type
 14698 ;;		None
 14699 ;; Auto vars:     Size  Location     Type
 14700 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 14701 ;; Return value:  Size  Location     Type
 14702 ;;                  1    wreg      unsigned char 
 14703 ;; Registers used:
 14704 ;;		wreg, status,2, status,0, cstack
 14705 ;; Tracked objects:
 14706 ;;		On entry : 0/0
 14707 ;;		On exit  : 0/0
 14708 ;;		Unchanged: 0/0
 14709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14711 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14712 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14713 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14714 ;;Total ram usage:        5 bytes
 14715 ;; Hardware stack levels used:    1
 14716 ;; Hardware stack levels required when called:   15
 14717 ;; This function calls:
 14718 ;;		_FLASH_ReadWord
 14719 ;; This function is called by:
 14720 ;;		_ringBufferLUT
 14721 ;; This function uses a non-reentrant model
 14722 ;;
 14723                           
 14724                           	psect	text17
 14725  018D18                     __ptext17:
 14726                           	opt stack 0
 14727  018D18                     _getMajorRevisionID:
 14728                           	opt stack 13
 14729                           
 14730                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 14731                           
 14732                           ; BSR set to: 1
 14733                           ;incstack = 0
 14734  018D18  0EFC               	movlw	252
 14735  018D1A  0101               	movlb	1	; () banked
 14736  018D1C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 14737  018D1E  0EFF               	movlw	255
 14738  018D20  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 14739  018D22  0E3F               	movlw	63
 14740  018D24  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 14741  018D26  0E00               	movlw	0
 14742  018D28  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 14743  018D2A  EC2C  F0C6         	call	_FLASH_ReadWord	;wreg free
 14744  018D2E  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 14745  018D32  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 14746                           
 14747                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 14748  018D36  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 14749  018D3A  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 14750  018D3E  0E06               	movlw	6
 14751  018D40  0101               	movlb	1	; () banked
 14752  018D42  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 14753  018D44                     u25735:
 14754  018D44  90D8               	bcf	status,0,c
 14755  018D46  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 14756  018D48  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 14757  018D4A  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 14758  018D4C  D7FB               	goto	u25735
 14759  018D4E  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 14760  018D50  0B1F               	andlw	31
 14761  018D52  0012               	return	
 14762  018D54                     __end_of_getMajorRevisionID:
 14763                           	opt stack 0
 14764                           tblptru	equ	0xFF8
 14765                           tblptrh	equ	0xFF7
 14766                           tblptrl	equ	0xFF6
 14767                           tablat	equ	0xFF5
 14768                           prodl	equ	0xFF3
 14769                           intcon	equ	0xFF2
 14770                           indf0	equ	0xFEF
 14771                           postinc0	equ	0xFEE
 14772                           fsr0h	equ	0xFEA
 14773                           fsr0l	equ	0xFE9
 14774                           wreg	equ	0xFE8
 14775                           indf1	equ	0xFE7
 14776                           postdec1	equ	0xFE5
 14777                           fsr1h	equ	0xFE2
 14778                           fsr1l	equ	0xFE1
 14779                           indf2	equ	0xFDF
 14780                           postinc2	equ	0xFDE
 14781                           fsr2h	equ	0xFDA
 14782                           fsr2l	equ	0xFD9
 14783                           status	equ	0xFD8
 14784                           
 14785 ;; *************** function _getDeviceIDString *****************
 14786 ;; Defined at:
 14787 ;;		line 34 in file "device_IDs.c"
 14788 ;; Parameters:    Size  Location     Type
 14789 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 14792 ;;		 -> STR_151(10), STR_150(13), STR_149(12), 
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  2   36[BANK1 ] PTR inline unsigned char
 14795 ;; Registers used:
 14796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14802 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14803 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14804 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14805 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14806 ;;Total ram usage:       10 bytes
 14807 ;; Hardware stack levels used:    1
 14808 ;; Hardware stack levels required when called:   13
 14809 ;; This function calls:
 14810 ;;		Nothing
 14811 ;; This function is called by:
 14812 ;;		_ringBufferLUT
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text18
 14817  018766                     __ptext18:
 14818                           	opt stack 0
 14819  018766                     _getDeviceIDString:
 14820                           	opt stack 15
 14821                           
 14822                           ;device_IDs.c: 37: const char *strings[] = {
 14823                           ;device_IDs.c: 39: "PIC18F67K40",
 14824                           ;device_IDs.c: 40: "PIC18LF67K40",
 14825                           ;device_IDs.c: 41: "Undefined"
 14826                           ;device_IDs.c: 43: };
 14827                           
 14828                           ; BSR set to: 1
 14829                           ;incstack = 0
 14830  018766  EE22  F0E5         	lfsr	2,getDeviceIDString@F17550
 14831  01876A  EE11  F028         	lfsr	1,getDeviceIDString@strings
 14832  01876E  0E05               	movlw	5
 14833  018770                     u25721:
 14834  018770  CFDB FFE3          	movff	plusw2,plusw1
 14835  018774  06E8               	decf	wreg,f,c
 14836  018776  E2FC               	bc	u25721
 14837                           
 14838                           ;device_IDs.c: 47: switch (inputDevID) {
 14839  018778  D00F               	goto	l1367
 14840  01877A                     
 14841                           ;device_IDs.c: 50: return strings[0];
 14842  01877A  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 14843  01877E  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 14844                           
 14845                           ;device_IDs.c: 51: break;
 14846  018782  0012               	return	
 14847  018784                     
 14848                           ;device_IDs.c: 54: return strings[1];
 14849  018784  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 14850  018788  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 14851                           
 14852                           ;device_IDs.c: 55: break;
 14853  01878C  0012               	return	
 14854  01878E                     
 14855                           ;device_IDs.c: 58: return strings[2];
 14856  01878E  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 14857  018792  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 14858                           
 14859                           ;device_IDs.c: 61: }
 14860                           
 14861                           ;device_IDs.c: 59: break;
 14862  018796  0012               	return	
 14863  018798                     l1367:
 14864  018798  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 14865  01879C  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 14866                           
 14867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14868                           ; Switch size 1, requested type "space"
 14869                           ; Number of cases is 2, Range of values is 106 to 107
 14870                           ; switch strategies available:
 14871                           ; Name         Instructions Cycles
 14872                           ; simple_byte            7     4 (average)
 14873                           ;	Chosen strategy is simple_byte
 14874  0187A0  0101               	movlb	1	; () banked
 14875  0187A2  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 14876  0187A4  0A6A               	xorlw	106	; case 106
 14877  0187A6  B4D8               	btfsc	status,2,c
 14878  0187A8  D004               	goto	l20060
 14879  0187AA  0A01               	xorlw	1	; case 107
 14880  0187AC  B4D8               	btfsc	status,2,c
 14881  0187AE  D006               	goto	l20062
 14882  0187B0  D7EE               	goto	l1372
 14883  0187B2                     l20060:
 14884                           
 14885                           ; BSR set to: 1
 14886                           ; Switch size 1, requested type "space"
 14887                           ; Number of cases is 1, Range of values is 192 to 192
 14888                           ; switch strategies available:
 14889                           ; Name         Instructions Cycles
 14890                           ; simple_byte            4     3 (average)
 14891                           ;	Chosen strategy is simple_byte
 14892  0187B2  5126               	movf	??_getDeviceIDString& (0+255),w,b
 14893  0187B4  0AC0               	xorlw	192	; case 192
 14894  0187B6  B4D8               	btfsc	status,2,c
 14895  0187B8  D7E0               	goto	l1368
 14896  0187BA  D7E9               	goto	l1372
 14897  0187BC                     l20062:
 14898                           
 14899                           ; BSR set to: 1
 14900                           ; Switch size 1, requested type "space"
 14901                           ; Number of cases is 1, Range of values is 32 to 32
 14902                           ; switch strategies available:
 14903                           ; Name         Instructions Cycles
 14904                           ; simple_byte            4     3 (average)
 14905                           ;	Chosen strategy is simple_byte
 14906  0187BC  5126               	movf	??_getDeviceIDString& (0+255),w,b
 14907  0187BE  0A20               	xorlw	32	; case 32
 14908  0187C0  B4D8               	btfsc	status,2,c
 14909  0187C2  D7E0               	goto	l1371
 14910  0187C4  D7E4               	goto	l1372
 14911  0187C6                     __end_of_getDeviceIDString:
 14912                           	opt stack 0
 14913                           tblptru	equ	0xFF8
 14914                           tblptrh	equ	0xFF7
 14915                           tblptrl	equ	0xFF6
 14916                           tablat	equ	0xFF5
 14917                           prodl	equ	0xFF3
 14918                           intcon	equ	0xFF2
 14919                           indf0	equ	0xFEF
 14920                           postinc0	equ	0xFEE
 14921                           fsr0h	equ	0xFEA
 14922                           fsr0l	equ	0xFE9
 14923                           wreg	equ	0xFE8
 14924                           indf1	equ	0xFE7
 14925                           postdec1	equ	0xFE5
 14926                           plusw1	equ	0xFE3
 14927                           fsr1h	equ	0xFE2
 14928                           fsr1l	equ	0xFE1
 14929                           indf2	equ	0xFDF
 14930                           postinc2	equ	0xFDE
 14931                           plusw2	equ	0xFDB
 14932                           fsr2h	equ	0xFDA
 14933                           fsr2l	equ	0xFD9
 14934                           status	equ	0xFD8
 14935                           
 14936 ;; *************** function _getDeviceID *****************
 14937 ;; Defined at:
 14938 ;;		line 4 in file "device_IDs.c"
 14939 ;; Parameters:    Size  Location     Type
 14940 ;;		None
 14941 ;; Auto vars:     Size  Location     Type
 14942 ;;		None
 14943 ;; Return value:  Size  Location     Type
 14944 ;;                  2   34[BANK1 ] unsigned int 
 14945 ;; Registers used:
 14946 ;;		wreg, status,2, status,0, cstack
 14947 ;; Tracked objects:
 14948 ;;		On entry : 0/0
 14949 ;;		On exit  : 0/0
 14950 ;;		Unchanged: 0/0
 14951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14952 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14955 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14956 ;;Total ram usage:        2 bytes
 14957 ;; Hardware stack levels used:    1
 14958 ;; Hardware stack levels required when called:   15
 14959 ;; This function calls:
 14960 ;;		_FLASH_ReadWord
 14961 ;; This function is called by:
 14962 ;;		_ringBufferLUT
 14963 ;; This function uses a non-reentrant model
 14964 ;;
 14965                           
 14966                           	psect	text19
 14967  0190E4                     __ptext19:
 14968                           	opt stack 0
 14969  0190E4                     _getDeviceID:
 14970                           	opt stack 13
 14971                           
 14972                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 14973                           
 14974                           ;incstack = 0
 14975  0190E4  0EFE               	movlw	254
 14976  0190E6  0101               	movlb	1	; () banked
 14977  0190E8  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 14978  0190EA  0EFF               	movlw	255
 14979  0190EC  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 14980  0190EE  0E3F               	movlw	63
 14981  0190F0  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 14982  0190F2  0E00               	movlw	0
 14983  0190F4  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 14984  0190F6  EC2C  F0C6         	call	_FLASH_ReadWord	;wreg free
 14985  0190FA  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 14986  0190FE  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 14987  019102  0012               	return	
 14988  019104                     __end_of_getDeviceID:
 14989                           	opt stack 0
 14990                           tblptru	equ	0xFF8
 14991                           tblptrh	equ	0xFF7
 14992                           tblptrl	equ	0xFF6
 14993                           tablat	equ	0xFF5
 14994                           prodl	equ	0xFF3
 14995                           intcon	equ	0xFF2
 14996                           indf0	equ	0xFEF
 14997                           postinc0	equ	0xFEE
 14998                           fsr0h	equ	0xFEA
 14999                           fsr0l	equ	0xFE9
 15000                           wreg	equ	0xFE8
 15001                           indf1	equ	0xFE7
 15002                           postdec1	equ	0xFE5
 15003                           plusw1	equ	0xFE3
 15004                           fsr1h	equ	0xFE2
 15005                           fsr1l	equ	0xFE1
 15006                           indf2	equ	0xFDF
 15007                           postinc2	equ	0xFDE
 15008                           plusw2	equ	0xFDB
 15009                           fsr2h	equ	0xFDA
 15010                           fsr2l	equ	0xFD9
 15011                           status	equ	0xFD8
 15012                           
 15013 ;; *************** function _FLASH_ReadWord *****************
 15014 ;; Defined at:
 15015 ;;		line 71 in file "mcc_generated_files/memory.c"
 15016 ;; Parameters:    Size  Location     Type
 15017 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;		None
 15020 ;; Return value:  Size  Location     Type
 15021 ;;                  2   27[BANK1 ] unsigned int 
 15022 ;; Registers used:
 15023 ;;		wreg, status,2, status,0, cstack
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/0
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15029 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15031 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15032 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15033 ;;Total ram usage:        7 bytes
 15034 ;; Hardware stack levels used:    1
 15035 ;; Hardware stack levels required when called:   14
 15036 ;; This function calls:
 15037 ;;		_FLASH_ReadByte
 15038 ;; This function is called by:
 15039 ;;		_getDeviceID
 15040 ;;		_getMajorRevisionID
 15041 ;;		_getMinorRevisionID
 15042 ;;		_getUserID
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           	psect	text20
 15047  018C58                     __ptext20:
 15048                           	opt stack 0
 15049  018C58                     _FLASH_ReadWord:
 15050                           	opt stack 13
 15051                           
 15052                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 15053                           
 15054                           ;incstack = 0
 15055  018C58  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 15056  018C5C  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 15057  018C60  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 15058  018C64  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 15059  018C68  ECBB  F0C8         	call	_FLASH_ReadByte	;wreg free
 15060  018C6C  0101               	movlb	1	; () banked
 15061  018C6E  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 15062  018C70  0E01               	movlw	1
 15063  018C72  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 15064  018C74  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 15065  018C76  0E00               	movlw	0
 15066  018C78  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 15067  018C7A  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 15068  018C7C  0E00               	movlw	0
 15069  018C7E  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 15070  018C80  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 15071  018C82  0E00               	movlw	0
 15072  018C84  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 15073  018C86  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 15074  018C88  ECBB  F0C8         	call	_FLASH_ReadByte	;wreg free
 15075  018C8C  0101               	movlb	1	; () banked
 15076  018C8E  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 15077  018C90  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 15078  018C92  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 15079  018C94  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 15080  018C98  0012               	return	
 15081  018C9A                     __end_of_FLASH_ReadWord:
 15082                           	opt stack 0
 15083                           tblptru	equ	0xFF8
 15084                           tblptrh	equ	0xFF7
 15085                           tblptrl	equ	0xFF6
 15086                           tablat	equ	0xFF5
 15087                           prodl	equ	0xFF3
 15088                           intcon	equ	0xFF2
 15089                           indf0	equ	0xFEF
 15090                           postinc0	equ	0xFEE
 15091                           fsr0h	equ	0xFEA
 15092                           fsr0l	equ	0xFE9
 15093                           wreg	equ	0xFE8
 15094                           indf1	equ	0xFE7
 15095                           postdec1	equ	0xFE5
 15096                           plusw1	equ	0xFE3
 15097                           fsr1h	equ	0xFE2
 15098                           fsr1l	equ	0xFE1
 15099                           indf2	equ	0xFDF
 15100                           postinc2	equ	0xFDE
 15101                           plusw2	equ	0xFDB
 15102                           fsr2h	equ	0xFDA
 15103                           fsr2l	equ	0xFD9
 15104                           status	equ	0xFD8
 15105                           
 15106 ;; *************** function _FLASH_ReadByte *****************
 15107 ;; Defined at:
 15108 ;;		line 59 in file "mcc_generated_files/memory.c"
 15109 ;; Parameters:    Size  Location     Type
 15110 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 15111 ;; Auto vars:     Size  Location     Type
 15112 ;;		None
 15113 ;; Return value:  Size  Location     Type
 15114 ;;                  1    wreg      unsigned char 
 15115 ;; Registers used:
 15116 ;;		wreg, status,2
 15117 ;; Tracked objects:
 15118 ;;		On entry : 0/0
 15119 ;;		On exit  : 0/0
 15120 ;;		Unchanged: 0/0
 15121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15122 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15125 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15126 ;;Total ram usage:        4 bytes
 15127 ;; Hardware stack levels used:    1
 15128 ;; Hardware stack levels required when called:   13
 15129 ;; This function calls:
 15130 ;;		Nothing
 15131 ;; This function is called by:
 15132 ;;		_FLASH_ReadWord
 15133 ;;		_FLASH_WriteByte
 15134 ;; This function uses a non-reentrant model
 15135 ;;
 15136                           
 15137                           	psect	text21
 15138  019176                     __ptext21:
 15139                           	opt stack 0
 15140  019176                     _FLASH_ReadByte:
 15141                           	opt stack 13
 15142                           
 15143                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 15144                           
 15145                           ; BSR set to: 1
 15146                           ;incstack = 0
 15147  019176  5077               	movf	3959,w,c	;volsfr
 15148  019178  0B3F               	andlw	-193
 15149  01917A  0980               	iorlw	128
 15150  01917C  6E77               	movwf	3959,c	;volsfr
 15151                           
 15152                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 15153  01917E  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 15154                           
 15155                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 15156  019182  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 15157                           
 15158                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 15159  019186  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 15160  01918A  0008               	tblrd		*	;# 
 15161                           
 15162                           ;memory.c: 68: return (TABLAT);
 15163  01918C  50F5               	movf	tablat,w,c	;volatile
 15164  01918E  0012               	return	
 15165  019190                     __end_of_FLASH_ReadByte:
 15166                           	opt stack 0
 15167                           tblptru	equ	0xFF8
 15168                           tblptrh	equ	0xFF7
 15169                           tblptrl	equ	0xFF6
 15170                           tablat	equ	0xFF5
 15171                           prodl	equ	0xFF3
 15172                           intcon	equ	0xFF2
 15173                           indf0	equ	0xFEF
 15174                           postinc0	equ	0xFEE
 15175                           fsr0h	equ	0xFEA
 15176                           fsr0l	equ	0xFE9
 15177                           wreg	equ	0xFE8
 15178                           indf1	equ	0xFE7
 15179                           postdec1	equ	0xFE5
 15180                           plusw1	equ	0xFE3
 15181                           fsr1h	equ	0xFE2
 15182                           fsr1l	equ	0xFE1
 15183                           indf2	equ	0xFDF
 15184                           postinc2	equ	0xFDE
 15185                           plusw2	equ	0xFDB
 15186                           fsr2h	equ	0xFDA
 15187                           fsr2l	equ	0xFD9
 15188                           status	equ	0xFD8
 15189                           
 15190 ;; *************** function _getCauseOfResetString *****************
 15191 ;; Defined at:
 15192 ;;		line 81 in file "cause_of_reset.c"
 15193 ;; Parameters:    Size  Location     Type
 15194 ;;  r               1    wreg     enum E17455
 15195 ;; Auto vars:     Size  Location     Type
 15196 ;;  r               1   25[BANK1 ] enum E17455
 15197 ;; Return value:  Size  Location     Type
 15198 ;;                  2   23[BANK1 ] PTR inline unsigned char
 15199 ;; Registers used:
 15200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15201 ;; Tracked objects:
 15202 ;;		On entry : 0/0
 15203 ;;		On exit  : 0/0
 15204 ;;		Unchanged: 0/0
 15205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15206 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15207 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15209 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15210 ;;Total ram usage:        3 bytes
 15211 ;; Hardware stack levels used:    1
 15212 ;; Hardware stack levels required when called:   13
 15213 ;; This function calls:
 15214 ;;		Nothing
 15215 ;; This function is called by:
 15216 ;;		_ringBufferLUT
 15217 ;; This function uses a non-reentrant model
 15218 ;;
 15219                           
 15220                           	psect	text22
 15221  018ECE                     __ptext22:
 15222                           	opt stack 0
 15223  018ECE                     _getCauseOfResetString:
 15224                           	opt stack 15
 15225                           
 15226                           ;incstack = 0
 15227                           ;getCauseOfResetString@r stored from wreg
 15228  018ECE  0101               	movlb	1	; () banked
 15229  018ED0  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 15230                           
 15231                           ;cause_of_reset.c: 84: static char *strings[] = {
 15232                           ;cause_of_reset.c: 85: "Undefined Reset",
 15233                           ;cause_of_reset.c: 86: "Power On Reset",
 15234                           ;cause_of_reset.c: 87: "Brown Out Reset",
 15235                           ;cause_of_reset.c: 88: "Master Clear Reset",
 15236                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 15237                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 15238                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 15239                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 15240                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 15241                           ;cause_of_reset.c: 94: };
 15242  018ED2  0E09               	movlw	9
 15243  018ED4  0101               	movlb	1	; () banked
 15244  018ED6  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 15245  018ED8  D00D               	goto	l1399
 15246                           
 15247                           ; BSR set to: 1
 15248                           ;cause_of_reset.c: 99: return strings[r];
 15249  018EDA  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 15250  018EDC  0D02               	mullw	2
 15251  018EDE  0ED3               	movlw	low getCauseOfResetString@strings
 15252  018EE0  24F3               	addwf	prodl,w,c
 15253  018EE2  6ED9               	movwf	fsr2l,c
 15254  018EE4  0E02               	movlw	high getCauseOfResetString@strings
 15255  018EE6  20F4               	addwfc	prodh,w,c
 15256  018EE8  6EDA               	movwf	fsr2h,c
 15257  018EEA  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 15258  018EEE  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 15259                           
 15260                           ; BSR set to: 1
 15261                           ;cause_of_reset.c: 101: }
 15262                           
 15263                           ; BSR set to: 1
 15264  018EF2  0012               	return	
 15265  018EF4                     l1399:
 15266                           
 15267                           ; BSR set to: 1
 15268                           ;cause_of_reset.c: 103: else {
 15269                           ;cause_of_reset.c: 105: return "Undefined Reset";
 15270                           
 15271                           ; BSR set to: 1
 15272  018EF4  0EF7               	movlw	low STR_152
 15273  018EF6  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 15274  018EF8  0EFD               	movlw	high STR_152
 15275  018EFA  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 15276                           
 15277                           ; BSR set to: 1
 15278  018EFC  0012               	return	
 15279  018EFE                     __end_of_getCauseOfResetString:
 15280                           	opt stack 0
 15281                           tblptru	equ	0xFF8
 15282                           tblptrh	equ	0xFF7
 15283                           tblptrl	equ	0xFF6
 15284                           tablat	equ	0xFF5
 15285                           prodh	equ	0xFF4
 15286                           prodl	equ	0xFF3
 15287                           intcon	equ	0xFF2
 15288                           indf0	equ	0xFEF
 15289                           postinc0	equ	0xFEE
 15290                           fsr0h	equ	0xFEA
 15291                           fsr0l	equ	0xFE9
 15292                           wreg	equ	0xFE8
 15293                           indf1	equ	0xFE7
 15294                           postdec1	equ	0xFE5
 15295                           plusw1	equ	0xFE3
 15296                           fsr1h	equ	0xFE2
 15297                           fsr1l	equ	0xFE1
 15298                           indf2	equ	0xFDF
 15299                           postinc2	equ	0xFDE
 15300                           postdec2	equ	0xFDD
 15301                           plusw2	equ	0xFDB
 15302                           fsr2h	equ	0xFDA
 15303                           fsr2l	equ	0xFD9
 15304                           status	equ	0xFD8
 15305                           
 15306 ;; *************** function _atoi *****************
 15307 ;; Defined at:
 15308 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 15309 ;; Parameters:    Size  Location     Type
 15310 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 15311 ;;		 -> ringBufferLUT@arg_buff(3), 
 15312 ;; Auto vars:     Size  Location     Type
 15313 ;;  a               2   34[BANK1 ] int 
 15314 ;;  sign            1   33[BANK1 ] unsigned char 
 15315 ;; Return value:  Size  Location     Type
 15316 ;;                  2   29[BANK1 ] int 
 15317 ;; Registers used:
 15318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15319 ;; Tracked objects:
 15320 ;;		On entry : 0/0
 15321 ;;		On exit  : 0/0
 15322 ;;		Unchanged: 0/0
 15323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15324 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15325 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15326 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15327 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15328 ;;Total ram usage:        7 bytes
 15329 ;; Hardware stack levels used:    1
 15330 ;; Hardware stack levels required when called:   14
 15331 ;; This function calls:
 15332 ;;		___wmul
 15333 ;;		_isdigit
 15334 ;; This function is called by:
 15335 ;;		_ringBufferLUT
 15336 ;; This function uses a non-reentrant model
 15337 ;;
 15338                           
 15339                           	psect	text23
 15340  017C3E                     __ptext23:
 15341                           	opt stack 0
 15342  017C3E                     _atoi:
 15343                           	opt stack 14
 15344                           
 15345                           ; BSR set to: 1
 15346                           ;incstack = 0
 15347  017C3E  D003               	goto	l1795
 15348  017C40  0101               	movlb	1	; () banked
 15349  017C42  4B1D               	infsnz	atoi@s& (0+255),f,b
 15350  017C44  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 15351  017C46                     l1795:
 15352                           
 15353                           ; BSR set to: 1
 15354  017C46  C11D  FFD9         	movff	atoi@s,fsr2l
 15355  017C4A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 15356  017C4E  0E20               	movlw	32
 15357  017C50  18DE               	xorwf	postinc2,w,c
 15358  017C52  B4D8               	btfsc	status,2,c
 15359  017C54  D7F5               	goto	l1796
 15360  017C56  C11D  FFD9         	movff	atoi@s,fsr2l
 15361  017C5A  C11E  FFDA         	movff	atoi@s+1,fsr2h
 15362  017C5E  0E09               	movlw	9
 15363  017C60  18DE               	xorwf	postinc2,w,c
 15364  017C62  B4D8               	btfsc	status,2,c
 15365  017C64  D7ED               	goto	l1796
 15366  017C66  0E00               	movlw	0
 15367  017C68  0101               	movlb	1	; () banked
 15368  017C6A  6F23               	movwf	(atoi@a+1)& (0+255),b
 15369  017C6C  0E00               	movlw	0
 15370  017C6E  6F22               	movwf	atoi@a& (0+255),b
 15371  017C70  0E00               	movlw	0
 15372  017C72  6F21               	movwf	atoi@sign& (0+255),b
 15373                           
 15374                           ; BSR set to: 1
 15375  017C74  C11D  FFD9         	movff	atoi@s,fsr2l
 15376  017C78  C11E  FFDA         	movff	atoi@s+1,fsr2h
 15377  017C7C  0E2D               	movlw	45
 15378  017C7E  18DE               	xorwf	postinc2,w,c
 15379  017C80  A4D8               	btfss	status,2,c
 15380  017C82  D002               	goto	l1798
 15381                           
 15382                           ; BSR set to: 1
 15383  017C84  2B21               	incf	atoi@sign& (0+255),f,b
 15384  017C86  D026               	goto	l19342
 15385  017C88                     l1798:
 15386                           
 15387                           ; BSR set to: 1
 15388                           
 15389                           ; BSR set to: 1
 15390  017C88  C11D  FFD9         	movff	atoi@s,fsr2l
 15391  017C8C  C11E  FFDA         	movff	atoi@s+1,fsr2h
 15392  017C90  0E2B               	movlw	43
 15393  017C92  18DE               	xorwf	postinc2,w,c
 15394  017C94  A4D8               	btfss	status,2,c
 15395  017C96  D020               	goto	l1801
 15396  017C98  D01D               	goto	l19342
 15397  017C9A                     
 15398                           ; BSR set to: 1
 15399  017C9A  C122  F117         	movff	atoi@a,___wmul@multiplier
 15400  017C9E  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 15401  017CA2  0E00               	movlw	0
 15402  017CA4  0101               	movlb	1	; () banked
 15403  017CA6  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15404  017CA8  0E0A               	movlw	10
 15405  017CAA  6F19               	movwf	___wmul@multiplicand& (0+255),b
 15406  017CAC  ECDA  F0C7         	call	___wmul	;wreg free
 15407  017CB0  C11D  FFD9         	movff	atoi@s,fsr2l
 15408  017CB4  C11E  FFDA         	movff	atoi@s+1,fsr2h
 15409  017CB8  50DF               	movf	indf2,w,c
 15410  017CBA  0101               	movlb	1	; () banked
 15411  017CBC  6F1F               	movwf	??_atoi& (0+255),b
 15412  017CBE  6B20               	clrf	(??_atoi+1)& (0+255),b
 15413  017CC0  5117               	movf	?___wmul& (0+255),w,b
 15414  017CC2  271F               	addwf	??_atoi& (0+255),f,b
 15415  017CC4  5118               	movf	(?___wmul+1)& (0+255),w,b
 15416  017CC6  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 15417  017CC8  0ED0               	movlw	208
 15418  017CCA  251F               	addwf	??_atoi& (0+255),w,b
 15419  017CCC  6F22               	movwf	atoi@a& (0+255),b
 15420  017CCE  0EFF               	movlw	255
 15421  017CD0  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 15422  017CD2  6F23               	movwf	(atoi@a+1)& (0+255),b
 15423  017CD4                     l19342:
 15424                           
 15425                           ; BSR set to: 1
 15426  017CD4  4B1D               	infsnz	atoi@s& (0+255),f,b
 15427  017CD6  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 15428  017CD8                     l1801:
 15429                           
 15430                           ; BSR set to: 1
 15431                           
 15432                           ; BSR set to: 1
 15433  017CD8  C11D  FFD9         	movff	atoi@s,fsr2l
 15434  017CDC  C11E  FFDA         	movff	atoi@s+1,fsr2h
 15435  017CE0  50DF               	movf	indf2,w,c
 15436  017CE2  EC61  F0C8         	call	_isdigit
 15437  017CE6  B0D8               	btfsc	status,0,c
 15438  017CE8  D7D8               	goto	l1802
 15439  017CEA  0101               	movlb	1	; () banked
 15440  017CEC  5121               	movf	atoi@sign& (0+255),w,b
 15441  017CEE  B4D8               	btfsc	status,2,c
 15442  017CF0  D00D               	goto	l1804
 15443                           
 15444                           ; BSR set to: 1
 15445  017CF2  C122  F11F         	movff	atoi@a,??_atoi
 15446  017CF6  C123  F120         	movff	atoi@a+1,??_atoi+1
 15447  017CFA  1F1F               	comf	??_atoi& (0+255),f,b
 15448  017CFC  1F20               	comf	(??_atoi+1)& (0+255),f,b
 15449  017CFE  4B1F               	infsnz	??_atoi& (0+255),f,b
 15450  017D00  2B20               	incf	(??_atoi+1)& (0+255),f,b
 15451  017D02  C11F  F11D         	movff	??_atoi,?_atoi
 15452  017D06  C120  F11E         	movff	??_atoi+1,?_atoi+1
 15453  017D0A  0012               	return	
 15454  017D0C                     l1804:
 15455                           
 15456                           ; BSR set to: 1
 15457  017D0C  C122  F11D         	movff	atoi@a,?_atoi
 15458  017D10  C123  F11E         	movff	atoi@a+1,?_atoi+1
 15459                           
 15460                           ; BSR set to: 1
 15461  017D14  0012               	return		;funcret
 15462  017D16                     __end_of_atoi:
 15463                           	opt stack 0
 15464                           tblptru	equ	0xFF8
 15465                           tblptrh	equ	0xFF7
 15466                           tblptrl	equ	0xFF6
 15467                           tablat	equ	0xFF5
 15468                           prodh	equ	0xFF4
 15469                           prodl	equ	0xFF3
 15470                           intcon	equ	0xFF2
 15471                           indf0	equ	0xFEF
 15472                           postinc0	equ	0xFEE
 15473                           fsr0h	equ	0xFEA
 15474                           fsr0l	equ	0xFE9
 15475                           wreg	equ	0xFE8
 15476                           indf1	equ	0xFE7
 15477                           postdec1	equ	0xFE5
 15478                           plusw1	equ	0xFE3
 15479                           fsr1h	equ	0xFE2
 15480                           fsr1l	equ	0xFE1
 15481                           indf2	equ	0xFDF
 15482                           postinc2	equ	0xFDE
 15483                           postdec2	equ	0xFDD
 15484                           plusw2	equ	0xFDB
 15485                           fsr2h	equ	0xFDA
 15486                           fsr2l	equ	0xFD9
 15487                           status	equ	0xFD8
 15488                           
 15489 ;; *************** function ___fldiv *****************
 15490 ;; Defined at:
 15491 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 15492 ;; Parameters:    Size  Location     Type
 15493 ;;  b               4   61[BANK1 ] int 
 15494 ;;  a               4   65[BANK1 ] int 
 15495 ;; Auto vars:     Size  Location     Type
 15496 ;;  grs             4   80[BANK1 ] unsigned long 
 15497 ;;  rem             4   74[BANK1 ] unsigned long 
 15498 ;;  new_exp         2   78[BANK1 ] int 
 15499 ;;  aexp            1   85[BANK1 ] unsigned char 
 15500 ;;  bexp            1   84[BANK1 ] unsigned char 
 15501 ;;  sign            1   73[BANK1 ] unsigned char 
 15502 ;; Return value:  Size  Location     Type
 15503 ;;                  4   61[BANK1 ] unsigned char 
 15504 ;; Registers used:
 15505 ;;		wreg, status,2, status,0
 15506 ;; Tracked objects:
 15507 ;;		On entry : 0/0
 15508 ;;		On exit  : 0/0
 15509 ;;		Unchanged: 0/0
 15510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15511 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15512 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15513 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15514 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15515 ;;Total ram usage:       25 bytes
 15516 ;; Hardware stack levels used:    1
 15517 ;; Hardware stack levels required when called:   13
 15518 ;; This function calls:
 15519 ;;		Nothing
 15520 ;; This function is called by:
 15521 ;;		_ringBufferLUT
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525                           	psect	text24
 15526  015DA6                     __ptext24:
 15527                           	opt stack 0
 15528  015DA6                     ___fldiv:
 15529                           	opt stack 15
 15530                           
 15531                           ; BSR set to: 1
 15532                           ;incstack = 0
 15533  015DA6  0101               	movlb	1	; () banked
 15534  015DA8  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 15535  015DAA  0B80               	andlw	128
 15536  015DAC  6F49               	movwf	___fldiv@sign& (0+255),b
 15537  015DAE  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 15538  015DB0  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 15539  015DB2  6F54               	movwf	___fldiv@bexp& (0+255),b
 15540                           
 15541                           ; BSR set to: 1
 15542  015DB4  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 15543                           
 15544                           ; BSR set to: 1
 15545  015DB6  8154               	bsf	___fldiv@bexp& (0+255),0,b
 15546                           
 15547                           ; BSR set to: 1
 15548                           
 15549                           ; BSR set to: 1
 15550  015DB8  5154               	movf	___fldiv@bexp& (0+255),w,b
 15551  015DBA  B4D8               	btfsc	status,2,c
 15552  015DBC  D00D               	goto	l2202
 15553                           
 15554                           ; BSR set to: 1
 15555  015DBE  2954               	incf	___fldiv@bexp& (0+255),w,b
 15556  015DC0  A4D8               	btfss	status,2,c
 15557  015DC2  D008               	goto	l2203
 15558                           
 15559                           ; BSR set to: 1
 15560  015DC4  0E00               	movlw	0
 15561  015DC6  6F3D               	movwf	___fldiv@b& (0+255),b
 15562  015DC8  0E00               	movlw	0
 15563  015DCA  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 15564  015DCC  0E00               	movlw	0
 15565  015DCE  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 15566  015DD0  0E00               	movlw	0
 15567  015DD2  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 15568  015DD4                     l2203:
 15569                           
 15570                           ; BSR set to: 1
 15571                           
 15572                           ; BSR set to: 1
 15573  015DD4  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 15574  015DD6  D006               	goto	L1
 15575  015DD8                     l2202:
 15576                           
 15577                           ; BSR set to: 1
 15578                           
 15579                           ; BSR set to: 1
 15580  015DD8  0E00               	movlw	0
 15581  015DDA  6F3D               	movwf	___fldiv@b& (0+255),b
 15582  015DDC  0E00               	movlw	0
 15583  015DDE  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 15584  015DE0  0E00               	movlw	0
 15585  015DE2  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 15586  015DE4                     L1:
 15587  015DE4  0E00               	movlw	0
 15588  015DE6  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 15589                           
 15590                           ; BSR set to: 1
 15591                           
 15592                           ; BSR set to: 1
 15593  015DE8  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 15594  015DEA  0B80               	andlw	128
 15595  015DEC  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 15596                           
 15597                           ; BSR set to: 1
 15598  015DEE  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 15599  015DF0  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 15600  015DF2  6F55               	movwf	___fldiv@aexp& (0+255),b
 15601                           
 15602                           ; BSR set to: 1
 15603  015DF4  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 15604                           
 15605                           ; BSR set to: 1
 15606  015DF6  8155               	bsf	___fldiv@aexp& (0+255),0,b
 15607                           
 15608                           ; BSR set to: 1
 15609                           
 15610                           ; BSR set to: 1
 15611  015DF8  5155               	movf	___fldiv@aexp& (0+255),w,b
 15612  015DFA  B4D8               	btfsc	status,2,c
 15613  015DFC  D00D               	goto	l2206
 15614                           
 15615                           ; BSR set to: 1
 15616  015DFE  2955               	incf	___fldiv@aexp& (0+255),w,b
 15617  015E00  A4D8               	btfss	status,2,c
 15618  015E02  D008               	goto	l2207
 15619                           
 15620                           ; BSR set to: 1
 15621  015E04  0E00               	movlw	0
 15622  015E06  6F41               	movwf	___fldiv@a& (0+255),b
 15623  015E08  0E00               	movlw	0
 15624  015E0A  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 15625  015E0C  0E00               	movlw	0
 15626  015E0E  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 15627  015E10  0E00               	movlw	0
 15628  015E12  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 15629  015E14                     l2207:
 15630                           
 15631                           ; BSR set to: 1
 15632                           
 15633                           ; BSR set to: 1
 15634  015E14  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 15635  015E16  D006               	goto	L2
 15636  015E18                     l2206:
 15637                           
 15638                           ; BSR set to: 1
 15639                           
 15640                           ; BSR set to: 1
 15641  015E18  0E00               	movlw	0
 15642  015E1A  6F41               	movwf	___fldiv@a& (0+255),b
 15643  015E1C  0E00               	movlw	0
 15644  015E1E  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 15645  015E20  0E00               	movlw	0
 15646  015E22  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 15647  015E24                     L2:
 15648  015E24  0E00               	movlw	0
 15649  015E26  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 15650                           
 15651                           ; BSR set to: 1
 15652                           
 15653                           ; BSR set to: 1
 15654  015E28  5141               	movf	___fldiv@a& (0+255),w,b
 15655  015E2A  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15656  015E2C  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15657  015E2E  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15658  015E30  A4D8               	btfss	status,2,c
 15659  015E32  D015               	goto	l2209
 15660                           
 15661                           ; BSR set to: 1
 15662  015E34  0E00               	movlw	0
 15663  015E36  6F3D               	movwf	___fldiv@b& (0+255),b
 15664  015E38  0E00               	movlw	0
 15665  015E3A  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 15666  015E3C  0E00               	movlw	0
 15667  015E3E  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 15668  015E40  0E00               	movlw	0
 15669  015E42  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 15670                           
 15671                           ; BSR set to: 1
 15672  015E44  0E80               	movlw	128
 15673  015E46  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15674  015E48  0E7F               	movlw	127
 15675  015E4A  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15676                           
 15677                           ; BSR set to: 1
 15678  015E4C  C13D  F13D         	movff	___fldiv@b,?___fldiv
 15679  015E50  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 15680  015E54  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 15681  015E58  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 15682                           
 15683                           ; BSR set to: 1
 15684  015E5C  0012               	return	
 15685  015E5E                     l2209:
 15686                           
 15687                           ; BSR set to: 1
 15688                           
 15689                           ; BSR set to: 1
 15690  015E5E  5154               	movf	___fldiv@bexp& (0+255),w,b
 15691  015E60  A4D8               	btfss	status,2,c
 15692  015E62  D011               	goto	l2211
 15693                           
 15694                           ; BSR set to: 1
 15695  015E64  0E00               	movlw	0
 15696  015E66  6F3D               	movwf	___fldiv@b& (0+255),b
 15697  015E68  0E00               	movlw	0
 15698  015E6A  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 15699  015E6C  0E00               	movlw	0
 15700  015E6E  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 15701  015E70  0E00               	movlw	0
 15702  015E72  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 15703                           
 15704                           ; BSR set to: 1
 15705  015E74  C13D  F13D         	movff	___fldiv@b,?___fldiv
 15706  015E78  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 15707  015E7C  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 15708  015E80  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 15709                           
 15710                           ; BSR set to: 1
 15711  015E84  0012               	return	
 15712  015E86                     l2211:
 15713                           
 15714                           ; BSR set to: 1
 15715                           
 15716                           ; BSR set to: 1
 15717  015E86  5155               	movf	___fldiv@aexp& (0+255),w,b
 15718  015E88  6F45               	movwf	??___fldiv& (0+255),b
 15719  015E8A  6B46               	clrf	(??___fldiv+1)& (0+255),b
 15720  015E8C  1F45               	comf	??___fldiv& (0+255),f,b
 15721  015E8E  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 15722  015E90  4B45               	infsnz	??___fldiv& (0+255),f,b
 15723  015E92  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 15724  015E94  5154               	movf	___fldiv@bexp& (0+255),w,b
 15725  015E96  6F47               	movwf	(??___fldiv+2)& (0+255),b
 15726  015E98  6B48               	clrf	(??___fldiv+3)& (0+255),b
 15727  015E9A  5145               	movf	??___fldiv& (0+255),w,b
 15728  015E9C  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 15729  015E9E  5146               	movf	(??___fldiv+1)& (0+255),w,b
 15730  015EA0  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 15731  015EA2  0E7F               	movlw	127
 15732  015EA4  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 15733  015EA6  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 15734  015EA8  0E00               	movlw	0
 15735  015EAA  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 15736  015EAC  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15737                           
 15738                           ; BSR set to: 1
 15739  015EAE  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 15740  015EB2  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 15741  015EB6  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 15742  015EBA  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 15743                           
 15744                           ; BSR set to: 1
 15745  015EBE  0E00               	movlw	0
 15746  015EC0  6F3D               	movwf	___fldiv@b& (0+255),b
 15747  015EC2  0E00               	movlw	0
 15748  015EC4  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 15749  015EC6  0E00               	movlw	0
 15750  015EC8  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 15751  015ECA  0E00               	movlw	0
 15752  015ECC  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 15753                           
 15754                           ; BSR set to: 1
 15755  015ECE  0E00               	movlw	0
 15756  015ED0  6F50               	movwf	___fldiv@grs& (0+255),b
 15757  015ED2  0E00               	movlw	0
 15758  015ED4  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 15759  015ED6  0E00               	movlw	0
 15760  015ED8  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 15761  015EDA  0E00               	movlw	0
 15762  015EDC  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 15763                           
 15764                           ; BSR set to: 1
 15765  015EDE  0E00               	movlw	0
 15766  015EE0  6F55               	movwf	___fldiv@aexp& (0+255),b
 15767  015EE2  D028               	goto	l2212
 15768  015EE4                     
 15769                           ; BSR set to: 1
 15770                           
 15771                           ; BSR set to: 1
 15772  015EE4  5155               	movf	___fldiv@aexp& (0+255),w,b
 15773  015EE6  B4D8               	btfsc	status,2,c
 15774  015EE8  D011               	goto	l2214
 15775                           
 15776                           ; BSR set to: 1
 15777  015EEA  90D8               	bcf	status,0,c
 15778  015EEC  374A               	rlcf	___fldiv@rem& (0+255),f,b
 15779  015EEE  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15780  015EF0  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15781  015EF2  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15782  015EF4  90D8               	bcf	status,0,c
 15783  015EF6  373D               	rlcf	___fldiv@b& (0+255),f,b
 15784  015EF8  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15785  015EFA  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15786  015EFC  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15787                           
 15788                           ; BSR set to: 1
 15789  015EFE  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15790                           
 15791                           ; BSR set to: 1
 15792  015F00  813D               	bsf	___fldiv@b& (0+255),0,b
 15793                           
 15794                           ; BSR set to: 1
 15795  015F02  90D8               	bcf	status,0,c
 15796  015F04  3750               	rlcf	___fldiv@grs& (0+255),f,b
 15797  015F06  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15798  015F08  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15799  015F0A  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15800  015F0C                     l2214:
 15801                           
 15802                           ; BSR set to: 1
 15803                           
 15804                           ; BSR set to: 1
 15805  015F0C  5141               	movf	___fldiv@a& (0+255),w,b
 15806  015F0E  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 15807  015F10  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 15808  015F12  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15809  015F14  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 15810  015F16  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15811  015F18  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 15812  015F1A  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15813  015F1C  A0D8               	btfss	status,0,c
 15814  015F1E  D009               	goto	l2216
 15815                           
 15816                           ; BSR set to: 1
 15817  015F20  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15818                           
 15819                           ; BSR set to: 1
 15820  015F22  5141               	movf	___fldiv@a& (0+255),w,b
 15821  015F24  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 15822  015F26  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 15823  015F28  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15824  015F2A  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 15825  015F2C  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15826  015F2E  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 15827  015F30  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15828  015F32                     l2216:
 15829                           
 15830                           ; BSR set to: 1
 15831                           
 15832                           ; BSR set to: 1
 15833  015F32  2B55               	incf	___fldiv@aexp& (0+255),f,b
 15834  015F34                     l2212:
 15835                           
 15836                           ; BSR set to: 1
 15837  015F34  0E19               	movlw	25
 15838  015F36  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 15839  015F38  D7D5               	goto	l2213
 15840                           
 15841                           ; BSR set to: 1
 15842                           
 15843                           ; BSR set to: 1
 15844  015F3A  514A               	movf	___fldiv@rem& (0+255),w,b
 15845  015F3C  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15846  015F3E  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15847  015F40  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15848  015F42  B4D8               	btfsc	status,2,c
 15849  015F44  D011               	goto	l2219
 15850                           
 15851                           ; BSR set to: 1
 15852  015F46  8150               	bsf	___fldiv@grs& (0+255),0,b
 15853                           
 15854                           ; BSR set to: 1
 15855  015F48  D00F               	goto	l2219
 15856  015F4A                     
 15857                           ; BSR set to: 1
 15858                           
 15859                           ; BSR set to: 1
 15860  015F4A  90D8               	bcf	status,0,c
 15861  015F4C  373D               	rlcf	___fldiv@b& (0+255),f,b
 15862  015F4E  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15863  015F50  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15864  015F52  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15865                           
 15866                           ; BSR set to: 1
 15867  015F54  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 15868                           
 15869                           ; BSR set to: 1
 15870  015F56  813D               	bsf	___fldiv@b& (0+255),0,b
 15871                           
 15872                           ; BSR set to: 1
 15873  015F58  90D8               	bcf	status,0,c
 15874  015F5A  3750               	rlcf	___fldiv@grs& (0+255),f,b
 15875  015F5C  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15876  015F5E  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15877  015F60  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15878  015F62  074E               	decf	___fldiv@new_exp& (0+255),f,b
 15879  015F64  A0D8               	btfss	status,0,c
 15880  015F66  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15881  015F68                     l2219:
 15882                           
 15883                           ; BSR set to: 1
 15884                           
 15885                           ; BSR set to: 1
 15886  015F68  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 15887  015F6A  D7EF               	goto	l2220
 15888                           
 15889                           ; BSR set to: 1
 15890                           
 15891                           ; BSR set to: 1
 15892  015F6C  0E00               	movlw	0
 15893  015F6E  6F55               	movwf	___fldiv@aexp& (0+255),b
 15894                           
 15895                           ; BSR set to: 1
 15896  015F70  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15897  015F72  D016               	goto	l2226
 15898                           
 15899                           ; BSR set to: 1
 15900  015F74  0EFF               	movlw	255
 15901  015F76  1550               	andwf	___fldiv@grs& (0+255),w,b
 15902  015F78  6F45               	movwf	??___fldiv& (0+255),b
 15903  015F7A  0EFF               	movlw	255
 15904  015F7C  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15905  015F7E  6F46               	movwf	(??___fldiv+1)& (0+255),b
 15906  015F80  0EFF               	movlw	255
 15907  015F82  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15908  015F84  6F47               	movwf	(??___fldiv+2)& (0+255),b
 15909  015F86  0E7F               	movlw	127
 15910  015F88  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15911  015F8A  6F48               	movwf	(??___fldiv+3)& (0+255),b
 15912  015F8C  5145               	movf	??___fldiv& (0+255),w,b
 15913  015F8E  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 15914  015F90  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 15915  015F92  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 15916  015F94  A4D8               	btfss	status,2,c
 15917  015F96  D002               	goto	u26010
 15918                           
 15919                           ; BSR set to: 1
 15920                           
 15921                           ; BSR set to: 1
 15922  015F98  A13D               	btfss	___fldiv@b& (0+255),0,b
 15923  015F9A  D002               	goto	l2226
 15924  015F9C                     u26010:
 15925                           
 15926                           ; BSR set to: 1
 15927  015F9C  0E01               	movlw	1
 15928  015F9E  6F55               	movwf	___fldiv@aexp& (0+255),b
 15929  015FA0                     l2226:
 15930                           
 15931                           ; BSR set to: 1
 15932                           
 15933                           ; BSR set to: 1
 15934                           
 15935                           ; BSR set to: 1
 15936  015FA0  5155               	movf	___fldiv@aexp& (0+255),w,b
 15937  015FA2  B4D8               	btfsc	status,2,c
 15938  015FA4  D01F               	goto	l2228
 15939                           
 15940                           ; BSR set to: 1
 15941  015FA6  0E01               	movlw	1
 15942  015FA8  273D               	addwf	___fldiv@b& (0+255),f,b
 15943  015FAA  0E00               	movlw	0
 15944  015FAC  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 15945  015FAE  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 15946  015FB0  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 15947                           
 15948                           ; BSR set to: 1
 15949  015FB2  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 15950  015FB4  D017               	goto	l2228
 15951                           
 15952                           ; BSR set to: 1
 15953  015FB6  C13D  F145         	movff	___fldiv@b,??___fldiv
 15954  015FBA  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 15955  015FBE  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 15956  015FC2  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 15957  015FC6  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 15958  015FC8  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 15959  015FCA  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 15960  015FCC  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 15961  015FCE  3345               	rrcf	??___fldiv& (0+255),f,b
 15962  015FD0  C145  F13D         	movff	??___fldiv,___fldiv@b
 15963  015FD4  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 15964  015FD8  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 15965  015FDC  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 15966                           
 15967                           ; BSR set to: 1
 15968  015FE0  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 15969  015FE2  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 15970  015FE4                     l2228:
 15971                           
 15972                           ; BSR set to: 1
 15973                           
 15974                           ; BSR set to: 1
 15975                           
 15976                           ; BSR set to: 1
 15977  015FE4  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15978  015FE6  D010               	goto	l2229
 15979  015FE8  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15980  015FEA  E103               	bnz	u26040
 15981  015FEC  294E               	incf	___fldiv@new_exp& (0+255),w,b
 15982  015FEE  A0D8               	btfss	status,0,c
 15983  015FF0  D00B               	goto	l2229
 15984  015FF2                     u26040:
 15985                           
 15986                           ; BSR set to: 1
 15987  015FF2  0E00               	movlw	0
 15988  015FF4  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15989  015FF6  694E               	setf	___fldiv@new_exp& (0+255),b
 15990  015FF8  0E00               	movlw	0
 15991  015FFA  6F3D               	movwf	___fldiv@b& (0+255),b
 15992  015FFC  0E00               	movlw	0
 15993  015FFE  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 15994  016000  0E00               	movlw	0
 15995  016002  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 15996  016004  0E00               	movlw	0
 15997  016006  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 15998  016008                     l2229:
 15999                           
 16000                           ; BSR set to: 1
 16001                           
 16002                           ; BSR set to: 1
 16003  016008  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16004  01600A  D005               	goto	u26050
 16005  01600C  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16006  01600E  E111               	bnz	l19470
 16007  016010  054E               	decf	___fldiv@new_exp& (0+255),w,b
 16008  016012  B0D8               	btfsc	status,0,c
 16009  016014  D00E               	goto	l2230
 16010  016016                     u26050:
 16011                           
 16012                           ; BSR set to: 1
 16013  016016  0E00               	movlw	0
 16014  016018  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16015  01601A  0E00               	movlw	0
 16016  01601C  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 16017  01601E  0E00               	movlw	0
 16018  016020  6F3D               	movwf	___fldiv@b& (0+255),b
 16019  016022  0E00               	movlw	0
 16020  016024  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 16021  016026  0E00               	movlw	0
 16022  016028  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 16023  01602A  0E00               	movlw	0
 16024  01602C  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 16025  01602E  0E00               	movlw	0
 16026  016030  6F49               	movwf	___fldiv@sign& (0+255),b
 16027  016032                     l2230:
 16028  016032                     l19470:
 16029                           
 16030                           ; BSR set to: 1
 16031  016032  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 16032                           
 16033                           ; BSR set to: 1
 16034  016036  A154               	btfss	___fldiv@bexp& (0+255),0,b
 16035  016038  D002               	goto	l2231
 16036                           
 16037                           ; BSR set to: 1
 16038  01603A  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16039  01603C  D001               	goto	l2232
 16040  01603E                     l2231:
 16041                           
 16042                           ; BSR set to: 1
 16043                           
 16044                           ; BSR set to: 1
 16045  01603E  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 16046  016040                     l2232:
 16047                           
 16048                           ; BSR set to: 1
 16049                           
 16050                           ; BSR set to: 1
 16051  016040  90D8               	bcf	status,0,c
 16052  016042  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 16053  016044  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 16054                           
 16055                           ; BSR set to: 1
 16056  016046  5149               	movf	___fldiv@sign& (0+255),w,b
 16057  016048  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16058                           
 16059                           ; BSR set to: 1
 16060  01604A  C13D  F13D         	movff	___fldiv@b,?___fldiv
 16061  01604E  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 16062  016052  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 16063  016056  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 16064  01605A  0012               	return	
 16065  01605C                     __end_of___fldiv:
 16066                           	opt stack 0
 16067                           tblptru	equ	0xFF8
 16068                           tblptrh	equ	0xFF7
 16069                           tblptrl	equ	0xFF6
 16070                           tablat	equ	0xFF5
 16071                           prodh	equ	0xFF4
 16072                           prodl	equ	0xFF3
 16073                           intcon	equ	0xFF2
 16074                           indf0	equ	0xFEF
 16075                           postinc0	equ	0xFEE
 16076                           fsr0h	equ	0xFEA
 16077                           fsr0l	equ	0xFE9
 16078                           wreg	equ	0xFE8
 16079                           indf1	equ	0xFE7
 16080                           postdec1	equ	0xFE5
 16081                           plusw1	equ	0xFE3
 16082                           fsr1h	equ	0xFE2
 16083                           fsr1l	equ	0xFE1
 16084                           indf2	equ	0xFDF
 16085                           postinc2	equ	0xFDE
 16086                           postdec2	equ	0xFDD
 16087                           plusw2	equ	0xFDB
 16088                           fsr2h	equ	0xFDA
 16089                           fsr2l	equ	0xFD9
 16090                           status	equ	0xFD8
 16091                           
 16092 ;; *************** function _TMR7_StopTimer *****************
 16093 ;; Defined at:
 16094 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 16095 ;; Parameters:    Size  Location     Type
 16096 ;;		None
 16097 ;; Auto vars:     Size  Location     Type
 16098 ;;		None
 16099 ;; Return value:  Size  Location     Type
 16100 ;;                  1    wreg      void 
 16101 ;; Registers used:
 16102 ;;		None
 16103 ;; Tracked objects:
 16104 ;;		On entry : 0/0
 16105 ;;		On exit  : 0/0
 16106 ;;		Unchanged: 0/0
 16107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16112 ;;Total ram usage:        0 bytes
 16113 ;; Hardware stack levels used:    1
 16114 ;; Hardware stack levels required when called:   13
 16115 ;; This function calls:
 16116 ;;		Nothing
 16117 ;; This function is called by:
 16118 ;;		_ringBufferLUT
 16119 ;; This function uses a non-reentrant model
 16120 ;;
 16121                           
 16122                           	psect	text25
 16123  0192EE                     __ptext25:
 16124                           	opt stack 0
 16125  0192EE                     _TMR7_StopTimer:
 16126                           	opt stack 15
 16127                           
 16128                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 16129                           
 16130                           ; BSR set to: 1
 16131                           ;incstack = 0
 16132  0192EE  010F               	movlb	15	; () banked
 16133  0192F0  9130               	bcf	48,0,b	;volatile
 16134                           
 16135                           ; BSR set to: 15
 16136  0192F2  0012               	return		;funcret
 16137  0192F4                     __end_of_TMR7_StopTimer:
 16138                           	opt stack 0
 16139                           tblptru	equ	0xFF8
 16140                           tblptrh	equ	0xFF7
 16141                           tblptrl	equ	0xFF6
 16142                           tablat	equ	0xFF5
 16143                           prodh	equ	0xFF4
 16144                           prodl	equ	0xFF3
 16145                           intcon	equ	0xFF2
 16146                           indf0	equ	0xFEF
 16147                           postinc0	equ	0xFEE
 16148                           fsr0h	equ	0xFEA
 16149                           fsr0l	equ	0xFE9
 16150                           wreg	equ	0xFE8
 16151                           indf1	equ	0xFE7
 16152                           postdec1	equ	0xFE5
 16153                           plusw1	equ	0xFE3
 16154                           fsr1h	equ	0xFE2
 16155                           fsr1l	equ	0xFE1
 16156                           indf2	equ	0xFDF
 16157                           postinc2	equ	0xFDE
 16158                           postdec2	equ	0xFDD
 16159                           plusw2	equ	0xFDB
 16160                           fsr2h	equ	0xFDA
 16161                           fsr2l	equ	0xFD9
 16162                           status	equ	0xFD8
 16163                           
 16164 ;; *************** function _EUSART2_Read *****************
 16165 ;; Defined at:
 16166 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 16167 ;; Parameters:    Size  Location     Type
 16168 ;;		None
 16169 ;; Auto vars:     Size  Location     Type
 16170 ;;  readValue       1   23[BANK1 ] unsigned char 
 16171 ;; Return value:  Size  Location     Type
 16172 ;;                  1    wreg      unsigned char 
 16173 ;; Registers used:
 16174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16175 ;; Tracked objects:
 16176 ;;		On entry : 0/0
 16177 ;;		On exit  : 0/0
 16178 ;;		Unchanged: 0/0
 16179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16181 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16183 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16184 ;;Total ram usage:        1 bytes
 16185 ;; Hardware stack levels used:    1
 16186 ;; Hardware stack levels required when called:   13
 16187 ;; This function calls:
 16188 ;;		Nothing
 16189 ;; This function is called by:
 16190 ;;		_terminal_ringBufferPull
 16191 ;;		_getch
 16192 ;; This function uses a non-reentrant model
 16193 ;;
 16194                           
 16195                           	psect	text26
 16196  018B3C                     __ptext26:
 16197                           	opt stack 0
 16198  018B3C                     _EUSART2_Read:
 16199                           	opt stack 16
 16200                           
 16201                           ;eusart2.c: 139: uint8_t readValue = 0;
 16202                           
 16203                           ; BSR set to: 15
 16204                           ;incstack = 0
 16205  018B3C  0E00               	movlw	0
 16206  018B3E  0101               	movlb	1	; () banked
 16207  018B40  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 16208                           
 16209                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 16210  018B42  D002               	goto	l381
 16211  018B44                     l382:
 16212                           
 16213                           ; BSR set to: 1
 16214  018B44  0004               	clrwdt		;# 
 16215                           
 16216                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 16217  018B46  827E               	bsf	3966,1,c	;volatile
 16218  018B48                     l381:
 16219  018B48  0101               	movlb	1	; () banked
 16220  018B4A  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 16221  018B4C  B4D8               	btfsc	status,2,c
 16222  018B4E  D7FA               	goto	l382
 16223                           
 16224                           ; BSR set to: 1
 16225                           ;eusart2.c: 145: }
 16226                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 16227  018B50  927E               	bcf	3966,1,c	;volatile
 16228                           
 16229                           ; BSR set to: 1
 16230                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 16231  018B52  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 16232  018B54  0D01               	mullw	1
 16233  018B56  0E80               	movlw	low _eusart2RxBuffer
 16234  018B58  24F3               	addwf	prodl,w,c
 16235  018B5A  6ED9               	movwf	fsr2l,c
 16236  018B5C  0E03               	movlw	high _eusart2RxBuffer
 16237  018B5E  20F4               	addwfc	prodh,w,c
 16238  018B60  6EDA               	movwf	fsr2h,c
 16239  018B62  50DF               	movf	indf2,w,c
 16240  018B64  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 16241                           
 16242                           ; BSR set to: 1
 16243  018B66  2BE0               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 16244                           
 16245                           ; BSR set to: 1
 16246                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 16247  018B68  0E3F               	movlw	63
 16248  018B6A  65E0               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 16249  018B6C  D002               	goto	l384
 16250                           
 16251                           ; BSR set to: 1
 16252                           ;eusart2.c: 151: {
 16253                           ;eusart2.c: 152: eusart2RxTail = 0;
 16254  018B6E  0E00               	movlw	0
 16255  018B70  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 16256  018B72                     l384:
 16257                           
 16258                           ; BSR set to: 1
 16259                           ;eusart2.c: 153: }
 16260                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 16261                           
 16262                           ; BSR set to: 1
 16263  018B72  010E               	movlb	14	; () banked
 16264  018B74  9F2C               	bcf	44,7,b	;volatile
 16265                           
 16266                           ; BSR set to: 14
 16267                           ;eusart2.c: 155: eusart2RxCount--;
 16268  018B76  0101               	movlb	1	; () banked
 16269  018B78  07DF               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 16270                           
 16271                           ; BSR set to: 1
 16272                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 16273  018B7A  010E               	movlb	14	; () banked
 16274  018B7C  8F2C               	bsf	44,7,b	;volatile
 16275                           
 16276                           ; BSR set to: 14
 16277                           ;eusart2.c: 158: return readValue;
 16278  018B7E  0101               	movlb	1	; () banked
 16279  018B80  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 16280  018B82  0012               	return	
 16281  018B84                     __end_of_EUSART2_Read:
 16282                           	opt stack 0
 16283                           tblptru	equ	0xFF8
 16284                           tblptrh	equ	0xFF7
 16285                           tblptrl	equ	0xFF6
 16286                           tablat	equ	0xFF5
 16287                           prodh	equ	0xFF4
 16288                           prodl	equ	0xFF3
 16289                           intcon	equ	0xFF2
 16290                           indf0	equ	0xFEF
 16291                           postinc0	equ	0xFEE
 16292                           fsr0h	equ	0xFEA
 16293                           fsr0l	equ	0xFE9
 16294                           wreg	equ	0xFE8
 16295                           indf1	equ	0xFE7
 16296                           postdec1	equ	0xFE5
 16297                           plusw1	equ	0xFE3
 16298                           fsr1h	equ	0xFE2
 16299                           fsr1l	equ	0xFE1
 16300                           indf2	equ	0xFDF
 16301                           postinc2	equ	0xFDE
 16302                           postdec2	equ	0xFDD
 16303                           plusw2	equ	0xFDB
 16304                           fsr2h	equ	0xFDA
 16305                           fsr2l	equ	0xFD9
 16306                           status	equ	0xFD8
 16307                           
 16308 ;; *************** function _terminal_clearTerminal *****************
 16309 ;; Defined at:
 16310 ;;		line 80 in file "ring_buffer_interface.c"
 16311 ;; Parameters:    Size  Location     Type
 16312 ;;		None
 16313 ;; Auto vars:     Size  Location     Type
 16314 ;;		None
 16315 ;; Return value:  Size  Location     Type
 16316 ;;                  1    wreg      void 
 16317 ;; Registers used:
 16318 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16319 ;; Tracked objects:
 16320 ;;		On entry : 0/0
 16321 ;;		On exit  : 0/0
 16322 ;;		Unchanged: 0/0
 16323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16328 ;;Total ram usage:        0 bytes
 16329 ;; Hardware stack levels used:    1
 16330 ;; Hardware stack levels required when called:   16
 16331 ;; This function calls:
 16332 ;;		_printf
 16333 ;; This function is called by:
 16334 ;;		_main
 16335 ;; This function uses a non-reentrant model
 16336 ;;
 16337                           
 16338                           	psect	text27
 16339  01922A                     __ptext27:
 16340                           	opt stack 0
 16341  01922A                     _terminal_clearTerminal:
 16342                           	opt stack 14
 16343                           
 16344                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 16345                           
 16346                           ; BSR set to: 1
 16347                           ;incstack = 0
 16348  01922A  0EB0               	movlw	low STR_2
 16349  01922C  0101               	movlb	1	; () banked
 16350  01922E  6F82               	movwf	printf@f& (0+255),b
 16351  019230  0EFF               	movlw	high STR_2
 16352  019232  6F83               	movwf	(printf@f+1)& (0+255),b
 16353  019234  EC7F  F089         	call	_printf	;wreg free
 16354  019238  0012               	return		;funcret
 16355  01923A                     __end_of_terminal_clearTerminal:
 16356                           	opt stack 0
 16357                           tblptru	equ	0xFF8
 16358                           tblptrh	equ	0xFF7
 16359                           tblptrl	equ	0xFF6
 16360                           tablat	equ	0xFF5
 16361                           prodh	equ	0xFF4
 16362                           prodl	equ	0xFF3
 16363                           intcon	equ	0xFF2
 16364                           indf0	equ	0xFEF
 16365                           postinc0	equ	0xFEE
 16366                           fsr0h	equ	0xFEA
 16367                           fsr0l	equ	0xFE9
 16368                           wreg	equ	0xFE8
 16369                           indf1	equ	0xFE7
 16370                           postdec1	equ	0xFE5
 16371                           plusw1	equ	0xFE3
 16372                           fsr1h	equ	0xFE2
 16373                           fsr1l	equ	0xFE1
 16374                           indf2	equ	0xFDF
 16375                           postinc2	equ	0xFDE
 16376                           postdec2	equ	0xFDD
 16377                           plusw2	equ	0xFDB
 16378                           fsr2h	equ	0xFDA
 16379                           fsr2l	equ	0xFD9
 16380                           status	equ	0xFD8
 16381                           
 16382 ;; *************** function _printf *****************
 16383 ;; Defined at:
 16384 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 16385 ;; Parameters:    Size  Location     Type
 16386 ;;  f               2  130[BANK1 ] PTR const unsigned char 
 16387 ;;		 -> STR_148(30), STR_147(46), STR_146(39), STR_145(62), 
 16388 ;;		 -> STR_144(55), STR_143(433), STR_141(492), STR_139(605), 
 16389 ;;		 -> STR_137(720), STR_135(922), STR_133(33), STR_131(52), 
 16390 ;;		 -> STR_129(45), STR_127(51), STR_125(52), STR_123(46), 
 16391 ;;		 -> STR_121(51), STR_119(53), STR_117(58), STR_115(71), 
 16392 ;;		 -> STR_114(63), STR_113(37), STR_112(46), STR_111(102), 
 16393 ;;		 -> STR_110(86), STR_108(25), STR_106(42), STR_105(53), 
 16394 ;;		 -> STR_104(31), STR_102(29), STR_101(28), STR_99(42), 
 16395 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 16396 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(58), 
 16397 ;;		 -> STR_81(36), STR_79(36), STR_77(37), STR_75(45), 
 16398 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 16399 ;;		 -> STR_59(54), STR_58(64), STR_56(59), STR_54(85), 
 16400 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 16401 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 16402 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 16403 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 16404 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 16405 ;; Auto vars:     Size  Location     Type
 16406 ;;  idx             1  150[BANK1 ] unsigned char 
 16407 ;;  val             4  167[BANK1 ] unsigned long 
 16408 ;;  fval            4  163[BANK1 ] unsigned long 
 16409 ;;  tmpval          4  157[BANK1 ] struct .
 16410 ;;  prec            2  175[BANK1 ] int 
 16411 ;;  width           2  173[BANK1 ] int 
 16412 ;;  flag            2  171[BANK1 ] unsigned short 
 16413 ;;  exp             2  161[BANK1 ] int 
 16414 ;;  ap              2  155[BANK1 ] PTR void [1]
 16415 ;;		 -> ?i2_printf(2), ?_printf(2), 
 16416 ;;  len             2  153[BANK1 ] unsigned int 
 16417 ;;  cp              2  151[BANK1 ] PTR const unsigned char 
 16418 ;;		 -> STR_162(7), printf@c(1), STR_161(16), STR_160(22), 
 16419 ;;		 -> STR_159(21), STR_158(27), STR_157(41), STR_156(32), 
 16420 ;;		 -> STR_155(19), STR_154(16), STR_153(15), STR_152(16), 
 16421 ;;		 -> STR_151(10), STR_150(13), STR_149(12), ringBufferLUT@channel_name(22), 
 16422 ;;		 -> TRIAC_Firing_Angle(4), 
 16423 ;;  c               1  177[BANK1 ] char 
 16424 ;;  d               1    0        unsigned char 
 16425 ;; Return value:  Size  Location     Type
 16426 ;;                  2  130[BANK1 ] int 
 16427 ;; Registers used:
 16428 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16429 ;; Tracked objects:
 16430 ;;		On entry : 0/0
 16431 ;;		On exit  : 0/0
 16432 ;;		Unchanged: 0/0
 16433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16434 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16435 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16436 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16437 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16438 ;;Total ram usage:       48 bytes
 16439 ;; Hardware stack levels used:    1
 16440 ;; Hardware stack levels required when called:   15
 16441 ;; This function calls:
 16442 ;;		___awdiv
 16443 ;;		___fladd
 16444 ;;		___flge
 16445 ;;		___flmul
 16446 ;;		___flneg
 16447 ;;		___flsub
 16448 ;;		___fltol
 16449 ;;		___lldiv
 16450 ;;		___llmod
 16451 ;;		___wmul
 16452 ;;		___xxtofl
 16453 ;;		__div_to_l_
 16454 ;;		__tdiv_to_l_
 16455 ;;		_fround
 16456 ;;		_isdigit
 16457 ;;		_putch
 16458 ;;		_scale
 16459 ;; This function is called by:
 16460 ;;		_terminal_clearTerminal
 16461 ;;		_terminal_setCursorHome
 16462 ;;		_terminal_textAttributes
 16463 ;;		_terminal_printNewline
 16464 ;;		_ringBufferLUT
 16465 ;;		_terminal_printResetMessage
 16466 ;;		_terminal_clearLine
 16467 ;;		_terminal_saveCursor
 16468 ;;		_terminal_returnCursor
 16469 ;; This function uses a non-reentrant model
 16470 ;;
 16471                           
 16472                           	psect	text28
 16473  0112FE                     __ptext28:
 16474                           	opt stack 0
 16475  0112FE                     _printf:
 16476                           	opt stack 13
 16477                           
 16478                           ;doprnt.c: 466: va_list ap;
 16479                           ;doprnt.c: 499: signed char c;
 16480                           ;doprnt.c: 501: int width;
 16481                           ;doprnt.c: 504: int prec;
 16482                           ;doprnt.c: 508: unsigned short flag;
 16483                           ;doprnt.c: 515: char d;
 16484                           ;doprnt.c: 516: double fval;
 16485                           ;doprnt.c: 517: int exp;
 16486                           ;doprnt.c: 523: union {
 16487                           ;doprnt.c: 524: unsigned long vd;
 16488                           ;doprnt.c: 525: double integ;
 16489                           ;doprnt.c: 526: } tmpval;
 16490                           ;doprnt.c: 528: unsigned long val;
 16491                           ;doprnt.c: 529: unsigned len;
 16492                           ;doprnt.c: 530: const char * cp;
 16493                           ;doprnt.c: 533: *ap = __va_start();
 16494                           
 16495                           ;incstack = 0
 16496  0112FE  0E84               	movlw	low (?_printf+2)
 16497  011300  0101               	movlb	1	; () banked
 16498  011302  6F9B               	movwf	printf@ap& (0+255),b
 16499  011304  0E01               	movlw	high (?_printf+2)
 16500  011306  6F9C               	movwf	(printf@ap+1)& (0+255),b
 16501                           
 16502                           ;doprnt.c: 536: while(c = *f++) {
 16503  011308  EF47  F090         	goto	u25480
 16504  01130C                     
 16505                           ; BSR set to: 1
 16506                           ;doprnt.c: 538: if(c != '%')
 16507                           
 16508                           ; BSR set to: 1
 16509  01130C  0E25               	movlw	37
 16510  01130E  19B1               	xorwf	printf@c& (0+255),w,b
 16511  011310  B4D8               	btfsc	status,2,c
 16512  011312  D005               	goto	l1456
 16513                           
 16514                           ; BSR set to: 1
 16515                           ;doprnt.c: 540: {
 16516                           ;doprnt.c: 541: (putch(c) );
 16517  011314  51B1               	movf	printf@c& (0+255),w,b
 16518  011316  EC25  F0C9         	call	_putch
 16519                           
 16520                           ;doprnt.c: 542: continue;
 16521  01131A  EF47  F090         	goto	u25480
 16522  01131E                     l1456:
 16523                           
 16524                           ;doprnt.c: 543: }
 16525                           ;doprnt.c: 546: width = 0;
 16526  01131E  0E00               	movlw	0
 16527  011320  0101               	movlb	1	; () banked
 16528  011322  6FAE               	movwf	(printf@width+1)& (0+255),b
 16529  011324  0E00               	movlw	0
 16530  011326  6FAD               	movwf	printf@width& (0+255),b
 16531                           
 16532                           ;doprnt.c: 548: flag = 0;
 16533  011328  0E00               	movlw	0
 16534  01132A  6FAC               	movwf	(printf@flag+1)& (0+255),b
 16535  01132C  0E00               	movlw	0
 16536  01132E  6FAB               	movwf	printf@flag& (0+255),b
 16537                           
 16538                           ; BSR set to: 1
 16539                           ;doprnt.c: 551: switch(*f) {
 16540                           
 16541                           ;doprnt.c: 550: for(;;) {
 16542  011330  D004               	goto	l1458
 16543  011332                     
 16544                           ;doprnt.c: 580: flag |= 0x04;
 16545                           
 16546                           ; BSR set to: 1
 16547  011332  0101               	movlb	1	; () banked
 16548  011334  85AB               	bsf	printf@flag& (0+255),2,b
 16549                           
 16550                           ;doprnt.c: 581: f++;
 16551  011336  4B82               	infsnz	printf@f& (0+255),f,b
 16552  011338  2B83               	incf	(printf@f+1)& (0+255),f,b
 16553  01133A                     l1458:
 16554                           
 16555                           ; BSR set to: 1
 16556  01133A  C182  FFF6         	movff	printf@f,tblptrl
 16557  01133E  C183  FFF7         	movff	printf@f+1,tblptrh
 16558  011342  0E00               	movlw	low (__mediumconst shr (0+16))
 16559  011344  6EF8               	movwf	tblptru,c
 16560  011346  0E0D               	movlw	(high __ramtop+-1)
 16561  011348  64F7               	cpfsgt	tblptrh,c
 16562  01134A  D003               	bra	u24747
 16563  01134C  0008               	tblrd		*
 16564  01134E  50F5               	movf	tablat,w,c
 16565  011350  D005               	bra	u24740
 16566  011352                     u24747:
 16567  011352  CFF6 FFE9          	movff	tblptrl,fsr0l
 16568  011356  CFF7 FFEA          	movff	tblptrh,fsr0h
 16569  01135A  50EF               	movf	indf0,w,c
 16570  01135C                     u24740:
 16571                           
 16572                           ; Switch size 1, requested type "space"
 16573                           ; Number of cases is 1, Range of values is 48 to 48
 16574                           ; switch strategies available:
 16575                           ; Name         Instructions Cycles
 16576                           ; simple_byte            4     3 (average)
 16577                           ;	Chosen strategy is simple_byte
 16578  01135C  0A30               	xorlw	48	; case 48
 16579  01135E  B4D8               	btfsc	status,2,c
 16580  011360  D7E8               	goto	l1459
 16581                           
 16582                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 16583                           
 16584                           ;doprnt.c: 586: }
 16585                           
 16586                           ;doprnt.c: 585: break;
 16587  011362  C182  FFF6         	movff	printf@f,tblptrl
 16588  011366  C183  FFF7         	movff	printf@f+1,tblptrh
 16589  01136A  0E00               	movlw	low (__mediumconst shr (0+16))
 16590  01136C  6EF8               	movwf	tblptru,c
 16591  01136E  0E0D               	movlw	(high __ramtop+-1)
 16592  011370  64F7               	cpfsgt	tblptrh,c
 16593  011372  D003               	bra	u24757
 16594  011374  0008               	tblrd		*
 16595  011376  50F5               	movf	tablat,w,c
 16596  011378  D005               	bra	u24750
 16597  01137A                     u24757:
 16598  01137A  CFF6 FFE9          	movff	tblptrl,fsr0l
 16599  01137E  CFF7 FFEA          	movff	tblptrh,fsr0h
 16600  011382  50EF               	movf	indf0,w,c
 16601  011384                     u24750:
 16602  011384  EC61  F0C8         	call	_isdigit
 16603  011388  A0D8               	btfss	status,0,c
 16604  01138A  D04C               	goto	u24790
 16605                           
 16606                           ;doprnt.c: 598: width = 0;
 16607  01138C  0E00               	movlw	0
 16608  01138E  0101               	movlb	1	; () banked
 16609  011390  6FAE               	movwf	(printf@width+1)& (0+255),b
 16610  011392  0E00               	movlw	0
 16611  011394  6FAD               	movwf	printf@width& (0+255),b
 16612  011396                     
 16613                           ;doprnt.c: 600: width *= 10;
 16614                           
 16615                           ; BSR set to: 1
 16616  011396  C1AD  F117         	movff	printf@width,___wmul@multiplier
 16617  01139A  C1AE  F118         	movff	printf@width+1,___wmul@multiplier+1
 16618  01139E  0E00               	movlw	0
 16619  0113A0  0101               	movlb	1	; () banked
 16620  0113A2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16621  0113A4  0E0A               	movlw	10
 16622  0113A6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 16623  0113A8  ECDA  F0C7         	call	___wmul	;wreg free
 16624  0113AC  C117  F1AD         	movff	?___wmul,printf@width
 16625  0113B0  C118  F1AE         	movff	?___wmul+1,printf@width+1
 16626                           
 16627                           ;doprnt.c: 601: width += *f++ - '0';
 16628  0113B4  0ED0               	movlw	208
 16629  0113B6  0101               	movlb	1	; () banked
 16630  0113B8  6F8C               	movwf	??_printf& (0+255),b
 16631  0113BA  0EFF               	movlw	255
 16632  0113BC  6F8D               	movwf	(??_printf+1)& (0+255),b
 16633  0113BE  C182  FFF6         	movff	printf@f,tblptrl
 16634  0113C2  C183  FFF7         	movff	printf@f+1,tblptrh
 16635  0113C6  0E00               	movlw	low (__mediumconst shr (0+16))
 16636  0113C8  6EF8               	movwf	tblptru,c
 16637  0113CA  0E0D               	movlw	(high __ramtop+-1)
 16638  0113CC  64F7               	cpfsgt	tblptrh,c
 16639  0113CE  D003               	bra	u24777
 16640  0113D0  0008               	tblrd		*
 16641  0113D2  50F5               	movf	tablat,w,c
 16642  0113D4  D005               	bra	u24770
 16643  0113D6                     u24777:
 16644  0113D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 16645  0113DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 16646  0113DE  50EF               	movf	indf0,w,c
 16647  0113E0                     u24770:
 16648  0113E0  0101               	movlb	1	; () banked
 16649  0113E2  6F8E               	movwf	(??_printf+2)& (0+255),b
 16650  0113E4  6B8F               	clrf	(??_printf+3)& (0+255),b
 16651  0113E6  518C               	movf	??_printf& (0+255),w,b
 16652  0113E8  278E               	addwf	(??_printf+2)& (0+255),f,b
 16653  0113EA  518D               	movf	(??_printf+1)& (0+255),w,b
 16654  0113EC  238F               	addwfc	(??_printf+3)& (0+255),f,b
 16655  0113EE  518E               	movf	(??_printf+2)& (0+255),w,b
 16656  0113F0  27AD               	addwf	printf@width& (0+255),f,b
 16657  0113F2  518F               	movf	(??_printf+3)& (0+255),w,b
 16658  0113F4  23AE               	addwfc	(printf@width+1)& (0+255),f,b
 16659                           
 16660                           ; BSR set to: 1
 16661  0113F6  4B82               	infsnz	printf@f& (0+255),f,b
 16662  0113F8  2B83               	incf	(printf@f+1)& (0+255),f,b
 16663                           
 16664                           ; BSR set to: 1
 16665                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 16666  0113FA  C182  FFF6         	movff	printf@f,tblptrl
 16667  0113FE  C183  FFF7         	movff	printf@f+1,tblptrh
 16668  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 16669  011404  6EF8               	movwf	tblptru,c
 16670  011406  0E0D               	movlw	(high __ramtop+-1)
 16671  011408  64F7               	cpfsgt	tblptrh,c
 16672  01140A  D003               	bra	u24787
 16673  01140C  0008               	tblrd		*
 16674  01140E  50F5               	movf	tablat,w,c
 16675  011410  D005               	bra	u24780
 16676  011412                     u24787:
 16677  011412  CFF6 FFE9          	movff	tblptrl,fsr0l
 16678  011416  CFF7 FFEA          	movff	tblptrh,fsr0h
 16679  01141A  50EF               	movf	indf0,w,c
 16680  01141C                     u24780:
 16681  01141C  EC61  F0C8         	call	_isdigit
 16682  011420  B0D8               	btfsc	status,0,c
 16683  011422  D7B9               	goto	l1464
 16684  011424                     u24790:
 16685                           
 16686                           ;doprnt.c: 608: }
 16687                           ;doprnt.c: 611: if(*f == '.') {
 16688  011424  C182  FFF6         	movff	printf@f,tblptrl
 16689  011428  C183  FFF7         	movff	printf@f+1,tblptrh
 16690  01142C  0E00               	movlw	low (__mediumconst shr (0+16))
 16691  01142E  6EF8               	movwf	tblptru,c
 16692  011430  0E0D               	movlw	(high __ramtop+-1)
 16693  011432  64F7               	cpfsgt	tblptrh,c
 16694  011434  D003               	bra	u24807
 16695  011436  0008               	tblrd		*
 16696  011438  50F5               	movf	tablat,w,c
 16697  01143A  D005               	bra	u24800
 16698  01143C                     u24807:
 16699  01143C  CFF6 FFE9          	movff	tblptrl,fsr0l
 16700  011440  CFF7 FFEA          	movff	tblptrh,fsr0h
 16701  011444  50EF               	movf	indf0,w,c
 16702  011446                     u24800:
 16703  011446  0A2E               	xorlw	46
 16704  011448  A4D8               	btfss	status,2,c
 16705  01144A  D049               	goto	l1466
 16706                           
 16707                           ;doprnt.c: 612: flag |= 0x4000;
 16708  01144C  0101               	movlb	1	; () banked
 16709  01144E  8DAC               	bsf	(printf@flag+1)& (0+255),6,b
 16710                           
 16711                           ;doprnt.c: 613: f++;
 16712  011450  4B82               	infsnz	printf@f& (0+255),f,b
 16713  011452  2B83               	incf	(printf@f+1)& (0+255),f,b
 16714                           
 16715                           ; BSR set to: 1
 16716                           ;doprnt.c: 620: {
 16717                           ;doprnt.c: 621: prec = 0;
 16718  011454  0E00               	movlw	0
 16719  011456  6FB0               	movwf	(printf@prec+1)& (0+255),b
 16720  011458  0E00               	movlw	0
 16721  01145A  6FAF               	movwf	printf@prec& (0+255),b
 16722                           
 16723                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 16724  01145C  D02A               	goto	l1467
 16725  01145E                     
 16726                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 16727                           
 16728                           ; BSR set to: 1
 16729  01145E  C1AF  F117         	movff	printf@prec,___wmul@multiplier
 16730  011462  C1B0  F118         	movff	printf@prec+1,___wmul@multiplier+1
 16731  011466  0E00               	movlw	0
 16732  011468  0101               	movlb	1	; () banked
 16733  01146A  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16734  01146C  0E0A               	movlw	10
 16735  01146E  6F19               	movwf	___wmul@multiplicand& (0+255),b
 16736  011470  ECDA  F0C7         	call	___wmul	;wreg free
 16737  011474  C182  FFF6         	movff	printf@f,tblptrl
 16738  011478  C183  FFF7         	movff	printf@f+1,tblptrh
 16739  01147C  0E00               	movlw	low (__mediumconst shr (0+16))
 16740  01147E  6EF8               	movwf	tblptru,c
 16741  011480  0E0D               	movlw	(high __ramtop+-1)
 16742  011482  64F7               	cpfsgt	tblptrh,c
 16743  011484  D003               	bra	u24827
 16744  011486  0008               	tblrd		*
 16745  011488  50F5               	movf	tablat,w,c
 16746  01148A  D005               	bra	u24820
 16747  01148C                     u24827:
 16748  01148C  CFF6 FFE9          	movff	tblptrl,fsr0l
 16749  011490  CFF7 FFEA          	movff	tblptrh,fsr0h
 16750  011494  50EF               	movf	indf0,w,c
 16751  011496                     u24820:
 16752  011496  0101               	movlb	1	; () banked
 16753  011498  6F8C               	movwf	??_printf& (0+255),b
 16754  01149A  518C               	movf	??_printf& (0+255),w,b
 16755  01149C  2717               	addwf	?___wmul& (0+255),f,b
 16756  01149E  0E00               	movlw	0
 16757  0114A0  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 16758  0114A2  0ED0               	movlw	208
 16759  0114A4  2517               	addwf	?___wmul& (0+255),w,b
 16760  0114A6  6FAF               	movwf	printf@prec& (0+255),b
 16761  0114A8  0EFF               	movlw	255
 16762  0114AA  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 16763  0114AC  6FB0               	movwf	(printf@prec+1)& (0+255),b
 16764                           
 16765                           ; BSR set to: 1
 16766  0114AE  4B82               	infsnz	printf@f& (0+255),f,b
 16767  0114B0  2B83               	incf	(printf@f+1)& (0+255),f,b
 16768  0114B2                     l1467:
 16769                           
 16770                           ; BSR set to: 1
 16771                           
 16772                           ; BSR set to: 1
 16773  0114B2  C182  FFF6         	movff	printf@f,tblptrl
 16774  0114B6  C183  FFF7         	movff	printf@f+1,tblptrh
 16775  0114BA  0E00               	movlw	low (__mediumconst shr (0+16))
 16776  0114BC  6EF8               	movwf	tblptru,c
 16777  0114BE  0E0D               	movlw	(high __ramtop+-1)
 16778  0114C0  64F7               	cpfsgt	tblptrh,c
 16779  0114C2  D003               	bra	u24837
 16780  0114C4  0008               	tblrd		*
 16781  0114C6  50F5               	movf	tablat,w,c
 16782  0114C8  D005               	bra	u24830
 16783  0114CA                     u24837:
 16784  0114CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 16785  0114CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 16786  0114D2  50EF               	movf	indf0,w,c
 16787  0114D4                     u24830:
 16788  0114D4  EC61  F0C8         	call	_isdigit
 16789  0114D8  A0D8               	btfss	status,0,c
 16790  0114DA  D0A4               	goto	l1471
 16791  0114DC  D7C0               	goto	l1468
 16792  0114DE                     l1466:
 16793                           
 16794                           ;doprnt.c: 626: prec = 0;
 16795  0114DE  0E00               	movlw	0
 16796  0114E0  0101               	movlb	1	; () banked
 16797  0114E2  6FB0               	movwf	(printf@prec+1)& (0+255),b
 16798  0114E4  0E00               	movlw	0
 16799  0114E6  6FAF               	movwf	printf@prec& (0+255),b
 16800                           
 16801                           ; BSR set to: 1
 16802                           ;doprnt.c: 628: flag |= 0x1000;
 16803  0114E8  89AC               	bsf	(printf@flag+1)& (0+255),4,b
 16804                           
 16805                           ; BSR set to: 1
 16806                           ;doprnt.c: 630: }
 16807                           ;doprnt.c: 635: switch(c = *f++) {
 16808  0114EA  D09C               	goto	l1471
 16809  0114EC                     
 16810                           ; BSR set to: 1
 16811                           ;doprnt.c: 663: flag |= 0x400;
 16812                           
 16813                           ; BSR set to: 1
 16814  0114EC  85AC               	bsf	(printf@flag+1)& (0+255),2,b
 16815                           
 16816                           ; BSR set to: 1
 16817                           ;doprnt.c: 698: case 'i':
 16818                           ;doprnt.c: 699: break;
 16819                           
 16820                           ; BSR set to: 1
 16821                           
 16822                           ;doprnt.c: 697: case 'd':
 16823                           
 16824                           ;doprnt.c: 664: break;
 16825  0114EE  D0D1               	goto	l1475
 16826  0114F0                     
 16827                           ; BSR set to: 1
 16828                           ;doprnt.c: 718: case 'x':
 16829                           ;doprnt.c: 721: flag |= 0x80;
 16830                           
 16831                           ; BSR set to: 1
 16832                           
 16833                           ; BSR set to: 1
 16834  0114F0  8FAB               	bsf	printf@flag& (0+255),7,b
 16835                           
 16836                           ;doprnt.c: 723: break;
 16837  0114F2  D0CF               	goto	l1475
 16838  0114F4                     
 16839                           ; BSR set to: 1
 16840                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 16841                           
 16842                           ; BSR set to: 1
 16843  0114F4  C19B  FFD9         	movff	printf@ap,fsr2l
 16844  0114F8  C19C  FFDA         	movff	printf@ap+1,fsr2h
 16845  0114FC  CFDE F197          	movff	postinc2,printf@cp
 16846  011500  CFDD F198          	movff	postdec2,printf@cp+1
 16847                           
 16848                           ; BSR set to: 1
 16849  011504  0E02               	movlw	2
 16850  011506  279B               	addwf	printf@ap& (0+255),f,b
 16851  011508  0E00               	movlw	0
 16852  01150A  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 16853                           
 16854                           ; BSR set to: 1
 16855                           ;doprnt.c: 740: if(!cp)
 16856  01150C  5197               	movf	printf@cp& (0+255),w,b
 16857  01150E  1198               	iorwf	(printf@cp+1)& (0+255),w,b
 16858  011510  A4D8               	btfss	status,2,c
 16859  011512  D004               	goto	l1481
 16860                           
 16861                           ; BSR set to: 1
 16862                           ;doprnt.c: 741: cp = "(null)";
 16863  011514  0E86               	movlw	low STR_162
 16864  011516  6F97               	movwf	printf@cp& (0+255),b
 16865  011518  0EFF               	movlw	high STR_162
 16866  01151A  6F98               	movwf	(printf@cp+1)& (0+255),b
 16867  01151C                     l1481:
 16868                           
 16869                           ; BSR set to: 1
 16870                           ;doprnt.c: 745: len = 0;
 16871                           
 16872                           ; BSR set to: 1
 16873  01151C  0E00               	movlw	0
 16874  01151E  6F9A               	movwf	(printf@len+1)& (0+255),b
 16875  011520  0E00               	movlw	0
 16876  011522  6F99               	movwf	printf@len& (0+255),b
 16877                           
 16878                           ;doprnt.c: 746: while(cp[len])
 16879  011524  D003               	goto	l1482
 16880  011526                     
 16881                           ;doprnt.c: 747: len++;
 16882                           
 16883                           ; BSR set to: 1
 16884  011526  0101               	movlb	1	; () banked
 16885  011528  4B99               	infsnz	printf@len& (0+255),f,b
 16886  01152A  2B9A               	incf	(printf@len+1)& (0+255),f,b
 16887  01152C                     l1482:
 16888                           
 16889                           ; BSR set to: 1
 16890                           
 16891                           ; BSR set to: 1
 16892  01152C  5199               	movf	printf@len& (0+255),w,b
 16893  01152E  2597               	addwf	printf@cp& (0+255),w,b
 16894  011530  6F8C               	movwf	??_printf& (0+255),b
 16895  011532  519A               	movf	(printf@len+1)& (0+255),w,b
 16896  011534  2198               	addwfc	(printf@cp+1)& (0+255),w,b
 16897  011536  6F8D               	movwf	(??_printf+1)& (0+255),b
 16898  011538  C18C  FFF6         	movff	??_printf,tblptrl
 16899  01153C  C18D  FFF7         	movff	??_printf+1,tblptrh
 16900  011540  0E00               	movlw	low (__mediumconst shr (0+16))
 16901  011542  6EF8               	movwf	tblptru,c
 16902  011544  0E0D               	movlw	(high __ramtop+-1)
 16903  011546  64F7               	cpfsgt	tblptrh,c
 16904  011548  D003               	bra	u24867
 16905  01154A  0008               	tblrd		*
 16906  01154C  50F5               	movf	tablat,w,c
 16907  01154E  D005               	bra	u24860
 16908  011550                     u24867:
 16909  011550  CFF6 FFE9          	movff	tblptrl,fsr0l
 16910  011554  CFF7 FFEA          	movff	tblptrh,fsr0h
 16911  011558  50EF               	movf	indf0,w,c
 16912  01155A                     u24860:
 16913  01155A  0900               	iorlw	0
 16914  01155C  A4D8               	btfss	status,2,c
 16915  01155E  D7E3               	goto	l1483
 16916  011560                     u24870:
 16917                           
 16918                           ;doprnt.c: 753: if(prec && prec < len)
 16919                           
 16920                           ;doprnt.c: 750: dostring:
 16921  011560  0101               	movlb	1	; () banked
 16922  011562  51AF               	movf	printf@prec& (0+255),w,b
 16923  011564  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 16924  011566  B4D8               	btfsc	status,2,c
 16925  011568  D00A               	goto	l1486
 16926                           
 16927                           ; BSR set to: 1
 16928  01156A  5199               	movf	printf@len& (0+255),w,b
 16929  01156C  5DAF               	subwf	printf@prec& (0+255),w,b
 16930  01156E  519A               	movf	(printf@len+1)& (0+255),w,b
 16931  011570  59B0               	subwfb	(printf@prec+1)& (0+255),w,b
 16932  011572  B0D8               	btfsc	status,0,c
 16933  011574  D004               	goto	l1486
 16934                           
 16935                           ; BSR set to: 1
 16936                           ;doprnt.c: 754: len = prec;
 16937  011576  C1AF  F199         	movff	printf@prec,printf@len
 16938  01157A  C1B0  F19A         	movff	printf@prec+1,printf@len+1
 16939  01157E                     l1486:
 16940                           
 16941                           ; BSR set to: 1
 16942                           ;doprnt.c: 757: if(width > len)
 16943                           
 16944                           ; BSR set to: 1
 16945  01157E  51AD               	movf	printf@width& (0+255),w,b
 16946  011580  5D99               	subwf	printf@len& (0+255),w,b
 16947  011582  51AE               	movf	(printf@width+1)& (0+255),w,b
 16948  011584  599A               	subwfb	(printf@len+1)& (0+255),w,b
 16949  011586  B0D8               	btfsc	status,0,c
 16950  011588  D005               	goto	l1487
 16951                           
 16952                           ; BSR set to: 1
 16953                           ;doprnt.c: 758: width -= len;
 16954  01158A  5199               	movf	printf@len& (0+255),w,b
 16955  01158C  5FAD               	subwf	printf@width& (0+255),f,b
 16956  01158E  519A               	movf	(printf@len+1)& (0+255),w,b
 16957  011590  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 16958  011592  D008               	goto	l1489
 16959  011594                     l1487:
 16960                           
 16961                           ; BSR set to: 1
 16962                           ;doprnt.c: 759: else
 16963                           ;doprnt.c: 760: width = 0;
 16964                           
 16965                           ; BSR set to: 1
 16966  011594  0E00               	movlw	0
 16967  011596  6FAE               	movwf	(printf@width+1)& (0+255),b
 16968  011598  0E00               	movlw	0
 16969  01159A  6FAD               	movwf	printf@width& (0+255),b
 16970                           
 16971                           ; BSR set to: 1
 16972                           ;doprnt.c: 764: while(width--)
 16973  01159C  D003               	goto	l1489
 16974  01159E                     l18692:
 16975                           
 16976                           ; BSR set to: 1
 16977                           ;doprnt.c: 765: (putch(' ') );
 16978  01159E  0E20               	movlw	32
 16979  0115A0  EC25  F0C9         	call	_putch
 16980  0115A4                     l1489:
 16981  0115A4  0101               	movlb	1	; () banked
 16982  0115A6  07AD               	decf	printf@width& (0+255),f,b
 16983  0115A8  A0D8               	btfss	status,0,c
 16984  0115AA  07AE               	decf	(printf@width+1)& (0+255),f,b
 16985  0115AC  29AD               	incf	printf@width& (0+255),w,b
 16986  0115AE  E1F7               	bnz	l18692
 16987  0115B0  29AE               	incf	(printf@width+1)& (0+255),w,b
 16988  0115B2  B4D8               	btfsc	status,2,c
 16989  0115B4  D017               	goto	l1492
 16990  0115B6  D7F3               	goto	l1490
 16991  0115B8                     l18696:
 16992                           
 16993                           ; BSR set to: 1
 16994                           ;doprnt.c: 768: (putch(*cp++) );
 16995  0115B8  C197  FFF6         	movff	printf@cp,tblptrl
 16996  0115BC  C198  FFF7         	movff	printf@cp+1,tblptrh
 16997  0115C0  0E00               	movlw	low (__mediumconst shr (0+16))
 16998  0115C2  6EF8               	movwf	tblptru,c
 16999  0115C4  0E0D               	movlw	(high __ramtop+-1)
 17000  0115C6  64F7               	cpfsgt	tblptrh,c
 17001  0115C8  D003               	bra	u24927
 17002  0115CA  0008               	tblrd		*
 17003  0115CC  50F5               	movf	tablat,w,c
 17004  0115CE  D005               	bra	u24920
 17005  0115D0                     u24927:
 17006  0115D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 17007  0115D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 17008  0115D8  50EF               	movf	indf0,w,c
 17009  0115DA                     u24920:
 17010  0115DA  EC25  F0C9         	call	_putch
 17011  0115DE  0101               	movlb	1	; () banked
 17012  0115E0  4B97               	infsnz	printf@cp& (0+255),f,b
 17013  0115E2  2B98               	incf	(printf@cp+1)& (0+255),f,b
 17014  0115E4                     l1492:
 17015                           
 17016                           ; BSR set to: 1
 17017                           
 17018                           ; BSR set to: 1
 17019  0115E4  0799               	decf	printf@len& (0+255),f,b
 17020  0115E6  A0D8               	btfss	status,0,c
 17021  0115E8  079A               	decf	(printf@len+1)& (0+255),f,b
 17022  0115EA  2999               	incf	printf@len& (0+255),w,b
 17023  0115EC  E1E5               	bnz	l18696
 17024  0115EE  299A               	incf	(printf@len+1)& (0+255),w,b
 17025  0115F0  B4D8               	btfsc	status,2,c
 17026  0115F2  EF47  F090         	goto	u25480
 17027  0115F6  D7E0               	goto	l1493
 17028  0115F8                     
 17029                           ; BSR set to: 1
 17030                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 17031                           
 17032                           ; BSR set to: 1
 17033  0115F8  C19B  FFD9         	movff	printf@ap,fsr2l
 17034  0115FC  C19C  FFDA         	movff	printf@ap+1,fsr2h
 17035  011600  50DF               	movf	indf2,w,c
 17036  011602  6FB1               	movwf	printf@c& (0+255),b
 17037                           
 17038                           ; BSR set to: 1
 17039  011604  0E02               	movlw	2
 17040  011606  279B               	addwf	printf@ap& (0+255),f,b
 17041  011608  0E00               	movlw	0
 17042  01160A  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 17043  01160C                     
 17044                           ; BSR set to: 1
 17045                           ;doprnt.c: 805: cp = (char *)&c;
 17046                           
 17047                           ; BSR set to: 1
 17048  01160C  0EB1               	movlw	low printf@c
 17049  01160E  6F97               	movwf	printf@cp& (0+255),b
 17050  011610  0E01               	movlw	high printf@c
 17051  011612  6F98               	movwf	(printf@cp+1)& (0+255),b
 17052                           
 17053                           ; BSR set to: 1
 17054                           ;doprnt.c: 806: len = 1;
 17055  011614  0E00               	movlw	0
 17056  011616  6F9A               	movwf	(printf@len+1)& (0+255),b
 17057  011618  0E01               	movlw	1
 17058  01161A  6F99               	movwf	printf@len& (0+255),b
 17059                           
 17060                           ;doprnt.c: 807: goto dostring;
 17061  01161C  D7A1               	goto	u24870
 17062  01161E                     
 17063                           ; BSR set to: 1
 17064                           ;doprnt.c: 818: flag |= 0xC0;
 17065                           
 17066                           ; BSR set to: 1
 17067  01161E  0EC0               	movlw	192
 17068  011620  13AB               	iorwf	printf@flag& (0+255),f,b
 17069                           
 17070                           ; BSR set to: 1
 17071                           ;doprnt.c: 822: }
 17072                           
 17073                           ;doprnt.c: 819: break;
 17074  011622  D037               	goto	l1475
 17075  011624                     l1471:
 17076                           
 17077                           ; BSR set to: 1
 17078  011624  0101               	movlb	1	; () banked
 17079  011626  5182               	movf	printf@f& (0+255),w,b
 17080  011628  6F8C               	movwf	??_printf& (0+255),b
 17081  01162A  5183               	movf	(printf@f+1)& (0+255),w,b
 17082  01162C  6F8D               	movwf	(??_printf+1)& (0+255),b
 17083  01162E  4B82               	infsnz	printf@f& (0+255),f,b
 17084  011630  2B83               	incf	(printf@f+1)& (0+255),f,b
 17085  011632  C18C  FFF6         	movff	??_printf,tblptrl
 17086  011636  C18D  FFF7         	movff	??_printf+1,tblptrh
 17087  01163A  0E00               	movlw	low (__mediumconst shr (0+16))
 17088  01163C  6EF8               	movwf	tblptru,c
 17089  01163E  0E0D               	movlw	(high __ramtop+-1)
 17090  011640  64F7               	cpfsgt	tblptrh,c
 17091  011642  D003               	bra	u24947
 17092  011644  0008               	tblrd		*
 17093  011646  50F5               	movf	tablat,w,c
 17094  011648  D005               	bra	u24940
 17095  01164A                     u24947:
 17096  01164A  CFF6 FFE9          	movff	tblptrl,fsr0l
 17097  01164E  CFF7 FFEA          	movff	tblptrh,fsr0h
 17098  011652  50EF               	movf	indf0,w,c
 17099  011654                     u24940:
 17100  011654  0101               	movlb	1	; () banked
 17101  011656  6FB1               	movwf	printf@c& (0+255),b
 17102  011658  51B1               	movf	printf@c& (0+255),w,b
 17103                           
 17104                           ; Switch size 1, requested type "space"
 17105                           ; Number of cases is 9, Range of values is 0 to 120
 17106                           ; switch strategies available:
 17107                           ; Name         Instructions Cycles
 17108                           ; simple_byte           28    15 (average)
 17109                           ;	Chosen strategy is simple_byte
 17110  01165A  0A00               	xorlw	0	; case 0
 17111  01165C  B4D8               	btfsc	status,2,c
 17112  01165E  0012               	return	
 17113  011660  0A58               	xorlw	88	; case 88
 17114  011662  B4D8               	btfsc	status,2,c
 17115  011664  D745               	goto	l1478
 17116  011666  0A3B               	xorlw	59	; case 99
 17117  011668  B4D8               	btfsc	status,2,c
 17118  01166A  D7C6               	goto	l1495
 17119  01166C  0A07               	xorlw	7	; case 100
 17120  01166E  B4D8               	btfsc	status,2,c
 17121  011670  D010               	goto	l1475
 17122  011672  0A02               	xorlw	2	; case 102
 17123  011674  B4D8               	btfsc	status,2,c
 17124  011676  D73A               	goto	l1474
 17125  011678  0A0F               	xorlw	15	; case 105
 17126  01167A  B4D8               	btfsc	status,2,c
 17127  01167C  D00A               	goto	l1475
 17128  01167E  0A1A               	xorlw	26	; case 115
 17129  011680  B4D8               	btfsc	status,2,c
 17130  011682  D738               	goto	l1480
 17131  011684  0A06               	xorlw	6	; case 117
 17132  011686  B4D8               	btfsc	status,2,c
 17133  011688  D7CA               	goto	l1497
 17134  01168A  0A0D               	xorlw	13	; case 120
 17135  01168C  B4D8               	btfsc	status,2,c
 17136  01168E  D730               	goto	l1478
 17137  011690  D7BD               	goto	l1496
 17138  011692                     l1475:
 17139                           
 17140                           ; BSR set to: 1
 17141                           ;doprnt.c: 825: if(flag & (0x700)) {
 17142                           
 17143                           ; BSR set to: 1
 17144  011692  0E07               	movlw	7
 17145  011694  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 17146  011696  B4D8               	btfsc	status,2,c
 17147  011698  D33D               	goto	l1498
 17148                           
 17149                           ; BSR set to: 1
 17150                           ;doprnt.c: 827: if(flag & 0x1000)
 17151  01169A  A9AC               	btfss	(printf@flag+1)& (0+255),4,b
 17152  01169C  D004               	goto	l1499
 17153                           
 17154                           ; BSR set to: 1
 17155                           ;doprnt.c: 829: prec = 6;
 17156  01169E  0E00               	movlw	0
 17157  0116A0  6FB0               	movwf	(printf@prec+1)& (0+255),b
 17158  0116A2  0E06               	movlw	6
 17159  0116A4  6FAF               	movwf	printf@prec& (0+255),b
 17160  0116A6                     l1499:
 17161                           
 17162                           ; BSR set to: 1
 17163                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 17164                           
 17165                           ; BSR set to: 1
 17166  0116A6  C19B  FFD9         	movff	printf@ap,fsr2l
 17167  0116AA  C19C  FFDA         	movff	printf@ap+1,fsr2h
 17168  0116AE  CFDE F1A3          	movff	postinc2,printf@fval
 17169  0116B2  CFDE F1A4          	movff	postinc2,printf@fval+1
 17170  0116B6  CFDE F1A5          	movff	postinc2,printf@fval+2
 17171  0116BA  CFDE F1A6          	movff	postinc2,printf@fval+3
 17172                           
 17173                           ; BSR set to: 1
 17174  0116BE  0E04               	movlw	4
 17175  0116C0  279B               	addwf	printf@ap& (0+255),f,b
 17176  0116C2  0E00               	movlw	0
 17177  0116C4  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 17178                           
 17179                           ; BSR set to: 1
 17180                           ;doprnt.c: 831: if(fval < 0.0) {
 17181  0116C6  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 17182  0116C8  D015               	goto	l1500
 17183                           
 17184                           ; BSR set to: 1
 17185                           ;doprnt.c: 832: fval = -fval;
 17186  0116CA  C1A3  F125         	movff	printf@fval,___flneg@f1
 17187  0116CE  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 17188  0116D2  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 17189  0116D6  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 17190  0116DA  EC7F  F0C7         	call	___flneg	;wreg free
 17191  0116DE  C125  F1A3         	movff	?___flneg,printf@fval
 17192  0116E2  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 17193  0116E6  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 17194  0116EA  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 17195                           
 17196                           ;doprnt.c: 833: flag |= 0x03;
 17197  0116EE  0E03               	movlw	3
 17198  0116F0  0101               	movlb	1	; () banked
 17199  0116F2  13AB               	iorwf	printf@flag& (0+255),f,b
 17200  0116F4                     l1500:
 17201                           
 17202                           ; BSR set to: 1
 17203                           ;doprnt.c: 834: }
 17204                           ;doprnt.c: 835: exp = 0;
 17205                           
 17206                           ; BSR set to: 1
 17207  0116F4  0E00               	movlw	0
 17208  0116F6  6FA2               	movwf	(printf@exp+1)& (0+255),b
 17209  0116F8  0E00               	movlw	0
 17210  0116FA  6FA1               	movwf	printf@exp& (0+255),b
 17211                           
 17212                           ; BSR set to: 1
 17213                           ;doprnt.c: 836: if( fval!=0) {
 17214  0116FC  51A3               	movf	printf@fval& (0+255),w,b
 17215  0116FE  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 17216  011700  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 17217  011702  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 17218  011704  B4D8               	btfsc	status,2,c
 17219  011706  D084               	goto	l1505
 17220                           
 17221                           ; BSR set to: 1
 17222                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 17223  011708  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 17224  01170A  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 17225  01170C  0F82               	addlw	130
 17226  01170E  6FA1               	movwf	printf@exp& (0+255),b
 17227  011710  6BA2               	clrf	(printf@exp+1)& (0+255),b
 17228  011712  0EFF               	movlw	255
 17229  011714  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 17230                           
 17231                           ; BSR set to: 1
 17232                           ;doprnt.c: 838: exp--;
 17233  011716  07A1               	decf	printf@exp& (0+255),f,b
 17234  011718  A0D8               	btfss	status,0,c
 17235  01171A  07A2               	decf	(printf@exp+1)& (0+255),f,b
 17236                           
 17237                           ; BSR set to: 1
 17238                           ;doprnt.c: 839: exp *= 3;
 17239  01171C  C1A1  F117         	movff	printf@exp,___wmul@multiplier
 17240  011720  C1A2  F118         	movff	printf@exp+1,___wmul@multiplier+1
 17241  011724  0E00               	movlw	0
 17242  011726  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17243  011728  0E03               	movlw	3
 17244  01172A  6F19               	movwf	___wmul@multiplicand& (0+255),b
 17245  01172C  ECDA  F0C7         	call	___wmul	;wreg free
 17246  011730  C117  F1A1         	movff	?___wmul,printf@exp
 17247  011734  C118  F1A2         	movff	?___wmul+1,printf@exp+1
 17248                           
 17249                           ;doprnt.c: 840: exp /= 10;
 17250  011738  C1A1  F11D         	movff	printf@exp,___awdiv@dividend
 17251  01173C  C1A2  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 17252  011740  0E00               	movlw	0
 17253  011742  0101               	movlb	1	; () banked
 17254  011744  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 17255  011746  0E0A               	movlw	10
 17256  011748  6F1F               	movwf	___awdiv@divisor& (0+255),b
 17257  01174A  ECB8  F0C0         	call	___awdiv	;wreg free
 17258  01174E  C11D  F1A1         	movff	?___awdiv,printf@exp
 17259  011752  C11E  F1A2         	movff	?___awdiv+1,printf@exp+1
 17260                           
 17261                           ;doprnt.c: 841: if(exp < 0)
 17262  011756  0101               	movlb	1	; () banked
 17263  011758  AFA2               	btfss	(printf@exp+1)& (0+255),7,b
 17264  01175A  D003               	goto	l1502
 17265                           
 17266                           ; BSR set to: 1
 17267                           ;doprnt.c: 842: exp--;
 17268  01175C  07A1               	decf	printf@exp& (0+255),f,b
 17269  01175E  A0D8               	btfss	status,0,c
 17270  011760  07A2               	decf	(printf@exp+1)& (0+255),f,b
 17271  011762                     l1502:
 17272                           
 17273                           ; BSR set to: 1
 17274                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 17275                           
 17276                           ; BSR set to: 1
 17277  011762  51A1               	movf	printf@exp& (0+255),w,b
 17278  011764  0800               	sublw	0
 17279  011766  EC38  F09C         	call	_scale
 17280  01176A  C16F  F19D         	movff	?_scale,printf@tmpval
 17281  01176E  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 17282  011772  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 17283  011776  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 17284                           
 17285                           ;doprnt.c: 847: tmpval.integ *= fval;
 17286  01177A  C19D  F156         	movff	printf@tmpval,___flmul@b
 17287  01177E  C19E  F157         	movff	printf@tmpval+1,___flmul@b+1
 17288  011782  C19F  F158         	movff	printf@tmpval+2,___flmul@b+2
 17289  011786  C1A0  F159         	movff	printf@tmpval+3,___flmul@b+3
 17290  01178A  C1A3  F15A         	movff	printf@fval,___flmul@a
 17291  01178E  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 17292  011792  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 17293  011796  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 17294  01179A  EC7E  F0A2         	call	___flmul	;wreg free
 17295  01179E  C156  F19D         	movff	?___flmul,printf@tmpval
 17296  0117A2  C157  F19E         	movff	?___flmul+1,printf@tmpval+1
 17297  0117A6  C158  F19F         	movff	?___flmul+2,printf@tmpval+2
 17298  0117AA  C159  F1A0         	movff	?___flmul+3,printf@tmpval+3
 17299                           
 17300                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 17301  0117AE  C19D  F117         	movff	printf@tmpval,___flge@ff1
 17302  0117B2  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 17303  0117B6  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 17304  0117BA  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 17305  0117BE  0E00               	movlw	0
 17306  0117C0  0101               	movlb	1	; () banked
 17307  0117C2  6F1B               	movwf	___flge@ff2& (0+255),b
 17308  0117C4  0E00               	movlw	0
 17309  0117C6  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 17310  0117C8  0E80               	movlw	128
 17311  0117CA  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 17312  0117CC  0E3F               	movlw	63
 17313  0117CE  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 17314  0117D0  EC92  F0BA         	call	___flge	;wreg free
 17315  0117D4  0101               	movlb	1	; () banked
 17316  0117D6  B0D8               	btfsc	status,0,c
 17317  0117D8  D004               	goto	l1503
 17318                           
 17319                           ; BSR set to: 1
 17320                           ;doprnt.c: 849: exp--;
 17321  0117DA  07A1               	decf	printf@exp& (0+255),f,b
 17322  0117DC  A0D8               	btfss	status,0,c
 17323  0117DE  07A2               	decf	(printf@exp+1)& (0+255),f,b
 17324  0117E0  D017               	goto	l1505
 17325  0117E2                     l1503:
 17326                           
 17327                           ; BSR set to: 1
 17328                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 17329                           
 17330                           ; BSR set to: 1
 17331  0117E2  C19D  F117         	movff	printf@tmpval,___flge@ff1
 17332  0117E6  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 17333  0117EA  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 17334  0117EE  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 17335  0117F2  0E00               	movlw	0
 17336  0117F4  6F1B               	movwf	___flge@ff2& (0+255),b
 17337  0117F6  0E00               	movlw	0
 17338  0117F8  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 17339  0117FA  0E20               	movlw	32
 17340  0117FC  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 17341  0117FE  0E41               	movlw	65
 17342  011800  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 17343  011802  EC92  F0BA         	call	___flge	;wreg free
 17344  011806  0101               	movlb	1	; () banked
 17345  011808  A0D8               	btfss	status,0,c
 17346  01180A  D002               	goto	l1505
 17347                           
 17348                           ; BSR set to: 1
 17349                           ;doprnt.c: 851: exp++;
 17350  01180C  4BA1               	infsnz	printf@exp& (0+255),f,b
 17351  01180E  2BA2               	incf	(printf@exp+1)& (0+255),f,b
 17352  011810                     l1505:
 17353                           
 17354                           ; BSR set to: 1
 17355                           ;doprnt.c: 852: }
 17356                           ;doprnt.c: 1112: if(prec <= 12)
 17357                           
 17358                           ; BSR set to: 1
 17359                           
 17360                           ; BSR set to: 1
 17361                           
 17362                           ; BSR set to: 1
 17363  011810  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 17364  011812  D006               	goto	u25020
 17365  011814  51B0               	movf	(printf@prec+1)& (0+255),w,b
 17366  011816  E121               	bnz	l18764
 17367  011818  0E0D               	movlw	13
 17368  01181A  5DAF               	subwf	printf@prec& (0+255),w,b
 17369  01181C  B0D8               	btfsc	status,0,c
 17370  01181E  D01D               	goto	l1506
 17371  011820                     u25020:
 17372                           
 17373                           ; BSR set to: 1
 17374                           ;doprnt.c: 1113: fval += fround(prec);
 17375  011820  C1A3  F129         	movff	printf@fval,___fladd@b
 17376  011824  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 17377  011828  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 17378  01182C  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 17379  011830  51AF               	movf	printf@prec& (0+255),w,b
 17380  011832  EC70  F0AD         	call	_fround
 17381  011836  C16F  F12D         	movff	?_fround,___fladd@a
 17382  01183A  C170  F12E         	movff	?_fround+1,___fladd@a+1
 17383  01183E  C171  F12F         	movff	?_fround+2,___fladd@a+2
 17384  011842  C172  F130         	movff	?_fround+3,___fladd@a+3
 17385  011846  ECCF  F0A5         	call	___fladd	;wreg free
 17386  01184A  C129  F1A3         	movff	?___fladd,printf@fval
 17387  01184E  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 17388  011852  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 17389  011856  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 17390  01185A                     l1506:
 17391  01185A                     l18764:
 17392                           
 17393                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 17394  01185A  0101               	movlb	1	; () banked
 17395  01185C  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 17396  01185E  D006               	goto	u25030
 17397  011860  51A2               	movf	(printf@exp+1)& (0+255),w,b
 17398  011862  E122               	bnz	l18772
 17399  011864  0E0A               	movlw	10
 17400  011866  5DA1               	subwf	printf@exp& (0+255),w,b
 17401  011868  B0D8               	btfsc	status,0,c
 17402  01186A  D01E               	goto	u25060
 17403  01186C                     u25030:
 17404                           
 17405                           ; BSR set to: 1
 17406  01186C  51A3               	movf	printf@fval& (0+255),w,b
 17407  01186E  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 17408  011870  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 17409  011872  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 17410  011874  B4D8               	btfsc	status,2,c
 17411  011876  D062               	goto	l1507
 17412                           
 17413                           ; BSR set to: 1
 17414  011878  C1A3  F178         	movff	printf@fval,___fltol@f1
 17415  01187C  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 17416  011880  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 17417  011884  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 17418  011888  EC41  F0BD         	call	___fltol	;wreg free
 17419  01188C  0101               	movlb	1	; () banked
 17420  01188E  5178               	movf	?___fltol& (0+255),w,b
 17421  011890  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 17422  011892  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 17423  011894  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 17424  011896  B4D8               	btfsc	status,2,c
 17425                           
 17426                           ; BSR set to: 1
 17427  011898  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 17428  01189A  D050               	goto	l1507
 17429  01189C  51A2               	movf	(printf@exp+1)& (0+255),w,b
 17430  01189E  E104               	bnz	l18772
 17431  0118A0  0E02               	movlw	2
 17432  0118A2  5DA1               	subwf	printf@exp& (0+255),w,b
 17433  0118A4  A0D8               	btfss	status,0,c
 17434  0118A6  D04A               	goto	l1507
 17435  0118A8                     u25060:
 17436  0118A8                     l18772:
 17437                           
 17438                           ; BSR set to: 1
 17439                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 17440  0118A8  C19D  F117         	movff	printf@tmpval,___flge@ff1
 17441  0118AC  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 17442  0118B0  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 17443  0118B4  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 17444  0118B8  0E5F               	movlw	95
 17445  0118BA  6F1B               	movwf	___flge@ff2& (0+255),b
 17446  0118BC  0E70               	movlw	112
 17447  0118BE  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 17448  0118C0  0E89               	movlw	137
 17449  0118C2  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 17450  0118C4  0E40               	movlw	64
 17451  0118C6  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 17452  0118C8  EC92  F0BA         	call	___flge	;wreg free
 17453  0118CC  0101               	movlb	1	; () banked
 17454  0118CE  B0D8               	btfsc	status,0,c
 17455  0118D0  D002               	goto	l1510
 17456                           
 17457                           ; BSR set to: 1
 17458                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 17459  0118D2  0EF7               	movlw	247
 17460  0118D4  D001               	goto	L3
 17461  0118D6                     l1510:
 17462                           
 17463                           ; BSR set to: 1
 17464                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 17465                           
 17466                           ; BSR set to: 1
 17467  0118D6  0EF8               	movlw	248
 17468  0118D8                     L3:
 17469  0118D8  27A1               	addwf	printf@exp& (0+255),f,b
 17470  0118DA  0EFF               	movlw	255
 17471  0118DC  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 17472                           
 17473                           ; BSR set to: 1
 17474                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 17475                           
 17476                           ; BSR set to: 1
 17477  0118DE  51A1               	movf	printf@exp& (0+255),w,b
 17478  0118E0  EC38  F09C         	call	_scale
 17479  0118E4  C16F  F19D         	movff	?_scale,printf@tmpval
 17480  0118E8  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 17481  0118EC  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 17482  0118F0  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 17483  0118F4  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 17484  0118F8  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 17485  0118FC  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 17486  011900  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 17487  011904  C19D  F11B         	movff	printf@tmpval,__div_to_l_@f2
 17488  011908  C19E  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 17489  01190C  C19F  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 17490  011910  C1A0  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 17491  011914  ECD7  F0B8         	call	__div_to_l_	;wreg free
 17492  011918  C117  F1A7         	movff	?__div_to_l_,printf@val
 17493  01191C  C118  F1A8         	movff	?__div_to_l_+1,printf@val+1
 17494  011920  C119  F1A9         	movff	?__div_to_l_+2,printf@val+2
 17495  011924  C11A  F1AA         	movff	?__div_to_l_+3,printf@val+3
 17496                           
 17497                           ;doprnt.c: 1129: fval = 0.0;
 17498  011928  0E00               	movlw	0
 17499  01192A  0101               	movlb	1	; () banked
 17500  01192C  6FA3               	movwf	printf@fval& (0+255),b
 17501  01192E  0E00               	movlw	0
 17502  011930  6FA4               	movwf	(printf@fval+1)& (0+255),b
 17503  011932  0E00               	movlw	0
 17504  011934  6FA5               	movwf	(printf@fval+2)& (0+255),b
 17505  011936  0E00               	movlw	0
 17506  011938  6FA6               	movwf	(printf@fval+3)& (0+255),b
 17507                           
 17508                           ;doprnt.c: 1130: } else {
 17509  01193A  D03C               	goto	l1516
 17510  01193C                     l1507:
 17511                           
 17512                           ; BSR set to: 1
 17513                           ;doprnt.c: 1131: val = (unsigned long)fval;
 17514                           
 17515                           ; BSR set to: 1
 17516  01193C  C1A3  F178         	movff	printf@fval,___fltol@f1
 17517  011940  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 17518  011944  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 17519  011948  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 17520  01194C  EC41  F0BD         	call	___fltol	;wreg free
 17521  011950  C178  F1A7         	movff	?___fltol,printf@val
 17522  011954  C179  F1A8         	movff	?___fltol+1,printf@val+1
 17523  011958  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 17524  01195C  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 17525                           
 17526                           ;doprnt.c: 1132: fval -= (double)val;
 17527  011960  C1A3  F13D         	movff	printf@fval,___flsub@b
 17528  011964  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 17529  011968  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 17530  01196C  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 17531  011970  C1A7  F117         	movff	printf@val,___xxtofl@val
 17532  011974  C1A8  F118         	movff	printf@val+1,___xxtofl@val+1
 17533  011978  C1A9  F119         	movff	printf@val+2,___xxtofl@val+2
 17534  01197C  C1AA  F11A         	movff	printf@val+3,___xxtofl@val+3
 17535  011980  0E00               	movlw	0
 17536  011982  EC52  F0B6         	call	___xxtofl
 17537  011986  C117  F141         	movff	?___xxtofl,___flsub@a
 17538  01198A  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 17539  01198E  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 17540  011992  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 17541  011996  ECC2  F0C5         	call	___flsub	;wreg free
 17542  01199A  C13D  F1A3         	movff	?___flsub,printf@fval
 17543  01199E  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 17544  0119A2  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 17545  0119A6  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 17546                           
 17547                           ;doprnt.c: 1133: exp = 0;
 17548  0119AA  0E00               	movlw	0
 17549  0119AC  0101               	movlb	1	; () banked
 17550  0119AE  6FA2               	movwf	(printf@exp+1)& (0+255),b
 17551  0119B0  0E00               	movlw	0
 17552  0119B2  6FA1               	movwf	printf@exp& (0+255),b
 17553  0119B4                     l1516:
 17554                           
 17555                           ; BSR set to: 1
 17556                           ;doprnt.c: 1134: }
 17557                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 17558                           
 17559                           ; BSR set to: 1
 17560  0119B4  0E01               	movlw	1
 17561  0119B6  6FB1               	movwf	printf@c& (0+255),b
 17562  0119B8                     l18792:
 17563                           
 17564                           ; BSR set to: 1
 17565  0119B8  0E0A               	movlw	10
 17566  0119BA  19B1               	xorwf	printf@c& (0+255),w,b
 17567  0119BC  B4D8               	btfsc	status,2,c
 17568  0119BE  D01B               	goto	u25100
 17569                           
 17570                           ; BSR set to: 1
 17571                           ;doprnt.c: 1137: if(val < dpowers[c])
 17572                           
 17573                           ; BSR set to: 1
 17574                           
 17575                           ; BSR set to: 1
 17576  0119C0  51B1               	movf	printf@c& (0+255),w,b
 17577  0119C2  0D04               	mullw	4
 17578  0119C4  0E3B               	movlw	low _dpowers
 17579  0119C6  24F3               	addwf	prodl,w,c
 17580  0119C8  6EF6               	movwf	tblptrl,c
 17581  0119CA  0EE4               	movlw	high _dpowers
 17582  0119CC  20F4               	addwfc	prodh,w,c
 17583  0119CE  6EF7               	movwf	tblptrh,c
 17584  0119D0                     	if	1	;There are 3 active tblptr bytes
 17585  0119D0  6AF8               	clrf	tblptru,c
 17586  0119D2  0E00               	movlw	low (__mediumconst shr (0+16))
 17587  0119D4  22F8               	addwfc	tblptru,f,c
 17588  0119D6                     	endif
 17589  0119D6  0009               	tblrd		*+
 17590  0119D8  50F5               	movf	tablat,w,c
 17591  0119DA  5DA7               	subwf	printf@val& (0+255),w,b
 17592  0119DC  0009               	tblrd		*+
 17593  0119DE  50F5               	movf	tablat,w,c
 17594  0119E0  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 17595  0119E2  0009               	tblrd		*+
 17596  0119E4  50F5               	movf	tablat,w,c
 17597  0119E6  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 17598  0119E8  0009               	tblrd		*+
 17599  0119EA  50F5               	movf	tablat,w,c
 17600  0119EC  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 17601  0119EE  A0D8               	btfss	status,0,c
 17602  0119F0  D002               	goto	u25100
 17603                           
 17604                           ; BSR set to: 1
 17605                           
 17606                           ; BSR set to: 1
 17607                           
 17608                           ; BSR set to: 1
 17609                           ;doprnt.c: 1138: break;
 17610  0119F2  2BB1               	incf	printf@c& (0+255),f,b
 17611  0119F4  D7E1               	goto	l18792
 17612  0119F6                     u25100:
 17613                           
 17614                           ; BSR set to: 1
 17615                           ;doprnt.c: 1142: width -= prec + c + exp;
 17616                           
 17617                           ; BSR set to: 1
 17618  0119F6  C1B1  F18C         	movff	printf@c,??_printf
 17619  0119FA  6B8D               	clrf	(??_printf+1)& (0+255),b
 17620  0119FC  BF8C               	btfsc	??_printf& (0+255),7,b
 17621  0119FE  078D               	decf	(??_printf+1)& (0+255),f,b
 17622  011A00  51AF               	movf	printf@prec& (0+255),w,b
 17623  011A02  278C               	addwf	??_printf& (0+255),f,b
 17624  011A04  51B0               	movf	(printf@prec+1)& (0+255),w,b
 17625  011A06  238D               	addwfc	(??_printf+1)& (0+255),f,b
 17626  011A08  51A1               	movf	printf@exp& (0+255),w,b
 17627  011A0A  278C               	addwf	??_printf& (0+255),f,b
 17628  011A0C  51A2               	movf	(printf@exp+1)& (0+255),w,b
 17629  011A0E  238D               	addwfc	(??_printf+1)& (0+255),f,b
 17630  011A10  518C               	movf	??_printf& (0+255),w,b
 17631  011A12  5FAD               	subwf	printf@width& (0+255),f,b
 17632  011A14  518D               	movf	(??_printf+1)& (0+255),w,b
 17633  011A16  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 17634                           
 17635                           ;doprnt.c: 1143: if(
 17636                           ;doprnt.c: 1147: prec)
 17637  011A18  51AF               	movf	printf@prec& (0+255),w,b
 17638  011A1A  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 17639  011A1C  B4D8               	btfsc	status,2,c
 17640  011A1E  D003               	goto	l1520
 17641                           
 17642                           ; BSR set to: 1
 17643                           ;doprnt.c: 1148: width--;
 17644  011A20  07AD               	decf	printf@width& (0+255),f,b
 17645  011A22  A0D8               	btfss	status,0,c
 17646  011A24  07AE               	decf	(printf@width+1)& (0+255),f,b
 17647  011A26                     l1520:
 17648                           
 17649                           ; BSR set to: 1
 17650                           ;doprnt.c: 1149: if(flag & 0x03)
 17651                           
 17652                           ; BSR set to: 1
 17653  011A26  0E03               	movlw	3
 17654  011A28  15AB               	andwf	printf@flag& (0+255),w,b
 17655  011A2A  6F8C               	movwf	??_printf& (0+255),b
 17656  011A2C  0E00               	movlw	0
 17657  011A2E  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 17658  011A30  6F8D               	movwf	(??_printf+1)& (0+255),b
 17659  011A32  518C               	movf	??_printf& (0+255),w,b
 17660  011A34  118D               	iorwf	(??_printf+1)& (0+255),w,b
 17661  011A36  B4D8               	btfsc	status,2,c
 17662  011A38  D003               	goto	l1521
 17663                           
 17664                           ; BSR set to: 1
 17665                           ;doprnt.c: 1150: width--;
 17666  011A3A  07AD               	decf	printf@width& (0+255),f,b
 17667  011A3C  A0D8               	btfss	status,0,c
 17668  011A3E  07AE               	decf	(printf@width+1)& (0+255),f,b
 17669  011A40                     l1521:
 17670                           
 17671                           ; BSR set to: 1
 17672                           ;doprnt.c: 1153: if(flag & 0x04) {
 17673                           
 17674                           ; BSR set to: 1
 17675  011A40  A5AB               	btfss	printf@flag& (0+255),2,b
 17676  011A42  D025               	goto	l1528
 17677                           
 17678                           ; BSR set to: 1
 17679                           ;doprnt.c: 1157: if(flag & 0x03)
 17680  011A44  0E03               	movlw	3
 17681  011A46  15AB               	andwf	printf@flag& (0+255),w,b
 17682  011A48  6F8C               	movwf	??_printf& (0+255),b
 17683  011A4A  0E00               	movlw	0
 17684  011A4C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 17685  011A4E  6F8D               	movwf	(??_printf+1)& (0+255),b
 17686  011A50  518C               	movf	??_printf& (0+255),w,b
 17687  011A52  118D               	iorwf	(??_printf+1)& (0+255),w,b
 17688  011A54  B4D8               	btfsc	status,2,c
 17689  011A56  D00B               	goto	l1524
 17690                           
 17691                           ; BSR set to: 1
 17692                           ;doprnt.c: 1159: (putch('-') );
 17693  011A58  0E2D               	movlw	45
 17694  011A5A  EC25  F0C9         	call	_putch
 17695                           
 17696                           ;doprnt.c: 1168: while(width > 0) {
 17697  011A5E  D007               	goto	l1524
 17698  011A60                     l18818:
 17699                           
 17700                           ;doprnt.c: 1169: (putch('0') );
 17701  011A60  0E30               	movlw	48
 17702  011A62  EC25  F0C9         	call	_putch
 17703                           
 17704                           ;doprnt.c: 1170: width--;
 17705  011A66  0101               	movlb	1	; () banked
 17706  011A68  07AD               	decf	printf@width& (0+255),f,b
 17707  011A6A  A0D8               	btfss	status,0,c
 17708  011A6C  07AE               	decf	(printf@width+1)& (0+255),f,b
 17709  011A6E                     l1524:
 17710                           
 17711                           ; BSR set to: 1
 17712  011A6E  0101               	movlb	1	; () banked
 17713  011A70  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 17714  011A72  D06C               	goto	l1532
 17715  011A74  51AE               	movf	(printf@width+1)& (0+255),w,b
 17716  011A76  E1F4               	bnz	l18818
 17717  011A78  05AD               	decf	printf@width& (0+255),w,b
 17718  011A7A  A0D8               	btfss	status,0,c
 17719  011A7C  D067               	goto	l1532
 17720  011A7E  D7F0               	goto	l1525
 17721  011A80                     l18824:
 17722                           
 17723                           ; BSR set to: 1
 17724                           ;doprnt.c: 1181: (putch(' ') );
 17725  011A80  0E20               	movlw	32
 17726  011A82  EC25  F0C9         	call	_putch
 17727                           
 17728                           ;doprnt.c: 1182: width--;
 17729  011A86  0101               	movlb	1	; () banked
 17730  011A88  07AD               	decf	printf@width& (0+255),f,b
 17731  011A8A  A0D8               	btfss	status,0,c
 17732  011A8C  07AE               	decf	(printf@width+1)& (0+255),f,b
 17733  011A8E                     l1528:
 17734                           
 17735                           ; BSR set to: 1
 17736                           
 17737                           ; BSR set to: 1
 17738  011A8E  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 17739  011A90  D005               	goto	u25160
 17740  011A92  51AE               	movf	(printf@width+1)& (0+255),w,b
 17741  011A94  E1F5               	bnz	l18824
 17742  011A96  05AD               	decf	printf@width& (0+255),w,b
 17743  011A98  B0D8               	btfsc	status,0,c
 17744  011A9A  D7F2               	goto	l1529
 17745  011A9C                     u25160:
 17746                           
 17747                           ; BSR set to: 1
 17748                           ;doprnt.c: 1183: }
 17749                           ;doprnt.c: 1188: if(flag & 0x03)
 17750                           
 17751                           ; BSR set to: 1
 17752  011A9C  0E03               	movlw	3
 17753  011A9E  15AB               	andwf	printf@flag& (0+255),w,b
 17754  011AA0  6F8C               	movwf	??_printf& (0+255),b
 17755  011AA2  0E00               	movlw	0
 17756  011AA4  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 17757  011AA6  6F8D               	movwf	(??_printf+1)& (0+255),b
 17758  011AA8  518C               	movf	??_printf& (0+255),w,b
 17759  011AAA  118D               	iorwf	(??_printf+1)& (0+255),w,b
 17760  011AAC  B4D8               	btfsc	status,2,c
 17761  011AAE  D04E               	goto	l1532
 17762                           
 17763                           ; BSR set to: 1
 17764                           ;doprnt.c: 1190: (putch('-') );
 17765  011AB0  0E2D               	movlw	45
 17766  011AB2  EC25  F0C9         	call	_putch
 17767                           
 17768                           ;doprnt.c: 1195: }
 17769                           ;doprnt.c: 1196: while(c--) {
 17770  011AB6  D04A               	goto	l1532
 17771  011AB8                     
 17772                           ;doprnt.c: 1200: {
 17773                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 17774  011AB8  C1A7  F117         	movff	printf@val,___lldiv@dividend
 17775  011ABC  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 17776  011AC0  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 17777  011AC4  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 17778  011AC8  0101               	movlb	1	; () banked
 17779  011ACA  51B1               	movf	printf@c& (0+255),w,b
 17780  011ACC  0D04               	mullw	4
 17781  011ACE  0E3B               	movlw	low _dpowers
 17782  011AD0  24F3               	addwf	prodl,w,c
 17783  011AD2  6EF6               	movwf	tblptrl,c
 17784  011AD4  0EE4               	movlw	high _dpowers
 17785  011AD6  20F4               	addwfc	prodh,w,c
 17786  011AD8  6EF7               	movwf	tblptrh,c
 17787  011ADA                     	if	1	;There are 3 active tblptr bytes
 17788  011ADA  6AF8               	clrf	tblptru,c
 17789  011ADC  0E00               	movlw	low (__mediumconst shr (0+16))
 17790  011ADE  22F8               	addwfc	tblptru,f,c
 17791  011AE0                     	endif
 17792  011AE0  0009               	tblrd		*+
 17793  011AE2  CFF5 F11B          	movff	tablat,___lldiv@divisor
 17794  011AE6  0009               	tblrd		*+
 17795  011AE8  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 17796  011AEC  0009               	tblrd		*+
 17797  011AEE  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 17798  011AF2  000A               	tblrd		*-
 17799  011AF4  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 17800  011AF8  ECFB  F0C0         	call	___lldiv	;wreg free
 17801  011AFC  C117  F19D         	movff	?___lldiv,printf@tmpval
 17802  011B00  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 17803  011B04  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 17804  011B08  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 17805                           
 17806                           ;doprnt.c: 1202: tmpval.vd %= 10;
 17807  011B0C  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 17808  011B10  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 17809  011B14  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 17810  011B18  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 17811  011B1C  0E0A               	movlw	10
 17812  011B1E  0101               	movlb	1	; () banked
 17813  011B20  6F28               	movwf	___llmod@divisor& (0+255),b
 17814  011B22  0E00               	movlw	0
 17815  011B24  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 17816  011B26  0E00               	movlw	0
 17817  011B28  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 17818  011B2A  0E00               	movlw	0
 17819  011B2C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 17820  011B2E  EC4C  F0C3         	call	___llmod	;wreg free
 17821  011B32  C124  F19D         	movff	?___llmod,printf@tmpval
 17822  011B36  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 17823  011B3A  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 17824  011B3E  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 17825                           
 17826                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 17827  011B42  0101               	movlb	1	; () banked
 17828  011B44  519D               	movf	printf@tmpval& (0+255),w,b
 17829  011B46  0F30               	addlw	48
 17830  011B48  EC25  F0C9         	call	_putch
 17831  011B4C                     l1532:
 17832  011B4C  0101               	movlb	1	; () banked
 17833  011B4E  07B1               	decf	printf@c& (0+255),f,b
 17834  011B50  29B1               	incf	printf@c& (0+255),w,b
 17835  011B52  B4D8               	btfsc	status,2,c
 17836  011B54  D008               	goto	l1535
 17837  011B56  D7B0               	goto	l1533
 17838  011B58                     l18842:
 17839                           
 17840                           ; BSR set to: 1
 17841                           ;doprnt.c: 1208: (putch('0') );
 17842  011B58  0E30               	movlw	48
 17843  011B5A  EC25  F0C9         	call	_putch
 17844                           
 17845                           ;doprnt.c: 1209: exp--;
 17846  011B5E  0101               	movlb	1	; () banked
 17847  011B60  07A1               	decf	printf@exp& (0+255),f,b
 17848  011B62  A0D8               	btfss	status,0,c
 17849  011B64  07A2               	decf	(printf@exp+1)& (0+255),f,b
 17850  011B66                     l1535:
 17851                           
 17852                           ; BSR set to: 1
 17853                           
 17854                           ; BSR set to: 1
 17855  011B66  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 17856  011B68  D005               	goto	u25190
 17857  011B6A  51A2               	movf	(printf@exp+1)& (0+255),w,b
 17858  011B6C  E1F5               	bnz	l18842
 17859  011B6E  05A1               	decf	printf@exp& (0+255),w,b
 17860  011B70  B0D8               	btfsc	status,0,c
 17861  011B72  D7F2               	goto	l1536
 17862  011B74                     u25190:
 17863                           
 17864                           ; BSR set to: 1
 17865                           ;doprnt.c: 1210: }
 17866                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 17867                           
 17868                           ; BSR set to: 1
 17869  011B74  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 17870  011B76  D009               	goto	l1538
 17871  011B78  51B0               	movf	(printf@prec+1)& (0+255),w,b
 17872  011B7A  E104               	bnz	u25200
 17873  011B7C  0E09               	movlw	9
 17874  011B7E  5DAF               	subwf	printf@prec& (0+255),w,b
 17875  011B80  A0D8               	btfss	status,0,c
 17876  011B82  D003               	goto	l1538
 17877  011B84                     u25200:
 17878                           
 17879                           ; BSR set to: 1
 17880                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 17881  011B84  0E08               	movlw	8
 17882  011B86  6FB1               	movwf	printf@c& (0+255),b
 17883  011B88  D002               	goto	l1539
 17884  011B8A                     l1538:
 17885                           
 17886                           ; BSR set to: 1
 17887                           ;doprnt.c: 1213: else
 17888                           ;doprnt.c: 1214: c = prec;
 17889  011B8A  C1AF  F1B1         	movff	printf@prec,printf@c
 17890  011B8E                     l1539:
 17891                           
 17892                           ; BSR set to: 1
 17893                           ;doprnt.c: 1215: prec -= c;
 17894                           
 17895                           ; BSR set to: 1
 17896  011B8E  51B1               	movf	printf@c& (0+255),w,b
 17897  011B90  5FAF               	subwf	printf@prec& (0+255),f,b
 17898  011B92  0E00               	movlw	0
 17899  011B94  BFB1               	btfsc	printf@c& (0+255),7,b
 17900  011B96  0EFF               	movlw	255
 17901  011B98  5BB0               	subwfb	(printf@prec+1)& (0+255),f,b
 17902                           
 17903                           ; BSR set to: 1
 17904                           ;doprnt.c: 1219: if(c)
 17905  011B9A  51B1               	movf	printf@c& (0+255),w,b
 17906  011B9C  B4D8               	btfsc	status,2,c
 17907  011B9E  D003               	goto	l1540
 17908                           
 17909                           ; BSR set to: 1
 17910                           ;doprnt.c: 1221: (putch('.') );
 17911  011BA0  0E2E               	movlw	46
 17912  011BA2  EC25  F0C9         	call	_putch
 17913  011BA6                     l1540:
 17914                           
 17915                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 17916  011BA6  0101               	movlb	1	; () banked
 17917  011BA8  51B1               	movf	printf@c& (0+255),w,b
 17918  011BAA  EC38  F09C         	call	_scale
 17919  011BAE  C16F  F192         	movff	?_scale,_printf$3983
 17920  011BB2  C170  F193         	movff	?_scale+1,_printf$3983+1
 17921  011BB6  C171  F194         	movff	?_scale+2,_printf$3983+2
 17922  011BBA  C172  F195         	movff	?_scale+3,_printf$3983+3
 17923                           
 17924                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 17925  011BBE  C1A3  F15A         	movff	printf@fval,___flmul@a
 17926  011BC2  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 17927  011BC6  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 17928  011BCA  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 17929  011BCE  C192  F156         	movff	_printf$3983,___flmul@b
 17930  011BD2  C193  F157         	movff	_printf$3983+1,___flmul@b+1
 17931  011BD6  C194  F158         	movff	_printf$3983+2,___flmul@b+2
 17932  011BDA  C195  F159         	movff	_printf$3983+3,___flmul@b+3
 17933  011BDE  EC7E  F0A2         	call	___flmul	;wreg free
 17934  011BE2  C156  F178         	movff	?___flmul,___fltol@f1
 17935  011BE6  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 17936  011BEA  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 17937  011BEE  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 17938  011BF2  EC41  F0BD         	call	___fltol	;wreg free
 17939  011BF6  C178  F1A7         	movff	?___fltol,printf@val
 17940  011BFA  C179  F1A8         	movff	?___fltol+1,printf@val+1
 17941  011BFE  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 17942  011C02  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 17943                           
 17944                           ;doprnt.c: 1228: while(c--) {
 17945  011C06  D074               	goto	l1541
 17946  011C08                     
 17947                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 17948  011C08  C1A7  F117         	movff	printf@val,___lldiv@dividend
 17949  011C0C  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 17950  011C10  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 17951  011C14  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 17952  011C18  0101               	movlb	1	; () banked
 17953  011C1A  51B1               	movf	printf@c& (0+255),w,b
 17954  011C1C  0D04               	mullw	4
 17955  011C1E  0E3B               	movlw	low _dpowers
 17956  011C20  24F3               	addwf	prodl,w,c
 17957  011C22  6EF6               	movwf	tblptrl,c
 17958  011C24  0EE4               	movlw	high _dpowers
 17959  011C26  20F4               	addwfc	prodh,w,c
 17960  011C28  6EF7               	movwf	tblptrh,c
 17961  011C2A                     	if	1	;There are 3 active tblptr bytes
 17962  011C2A  6AF8               	clrf	tblptru,c
 17963  011C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 17964  011C2E  22F8               	addwfc	tblptru,f,c
 17965  011C30                     	endif
 17966  011C30  0009               	tblrd		*+
 17967  011C32  CFF5 F11B          	movff	tablat,___lldiv@divisor
 17968  011C36  0009               	tblrd		*+
 17969  011C38  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 17970  011C3C  0009               	tblrd		*+
 17971  011C3E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 17972  011C42  000A               	tblrd		*-
 17973  011C44  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 17974  011C48  ECFB  F0C0         	call	___lldiv	;wreg free
 17975  011C4C  C117  F19D         	movff	?___lldiv,printf@tmpval
 17976  011C50  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 17977  011C54  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 17978  011C58  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 17979                           
 17980                           ;doprnt.c: 1230: tmpval.vd %= 10;
 17981  011C5C  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 17982  011C60  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 17983  011C64  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 17984  011C68  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 17985  011C6C  0E0A               	movlw	10
 17986  011C6E  0101               	movlb	1	; () banked
 17987  011C70  6F28               	movwf	___llmod@divisor& (0+255),b
 17988  011C72  0E00               	movlw	0
 17989  011C74  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 17990  011C76  0E00               	movlw	0
 17991  011C78  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 17992  011C7A  0E00               	movlw	0
 17993  011C7C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 17994  011C7E  EC4C  F0C3         	call	___llmod	;wreg free
 17995  011C82  C124  F19D         	movff	?___llmod,printf@tmpval
 17996  011C86  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 17997  011C8A  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 17998  011C8E  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 17999                           
 18000                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 18001  011C92  0101               	movlb	1	; () banked
 18002  011C94  519D               	movf	printf@tmpval& (0+255),w,b
 18003  011C96  0F30               	addlw	48
 18004  011C98  EC25  F0C9         	call	_putch
 18005                           
 18006                           ;doprnt.c: 1232: val %= dpowers[c];
 18007  011C9C  C1A7  F124         	movff	printf@val,___llmod@dividend
 18008  011CA0  C1A8  F125         	movff	printf@val+1,___llmod@dividend+1
 18009  011CA4  C1A9  F126         	movff	printf@val+2,___llmod@dividend+2
 18010  011CA8  C1AA  F127         	movff	printf@val+3,___llmod@dividend+3
 18011  011CAC  0101               	movlb	1	; () banked
 18012  011CAE  51B1               	movf	printf@c& (0+255),w,b
 18013  011CB0  0D04               	mullw	4
 18014  011CB2  0E3B               	movlw	low _dpowers
 18015  011CB4  24F3               	addwf	prodl,w,c
 18016  011CB6  6EF6               	movwf	tblptrl,c
 18017  011CB8  0EE4               	movlw	high _dpowers
 18018  011CBA  20F4               	addwfc	prodh,w,c
 18019  011CBC  6EF7               	movwf	tblptrh,c
 18020  011CBE                     	if	1	;There are 3 active tblptr bytes
 18021  011CBE  6AF8               	clrf	tblptru,c
 18022  011CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 18023  011CC2  22F8               	addwfc	tblptru,f,c
 18024  011CC4                     	endif
 18025  011CC4  0009               	tblrd		*+
 18026  011CC6  CFF5 F128          	movff	tablat,___llmod@divisor
 18027  011CCA  0009               	tblrd		*+
 18028  011CCC  CFF5 F129          	movff	tablat,___llmod@divisor+1
 18029  011CD0  0009               	tblrd		*+
 18030  011CD2  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 18031  011CD6  000A               	tblrd		*-
 18032  011CD8  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 18033  011CDC  EC4C  F0C3         	call	___llmod	;wreg free
 18034  011CE0  C124  F1A7         	movff	?___llmod,printf@val
 18035  011CE4  C125  F1A8         	movff	?___llmod+1,printf@val+1
 18036  011CE8  C126  F1A9         	movff	?___llmod+2,printf@val+2
 18037  011CEC  C127  F1AA         	movff	?___llmod+3,printf@val+3
 18038  011CF0                     l1541:
 18039  011CF0  0101               	movlb	1	; () banked
 18040  011CF2  07B1               	decf	printf@c& (0+255),f,b
 18041  011CF4  29B1               	incf	printf@c& (0+255),w,b
 18042  011CF6  B4D8               	btfsc	status,2,c
 18043  011CF8  D008               	goto	l1544
 18044  011CFA  D786               	goto	l1542
 18045  011CFC                     
 18046                           ; BSR set to: 1
 18047                           ;doprnt.c: 1236: (putch('0') );
 18048                           
 18049                           ; BSR set to: 1
 18050  011CFC  0E30               	movlw	48
 18051  011CFE  EC25  F0C9         	call	_putch
 18052                           
 18053                           ;doprnt.c: 1237: prec--;
 18054  011D02  0101               	movlb	1	; () banked
 18055  011D04  07AF               	decf	printf@prec& (0+255),f,b
 18056  011D06  A0D8               	btfss	status,0,c
 18057  011D08  07B0               	decf	(printf@prec+1)& (0+255),f,b
 18058  011D0A                     l1544:
 18059                           
 18060                           ; BSR set to: 1
 18061                           
 18062                           ; BSR set to: 1
 18063  011D0A  51AF               	movf	printf@prec& (0+255),w,b
 18064  011D0C  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 18065  011D0E  B4D8               	btfsc	status,2,c
 18066  011D10  D1BE               	goto	u25480
 18067  011D12  D7F4               	goto	l1545
 18068  011D14                     l1498:
 18069                           
 18070                           ; BSR set to: 1
 18071                           ;doprnt.c: 1246: }
 18072                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 18073                           
 18074                           ; BSR set to: 1
 18075  011D14  0EC0               	movlw	192
 18076  011D16  15AB               	andwf	printf@flag& (0+255),w,b
 18077  011D18  6F8C               	movwf	??_printf& (0+255),b
 18078  011D1A  0E00               	movlw	0
 18079  011D1C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 18080  011D1E  6F8D               	movwf	(??_printf+1)& (0+255),b
 18081  011D20  518C               	movf	??_printf& (0+255),w,b
 18082  011D22  118D               	iorwf	(??_printf+1)& (0+255),w,b
 18083  011D24  A4D8               	btfss	status,2,c
 18084  011D26  D01E               	goto	l1547
 18085                           
 18086                           ; BSR set to: 1
 18087                           ;doprnt.c: 1253: {
 18088                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 18089  011D28  C19B  FFD9         	movff	printf@ap,fsr2l
 18090  011D2C  C19C  FFDA         	movff	printf@ap+1,fsr2h
 18091  011D30  CFDE F1A7          	movff	postinc2,printf@val
 18092  011D34  CFDD F1A8          	movff	postdec2,printf@val+1
 18093  011D38  0E00               	movlw	0
 18094  011D3A  BFA8               	btfsc	(printf@val+1)& (0+255),7,b
 18095  011D3C  0EFF               	movlw	-1
 18096  011D3E  6FA9               	movwf	(printf@val+2)& (0+255),b
 18097  011D40  6FAA               	movwf	(printf@val+3)& (0+255),b
 18098                           
 18099                           ; BSR set to: 1
 18100  011D42  0E02               	movlw	2
 18101  011D44  279B               	addwf	printf@ap& (0+255),f,b
 18102  011D46  0E00               	movlw	0
 18103  011D48  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 18104                           
 18105                           ; BSR set to: 1
 18106                           ;doprnt.c: 1261: if((long)val < 0) {
 18107  011D4A  AFAA               	btfss	(printf@val+3)& (0+255),7,b
 18108  011D4C  D01D               	goto	l1549
 18109                           
 18110                           ; BSR set to: 1
 18111                           ;doprnt.c: 1262: flag |= 0x03;
 18112  011D4E  0E03               	movlw	3
 18113  011D50  13AB               	iorwf	printf@flag& (0+255),f,b
 18114                           
 18115                           ; BSR set to: 1
 18116                           ;doprnt.c: 1263: val = -val;
 18117  011D52  1FAA               	comf	(printf@val+3)& (0+255),f,b
 18118  011D54  1FA9               	comf	(printf@val+2)& (0+255),f,b
 18119  011D56  1FA8               	comf	(printf@val+1)& (0+255),f,b
 18120  011D58  6DA7               	negf	printf@val& (0+255),b
 18121  011D5A  0E00               	movlw	0
 18122  011D5C  23A8               	addwfc	(printf@val+1)& (0+255),f,b
 18123  011D5E  23A9               	addwfc	(printf@val+2)& (0+255),f,b
 18124  011D60  23AA               	addwfc	(printf@val+3)& (0+255),f,b
 18125                           
 18126                           ; BSR set to: 1
 18127                           ;doprnt.c: 1264: }
 18128                           ;doprnt.c: 1266: }
 18129  011D62  D012               	goto	l1549
 18130  011D64                     l1547:
 18131                           
 18132                           ; BSR set to: 1
 18133                           ;doprnt.c: 1268: else
 18134                           ;doprnt.c: 1273: {
 18135                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 18136                           
 18137                           ; BSR set to: 1
 18138  011D64  C19B  FFD9         	movff	printf@ap,fsr2l
 18139  011D68  C19C  FFDA         	movff	printf@ap+1,fsr2h
 18140  011D6C  CFDE F18C          	movff	postinc2,??_printf
 18141  011D70  CFDD F18D          	movff	postdec2,??_printf+1
 18142  011D74  C18C  F1A7         	movff	??_printf,printf@val
 18143  011D78  C18D  F1A8         	movff	??_printf+1,printf@val+1
 18144  011D7C  6BA9               	clrf	(printf@val+2)& (0+255),b
 18145  011D7E  6BAA               	clrf	(printf@val+3)& (0+255),b
 18146                           
 18147                           ; BSR set to: 1
 18148  011D80  0E02               	movlw	2
 18149  011D82  279B               	addwf	printf@ap& (0+255),f,b
 18150  011D84  0E00               	movlw	0
 18151  011D86  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 18152  011D88                     l1549:
 18153                           
 18154                           ; BSR set to: 1
 18155                           ;doprnt.c: 1287: }
 18156                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 18157                           
 18158                           ; BSR set to: 1
 18159  011D88  51AF               	movf	printf@prec& (0+255),w,b
 18160  011D8A  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 18161  011D8C  A4D8               	btfss	status,2,c
 18162  011D8E  D04B               	goto	l1551
 18163                           
 18164                           ; BSR set to: 1
 18165  011D90  51A7               	movf	printf@val& (0+255),w,b
 18166  011D92  11A8               	iorwf	(printf@val+1)& (0+255),w,b
 18167  011D94  11A9               	iorwf	(printf@val+2)& (0+255),w,b
 18168  011D96  11AA               	iorwf	(printf@val+3)& (0+255),w,b
 18169  011D98  A4D8               	btfss	status,2,c
 18170  011D9A  D045               	goto	l1551
 18171                           
 18172                           ; BSR set to: 1
 18173                           ;doprnt.c: 1291: prec++;
 18174  011D9C  4BAF               	infsnz	printf@prec& (0+255),f,b
 18175  011D9E  2BB0               	incf	(printf@prec+1)& (0+255),f,b
 18176                           
 18177                           ; BSR set to: 1
 18178                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 18179  011DA0  D042               	goto	l1551
 18180  011DA2                     
 18181                           ; BSR set to: 1
 18182                           ;doprnt.c: 1302: case 0xC0:
 18183                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 18184                           
 18185                           ; BSR set to: 1
 18186                           
 18187                           ; BSR set to: 1
 18188  011DA2  0E01               	movlw	1
 18189  011DA4  6FB1               	movwf	printf@c& (0+255),b
 18190  011DA6                     l18902:
 18191                           
 18192                           ; BSR set to: 1
 18193  011DA6  0E0A               	movlw	10
 18194  011DA8  19B1               	xorwf	printf@c& (0+255),w,b
 18195  011DAA  B4D8               	btfsc	status,2,c
 18196  011DAC  D047               	goto	l1557
 18197                           
 18198                           ; BSR set to: 1
 18199                           ;doprnt.c: 1306: if(val < dpowers[c])
 18200                           
 18201                           ; BSR set to: 1
 18202                           
 18203                           ; BSR set to: 1
 18204  011DAE  51B1               	movf	printf@c& (0+255),w,b
 18205  011DB0  0D04               	mullw	4
 18206  011DB2  0E3B               	movlw	low _dpowers
 18207  011DB4  24F3               	addwf	prodl,w,c
 18208  011DB6  6EF6               	movwf	tblptrl,c
 18209  011DB8  0EE4               	movlw	high _dpowers
 18210  011DBA  20F4               	addwfc	prodh,w,c
 18211  011DBC  6EF7               	movwf	tblptrh,c
 18212  011DBE                     	if	1	;There are 3 active tblptr bytes
 18213  011DBE  6AF8               	clrf	tblptru,c
 18214  011DC0  0E00               	movlw	low (__mediumconst shr (0+16))
 18215  011DC2  22F8               	addwfc	tblptru,f,c
 18216  011DC4                     	endif
 18217  011DC4  0009               	tblrd		*+
 18218  011DC6  50F5               	movf	tablat,w,c
 18219  011DC8  5DA7               	subwf	printf@val& (0+255),w,b
 18220  011DCA  0009               	tblrd		*+
 18221  011DCC  50F5               	movf	tablat,w,c
 18222  011DCE  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 18223  011DD0  0009               	tblrd		*+
 18224  011DD2  50F5               	movf	tablat,w,c
 18225  011DD4  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 18226  011DD6  0009               	tblrd		*+
 18227  011DD8  50F5               	movf	tablat,w,c
 18228  011DDA  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 18229  011DDC  A0D8               	btfss	status,0,c
 18230  011DDE  D02E               	goto	l1557
 18231                           
 18232                           ; BSR set to: 1
 18233                           
 18234                           ; BSR set to: 1
 18235                           
 18236                           ; BSR set to: 1
 18237                           ;doprnt.c: 1307: break;
 18238  011DE0  2BB1               	incf	printf@c& (0+255),f,b
 18239  011DE2  D7E1               	goto	l18902
 18240  011DE4                     
 18241                           ; BSR set to: 1
 18242                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 18243                           
 18244                           ; BSR set to: 1
 18245  011DE4  0E01               	movlw	1
 18246  011DE6  6FB1               	movwf	printf@c& (0+255),b
 18247  011DE8                     l18916:
 18248                           
 18249                           ; BSR set to: 1
 18250  011DE8  0E08               	movlw	8
 18251  011DEA  19B1               	xorwf	printf@c& (0+255),w,b
 18252  011DEC  B4D8               	btfsc	status,2,c
 18253  011DEE  D026               	goto	l1557
 18254                           
 18255                           ; BSR set to: 1
 18256                           ;doprnt.c: 1317: if(val < hexpowers[c])
 18257                           
 18258                           ; BSR set to: 1
 18259                           
 18260                           ; BSR set to: 1
 18261  011DF0  51B1               	movf	printf@c& (0+255),w,b
 18262  011DF2  0D04               	mullw	4
 18263  011DF4  0E63               	movlw	low _hexpowers
 18264  011DF6  24F3               	addwf	prodl,w,c
 18265  011DF8  6EF6               	movwf	tblptrl,c
 18266  011DFA  0EE4               	movlw	high _hexpowers
 18267  011DFC  20F4               	addwfc	prodh,w,c
 18268  011DFE  6EF7               	movwf	tblptrh,c
 18269  011E00                     	if	1	;There are 3 active tblptr bytes
 18270  011E00  6AF8               	clrf	tblptru,c
 18271  011E02  0E00               	movlw	low (__mediumconst shr (0+16))
 18272  011E04  22F8               	addwfc	tblptru,f,c
 18273  011E06                     	endif
 18274  011E06  0009               	tblrd		*+
 18275  011E08  50F5               	movf	tablat,w,c
 18276  011E0A  5DA7               	subwf	printf@val& (0+255),w,b
 18277  011E0C  0009               	tblrd		*+
 18278  011E0E  50F5               	movf	tablat,w,c
 18279  011E10  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 18280  011E12  0009               	tblrd		*+
 18281  011E14  50F5               	movf	tablat,w,c
 18282  011E16  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 18283  011E18  0009               	tblrd		*+
 18284  011E1A  50F5               	movf	tablat,w,c
 18285  011E1C  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 18286  011E1E  A0D8               	btfss	status,0,c
 18287  011E20  D00D               	goto	l1557
 18288                           
 18289                           ; BSR set to: 1
 18290                           
 18291                           ; BSR set to: 1
 18292                           
 18293                           ; BSR set to: 1
 18294                           ;doprnt.c: 1318: break;
 18295  011E22  2BB1               	incf	printf@c& (0+255),f,b
 18296  011E24  D7E1               	goto	l18916
 18297  011E26                     l1551:
 18298                           
 18299                           ; BSR set to: 1
 18300                           
 18301                           ; BSR set to: 1
 18302  011E26  51AB               	movf	printf@flag& (0+255),w,b
 18303  011E28  0BC0               	andlw	192
 18304                           
 18305                           ; Switch size 1, requested type "space"
 18306                           ; Number of cases is 3, Range of values is 0 to 192
 18307                           ; switch strategies available:
 18308                           ; Name         Instructions Cycles
 18309                           ; simple_byte           10     6 (average)
 18310                           ;	Chosen strategy is simple_byte
 18311  011E2A  0A00               	xorlw	0	; case 0
 18312  011E2C  B4D8               	btfsc	status,2,c
 18313  011E2E  D7B9               	goto	l1552
 18314  011E30  0A80               	xorlw	128	; case 128
 18315  011E32  B4D8               	btfsc	status,2,c
 18316  011E34  D7D7               	goto	l1558
 18317  011E36  0A40               	xorlw	64	; case 192
 18318  011E38  B4D8               	btfsc	status,2,c
 18319  011E3A  D7B3               	goto	l1552
 18320  011E3C                     l1557:
 18321                           
 18322                           ; BSR set to: 1
 18323                           ;doprnt.c: 1339: if(c < prec)
 18324                           
 18325                           ; BSR set to: 1
 18326  011E3C  0E80               	movlw	128
 18327  011E3E  BFB1               	btfsc	printf@c& (0+255),7,b
 18328  011E40  0E7F               	movlw	127
 18329  011E42  6F8C               	movwf	??_printf& (0+255),b
 18330  011E44  51AF               	movf	printf@prec& (0+255),w,b
 18331  011E46  5DB1               	subwf	printf@c& (0+255),w,b
 18332  011E48  51B0               	movf	(printf@prec+1)& (0+255),w,b
 18333  011E4A  0A80               	xorlw	128
 18334  011E4C  598C               	subwfb	??_printf& (0+255),w,b
 18335  011E4E  B0D8               	btfsc	status,0,c
 18336  011E50  D003               	goto	l1562
 18337                           
 18338                           ; BSR set to: 1
 18339                           ;doprnt.c: 1340: c = prec;
 18340  011E52  C1AF  F1B1         	movff	printf@prec,printf@c
 18341  011E56  D010               	goto	l1564
 18342  011E58                     l1562:
 18343                           
 18344                           ; BSR set to: 1
 18345                           ;doprnt.c: 1341: else if(prec < c)
 18346                           
 18347                           ; BSR set to: 1
 18348  011E58  51B0               	movf	(printf@prec+1)& (0+255),w,b
 18349  011E5A  0A80               	xorlw	128
 18350  011E5C  6F8C               	movwf	??_printf& (0+255),b
 18351  011E5E  51B1               	movf	printf@c& (0+255),w,b
 18352  011E60  5DAF               	subwf	printf@prec& (0+255),w,b
 18353  011E62  0E80               	movlw	128
 18354  011E64  BFB1               	btfsc	printf@c& (0+255),7,b
 18355  011E66  0E7F               	movlw	127
 18356  011E68  598C               	subwfb	??_printf& (0+255),w,b
 18357  011E6A  B0D8               	btfsc	status,0,c
 18358  011E6C  D005               	goto	l1564
 18359                           
 18360                           ; BSR set to: 1
 18361                           ;doprnt.c: 1342: prec = c;
 18362  011E6E  51B1               	movf	printf@c& (0+255),w,b
 18363  011E70  6FAF               	movwf	printf@prec& (0+255),b
 18364  011E72  6BB0               	clrf	(printf@prec+1)& (0+255),b
 18365  011E74  BFAF               	btfsc	printf@prec& (0+255),7,b
 18366  011E76  07B0               	decf	(printf@prec+1)& (0+255),f,b
 18367  011E78                     l1564:
 18368                           
 18369                           ; BSR set to: 1
 18370                           ;doprnt.c: 1345: if(width && flag & 0x03)
 18371                           
 18372                           ; BSR set to: 1
 18373                           
 18374                           ; BSR set to: 1
 18375  011E78  51AD               	movf	printf@width& (0+255),w,b
 18376  011E7A  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 18377  011E7C  B4D8               	btfsc	status,2,c
 18378  011E7E  D00D               	goto	l1565
 18379                           
 18380                           ; BSR set to: 1
 18381  011E80  0E03               	movlw	3
 18382  011E82  15AB               	andwf	printf@flag& (0+255),w,b
 18383  011E84  6F8C               	movwf	??_printf& (0+255),b
 18384  011E86  0E00               	movlw	0
 18385  011E88  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 18386  011E8A  6F8D               	movwf	(??_printf+1)& (0+255),b
 18387  011E8C  518C               	movf	??_printf& (0+255),w,b
 18388  011E8E  118D               	iorwf	(??_printf+1)& (0+255),w,b
 18389  011E90  B4D8               	btfsc	status,2,c
 18390  011E92  D003               	goto	l1565
 18391                           
 18392                           ; BSR set to: 1
 18393                           ;doprnt.c: 1346: width--;
 18394  011E94  07AD               	decf	printf@width& (0+255),f,b
 18395  011E96  A0D8               	btfss	status,0,c
 18396  011E98  07AE               	decf	(printf@width+1)& (0+255),f,b
 18397  011E9A                     l1565:
 18398                           
 18399                           ; BSR set to: 1
 18400                           ;doprnt.c: 1348: if(flag & 0x4000) {
 18401                           
 18402                           ; BSR set to: 1
 18403  011E9A  ADAC               	btfss	(printf@flag+1)& (0+255),6,b
 18404  011E9C  D013               	goto	l1568
 18405                           
 18406                           ; BSR set to: 1
 18407                           ;doprnt.c: 1349: if(width > prec)
 18408  011E9E  51AD               	movf	printf@width& (0+255),w,b
 18409  011EA0  5DAF               	subwf	printf@prec& (0+255),w,b
 18410  011EA2  51B0               	movf	(printf@prec+1)& (0+255),w,b
 18411  011EA4  0A80               	xorlw	128
 18412  011EA6  6F8C               	movwf	??_printf& (0+255),b
 18413  011EA8  51AE               	movf	(printf@width+1)& (0+255),w,b
 18414  011EAA  0A80               	xorlw	128
 18415  011EAC  598C               	subwfb	??_printf& (0+255),w,b
 18416  011EAE  B0D8               	btfsc	status,0,c
 18417  011EB0  D005               	goto	l1567
 18418                           
 18419                           ; BSR set to: 1
 18420                           ;doprnt.c: 1350: width -= prec;
 18421  011EB2  51AF               	movf	printf@prec& (0+255),w,b
 18422  011EB4  5FAD               	subwf	printf@width& (0+255),f,b
 18423  011EB6  51B0               	movf	(printf@prec+1)& (0+255),w,b
 18424  011EB8  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 18425  011EBA  D004               	goto	l1568
 18426  011EBC                     l1567:
 18427                           
 18428                           ; BSR set to: 1
 18429                           ;doprnt.c: 1351: else
 18430                           ;doprnt.c: 1352: width = 0;
 18431                           
 18432                           ; BSR set to: 1
 18433  011EBC  0E00               	movlw	0
 18434  011EBE  6FAE               	movwf	(printf@width+1)& (0+255),b
 18435  011EC0  0E00               	movlw	0
 18436  011EC2  6FAD               	movwf	printf@width& (0+255),b
 18437  011EC4                     l1568:
 18438                           
 18439                           ; BSR set to: 1
 18440                           ;doprnt.c: 1353: }
 18441                           ;doprnt.c: 1381: if(width > c)
 18442                           
 18443                           ; BSR set to: 1
 18444                           
 18445                           ; BSR set to: 1
 18446  011EC4  0E80               	movlw	128
 18447  011EC6  BFB1               	btfsc	printf@c& (0+255),7,b
 18448  011EC8  0E7F               	movlw	127
 18449  011ECA  6F8C               	movwf	??_printf& (0+255),b
 18450  011ECC  51AD               	movf	printf@width& (0+255),w,b
 18451  011ECE  5DB1               	subwf	printf@c& (0+255),w,b
 18452  011ED0  51AE               	movf	(printf@width+1)& (0+255),w,b
 18453  011ED2  0A80               	xorlw	128
 18454  011ED4  598C               	subwfb	??_printf& (0+255),w,b
 18455  011ED6  B0D8               	btfsc	status,0,c
 18456  011ED8  D007               	goto	l1569
 18457                           
 18458                           ; BSR set to: 1
 18459                           ;doprnt.c: 1382: width -= c;
 18460  011EDA  51B1               	movf	printf@c& (0+255),w,b
 18461  011EDC  5FAD               	subwf	printf@width& (0+255),f,b
 18462  011EDE  0E00               	movlw	0
 18463  011EE0  BFB1               	btfsc	printf@c& (0+255),7,b
 18464  011EE2  0EFF               	movlw	255
 18465  011EE4  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 18466  011EE6  D004               	goto	l1570
 18467  011EE8                     l1569:
 18468                           
 18469                           ; BSR set to: 1
 18470                           ;doprnt.c: 1383: else
 18471                           ;doprnt.c: 1384: width = 0;
 18472                           
 18473                           ; BSR set to: 1
 18474  011EE8  0E00               	movlw	0
 18475  011EEA  6FAE               	movwf	(printf@width+1)& (0+255),b
 18476  011EEC  0E00               	movlw	0
 18477  011EEE  6FAD               	movwf	printf@width& (0+255),b
 18478  011EF0                     l1570:
 18479                           
 18480                           ; BSR set to: 1
 18481                           ;doprnt.c: 1387: if(flag & 0x04) {
 18482                           
 18483                           ; BSR set to: 1
 18484  011EF0  A5AB               	btfss	printf@flag& (0+255),2,b
 18485  011EF2  D01A               	goto	l1571
 18486                           
 18487                           ; BSR set to: 1
 18488                           ;doprnt.c: 1392: if(flag & 0x03)
 18489  011EF4  0E03               	movlw	3
 18490  011EF6  15AB               	andwf	printf@flag& (0+255),w,b
 18491  011EF8  6F8C               	movwf	??_printf& (0+255),b
 18492  011EFA  0E00               	movlw	0
 18493  011EFC  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 18494  011EFE  6F8D               	movwf	(??_printf+1)& (0+255),b
 18495  011F00  518C               	movf	??_printf& (0+255),w,b
 18496  011F02  118D               	iorwf	(??_printf+1)& (0+255),w,b
 18497  011F04  B4D8               	btfsc	status,2,c
 18498  011F06  D003               	goto	l1572
 18499                           
 18500                           ; BSR set to: 1
 18501                           ;doprnt.c: 1393: (putch('-') );
 18502  011F08  0E2D               	movlw	45
 18503  011F0A  EC25  F0C9         	call	_putch
 18504  011F0E                     l1572:
 18505                           
 18506                           ;doprnt.c: 1415: if(width)
 18507  011F0E  0101               	movlb	1	; () banked
 18508  011F10  51AD               	movf	printf@width& (0+255),w,b
 18509  011F12  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 18510  011F14  B4D8               	btfsc	status,2,c
 18511  011F16  D0B2               	goto	l1581
 18512                           
 18513                           ; BSR set to: 1
 18514                           ;doprnt.c: 1417: (putch('0') );
 18515                           
 18516                           ; BSR set to: 1
 18517                           
 18518                           ;doprnt.c: 1416: do
 18519  011F18  0E30               	movlw	48
 18520  011F1A  EC25  F0C9         	call	_putch
 18521                           
 18522                           ;doprnt.c: 1418: while(--width);
 18523  011F1E  0101               	movlb	1	; () banked
 18524  011F20  07AD               	decf	printf@width& (0+255),f,b
 18525  011F22  A0D8               	btfss	status,0,c
 18526  011F24  07AE               	decf	(printf@width+1)& (0+255),f,b
 18527  011F26  D7F4               	goto	L25
 18528  011F28                     l1571:
 18529                           
 18530                           ; BSR set to: 1
 18531                           ;doprnt.c: 1422: {
 18532                           ;doprnt.c: 1424: if(width
 18533                           ;doprnt.c: 1428: )
 18534                           
 18535                           ; BSR set to: 1
 18536  011F28  51AD               	movf	printf@width& (0+255),w,b
 18537  011F2A  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 18538  011F2C  B4D8               	btfsc	status,2,c
 18539  011F2E  D00B               	goto	u25460
 18540  011F30                     u25450:
 18541                           
 18542                           ; BSR set to: 1
 18543                           ;doprnt.c: 1430: (putch(' ') );
 18544                           
 18545                           ; BSR set to: 1
 18546                           
 18547                           ;doprnt.c: 1429: do
 18548  011F30  0E20               	movlw	32
 18549  011F32  EC25  F0C9         	call	_putch
 18550                           
 18551                           ;doprnt.c: 1431: while(--width);
 18552  011F36  0101               	movlb	1	; () banked
 18553  011F38  07AD               	decf	printf@width& (0+255),f,b
 18554  011F3A  A0D8               	btfss	status,0,c
 18555  011F3C  07AE               	decf	(printf@width+1)& (0+255),f,b
 18556  011F3E  51AD               	movf	printf@width& (0+255),w,b
 18557  011F40  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 18558  011F42  A4D8               	btfss	status,2,c
 18559  011F44  D7F5               	goto	u25450
 18560  011F46                     u25460:
 18561                           
 18562                           ; BSR set to: 1
 18563                           ;doprnt.c: 1438: if(flag & 0x03)
 18564                           
 18565                           ; BSR set to: 1
 18566                           
 18567                           ; BSR set to: 1
 18568  011F46  0E03               	movlw	3
 18569  011F48  15AB               	andwf	printf@flag& (0+255),w,b
 18570  011F4A  6F8C               	movwf	??_printf& (0+255),b
 18571  011F4C  0E00               	movlw	0
 18572  011F4E  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 18573  011F50  6F8D               	movwf	(??_printf+1)& (0+255),b
 18574  011F52  518C               	movf	??_printf& (0+255),w,b
 18575  011F54  118D               	iorwf	(??_printf+1)& (0+255),w,b
 18576  011F56  B4D8               	btfsc	status,2,c
 18577  011F58  D091               	goto	l1581
 18578                           
 18579                           ; BSR set to: 1
 18580                           ;doprnt.c: 1439: (putch('-') );
 18581  011F5A  0E2D               	movlw	45
 18582  011F5C  EC25  F0C9         	call	_putch
 18583                           
 18584                           ;doprnt.c: 1469: }
 18585                           ;doprnt.c: 1474: while(prec--) {
 18586  011F60  D08D               	goto	l1581
 18587  011F62                     
 18588                           ;doprnt.c: 1486: case 0xC0:
 18589                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18590  011F62  C1AF  F18C         	movff	printf@prec,??_printf
 18591  011F66  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 18592  011F6A  0101               	movlb	1	; () banked
 18593  011F6C  90D8               	bcf	status,0,c
 18594  011F6E  378C               	rlcf	??_printf& (0+255),f,b
 18595  011F70  378D               	rlcf	(??_printf+1)& (0+255),f,b
 18596  011F72  90D8               	bcf	status,0,c
 18597  011F74  378C               	rlcf	??_printf& (0+255),f,b
 18598  011F76  378D               	rlcf	(??_printf+1)& (0+255),f,b
 18599  011F78  0E3B               	movlw	low _dpowers
 18600  011F7A  258C               	addwf	??_printf& (0+255),w,b
 18601  011F7C  6EF6               	movwf	tblptrl,c
 18602  011F7E  0EE4               	movlw	high _dpowers
 18603  011F80  218D               	addwfc	(??_printf+1)& (0+255),w,b
 18604  011F82  6EF7               	movwf	tblptrh,c
 18605  011F84                     	if	1	;There are 3 active tblptr bytes
 18606  011F84  6AF8               	clrf	tblptru,c
 18607  011F86  0E00               	movlw	low (__mediumconst shr (0+16))
 18608  011F88  22F8               	addwfc	tblptru,f,c
 18609  011F8A                     	endif
 18610  011F8A  0009               	tblrd		*+
 18611  011F8C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 18612  011F90  0009               	tblrd		*+
 18613  011F92  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 18614  011F96  0009               	tblrd		*+
 18615  011F98  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 18616  011F9C  000A               	tblrd		*-
 18617  011F9E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 18618  011FA2  C1A7  F117         	movff	printf@val,___lldiv@dividend
 18619  011FA6  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 18620  011FAA  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 18621  011FAE  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 18622  011FB2  ECFB  F0C0         	call	___lldiv	;wreg free
 18623  011FB6  C117  F124         	movff	?___lldiv,___llmod@dividend
 18624  011FBA  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 18625  011FBE  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 18626  011FC2  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 18627  011FC6  0E0A               	movlw	10
 18628  011FC8  0101               	movlb	1	; () banked
 18629  011FCA  6F28               	movwf	___llmod@divisor& (0+255),b
 18630  011FCC  0E00               	movlw	0
 18631  011FCE  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 18632  011FD0  0E00               	movlw	0
 18633  011FD2  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 18634  011FD4  0E00               	movlw	0
 18635  011FD6  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 18636  011FD8  EC4C  F0C3         	call	___llmod	;wreg free
 18637  011FDC  0101               	movlb	1	; () banked
 18638  011FDE  5124               	movf	?___llmod& (0+255),w,b
 18639  011FE0  0F30               	addlw	48
 18640  011FE2  6FB1               	movwf	printf@c& (0+255),b
 18641                           
 18642                           ;doprnt.c: 1491: break;
 18643  011FE4  D048               	goto	l1586
 18644  011FE6                     
 18645                           ; BSR set to: 1
 18646                           ;doprnt.c: 1499: {
 18647                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 18648                           
 18649                           ; BSR set to: 1
 18650  011FE6  C1A7  F117         	movff	printf@val,___lldiv@dividend
 18651  011FEA  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 18652  011FEE  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 18653  011FF2  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 18654  011FF6  C1AF  F18C         	movff	printf@prec,??_printf
 18655  011FFA  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 18656  011FFE  90D8               	bcf	status,0,c
 18657  012000  378C               	rlcf	??_printf& (0+255),f,b
 18658  012002  378D               	rlcf	(??_printf+1)& (0+255),f,b
 18659  012004  90D8               	bcf	status,0,c
 18660  012006  378C               	rlcf	??_printf& (0+255),f,b
 18661  012008  378D               	rlcf	(??_printf+1)& (0+255),f,b
 18662  01200A  0E63               	movlw	low _hexpowers
 18663  01200C  258C               	addwf	??_printf& (0+255),w,b
 18664  01200E  6EF6               	movwf	tblptrl,c
 18665  012010  0EE4               	movlw	high _hexpowers
 18666  012012  218D               	addwfc	(??_printf+1)& (0+255),w,b
 18667  012014  6EF7               	movwf	tblptrh,c
 18668  012016                     	if	1	;There are 3 active tblptr bytes
 18669  012016  6AF8               	clrf	tblptru,c
 18670  012018  0E00               	movlw	low (__mediumconst shr (0+16))
 18671  01201A  22F8               	addwfc	tblptru,f,c
 18672  01201C                     	endif
 18673  01201C  0009               	tblrd		*+
 18674  01201E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 18675  012022  0009               	tblrd		*+
 18676  012024  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 18677  012028  0009               	tblrd		*+
 18678  01202A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 18679  01202E  000A               	tblrd		*-
 18680  012030  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 18681  012034  ECFB  F0C0         	call	___lldiv	;wreg free
 18682  012038  0101               	movlb	1	; () banked
 18683  01203A  5117               	movf	?___lldiv& (0+255),w,b
 18684  01203C  0B0F               	andlw	15
 18685  01203E  6F96               	movwf	printf@idx& (0+255),b
 18686                           
 18687                           ; BSR set to: 1
 18688                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 18689  012040  5196               	movf	printf@idx& (0+255),w,b
 18690  012042  0D01               	mullw	1
 18691  012044  0E80               	movlw	low STR_163
 18692  012046  24F3               	addwf	prodl,w,c
 18693  012048  6EF6               	movwf	tblptrl,c
 18694  01204A  0EFD               	movlw	high STR_163
 18695  01204C  20F4               	addwfc	prodh,w,c
 18696  01204E  6EF7               	movwf	tblptrh,c
 18697  012050                     	if	1	;There are 3 active tblptr bytes
 18698  012050  6AF8               	clrf	tblptru,c
 18699  012052  0E00               	movlw	low (__mediumconst shr (0+16))
 18700  012054  22F8               	addwfc	tblptru,f,c
 18701  012056                     	endif
 18702  012056  0008               	tblrd		*
 18703  012058  CFF5 F1B1          	movff	tablat,printf@c
 18704                           
 18705                           ; BSR set to: 1
 18706                           ;doprnt.c: 1523: }
 18707                           
 18708                           ;doprnt.c: 1508: }
 18709                           ;doprnt.c: 1510: break;
 18710  01205C  D00C               	goto	l1586
 18711  01205E                     l18990:
 18712  01205E  0101               	movlb	1	; () banked
 18713  012060  51AB               	movf	printf@flag& (0+255),w,b
 18714  012062  0BC0               	andlw	192
 18715                           
 18716                           ; Switch size 1, requested type "space"
 18717                           ; Number of cases is 3, Range of values is 0 to 192
 18718                           ; switch strategies available:
 18719                           ; Name         Instructions Cycles
 18720                           ; simple_byte           10     6 (average)
 18721                           ;	Chosen strategy is simple_byte
 18722  012064  0A00               	xorlw	0	; case 0
 18723  012066  B4D8               	btfsc	status,2,c
 18724  012068  D77C               	goto	l1584
 18725  01206A  0A80               	xorlw	128	; case 128
 18726  01206C  B4D8               	btfsc	status,2,c
 18727  01206E  D7BB               	goto	l1587
 18728  012070  0A40               	xorlw	64	; case 192
 18729  012072  B4D8               	btfsc	status,2,c
 18730  012074  D776               	goto	l1584
 18731  012076                     l1586:
 18732                           
 18733                           ; BSR set to: 1
 18734                           ;doprnt.c: 1524: (putch(c) );
 18735                           
 18736                           ; BSR set to: 1
 18737  012076  51B1               	movf	printf@c& (0+255),w,b
 18738  012078  EC25  F0C9         	call	_putch
 18739  01207C                     l1581:
 18740  01207C  0101               	movlb	1	; () banked
 18741  01207E  07AF               	decf	printf@prec& (0+255),f,b
 18742  012080  A0D8               	btfss	status,0,c
 18743  012082  07B0               	decf	(printf@prec+1)& (0+255),f,b
 18744  012084  29AF               	incf	printf@prec& (0+255),w,b
 18745  012086  E1EB               	bnz	l18990
 18746  012088  29B0               	incf	(printf@prec+1)& (0+255),w,b
 18747  01208A  A4D8               	btfss	status,2,c
 18748  01208C  D7E8               	goto	l1583
 18749  01208E                     u25480:
 18750                           
 18751                           ; BSR set to: 1
 18752                           
 18753                           ; BSR set to: 1
 18754  01208E  0101               	movlb	1	; () banked
 18755  012090  5182               	movf	printf@f& (0+255),w,b
 18756  012092  6F8C               	movwf	??_printf& (0+255),b
 18757  012094  5183               	movf	(printf@f+1)& (0+255),w,b
 18758  012096  6F8D               	movwf	(??_printf+1)& (0+255),b
 18759  012098  4B82               	infsnz	printf@f& (0+255),f,b
 18760  01209A  2B83               	incf	(printf@f+1)& (0+255),f,b
 18761  01209C  C18C  FFF6         	movff	??_printf,tblptrl
 18762  0120A0  C18D  FFF7         	movff	??_printf+1,tblptrh
 18763  0120A4  0E00               	movlw	low (__mediumconst shr (0+16))
 18764  0120A6  6EF8               	movwf	tblptru,c
 18765  0120A8  0E0D               	movlw	(high __ramtop+-1)
 18766  0120AA  64F7               	cpfsgt	tblptrh,c
 18767  0120AC  D003               	bra	u25497
 18768  0120AE  0008               	tblrd		*
 18769  0120B0  50F5               	movf	tablat,w,c
 18770  0120B2  D005               	bra	u25490
 18771  0120B4                     u25497:
 18772  0120B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 18773  0120B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 18774  0120BC  50EF               	movf	indf0,w,c
 18775  0120BE                     u25490:
 18776  0120BE  0101               	movlb	1	; () banked
 18777  0120C0  6FB1               	movwf	printf@c& (0+255),b
 18778  0120C2  51B1               	movf	printf@c& (0+255),w,b
 18779  0120C4  B4D8               	btfsc	status,2,c
 18780  0120C6  0012               	return	
 18781  0120C8  EF86  F089         	goto	l1455
 18782  0120CC                     __end_of_printf:
 18783                           	opt stack 0
 18784                           tblptru	equ	0xFF8
 18785                           tblptrh	equ	0xFF7
 18786                           tblptrl	equ	0xFF6
 18787                           tablat	equ	0xFF5
 18788                           prodh	equ	0xFF4
 18789                           prodl	equ	0xFF3
 18790                           intcon	equ	0xFF2
 18791                           indf0	equ	0xFEF
 18792                           postinc0	equ	0xFEE
 18793                           fsr0h	equ	0xFEA
 18794                           fsr0l	equ	0xFE9
 18795                           wreg	equ	0xFE8
 18796                           indf1	equ	0xFE7
 18797                           postdec1	equ	0xFE5
 18798                           plusw1	equ	0xFE3
 18799                           fsr1h	equ	0xFE2
 18800                           fsr1l	equ	0xFE1
 18801                           indf2	equ	0xFDF
 18802                           postinc2	equ	0xFDE
 18803                           postdec2	equ	0xFDD
 18804                           plusw2	equ	0xFDB
 18805                           fsr2h	equ	0xFDA
 18806                           fsr2l	equ	0xFD9
 18807                           status	equ	0xFD8
 18808                           
 18809 ;; *************** function _scale *****************
 18810 ;; Defined at:
 18811 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18812 ;; Parameters:    Size  Location     Type
 18813 ;;  scl             1    wreg     char 
 18814 ;; Auto vars:     Size  Location     Type
 18815 ;;  scl             1  119[BANK1 ] char 
 18816 ;; Return value:  Size  Location     Type
 18817 ;;                  4  111[BANK1 ] char 
 18818 ;; Registers used:
 18819 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18820 ;; Tracked objects:
 18821 ;;		On entry : 0/0
 18822 ;;		On exit  : 0/0
 18823 ;;		Unchanged: 0/0
 18824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18825 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18826 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18828 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18829 ;;Total ram usage:        9 bytes
 18830 ;; Hardware stack levels used:    1
 18831 ;; Hardware stack levels required when called:   14
 18832 ;; This function calls:
 18833 ;;		___awdiv
 18834 ;;		___awmod
 18835 ;;		___flmul
 18836 ;; This function is called by:
 18837 ;;		_printf
 18838 ;; This function uses a non-reentrant model
 18839 ;;
 18840                           
 18841                           	psect	text29
 18842  013870                     __ptext29:
 18843                           	opt stack 0
 18844  013870                     _scale:
 18845                           	opt stack 13
 18846                           
 18847                           ; BSR set to: 1
 18848                           ;incstack = 0
 18849                           ;scale@scl stored from wreg
 18850  013870  0101               	movlb	1	; () banked
 18851  013872  6F77               	movwf	scale@scl& (0+255),b
 18852                           
 18853                           ;doprnt.c: 428: if(scl < 0) {
 18854  013874  0101               	movlb	1	; () banked
 18855  013876  AF77               	btfss	scale@scl& (0+255),7,b
 18856  013878  D127               	goto	l1444
 18857                           
 18858                           ; BSR set to: 1
 18859                           ;doprnt.c: 429: scl = -scl;
 18860  01387A  6D77               	negf	scale@scl& (0+255),b
 18861                           
 18862                           ;doprnt.c: 430: if(scl>=110)
 18863  01387C  5177               	movf	scale@scl& (0+255),w,b
 18864  01387E  0A80               	xorlw	128
 18865  013880  0F12               	addlw	-238
 18866  013882  A0D8               	btfss	status,0,c
 18867  013884  D0A5               	goto	l1445
 18868                           
 18869                           ; BSR set to: 1
 18870                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 18871  013886  0E00               	movlw	0
 18872  013888  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 18873  01388A  0E0A               	movlw	10
 18874  01388C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 18875  01388E  0E00               	movlw	0
 18876  013890  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18877  013892  0E64               	movlw	100
 18878  013894  6F19               	movwf	___awmod@divisor& (0+255),b
 18879  013896  5177               	movf	scale@scl& (0+255),w,b
 18880  013898  6F17               	movwf	___awmod@dividend& (0+255),b
 18881  01389A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18882  01389C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 18883  01389E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 18884  0138A0  EC3B  F0C2         	call	___awmod	;wreg free
 18885  0138A4  C117  F11D         	movff	?___awmod,___awdiv@dividend
 18886  0138A8  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 18887  0138AC  ECB8  F0C0         	call	___awdiv	;wreg free
 18888  0138B0  0101               	movlb	1	; () banked
 18889  0138B2  90D8               	bcf	status,0,c
 18890  0138B4  371D               	rlcf	?___awdiv& (0+255),f,b
 18891  0138B6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18892  0138B8  90D8               	bcf	status,0,c
 18893  0138BA  371D               	rlcf	?___awdiv& (0+255),f,b
 18894  0138BC  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18895  0138BE  0E24               	movlw	36
 18896  0138C0  271D               	addwf	?___awdiv& (0+255),f,b
 18897  0138C2  0E00               	movlw	0
 18898  0138C4  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 18899  0138C6  0E07               	movlw	low __npowers_
 18900  0138C8  251D               	addwf	?___awdiv& (0+255),w,b
 18901  0138CA  6EF6               	movwf	tblptrl,c
 18902  0138CC  0EE4               	movlw	high __npowers_
 18903  0138CE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 18904  0138D0  6EF7               	movwf	tblptrh,c
 18905  0138D2                     	if	1	;There are 3 active tblptr bytes
 18906  0138D2  6AF8               	clrf	tblptru,c
 18907  0138D4  0E00               	movlw	low (__mediumconst shr (0+16))
 18908  0138D6  22F8               	addwfc	tblptru,f,c
 18909  0138D8                     	endif
 18910  0138D8  0009               	tblrd		*+
 18911  0138DA  CFF5 F15A          	movff	tablat,___flmul@a
 18912  0138DE  0009               	tblrd		*+
 18913  0138E0  CFF5 F15B          	movff	tablat,___flmul@a+1
 18914  0138E4  0009               	tblrd		*+
 18915  0138E6  CFF5 F15C          	movff	tablat,___flmul@a+2
 18916  0138EA  000A               	tblrd		*-
 18917  0138EC  CFF5 F15D          	movff	tablat,___flmul@a+3
 18918  0138F0  0E00               	movlw	0
 18919  0138F2  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 18920  0138F4  0E64               	movlw	100
 18921  0138F6  6F1F               	movwf	___awdiv@divisor& (0+255),b
 18922  0138F8  5177               	movf	scale@scl& (0+255),w,b
 18923  0138FA  6F1D               	movwf	___awdiv@dividend& (0+255),b
 18924  0138FC  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18925  0138FE  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 18926  013900  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 18927  013902  ECB8  F0C0         	call	___awdiv	;wreg free
 18928  013906  0101               	movlb	1	; () banked
 18929  013908  90D8               	bcf	status,0,c
 18930  01390A  371D               	rlcf	?___awdiv& (0+255),f,b
 18931  01390C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18932  01390E  90D8               	bcf	status,0,c
 18933  013910  371D               	rlcf	?___awdiv& (0+255),f,b
 18934  013912  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 18935  013914  0E48               	movlw	72
 18936  013916  271D               	addwf	?___awdiv& (0+255),f,b
 18937  013918  0E00               	movlw	0
 18938  01391A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 18939  01391C  0E07               	movlw	low __npowers_
 18940  01391E  251D               	addwf	?___awdiv& (0+255),w,b
 18941  013920  6EF6               	movwf	tblptrl,c
 18942  013922  0EE4               	movlw	high __npowers_
 18943  013924  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 18944  013926  6EF7               	movwf	tblptrh,c
 18945  013928                     	if	1	;There are 3 active tblptr bytes
 18946  013928  6AF8               	clrf	tblptru,c
 18947  01392A  0E00               	movlw	low (__mediumconst shr (0+16))
 18948  01392C  22F8               	addwfc	tblptru,f,c
 18949  01392E                     	endif
 18950  01392E  0009               	tblrd		*+
 18951  013930  CFF5 F156          	movff	tablat,___flmul@b
 18952  013934  0009               	tblrd		*+
 18953  013936  CFF5 F157          	movff	tablat,___flmul@b+1
 18954  01393A  0009               	tblrd		*+
 18955  01393C  CFF5 F158          	movff	tablat,___flmul@b+2
 18956  013940  000A               	tblrd		*-
 18957  013942  CFF5 F159          	movff	tablat,___flmul@b+3
 18958  013946  EC7E  F0A2         	call	___flmul	;wreg free
 18959  01394A  C156  F173         	movff	?___flmul,_scale$3982
 18960  01394E  C157  F174         	movff	?___flmul+1,_scale$3982+1
 18961  013952  C158  F175         	movff	?___flmul+2,_scale$3982+2
 18962  013956  C159  F176         	movff	?___flmul+3,_scale$3982+3
 18963                           
 18964                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 18965  01395A  C173  F156         	movff	_scale$3982,___flmul@b
 18966  01395E  C174  F157         	movff	_scale$3982+1,___flmul@b+1
 18967  013962  C175  F158         	movff	_scale$3982+2,___flmul@b+2
 18968  013966  C176  F159         	movff	_scale$3982+3,___flmul@b+3
 18969  01396A  0E00               	movlw	0
 18970  01396C  0101               	movlb	1	; () banked
 18971  01396E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 18972  013970  0E0A               	movlw	10
 18973  013972  6F19               	movwf	___awmod@divisor& (0+255),b
 18974  013974  5177               	movf	scale@scl& (0+255),w,b
 18975  013976  6F17               	movwf	___awmod@dividend& (0+255),b
 18976  013978  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 18977  01397A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 18978  01397C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 18979  01397E  EC3B  F0C2         	call	___awmod	;wreg free
 18980  013982  0101               	movlb	1	; () banked
 18981  013984  90D8               	bcf	status,0,c
 18982  013986  3717               	rlcf	?___awmod& (0+255),f,b
 18983  013988  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18984  01398A  90D8               	bcf	status,0,c
 18985  01398C  3717               	rlcf	?___awmod& (0+255),f,b
 18986  01398E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 18987  013990  0E07               	movlw	low __npowers_
 18988  013992  2517               	addwf	?___awmod& (0+255),w,b
 18989  013994  6EF6               	movwf	tblptrl,c
 18990  013996  0EE4               	movlw	high __npowers_
 18991  013998  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 18992  01399A  6EF7               	movwf	tblptrh,c
 18993  01399C                     	if	1	;There are 3 active tblptr bytes
 18994  01399C  6AF8               	clrf	tblptru,c
 18995  01399E  0E00               	movlw	low (__mediumconst shr (0+16))
 18996  0139A0  22F8               	addwfc	tblptru,f,c
 18997  0139A2                     	endif
 18998  0139A2  0009               	tblrd		*+
 18999  0139A4  CFF5 F15A          	movff	tablat,___flmul@a
 19000  0139A8  0009               	tblrd		*+
 19001  0139AA  CFF5 F15B          	movff	tablat,___flmul@a+1
 19002  0139AE  0009               	tblrd		*+
 19003  0139B0  CFF5 F15C          	movff	tablat,___flmul@a+2
 19004  0139B4  000A               	tblrd		*-
 19005  0139B6  CFF5 F15D          	movff	tablat,___flmul@a+3
 19006  0139BA  EC7E  F0A2         	call	___flmul	;wreg free
 19007  0139BE  C156  F16F         	movff	?___flmul,?_scale
 19008  0139C2  C157  F170         	movff	?___flmul+1,?_scale+1
 19009  0139C6  C158  F171         	movff	?___flmul+2,?_scale+2
 19010  0139CA  C159  F172         	movff	?___flmul+3,?_scale+3
 19011  0139CE  0012               	return	
 19012  0139D0                     l1445:
 19013                           
 19014                           ;doprnt.c: 432: else if(scl > 10)
 19015  0139D0  0101               	movlb	1	; () banked
 19016  0139D2  5177               	movf	scale@scl& (0+255),w,b
 19017  0139D4  0A80               	xorlw	128
 19018  0139D6  0F75               	addlw	-139
 19019  0139D8  A0D8               	btfss	status,0,c
 19020  0139DA  D05D               	goto	l1448
 19021                           
 19022                           ; BSR set to: 1
 19023                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 19024  0139DC  0E00               	movlw	0
 19025  0139DE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 19026  0139E0  0E0A               	movlw	10
 19027  0139E2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 19028  0139E4  5177               	movf	scale@scl& (0+255),w,b
 19029  0139E6  6F1D               	movwf	___awdiv@dividend& (0+255),b
 19030  0139E8  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19031  0139EA  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 19032  0139EC  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 19033  0139EE  ECB8  F0C0         	call	___awdiv	;wreg free
 19034  0139F2  0101               	movlb	1	; () banked
 19035  0139F4  90D8               	bcf	status,0,c
 19036  0139F6  371D               	rlcf	?___awdiv& (0+255),f,b
 19037  0139F8  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19038  0139FA  90D8               	bcf	status,0,c
 19039  0139FC  371D               	rlcf	?___awdiv& (0+255),f,b
 19040  0139FE  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19041  013A00  0E24               	movlw	36
 19042  013A02  271D               	addwf	?___awdiv& (0+255),f,b
 19043  013A04  0E00               	movlw	0
 19044  013A06  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 19045  013A08  0E07               	movlw	low __npowers_
 19046  013A0A  251D               	addwf	?___awdiv& (0+255),w,b
 19047  013A0C  6EF6               	movwf	tblptrl,c
 19048  013A0E  0EE4               	movlw	high __npowers_
 19049  013A10  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 19050  013A12  6EF7               	movwf	tblptrh,c
 19051  013A14                     	if	1	;There are 3 active tblptr bytes
 19052  013A14  6AF8               	clrf	tblptru,c
 19053  013A16  0E00               	movlw	low (__mediumconst shr (0+16))
 19054  013A18  22F8               	addwfc	tblptru,f,c
 19055  013A1A                     	endif
 19056  013A1A  0009               	tblrd		*+
 19057  013A1C  CFF5 F156          	movff	tablat,___flmul@b
 19058  013A20  0009               	tblrd		*+
 19059  013A22  CFF5 F157          	movff	tablat,___flmul@b+1
 19060  013A26  0009               	tblrd		*+
 19061  013A28  CFF5 F158          	movff	tablat,___flmul@b+2
 19062  013A2C  000A               	tblrd		*-
 19063  013A2E  CFF5 F159          	movff	tablat,___flmul@b+3
 19064  013A32  0E00               	movlw	0
 19065  013A34  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 19066  013A36  0E0A               	movlw	10
 19067  013A38  6F19               	movwf	___awmod@divisor& (0+255),b
 19068  013A3A  5177               	movf	scale@scl& (0+255),w,b
 19069  013A3C  6F17               	movwf	___awmod@dividend& (0+255),b
 19070  013A3E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 19071  013A40  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 19072  013A42  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 19073  013A44  EC3B  F0C2         	call	___awmod	;wreg free
 19074  013A48  0101               	movlb	1	; () banked
 19075  013A4A  90D8               	bcf	status,0,c
 19076  013A4C  3717               	rlcf	?___awmod& (0+255),f,b
 19077  013A4E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19078  013A50  90D8               	bcf	status,0,c
 19079  013A52  3717               	rlcf	?___awmod& (0+255),f,b
 19080  013A54  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19081  013A56  0E07               	movlw	low __npowers_
 19082  013A58  2517               	addwf	?___awmod& (0+255),w,b
 19083  013A5A  6EF6               	movwf	tblptrl,c
 19084  013A5C  0EE4               	movlw	high __npowers_
 19085  013A5E  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 19086  013A60  6EF7               	movwf	tblptrh,c
 19087  013A62                     	if	1	;There are 3 active tblptr bytes
 19088  013A62  6AF8               	clrf	tblptru,c
 19089  013A64  0E00               	movlw	low (__mediumconst shr (0+16))
 19090  013A66  22F8               	addwfc	tblptru,f,c
 19091  013A68                     	endif
 19092  013A68  0009               	tblrd		*+
 19093  013A6A  CFF5 F15A          	movff	tablat,___flmul@a
 19094  013A6E  0009               	tblrd		*+
 19095  013A70  CFF5 F15B          	movff	tablat,___flmul@a+1
 19096  013A74  0009               	tblrd		*+
 19097  013A76  CFF5 F15C          	movff	tablat,___flmul@a+2
 19098  013A7A  000A               	tblrd		*-
 19099  013A7C  CFF5 F15D          	movff	tablat,___flmul@a+3
 19100  013A80  EC7E  F0A2         	call	___flmul	;wreg free
 19101  013A84  C156  F16F         	movff	?___flmul,?_scale
 19102  013A88  C157  F170         	movff	?___flmul+1,?_scale+1
 19103  013A8C  C158  F171         	movff	?___flmul+2,?_scale+2
 19104  013A90  C159  F172         	movff	?___flmul+3,?_scale+3
 19105  013A94  0012               	return	
 19106  013A96                     l1448:
 19107                           
 19108                           ;doprnt.c: 434: return _npowers_[scl];
 19109  013A96  0101               	movlb	1	; () banked
 19110  013A98  5177               	movf	scale@scl& (0+255),w,b
 19111  013A9A  0D04               	mullw	4
 19112  013A9C  0E07               	movlw	low __npowers_
 19113  013A9E  24F3               	addwf	prodl,w,c
 19114  013AA0  6EF6               	movwf	tblptrl,c
 19115  013AA2  0EE4               	movlw	high __npowers_
 19116  013AA4  20F4               	addwfc	prodh,w,c
 19117  013AA6  6EF7               	movwf	tblptrh,c
 19118  013AA8                     	if	1	;There are 3 active tblptr bytes
 19119  013AA8  6AF8               	clrf	tblptru,c
 19120  013AAA  0E00               	movlw	low (__mediumconst shr (0+16))
 19121  013AAC  22F8               	addwfc	tblptru,f,c
 19122  013AAE                     	endif
 19123  013AAE  0009               	tblrd		*+
 19124  013AB0  CFF5 F16F          	movff	tablat,?_scale
 19125  013AB4  0009               	tblrd		*+
 19126  013AB6  CFF5 F170          	movff	tablat,?_scale+1
 19127  013ABA  0009               	tblrd		*+
 19128  013ABC  CFF5 F171          	movff	tablat,?_scale+2
 19129  013AC0  000A               	tblrd		*-
 19130  013AC2  CFF5 F172          	movff	tablat,?_scale+3
 19131                           
 19132                           ; BSR set to: 1
 19133  013AC6  0012               	return	
 19134  013AC8                     l1444:
 19135                           
 19136                           ; BSR set to: 1
 19137                           ;doprnt.c: 435: }
 19138                           ;doprnt.c: 436: if(scl>=110)
 19139                           
 19140                           ; BSR set to: 1
 19141  013AC8  5177               	movf	scale@scl& (0+255),w,b
 19142  013ACA  0A80               	xorlw	128
 19143  013ACC  0F12               	addlw	-238
 19144  013ACE  A0D8               	btfss	status,0,c
 19145  013AD0  D0A5               	goto	l1449
 19146                           
 19147                           ; BSR set to: 1
 19148                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 19149  013AD2  0E00               	movlw	0
 19150  013AD4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 19151  013AD6  0E0A               	movlw	10
 19152  013AD8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 19153  013ADA  0E00               	movlw	0
 19154  013ADC  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 19155  013ADE  0E64               	movlw	100
 19156  013AE0  6F19               	movwf	___awmod@divisor& (0+255),b
 19157  013AE2  5177               	movf	scale@scl& (0+255),w,b
 19158  013AE4  6F17               	movwf	___awmod@dividend& (0+255),b
 19159  013AE6  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 19160  013AE8  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 19161  013AEA  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 19162  013AEC  EC3B  F0C2         	call	___awmod	;wreg free
 19163  013AF0  C117  F11D         	movff	?___awmod,___awdiv@dividend
 19164  013AF4  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 19165  013AF8  ECB8  F0C0         	call	___awdiv	;wreg free
 19166  013AFC  0101               	movlb	1	; () banked
 19167  013AFE  90D8               	bcf	status,0,c
 19168  013B00  371D               	rlcf	?___awdiv& (0+255),f,b
 19169  013B02  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19170  013B04  90D8               	bcf	status,0,c
 19171  013B06  371D               	rlcf	?___awdiv& (0+255),f,b
 19172  013B08  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19173  013B0A  0E24               	movlw	36
 19174  013B0C  271D               	addwf	?___awdiv& (0+255),f,b
 19175  013B0E  0E00               	movlw	0
 19176  013B10  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 19177  013B12  0ED3               	movlw	low __powers_
 19178  013B14  251D               	addwf	?___awdiv& (0+255),w,b
 19179  013B16  6EF6               	movwf	tblptrl,c
 19180  013B18  0EE3               	movlw	high __powers_
 19181  013B1A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 19182  013B1C  6EF7               	movwf	tblptrh,c
 19183  013B1E                     	if	1	;There are 3 active tblptr bytes
 19184  013B1E  6AF8               	clrf	tblptru,c
 19185  013B20  0E00               	movlw	low (__mediumconst shr (0+16))
 19186  013B22  22F8               	addwfc	tblptru,f,c
 19187  013B24                     	endif
 19188  013B24  0009               	tblrd		*+
 19189  013B26  CFF5 F15A          	movff	tablat,___flmul@a
 19190  013B2A  0009               	tblrd		*+
 19191  013B2C  CFF5 F15B          	movff	tablat,___flmul@a+1
 19192  013B30  0009               	tblrd		*+
 19193  013B32  CFF5 F15C          	movff	tablat,___flmul@a+2
 19194  013B36  000A               	tblrd		*-
 19195  013B38  CFF5 F15D          	movff	tablat,___flmul@a+3
 19196  013B3C  0E00               	movlw	0
 19197  013B3E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 19198  013B40  0E64               	movlw	100
 19199  013B42  6F1F               	movwf	___awdiv@divisor& (0+255),b
 19200  013B44  5177               	movf	scale@scl& (0+255),w,b
 19201  013B46  6F1D               	movwf	___awdiv@dividend& (0+255),b
 19202  013B48  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19203  013B4A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 19204  013B4C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 19205  013B4E  ECB8  F0C0         	call	___awdiv	;wreg free
 19206  013B52  0101               	movlb	1	; () banked
 19207  013B54  90D8               	bcf	status,0,c
 19208  013B56  371D               	rlcf	?___awdiv& (0+255),f,b
 19209  013B58  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19210  013B5A  90D8               	bcf	status,0,c
 19211  013B5C  371D               	rlcf	?___awdiv& (0+255),f,b
 19212  013B5E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19213  013B60  0E48               	movlw	72
 19214  013B62  271D               	addwf	?___awdiv& (0+255),f,b
 19215  013B64  0E00               	movlw	0
 19216  013B66  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 19217  013B68  0ED3               	movlw	low __powers_
 19218  013B6A  251D               	addwf	?___awdiv& (0+255),w,b
 19219  013B6C  6EF6               	movwf	tblptrl,c
 19220  013B6E  0EE3               	movlw	high __powers_
 19221  013B70  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 19222  013B72  6EF7               	movwf	tblptrh,c
 19223  013B74                     	if	1	;There are 3 active tblptr bytes
 19224  013B74  6AF8               	clrf	tblptru,c
 19225  013B76  0E00               	movlw	low (__mediumconst shr (0+16))
 19226  013B78  22F8               	addwfc	tblptru,f,c
 19227  013B7A                     	endif
 19228  013B7A  0009               	tblrd		*+
 19229  013B7C  CFF5 F156          	movff	tablat,___flmul@b
 19230  013B80  0009               	tblrd		*+
 19231  013B82  CFF5 F157          	movff	tablat,___flmul@b+1
 19232  013B86  0009               	tblrd		*+
 19233  013B88  CFF5 F158          	movff	tablat,___flmul@b+2
 19234  013B8C  000A               	tblrd		*-
 19235  013B8E  CFF5 F159          	movff	tablat,___flmul@b+3
 19236  013B92  EC7E  F0A2         	call	___flmul	;wreg free
 19237  013B96  C156  F173         	movff	?___flmul,_scale$3982
 19238  013B9A  C157  F174         	movff	?___flmul+1,_scale$3982+1
 19239  013B9E  C158  F175         	movff	?___flmul+2,_scale$3982+2
 19240  013BA2  C159  F176         	movff	?___flmul+3,_scale$3982+3
 19241                           
 19242                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 19243  013BA6  C173  F156         	movff	_scale$3982,___flmul@b
 19244  013BAA  C174  F157         	movff	_scale$3982+1,___flmul@b+1
 19245  013BAE  C175  F158         	movff	_scale$3982+2,___flmul@b+2
 19246  013BB2  C176  F159         	movff	_scale$3982+3,___flmul@b+3
 19247  013BB6  0E00               	movlw	0
 19248  013BB8  0101               	movlb	1	; () banked
 19249  013BBA  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 19250  013BBC  0E0A               	movlw	10
 19251  013BBE  6F19               	movwf	___awmod@divisor& (0+255),b
 19252  013BC0  5177               	movf	scale@scl& (0+255),w,b
 19253  013BC2  6F17               	movwf	___awmod@dividend& (0+255),b
 19254  013BC4  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 19255  013BC6  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 19256  013BC8  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 19257  013BCA  EC3B  F0C2         	call	___awmod	;wreg free
 19258  013BCE  0101               	movlb	1	; () banked
 19259  013BD0  90D8               	bcf	status,0,c
 19260  013BD2  3717               	rlcf	?___awmod& (0+255),f,b
 19261  013BD4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19262  013BD6  90D8               	bcf	status,0,c
 19263  013BD8  3717               	rlcf	?___awmod& (0+255),f,b
 19264  013BDA  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19265  013BDC  0ED3               	movlw	low __powers_
 19266  013BDE  2517               	addwf	?___awmod& (0+255),w,b
 19267  013BE0  6EF6               	movwf	tblptrl,c
 19268  013BE2  0EE3               	movlw	high __powers_
 19269  013BE4  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 19270  013BE6  6EF7               	movwf	tblptrh,c
 19271  013BE8                     	if	1	;There are 3 active tblptr bytes
 19272  013BE8  6AF8               	clrf	tblptru,c
 19273  013BEA  0E00               	movlw	low (__mediumconst shr (0+16))
 19274  013BEC  22F8               	addwfc	tblptru,f,c
 19275  013BEE                     	endif
 19276  013BEE  0009               	tblrd		*+
 19277  013BF0  CFF5 F15A          	movff	tablat,___flmul@a
 19278  013BF4  0009               	tblrd		*+
 19279  013BF6  CFF5 F15B          	movff	tablat,___flmul@a+1
 19280  013BFA  0009               	tblrd		*+
 19281  013BFC  CFF5 F15C          	movff	tablat,___flmul@a+2
 19282  013C00  000A               	tblrd		*-
 19283  013C02  CFF5 F15D          	movff	tablat,___flmul@a+3
 19284  013C06  EC7E  F0A2         	call	___flmul	;wreg free
 19285  013C0A  C156  F16F         	movff	?___flmul,?_scale
 19286  013C0E  C157  F170         	movff	?___flmul+1,?_scale+1
 19287  013C12  C158  F171         	movff	?___flmul+2,?_scale+2
 19288  013C16  C159  F172         	movff	?___flmul+3,?_scale+3
 19289  013C1A  0012               	return	
 19290  013C1C                     l1449:
 19291                           
 19292                           ;doprnt.c: 438: else if(scl > 10)
 19293  013C1C  0101               	movlb	1	; () banked
 19294  013C1E  5177               	movf	scale@scl& (0+255),w,b
 19295  013C20  0A80               	xorlw	128
 19296  013C22  0F75               	addlw	-139
 19297  013C24  A0D8               	btfss	status,0,c
 19298  013C26  D05D               	goto	l1451
 19299                           
 19300                           ; BSR set to: 1
 19301                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 19302  013C28  0E00               	movlw	0
 19303  013C2A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 19304  013C2C  0E0A               	movlw	10
 19305  013C2E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 19306  013C30  5177               	movf	scale@scl& (0+255),w,b
 19307  013C32  6F1D               	movwf	___awdiv@dividend& (0+255),b
 19308  013C34  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19309  013C36  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 19310  013C38  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 19311  013C3A  ECB8  F0C0         	call	___awdiv	;wreg free
 19312  013C3E  0101               	movlb	1	; () banked
 19313  013C40  90D8               	bcf	status,0,c
 19314  013C42  371D               	rlcf	?___awdiv& (0+255),f,b
 19315  013C44  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19316  013C46  90D8               	bcf	status,0,c
 19317  013C48  371D               	rlcf	?___awdiv& (0+255),f,b
 19318  013C4A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19319  013C4C  0E24               	movlw	36
 19320  013C4E  271D               	addwf	?___awdiv& (0+255),f,b
 19321  013C50  0E00               	movlw	0
 19322  013C52  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 19323  013C54  0ED3               	movlw	low __powers_
 19324  013C56  251D               	addwf	?___awdiv& (0+255),w,b
 19325  013C58  6EF6               	movwf	tblptrl,c
 19326  013C5A  0EE3               	movlw	high __powers_
 19327  013C5C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 19328  013C5E  6EF7               	movwf	tblptrh,c
 19329  013C60                     	if	1	;There are 3 active tblptr bytes
 19330  013C60  6AF8               	clrf	tblptru,c
 19331  013C62  0E00               	movlw	low (__mediumconst shr (0+16))
 19332  013C64  22F8               	addwfc	tblptru,f,c
 19333  013C66                     	endif
 19334  013C66  0009               	tblrd		*+
 19335  013C68  CFF5 F156          	movff	tablat,___flmul@b
 19336  013C6C  0009               	tblrd		*+
 19337  013C6E  CFF5 F157          	movff	tablat,___flmul@b+1
 19338  013C72  0009               	tblrd		*+
 19339  013C74  CFF5 F158          	movff	tablat,___flmul@b+2
 19340  013C78  000A               	tblrd		*-
 19341  013C7A  CFF5 F159          	movff	tablat,___flmul@b+3
 19342  013C7E  0E00               	movlw	0
 19343  013C80  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 19344  013C82  0E0A               	movlw	10
 19345  013C84  6F19               	movwf	___awmod@divisor& (0+255),b
 19346  013C86  5177               	movf	scale@scl& (0+255),w,b
 19347  013C88  6F17               	movwf	___awmod@dividend& (0+255),b
 19348  013C8A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 19349  013C8C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 19350  013C8E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 19351  013C90  EC3B  F0C2         	call	___awmod	;wreg free
 19352  013C94  0101               	movlb	1	; () banked
 19353  013C96  90D8               	bcf	status,0,c
 19354  013C98  3717               	rlcf	?___awmod& (0+255),f,b
 19355  013C9A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19356  013C9C  90D8               	bcf	status,0,c
 19357  013C9E  3717               	rlcf	?___awmod& (0+255),f,b
 19358  013CA0  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19359  013CA2  0ED3               	movlw	low __powers_
 19360  013CA4  2517               	addwf	?___awmod& (0+255),w,b
 19361  013CA6  6EF6               	movwf	tblptrl,c
 19362  013CA8  0EE3               	movlw	high __powers_
 19363  013CAA  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 19364  013CAC  6EF7               	movwf	tblptrh,c
 19365  013CAE                     	if	1	;There are 3 active tblptr bytes
 19366  013CAE  6AF8               	clrf	tblptru,c
 19367  013CB0  0E00               	movlw	low (__mediumconst shr (0+16))
 19368  013CB2  22F8               	addwfc	tblptru,f,c
 19369  013CB4                     	endif
 19370  013CB4  0009               	tblrd		*+
 19371  013CB6  CFF5 F15A          	movff	tablat,___flmul@a
 19372  013CBA  0009               	tblrd		*+
 19373  013CBC  CFF5 F15B          	movff	tablat,___flmul@a+1
 19374  013CC0  0009               	tblrd		*+
 19375  013CC2  CFF5 F15C          	movff	tablat,___flmul@a+2
 19376  013CC6  000A               	tblrd		*-
 19377  013CC8  CFF5 F15D          	movff	tablat,___flmul@a+3
 19378  013CCC  EC7E  F0A2         	call	___flmul	;wreg free
 19379  013CD0  C156  F16F         	movff	?___flmul,?_scale
 19380  013CD4  C157  F170         	movff	?___flmul+1,?_scale+1
 19381  013CD8  C158  F171         	movff	?___flmul+2,?_scale+2
 19382  013CDC  C159  F172         	movff	?___flmul+3,?_scale+3
 19383  013CE0  0012               	return	
 19384  013CE2                     l1451:
 19385                           
 19386                           ;doprnt.c: 440: return _powers_[scl];
 19387  013CE2  0101               	movlb	1	; () banked
 19388  013CE4  5177               	movf	scale@scl& (0+255),w,b
 19389  013CE6  0D04               	mullw	4
 19390  013CE8  0ED3               	movlw	low __powers_
 19391  013CEA  24F3               	addwf	prodl,w,c
 19392  013CEC  6EF6               	movwf	tblptrl,c
 19393  013CEE  0EE3               	movlw	high __powers_
 19394  013CF0  20F4               	addwfc	prodh,w,c
 19395  013CF2  6EF7               	movwf	tblptrh,c
 19396  013CF4                     	if	1	;There are 3 active tblptr bytes
 19397  013CF4  6AF8               	clrf	tblptru,c
 19398  013CF6  0E00               	movlw	low (__mediumconst shr (0+16))
 19399  013CF8  22F8               	addwfc	tblptru,f,c
 19400  013CFA                     	endif
 19401  013CFA  0009               	tblrd		*+
 19402  013CFC  CFF5 F16F          	movff	tablat,?_scale
 19403  013D00  0009               	tblrd		*+
 19404  013D02  CFF5 F170          	movff	tablat,?_scale+1
 19405  013D06  0009               	tblrd		*+
 19406  013D08  CFF5 F171          	movff	tablat,?_scale+2
 19407  013D0C  000A               	tblrd		*-
 19408  013D0E  CFF5 F172          	movff	tablat,?_scale+3
 19409  013D12  0012               	return	
 19410  013D14                     __end_of_scale:
 19411                           	opt stack 0
 19412                           tblptru	equ	0xFF8
 19413                           tblptrh	equ	0xFF7
 19414                           tblptrl	equ	0xFF6
 19415                           tablat	equ	0xFF5
 19416                           prodh	equ	0xFF4
 19417                           prodl	equ	0xFF3
 19418                           intcon	equ	0xFF2
 19419                           indf0	equ	0xFEF
 19420                           postinc0	equ	0xFEE
 19421                           fsr0h	equ	0xFEA
 19422                           fsr0l	equ	0xFE9
 19423                           wreg	equ	0xFE8
 19424                           indf1	equ	0xFE7
 19425                           postdec1	equ	0xFE5
 19426                           plusw1	equ	0xFE3
 19427                           fsr1h	equ	0xFE2
 19428                           fsr1l	equ	0xFE1
 19429                           indf2	equ	0xFDF
 19430                           postinc2	equ	0xFDE
 19431                           postdec2	equ	0xFDD
 19432                           plusw2	equ	0xFDB
 19433                           fsr2h	equ	0xFDA
 19434                           fsr2l	equ	0xFD9
 19435                           status	equ	0xFD8
 19436                           
 19437 ;; *************** function _putch *****************
 19438 ;; Defined at:
 19439 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 19440 ;; Parameters:    Size  Location     Type
 19441 ;;  txData          1    wreg     unsigned char 
 19442 ;; Auto vars:     Size  Location     Type
 19443 ;;  txData          1   24[BANK1 ] unsigned char 
 19444 ;; Return value:  Size  Location     Type
 19445 ;;                  1    wreg      void 
 19446 ;; Registers used:
 19447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19448 ;; Tracked objects:
 19449 ;;		On entry : 0/0
 19450 ;;		On exit  : 0/0
 19451 ;;		Unchanged: 0/0
 19452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19454 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19456 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19457 ;;Total ram usage:        1 bytes
 19458 ;; Hardware stack levels used:    1
 19459 ;; Hardware stack levels required when called:   14
 19460 ;; This function calls:
 19461 ;;		_EUSART2_Write
 19462 ;; This function is called by:
 19463 ;;		_printf
 19464 ;; This function uses a non-reentrant model
 19465 ;;
 19466                           
 19467                           	psect	text30
 19468  01924A                     __ptext30:
 19469                           	opt stack 0
 19470  01924A                     _putch:
 19471                           	opt stack 13
 19472                           
 19473                           ;incstack = 0
 19474                           ;putch@txData stored from wreg
 19475  01924A  0101               	movlb	1	; () banked
 19476  01924C  6F18               	movwf	putch@txData& (0+255),b
 19477                           
 19478                           ;eusart2.c: 195: EUSART2_Write(txData);
 19479  01924E  0101               	movlb	1	; () banked
 19480  019250  5118               	movf	putch@txData& (0+255),w,b
 19481  019252  EC2E  F0C5         	call	_EUSART2_Write
 19482  019256  0012               	return		;funcret
 19483  019258                     __end_of_putch:
 19484                           	opt stack 0
 19485                           tblptru	equ	0xFF8
 19486                           tblptrh	equ	0xFF7
 19487                           tblptrl	equ	0xFF6
 19488                           tablat	equ	0xFF5
 19489                           prodh	equ	0xFF4
 19490                           prodl	equ	0xFF3
 19491                           intcon	equ	0xFF2
 19492                           indf0	equ	0xFEF
 19493                           postinc0	equ	0xFEE
 19494                           fsr0h	equ	0xFEA
 19495                           fsr0l	equ	0xFE9
 19496                           wreg	equ	0xFE8
 19497                           indf1	equ	0xFE7
 19498                           postdec1	equ	0xFE5
 19499                           plusw1	equ	0xFE3
 19500                           fsr1h	equ	0xFE2
 19501                           fsr1l	equ	0xFE1
 19502                           indf2	equ	0xFDF
 19503                           postinc2	equ	0xFDE
 19504                           postdec2	equ	0xFDD
 19505                           plusw2	equ	0xFDB
 19506                           fsr2h	equ	0xFDA
 19507                           fsr2l	equ	0xFD9
 19508                           status	equ	0xFD8
 19509                           
 19510 ;; *************** function _EUSART2_Write *****************
 19511 ;; Defined at:
 19512 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 19513 ;; Parameters:    Size  Location     Type
 19514 ;;  txData          1    wreg     unsigned char 
 19515 ;; Auto vars:     Size  Location     Type
 19516 ;;  txData          1   23[BANK1 ] unsigned char 
 19517 ;; Return value:  Size  Location     Type
 19518 ;;                  1    wreg      void 
 19519 ;; Registers used:
 19520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19521 ;; Tracked objects:
 19522 ;;		On entry : 0/0
 19523 ;;		On exit  : 0/0
 19524 ;;		Unchanged: 0/0
 19525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19527 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19529 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19530 ;;Total ram usage:        1 bytes
 19531 ;; Hardware stack levels used:    1
 19532 ;; Hardware stack levels required when called:   13
 19533 ;; This function calls:
 19534 ;;		Nothing
 19535 ;; This function is called by:
 19536 ;;		_putch
 19537 ;; This function uses a non-reentrant model
 19538 ;;
 19539                           
 19540                           	psect	text31
 19541  018A5C                     __ptext31:
 19542                           	opt stack 0
 19543  018A5C                     _EUSART2_Write:
 19544                           	opt stack 13
 19545                           
 19546                           ;incstack = 0
 19547                           ;EUSART2_Write@txData stored from wreg
 19548  018A5C  0101               	movlb	1	; () banked
 19549  018A5E  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 19550                           
 19551                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 19552  018A60  D002               	goto	l388
 19553  018A62                     l389:
 19554                           
 19555                           ; BSR set to: 1
 19556  018A62  0004               	clrwdt		;# 
 19557                           
 19558                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 19559  018A64  827E               	bsf	3966,1,c	;volatile
 19560  018A66                     l388:
 19561  018A66  0101               	movlb	1	; () banked
 19562  018A68  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 19563  018A6A  B4D8               	btfsc	status,2,c
 19564  018A6C  D7FA               	goto	l389
 19565                           
 19566                           ; BSR set to: 1
 19567                           ;eusart2.c: 167: }
 19568                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 19569  018A6E  927E               	bcf	3966,1,c	;volatile
 19570                           
 19571                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 19572  018A70  010E               	movlb	14	; () banked
 19573  018A72  BD2C               	btfsc	44,6,b	;volatile
 19574  018A74  D003               	goto	l391
 19575                           
 19576                           ; BSR set to: 14
 19577                           ;eusart2.c: 172: {
 19578                           ;eusart2.c: 173: TX2REG = txData;
 19579  018A76  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 19580                           
 19581                           ;eusart2.c: 174: }
 19582  018A7A  D013               	goto	l392
 19583  018A7C                     l391:
 19584                           
 19585                           ; BSR set to: 14
 19586                           ;eusart2.c: 175: else
 19587                           ;eusart2.c: 176: {
 19588                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 19589  018A7C  9D2C               	bcf	44,6,b	;volatile
 19590                           
 19591                           ; BSR set to: 14
 19592                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 19593  018A7E  0101               	movlb	1	; () banked
 19594  018A80  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 19595  018A82  0D01               	mullw	1
 19596  018A84  0E00               	movlw	low _eusart2TxBuffer
 19597  018A86  24F3               	addwf	prodl,w,c
 19598  018A88  6ED9               	movwf	fsr2l,c
 19599  018A8A  0E03               	movlw	high _eusart2TxBuffer
 19600  018A8C  20F4               	addwfc	prodh,w,c
 19601  018A8E  6EDA               	movwf	fsr2h,c
 19602  018A90  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 19603                           
 19604                           ; BSR set to: 1
 19605  018A94  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 19606                           
 19607                           ; BSR set to: 1
 19608                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 19609  018A96  0E7F               	movlw	127
 19610  018A98  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 19611  018A9A  D002               	goto	l393
 19612                           
 19613                           ; BSR set to: 1
 19614                           ;eusart2.c: 180: {
 19615                           ;eusart2.c: 181: eusart2TxHead = 0;
 19616  018A9C  0E00               	movlw	0
 19617  018A9E  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 19618  018AA0                     l393:
 19619                           
 19620                           ; BSR set to: 1
 19621                           ;eusart2.c: 182: }
 19622                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 19623                           
 19624                           ; BSR set to: 1
 19625  018AA0  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 19626  018AA2                     l392:
 19627                           
 19628                           ;eusart2.c: 184: }
 19629                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 19630                           
 19631                           ; BSR set to: 1
 19632  018AA2  010E               	movlb	14	; () banked
 19633  018AA4  8D2C               	bsf	44,6,b	;volatile
 19634                           
 19635                           ; BSR set to: 14
 19636  018AA6  0012               	return		;funcret
 19637  018AA8                     __end_of_EUSART2_Write:
 19638                           	opt stack 0
 19639                           tblptru	equ	0xFF8
 19640                           tblptrh	equ	0xFF7
 19641                           tblptrl	equ	0xFF6
 19642                           tablat	equ	0xFF5
 19643                           prodh	equ	0xFF4
 19644                           prodl	equ	0xFF3
 19645                           intcon	equ	0xFF2
 19646                           indf0	equ	0xFEF
 19647                           postinc0	equ	0xFEE
 19648                           fsr0h	equ	0xFEA
 19649                           fsr0l	equ	0xFE9
 19650                           wreg	equ	0xFE8
 19651                           indf1	equ	0xFE7
 19652                           postdec1	equ	0xFE5
 19653                           plusw1	equ	0xFE3
 19654                           fsr1h	equ	0xFE2
 19655                           fsr1l	equ	0xFE1
 19656                           indf2	equ	0xFDF
 19657                           postinc2	equ	0xFDE
 19658                           postdec2	equ	0xFDD
 19659                           plusw2	equ	0xFDB
 19660                           fsr2h	equ	0xFDA
 19661                           fsr2l	equ	0xFD9
 19662                           status	equ	0xFD8
 19663                           
 19664 ;; *************** function _isdigit *****************
 19665 ;; Defined at:
 19666 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 19667 ;; Parameters:    Size  Location     Type
 19668 ;;  c               1    wreg     unsigned char 
 19669 ;; Auto vars:     Size  Location     Type
 19670 ;;  c               1   25[BANK1 ] unsigned char 
 19671 ;; Return value:  Size  Location     Type
 19672 ;;		None               void
 19673 ;; Registers used:
 19674 ;;		wreg, status,2, status,0
 19675 ;; Tracked objects:
 19676 ;;		On entry : 0/0
 19677 ;;		On exit  : 0/0
 19678 ;;		Unchanged: 0/0
 19679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19681 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19682 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19683 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19684 ;;Total ram usage:        3 bytes
 19685 ;; Hardware stack levels used:    1
 19686 ;; Hardware stack levels required when called:   13
 19687 ;; This function calls:
 19688 ;;		Nothing
 19689 ;; This function is called by:
 19690 ;;		_printf
 19691 ;;		_atoi
 19692 ;; This function uses a non-reentrant model
 19693 ;;
 19694                           
 19695                           	psect	text32
 19696  0190C2                     __ptext32:
 19697                           	opt stack 0
 19698  0190C2                     _isdigit:
 19699                           	opt stack 14
 19700                           
 19701                           ; BSR set to: 14
 19702                           ;incstack = 0
 19703                           ;isdigit@c stored from wreg
 19704  0190C2  0101               	movlb	1	; () banked
 19705  0190C4  6F19               	movwf	isdigit@c& (0+255),b
 19706  0190C6  0E00               	movlw	0
 19707  0190C8  0101               	movlb	1	; () banked
 19708  0190CA  6F18               	movwf	_isdigit$3264& (0+255),b
 19709                           
 19710                           ; BSR set to: 1
 19711  0190CC  0E3A               	movlw	58
 19712  0190CE  6119               	cpfslt	isdigit@c& (0+255),b
 19713  0190D0  D005               	goto	l2022
 19714                           
 19715                           ; BSR set to: 1
 19716  0190D2  0E2F               	movlw	47
 19717  0190D4  6519               	cpfsgt	isdigit@c& (0+255),b
 19718  0190D6  D002               	goto	l2022
 19719                           
 19720                           ; BSR set to: 1
 19721  0190D8  0E01               	movlw	1
 19722  0190DA  6F18               	movwf	_isdigit$3264& (0+255),b
 19723  0190DC                     l2022:
 19724                           
 19725                           ; BSR set to: 1
 19726                           
 19727                           ; BSR set to: 1
 19728  0190DC  C118  F117         	movff	_isdigit$3264,??_isdigit
 19729  0190E0  3117               	rrcf	??_isdigit& (0+255),w,b
 19730  0190E2  0012               	return	
 19731  0190E4                     __end_of_isdigit:
 19732                           	opt stack 0
 19733                           tblptru	equ	0xFF8
 19734                           tblptrh	equ	0xFF7
 19735                           tblptrl	equ	0xFF6
 19736                           tablat	equ	0xFF5
 19737                           prodh	equ	0xFF4
 19738                           prodl	equ	0xFF3
 19739                           intcon	equ	0xFF2
 19740                           indf0	equ	0xFEF
 19741                           postinc0	equ	0xFEE
 19742                           fsr0h	equ	0xFEA
 19743                           fsr0l	equ	0xFE9
 19744                           wreg	equ	0xFE8
 19745                           indf1	equ	0xFE7
 19746                           postdec1	equ	0xFE5
 19747                           plusw1	equ	0xFE3
 19748                           fsr1h	equ	0xFE2
 19749                           fsr1l	equ	0xFE1
 19750                           indf2	equ	0xFDF
 19751                           postinc2	equ	0xFDE
 19752                           postdec2	equ	0xFDD
 19753                           plusw2	equ	0xFDB
 19754                           fsr2h	equ	0xFDA
 19755                           fsr2l	equ	0xFD9
 19756                           status	equ	0xFD8
 19757                           
 19758 ;; *************** function _fround *****************
 19759 ;; Defined at:
 19760 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;  prec            1    wreg     unsigned char 
 19763 ;; Auto vars:     Size  Location     Type
 19764 ;;  prec            1  123[BANK1 ] unsigned char 
 19765 ;; Return value:  Size  Location     Type
 19766 ;;                  4  111[BANK1 ] unsigned char 
 19767 ;; Registers used:
 19768 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19769 ;; Tracked objects:
 19770 ;;		On entry : 0/0
 19771 ;;		On exit  : 0/0
 19772 ;;		Unchanged: 0/0
 19773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19774 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19775 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19777 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19778 ;;Total ram usage:       13 bytes
 19779 ;; Hardware stack levels used:    1
 19780 ;; Hardware stack levels required when called:   14
 19781 ;; This function calls:
 19782 ;;		___awdiv
 19783 ;;		___awmod
 19784 ;;		___flmul
 19785 ;; This function is called by:
 19786 ;;		_printf
 19787 ;; This function uses a non-reentrant model
 19788 ;;
 19789                           
 19790                           	psect	text33
 19791  015AE0                     __ptext33:
 19792                           	opt stack 0
 19793  015AE0                     _fround:
 19794                           	opt stack 13
 19795                           
 19796                           ; BSR set to: 1
 19797                           ;incstack = 0
 19798                           ;fround@prec stored from wreg
 19799  015AE0  0101               	movlb	1	; () banked
 19800  015AE2  6F7B               	movwf	fround@prec& (0+255),b
 19801                           
 19802                           ;doprnt.c: 413: if(prec>=110)
 19803  015AE4  0E6D               	movlw	109
 19804  015AE6  0101               	movlb	1	; () banked
 19805  015AE8  657B               	cpfsgt	fround@prec& (0+255),b
 19806  015AEA  D0BA               	goto	l1438
 19807                           
 19808                           ; BSR set to: 1
 19809                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 19810  015AEC  0E00               	movlw	0
 19811  015AEE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 19812  015AF0  0E0A               	movlw	10
 19813  015AF2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 19814  015AF4  0E00               	movlw	0
 19815  015AF6  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 19816  015AF8  0E64               	movlw	100
 19817  015AFA  6F19               	movwf	___awmod@divisor& (0+255),b
 19818  015AFC  C17B  F117         	movff	fround@prec,___awmod@dividend
 19819  015B00  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 19820  015B02  EC3B  F0C2         	call	___awmod	;wreg free
 19821  015B06  C117  F11D         	movff	?___awmod,___awdiv@dividend
 19822  015B0A  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 19823  015B0E  ECB8  F0C0         	call	___awdiv	;wreg free
 19824  015B12  0101               	movlb	1	; () banked
 19825  015B14  90D8               	bcf	status,0,c
 19826  015B16  371D               	rlcf	?___awdiv& (0+255),f,b
 19827  015B18  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19828  015B1A  90D8               	bcf	status,0,c
 19829  015B1C  371D               	rlcf	?___awdiv& (0+255),f,b
 19830  015B1E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19831  015B20  0E24               	movlw	36
 19832  015B22  271D               	addwf	?___awdiv& (0+255),f,b
 19833  015B24  0E00               	movlw	0
 19834  015B26  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 19835  015B28  0E07               	movlw	low __npowers_
 19836  015B2A  251D               	addwf	?___awdiv& (0+255),w,b
 19837  015B2C  6EF6               	movwf	tblptrl,c
 19838  015B2E  0EE4               	movlw	high __npowers_
 19839  015B30  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 19840  015B32  6EF7               	movwf	tblptrh,c
 19841  015B34                     	if	1	;There are 3 active tblptr bytes
 19842  015B34  6AF8               	clrf	tblptru,c
 19843  015B36  0E00               	movlw	low (__mediumconst shr (0+16))
 19844  015B38  22F8               	addwfc	tblptru,f,c
 19845  015B3A                     	endif
 19846  015B3A  0009               	tblrd		*+
 19847  015B3C  CFF5 F15A          	movff	tablat,___flmul@a
 19848  015B40  0009               	tblrd		*+
 19849  015B42  CFF5 F15B          	movff	tablat,___flmul@a+1
 19850  015B46  0009               	tblrd		*+
 19851  015B48  CFF5 F15C          	movff	tablat,___flmul@a+2
 19852  015B4C  000A               	tblrd		*-
 19853  015B4E  CFF5 F15D          	movff	tablat,___flmul@a+3
 19854  015B52  0E00               	movlw	0
 19855  015B54  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 19856  015B56  0E64               	movlw	100
 19857  015B58  6F1F               	movwf	___awdiv@divisor& (0+255),b
 19858  015B5A  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 19859  015B5E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19860  015B60  ECB8  F0C0         	call	___awdiv	;wreg free
 19861  015B64  0101               	movlb	1	; () banked
 19862  015B66  90D8               	bcf	status,0,c
 19863  015B68  371D               	rlcf	?___awdiv& (0+255),f,b
 19864  015B6A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19865  015B6C  90D8               	bcf	status,0,c
 19866  015B6E  371D               	rlcf	?___awdiv& (0+255),f,b
 19867  015B70  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 19868  015B72  0E48               	movlw	72
 19869  015B74  271D               	addwf	?___awdiv& (0+255),f,b
 19870  015B76  0E00               	movlw	0
 19871  015B78  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 19872  015B7A  0E07               	movlw	low __npowers_
 19873  015B7C  251D               	addwf	?___awdiv& (0+255),w,b
 19874  015B7E  6EF6               	movwf	tblptrl,c
 19875  015B80  0EE4               	movlw	high __npowers_
 19876  015B82  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 19877  015B84  6EF7               	movwf	tblptrh,c
 19878  015B86                     	if	1	;There are 3 active tblptr bytes
 19879  015B86  6AF8               	clrf	tblptru,c
 19880  015B88  0E00               	movlw	low (__mediumconst shr (0+16))
 19881  015B8A  22F8               	addwfc	tblptru,f,c
 19882  015B8C                     	endif
 19883  015B8C  0009               	tblrd		*+
 19884  015B8E  CFF5 F156          	movff	tablat,___flmul@b
 19885  015B92  0009               	tblrd		*+
 19886  015B94  CFF5 F157          	movff	tablat,___flmul@b+1
 19887  015B98  0009               	tblrd		*+
 19888  015B9A  CFF5 F158          	movff	tablat,___flmul@b+2
 19889  015B9E  000A               	tblrd		*-
 19890  015BA0  CFF5 F159          	movff	tablat,___flmul@b+3
 19891  015BA4  EC7E  F0A2         	call	___flmul	;wreg free
 19892  015BA8  C156  F177         	movff	?___flmul,_fround$3980
 19893  015BAC  C157  F178         	movff	?___flmul+1,_fround$3980+1
 19894  015BB0  C158  F179         	movff	?___flmul+2,_fround$3980+2
 19895  015BB4  C159  F17A         	movff	?___flmul+3,_fround$3980+3
 19896                           
 19897                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 19898  015BB8  0E00               	movlw	0
 19899  015BBA  0101               	movlb	1	; () banked
 19900  015BBC  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 19901  015BBE  0E0A               	movlw	10
 19902  015BC0  6F19               	movwf	___awmod@divisor& (0+255),b
 19903  015BC2  C17B  F117         	movff	fround@prec,___awmod@dividend
 19904  015BC6  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 19905  015BC8  EC3B  F0C2         	call	___awmod	;wreg free
 19906  015BCC  0101               	movlb	1	; () banked
 19907  015BCE  90D8               	bcf	status,0,c
 19908  015BD0  3717               	rlcf	?___awmod& (0+255),f,b
 19909  015BD2  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19910  015BD4  90D8               	bcf	status,0,c
 19911  015BD6  3717               	rlcf	?___awmod& (0+255),f,b
 19912  015BD8  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19913  015BDA  0E07               	movlw	low __npowers_
 19914  015BDC  2517               	addwf	?___awmod& (0+255),w,b
 19915  015BDE  6EF6               	movwf	tblptrl,c
 19916  015BE0  0EE4               	movlw	high __npowers_
 19917  015BE2  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 19918  015BE4  6EF7               	movwf	tblptrh,c
 19919  015BE6                     	if	1	;There are 3 active tblptr bytes
 19920  015BE6  6AF8               	clrf	tblptru,c
 19921  015BE8  0E00               	movlw	low (__mediumconst shr (0+16))
 19922  015BEA  22F8               	addwfc	tblptru,f,c
 19923  015BEC                     	endif
 19924  015BEC  0009               	tblrd		*+
 19925  015BEE  CFF5 F15A          	movff	tablat,___flmul@a
 19926  015BF2  0009               	tblrd		*+
 19927  015BF4  CFF5 F15B          	movff	tablat,___flmul@a+1
 19928  015BF8  0009               	tblrd		*+
 19929  015BFA  CFF5 F15C          	movff	tablat,___flmul@a+2
 19930  015BFE  000A               	tblrd		*-
 19931  015C00  CFF5 F15D          	movff	tablat,___flmul@a+3
 19932  015C04  C177  F156         	movff	_fround$3980,___flmul@b
 19933  015C08  C178  F157         	movff	_fround$3980+1,___flmul@b+1
 19934  015C0C  C179  F158         	movff	_fround$3980+2,___flmul@b+2
 19935  015C10  C17A  F159         	movff	_fround$3980+3,___flmul@b+3
 19936  015C14  EC7E  F0A2         	call	___flmul	;wreg free
 19937  015C18  C156  F173         	movff	?___flmul,_fround$3981
 19938  015C1C  C157  F174         	movff	?___flmul+1,_fround$3981+1
 19939  015C20  C158  F175         	movff	?___flmul+2,_fround$3981+2
 19940  015C24  C159  F176         	movff	?___flmul+3,_fround$3981+3
 19941                           
 19942                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 19943  015C28  C173  F156         	movff	_fround$3981,___flmul@b
 19944  015C2C  C174  F157         	movff	_fround$3981+1,___flmul@b+1
 19945  015C30  C175  F158         	movff	_fround$3981+2,___flmul@b+2
 19946  015C34  C176  F159         	movff	_fround$3981+3,___flmul@b+3
 19947  015C38  0E00               	movlw	0
 19948  015C3A  0101               	movlb	1	; () banked
 19949  015C3C  6F5A               	movwf	___flmul@a& (0+255),b
 19950  015C3E  0E00               	movlw	0
 19951  015C40  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 19952  015C42  0E00               	movlw	0
 19953  015C44  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 19954  015C46  0E3F               	movlw	63
 19955  015C48  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 19956  015C4A  EC7E  F0A2         	call	___flmul	;wreg free
 19957  015C4E  C156  F16F         	movff	?___flmul,?_fround
 19958  015C52  C157  F170         	movff	?___flmul+1,?_fround+1
 19959  015C56  C158  F171         	movff	?___flmul+2,?_fround+2
 19960  015C5A  C159  F172         	movff	?___flmul+3,?_fround+3
 19961  015C5E  0012               	return	
 19962  015C60                     l1438:
 19963                           
 19964                           ;doprnt.c: 415: else if(prec > 10)
 19965  015C60  0E0A               	movlw	10
 19966  015C62  0101               	movlb	1	; () banked
 19967  015C64  657B               	cpfsgt	fround@prec& (0+255),b
 19968  015C66  D074               	goto	l1441
 19969                           
 19970                           ; BSR set to: 1
 19971                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 19972  015C68  0E00               	movlw	0
 19973  015C6A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 19974  015C6C  0E0A               	movlw	10
 19975  015C6E  6F19               	movwf	___awmod@divisor& (0+255),b
 19976  015C70  C17B  F117         	movff	fround@prec,___awmod@dividend
 19977  015C74  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 19978  015C76  EC3B  F0C2         	call	___awmod	;wreg free
 19979  015C7A  0101               	movlb	1	; () banked
 19980  015C7C  90D8               	bcf	status,0,c
 19981  015C7E  3717               	rlcf	?___awmod& (0+255),f,b
 19982  015C80  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19983  015C82  90D8               	bcf	status,0,c
 19984  015C84  3717               	rlcf	?___awmod& (0+255),f,b
 19985  015C86  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 19986  015C88  0E07               	movlw	low __npowers_
 19987  015C8A  2517               	addwf	?___awmod& (0+255),w,b
 19988  015C8C  6EF6               	movwf	tblptrl,c
 19989  015C8E  0EE4               	movlw	high __npowers_
 19990  015C90  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 19991  015C92  6EF7               	movwf	tblptrh,c
 19992  015C94                     	if	1	;There are 3 active tblptr bytes
 19993  015C94  6AF8               	clrf	tblptru,c
 19994  015C96  0E00               	movlw	low (__mediumconst shr (0+16))
 19995  015C98  22F8               	addwfc	tblptru,f,c
 19996  015C9A                     	endif
 19997  015C9A  0009               	tblrd		*+
 19998  015C9C  CFF5 F15A          	movff	tablat,___flmul@a
 19999  015CA0  0009               	tblrd		*+
 20000  015CA2  CFF5 F15B          	movff	tablat,___flmul@a+1
 20001  015CA6  0009               	tblrd		*+
 20002  015CA8  CFF5 F15C          	movff	tablat,___flmul@a+2
 20003  015CAC  000A               	tblrd		*-
 20004  015CAE  CFF5 F15D          	movff	tablat,___flmul@a+3
 20005  015CB2  0E00               	movlw	0
 20006  015CB4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 20007  015CB6  0E0A               	movlw	10
 20008  015CB8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 20009  015CBA  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 20010  015CBE  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 20011  015CC0  ECB8  F0C0         	call	___awdiv	;wreg free
 20012  015CC4  0101               	movlb	1	; () banked
 20013  015CC6  90D8               	bcf	status,0,c
 20014  015CC8  371D               	rlcf	?___awdiv& (0+255),f,b
 20015  015CCA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 20016  015CCC  90D8               	bcf	status,0,c
 20017  015CCE  371D               	rlcf	?___awdiv& (0+255),f,b
 20018  015CD0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 20019  015CD2  0E24               	movlw	36
 20020  015CD4  271D               	addwf	?___awdiv& (0+255),f,b
 20021  015CD6  0E00               	movlw	0
 20022  015CD8  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 20023  015CDA  0E07               	movlw	low __npowers_
 20024  015CDC  251D               	addwf	?___awdiv& (0+255),w,b
 20025  015CDE  6EF6               	movwf	tblptrl,c
 20026  015CE0  0EE4               	movlw	high __npowers_
 20027  015CE2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 20028  015CE4  6EF7               	movwf	tblptrh,c
 20029  015CE6                     	if	1	;There are 3 active tblptr bytes
 20030  015CE6  6AF8               	clrf	tblptru,c
 20031  015CE8  0E00               	movlw	low (__mediumconst shr (0+16))
 20032  015CEA  22F8               	addwfc	tblptru,f,c
 20033  015CEC                     	endif
 20034  015CEC  0009               	tblrd		*+
 20035  015CEE  CFF5 F156          	movff	tablat,___flmul@b
 20036  015CF2  0009               	tblrd		*+
 20037  015CF4  CFF5 F157          	movff	tablat,___flmul@b+1
 20038  015CF8  0009               	tblrd		*+
 20039  015CFA  CFF5 F158          	movff	tablat,___flmul@b+2
 20040  015CFE  000A               	tblrd		*-
 20041  015D00  CFF5 F159          	movff	tablat,___flmul@b+3
 20042  015D04  EC7E  F0A2         	call	___flmul	;wreg free
 20043  015D08  C156  F177         	movff	?___flmul,_fround$3980
 20044  015D0C  C157  F178         	movff	?___flmul+1,_fround$3980+1
 20045  015D10  C158  F179         	movff	?___flmul+2,_fround$3980+2
 20046  015D14  C159  F17A         	movff	?___flmul+3,_fround$3980+3
 20047                           
 20048                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 20049  015D18  C177  F156         	movff	_fround$3980,___flmul@b
 20050  015D1C  C178  F157         	movff	_fround$3980+1,___flmul@b+1
 20051  015D20  C179  F158         	movff	_fround$3980+2,___flmul@b+2
 20052  015D24  C17A  F159         	movff	_fround$3980+3,___flmul@b+3
 20053  015D28  0E00               	movlw	0
 20054  015D2A  0101               	movlb	1	; () banked
 20055  015D2C  6F5A               	movwf	___flmul@a& (0+255),b
 20056  015D2E  0E00               	movlw	0
 20057  015D30  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 20058  015D32  0E00               	movlw	0
 20059  015D34  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 20060  015D36  0E3F               	movlw	63
 20061  015D38  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 20062  015D3A  EC7E  F0A2         	call	___flmul	;wreg free
 20063  015D3E  C156  F16F         	movff	?___flmul,?_fround
 20064  015D42  C157  F170         	movff	?___flmul+1,?_fround+1
 20065  015D46  C158  F171         	movff	?___flmul+2,?_fround+2
 20066  015D4A  C159  F172         	movff	?___flmul+3,?_fround+3
 20067  015D4E  0012               	return	
 20068  015D50                     l1441:
 20069                           
 20070                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 20071  015D50  0101               	movlb	1	; () banked
 20072  015D52  517B               	movf	fround@prec& (0+255),w,b
 20073  015D54  0D04               	mullw	4
 20074  015D56  0E07               	movlw	low __npowers_
 20075  015D58  24F3               	addwf	prodl,w,c
 20076  015D5A  6EF6               	movwf	tblptrl,c
 20077  015D5C  0EE4               	movlw	high __npowers_
 20078  015D5E  20F4               	addwfc	prodh,w,c
 20079  015D60  6EF7               	movwf	tblptrh,c
 20080  015D62                     	if	1	;There are 3 active tblptr bytes
 20081  015D62  6AF8               	clrf	tblptru,c
 20082  015D64  0E00               	movlw	low (__mediumconst shr (0+16))
 20083  015D66  22F8               	addwfc	tblptru,f,c
 20084  015D68                     	endif
 20085  015D68  0009               	tblrd		*+
 20086  015D6A  CFF5 F156          	movff	tablat,___flmul@b
 20087  015D6E  0009               	tblrd		*+
 20088  015D70  CFF5 F157          	movff	tablat,___flmul@b+1
 20089  015D74  0009               	tblrd		*+
 20090  015D76  CFF5 F158          	movff	tablat,___flmul@b+2
 20091  015D7A  000A               	tblrd		*-
 20092  015D7C  CFF5 F159          	movff	tablat,___flmul@b+3
 20093  015D80  0E00               	movlw	0
 20094  015D82  6F5A               	movwf	___flmul@a& (0+255),b
 20095  015D84  0E00               	movlw	0
 20096  015D86  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 20097  015D88  0E00               	movlw	0
 20098  015D8A  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 20099  015D8C  0E3F               	movlw	63
 20100  015D8E  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 20101  015D90  EC7E  F0A2         	call	___flmul	;wreg free
 20102  015D94  C156  F16F         	movff	?___flmul,?_fround
 20103  015D98  C157  F170         	movff	?___flmul+1,?_fround+1
 20104  015D9C  C158  F171         	movff	?___flmul+2,?_fround+2
 20105  015DA0  C159  F172         	movff	?___flmul+3,?_fround+3
 20106  015DA4  0012               	return	
 20107  015DA6                     __end_of_fround:
 20108                           	opt stack 0
 20109                           tblptru	equ	0xFF8
 20110                           tblptrh	equ	0xFF7
 20111                           tblptrl	equ	0xFF6
 20112                           tablat	equ	0xFF5
 20113                           prodh	equ	0xFF4
 20114                           prodl	equ	0xFF3
 20115                           intcon	equ	0xFF2
 20116                           indf0	equ	0xFEF
 20117                           postinc0	equ	0xFEE
 20118                           fsr0h	equ	0xFEA
 20119                           fsr0l	equ	0xFE9
 20120                           wreg	equ	0xFE8
 20121                           indf1	equ	0xFE7
 20122                           postdec1	equ	0xFE5
 20123                           plusw1	equ	0xFE3
 20124                           fsr1h	equ	0xFE2
 20125                           fsr1l	equ	0xFE1
 20126                           indf2	equ	0xFDF
 20127                           postinc2	equ	0xFDE
 20128                           postdec2	equ	0xFDD
 20129                           plusw2	equ	0xFDB
 20130                           fsr2h	equ	0xFDA
 20131                           fsr2l	equ	0xFD9
 20132                           status	equ	0xFD8
 20133                           
 20134 ;; *************** function ___flmul *****************
 20135 ;; Defined at:
 20136 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 20137 ;; Parameters:    Size  Location     Type
 20138 ;;  b               4   86[BANK1 ] unsigned char 
 20139 ;;  a               4   90[BANK1 ] unsigned char 
 20140 ;; Auto vars:     Size  Location     Type
 20141 ;;  prod            4  105[BANK1 ] struct .
 20142 ;;  grs             4  101[BANK1 ] unsigned long 
 20143 ;;  temp            2  109[BANK1 ] struct .
 20144 ;;  bexp            1  100[BANK1 ] unsigned char 
 20145 ;;  aexp            1   99[BANK1 ] unsigned char 
 20146 ;;  sign            1   98[BANK1 ] unsigned char 
 20147 ;; Return value:  Size  Location     Type
 20148 ;;                  4   86[BANK1 ] unsigned char 
 20149 ;; Registers used:
 20150 ;;		wreg, status,2, status,0, prodl, prodh
 20151 ;; Tracked objects:
 20152 ;;		On entry : 0/0
 20153 ;;		On exit  : 0/0
 20154 ;;		Unchanged: 0/0
 20155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20156 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20157 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20158 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20159 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20160 ;;Total ram usage:       25 bytes
 20161 ;; Hardware stack levels used:    1
 20162 ;; Hardware stack levels required when called:   13
 20163 ;; This function calls:
 20164 ;;		Nothing
 20165 ;; This function is called by:
 20166 ;;		_ringBufferLUT
 20167 ;;		_fround
 20168 ;;		_scale
 20169 ;;		_printf
 20170 ;; This function uses a non-reentrant model
 20171 ;;
 20172                           
 20173                           	psect	text34
 20174  0144FC                     __ptext34:
 20175                           	opt stack 0
 20176  0144FC                     ___flmul:
 20177                           	opt stack 13
 20178                           
 20179                           ;incstack = 0
 20180  0144FC  0101               	movlb	1	; () banked
 20181  0144FE  5159               	movf	(___flmul@b+3)& (0+255),w,b
 20182  014500  0B80               	andlw	128
 20183  014502  6F62               	movwf	___flmul@sign& (0+255),b
 20184  014504  5159               	movf	(___flmul@b+3)& (0+255),w,b
 20185  014506  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 20186  014508  6F64               	movwf	___flmul@bexp& (0+255),b
 20187                           
 20188                           ; BSR set to: 1
 20189  01450A  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 20190                           
 20191                           ; BSR set to: 1
 20192  01450C  8164               	bsf	___flmul@bexp& (0+255),0,b
 20193                           
 20194                           ; BSR set to: 1
 20195                           
 20196                           ; BSR set to: 1
 20197  01450E  5164               	movf	___flmul@bexp& (0+255),w,b
 20198  014510  B4D8               	btfsc	status,2,c
 20199  014512  D00D               	goto	l2236
 20200                           
 20201                           ; BSR set to: 1
 20202  014514  2964               	incf	___flmul@bexp& (0+255),w,b
 20203  014516  A4D8               	btfss	status,2,c
 20204  014518  D008               	goto	l2237
 20205                           
 20206                           ; BSR set to: 1
 20207  01451A  0E00               	movlw	0
 20208  01451C  6F56               	movwf	___flmul@b& (0+255),b
 20209  01451E  0E00               	movlw	0
 20210  014520  6F57               	movwf	(___flmul@b+1)& (0+255),b
 20211  014522  0E00               	movlw	0
 20212  014524  6F58               	movwf	(___flmul@b+2)& (0+255),b
 20213  014526  0E00               	movlw	0
 20214  014528  6F59               	movwf	(___flmul@b+3)& (0+255),b
 20215  01452A                     l2237:
 20216                           
 20217                           ; BSR set to: 1
 20218                           
 20219                           ; BSR set to: 1
 20220  01452A  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 20221  01452C  D008               	goto	l2238
 20222  01452E                     l2236:
 20223                           
 20224                           ; BSR set to: 1
 20225                           
 20226                           ; BSR set to: 1
 20227  01452E  0E00               	movlw	0
 20228  014530  6F56               	movwf	___flmul@b& (0+255),b
 20229  014532  0E00               	movlw	0
 20230  014534  6F57               	movwf	(___flmul@b+1)& (0+255),b
 20231  014536  0E00               	movlw	0
 20232  014538  6F58               	movwf	(___flmul@b+2)& (0+255),b
 20233  01453A  0E00               	movlw	0
 20234  01453C  6F59               	movwf	(___flmul@b+3)& (0+255),b
 20235  01453E                     l2238:
 20236                           
 20237                           ; BSR set to: 1
 20238                           
 20239                           ; BSR set to: 1
 20240  01453E  515D               	movf	(___flmul@a+3)& (0+255),w,b
 20241  014540  0B80               	andlw	128
 20242  014542  1B62               	xorwf	___flmul@sign& (0+255),f,b
 20243                           
 20244                           ; BSR set to: 1
 20245  014544  515D               	movf	(___flmul@a+3)& (0+255),w,b
 20246  014546  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 20247  014548  6F63               	movwf	___flmul@aexp& (0+255),b
 20248                           
 20249                           ; BSR set to: 1
 20250  01454A  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 20251                           
 20252                           ; BSR set to: 1
 20253  01454C  8163               	bsf	___flmul@aexp& (0+255),0,b
 20254                           
 20255                           ; BSR set to: 1
 20256                           
 20257                           ; BSR set to: 1
 20258  01454E  5163               	movf	___flmul@aexp& (0+255),w,b
 20259  014550  B4D8               	btfsc	status,2,c
 20260  014552  D00D               	goto	l2240
 20261                           
 20262                           ; BSR set to: 1
 20263  014554  2963               	incf	___flmul@aexp& (0+255),w,b
 20264  014556  A4D8               	btfss	status,2,c
 20265  014558  D008               	goto	l2241
 20266                           
 20267                           ; BSR set to: 1
 20268  01455A  0E00               	movlw	0
 20269  01455C  6F5A               	movwf	___flmul@a& (0+255),b
 20270  01455E  0E00               	movlw	0
 20271  014560  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 20272  014562  0E00               	movlw	0
 20273  014564  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 20274  014566  0E00               	movlw	0
 20275  014568  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 20276  01456A                     l2241:
 20277                           
 20278                           ; BSR set to: 1
 20279                           
 20280                           ; BSR set to: 1
 20281  01456A  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 20282  01456C  D008               	goto	l2242
 20283  01456E                     l2240:
 20284                           
 20285                           ; BSR set to: 1
 20286                           
 20287                           ; BSR set to: 1
 20288  01456E  0E00               	movlw	0
 20289  014570  6F5A               	movwf	___flmul@a& (0+255),b
 20290  014572  0E00               	movlw	0
 20291  014574  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 20292  014576  0E00               	movlw	0
 20293  014578  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 20294  01457A  0E00               	movlw	0
 20295  01457C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 20296  01457E                     l2242:
 20297                           
 20298                           ; BSR set to: 1
 20299  01457E  5163               	movf	___flmul@aexp& (0+255),w,b
 20300  014580  B4D8               	btfsc	status,2,c
 20301  014582  D003               	goto	u23950
 20302                           
 20303                           ; BSR set to: 1
 20304  014584  5164               	movf	___flmul@bexp& (0+255),w,b
 20305  014586  A4D8               	btfss	status,2,c
 20306  014588  D009               	goto	l2243
 20307  01458A                     u23950:
 20308                           
 20309                           ; BSR set to: 1
 20310                           
 20311                           ; BSR set to: 1
 20312  01458A  0E00               	movlw	0
 20313  01458C  6F56               	movwf	?___flmul& (0+255),b
 20314  01458E  0E00               	movlw	0
 20315  014590  6F57               	movwf	(?___flmul+1)& (0+255),b
 20316  014592  0E00               	movlw	0
 20317  014594  6F58               	movwf	(?___flmul+2)& (0+255),b
 20318  014596  0E00               	movlw	0
 20319  014598  6F59               	movwf	(?___flmul+3)& (0+255),b
 20320                           
 20321                           ; BSR set to: 1
 20322  01459A  0012               	return	
 20323  01459C                     l2243:
 20324                           
 20325                           ; BSR set to: 1
 20326                           
 20327                           ; BSR set to: 1
 20328  01459C  515C               	movf	(___flmul@a+2)& (0+255),w,b
 20329  01459E  0356               	mulwf	___flmul@b& (0+255),b
 20330  0145A0  CFF3 F16D          	movff	prodl,___flmul@temp
 20331  0145A4  CFF4 F16E          	movff	prodh,___flmul@temp+1
 20332                           
 20333                           ; BSR set to: 1
 20334  0145A8  516D               	movf	___flmul@temp& (0+255),w,b
 20335  0145AA  6F65               	movwf	___flmul@grs& (0+255),b
 20336  0145AC  6B66               	clrf	(___flmul@grs+1)& (0+255),b
 20337  0145AE  6B67               	clrf	(___flmul@grs+2)& (0+255),b
 20338  0145B0  6B68               	clrf	(___flmul@grs+3)& (0+255),b
 20339                           
 20340                           ; BSR set to: 1
 20341  0145B2  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20342  0145B4  6F69               	movwf	___flmul@prod& (0+255),b
 20343  0145B6  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 20344  0145B8  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 20345  0145BA  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 20346  0145BC  515B               	movf	(___flmul@a+1)& (0+255),w,b
 20347  0145BE  0357               	mulwf	(___flmul@b+1)& (0+255),b
 20348  0145C0  CFF3 F16D          	movff	prodl,___flmul@temp
 20349  0145C4  CFF4 F16E          	movff	prodh,___flmul@temp+1
 20350                           
 20351                           ; BSR set to: 1
 20352  0145C8  516D               	movf	___flmul@temp& (0+255),w,b
 20353  0145CA  2765               	addwf	___flmul@grs& (0+255),f,b
 20354  0145CC  0E00               	movlw	0
 20355  0145CE  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20356  0145D0  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20357  0145D2  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20358                           
 20359                           ; BSR set to: 1
 20360  0145D4  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20361  0145D6  2769               	addwf	___flmul@prod& (0+255),f,b
 20362  0145D8  0E00               	movlw	0
 20363  0145DA  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20364  0145DC  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20365  0145DE  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20366  0145E0  515A               	movf	___flmul@a& (0+255),w,b
 20367  0145E2  0358               	mulwf	(___flmul@b+2)& (0+255),b
 20368  0145E4  CFF3 F16D          	movff	prodl,___flmul@temp
 20369  0145E8  CFF4 F16E          	movff	prodh,___flmul@temp+1
 20370                           
 20371                           ; BSR set to: 1
 20372  0145EC  516D               	movf	___flmul@temp& (0+255),w,b
 20373  0145EE  2765               	addwf	___flmul@grs& (0+255),f,b
 20374  0145F0  0E00               	movlw	0
 20375  0145F2  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20376  0145F4  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20377  0145F6  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20378                           
 20379                           ; BSR set to: 1
 20380  0145F8  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20381  0145FA  2769               	addwf	___flmul@prod& (0+255),f,b
 20382  0145FC  0E00               	movlw	0
 20383  0145FE  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20384  014600  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20385  014602  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20386                           
 20387                           ; BSR set to: 1
 20388  014604  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 20389  014608  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 20390  01460C  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 20391  014610  6B65               	clrf	___flmul@grs& (0+255),b
 20392                           
 20393                           ; BSR set to: 1
 20394  014612  515A               	movf	___flmul@a& (0+255),w,b
 20395  014614  0357               	mulwf	(___flmul@b+1)& (0+255),b
 20396  014616  CFF3 F16D          	movff	prodl,___flmul@temp
 20397  01461A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 20398                           
 20399                           ; BSR set to: 1
 20400  01461E  516D               	movf	___flmul@temp& (0+255),w,b
 20401  014620  2765               	addwf	___flmul@grs& (0+255),f,b
 20402  014622  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20403  014624  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20404  014626  0E00               	movlw	0
 20405  014628  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20406  01462A  0E00               	movlw	0
 20407  01462C  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20408                           
 20409                           ; BSR set to: 1
 20410  01462E  515B               	movf	(___flmul@a+1)& (0+255),w,b
 20411  014630  0356               	mulwf	___flmul@b& (0+255),b
 20412  014632  CFF3 F16D          	movff	prodl,___flmul@temp
 20413  014636  CFF4 F16E          	movff	prodh,___flmul@temp+1
 20414                           
 20415                           ; BSR set to: 1
 20416  01463A  516D               	movf	___flmul@temp& (0+255),w,b
 20417  01463C  2765               	addwf	___flmul@grs& (0+255),f,b
 20418  01463E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20419  014640  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20420  014642  0E00               	movlw	0
 20421  014644  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20422  014646  0E00               	movlw	0
 20423  014648  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20424                           
 20425                           ; BSR set to: 1
 20426  01464A  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 20427  01464E  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 20428  014652  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 20429  014656  6B65               	clrf	___flmul@grs& (0+255),b
 20430  014658  515A               	movf	___flmul@a& (0+255),w,b
 20431  01465A  0356               	mulwf	___flmul@b& (0+255),b
 20432  01465C  CFF3 F16D          	movff	prodl,___flmul@temp
 20433  014660  CFF4 F16E          	movff	prodh,___flmul@temp+1
 20434                           
 20435                           ; BSR set to: 1
 20436  014664  516D               	movf	___flmul@temp& (0+255),w,b
 20437  014666  2765               	addwf	___flmul@grs& (0+255),f,b
 20438  014668  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20439  01466A  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 20440  01466C  0E00               	movlw	0
 20441  01466E  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 20442  014670  0E00               	movlw	0
 20443  014672  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 20444                           
 20445                           ; BSR set to: 1
 20446  014674  515C               	movf	(___flmul@a+2)& (0+255),w,b
 20447  014676  0357               	mulwf	(___flmul@b+1)& (0+255),b
 20448  014678  CFF3 F16D          	movff	prodl,___flmul@temp
 20449  01467C  CFF4 F16E          	movff	prodh,___flmul@temp+1
 20450  014680  516D               	movf	___flmul@temp& (0+255),w,b
 20451  014682  2769               	addwf	___flmul@prod& (0+255),f,b
 20452  014684  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20453  014686  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20454  014688  0E00               	movlw	0
 20455  01468A  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20456  01468C  0E00               	movlw	0
 20457  01468E  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20458                           
 20459                           ; BSR set to: 1
 20460  014690  515B               	movf	(___flmul@a+1)& (0+255),w,b
 20461  014692  0358               	mulwf	(___flmul@b+2)& (0+255),b
 20462  014694  CFF3 F16D          	movff	prodl,___flmul@temp
 20463  014698  CFF4 F16E          	movff	prodh,___flmul@temp+1
 20464                           
 20465                           ; BSR set to: 1
 20466  01469C  516D               	movf	___flmul@temp& (0+255),w,b
 20467  01469E  2769               	addwf	___flmul@prod& (0+255),f,b
 20468  0146A0  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20469  0146A2  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20470  0146A4  0E00               	movlw	0
 20471  0146A6  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20472  0146A8  0E00               	movlw	0
 20473  0146AA  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20474  0146AC  515C               	movf	(___flmul@a+2)& (0+255),w,b
 20475  0146AE  0358               	mulwf	(___flmul@b+2)& (0+255),b
 20476  0146B0  CFF3 F16D          	movff	prodl,___flmul@temp
 20477  0146B4  CFF4 F16E          	movff	prodh,___flmul@temp+1
 20478                           
 20479                           ; BSR set to: 1
 20480  0146B8  516D               	movf	___flmul@temp& (0+255),w,b
 20481  0146BA  6F5E               	movwf	??___flmul& (0+255),b
 20482  0146BC  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20483  0146BE  6F5F               	movwf	(??___flmul+1)& (0+255),b
 20484  0146C0  6B60               	clrf	(??___flmul+2)& (0+255),b
 20485  0146C2  6B61               	clrf	(??___flmul+3)& (0+255),b
 20486  0146C4  C160  F161         	movff	??___flmul+2,??___flmul+3
 20487  0146C8  C15F  F160         	movff	??___flmul+1,??___flmul+2
 20488  0146CC  C15E  F15F         	movff	??___flmul,??___flmul+1
 20489  0146D0  6B5E               	clrf	??___flmul& (0+255),b
 20490  0146D2  515E               	movf	??___flmul& (0+255),w,b
 20491  0146D4  2769               	addwf	___flmul@prod& (0+255),f,b
 20492  0146D6  515F               	movf	(??___flmul+1)& (0+255),w,b
 20493  0146D8  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20494  0146DA  5160               	movf	(??___flmul+2)& (0+255),w,b
 20495  0146DC  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20496  0146DE  5161               	movf	(??___flmul+3)& (0+255),w,b
 20497  0146E0  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20498                           
 20499                           ; BSR set to: 1
 20500  0146E2  C165  F15E         	movff	___flmul@grs,??___flmul
 20501  0146E6  C166  F15F         	movff	___flmul@grs+1,??___flmul+1
 20502  0146EA  C167  F160         	movff	___flmul@grs+2,??___flmul+2
 20503  0146EE  C168  F161         	movff	___flmul@grs+3,??___flmul+3
 20504  0146F2  0E19               	movlw	25
 20505  0146F4  D005               	goto	u23960
 20506  0146F6                     u23965:
 20507  0146F6  90D8               	bcf	status,0,c
 20508  0146F8  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 20509  0146FA  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 20510  0146FC  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 20511  0146FE  335E               	rrcf	??___flmul& (0+255),f,b
 20512  014700                     u23960:
 20513  014700  2EE8               	decfsz	wreg,f,c
 20514  014702  D7F9               	goto	u23965
 20515  014704  515E               	movf	??___flmul& (0+255),w,b
 20516  014706  2769               	addwf	___flmul@prod& (0+255),f,b
 20517  014708  515F               	movf	(??___flmul+1)& (0+255),w,b
 20518  01470A  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20519  01470C  5160               	movf	(??___flmul+2)& (0+255),w,b
 20520  01470E  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20521  014710  5161               	movf	(??___flmul+3)& (0+255),w,b
 20522  014712  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20523                           
 20524                           ; BSR set to: 1
 20525  014714  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 20526  014718  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 20527  01471C  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 20528  014720  6B65               	clrf	___flmul@grs& (0+255),b
 20529                           
 20530                           ; BSR set to: 1
 20531  014722  5163               	movf	___flmul@aexp& (0+255),w,b
 20532  014724  C164  F15E         	movff	___flmul@bexp,??___flmul
 20533  014728  6B5F               	clrf	(??___flmul+1)& (0+255),b
 20534  01472A  275E               	addwf	??___flmul& (0+255),f,b
 20535  01472C  0E00               	movlw	0
 20536  01472E  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 20537  014730  0E82               	movlw	130
 20538  014732  255E               	addwf	??___flmul& (0+255),w,b
 20539  014734  6F6D               	movwf	___flmul@temp& (0+255),b
 20540  014736  0EFF               	movlw	255
 20541  014738  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 20542  01473A  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 20543  01473C  D00F               	goto	l2247
 20544  01473E                     
 20545                           ; BSR set to: 1
 20546                           
 20547                           ; BSR set to: 1
 20548  01473E  90D8               	bcf	status,0,c
 20549  014740  3769               	rlcf	___flmul@prod& (0+255),f,b
 20550  014742  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 20551  014744  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 20552  014746  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 20553                           
 20554                           ; BSR set to: 1
 20555  014748  BF68               	btfsc	(___flmul@grs+3)& (0+255),7,b
 20556                           
 20557                           ; BSR set to: 1
 20558  01474A  8169               	bsf	___flmul@prod& (0+255),0,b
 20559                           
 20560                           ; BSR set to: 1
 20561  01474C  90D8               	bcf	status,0,c
 20562  01474E  3765               	rlcf	___flmul@grs& (0+255),f,b
 20563  014750  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
 20564  014752  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
 20565  014754  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
 20566  014756  076D               	decf	___flmul@temp& (0+255),f,b
 20567  014758  A0D8               	btfss	status,0,c
 20568  01475A  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 20569  01475C                     l2247:
 20570                           
 20571                           ; BSR set to: 1
 20572                           
 20573                           ; BSR set to: 1
 20574  01475C  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 20575  01475E  D7EF               	goto	l2248
 20576                           
 20577                           ; BSR set to: 1
 20578                           
 20579                           ; BSR set to: 1
 20580  014760  0E00               	movlw	0
 20581  014762  6F63               	movwf	___flmul@aexp& (0+255),b
 20582                           
 20583                           ; BSR set to: 1
 20584  014764  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
 20585  014766  D016               	goto	l2254
 20586                           
 20587                           ; BSR set to: 1
 20588  014768  0EFF               	movlw	255
 20589  01476A  1565               	andwf	___flmul@grs& (0+255),w,b
 20590  01476C  6F5E               	movwf	??___flmul& (0+255),b
 20591  01476E  0EFF               	movlw	255
 20592  014770  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
 20593  014772  6F5F               	movwf	(??___flmul+1)& (0+255),b
 20594  014774  0EFF               	movlw	255
 20595  014776  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
 20596  014778  6F60               	movwf	(??___flmul+2)& (0+255),b
 20597  01477A  0E7F               	movlw	127
 20598  01477C  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
 20599  01477E  6F61               	movwf	(??___flmul+3)& (0+255),b
 20600  014780  515E               	movf	??___flmul& (0+255),w,b
 20601  014782  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 20602  014784  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 20603  014786  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 20604  014788  A4D8               	btfss	status,2,c
 20605  01478A  D002               	goto	u24010
 20606                           
 20607                           ; BSR set to: 1
 20608                           
 20609                           ; BSR set to: 1
 20610  01478C  A169               	btfss	___flmul@prod& (0+255),0,b
 20611  01478E  D002               	goto	l2254
 20612  014790                     u24010:
 20613                           
 20614                           ; BSR set to: 1
 20615  014790  0E01               	movlw	1
 20616  014792  6F63               	movwf	___flmul@aexp& (0+255),b
 20617  014794                     l2254:
 20618                           
 20619                           ; BSR set to: 1
 20620                           
 20621                           ; BSR set to: 1
 20622                           
 20623                           ; BSR set to: 1
 20624  014794  5163               	movf	___flmul@aexp& (0+255),w,b
 20625  014796  B4D8               	btfsc	status,2,c
 20626  014798  D01F               	goto	l2256
 20627                           
 20628                           ; BSR set to: 1
 20629  01479A  0E01               	movlw	1
 20630  01479C  2769               	addwf	___flmul@prod& (0+255),f,b
 20631  01479E  0E00               	movlw	0
 20632  0147A0  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 20633  0147A2  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 20634  0147A4  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 20635                           
 20636                           ; BSR set to: 1
 20637  0147A6  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 20638  0147A8  D017               	goto	l2256
 20639                           
 20640                           ; BSR set to: 1
 20641  0147AA  C169  F15E         	movff	___flmul@prod,??___flmul
 20642  0147AE  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 20643  0147B2  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 20644  0147B6  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 20645  0147BA  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 20646  0147BC  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 20647  0147BE  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 20648  0147C0  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 20649  0147C2  335E               	rrcf	??___flmul& (0+255),f,b
 20650  0147C4  C15E  F169         	movff	??___flmul,___flmul@prod
 20651  0147C8  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 20652  0147CC  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 20653  0147D0  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 20654                           
 20655                           ; BSR set to: 1
 20656  0147D4  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 20657  0147D6  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 20658  0147D8                     l2256:
 20659                           
 20660                           ; BSR set to: 1
 20661                           
 20662                           ; BSR set to: 1
 20663                           
 20664                           ; BSR set to: 1
 20665  0147D8  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 20666  0147DA  D00D               	goto	l2257
 20667  0147DC  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20668  0147DE  E103               	bnz	u24040
 20669  0147E0  296D               	incf	___flmul@temp& (0+255),w,b
 20670  0147E2  A0D8               	btfss	status,0,c
 20671  0147E4  D008               	goto	l2257
 20672  0147E6                     u24040:
 20673                           
 20674                           ; BSR set to: 1
 20675  0147E6  0E00               	movlw	0
 20676  0147E8  6F69               	movwf	___flmul@prod& (0+255),b
 20677  0147EA  0E00               	movlw	0
 20678  0147EC  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 20679  0147EE  0E80               	movlw	128
 20680  0147F0  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 20681  0147F2  0E7F               	movlw	127
 20682  0147F4  D020               	goto	L4
 20683  0147F6                     l2257:
 20684                           
 20685                           ; BSR set to: 1
 20686                           
 20687                           ; BSR set to: 1
 20688  0147F6  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 20689  0147F8  D005               	goto	u24050
 20690  0147FA  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 20691  0147FC  E10E               	bnz	l2259
 20692  0147FE  056D               	decf	___flmul@temp& (0+255),w,b
 20693  014800  B0D8               	btfsc	status,0,c
 20694  014802  D00B               	goto	l2259
 20695  014804                     u24050:
 20696                           
 20697                           ; BSR set to: 1
 20698  014804  0E00               	movlw	0
 20699  014806  6F69               	movwf	___flmul@prod& (0+255),b
 20700  014808  0E00               	movlw	0
 20701  01480A  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 20702  01480C  0E00               	movlw	0
 20703  01480E  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 20704  014810  0E00               	movlw	0
 20705  014812  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 20706  014814  0E00               	movlw	0
 20707  014816  6F62               	movwf	___flmul@sign& (0+255),b
 20708  014818  D00F               	goto	l2260
 20709  01481A                     l2259:
 20710                           
 20711                           ; BSR set to: 1
 20712  01481A  C16D  F164         	movff	___flmul@temp,___flmul@bexp
 20713                           
 20714                           ; BSR set to: 1
 20715  01481E  0EFF               	movlw	255
 20716  014820  1769               	andwf	___flmul@prod& (0+255),f,b
 20717  014822  0EFF               	movlw	255
 20718  014824  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 20719  014826  0E7F               	movlw	127
 20720  014828  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 20721  01482A  0E00               	movlw	0
 20722  01482C  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 20723                           
 20724                           ; BSR set to: 1
 20725  01482E  B164               	btfsc	___flmul@bexp& (0+255),0,b
 20726                           
 20727                           ; BSR set to: 1
 20728  014830  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 20729                           
 20730                           ; BSR set to: 1
 20731                           
 20732                           ; BSR set to: 1
 20733  014832  90D8               	bcf	status,0,c
 20734  014834  3164               	rrcf	___flmul@bexp& (0+255),w,b
 20735  014836                     L4:
 20736  014836  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 20737  014838                     l2260:
 20738                           
 20739                           ; BSR set to: 1
 20740                           
 20741                           ; BSR set to: 1
 20742                           
 20743                           ; BSR set to: 1
 20744  014838  5162               	movf	___flmul@sign& (0+255),w,b
 20745  01483A  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 20746                           
 20747                           ; BSR set to: 1
 20748  01483C  C169  F156         	movff	___flmul@prod,?___flmul
 20749  014840  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 20750  014844  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 20751  014848  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 20752  01484C  0012               	return	
 20753  01484E                     __end_of___flmul:
 20754                           	opt stack 0
 20755                           tblptru	equ	0xFF8
 20756                           tblptrh	equ	0xFF7
 20757                           tblptrl	equ	0xFF6
 20758                           tablat	equ	0xFF5
 20759                           prodh	equ	0xFF4
 20760                           prodl	equ	0xFF3
 20761                           intcon	equ	0xFF2
 20762                           indf0	equ	0xFEF
 20763                           postinc0	equ	0xFEE
 20764                           fsr0h	equ	0xFEA
 20765                           fsr0l	equ	0xFE9
 20766                           wreg	equ	0xFE8
 20767                           indf1	equ	0xFE7
 20768                           postdec1	equ	0xFE5
 20769                           plusw1	equ	0xFE3
 20770                           fsr1h	equ	0xFE2
 20771                           fsr1l	equ	0xFE1
 20772                           indf2	equ	0xFDF
 20773                           postinc2	equ	0xFDE
 20774                           postdec2	equ	0xFDD
 20775                           plusw2	equ	0xFDB
 20776                           fsr2h	equ	0xFDA
 20777                           fsr2l	equ	0xFD9
 20778                           status	equ	0xFD8
 20779                           
 20780 ;; *************** function ___awmod *****************
 20781 ;; Defined at:
 20782 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 20783 ;; Parameters:    Size  Location     Type
 20784 ;;  dividend        2   23[BANK1 ] int 
 20785 ;;  divisor         2   25[BANK1 ] int 
 20786 ;; Auto vars:     Size  Location     Type
 20787 ;;  sign            1   28[BANK1 ] unsigned char 
 20788 ;;  counter         1   27[BANK1 ] unsigned char 
 20789 ;; Return value:  Size  Location     Type
 20790 ;;                  2   23[BANK1 ] int 
 20791 ;; Registers used:
 20792 ;;		wreg, status,2, status,0
 20793 ;; Tracked objects:
 20794 ;;		On entry : 0/0
 20795 ;;		On exit  : 0/0
 20796 ;;		Unchanged: 0/0
 20797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20798 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20799 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20801 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20802 ;;Total ram usage:        6 bytes
 20803 ;; Hardware stack levels used:    1
 20804 ;; Hardware stack levels required when called:   13
 20805 ;; This function calls:
 20806 ;;		Nothing
 20807 ;; This function is called by:
 20808 ;;		_fround
 20809 ;;		_scale
 20810 ;; This function uses a non-reentrant model
 20811 ;;
 20812                           
 20813                           	psect	text35
 20814  018476                     __ptext35:
 20815                           	opt stack 0
 20816  018476                     ___awmod:
 20817                           	opt stack 13
 20818                           
 20819                           ; BSR set to: 1
 20820                           ;incstack = 0
 20821  018476  0E00               	movlw	0
 20822  018478  0101               	movlb	1	; () banked
 20823  01847A  6F1C               	movwf	___awmod@sign& (0+255),b
 20824                           
 20825                           ; BSR set to: 1
 20826  01847C  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 20827  01847E  D006               	goto	l1827
 20828                           
 20829                           ; BSR set to: 1
 20830  018480  6D17               	negf	___awmod@dividend& (0+255),b
 20831  018482  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 20832  018484  B0D8               	btfsc	status,0,c
 20833  018486  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 20834                           
 20835                           ; BSR set to: 1
 20836  018488  0E01               	movlw	1
 20837  01848A  6F1C               	movwf	___awmod@sign& (0+255),b
 20838  01848C                     l1827:
 20839                           
 20840                           ; BSR set to: 1
 20841                           
 20842                           ; BSR set to: 1
 20843  01848C  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20844  01848E  D004               	goto	l1828
 20845                           
 20846                           ; BSR set to: 1
 20847  018490  6D19               	negf	___awmod@divisor& (0+255),b
 20848  018492  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 20849  018494  B0D8               	btfsc	status,0,c
 20850  018496  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 20851  018498                     l1828:
 20852                           
 20853                           ; BSR set to: 1
 20854                           
 20855                           ; BSR set to: 1
 20856  018498  5119               	movf	___awmod@divisor& (0+255),w,b
 20857  01849A  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 20858  01849C  B4D8               	btfsc	status,2,c
 20859  01849E  D018               	goto	l1835
 20860                           
 20861                           ; BSR set to: 1
 20862  0184A0  0E01               	movlw	1
 20863  0184A2  6F1B               	movwf	___awmod@counter& (0+255),b
 20864  0184A4  D004               	goto	l1830
 20865  0184A6                     
 20866                           ; BSR set to: 1
 20867                           
 20868                           ; BSR set to: 1
 20869  0184A6  90D8               	bcf	status,0,c
 20870  0184A8  3719               	rlcf	___awmod@divisor& (0+255),f,b
 20871  0184AA  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 20872  0184AC  2B1B               	incf	___awmod@counter& (0+255),f,b
 20873  0184AE                     l1830:
 20874                           
 20875                           ; BSR set to: 1
 20876                           
 20877                           ; BSR set to: 1
 20878  0184AE  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20879  0184B0  D7FA               	goto	l1831
 20880  0184B2                     u24160:
 20881                           
 20882                           ; BSR set to: 1
 20883                           
 20884                           ; BSR set to: 1
 20885                           
 20886                           ; BSR set to: 1
 20887  0184B2  5119               	movf	___awmod@divisor& (0+255),w,b
 20888  0184B4  5D17               	subwf	___awmod@dividend& (0+255),w,b
 20889  0184B6  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 20890  0184B8  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 20891  0184BA  A0D8               	btfss	status,0,c
 20892  0184BC  D004               	goto	l1834
 20893                           
 20894                           ; BSR set to: 1
 20895  0184BE  5119               	movf	___awmod@divisor& (0+255),w,b
 20896  0184C0  5F17               	subwf	___awmod@dividend& (0+255),f,b
 20897  0184C2  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 20898  0184C4  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 20899  0184C6                     l1834:
 20900                           
 20901                           ; BSR set to: 1
 20902                           
 20903                           ; BSR set to: 1
 20904  0184C6  90D8               	bcf	status,0,c
 20905  0184C8  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 20906  0184CA  3319               	rrcf	___awmod@divisor& (0+255),f,b
 20907                           
 20908                           ; BSR set to: 1
 20909  0184CC  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 20910  0184CE  D7F1               	goto	u24160
 20911  0184D0                     l1835:
 20912                           
 20913                           ; BSR set to: 1
 20914                           
 20915                           ; BSR set to: 1
 20916                           
 20917                           ; BSR set to: 1
 20918  0184D0  511C               	movf	___awmod@sign& (0+255),w,b
 20919  0184D2  B4D8               	btfsc	status,2,c
 20920  0184D4  D004               	goto	l1836
 20921                           
 20922                           ; BSR set to: 1
 20923  0184D6  6D17               	negf	___awmod@dividend& (0+255),b
 20924  0184D8  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 20925  0184DA  B0D8               	btfsc	status,0,c
 20926  0184DC  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 20927  0184DE                     l1836:
 20928                           
 20929                           ; BSR set to: 1
 20930                           
 20931                           ; BSR set to: 1
 20932  0184DE  C117  F117         	movff	___awmod@dividend,?___awmod
 20933  0184E2  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 20934  0184E6  0012               	return	
 20935  0184E8                     __end_of___awmod:
 20936                           	opt stack 0
 20937                           tblptru	equ	0xFF8
 20938                           tblptrh	equ	0xFF7
 20939                           tblptrl	equ	0xFF6
 20940                           tablat	equ	0xFF5
 20941                           prodh	equ	0xFF4
 20942                           prodl	equ	0xFF3
 20943                           intcon	equ	0xFF2
 20944                           indf0	equ	0xFEF
 20945                           postinc0	equ	0xFEE
 20946                           fsr0h	equ	0xFEA
 20947                           fsr0l	equ	0xFE9
 20948                           wreg	equ	0xFE8
 20949                           indf1	equ	0xFE7
 20950                           postdec1	equ	0xFE5
 20951                           plusw1	equ	0xFE3
 20952                           fsr1h	equ	0xFE2
 20953                           fsr1l	equ	0xFE1
 20954                           indf2	equ	0xFDF
 20955                           postinc2	equ	0xFDE
 20956                           postdec2	equ	0xFDD
 20957                           plusw2	equ	0xFDB
 20958                           fsr2h	equ	0xFDA
 20959                           fsr2l	equ	0xFD9
 20960                           status	equ	0xFD8
 20961                           
 20962 ;; *************** function ___awdiv *****************
 20963 ;; Defined at:
 20964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 20965 ;; Parameters:    Size  Location     Type
 20966 ;;  dividend        2   29[BANK1 ] int 
 20967 ;;  divisor         2   31[BANK1 ] int 
 20968 ;; Auto vars:     Size  Location     Type
 20969 ;;  quotient        2   35[BANK1 ] int 
 20970 ;;  sign            1   34[BANK1 ] unsigned char 
 20971 ;;  counter         1   33[BANK1 ] unsigned char 
 20972 ;; Return value:  Size  Location     Type
 20973 ;;                  2   29[BANK1 ] int 
 20974 ;; Registers used:
 20975 ;;		wreg, status,2, status,0
 20976 ;; Tracked objects:
 20977 ;;		On entry : 0/0
 20978 ;;		On exit  : 0/0
 20979 ;;		Unchanged: 0/0
 20980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20981 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20982 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20984 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20985 ;;Total ram usage:        8 bytes
 20986 ;; Hardware stack levels used:    1
 20987 ;; Hardware stack levels required when called:   13
 20988 ;; This function calls:
 20989 ;;		Nothing
 20990 ;; This function is called by:
 20991 ;;		_fround
 20992 ;;		_scale
 20993 ;;		_printf
 20994 ;; This function uses a non-reentrant model
 20995 ;;
 20996                           
 20997                           	psect	text36
 20998  018170                     __ptext36:
 20999                           	opt stack 0
 21000  018170                     ___awdiv:
 21001                           	opt stack 13
 21002                           
 21003                           ; BSR set to: 1
 21004                           ;incstack = 0
 21005  018170  0E00               	movlw	0
 21006  018172  0101               	movlb	1	; () banked
 21007  018174  6F22               	movwf	___awdiv@sign& (0+255),b
 21008                           
 21009                           ; BSR set to: 1
 21010  018176  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21011  018178  D006               	goto	l1814
 21012                           
 21013                           ; BSR set to: 1
 21014  01817A  6D1F               	negf	___awdiv@divisor& (0+255),b
 21015  01817C  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 21016  01817E  B0D8               	btfsc	status,0,c
 21017  018180  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 21018                           
 21019                           ; BSR set to: 1
 21020  018182  0E01               	movlw	1
 21021  018184  6F22               	movwf	___awdiv@sign& (0+255),b
 21022  018186                     l1814:
 21023                           
 21024                           ; BSR set to: 1
 21025                           
 21026                           ; BSR set to: 1
 21027  018186  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 21028  018188  D006               	goto	l1815
 21029                           
 21030                           ; BSR set to: 1
 21031  01818A  6D1D               	negf	___awdiv@dividend& (0+255),b
 21032  01818C  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 21033  01818E  B0D8               	btfsc	status,0,c
 21034  018190  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 21035                           
 21036                           ; BSR set to: 1
 21037  018192  0E01               	movlw	1
 21038  018194  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 21039  018196                     l1815:
 21040                           
 21041                           ; BSR set to: 1
 21042                           
 21043                           ; BSR set to: 1
 21044  018196  0E00               	movlw	0
 21045  018198  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 21046  01819A  0E00               	movlw	0
 21047  01819C  6F23               	movwf	___awdiv@quotient& (0+255),b
 21048                           
 21049                           ; BSR set to: 1
 21050  01819E  511F               	movf	___awdiv@divisor& (0+255),w,b
 21051  0181A0  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 21052  0181A2  B4D8               	btfsc	status,2,c
 21053  0181A4  D01C               	goto	l1822
 21054                           
 21055                           ; BSR set to: 1
 21056  0181A6  0E01               	movlw	1
 21057  0181A8  6F21               	movwf	___awdiv@counter& (0+255),b
 21058  0181AA  D004               	goto	l1817
 21059  0181AC                     
 21060                           ; BSR set to: 1
 21061                           
 21062                           ; BSR set to: 1
 21063  0181AC  90D8               	bcf	status,0,c
 21064  0181AE  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 21065  0181B0  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 21066  0181B2  2B21               	incf	___awdiv@counter& (0+255),f,b
 21067  0181B4                     l1817:
 21068                           
 21069                           ; BSR set to: 1
 21070                           
 21071                           ; BSR set to: 1
 21072  0181B4  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 21073  0181B6  D7FA               	goto	l1818
 21074  0181B8                     u24100:
 21075                           
 21076                           ; BSR set to: 1
 21077                           
 21078                           ; BSR set to: 1
 21079                           
 21080                           ; BSR set to: 1
 21081  0181B8  90D8               	bcf	status,0,c
 21082  0181BA  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 21083  0181BC  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 21084                           
 21085                           ; BSR set to: 1
 21086  0181BE  511F               	movf	___awdiv@divisor& (0+255),w,b
 21087  0181C0  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 21088  0181C2  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 21089  0181C4  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 21090  0181C6  A0D8               	btfss	status,0,c
 21091  0181C8  D005               	goto	l1821
 21092                           
 21093                           ; BSR set to: 1
 21094  0181CA  511F               	movf	___awdiv@divisor& (0+255),w,b
 21095  0181CC  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 21096  0181CE  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 21097  0181D0  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 21098                           
 21099                           ; BSR set to: 1
 21100  0181D2  8123               	bsf	___awdiv@quotient& (0+255),0,b
 21101  0181D4                     l1821:
 21102                           
 21103                           ; BSR set to: 1
 21104                           
 21105                           ; BSR set to: 1
 21106  0181D4  90D8               	bcf	status,0,c
 21107  0181D6  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 21108  0181D8  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 21109                           
 21110                           ; BSR set to: 1
 21111  0181DA  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 21112  0181DC  D7ED               	goto	u24100
 21113  0181DE                     l1822:
 21114                           
 21115                           ; BSR set to: 1
 21116                           
 21117                           ; BSR set to: 1
 21118                           
 21119                           ; BSR set to: 1
 21120  0181DE  5122               	movf	___awdiv@sign& (0+255),w,b
 21121  0181E0  B4D8               	btfsc	status,2,c
 21122  0181E2  D004               	goto	l1823
 21123                           
 21124                           ; BSR set to: 1
 21125  0181E4  6D23               	negf	___awdiv@quotient& (0+255),b
 21126  0181E6  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 21127  0181E8  B0D8               	btfsc	status,0,c
 21128  0181EA  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 21129  0181EC                     l1823:
 21130                           
 21131                           ; BSR set to: 1
 21132                           
 21133                           ; BSR set to: 1
 21134  0181EC  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 21135  0181F0  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 21136  0181F4  0012               	return	
 21137  0181F6                     __end_of___awdiv:
 21138                           	opt stack 0
 21139                           tblptru	equ	0xFF8
 21140                           tblptrh	equ	0xFF7
 21141                           tblptrl	equ	0xFF6
 21142                           tablat	equ	0xFF5
 21143                           prodh	equ	0xFF4
 21144                           prodl	equ	0xFF3
 21145                           intcon	equ	0xFF2
 21146                           indf0	equ	0xFEF
 21147                           postinc0	equ	0xFEE
 21148                           fsr0h	equ	0xFEA
 21149                           fsr0l	equ	0xFE9
 21150                           wreg	equ	0xFE8
 21151                           indf1	equ	0xFE7
 21152                           postdec1	equ	0xFE5
 21153                           plusw1	equ	0xFE3
 21154                           fsr1h	equ	0xFE2
 21155                           fsr1l	equ	0xFE1
 21156                           indf2	equ	0xFDF
 21157                           postinc2	equ	0xFDE
 21158                           postdec2	equ	0xFDD
 21159                           plusw2	equ	0xFDB
 21160                           fsr2h	equ	0xFDA
 21161                           fsr2l	equ	0xFD9
 21162                           status	equ	0xFD8
 21163                           
 21164 ;; *************** function __tdiv_to_l_ *****************
 21165 ;; Defined at:
 21166 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 21167 ;; Parameters:    Size  Location     Type
 21168 ;;  f1              3   23[BANK1 ] float 
 21169 ;;  f2              3   26[BANK1 ] float 
 21170 ;; Auto vars:     Size  Location     Type
 21171 ;;  quot            4   32[BANK1 ] unsigned long 
 21172 ;;  exp1            1   37[BANK1 ] unsigned char 
 21173 ;;  cntr            1   36[BANK1 ] unsigned char 
 21174 ;; Return value:  Size  Location     Type
 21175 ;;                  4   23[BANK1 ] unsigned long 
 21176 ;; Registers used:
 21177 ;;		wreg, status,2, status,0
 21178 ;; Tracked objects:
 21179 ;;		On entry : 0/0
 21180 ;;		On exit  : 0/0
 21181 ;;		Unchanged: 0/0
 21182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21183 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21184 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21185 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21186 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21187 ;;Total ram usage:       15 bytes
 21188 ;; Hardware stack levels used:    1
 21189 ;; Hardware stack levels required when called:   13
 21190 ;; This function calls:
 21191 ;;		Nothing
 21192 ;; This function is called by:
 21193 ;;		_printf
 21194 ;; This function uses a non-reentrant model
 21195 ;;
 21196                           
 21197                           	psect	text37
 21198  016F48                     __ptext37:
 21199                           	opt stack 0
 21200  016F48                     __tdiv_to_l_:
 21201                           	opt stack 14
 21202                           
 21203                           ; BSR set to: 1
 21204                           ;incstack = 0
 21205  016F48  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 21206  016F4C  0101               	movlb	1	; () banked
 21207  016F4E  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 21208  016F50  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 21209  016F52  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 21210  016F54  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 21211  016F56  E301               	bnc	u24281
 21212  016F58  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 21213  016F5A                     u24281:
 21214  016F5A  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 21215  016F5C  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 21216  016F5E  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 21217  016F60  A4D8               	btfss	status,2,c
 21218  016F62  D009               	goto	l1962
 21219                           
 21220                           ; BSR set to: 1
 21221  016F64  0E00               	movlw	0
 21222  016F66  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 21223  016F68  0E00               	movlw	0
 21224  016F6A  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 21225  016F6C  0E00               	movlw	0
 21226  016F6E  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 21227  016F70  0E00               	movlw	0
 21228  016F72  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 21229                           
 21230                           ; BSR set to: 1
 21231  016F74  0012               	return	
 21232  016F76                     l1962:
 21233                           
 21234                           ; BSR set to: 1
 21235                           
 21236                           ; BSR set to: 1
 21237  016F76  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 21238  016F7A  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 21239  016F7C  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 21240  016F7E  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 21241  016F80  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 21242  016F82  E301               	bnc	u24301
 21243  016F84  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 21244  016F86                     u24301:
 21245  016F86  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 21246  016F88  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 21247  016F8A  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 21248  016F8C  A4D8               	btfss	status,2,c
 21249  016F8E  D009               	goto	l1964
 21250                           
 21251                           ; BSR set to: 1
 21252  016F90  0E00               	movlw	0
 21253  016F92  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 21254  016F94  0E00               	movlw	0
 21255  016F96  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 21256  016F98  0E00               	movlw	0
 21257  016F9A  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 21258  016F9C  0E00               	movlw	0
 21259  016F9E  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 21260                           
 21261                           ; BSR set to: 1
 21262  016FA0  0012               	return	
 21263  016FA2                     l1964:
 21264                           
 21265                           ; BSR set to: 1
 21266                           
 21267                           ; BSR set to: 1
 21268  016FA2  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 21269                           
 21270                           ; BSR set to: 1
 21271  016FA4  0EFF               	movlw	255
 21272  016FA6  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 21273  016FA8  0EFF               	movlw	255
 21274  016FAA  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 21275  016FAC  0E00               	movlw	0
 21276  016FAE  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 21277  016FB0  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 21278                           
 21279                           ; BSR set to: 1
 21280  016FB2  0EFF               	movlw	255
 21281  016FB4  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 21282  016FB6  0EFF               	movlw	255
 21283  016FB8  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 21284  016FBA  0E00               	movlw	0
 21285  016FBC  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 21286                           
 21287                           ; BSR set to: 1
 21288  016FBE  0E00               	movlw	0
 21289  016FC0  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 21290  016FC2  0E00               	movlw	0
 21291  016FC4  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 21292  016FC6  0E00               	movlw	0
 21293  016FC8  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 21294  016FCA  0E00               	movlw	0
 21295  016FCC  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 21296                           
 21297                           ; BSR set to: 1
 21298  016FCE  0E7F               	movlw	127
 21299  016FD0  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 21300                           
 21301                           ; BSR set to: 1
 21302  016FD2  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 21303  016FD4  0F98               	addlw	152
 21304  016FD6  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 21305                           
 21306                           ; BSR set to: 1
 21307  016FD8  0E18               	movlw	24
 21308  016FDA  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 21309  016FDC                     l1965:
 21310                           
 21311                           ; BSR set to: 1
 21312  016FDC  90D8               	bcf	status,0,c
 21313  016FDE  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 21314  016FE0  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 21315  016FE2  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 21316  016FE4  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 21317                           
 21318                           ; BSR set to: 1
 21319  016FE6  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 21320  016FE8  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 21321  016FEA  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 21322  016FEC  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 21323  016FEE  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 21324  016FF0  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 21325  016FF2  A0D8               	btfss	status,0,c
 21326  016FF4  D007               	goto	l1966
 21327                           
 21328                           ; BSR set to: 1
 21329  016FF6  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 21330  016FF8  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 21331  016FFA  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 21332  016FFC  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 21333  016FFE  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 21334  017000  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 21335                           
 21336                           ; BSR set to: 1
 21337  017002  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 21338  017004                     l1966:
 21339                           
 21340                           ; BSR set to: 1
 21341  017004  90D8               	bcf	status,0,c
 21342  017006  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 21343  017008  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 21344  01700A  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 21345                           
 21346                           ; BSR set to: 1
 21347  01700C  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 21348  01700E  D7E6               	goto	l1965
 21349                           
 21350                           ; BSR set to: 1
 21351                           
 21352                           ; BSR set to: 1
 21353  017010  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 21354  017012  D016               	goto	l1968
 21355                           
 21356                           ; BSR set to: 1
 21357  017014  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 21358  017016  0A80               	xorlw	128
 21359  017018  0F97               	addlw	151
 21360  01701A  B0D8               	btfsc	status,0,c
 21361  01701C  D009               	goto	l1969
 21362                           
 21363                           ; BSR set to: 1
 21364  01701E  0E00               	movlw	0
 21365  017020  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 21366  017022  0E00               	movlw	0
 21367  017024  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 21368  017026  0E00               	movlw	0
 21369  017028  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 21370  01702A  0E00               	movlw	0
 21371  01702C  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 21372                           
 21373                           ; BSR set to: 1
 21374  01702E  0012               	return	
 21375  017030                     l1969:
 21376                           
 21377                           ; BSR set to: 1
 21378                           
 21379                           ; BSR set to: 1
 21380                           
 21381                           ; BSR set to: 1
 21382  017030  90D8               	bcf	status,0,c
 21383  017032  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 21384  017034  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 21385  017036  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 21386  017038  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 21387                           
 21388                           ; BSR set to: 1
 21389  01703A  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 21390  01703C  D7F9               	goto	l1969
 21391                           
 21392                           ; BSR set to: 1
 21393  01703E  D015               	goto	u24360
 21394  017040                     l1968:
 21395                           
 21396                           ; BSR set to: 1
 21397                           
 21398                           ; BSR set to: 1
 21399  017040  0E17               	movlw	23
 21400  017042  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 21401  017044  D00F               	goto	l1974
 21402                           
 21403                           ; BSR set to: 1
 21404  017046  0E00               	movlw	0
 21405  017048  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 21406  01704A  0E00               	movlw	0
 21407  01704C  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 21408  01704E  0E00               	movlw	0
 21409  017050  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 21410  017052  0E00               	movlw	0
 21411  017054  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 21412                           
 21413                           ; BSR set to: 1
 21414  017056  0012               	return	
 21415  017058                     
 21416                           ; BSR set to: 1
 21417                           
 21418                           ; BSR set to: 1
 21419  017058  90D8               	bcf	status,0,c
 21420  01705A  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 21421  01705C  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 21422  01705E  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 21423  017060  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 21424  017062  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 21425  017064                     l1974:
 21426                           
 21427                           ; BSR set to: 1
 21428                           
 21429                           ; BSR set to: 1
 21430  017064  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 21431  017066  A4D8               	btfss	status,2,c
 21432  017068  D7F7               	goto	l1975
 21433  01706A                     u24360:
 21434                           
 21435                           ; BSR set to: 1
 21436                           
 21437                           ; BSR set to: 1
 21438  01706A  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 21439  01706E  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 21440  017072  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 21441  017076  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 21442                           
 21443                           ; BSR set to: 1
 21444  01707A  0012               	return		;funcret
 21445  01707C                     __end_of__tdiv_to_l_:
 21446                           	opt stack 0
 21447                           tblptru	equ	0xFF8
 21448                           tblptrh	equ	0xFF7
 21449                           tblptrl	equ	0xFF6
 21450                           tablat	equ	0xFF5
 21451                           prodh	equ	0xFF4
 21452                           prodl	equ	0xFF3
 21453                           intcon	equ	0xFF2
 21454                           indf0	equ	0xFEF
 21455                           postinc0	equ	0xFEE
 21456                           fsr0h	equ	0xFEA
 21457                           fsr0l	equ	0xFE9
 21458                           wreg	equ	0xFE8
 21459                           indf1	equ	0xFE7
 21460                           postdec1	equ	0xFE5
 21461                           plusw1	equ	0xFE3
 21462                           fsr1h	equ	0xFE2
 21463                           fsr1l	equ	0xFE1
 21464                           indf2	equ	0xFDF
 21465                           postinc2	equ	0xFDE
 21466                           postdec2	equ	0xFDD
 21467                           plusw2	equ	0xFDB
 21468                           fsr2h	equ	0xFDA
 21469                           fsr2l	equ	0xFD9
 21470                           status	equ	0xFD8
 21471                           
 21472 ;; *************** function __div_to_l_ *****************
 21473 ;; Defined at:
 21474 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 21475 ;; Parameters:    Size  Location     Type
 21476 ;;  f1              4   23[BANK1 ] unsigned long 
 21477 ;;  f2              4   27[BANK1 ] unsigned long 
 21478 ;; Auto vars:     Size  Location     Type
 21479 ;;  quot            4   31[BANK1 ] unsigned long 
 21480 ;;  exp1            1   36[BANK1 ] unsigned char 
 21481 ;;  cntr            1   35[BANK1 ] unsigned char 
 21482 ;; Return value:  Size  Location     Type
 21483 ;;                  4   23[BANK1 ] unsigned long 
 21484 ;; Registers used:
 21485 ;;		wreg, status,2, status,0
 21486 ;; Tracked objects:
 21487 ;;		On entry : 0/0
 21488 ;;		On exit  : 0/0
 21489 ;;		Unchanged: 0/0
 21490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21491 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21492 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21494 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21495 ;;Total ram usage:       14 bytes
 21496 ;; Hardware stack levels used:    1
 21497 ;; Hardware stack levels required when called:   13
 21498 ;; This function calls:
 21499 ;;		Nothing
 21500 ;; This function is called by:
 21501 ;;		_printf
 21502 ;; This function uses a non-reentrant model
 21503 ;;
 21504                           
 21505                           	psect	text38
 21506  0171AE                     __ptext38:
 21507                           	opt stack 0
 21508  0171AE                     __div_to_l_:
 21509                           	opt stack 14
 21510                           
 21511                           ; BSR set to: 1
 21512                           ;incstack = 0
 21513  0171AE  0101               	movlb	1	; () banked
 21514  0171B0  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 21515  0171B2  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 21516  0171B4  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 21517  0171B6  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 21518  0171B8  A4D8               	btfss	status,2,c
 21519  0171BA  D009               	goto	l1858
 21520                           
 21521                           ; BSR set to: 1
 21522  0171BC  0E00               	movlw	0
 21523  0171BE  6F17               	movwf	?__div_to_l_& (0+255),b
 21524  0171C0  0E00               	movlw	0
 21525  0171C2  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 21526  0171C4  0E00               	movlw	0
 21527  0171C6  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 21528  0171C8  0E00               	movlw	0
 21529  0171CA  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 21530                           
 21531                           ; BSR set to: 1
 21532  0171CC  0012               	return	
 21533  0171CE                     l1858:
 21534                           
 21535                           ; BSR set to: 1
 21536                           
 21537                           ; BSR set to: 1
 21538  0171CE  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 21539  0171D0  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 21540  0171D2  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 21541  0171D4  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 21542  0171D6  A4D8               	btfss	status,2,c
 21543  0171D8  D009               	goto	l1860
 21544                           
 21545                           ; BSR set to: 1
 21546  0171DA  0E00               	movlw	0
 21547  0171DC  6F17               	movwf	?__div_to_l_& (0+255),b
 21548  0171DE  0E00               	movlw	0
 21549  0171E0  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 21550  0171E2  0E00               	movlw	0
 21551  0171E4  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 21552  0171E6  0E00               	movlw	0
 21553  0171E8  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 21554                           
 21555                           ; BSR set to: 1
 21556  0171EA  0012               	return	
 21557  0171EC                     l1860:
 21558                           
 21559                           ; BSR set to: 1
 21560                           
 21561                           ; BSR set to: 1
 21562  0171EC  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 21563                           
 21564                           ; BSR set to: 1
 21565  0171EE  0EFF               	movlw	255
 21566  0171F0  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 21567  0171F2  0EFF               	movlw	255
 21568  0171F4  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 21569  0171F6  0EFF               	movlw	255
 21570  0171F8  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 21571  0171FA  0E00               	movlw	0
 21572  0171FC  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 21573                           
 21574                           ; BSR set to: 1
 21575  0171FE  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 21576  017200  0EFF               	movlw	255
 21577  017202  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 21578  017204  0EFF               	movlw	255
 21579  017206  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 21580  017208  0EFF               	movlw	255
 21581  01720A  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 21582  01720C  0E00               	movlw	0
 21583  01720E  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 21584                           
 21585                           ; BSR set to: 1
 21586  017210  0E00               	movlw	0
 21587  017212  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 21588  017214  0E00               	movlw	0
 21589  017216  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 21590  017218  0E00               	movlw	0
 21591  01721A  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 21592  01721C  0E00               	movlw	0
 21593  01721E  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 21594                           
 21595                           ; BSR set to: 1
 21596  017220  0E7F               	movlw	127
 21597  017222  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 21598                           
 21599                           ; BSR set to: 1
 21600  017224  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 21601  017226  0FA0               	addlw	160
 21602  017228  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 21603                           
 21604                           ; BSR set to: 1
 21605  01722A  0E20               	movlw	32
 21606  01722C  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 21607  01722E                     
 21608                           ; BSR set to: 1
 21609                           
 21610                           ; BSR set to: 1
 21611  01722E  90D8               	bcf	status,0,c
 21612  017230  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 21613  017232  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 21614  017234  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 21615  017236  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 21616                           
 21617                           ; BSR set to: 1
 21618  017238  511B               	movf	__div_to_l_@f2& (0+255),w,b
 21619  01723A  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 21620  01723C  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 21621  01723E  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 21622  017240  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 21623  017242  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 21624  017244  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 21625  017246  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 21626  017248  A0D8               	btfss	status,0,c
 21627  01724A  D009               	goto	l1862
 21628                           
 21629                           ; BSR set to: 1
 21630  01724C  511B               	movf	__div_to_l_@f2& (0+255),w,b
 21631  01724E  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 21632  017250  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 21633  017252  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 21634  017254  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 21635  017256  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 21636  017258  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 21637  01725A  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 21638                           
 21639                           ; BSR set to: 1
 21640  01725C  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 21641  01725E                     l1862:
 21642                           
 21643                           ; BSR set to: 1
 21644                           
 21645                           ; BSR set to: 1
 21646  01725E  90D8               	bcf	status,0,c
 21647  017260  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 21648  017262  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 21649  017264  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 21650  017266  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 21651                           
 21652                           ; BSR set to: 1
 21653  017268  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 21654  01726A  D7E1               	goto	l1861
 21655                           
 21656                           ; BSR set to: 1
 21657                           
 21658                           ; BSR set to: 1
 21659  01726C  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 21660  01726E  D016               	goto	l1864
 21661                           
 21662                           ; BSR set to: 1
 21663  017270  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 21664  017272  0A80               	xorlw	128
 21665  017274  0F9F               	addlw	159
 21666  017276  B0D8               	btfsc	status,0,c
 21667  017278  D009               	goto	l1865
 21668                           
 21669                           ; BSR set to: 1
 21670  01727A  0E00               	movlw	0
 21671  01727C  6F17               	movwf	?__div_to_l_& (0+255),b
 21672  01727E  0E00               	movlw	0
 21673  017280  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 21674  017282  0E00               	movlw	0
 21675  017284  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 21676  017286  0E00               	movlw	0
 21677  017288  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 21678                           
 21679                           ; BSR set to: 1
 21680  01728A  0012               	return	
 21681  01728C                     l1865:
 21682                           
 21683                           ; BSR set to: 1
 21684                           
 21685                           ; BSR set to: 1
 21686                           
 21687                           ; BSR set to: 1
 21688  01728C  90D8               	bcf	status,0,c
 21689  01728E  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 21690  017290  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 21691  017292  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 21692  017294  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 21693                           
 21694                           ; BSR set to: 1
 21695  017296  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 21696  017298  D7F9               	goto	l1865
 21697                           
 21698                           ; BSR set to: 1
 21699  01729A  D015               	goto	u24430
 21700  01729C                     l1864:
 21701                           
 21702                           ; BSR set to: 1
 21703                           
 21704                           ; BSR set to: 1
 21705  01729C  0E1F               	movlw	31
 21706  01729E  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 21707  0172A0  D00F               	goto	l1870
 21708                           
 21709                           ; BSR set to: 1
 21710  0172A2  0E00               	movlw	0
 21711  0172A4  6F17               	movwf	?__div_to_l_& (0+255),b
 21712  0172A6  0E00               	movlw	0
 21713  0172A8  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 21714  0172AA  0E00               	movlw	0
 21715  0172AC  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 21716  0172AE  0E00               	movlw	0
 21717  0172B0  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 21718                           
 21719                           ; BSR set to: 1
 21720  0172B2  0012               	return	
 21721  0172B4                     
 21722                           ; BSR set to: 1
 21723                           
 21724                           ; BSR set to: 1
 21725  0172B4  90D8               	bcf	status,0,c
 21726  0172B6  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 21727  0172B8  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 21728  0172BA  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 21729  0172BC  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 21730  0172BE  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 21731  0172C0                     l1870:
 21732                           
 21733                           ; BSR set to: 1
 21734                           
 21735                           ; BSR set to: 1
 21736  0172C0  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 21737  0172C2  A4D8               	btfss	status,2,c
 21738  0172C4  D7F7               	goto	l1871
 21739  0172C6                     u24430:
 21740                           
 21741                           ; BSR set to: 1
 21742                           
 21743                           ; BSR set to: 1
 21744  0172C6  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 21745  0172CA  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 21746  0172CE  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 21747  0172D2  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 21748                           
 21749                           ; BSR set to: 1
 21750  0172D6  0012               	return		;funcret
 21751  0172D8                     __end_of__div_to_l_:
 21752                           	opt stack 0
 21753                           tblptru	equ	0xFF8
 21754                           tblptrh	equ	0xFF7
 21755                           tblptrl	equ	0xFF6
 21756                           tablat	equ	0xFF5
 21757                           prodh	equ	0xFF4
 21758                           prodl	equ	0xFF3
 21759                           intcon	equ	0xFF2
 21760                           indf0	equ	0xFEF
 21761                           postinc0	equ	0xFEE
 21762                           fsr0h	equ	0xFEA
 21763                           fsr0l	equ	0xFE9
 21764                           wreg	equ	0xFE8
 21765                           indf1	equ	0xFE7
 21766                           postdec1	equ	0xFE5
 21767                           plusw1	equ	0xFE3
 21768                           fsr1h	equ	0xFE2
 21769                           fsr1l	equ	0xFE1
 21770                           indf2	equ	0xFDF
 21771                           postinc2	equ	0xFDE
 21772                           postdec2	equ	0xFDD
 21773                           plusw2	equ	0xFDB
 21774                           fsr2h	equ	0xFDA
 21775                           fsr2l	equ	0xFD9
 21776                           status	equ	0xFD8
 21777                           
 21778 ;; *************** function ___xxtofl *****************
 21779 ;; Defined at:
 21780 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 21781 ;; Parameters:    Size  Location     Type
 21782 ;;  sign            1    wreg     unsigned char 
 21783 ;;  val             4   23[BANK1 ] long 
 21784 ;; Auto vars:     Size  Location     Type
 21785 ;;  sign            1   31[BANK1 ] unsigned char 
 21786 ;;  arg             4   33[BANK1 ] unsigned long 
 21787 ;;  exp             1   32[BANK1 ] unsigned char 
 21788 ;; Return value:  Size  Location     Type
 21789 ;;                  4   23[BANK1 ] unsigned char 
 21790 ;; Registers used:
 21791 ;;		wreg, status,2, status,0
 21792 ;; Tracked objects:
 21793 ;;		On entry : 0/0
 21794 ;;		On exit  : 0/0
 21795 ;;		Unchanged: 0/0
 21796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21797 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21798 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21799 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21800 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21801 ;;Total ram usage:       14 bytes
 21802 ;; Hardware stack levels used:    1
 21803 ;; Hardware stack levels required when called:   13
 21804 ;; This function calls:
 21805 ;;		Nothing
 21806 ;; This function is called by:
 21807 ;;		_ringBufferLUT
 21808 ;;		_printf
 21809 ;; This function uses a non-reentrant model
 21810 ;;
 21811                           
 21812                           	psect	text39
 21813  016CA4                     __ptext39:
 21814                           	opt stack 0
 21815  016CA4                     ___xxtofl:
 21816                           	opt stack 14
 21817                           
 21818                           ; BSR set to: 1
 21819                           ;incstack = 0
 21820                           ;___xxtofl@sign stored from wreg
 21821  016CA4  0101               	movlb	1	; () banked
 21822  016CA6  6F1F               	movwf	___xxtofl@sign& (0+255),b
 21823  016CA8  0101               	movlb	1	; () banked
 21824  016CAA  511F               	movf	___xxtofl@sign& (0+255),w,b
 21825  016CAC  A4D8               	btfss	status,2,c
 21826                           
 21827                           ; BSR set to: 1
 21828  016CAE  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 21829  016CB0  D01A               	goto	l2338
 21830                           
 21831                           ; BSR set to: 1
 21832  016CB2  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 21833  016CB6  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 21834  016CBA  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 21835  016CBE  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 21836  016CC2  1F1B               	comf	??___xxtofl& (0+255),f,b
 21837  016CC4  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 21838  016CC6  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 21839  016CC8  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 21840  016CCA  2B1B               	incf	??___xxtofl& (0+255),f,b
 21841  016CCC  0E00               	movlw	0
 21842  016CCE  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 21843  016CD0  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 21844  016CD2  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 21845  016CD4  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 21846  016CD8  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 21847  016CDC  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 21848  016CE0  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 21849  016CE4  D008               	goto	l2339
 21850  016CE6                     l2338:
 21851                           
 21852                           ; BSR set to: 1
 21853  016CE6  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 21854  016CEA  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 21855  016CEE  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 21856  016CF2  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 21857  016CF6                     l2339:
 21858                           
 21859                           ; BSR set to: 1
 21860                           
 21861                           ; BSR set to: 1
 21862  016CF6  5117               	movf	___xxtofl@val& (0+255),w,b
 21863  016CF8  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 21864  016CFA  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 21865  016CFC  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 21866  016CFE  A4D8               	btfss	status,2,c
 21867  016D00  D009               	goto	l2340
 21868                           
 21869                           ; BSR set to: 1
 21870  016D02  0E00               	movlw	0
 21871  016D04  6F17               	movwf	?___xxtofl& (0+255),b
 21872  016D06  0E00               	movlw	0
 21873  016D08  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 21874  016D0A  0E00               	movlw	0
 21875  016D0C  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 21876  016D0E  0E00               	movlw	0
 21877  016D10  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 21878                           
 21879                           ; BSR set to: 1
 21880  016D12  0012               	return	
 21881  016D14                     l2340:
 21882                           
 21883                           ; BSR set to: 1
 21884                           
 21885                           ; BSR set to: 1
 21886  016D14  0E96               	movlw	150
 21887  016D16  6F20               	movwf	___xxtofl@exp& (0+255),b
 21888  016D18  D006               	goto	l2342
 21889  016D1A                     
 21890                           ; BSR set to: 1
 21891                           
 21892                           ; BSR set to: 1
 21893  016D1A  2B20               	incf	___xxtofl@exp& (0+255),f,b
 21894  016D1C  90D8               	bcf	status,0,c
 21895  016D1E  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 21896  016D20  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 21897  016D22  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 21898  016D24  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 21899  016D26                     l2342:
 21900                           
 21901                           ; BSR set to: 1
 21902                           
 21903                           ; BSR set to: 1
 21904  016D26  0E00               	movlw	0
 21905  016D28  1521               	andwf	___xxtofl@arg& (0+255),w,b
 21906  016D2A  6F1B               	movwf	??___xxtofl& (0+255),b
 21907  016D2C  0E00               	movlw	0
 21908  016D2E  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 21909  016D30  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 21910  016D32  0E00               	movlw	0
 21911  016D34  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 21912  016D36  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 21913  016D38  0EFE               	movlw	254
 21914  016D3A  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 21915  016D3C  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 21916  016D3E  511B               	movf	??___xxtofl& (0+255),w,b
 21917  016D40  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 21918  016D42  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 21919  016D44  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 21920  016D46  B4D8               	btfsc	status,2,c
 21921  016D48  D00D               	goto	l2345
 21922  016D4A  D7E7               	goto	l2343
 21923  016D4C                     
 21924                           ; BSR set to: 1
 21925                           
 21926                           ; BSR set to: 1
 21927  016D4C  2B20               	incf	___xxtofl@exp& (0+255),f,b
 21928                           
 21929                           ; BSR set to: 1
 21930  016D4E  0E01               	movlw	1
 21931  016D50  2721               	addwf	___xxtofl@arg& (0+255),f,b
 21932  016D52  0E00               	movlw	0
 21933  016D54  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 21934  016D56  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 21935  016D58  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 21936                           
 21937                           ; BSR set to: 1
 21938  016D5A  90D8               	bcf	status,0,c
 21939  016D5C  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 21940  016D5E  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 21941  016D60  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 21942  016D62  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 21943  016D64                     l2345:
 21944                           
 21945                           ; BSR set to: 1
 21946  016D64  0E00               	movlw	0
 21947  016D66  1521               	andwf	___xxtofl@arg& (0+255),w,b
 21948  016D68  6F1B               	movwf	??___xxtofl& (0+255),b
 21949  016D6A  0E00               	movlw	0
 21950  016D6C  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 21951  016D6E  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 21952  016D70  0E00               	movlw	0
 21953  016D72  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 21954  016D74  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 21955  016D76  0EFF               	movlw	255
 21956  016D78  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 21957  016D7A  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 21958  016D7C  511B               	movf	??___xxtofl& (0+255),w,b
 21959  016D7E  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 21960  016D80  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 21961  016D82  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 21962  016D84  B4D8               	btfsc	status,2,c
 21963  016D86  D007               	goto	l2348
 21964  016D88  D7E1               	goto	l2346
 21965  016D8A                     
 21966                           ; BSR set to: 1
 21967                           
 21968                           ; BSR set to: 1
 21969  016D8A  0720               	decf	___xxtofl@exp& (0+255),f,b
 21970  016D8C  90D8               	bcf	status,0,c
 21971  016D8E  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 21972  016D90  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 21973  016D92  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 21974  016D94  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 21975  016D96                     l2348:
 21976                           
 21977                           ; BSR set to: 1
 21978                           
 21979                           ; BSR set to: 1
 21980  016D96  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 21981  016D98  D003               	goto	u24690
 21982                           
 21983                           ; BSR set to: 1
 21984  016D9A  0E02               	movlw	2
 21985  016D9C  6120               	cpfslt	___xxtofl@exp& (0+255),b
 21986  016D9E  D7F5               	goto	l2349
 21987  016DA0                     u24690:
 21988                           
 21989                           ; BSR set to: 1
 21990                           
 21991                           ; BSR set to: 1
 21992  016DA0  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 21993  016DA2  D008               	goto	l2353
 21994                           
 21995                           ; BSR set to: 1
 21996  016DA4  0EFF               	movlw	255
 21997  016DA6  1721               	andwf	___xxtofl@arg& (0+255),f,b
 21998  016DA8  0EFF               	movlw	255
 21999  016DAA  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 22000  016DAC  0E7F               	movlw	127
 22001  016DAE  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 22002  016DB0  0EFF               	movlw	255
 22003  016DB2  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 22004  016DB4                     l2353:
 22005                           
 22006                           ; BSR set to: 1
 22007  016DB4  90D8               	bcf	status,0,c
 22008  016DB6  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 22009  016DB8  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 22010  016DBC  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 22011  016DBE  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 22012  016DC0  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 22013  016DC2  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 22014  016DC6  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 22015  016DC8  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 22016  016DCA  6B1B               	clrf	??___xxtofl& (0+255),b
 22017  016DCC  511B               	movf	??___xxtofl& (0+255),w,b
 22018  016DCE  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 22019  016DD0  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 22020  016DD2  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 22021  016DD4  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 22022  016DD6  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 22023  016DD8  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 22024  016DDA  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 22025                           
 22026                           ; BSR set to: 1
 22027  016DDC  511F               	movf	___xxtofl@sign& (0+255),w,b
 22028  016DDE  A4D8               	btfss	status,2,c
 22029                           
 22030                           ; BSR set to: 1
 22031  016DE0  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 22032  016DE2  D001               	goto	l2354
 22033                           
 22034                           ; BSR set to: 1
 22035  016DE4  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 22036  016DE6                     l2354:
 22037                           
 22038                           ; BSR set to: 1
 22039                           
 22040                           ; BSR set to: 1
 22041  016DE6  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 22042  016DEA  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 22043  016DEE  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 22044  016DF2  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 22045  016DF6  0012               	return	
 22046  016DF8                     __end_of___xxtofl:
 22047                           	opt stack 0
 22048                           tblptru	equ	0xFF8
 22049                           tblptrh	equ	0xFF7
 22050                           tblptrl	equ	0xFF6
 22051                           tablat	equ	0xFF5
 22052                           prodh	equ	0xFF4
 22053                           prodl	equ	0xFF3
 22054                           intcon	equ	0xFF2
 22055                           indf0	equ	0xFEF
 22056                           postinc0	equ	0xFEE
 22057                           fsr0h	equ	0xFEA
 22058                           fsr0l	equ	0xFE9
 22059                           wreg	equ	0xFE8
 22060                           indf1	equ	0xFE7
 22061                           postdec1	equ	0xFE5
 22062                           plusw1	equ	0xFE3
 22063                           fsr1h	equ	0xFE2
 22064                           fsr1l	equ	0xFE1
 22065                           indf2	equ	0xFDF
 22066                           postinc2	equ	0xFDE
 22067                           postdec2	equ	0xFDD
 22068                           plusw2	equ	0xFDB
 22069                           fsr2h	equ	0xFDA
 22070                           fsr2l	equ	0xFD9
 22071                           status	equ	0xFD8
 22072                           
 22073 ;; *************** function ___wmul *****************
 22074 ;; Defined at:
 22075 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 22076 ;; Parameters:    Size  Location     Type
 22077 ;;  multiplier      2   23[BANK1 ] unsigned int 
 22078 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 22079 ;; Auto vars:     Size  Location     Type
 22080 ;;  product         2   27[BANK1 ] unsigned int 
 22081 ;; Return value:  Size  Location     Type
 22082 ;;                  2   23[BANK1 ] unsigned int 
 22083 ;; Registers used:
 22084 ;;		wreg, status,2, status,0, prodl, prodh
 22085 ;; Tracked objects:
 22086 ;;		On entry : 0/0
 22087 ;;		On exit  : 0/0
 22088 ;;		Unchanged: 0/0
 22089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22090 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22091 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22093 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22094 ;;Total ram usage:        6 bytes
 22095 ;; Hardware stack levels used:    1
 22096 ;; Hardware stack levels required when called:   13
 22097 ;; This function calls:
 22098 ;;		Nothing
 22099 ;; This function is called by:
 22100 ;;		_ringBufferLUT
 22101 ;;		_printf
 22102 ;;		_atoi
 22103 ;; This function uses a non-reentrant model
 22104 ;;
 22105                           
 22106                           	psect	text40
 22107  018FB4                     __ptext40:
 22108                           	opt stack 0
 22109  018FB4                     ___wmul:
 22110                           	opt stack 14
 22111                           
 22112                           ; BSR set to: 1
 22113                           ;incstack = 0
 22114  018FB4  0101               	movlb	1	; () banked
 22115  018FB6  5117               	movf	___wmul@multiplier& (0+255),w,b
 22116  018FB8  0319               	mulwf	___wmul@multiplicand& (0+255),b
 22117  018FBA  CFF3 F11B          	movff	prodl,___wmul@product
 22118  018FBE  CFF4 F11C          	movff	prodh,___wmul@product+1
 22119  018FC2  5117               	movf	___wmul@multiplier& (0+255),w,b
 22120  018FC4  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 22121  018FC6  50F3               	movf	prodl,w,c
 22122  018FC8  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 22123  018FCA  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 22124  018FCC  0319               	mulwf	___wmul@multiplicand& (0+255),b
 22125  018FCE  50F3               	movf	prodl,w,c
 22126  018FD0  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 22127                           
 22128                           ; BSR set to: 1
 22129  018FD2  C11B  F117         	movff	___wmul@product,?___wmul
 22130  018FD6  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 22131  018FDA  0012               	return	
 22132  018FDC                     __end_of___wmul:
 22133                           	opt stack 0
 22134                           tblptru	equ	0xFF8
 22135                           tblptrh	equ	0xFF7
 22136                           tblptrl	equ	0xFF6
 22137                           tablat	equ	0xFF5
 22138                           prodh	equ	0xFF4
 22139                           prodl	equ	0xFF3
 22140                           intcon	equ	0xFF2
 22141                           indf0	equ	0xFEF
 22142                           postinc0	equ	0xFEE
 22143                           fsr0h	equ	0xFEA
 22144                           fsr0l	equ	0xFE9
 22145                           wreg	equ	0xFE8
 22146                           indf1	equ	0xFE7
 22147                           postdec1	equ	0xFE5
 22148                           plusw1	equ	0xFE3
 22149                           fsr1h	equ	0xFE2
 22150                           fsr1l	equ	0xFE1
 22151                           indf2	equ	0xFDF
 22152                           postinc2	equ	0xFDE
 22153                           postdec2	equ	0xFDD
 22154                           plusw2	equ	0xFDB
 22155                           fsr2h	equ	0xFDA
 22156                           fsr2l	equ	0xFD9
 22157                           status	equ	0xFD8
 22158                           
 22159 ;; *************** function ___llmod *****************
 22160 ;; Defined at:
 22161 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 22162 ;; Parameters:    Size  Location     Type
 22163 ;;  dividend        4   36[BANK1 ] unsigned long 
 22164 ;;  divisor         4   40[BANK1 ] unsigned long 
 22165 ;; Auto vars:     Size  Location     Type
 22166 ;;  counter         1   44[BANK1 ] unsigned char 
 22167 ;; Return value:  Size  Location     Type
 22168 ;;                  4   36[BANK1 ] unsigned long 
 22169 ;; Registers used:
 22170 ;;		wreg, status,2, status,0
 22171 ;; Tracked objects:
 22172 ;;		On entry : 0/0
 22173 ;;		On exit  : 0/0
 22174 ;;		Unchanged: 0/0
 22175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22176 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22177 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22179 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22180 ;;Total ram usage:        9 bytes
 22181 ;; Hardware stack levels used:    1
 22182 ;; Hardware stack levels required when called:   13
 22183 ;; This function calls:
 22184 ;;		Nothing
 22185 ;; This function is called by:
 22186 ;;		_printf
 22187 ;; This function uses a non-reentrant model
 22188 ;;
 22189                           
 22190                           	psect	text41
 22191  018698                     __ptext41:
 22192                           	opt stack 0
 22193  018698                     ___llmod:
 22194                           	opt stack 14
 22195                           
 22196                           ; BSR set to: 1
 22197                           ;incstack = 0
 22198  018698  0101               	movlb	1	; () banked
 22199  01869A  5128               	movf	___llmod@divisor& (0+255),w,b
 22200  01869C  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 22201  01869E  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 22202  0186A0  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 22203  0186A2  B4D8               	btfsc	status,2,c
 22204  0186A4  D024               	goto	l2063
 22205                           
 22206                           ; BSR set to: 1
 22207  0186A6  0E01               	movlw	1
 22208  0186A8  6F2C               	movwf	___llmod@counter& (0+255),b
 22209  0186AA  D006               	goto	l2058
 22210  0186AC                     
 22211                           ; BSR set to: 1
 22212                           
 22213                           ; BSR set to: 1
 22214  0186AC  90D8               	bcf	status,0,c
 22215  0186AE  3728               	rlcf	___llmod@divisor& (0+255),f,b
 22216  0186B0  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 22217  0186B2  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 22218  0186B4  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 22219  0186B6  2B2C               	incf	___llmod@counter& (0+255),f,b
 22220  0186B8                     l2058:
 22221                           
 22222                           ; BSR set to: 1
 22223                           
 22224                           ; BSR set to: 1
 22225  0186B8  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 22226  0186BA  D7F8               	goto	l2059
 22227  0186BC                     u24610:
 22228                           
 22229                           ; BSR set to: 1
 22230                           
 22231                           ; BSR set to: 1
 22232                           
 22233                           ; BSR set to: 1
 22234  0186BC  5128               	movf	___llmod@divisor& (0+255),w,b
 22235  0186BE  5D24               	subwf	___llmod@dividend& (0+255),w,b
 22236  0186C0  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 22237  0186C2  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 22238  0186C4  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 22239  0186C6  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 22240  0186C8  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 22241  0186CA  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 22242  0186CC  A0D8               	btfss	status,0,c
 22243  0186CE  D008               	goto	l2062
 22244                           
 22245                           ; BSR set to: 1
 22246  0186D0  5128               	movf	___llmod@divisor& (0+255),w,b
 22247  0186D2  5F24               	subwf	___llmod@dividend& (0+255),f,b
 22248  0186D4  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 22249  0186D6  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 22250  0186D8  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 22251  0186DA  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 22252  0186DC  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 22253  0186DE  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 22254  0186E0                     l2062:
 22255                           
 22256                           ; BSR set to: 1
 22257                           
 22258                           ; BSR set to: 1
 22259  0186E0  90D8               	bcf	status,0,c
 22260  0186E2  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 22261  0186E4  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 22262  0186E6  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 22263  0186E8  3328               	rrcf	___llmod@divisor& (0+255),f,b
 22264                           
 22265                           ; BSR set to: 1
 22266  0186EA  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 22267  0186EC  D7E7               	goto	u24610
 22268  0186EE                     l2063:
 22269                           
 22270                           ; BSR set to: 1
 22271                           
 22272                           ; BSR set to: 1
 22273  0186EE  C124  F124         	movff	___llmod@dividend,?___llmod
 22274  0186F2  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 22275  0186F6  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 22276  0186FA  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 22277                           
 22278                           ; BSR set to: 1
 22279  0186FE  0012               	return		;funcret
 22280  018700                     __end_of___llmod:
 22281                           	opt stack 0
 22282                           tblptru	equ	0xFF8
 22283                           tblptrh	equ	0xFF7
 22284                           tblptrl	equ	0xFF6
 22285                           tablat	equ	0xFF5
 22286                           prodh	equ	0xFF4
 22287                           prodl	equ	0xFF3
 22288                           intcon	equ	0xFF2
 22289                           indf0	equ	0xFEF
 22290                           postinc0	equ	0xFEE
 22291                           fsr0h	equ	0xFEA
 22292                           fsr0l	equ	0xFE9
 22293                           wreg	equ	0xFE8
 22294                           indf1	equ	0xFE7
 22295                           postdec1	equ	0xFE5
 22296                           plusw1	equ	0xFE3
 22297                           fsr1h	equ	0xFE2
 22298                           fsr1l	equ	0xFE1
 22299                           indf2	equ	0xFDF
 22300                           postinc2	equ	0xFDE
 22301                           postdec2	equ	0xFDD
 22302                           plusw2	equ	0xFDB
 22303                           fsr2h	equ	0xFDA
 22304                           fsr2l	equ	0xFD9
 22305                           status	equ	0xFD8
 22306                           
 22307 ;; *************** function ___lldiv *****************
 22308 ;; Defined at:
 22309 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 22310 ;; Parameters:    Size  Location     Type
 22311 ;;  dividend        4   23[BANK1 ] unsigned long 
 22312 ;;  divisor         4   27[BANK1 ] unsigned long 
 22313 ;; Auto vars:     Size  Location     Type
 22314 ;;  quotient        4   32[BANK1 ] unsigned long 
 22315 ;;  counter         1   31[BANK1 ] unsigned char 
 22316 ;; Return value:  Size  Location     Type
 22317 ;;                  4   23[BANK1 ] unsigned long 
 22318 ;; Registers used:
 22319 ;;		wreg, status,2, status,0
 22320 ;; Tracked objects:
 22321 ;;		On entry : 0/0
 22322 ;;		On exit  : 0/0
 22323 ;;		Unchanged: 0/0
 22324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22325 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22326 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22328 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22329 ;;Total ram usage:       13 bytes
 22330 ;; Hardware stack levels used:    1
 22331 ;; Hardware stack levels required when called:   13
 22332 ;; This function calls:
 22333 ;;		Nothing
 22334 ;; This function is called by:
 22335 ;;		_printf
 22336 ;; This function uses a non-reentrant model
 22337 ;;
 22338                           
 22339                           	psect	text42
 22340  0181F6                     __ptext42:
 22341                           	opt stack 0
 22342  0181F6                     ___lldiv:
 22343                           	opt stack 14
 22344                           
 22345                           ; BSR set to: 1
 22346                           ;incstack = 0
 22347  0181F6  0E00               	movlw	0
 22348  0181F8  0101               	movlb	1	; () banked
 22349  0181FA  6F20               	movwf	___lldiv@quotient& (0+255),b
 22350  0181FC  0E00               	movlw	0
 22351  0181FE  6F21               	movwf	(___lldiv@quotient+1)& (0+255),b
 22352  018200  0E00               	movlw	0
 22353  018202  6F22               	movwf	(___lldiv@quotient+2)& (0+255),b
 22354  018204  0E00               	movlw	0
 22355  018206  6F23               	movwf	(___lldiv@quotient+3)& (0+255),b
 22356                           
 22357                           ; BSR set to: 1
 22358  018208  511B               	movf	___lldiv@divisor& (0+255),w,b
 22359  01820A  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 22360  01820C  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 22361  01820E  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 22362  018210  B4D8               	btfsc	status,2,c
 22363  018212  D02A               	goto	l2053
 22364                           
 22365                           ; BSR set to: 1
 22366  018214  0E01               	movlw	1
 22367  018216  6F1F               	movwf	___lldiv@counter& (0+255),b
 22368  018218  D006               	goto	l2048
 22369  01821A                     
 22370                           ; BSR set to: 1
 22371                           
 22372                           ; BSR set to: 1
 22373  01821A  90D8               	bcf	status,0,c
 22374  01821C  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 22375  01821E  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 22376  018220  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 22377  018222  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 22378  018224  2B1F               	incf	___lldiv@counter& (0+255),f,b
 22379  018226                     l2048:
 22380                           
 22381                           ; BSR set to: 1
 22382                           
 22383                           ; BSR set to: 1
 22384  018226  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 22385  018228  D7F8               	goto	l2049
 22386  01822A                     u24580:
 22387                           
 22388                           ; BSR set to: 1
 22389                           
 22390                           ; BSR set to: 1
 22391                           
 22392                           ; BSR set to: 1
 22393  01822A  90D8               	bcf	status,0,c
 22394  01822C  3720               	rlcf	___lldiv@quotient& (0+255),f,b
 22395  01822E  3721               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 22396  018230  3722               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 22397  018232  3723               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 22398                           
 22399                           ; BSR set to: 1
 22400  018234  511B               	movf	___lldiv@divisor& (0+255),w,b
 22401  018236  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 22402  018238  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 22403  01823A  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 22404  01823C  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 22405  01823E  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 22406  018240  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 22407  018242  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 22408  018244  A0D8               	btfss	status,0,c
 22409  018246  D009               	goto	l2052
 22410                           
 22411                           ; BSR set to: 1
 22412  018248  511B               	movf	___lldiv@divisor& (0+255),w,b
 22413  01824A  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 22414  01824C  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 22415  01824E  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 22416  018250  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 22417  018252  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 22418  018254  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 22419  018256  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 22420                           
 22421                           ; BSR set to: 1
 22422  018258  8120               	bsf	___lldiv@quotient& (0+255),0,b
 22423  01825A                     l2052:
 22424                           
 22425                           ; BSR set to: 1
 22426                           
 22427                           ; BSR set to: 1
 22428  01825A  90D8               	bcf	status,0,c
 22429  01825C  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 22430  01825E  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 22431  018260  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 22432  018262  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 22433                           
 22434                           ; BSR set to: 1
 22435  018264  2F1F               	decfsz	___lldiv@counter& (0+255),f,b
 22436  018266  D7E1               	goto	u24580
 22437  018268                     l2053:
 22438                           
 22439                           ; BSR set to: 1
 22440                           
 22441                           ; BSR set to: 1
 22442  018268  C120  F117         	movff	___lldiv@quotient,?___lldiv
 22443  01826C  C121  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 22444  018270  C122  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 22445  018274  C123  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 22446                           
 22447                           ; BSR set to: 1
 22448  018278  0012               	return		;funcret
 22449  01827A                     __end_of___lldiv:
 22450                           	opt stack 0
 22451                           tblptru	equ	0xFF8
 22452                           tblptrh	equ	0xFF7
 22453                           tblptrl	equ	0xFF6
 22454                           tablat	equ	0xFF5
 22455                           prodh	equ	0xFF4
 22456                           prodl	equ	0xFF3
 22457                           intcon	equ	0xFF2
 22458                           indf0	equ	0xFEF
 22459                           postinc0	equ	0xFEE
 22460                           fsr0h	equ	0xFEA
 22461                           fsr0l	equ	0xFE9
 22462                           wreg	equ	0xFE8
 22463                           indf1	equ	0xFE7
 22464                           postdec1	equ	0xFE5
 22465                           plusw1	equ	0xFE3
 22466                           fsr1h	equ	0xFE2
 22467                           fsr1l	equ	0xFE1
 22468                           indf2	equ	0xFDF
 22469                           postinc2	equ	0xFDE
 22470                           postdec2	equ	0xFDD
 22471                           plusw2	equ	0xFDB
 22472                           fsr2h	equ	0xFDA
 22473                           fsr2l	equ	0xFD9
 22474                           status	equ	0xFD8
 22475                           
 22476 ;; *************** function ___fltol *****************
 22477 ;; Defined at:
 22478 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 22479 ;; Parameters:    Size  Location     Type
 22480 ;;  f1              4  120[BANK1 ] unsigned long 
 22481 ;; Auto vars:     Size  Location     Type
 22482 ;;  exp1            1  129[BANK1 ] unsigned char 
 22483 ;;  sign1           1  128[BANK1 ] unsigned char 
 22484 ;; Return value:  Size  Location     Type
 22485 ;;                  4  120[BANK1 ] long 
 22486 ;; Registers used:
 22487 ;;		wreg, status,2, status,0
 22488 ;; Tracked objects:
 22489 ;;		On entry : 0/0
 22490 ;;		On exit  : 0/0
 22491 ;;		Unchanged: 0/0
 22492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22493 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22494 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22495 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22496 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22497 ;;Total ram usage:       10 bytes
 22498 ;; Hardware stack levels used:    1
 22499 ;; Hardware stack levels required when called:   13
 22500 ;; This function calls:
 22501 ;;		Nothing
 22502 ;; This function is called by:
 22503 ;;		_printf
 22504 ;; This function uses a non-reentrant model
 22505 ;;
 22506                           
 22507                           	psect	text43
 22508  017A82                     __ptext43:
 22509                           	opt stack 0
 22510  017A82                     ___fltol:
 22511                           	opt stack 14
 22512                           
 22513                           ; BSR set to: 1
 22514                           ;incstack = 0
 22515  017A82  0101               	movlb	1	; () banked
 22516  017A84  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 22517  017A86  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 22518  017A88  6F81               	movwf	___fltol@exp1& (0+255),b
 22519  017A8A  5181               	movf	___fltol@exp1& (0+255),w,b
 22520  017A8C  A4D8               	btfss	status,2,c
 22521  017A8E  D009               	goto	l1905
 22522                           
 22523                           ; BSR set to: 1
 22524  017A90  0E00               	movlw	0
 22525  017A92  6F78               	movwf	?___fltol& (0+255),b
 22526  017A94  0E00               	movlw	0
 22527  017A96  6F79               	movwf	(?___fltol+1)& (0+255),b
 22528  017A98  0E00               	movlw	0
 22529  017A9A  6F7A               	movwf	(?___fltol+2)& (0+255),b
 22530  017A9C  0E00               	movlw	0
 22531  017A9E  6F7B               	movwf	(?___fltol+3)& (0+255),b
 22532                           
 22533                           ; BSR set to: 1
 22534  017AA0  0012               	return	
 22535  017AA2                     l1905:
 22536                           
 22537                           ; BSR set to: 1
 22538                           
 22539                           ; BSR set to: 1
 22540  017AA2  C178  F17C         	movff	___fltol@f1,??___fltol
 22541  017AA6  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 22542  017AAA  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 22543  017AAE  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 22544  017AB2  0E20               	movlw	32
 22545  017AB4  D005               	goto	u24510
 22546  017AB6                     u24515:
 22547  017AB6  90D8               	bcf	status,0,c
 22548  017AB8  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 22549  017ABA  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 22550  017ABC  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 22551  017ABE  337C               	rrcf	??___fltol& (0+255),f,b
 22552  017AC0                     u24510:
 22553  017AC0  2EE8               	decfsz	wreg,f,c
 22554  017AC2  D7F9               	goto	u24515
 22555  017AC4  517C               	movf	??___fltol& (0+255),w,b
 22556  017AC6  6F80               	movwf	___fltol@sign1& (0+255),b
 22557                           
 22558                           ; BSR set to: 1
 22559  017AC8  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 22560                           
 22561                           ; BSR set to: 1
 22562  017ACA  0EFF               	movlw	255
 22563  017ACC  1778               	andwf	___fltol@f1& (0+255),f,b
 22564  017ACE  0EFF               	movlw	255
 22565  017AD0  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 22566  017AD2  0EFF               	movlw	255
 22567  017AD4  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 22568  017AD6  0E00               	movlw	0
 22569  017AD8  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 22570                           
 22571                           ; BSR set to: 1
 22572  017ADA  0E96               	movlw	150
 22573  017ADC  5F81               	subwf	___fltol@exp1& (0+255),f,b
 22574                           
 22575                           ; BSR set to: 1
 22576  017ADE  AF81               	btfss	___fltol@exp1& (0+255),7,b
 22577  017AE0  D016               	goto	l1907
 22578                           
 22579                           ; BSR set to: 1
 22580  017AE2  5181               	movf	___fltol@exp1& (0+255),w,b
 22581  017AE4  0A80               	xorlw	128
 22582  017AE6  0F97               	addlw	151
 22583  017AE8  B0D8               	btfsc	status,0,c
 22584  017AEA  D009               	goto	l1908
 22585                           
 22586                           ; BSR set to: 1
 22587  017AEC  0E00               	movlw	0
 22588  017AEE  6F78               	movwf	?___fltol& (0+255),b
 22589  017AF0  0E00               	movlw	0
 22590  017AF2  6F79               	movwf	(?___fltol+1)& (0+255),b
 22591  017AF4  0E00               	movlw	0
 22592  017AF6  6F7A               	movwf	(?___fltol+2)& (0+255),b
 22593  017AF8  0E00               	movlw	0
 22594  017AFA  6F7B               	movwf	(?___fltol+3)& (0+255),b
 22595                           
 22596                           ; BSR set to: 1
 22597  017AFC  0012               	return	
 22598  017AFE                     l1908:
 22599                           
 22600                           ; BSR set to: 1
 22601                           
 22602                           ; BSR set to: 1
 22603                           
 22604                           ; BSR set to: 1
 22605  017AFE  90D8               	bcf	status,0,c
 22606  017B00  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 22607  017B02  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 22608  017B04  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 22609  017B06  3378               	rrcf	___fltol@f1& (0+255),f,b
 22610                           
 22611                           ; BSR set to: 1
 22612  017B08  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 22613  017B0A  D7F9               	goto	l1908
 22614                           
 22615                           ; BSR set to: 1
 22616  017B0C  D015               	goto	u24550
 22617  017B0E                     l1907:
 22618                           
 22619                           ; BSR set to: 1
 22620                           
 22621                           ; BSR set to: 1
 22622  017B0E  0E1F               	movlw	31
 22623  017B10  6581               	cpfsgt	___fltol@exp1& (0+255),b
 22624  017B12  D00F               	goto	l1913
 22625                           
 22626                           ; BSR set to: 1
 22627  017B14  0E00               	movlw	0
 22628  017B16  6F78               	movwf	?___fltol& (0+255),b
 22629  017B18  0E00               	movlw	0
 22630  017B1A  6F79               	movwf	(?___fltol+1)& (0+255),b
 22631  017B1C  0E00               	movlw	0
 22632  017B1E  6F7A               	movwf	(?___fltol+2)& (0+255),b
 22633  017B20  0E00               	movlw	0
 22634  017B22  6F7B               	movwf	(?___fltol+3)& (0+255),b
 22635                           
 22636                           ; BSR set to: 1
 22637  017B24  0012               	return	
 22638  017B26                     
 22639                           ; BSR set to: 1
 22640                           
 22641                           ; BSR set to: 1
 22642  017B26  90D8               	bcf	status,0,c
 22643  017B28  3778               	rlcf	___fltol@f1& (0+255),f,b
 22644  017B2A  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 22645  017B2C  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 22646  017B2E  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 22647  017B30  0781               	decf	___fltol@exp1& (0+255),f,b
 22648  017B32                     l1913:
 22649                           
 22650                           ; BSR set to: 1
 22651                           
 22652                           ; BSR set to: 1
 22653  017B32  5181               	movf	___fltol@exp1& (0+255),w,b
 22654  017B34  A4D8               	btfss	status,2,c
 22655  017B36  D7F7               	goto	l1914
 22656  017B38                     u24550:
 22657                           
 22658                           ; BSR set to: 1
 22659                           
 22660                           ; BSR set to: 1
 22661                           
 22662                           ; BSR set to: 1
 22663  017B38  5180               	movf	___fltol@sign1& (0+255),w,b
 22664  017B3A  B4D8               	btfsc	status,2,c
 22665  017B3C  D008               	goto	l1916
 22666                           
 22667                           ; BSR set to: 1
 22668  017B3E  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 22669  017B40  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 22670  017B42  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 22671  017B44  6D78               	negf	___fltol@f1& (0+255),b
 22672  017B46  0E00               	movlw	0
 22673  017B48  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 22674  017B4A  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 22675  017B4C  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 22676  017B4E                     l1916:
 22677                           
 22678                           ; BSR set to: 1
 22679                           
 22680                           ; BSR set to: 1
 22681  017B4E  C178  F178         	movff	___fltol@f1,?___fltol
 22682  017B52  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 22683  017B56  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 22684  017B5A  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 22685  017B5E  0012               	return	
 22686  017B60                     __end_of___fltol:
 22687                           	opt stack 0
 22688                           tblptru	equ	0xFF8
 22689                           tblptrh	equ	0xFF7
 22690                           tblptrl	equ	0xFF6
 22691                           tablat	equ	0xFF5
 22692                           prodh	equ	0xFF4
 22693                           prodl	equ	0xFF3
 22694                           intcon	equ	0xFF2
 22695                           indf0	equ	0xFEF
 22696                           postinc0	equ	0xFEE
 22697                           fsr0h	equ	0xFEA
 22698                           fsr0l	equ	0xFE9
 22699                           wreg	equ	0xFE8
 22700                           indf1	equ	0xFE7
 22701                           postdec1	equ	0xFE5
 22702                           plusw1	equ	0xFE3
 22703                           fsr1h	equ	0xFE2
 22704                           fsr1l	equ	0xFE1
 22705                           indf2	equ	0xFDF
 22706                           postinc2	equ	0xFDE
 22707                           postdec2	equ	0xFDD
 22708                           plusw2	equ	0xFDB
 22709                           fsr2h	equ	0xFDA
 22710                           fsr2l	equ	0xFD9
 22711                           status	equ	0xFD8
 22712                           
 22713 ;; *************** function ___flsub *****************
 22714 ;; Defined at:
 22715 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 22716 ;; Parameters:    Size  Location     Type
 22717 ;;  b               4   61[BANK1 ] long 
 22718 ;;  a               4   65[BANK1 ] long 
 22719 ;; Auto vars:     Size  Location     Type
 22720 ;;		None
 22721 ;; Return value:  Size  Location     Type
 22722 ;;                  4   61[BANK1 ] long 
 22723 ;; Registers used:
 22724 ;;		wreg, status,2, status,0, cstack
 22725 ;; Tracked objects:
 22726 ;;		On entry : 0/0
 22727 ;;		On exit  : 0/0
 22728 ;;		Unchanged: 0/0
 22729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22730 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22733 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22734 ;;Total ram usage:        8 bytes
 22735 ;; Hardware stack levels used:    1
 22736 ;; Hardware stack levels required when called:   14
 22737 ;; This function calls:
 22738 ;;		___fladd
 22739 ;; This function is called by:
 22740 ;;		_printf
 22741 ;; This function uses a non-reentrant model
 22742 ;;
 22743                           
 22744                           	psect	text44
 22745  018B84                     __ptext44:
 22746                           	opt stack 0
 22747  018B84                     ___flsub:
 22748                           	opt stack 13
 22749                           
 22750                           ; BSR set to: 1
 22751                           ;incstack = 0
 22752  018B84  0E00               	movlw	0
 22753  018B86  0101               	movlb	1	; () banked
 22754  018B88  1B41               	xorwf	___flsub@a& (0+255),f,b
 22755  018B8A  0E00               	movlw	0
 22756  018B8C  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 22757  018B8E  0E00               	movlw	0
 22758  018B90  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 22759  018B92  0E80               	movlw	128
 22760  018B94  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 22761                           
 22762                           ; BSR set to: 1
 22763  018B96  C13D  F129         	movff	___flsub@b,___fladd@b
 22764  018B9A  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 22765  018B9E  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 22766  018BA2  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 22767  018BA6  C141  F12D         	movff	___flsub@a,___fladd@a
 22768  018BAA  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 22769  018BAE  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 22770  018BB2  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 22771  018BB6  ECCF  F0A5         	call	___fladd	;wreg free
 22772  018BBA  C129  F13D         	movff	?___fladd,?___flsub
 22773  018BBE  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 22774  018BC2  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 22775  018BC6  C12C  F140         	movff	?___fladd+3,?___flsub+3
 22776  018BCA  0012               	return	
 22777  018BCC                     __end_of___flsub:
 22778                           	opt stack 0
 22779                           tblptru	equ	0xFF8
 22780                           tblptrh	equ	0xFF7
 22781                           tblptrl	equ	0xFF6
 22782                           tablat	equ	0xFF5
 22783                           prodh	equ	0xFF4
 22784                           prodl	equ	0xFF3
 22785                           intcon	equ	0xFF2
 22786                           indf0	equ	0xFEF
 22787                           postinc0	equ	0xFEE
 22788                           fsr0h	equ	0xFEA
 22789                           fsr0l	equ	0xFE9
 22790                           wreg	equ	0xFE8
 22791                           indf1	equ	0xFE7
 22792                           postdec1	equ	0xFE5
 22793                           plusw1	equ	0xFE3
 22794                           fsr1h	equ	0xFE2
 22795                           fsr1l	equ	0xFE1
 22796                           indf2	equ	0xFDF
 22797                           postinc2	equ	0xFDE
 22798                           postdec2	equ	0xFDD
 22799                           plusw2	equ	0xFDB
 22800                           fsr2h	equ	0xFDA
 22801                           fsr2l	equ	0xFD9
 22802                           status	equ	0xFD8
 22803                           
 22804 ;; *************** function ___fladd *****************
 22805 ;; Defined at:
 22806 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 22807 ;; Parameters:    Size  Location     Type
 22808 ;;  b               4   41[BANK1 ] long 
 22809 ;;  a               4   45[BANK1 ] long 
 22810 ;; Auto vars:     Size  Location     Type
 22811 ;;  grs             1   60[BANK1 ] unsigned char 
 22812 ;;  bexp            1   59[BANK1 ] unsigned char 
 22813 ;;  aexp            1   58[BANK1 ] unsigned char 
 22814 ;;  signs           1   57[BANK1 ] unsigned char 
 22815 ;; Return value:  Size  Location     Type
 22816 ;;                  4   41[BANK1 ] unsigned char 
 22817 ;; Registers used:
 22818 ;;		wreg, status,2, status,0
 22819 ;; Tracked objects:
 22820 ;;		On entry : 0/0
 22821 ;;		On exit  : 0/0
 22822 ;;		Unchanged: 0/0
 22823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22824 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22825 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22826 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22827 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22828 ;;Total ram usage:       20 bytes
 22829 ;; Hardware stack levels used:    1
 22830 ;; Hardware stack levels required when called:   13
 22831 ;; This function calls:
 22832 ;;		Nothing
 22833 ;; This function is called by:
 22834 ;;		_ringBufferLUT
 22835 ;;		_printf
 22836 ;;		___flsub
 22837 ;; This function uses a non-reentrant model
 22838 ;;
 22839                           
 22840                           	psect	text45
 22841  014B9E                     __ptext45:
 22842                           	opt stack 0
 22843  014B9E                     ___fladd:
 22844                           	opt stack 13
 22845                           
 22846                           ;incstack = 0
 22847  014B9E  0101               	movlb	1	; () banked
 22848  014BA0  512C               	movf	(___fladd@b+3)& (0+255),w,b
 22849  014BA2  0B80               	andlw	128
 22850  014BA4  6F39               	movwf	___fladd@signs& (0+255),b
 22851  014BA6  512C               	movf	(___fladd@b+3)& (0+255),w,b
 22852  014BA8  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 22853  014BAA  6F3B               	movwf	___fladd@bexp& (0+255),b
 22854                           
 22855                           ; BSR set to: 1
 22856  014BAC  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 22857                           
 22858                           ; BSR set to: 1
 22859  014BAE  813B               	bsf	___fladd@bexp& (0+255),0,b
 22860                           
 22861                           ; BSR set to: 1
 22862                           
 22863                           ; BSR set to: 1
 22864  014BB0  513B               	movf	___fladd@bexp& (0+255),w,b
 22865  014BB2  B4D8               	btfsc	status,2,c
 22866  014BB4  D00D               	goto	l2145
 22867                           
 22868                           ; BSR set to: 1
 22869  014BB6  293B               	incf	___fladd@bexp& (0+255),w,b
 22870  014BB8  A4D8               	btfss	status,2,c
 22871  014BBA  D008               	goto	l2146
 22872                           
 22873                           ; BSR set to: 1
 22874  014BBC  0E00               	movlw	0
 22875  014BBE  6F29               	movwf	___fladd@b& (0+255),b
 22876  014BC0  0E00               	movlw	0
 22877  014BC2  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 22878  014BC4  0E00               	movlw	0
 22879  014BC6  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 22880  014BC8  0E00               	movlw	0
 22881  014BCA  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 22882  014BCC                     l2146:
 22883                           
 22884                           ; BSR set to: 1
 22885                           
 22886                           ; BSR set to: 1
 22887  014BCC  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 22888  014BCE  D006               	goto	L5
 22889  014BD0                     l2145:
 22890                           
 22891                           ; BSR set to: 1
 22892                           
 22893                           ; BSR set to: 1
 22894  014BD0  0E00               	movlw	0
 22895  014BD2  6F29               	movwf	___fladd@b& (0+255),b
 22896  014BD4  0E00               	movlw	0
 22897  014BD6  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 22898  014BD8  0E00               	movlw	0
 22899  014BDA  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 22900  014BDC                     L5:
 22901  014BDC  0E00               	movlw	0
 22902  014BDE  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 22903                           
 22904                           ; BSR set to: 1
 22905                           
 22906                           ; BSR set to: 1
 22907  014BE0  5130               	movf	(___fladd@a+3)& (0+255),w,b
 22908  014BE2  0B80               	andlw	128
 22909  014BE4  6F3A               	movwf	___fladd@aexp& (0+255),b
 22910                           
 22911                           ; BSR set to: 1
 22912  014BE6  5139               	movf	___fladd@signs& (0+255),w,b
 22913  014BE8  193A               	xorwf	___fladd@aexp& (0+255),w,b
 22914  014BEA  A4D8               	btfss	status,2,c
 22915                           
 22916                           ; BSR set to: 1
 22917  014BEC  8D39               	bsf	___fladd@signs& (0+255),6,b
 22918                           
 22919                           ; BSR set to: 1
 22920                           
 22921                           ; BSR set to: 1
 22922  014BEE  5130               	movf	(___fladd@a+3)& (0+255),w,b
 22923  014BF0  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 22924  014BF2  6F3A               	movwf	___fladd@aexp& (0+255),b
 22925                           
 22926                           ; BSR set to: 1
 22927  014BF4  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 22928                           
 22929                           ; BSR set to: 1
 22930  014BF6  813A               	bsf	___fladd@aexp& (0+255),0,b
 22931                           
 22932                           ; BSR set to: 1
 22933                           
 22934                           ; BSR set to: 1
 22935  014BF8  513A               	movf	___fladd@aexp& (0+255),w,b
 22936  014BFA  B4D8               	btfsc	status,2,c
 22937  014BFC  D00D               	goto	l2150
 22938                           
 22939                           ; BSR set to: 1
 22940  014BFE  293A               	incf	___fladd@aexp& (0+255),w,b
 22941  014C00  A4D8               	btfss	status,2,c
 22942  014C02  D008               	goto	l2151
 22943                           
 22944                           ; BSR set to: 1
 22945  014C04  0E00               	movlw	0
 22946  014C06  6F2D               	movwf	___fladd@a& (0+255),b
 22947  014C08  0E00               	movlw	0
 22948  014C0A  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 22949  014C0C  0E00               	movlw	0
 22950  014C0E  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 22951  014C10  0E00               	movlw	0
 22952  014C12  6F30               	movwf	(___fladd@a+3)& (0+255),b
 22953  014C14                     l2151:
 22954                           
 22955                           ; BSR set to: 1
 22956                           
 22957                           ; BSR set to: 1
 22958  014C14  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 22959  014C16  D006               	goto	L6
 22960  014C18                     l2150:
 22961                           
 22962                           ; BSR set to: 1
 22963                           
 22964                           ; BSR set to: 1
 22965  014C18  0E00               	movlw	0
 22966  014C1A  6F2D               	movwf	___fladd@a& (0+255),b
 22967  014C1C  0E00               	movlw	0
 22968  014C1E  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 22969  014C20  0E00               	movlw	0
 22970  014C22  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 22971  014C24                     L6:
 22972  014C24  0E00               	movlw	0
 22973  014C26  6F30               	movwf	(___fladd@a+3)& (0+255),b
 22974                           
 22975                           ; BSR set to: 1
 22976                           
 22977                           ; BSR set to: 1
 22978  014C28  513B               	movf	___fladd@bexp& (0+255),w,b
 22979  014C2A  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 22980  014C2C  B0D8               	btfsc	status,0,c
 22981  014C2E  D022               	goto	l2153
 22982                           
 22983                           ; BSR set to: 1
 22984  014C30  AD39               	btfss	___fladd@signs& (0+255),6,b
 22985  014C32  D002               	goto	l2154
 22986                           
 22987                           ; BSR set to: 1
 22988  014C34  0E80               	movlw	128
 22989  014C36  1B39               	xorwf	___fladd@signs& (0+255),f,b
 22990  014C38                     l2154:
 22991                           
 22992                           ; BSR set to: 1
 22993                           
 22994                           ; BSR set to: 1
 22995  014C38  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 22996                           
 22997                           ; BSR set to: 1
 22998  014C3C  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 22999                           
 23000                           ; BSR set to: 1
 23001  014C40  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 23002                           
 23003                           ; BSR set to: 1
 23004  014C44  C129  F13C         	movff	___fladd@b,___fladd@grs
 23005                           
 23006                           ; BSR set to: 1
 23007  014C48  C12D  F129         	movff	___fladd@a,___fladd@b
 23008                           
 23009                           ; BSR set to: 1
 23010  014C4C  C13C  F12D         	movff	___fladd@grs,___fladd@a
 23011                           
 23012                           ; BSR set to: 1
 23013  014C50  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 23014                           
 23015                           ; BSR set to: 1
 23016  014C54  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 23017                           
 23018                           ; BSR set to: 1
 23019  014C58  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 23020                           
 23021                           ; BSR set to: 1
 23022  014C5C  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 23023                           
 23024                           ; BSR set to: 1
 23025  014C60  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 23026                           
 23027                           ; BSR set to: 1
 23028  014C64  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 23029                           
 23030                           ; BSR set to: 1
 23031  014C68  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 23032                           
 23033                           ; BSR set to: 1
 23034  014C6C  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 23035                           
 23036                           ; BSR set to: 1
 23037  014C70  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 23038  014C74                     l2153:
 23039                           
 23040                           ; BSR set to: 1
 23041                           
 23042                           ; BSR set to: 1
 23043  014C74  0E00               	movlw	0
 23044  014C76  6F3C               	movwf	___fladd@grs& (0+255),b
 23045                           
 23046                           ; BSR set to: 1
 23047  014C78  513B               	movf	___fladd@bexp& (0+255),w,b
 23048  014C7A  6F31               	movwf	??___fladd& (0+255),b
 23049  014C7C  6B32               	clrf	(??___fladd+1)& (0+255),b
 23050  014C7E  1F31               	comf	??___fladd& (0+255),f,b
 23051  014C80  1F32               	comf	(??___fladd+1)& (0+255),f,b
 23052  014C82  4B31               	infsnz	??___fladd& (0+255),f,b
 23053  014C84  2B32               	incf	(??___fladd+1)& (0+255),f,b
 23054  014C86  513A               	movf	___fladd@aexp& (0+255),w,b
 23055  014C88  6F33               	movwf	(??___fladd+2)& (0+255),b
 23056  014C8A  6B34               	clrf	(??___fladd+3)& (0+255),b
 23057  014C8C  5131               	movf	??___fladd& (0+255),w,b
 23058  014C8E  2733               	addwf	(??___fladd+2)& (0+255),f,b
 23059  014C90  5132               	movf	(??___fladd+1)& (0+255),w,b
 23060  014C92  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 23061  014C94  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 23062  014C96  D02C               	goto	l2157
 23063  014C98  5134               	movf	(??___fladd+3)& (0+255),w,b
 23064  014C9A  E104               	bnz	u23580
 23065  014C9C  0E1A               	movlw	26
 23066  014C9E  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 23067  014CA0  A0D8               	btfss	status,0,c
 23068  014CA2  D026               	goto	l2157
 23069  014CA4                     u23580:
 23070                           
 23071                           ; BSR set to: 1
 23072  014CA4  5129               	movf	___fladd@b& (0+255),w,b
 23073  014CA6  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 23074  014CA8  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 23075  014CAA  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 23076  014CAC  B4D8               	btfsc	status,2,c
 23077  014CAE  D002               	goto	u23590
 23078  014CB0  0E01               	movlw	1
 23079  014CB2  D001               	goto	u23600
 23080  014CB4                     u23590:
 23081  014CB4  0E00               	movlw	0
 23082  014CB6                     u23600:
 23083  014CB6  6F3C               	movwf	___fladd@grs& (0+255),b
 23084                           
 23085                           ; BSR set to: 1
 23086  014CB8  0E00               	movlw	0
 23087  014CBA  6F29               	movwf	___fladd@b& (0+255),b
 23088  014CBC  0E00               	movlw	0
 23089  014CBE  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 23090  014CC0  0E00               	movlw	0
 23091  014CC2  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 23092  014CC4  0E00               	movlw	0
 23093  014CC6  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 23094                           
 23095                           ; BSR set to: 1
 23096  014CC8  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 23097  014CCC  D015               	goto	u23630
 23098  014CCE                     l2158:
 23099                           
 23100                           ; BSR set to: 1
 23101  014CCE  A13C               	btfss	___fladd@grs& (0+255),0,b
 23102  014CD0  D005               	goto	l2159
 23103                           
 23104                           ; BSR set to: 1
 23105  014CD2  90D8               	bcf	status,0,c
 23106  014CD4  313C               	rrcf	___fladd@grs& (0+255),w,b
 23107  014CD6  0901               	iorlw	1
 23108  014CD8  6F3C               	movwf	___fladd@grs& (0+255),b
 23109  014CDA  D002               	goto	l2160
 23110  014CDC                     l2159:
 23111                           
 23112                           ; BSR set to: 1
 23113                           
 23114                           ; BSR set to: 1
 23115  014CDC  90D8               	bcf	status,0,c
 23116  014CDE  333C               	rrcf	___fladd@grs& (0+255),f,b
 23117  014CE0                     l2160:
 23118                           
 23119                           ; BSR set to: 1
 23120                           
 23121                           ; BSR set to: 1
 23122  014CE0  B129               	btfsc	___fladd@b& (0+255),0,b
 23123                           
 23124                           ; BSR set to: 1
 23125  014CE2  8F3C               	bsf	___fladd@grs& (0+255),7,b
 23126                           
 23127                           ; BSR set to: 1
 23128                           
 23129                           ; BSR set to: 1
 23130  014CE4  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 23131  014CE6  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 23132  014CE8  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 23133  014CEA  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 23134  014CEC  3329               	rrcf	___fladd@b& (0+255),f,b
 23135                           
 23136                           ; BSR set to: 1
 23137  014CEE  2B3B               	incf	___fladd@bexp& (0+255),f,b
 23138  014CF0                     l2157:
 23139                           
 23140                           ; BSR set to: 1
 23141  014CF0  513A               	movf	___fladd@aexp& (0+255),w,b
 23142  014CF2  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 23143  014CF4  A0D8               	btfss	status,0,c
 23144  014CF6  D7EB               	goto	l2158
 23145  014CF8                     u23630:
 23146                           
 23147                           ; BSR set to: 1
 23148                           
 23149                           ; BSR set to: 1
 23150  014CF8  BD39               	btfsc	___fladd@signs& (0+255),6,b
 23151  014CFA  D029               	goto	l2163
 23152                           
 23153                           ; BSR set to: 1
 23154  014CFC  513B               	movf	___fladd@bexp& (0+255),w,b
 23155  014CFE  A4D8               	btfss	status,2,c
 23156  014D00  D009               	goto	l2164
 23157                           
 23158                           ; BSR set to: 1
 23159  014D02  0E00               	movlw	0
 23160  014D04  6F29               	movwf	?___fladd& (0+255),b
 23161  014D06  0E00               	movlw	0
 23162  014D08  6F2A               	movwf	(?___fladd+1)& (0+255),b
 23163  014D0A  0E00               	movlw	0
 23164  014D0C  6F2B               	movwf	(?___fladd+2)& (0+255),b
 23165  014D0E  0E00               	movlw	0
 23166  014D10  6F2C               	movwf	(?___fladd+3)& (0+255),b
 23167                           
 23168                           ; BSR set to: 1
 23169  014D12  0012               	return	
 23170  014D14                     l2164:
 23171                           
 23172                           ; BSR set to: 1
 23173                           
 23174                           ; BSR set to: 1
 23175  014D14  512D               	movf	___fladd@a& (0+255),w,b
 23176  014D16  2729               	addwf	___fladd@b& (0+255),f,b
 23177  014D18  512E               	movf	(___fladd@a+1)& (0+255),w,b
 23178  014D1A  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 23179  014D1C  512F               	movf	(___fladd@a+2)& (0+255),w,b
 23180  014D1E  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 23181  014D20  5130               	movf	(___fladd@a+3)& (0+255),w,b
 23182  014D22  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 23183                           
 23184                           ; BSR set to: 1
 23185  014D24  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 23186  014D26  D083               	goto	u23760
 23187                           
 23188                           ; BSR set to: 1
 23189  014D28  A13C               	btfss	___fladd@grs& (0+255),0,b
 23190  014D2A  D006               	goto	l2167
 23191                           
 23192                           ; BSR set to: 1
 23193  014D2C  90D8               	bcf	status,0,c
 23194  014D2E  333C               	rrcf	___fladd@grs& (0+255),f,b
 23195  014D30  513C               	movf	___fladd@grs& (0+255),w,b
 23196  014D32  0901               	iorlw	1
 23197  014D34  6F3C               	movwf	___fladd@grs& (0+255),b
 23198  014D36  D002               	goto	l2168
 23199  014D38                     l2167:
 23200                           
 23201                           ; BSR set to: 1
 23202                           
 23203                           ; BSR set to: 1
 23204  014D38  90D8               	bcf	status,0,c
 23205  014D3A  333C               	rrcf	___fladd@grs& (0+255),f,b
 23206  014D3C                     l2168:
 23207                           
 23208                           ; BSR set to: 1
 23209                           
 23210                           ; BSR set to: 1
 23211  014D3C  B129               	btfsc	___fladd@b& (0+255),0,b
 23212                           
 23213                           ; BSR set to: 1
 23214  014D3E  8F3C               	bsf	___fladd@grs& (0+255),7,b
 23215                           
 23216                           ; BSR set to: 1
 23217                           
 23218                           ; BSR set to: 1
 23219  014D40  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 23220  014D42  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 23221  014D44  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 23222  014D46  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 23223  014D48  3329               	rrcf	___fladd@b& (0+255),f,b
 23224                           
 23225                           ; BSR set to: 1
 23226  014D4A  2B3B               	incf	___fladd@bexp& (0+255),f,b
 23227                           
 23228                           ; BSR set to: 1
 23229  014D4C  D070               	goto	u23760
 23230  014D4E                     l2163:
 23231                           
 23232                           ; BSR set to: 1
 23233                           
 23234                           ; BSR set to: 1
 23235  014D4E  512D               	movf	___fladd@a& (0+255),w,b
 23236  014D50  5D29               	subwf	___fladd@b& (0+255),w,b
 23237  014D52  512E               	movf	(___fladd@a+1)& (0+255),w,b
 23238  014D54  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 23239  014D56  512F               	movf	(___fladd@a+2)& (0+255),w,b
 23240  014D58  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 23241  014D5A  512C               	movf	(___fladd@b+3)& (0+255),w,b
 23242  014D5C  0A80               	xorlw	128
 23243  014D5E  6F31               	movwf	??___fladd& (0+255),b
 23244  014D60  5130               	movf	(___fladd@a+3)& (0+255),w,b
 23245  014D62  0A80               	xorlw	128
 23246  014D64  5931               	subwfb	??___fladd& (0+255),w,b
 23247  014D66  B0D8               	btfsc	status,0,c
 23248  014D68  D036               	goto	l2171
 23249                           
 23250                           ; BSR set to: 1
 23251  014D6A  C129  F131         	movff	___fladd@b,??___fladd
 23252  014D6E  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 23253  014D72  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 23254  014D76  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 23255  014D7A  1F31               	comf	??___fladd& (0+255),f,b
 23256  014D7C  1F32               	comf	(??___fladd+1)& (0+255),f,b
 23257  014D7E  1F33               	comf	(??___fladd+2)& (0+255),f,b
 23258  014D80  1F34               	comf	(??___fladd+3)& (0+255),f,b
 23259  014D82  2B31               	incf	??___fladd& (0+255),f,b
 23260  014D84  0E00               	movlw	0
 23261  014D86  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 23262  014D88  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 23263  014D8A  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 23264  014D8C  512D               	movf	___fladd@a& (0+255),w,b
 23265  014D8E  2531               	addwf	??___fladd& (0+255),w,b
 23266  014D90  6F35               	movwf	(??___fladd+4)& (0+255),b
 23267  014D92  512E               	movf	(___fladd@a+1)& (0+255),w,b
 23268  014D94  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 23269  014D96  6F36               	movwf	(??___fladd+5)& (0+255),b
 23270  014D98  512F               	movf	(___fladd@a+2)& (0+255),w,b
 23271  014D9A  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 23272  014D9C  6F37               	movwf	(??___fladd+6)& (0+255),b
 23273  014D9E  5130               	movf	(___fladd@a+3)& (0+255),w,b
 23274  014DA0  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 23275  014DA2  6F38               	movwf	(??___fladd+7)& (0+255),b
 23276  014DA4  0EFF               	movlw	255
 23277  014DA6  2535               	addwf	(??___fladd+4)& (0+255),w,b
 23278  014DA8  6F29               	movwf	___fladd@b& (0+255),b
 23279  014DAA  0EFF               	movlw	255
 23280  014DAC  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 23281  014DAE  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 23282  014DB0  0EFF               	movlw	255
 23283  014DB2  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 23284  014DB4  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 23285  014DB6  0EFF               	movlw	255
 23286  014DB8  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 23287  014DBA  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 23288  014DBC  0E80               	movlw	128
 23289  014DBE  1B39               	xorwf	___fladd@signs& (0+255),f,b
 23290                           
 23291                           ; BSR set to: 1
 23292  014DC0  6D3C               	negf	___fladd@grs& (0+255),b
 23293                           
 23294                           ; BSR set to: 1
 23295  014DC2  513C               	movf	___fladd@grs& (0+255),w,b
 23296  014DC4  A4D8               	btfss	status,2,c
 23297  014DC6  D00F               	goto	l2173
 23298                           
 23299                           ; BSR set to: 1
 23300  014DC8  0E01               	movlw	1
 23301  014DCA  2729               	addwf	___fladd@b& (0+255),f,b
 23302  014DCC  0E00               	movlw	0
 23303  014DCE  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 23304  014DD0  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 23305  014DD2  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 23306                           
 23307                           ; BSR set to: 1
 23308  014DD4  D008               	goto	l2173
 23309  014DD6                     l2171:
 23310                           
 23311                           ; BSR set to: 1
 23312                           
 23313                           ; BSR set to: 1
 23314  014DD6  512D               	movf	___fladd@a& (0+255),w,b
 23315  014DD8  5F29               	subwf	___fladd@b& (0+255),f,b
 23316  014DDA  512E               	movf	(___fladd@a+1)& (0+255),w,b
 23317  014DDC  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 23318  014DDE  512F               	movf	(___fladd@a+2)& (0+255),w,b
 23319  014DE0  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 23320  014DE2  5130               	movf	(___fladd@a+3)& (0+255),w,b
 23321  014DE4  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 23322  014DE6                     l2173:
 23323                           
 23324                           ; BSR set to: 1
 23325  014DE6  5129               	movf	___fladd@b& (0+255),w,b
 23326  014DE8  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 23327  014DEA  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 23328  014DEC  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 23329  014DEE  A4D8               	btfss	status,2,c
 23330  014DF0  D01C               	goto	l2180
 23331                           
 23332                           ; BSR set to: 1
 23333  014DF2  513C               	movf	___fladd@grs& (0+255),w,b
 23334  014DF4  A4D8               	btfss	status,2,c
 23335  014DF6  D019               	goto	l2180
 23336                           
 23337                           ; BSR set to: 1
 23338  014DF8  0E00               	movlw	0
 23339  014DFA  6F29               	movwf	?___fladd& (0+255),b
 23340  014DFC  0E00               	movlw	0
 23341  014DFE  6F2A               	movwf	(?___fladd+1)& (0+255),b
 23342  014E00  0E00               	movlw	0
 23343  014E02  6F2B               	movwf	(?___fladd+2)& (0+255),b
 23344  014E04  0E00               	movlw	0
 23345  014E06  6F2C               	movwf	(?___fladd+3)& (0+255),b
 23346                           
 23347                           ; BSR set to: 1
 23348  014E08  0012               	return	
 23349  014E0A                     
 23350                           ; BSR set to: 1
 23351                           
 23352                           ; BSR set to: 1
 23353  014E0A  90D8               	bcf	status,0,c
 23354  014E0C  3729               	rlcf	___fladd@b& (0+255),f,b
 23355  014E0E  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 23356  014E10  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 23357  014E12  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 23358                           
 23359                           ; BSR set to: 1
 23360  014E14  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 23361                           
 23362                           ; BSR set to: 1
 23363  014E16  8129               	bsf	___fladd@b& (0+255),0,b
 23364                           
 23365                           ; BSR set to: 1
 23366                           
 23367                           ; BSR set to: 1
 23368  014E18  A13C               	btfss	___fladd@grs& (0+255),0,b
 23369  014E1A  D002               	goto	l2178
 23370                           
 23371                           ; BSR set to: 1
 23372  014E1C  80D8               	bsf	status,0,c
 23373  014E1E  D001               	goto	L7
 23374  014E20                     l2178:
 23375                           
 23376                           ; BSR set to: 1
 23377                           
 23378                           ; BSR set to: 1
 23379  014E20  90D8               	bcf	status,0,c
 23380  014E22                     L7:
 23381  014E22  373C               	rlcf	___fladd@grs& (0+255),f,b
 23382                           
 23383                           ; BSR set to: 1
 23384                           
 23385                           ; BSR set to: 1
 23386  014E24  513B               	movf	___fladd@bexp& (0+255),w,b
 23387  014E26  A4D8               	btfss	status,2,c
 23388                           
 23389                           ; BSR set to: 1
 23390  014E28  073B               	decf	___fladd@bexp& (0+255),f,b
 23391  014E2A                     l2180:
 23392                           
 23393                           ; BSR set to: 1
 23394                           
 23395                           ; BSR set to: 1
 23396                           
 23397                           ; BSR set to: 1
 23398  014E2A  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 23399  014E2C  D7EE               	goto	l2176
 23400  014E2E                     u23760:
 23401                           
 23402                           ; BSR set to: 1
 23403                           
 23404                           ; BSR set to: 1
 23405                           
 23406                           ; BSR set to: 1
 23407  014E2E  0E00               	movlw	0
 23408  014E30  6F3A               	movwf	___fladd@aexp& (0+255),b
 23409                           
 23410                           ; BSR set to: 1
 23411  014E32  AF3C               	btfss	___fladd@grs& (0+255),7,b
 23412  014E34  D00A               	goto	l2185
 23413                           
 23414                           ; BSR set to: 1
 23415  014E36  C13C  F131         	movff	___fladd@grs,??___fladd
 23416  014E3A  0E7F               	movlw	127
 23417  014E3C  1731               	andwf	??___fladd& (0+255),f,b
 23418  014E3E  A4D8               	btfss	status,2,c
 23419  014E40  D002               	goto	u23790
 23420                           
 23421                           ; BSR set to: 1
 23422                           
 23423                           ; BSR set to: 1
 23424  014E42  A129               	btfss	___fladd@b& (0+255),0,b
 23425  014E44  D002               	goto	l2185
 23426  014E46                     u23790:
 23427                           
 23428                           ; BSR set to: 1
 23429  014E46  0E01               	movlw	1
 23430  014E48  6F3A               	movwf	___fladd@aexp& (0+255),b
 23431  014E4A                     l2185:
 23432                           
 23433                           ; BSR set to: 1
 23434                           
 23435                           ; BSR set to: 1
 23436                           
 23437                           ; BSR set to: 1
 23438  014E4A  513A               	movf	___fladd@aexp& (0+255),w,b
 23439  014E4C  B4D8               	btfsc	status,2,c
 23440  014E4E  D020               	goto	l2188
 23441                           
 23442                           ; BSR set to: 1
 23443  014E50  0E01               	movlw	1
 23444  014E52  2729               	addwf	___fladd@b& (0+255),f,b
 23445  014E54  0E00               	movlw	0
 23446  014E56  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 23447  014E58  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 23448  014E5A  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 23449                           
 23450                           ; BSR set to: 1
 23451  014E5C  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 23452  014E5E  D018               	goto	l2188
 23453                           
 23454                           ; BSR set to: 1
 23455  014E60  C129  F131         	movff	___fladd@b,??___fladd
 23456  014E64  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 23457  014E68  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 23458  014E6C  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 23459  014E70  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 23460  014E72  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 23461  014E74  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 23462  014E76  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 23463  014E78  3331               	rrcf	??___fladd& (0+255),f,b
 23464  014E7A  C131  F129         	movff	??___fladd,___fladd@b
 23465  014E7E  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 23466  014E82  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 23467  014E86  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 23468  014E8A  293B               	incf	___fladd@bexp& (0+255),w,b
 23469  014E8C  A4D8               	btfss	status,2,c
 23470                           
 23471                           ; BSR set to: 1
 23472  014E8E  2B3B               	incf	___fladd@bexp& (0+255),f,b
 23473  014E90                     l2188:
 23474                           
 23475                           ; BSR set to: 1
 23476                           
 23477                           ; BSR set to: 1
 23478                           
 23479                           ; BSR set to: 1
 23480                           
 23481                           ; BSR set to: 1
 23482  014E90  293B               	incf	___fladd@bexp& (0+255),w,b
 23483  014E92  B4D8               	btfsc	status,2,c
 23484  014E94  D003               	goto	u23840
 23485                           
 23486                           ; BSR set to: 1
 23487  014E96  513B               	movf	___fladd@bexp& (0+255),w,b
 23488  014E98  A4D8               	btfss	status,2,c
 23489  014E9A  D00D               	goto	l2192
 23490  014E9C                     u23840:
 23491                           
 23492                           ; BSR set to: 1
 23493                           
 23494                           ; BSR set to: 1
 23495  014E9C  0E00               	movlw	0
 23496  014E9E  6F29               	movwf	___fladd@b& (0+255),b
 23497  014EA0  0E00               	movlw	0
 23498  014EA2  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 23499  014EA4  0E00               	movlw	0
 23500  014EA6  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 23501  014EA8  0E00               	movlw	0
 23502  014EAA  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 23503  014EAC  513B               	movf	___fladd@bexp& (0+255),w,b
 23504  014EAE  A4D8               	btfss	status,2,c
 23505  014EB0  D002               	goto	l2192
 23506                           
 23507                           ; BSR set to: 1
 23508  014EB2  0E00               	movlw	0
 23509  014EB4  6F39               	movwf	___fladd@signs& (0+255),b
 23510  014EB6                     l2192:
 23511                           
 23512                           ; BSR set to: 1
 23513                           
 23514                           ; BSR set to: 1
 23515                           
 23516                           ; BSR set to: 1
 23517  014EB6  A13B               	btfss	___fladd@bexp& (0+255),0,b
 23518  014EB8  D002               	goto	l2193
 23519                           
 23520                           ; BSR set to: 1
 23521  014EBA  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 23522  014EBC  D001               	goto	l2194
 23523  014EBE                     l2193:
 23524                           
 23525                           ; BSR set to: 1
 23526                           
 23527                           ; BSR set to: 1
 23528  014EBE  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 23529  014EC0                     l2194:
 23530                           
 23531                           ; BSR set to: 1
 23532                           
 23533                           ; BSR set to: 1
 23534  014EC0  90D8               	bcf	status,0,c
 23535  014EC2  313B               	rrcf	___fladd@bexp& (0+255),w,b
 23536  014EC4  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 23537                           
 23538                           ; BSR set to: 1
 23539  014EC6  BF39               	btfsc	___fladd@signs& (0+255),7,b
 23540                           
 23541                           ; BSR set to: 1
 23542  014EC8  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 23543                           
 23544                           ; BSR set to: 1
 23545                           
 23546                           ; BSR set to: 1
 23547  014ECA  C129  F129         	movff	___fladd@b,?___fladd
 23548  014ECE  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 23549  014ED2  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 23550  014ED6  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 23551  014EDA  0012               	return	
 23552  014EDC                     __end_of___fladd:
 23553                           	opt stack 0
 23554                           tblptru	equ	0xFF8
 23555                           tblptrh	equ	0xFF7
 23556                           tblptrl	equ	0xFF6
 23557                           tablat	equ	0xFF5
 23558                           prodh	equ	0xFF4
 23559                           prodl	equ	0xFF3
 23560                           intcon	equ	0xFF2
 23561                           indf0	equ	0xFEF
 23562                           postinc0	equ	0xFEE
 23563                           fsr0h	equ	0xFEA
 23564                           fsr0l	equ	0xFE9
 23565                           wreg	equ	0xFE8
 23566                           indf1	equ	0xFE7
 23567                           postdec1	equ	0xFE5
 23568                           plusw1	equ	0xFE3
 23569                           fsr1h	equ	0xFE2
 23570                           fsr1l	equ	0xFE1
 23571                           indf2	equ	0xFDF
 23572                           postinc2	equ	0xFDE
 23573                           postdec2	equ	0xFDD
 23574                           plusw2	equ	0xFDB
 23575                           fsr2h	equ	0xFDA
 23576                           fsr2l	equ	0xFD9
 23577                           status	equ	0xFD8
 23578                           
 23579 ;; *************** function ___flneg *****************
 23580 ;; Defined at:
 23581 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 23582 ;; Parameters:    Size  Location     Type
 23583 ;;  f1              4   37[BANK1 ] unsigned char 
 23584 ;; Auto vars:     Size  Location     Type
 23585 ;;		None
 23586 ;; Return value:  Size  Location     Type
 23587 ;;                  4   37[BANK1 ] unsigned char 
 23588 ;; Registers used:
 23589 ;;		wreg, status,2, status,0
 23590 ;; Tracked objects:
 23591 ;;		On entry : 0/0
 23592 ;;		On exit  : 0/0
 23593 ;;		Unchanged: 0/0
 23594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23595 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23598 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23599 ;;Total ram usage:        4 bytes
 23600 ;; Hardware stack levels used:    1
 23601 ;; Hardware stack levels required when called:   13
 23602 ;; This function calls:
 23603 ;;		Nothing
 23604 ;; This function is called by:
 23605 ;;		_ringBufferLUT
 23606 ;;		_printf
 23607 ;; This function uses a non-reentrant model
 23608 ;;
 23609                           
 23610                           	psect	text46
 23611  018EFE                     __ptext46:
 23612                           	opt stack 0
 23613  018EFE                     ___flneg:
 23614                           	opt stack 14
 23615                           
 23616                           ; BSR set to: 1
 23617                           ;incstack = 0
 23618  018EFE  0101               	movlb	1	; () banked
 23619  018F00  5125               	movf	___flneg@f1& (0+255),w,b
 23620  018F02  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 23621  018F04  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 23622  018F06  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 23623  018F08  B4D8               	btfsc	status,2,c
 23624  018F0A  D008               	goto	l1882
 23625                           
 23626                           ; BSR set to: 1
 23627  018F0C  0E00               	movlw	0
 23628  018F0E  1B25               	xorwf	___flneg@f1& (0+255),f,b
 23629  018F10  0E00               	movlw	0
 23630  018F12  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 23631  018F14  0E00               	movlw	0
 23632  018F16  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 23633  018F18  0E80               	movlw	128
 23634  018F1A  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 23635  018F1C                     l1882:
 23636                           
 23637                           ; BSR set to: 1
 23638                           
 23639                           ; BSR set to: 1
 23640  018F1C  C125  F125         	movff	___flneg@f1,?___flneg
 23641  018F20  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 23642  018F24  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 23643  018F28  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 23644  018F2C  0012               	return	
 23645  018F2E                     __end_of___flneg:
 23646                           	opt stack 0
 23647                           tblptru	equ	0xFF8
 23648                           tblptrh	equ	0xFF7
 23649                           tblptrl	equ	0xFF6
 23650                           tablat	equ	0xFF5
 23651                           prodh	equ	0xFF4
 23652                           prodl	equ	0xFF3
 23653                           intcon	equ	0xFF2
 23654                           indf0	equ	0xFEF
 23655                           postinc0	equ	0xFEE
 23656                           fsr0h	equ	0xFEA
 23657                           fsr0l	equ	0xFE9
 23658                           wreg	equ	0xFE8
 23659                           indf1	equ	0xFE7
 23660                           postdec1	equ	0xFE5
 23661                           plusw1	equ	0xFE3
 23662                           fsr1h	equ	0xFE2
 23663                           fsr1l	equ	0xFE1
 23664                           indf2	equ	0xFDF
 23665                           postinc2	equ	0xFDE
 23666                           postdec2	equ	0xFDD
 23667                           plusw2	equ	0xFDB
 23668                           fsr2h	equ	0xFDA
 23669                           fsr2l	equ	0xFD9
 23670                           status	equ	0xFD8
 23671                           
 23672 ;; *************** function _saveMaxToEEPROM *****************
 23673 ;; Defined at:
 23674 ;;		line 152 in file "main.c"
 23675 ;; Parameters:    Size  Location     Type
 23676 ;;		None
 23677 ;; Auto vars:     Size  Location     Type
 23678 ;;		None
 23679 ;; Return value:  Size  Location     Type
 23680 ;;                  1    wreg      void 
 23681 ;; Registers used:
 23682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23683 ;; Tracked objects:
 23684 ;;		On entry : 0/0
 23685 ;;		On exit  : 0/0
 23686 ;;		Unchanged: 0/0
 23687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23692 ;;Total ram usage:        0 bytes
 23693 ;; Hardware stack levels used:    1
 23694 ;; Hardware stack levels required when called:   15
 23695 ;; This function calls:
 23696 ;;		___flge
 23697 ;;		_writeDoubleToEEPROM
 23698 ;; This function is called by:
 23699 ;;		_main
 23700 ;; This function uses a non-reentrant model
 23701 ;;
 23702                           
 23703                           	psect	text47
 23704  0165BE                     __ptext47:
 23705                           	opt stack 0
 23706  0165BE                     _saveMaxToEEPROM:
 23707                           	opt stack 15
 23708                           
 23709                           ;main.c: 156: if (Irms > max_Irms) {
 23710                           
 23711                           ; BSR set to: 1
 23712                           ;incstack = 0
 23713  0165BE  C214  F117         	movff	_max_Irms,___flge@ff1	;volatile
 23714  0165C2  C215  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 23715  0165C6  C216  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 23716  0165CA  C217  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 23717  0165CE  C1C3  F11B         	movff	_Irms,___flge@ff2	;volatile
 23718  0165D2  C1C4  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
 23719  0165D6  C1C5  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
 23720  0165DA  C1C6  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
 23721  0165DE  EC92  F0BA         	call	___flge	;wreg free
 23722  0165E2  0101               	movlb	1	; () banked
 23723  0165E4  B0D8               	btfsc	status,0,c
 23724  0165E6  D01E               	goto	l981
 23725                           
 23726                           ; BSR set to: 1
 23727                           ;main.c: 157: writeDoubleToEEPROM(Irms, max_Irms_address);
 23728  0165E8  C1C3  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 23729  0165EC  C1C4  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 23730  0165F0  C1C5  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 23731  0165F4  C1C6  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 23732  0165F8  0E8D               	movlw	low _max_Irms_address
 23733  0165FA  6EF6               	movwf	tblptrl,c
 23734  0165FC                     	if	1	;There is more than 1 active tblptr byte
 23735  0165FC  0EE4               	movlw	high _max_Irms_address
 23736  0165FE  6EF7               	movwf	tblptrh,c
 23737  016600                     	endif
 23738  016600                     	if	1	;There are 3 active tblptr bytes
 23739  016600  0E00               	movlw	low (_max_Irms_address shr (0+16))
 23740  016602  6EF8               	movwf	tblptru,c
 23741  016604                     	endif
 23742  016604  0009               	tblrd		*+
 23743  016606  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 23744  01660A  000A               	tblrd		*-
 23745  01660C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 23746  016610  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 23747                           
 23748                           ;main.c: 158: max_Irms = Irms;
 23749  016614  C1C3  F214         	movff	_Irms,_max_Irms	;volatile
 23750  016618  C1C4  F215         	movff	_Irms+1,_max_Irms+1	;volatile
 23751  01661C  C1C5  F216         	movff	_Irms+2,_max_Irms+2	;volatile
 23752  016620  C1C6  F217         	movff	_Irms+3,_max_Irms+3	;volatile
 23753  016624                     l981:
 23754                           
 23755                           ;main.c: 159: }
 23756                           ;main.c: 161: if (Avg_Power > max_Power) {
 23757  016624  C210  F117         	movff	_max_Power,___flge@ff1	;volatile
 23758  016628  C211  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
 23759  01662C  C212  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
 23760  016630  C213  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
 23761  016634  C1BB  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
 23762  016638  C1BC  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 23763  01663C  C1BD  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 23764  016640  C1BE  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 23765  016644  EC92  F0BA         	call	___flge	;wreg free
 23766  016648  0101               	movlb	1	; () banked
 23767  01664A  B0D8               	btfsc	status,0,c
 23768  01664C  D01E               	goto	l982
 23769                           
 23770                           ; BSR set to: 1
 23771                           ;main.c: 162: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 23772  01664E  C1BB  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 23773  016652  C1BC  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 23774  016656  C1BD  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 23775  01665A  C1BE  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 23776  01665E  0E8B               	movlw	low _max_Power_address
 23777  016660  6EF6               	movwf	tblptrl,c
 23778  016662                     	if	1	;There is more than 1 active tblptr byte
 23779  016662  0EE4               	movlw	high _max_Power_address
 23780  016664  6EF7               	movwf	tblptrh,c
 23781  016666                     	endif
 23782  016666                     	if	1	;There are 3 active tblptr bytes
 23783  016666  0E00               	movlw	low (_max_Power_address shr (0+16))
 23784  016668  6EF8               	movwf	tblptru,c
 23785  01666A                     	endif
 23786  01666A  0009               	tblrd		*+
 23787  01666C  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 23788  016670  000A               	tblrd		*-
 23789  016672  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 23790  016676  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 23791                           
 23792                           ;main.c: 163: max_Power = Avg_Power;
 23793  01667A  C1BB  F210         	movff	_Avg_Power,_max_Power	;volatile
 23794  01667E  C1BC  F211         	movff	_Avg_Power+1,_max_Power+1	;volatile
 23795  016682  C1BD  F212         	movff	_Avg_Power+2,_max_Power+2	;volatile
 23796  016686  C1BE  F213         	movff	_Avg_Power+3,_max_Power+3	;volatile
 23797  01668A                     l982:
 23798                           
 23799                           ;main.c: 164: }
 23800                           ;main.c: 166: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 23801  01668A  C20C  F117         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 23802  01668E  C20D  F118         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 23803  016692  C20E  F119         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 23804  016696  C20F  F11A         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 23805  01669A  C1D3  F11B         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 23806  01669E  C1D4  F11C         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 23807  0166A2  C1D5  F11D         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 23808  0166A6  C1D6  F11E         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 23809  0166AA  EC92  F0BA         	call	___flge	;wreg free
 23810  0166AE  0101               	movlb	1	; () banked
 23811  0166B0  B0D8               	btfsc	status,0,c
 23812  0166B2  D01E               	goto	l983
 23813                           
 23814                           ; BSR set to: 1
 23815                           ;main.c: 167: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 23816  0166B4  C1D3  F11B         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 23817  0166B8  C1D4  F11C         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 23818  0166BC  C1D5  F11D         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 23819  0166C0  C1D6  F11E         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 23820  0166C4  0E89               	movlw	low _max_POS3P3_ADC_Result_address
 23821  0166C6  6EF6               	movwf	tblptrl,c
 23822  0166C8                     	if	1	;There is more than 1 active tblptr byte
 23823  0166C8  0EE4               	movlw	high _max_POS3P3_ADC_Result_address
 23824  0166CA  6EF7               	movwf	tblptrh,c
 23825  0166CC                     	endif
 23826  0166CC                     	if	1	;There are 3 active tblptr bytes
 23827  0166CC  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 23828  0166CE  6EF8               	movwf	tblptru,c
 23829  0166D0                     	endif
 23830  0166D0  0009               	tblrd		*+
 23831  0166D2  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 23832  0166D6  000A               	tblrd		*-
 23833  0166D8  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 23834  0166DC  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 23835                           
 23836                           ;main.c: 168: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 23837  0166E0  C1D3  F20C         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 23838  0166E4  C1D4  F20D         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 23839  0166E8  C1D5  F20E         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 23840  0166EC  C1D6  F20F         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 23841  0166F0                     l983:
 23842                           
 23843                           ;main.c: 169: }
 23844                           ;main.c: 171: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 23845  0166F0  C208  F117         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 23846  0166F4  C209  F118         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 23847  0166F8  C20A  F119         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 23848  0166FC  C20B  F11A         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 23849  016700  C1CF  F11B         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 23850  016704  C1D0  F11C         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 23851  016708  C1D1  F11D         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 23852  01670C  C1D2  F11E         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 23853  016710  EC92  F0BA         	call	___flge	;wreg free
 23854  016714  0101               	movlb	1	; () banked
 23855  016716  B0D8               	btfsc	status,0,c
 23856  016718  D01E               	goto	l984
 23857                           
 23858                           ; BSR set to: 1
 23859                           ;main.c: 172: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 23860  01671A  C1CF  F11B         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 23861  01671E  C1D0  F11C         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 23862  016722  C1D1  F11D         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 23863  016726  C1D2  F11E         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 23864  01672A  0E87               	movlw	low _max_POS12_ADC_Result_address
 23865  01672C  6EF6               	movwf	tblptrl,c
 23866  01672E                     	if	1	;There is more than 1 active tblptr byte
 23867  01672E  0EE4               	movlw	high _max_POS12_ADC_Result_address
 23868  016730  6EF7               	movwf	tblptrh,c
 23869  016732                     	endif
 23870  016732                     	if	1	;There are 3 active tblptr bytes
 23871  016732  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 23872  016734  6EF8               	movwf	tblptru,c
 23873  016736                     	endif
 23874  016736  0009               	tblrd		*+
 23875  016738  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 23876  01673C  000A               	tblrd		*-
 23877  01673E  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 23878  016742  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 23879                           
 23880                           ;main.c: 173: max_POS12_ADC_Result = POS12_ADC_Result;
 23881  016746  C1CF  F208         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 23882  01674A  C1D0  F209         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 23883  01674E  C1D1  F20A         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 23884  016752  C1D2  F20B         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 23885  016756                     l984:
 23886                           
 23887                           ;main.c: 174: }
 23888                           ;main.c: 176: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 23889  016756  C204  F117         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 23890  01675A  C205  F118         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 23891  01675E  C206  F119         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 23892  016762  C207  F11A         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 23893  016766  C1CB  F11B         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 23894  01676A  C1CC  F11C         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 23895  01676E  C1CD  F11D         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 23896  016772  C1CE  F11E         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 23897  016776  EC92  F0BA         	call	___flge	;wreg free
 23898  01677A  0101               	movlb	1	; () banked
 23899  01677C  B0D8               	btfsc	status,0,c
 23900  01677E  D01E               	goto	l985
 23901                           
 23902                           ; BSR set to: 1
 23903                           ;main.c: 177: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 23904  016780  C1CB  F11B         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 23905  016784  C1CC  F11C         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 23906  016788  C1CD  F11D         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 23907  01678C  C1CE  F11E         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 23908  016790  0E85               	movlw	low _max_Temp_ADC_Result_address
 23909  016792  6EF6               	movwf	tblptrl,c
 23910  016794                     	if	1	;There is more than 1 active tblptr byte
 23911  016794  0EE4               	movlw	high _max_Temp_ADC_Result_address
 23912  016796  6EF7               	movwf	tblptrh,c
 23913  016798                     	endif
 23914  016798                     	if	1	;There are 3 active tblptr bytes
 23915  016798  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 23916  01679A  6EF8               	movwf	tblptru,c
 23917  01679C                     	endif
 23918  01679C  0009               	tblrd		*+
 23919  01679E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 23920  0167A2  000A               	tblrd		*-
 23921  0167A4  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 23922  0167A8  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 23923                           
 23924                           ;main.c: 178: max_Temp_ADC_Result = Temp_ADC_Result;
 23925  0167AC  C1CB  F204         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 23926  0167B0  C1CC  F205         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 23927  0167B4  C1CD  F206         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 23928  0167B8  C1CE  F207         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 23929  0167BC                     l985:
 23930                           
 23931                           ;main.c: 179: }
 23932                           ;main.c: 181: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 23933  0167BC  C200  F117         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 23934  0167C0  C201  F118         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 23935  0167C4  C202  F119         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 23936  0167C8  C203  F11A         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 23937  0167CC  C1E4  F11B         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 23938  0167D0  C1E5  F11C         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 23939  0167D4  C1E6  F11D         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 23940  0167D8  C1E7  F11E         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 23941  0167DC  EC92  F0BA         	call	___flge	;wreg free
 23942  0167E0  0101               	movlb	1	; () banked
 23943  0167E2  B0D8               	btfsc	status,0,c
 23944  0167E4  0012               	return	
 23945                           
 23946                           ; BSR set to: 1
 23947                           ;main.c: 182: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 23948  0167E6  C1E4  F11B         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 23949  0167EA  C1E5  F11C         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 23950  0167EE  C1E6  F11D         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 23951  0167F2  C1E7  F11E         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 23952  0167F6  0E83               	movlw	low _max_FVR_ADC_Result_address
 23953  0167F8  6EF6               	movwf	tblptrl,c
 23954  0167FA                     	if	1	;There is more than 1 active tblptr byte
 23955  0167FA  0EE4               	movlw	high _max_FVR_ADC_Result_address
 23956  0167FC  6EF7               	movwf	tblptrh,c
 23957  0167FE                     	endif
 23958  0167FE                     	if	1	;There are 3 active tblptr bytes
 23959  0167FE  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 23960  016800  6EF8               	movwf	tblptru,c
 23961  016802                     	endif
 23962  016802  0009               	tblrd		*+
 23963  016804  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 23964  016808  000A               	tblrd		*-
 23965  01680A  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 23966  01680E  ECB9  F0C4         	call	_writeDoubleToEEPROM	;wreg free
 23967                           
 23968                           ;main.c: 183: max_FVR_ADC_Result = FVR_ADC_Result;
 23969  016812  C1E4  F200         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 23970  016816  C1E5  F201         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 23971  01681A  C1E6  F202         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 23972  01681E  C1E7  F203         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 23973  016822  0012               	return	
 23974  016824                     __end_of_saveMaxToEEPROM:
 23975                           	opt stack 0
 23976                           tblptru	equ	0xFF8
 23977                           tblptrh	equ	0xFF7
 23978                           tblptrl	equ	0xFF6
 23979                           tablat	equ	0xFF5
 23980                           prodh	equ	0xFF4
 23981                           prodl	equ	0xFF3
 23982                           intcon	equ	0xFF2
 23983                           indf0	equ	0xFEF
 23984                           postinc0	equ	0xFEE
 23985                           fsr0h	equ	0xFEA
 23986                           fsr0l	equ	0xFE9
 23987                           wreg	equ	0xFE8
 23988                           indf1	equ	0xFE7
 23989                           postdec1	equ	0xFE5
 23990                           plusw1	equ	0xFE3
 23991                           fsr1h	equ	0xFE2
 23992                           fsr1l	equ	0xFE1
 23993                           indf2	equ	0xFDF
 23994                           postinc2	equ	0xFDE
 23995                           postdec2	equ	0xFDD
 23996                           plusw2	equ	0xFDB
 23997                           fsr2h	equ	0xFDA
 23998                           fsr2l	equ	0xFD9
 23999                           status	equ	0xFD8
 24000                           
 24001 ;; *************** function _writeDoubleToEEPROM *****************
 24002 ;; Defined at:
 24003 ;;		line 6 in file "double_to_EEPROM.c"
 24004 ;; Parameters:    Size  Location     Type
 24005 ;;  input_double    4   27[BANK1 ] void 
 24006 ;;  starting_add    2   31[BANK1 ] unsigned int 
 24007 ;; Auto vars:     Size  Location     Type
 24008 ;;  byte_index      2   37[BANK1 ] int 
 24009 ;;  input_data      4   33[BANK1 ] struct .
 24010 ;; Return value:  Size  Location     Type
 24011 ;;                  1    wreg      void 
 24012 ;; Registers used:
 24013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24014 ;; Tracked objects:
 24015 ;;		On entry : 0/0
 24016 ;;		On exit  : 0/0
 24017 ;;		Unchanged: 0/0
 24018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24019 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24020 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24022 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24023 ;;Total ram usage:       12 bytes
 24024 ;; Hardware stack levels used:    1
 24025 ;; Hardware stack levels required when called:   14
 24026 ;; This function calls:
 24027 ;;		_DATAEE_WriteByte
 24028 ;; This function is called by:
 24029 ;;		_saveMaxToEEPROM
 24030 ;;		_ringBufferLUT
 24031 ;; This function uses a non-reentrant model
 24032 ;;
 24033                           
 24034                           	psect	text48
 24035  018972                     __ptext48:
 24036                           	opt stack 0
 24037  018972                     _writeDoubleToEEPROM:
 24038                           	opt stack 14
 24039                           
 24040                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 24041                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 24042                           
 24043                           ;incstack = 0
 24044  018972  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 24045  018976  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 24046  01897A  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 24047  01897E  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 24048                           
 24049                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 24050  018982  0E00               	movlw	0
 24051  018984  0101               	movlb	1	; () banked
 24052  018986  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 24053  018988  0E00               	movlw	0
 24054  01898A  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 24055  01898C                     l19192:
 24056                           
 24057                           ; BSR set to: 1
 24058  01898C  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 24059  01898E  E118               	bnz	l1410
 24060  018990  0E04               	movlw	4
 24061  018992  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 24062  018994  B0D8               	btfsc	status,0,c
 24063  018996  0012               	return	
 24064                           
 24065                           ; BSR set to: 1
 24066                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 24067                           
 24068                           ; BSR set to: 1
 24069                           
 24070                           ; BSR set to: 1
 24071  018998  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 24072  01899A  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 24073  01899C  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 24074  01899E  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 24075  0189A0  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 24076  0189A2  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 24077  0189A4  0E21               	movlw	low writeDoubleToEEPROM@input_data
 24078  0189A6  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 24079  0189A8  6ED9               	movwf	fsr2l,c
 24080  0189AA  0E01               	movlw	high writeDoubleToEEPROM@input_data
 24081  0189AC  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 24082  0189AE  6EDA               	movwf	fsr2h,c
 24083  0189B0  50DF               	movf	indf2,w,c
 24084  0189B2  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 24085  0189B4  EC6D  F0C6         	call	_DATAEE_WriteByte	;wreg free
 24086  0189B8  0101               	movlb	1	; () banked
 24087  0189BA  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 24088  0189BC  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 24089  0189BE  D7E6               	goto	l19192
 24090  0189C0                     l1410:
 24091                           
 24092                           ; BSR set to: 1
 24093  0189C0  0012               	return		;funcret
 24094  0189C2                     __end_of_writeDoubleToEEPROM:
 24095                           	opt stack 0
 24096                           tblptru	equ	0xFF8
 24097                           tblptrh	equ	0xFF7
 24098                           tblptrl	equ	0xFF6
 24099                           tablat	equ	0xFF5
 24100                           prodh	equ	0xFF4
 24101                           prodl	equ	0xFF3
 24102                           intcon	equ	0xFF2
 24103                           indf0	equ	0xFEF
 24104                           postinc0	equ	0xFEE
 24105                           fsr0h	equ	0xFEA
 24106                           fsr0l	equ	0xFE9
 24107                           wreg	equ	0xFE8
 24108                           indf1	equ	0xFE7
 24109                           postdec1	equ	0xFE5
 24110                           plusw1	equ	0xFE3
 24111                           fsr1h	equ	0xFE2
 24112                           fsr1l	equ	0xFE1
 24113                           indf2	equ	0xFDF
 24114                           postinc2	equ	0xFDE
 24115                           postdec2	equ	0xFDD
 24116                           plusw2	equ	0xFDB
 24117                           fsr2h	equ	0xFDA
 24118                           fsr2l	equ	0xFD9
 24119                           status	equ	0xFD8
 24120                           
 24121 ;; *************** function _DATAEE_WriteByte *****************
 24122 ;; Defined at:
 24123 ;;		line 168 in file "mcc_generated_files/memory.c"
 24124 ;; Parameters:    Size  Location     Type
 24125 ;;  bAdd            2   23[BANK1 ] unsigned int 
 24126 ;;  bData           1   25[BANK1 ] unsigned char 
 24127 ;; Auto vars:     Size  Location     Type
 24128 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 24129 ;; Return value:  Size  Location     Type
 24130 ;;                  1    wreg      void 
 24131 ;; Registers used:
 24132 ;;		wreg, status,2, status,0
 24133 ;; Tracked objects:
 24134 ;;		On entry : 0/0
 24135 ;;		On exit  : 0/0
 24136 ;;		Unchanged: 0/0
 24137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24138 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24139 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24141 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24142 ;;Total ram usage:        4 bytes
 24143 ;; Hardware stack levels used:    1
 24144 ;; Hardware stack levels required when called:   13
 24145 ;; This function calls:
 24146 ;;		Nothing
 24147 ;; This function is called by:
 24148 ;;		_writeDoubleToEEPROM
 24149 ;; This function uses a non-reentrant model
 24150 ;;
 24151                           
 24152                           	psect	text49
 24153  018CDA                     __ptext49:
 24154                           	opt stack 0
 24155  018CDA                     _DATAEE_WriteByte:
 24156                           	opt stack 14
 24157                           
 24158                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 24159                           
 24160                           ; BSR set to: 1
 24161                           ;incstack = 0
 24162  018CDA  0E00               	movlw	0
 24163  018CDC  BEF2               	btfsc	intcon,7,c	;volatile
 24164  018CDE  0E01               	movlw	1
 24165  018CE0  0101               	movlb	1	; () banked
 24166  018CE2  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 24167                           
 24168                           ; BSR set to: 1
 24169                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 24170  018CE4  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 24171  018CE6  0B03               	andlw	3
 24172  018CE8  6E75               	movwf	3957,c	;volatile
 24173                           
 24174                           ; BSR set to: 1
 24175                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 24176  018CEA  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 24177                           
 24178                           ; BSR set to: 1
 24179                           ;memory.c: 174: NVMDAT = bData;
 24180  018CEE  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 24181                           
 24182                           ; BSR set to: 1
 24183                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 24184  018CF2  0E3F               	movlw	-193
 24185  018CF4  1677               	andwf	3959,f,c	;volsfr
 24186                           
 24187                           ; BSR set to: 1
 24188                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 24189  018CF6  8477               	bsf	3959,2,c	;volsfr
 24190                           
 24191                           ; BSR set to: 1
 24192                           ;memory.c: 177: INTCONbits.GIE = 0;
 24193  018CF8  9EF2               	bcf	intcon,7,c	;volatile
 24194                           
 24195                           ; BSR set to: 1
 24196                           ;memory.c: 178: NVMCON2 = 0x55;
 24197  018CFA  0E55               	movlw	85
 24198  018CFC  6E78               	movwf	3960,c	;volsfr
 24199                           
 24200                           ; BSR set to: 1
 24201                           ;memory.c: 179: NVMCON2 = 0xAA;
 24202  018CFE  0EAA               	movlw	170
 24203  018D00  6E78               	movwf	3960,c	;volsfr
 24204                           
 24205                           ; BSR set to: 1
 24206                           ;memory.c: 180: NVMCON1bits.WR = 1;
 24207  018D02  8277               	bsf	3959,1,c	;volsfr
 24208  018D04                     
 24209                           ; BSR set to: 1
 24210                           ;memory.c: 183: {
 24211  018D04  B277               	btfsc	3959,1,c	;volsfr
 24212  018D06  D7FE               	goto	l789
 24213                           
 24214                           ;memory.c: 184: }
 24215                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 24216  018D08  9477               	bcf	3959,2,c	;volsfr
 24217                           
 24218                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 24219  018D0A  0101               	movlb	1	; () banked
 24220  018D0C  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 24221  018D0E  D002               	bra	u25575
 24222  018D10  9EF2               	bcf	intcon,7,c	;volatile
 24223  018D12  D001               	bra	u25576
 24224  018D14                     u25575:
 24225  018D14  8EF2               	bsf	intcon,7,c	;volatile
 24226  018D16                     u25576:
 24227  018D16  0012               	return		;funcret
 24228  018D18                     __end_of_DATAEE_WriteByte:
 24229                           	opt stack 0
 24230                           tblptru	equ	0xFF8
 24231                           tblptrh	equ	0xFF7
 24232                           tblptrl	equ	0xFF6
 24233                           tablat	equ	0xFF5
 24234                           prodh	equ	0xFF4
 24235                           prodl	equ	0xFF3
 24236                           intcon	equ	0xFF2
 24237                           indf0	equ	0xFEF
 24238                           postinc0	equ	0xFEE
 24239                           fsr0h	equ	0xFEA
 24240                           fsr0l	equ	0xFE9
 24241                           wreg	equ	0xFE8
 24242                           indf1	equ	0xFE7
 24243                           postdec1	equ	0xFE5
 24244                           plusw1	equ	0xFE3
 24245                           fsr1h	equ	0xFE2
 24246                           fsr1l	equ	0xFE1
 24247                           indf2	equ	0xFDF
 24248                           postinc2	equ	0xFDE
 24249                           postdec2	equ	0xFDD
 24250                           plusw2	equ	0xFDB
 24251                           fsr2h	equ	0xFDA
 24252                           fsr2l	equ	0xFD9
 24253                           status	equ	0xFD8
 24254                           
 24255 ;; *************** function ___flge *****************
 24256 ;; Defined at:
 24257 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 24258 ;; Parameters:    Size  Location     Type
 24259 ;;  ff1             4   23[BANK1 ] void 
 24260 ;;  ff2             4   27[BANK1 ] void 
 24261 ;; Auto vars:     Size  Location     Type
 24262 ;;		None
 24263 ;; Return value:  Size  Location     Type
 24264 ;;		None               void
 24265 ;; Registers used:
 24266 ;;		wreg, status,2, status,0
 24267 ;; Tracked objects:
 24268 ;;		On entry : 0/0
 24269 ;;		On exit  : 0/0
 24270 ;;		Unchanged: 0/0
 24271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24272 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24274 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24275 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24276 ;;Total ram usage:       12 bytes
 24277 ;; Hardware stack levels used:    1
 24278 ;; Hardware stack levels required when called:   13
 24279 ;; This function calls:
 24280 ;;		Nothing
 24281 ;; This function is called by:
 24282 ;;		_saveMaxToEEPROM
 24283 ;;		_printf
 24284 ;; This function uses a non-reentrant model
 24285 ;;
 24286                           
 24287                           	psect	text50
 24288  017524                     __ptext50:
 24289                           	opt stack 0
 24290  017524                     ___flge:
 24291                           	opt stack 14
 24292                           
 24293                           ;incstack = 0
 24294  017524  0E00               	movlw	0
 24295  017526  0101               	movlb	1	; () banked
 24296  017528  1517               	andwf	___flge@ff1& (0+255),w,b
 24297  01752A  6F1F               	movwf	??___flge& (0+255),b
 24298  01752C  0E00               	movlw	0
 24299  01752E  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 24300  017530  6F20               	movwf	(??___flge+1)& (0+255),b
 24301  017532  0E80               	movlw	128
 24302  017534  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 24303  017536  6F21               	movwf	(??___flge+2)& (0+255),b
 24304  017538  0E7F               	movlw	127
 24305  01753A  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 24306  01753C  6F22               	movwf	(??___flge+3)& (0+255),b
 24307  01753E  511F               	movf	??___flge& (0+255),w,b
 24308  017540  1120               	iorwf	(??___flge+1)& (0+255),w,b
 24309  017542  1121               	iorwf	(??___flge+2)& (0+255),w,b
 24310  017544  1122               	iorwf	(??___flge+3)& (0+255),w,b
 24311  017546  A4D8               	btfss	status,2,c
 24312  017548  D008               	goto	l1875
 24313                           
 24314                           ; BSR set to: 1
 24315  01754A  0E00               	movlw	0
 24316  01754C  6F17               	movwf	___flge@ff1& (0+255),b
 24317  01754E  0E00               	movlw	0
 24318  017550  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 24319  017552  0E00               	movlw	0
 24320  017554  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 24321  017556  0E00               	movlw	0
 24322  017558  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 24323  01755A                     l1875:
 24324                           
 24325                           ; BSR set to: 1
 24326                           
 24327                           ; BSR set to: 1
 24328  01755A  0E00               	movlw	0
 24329  01755C  151B               	andwf	___flge@ff2& (0+255),w,b
 24330  01755E  6F1F               	movwf	??___flge& (0+255),b
 24331  017560  0E00               	movlw	0
 24332  017562  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 24333  017564  6F20               	movwf	(??___flge+1)& (0+255),b
 24334  017566  0E80               	movlw	128
 24335  017568  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 24336  01756A  6F21               	movwf	(??___flge+2)& (0+255),b
 24337  01756C  0E7F               	movlw	127
 24338  01756E  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 24339  017570  6F22               	movwf	(??___flge+3)& (0+255),b
 24340  017572  511F               	movf	??___flge& (0+255),w,b
 24341  017574  1120               	iorwf	(??___flge+1)& (0+255),w,b
 24342  017576  1121               	iorwf	(??___flge+2)& (0+255),w,b
 24343  017578  1122               	iorwf	(??___flge+3)& (0+255),w,b
 24344  01757A  A4D8               	btfss	status,2,c
 24345  01757C  D008               	goto	l1876
 24346                           
 24347                           ; BSR set to: 1
 24348  01757E  0E00               	movlw	0
 24349  017580  6F1B               	movwf	___flge@ff2& (0+255),b
 24350  017582  0E00               	movlw	0
 24351  017584  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24352  017586  0E00               	movlw	0
 24353  017588  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24354  01758A  0E00               	movlw	0
 24355  01758C  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24356  01758E                     l1876:
 24357                           
 24358                           ; BSR set to: 1
 24359                           
 24360                           ; BSR set to: 1
 24361  01758E  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 24362  017590  D01D               	goto	l1877
 24363                           
 24364                           ; BSR set to: 1
 24365  017592  C117  F11F         	movff	___flge@ff1,??___flge
 24366  017596  C118  F120         	movff	___flge@ff1+1,??___flge+1
 24367  01759A  C119  F121         	movff	___flge@ff1+2,??___flge+2
 24368  01759E  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 24369  0175A2  1F1F               	comf	??___flge& (0+255),f,b
 24370  0175A4  1F20               	comf	(??___flge+1)& (0+255),f,b
 24371  0175A6  1F21               	comf	(??___flge+2)& (0+255),f,b
 24372  0175A8  1F22               	comf	(??___flge+3)& (0+255),f,b
 24373  0175AA  2B1F               	incf	??___flge& (0+255),f,b
 24374  0175AC  0E00               	movlw	0
 24375  0175AE  2320               	addwfc	(??___flge+1)& (0+255),f,b
 24376  0175B0  2321               	addwfc	(??___flge+2)& (0+255),f,b
 24377  0175B2  2322               	addwfc	(??___flge+3)& (0+255),f,b
 24378  0175B4  0E00               	movlw	0
 24379  0175B6  251F               	addwf	??___flge& (0+255),w,b
 24380  0175B8  6F17               	movwf	___flge@ff1& (0+255),b
 24381  0175BA  0E00               	movlw	0
 24382  0175BC  2120               	addwfc	(??___flge+1)& (0+255),w,b
 24383  0175BE  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 24384  0175C0  0E00               	movlw	0
 24385  0175C2  2121               	addwfc	(??___flge+2)& (0+255),w,b
 24386  0175C4  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 24387  0175C6  0E80               	movlw	128
 24388  0175C8  2122               	addwfc	(??___flge+3)& (0+255),w,b
 24389  0175CA  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 24390  0175CC                     l1877:
 24391                           
 24392                           ; BSR set to: 1
 24393                           
 24394                           ; BSR set to: 1
 24395  0175CC  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 24396  0175CE  D01D               	goto	l1878
 24397                           
 24398                           ; BSR set to: 1
 24399  0175D0  C11B  F11F         	movff	___flge@ff2,??___flge
 24400  0175D4  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 24401  0175D8  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 24402  0175DC  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 24403  0175E0  1F1F               	comf	??___flge& (0+255),f,b
 24404  0175E2  1F20               	comf	(??___flge+1)& (0+255),f,b
 24405  0175E4  1F21               	comf	(??___flge+2)& (0+255),f,b
 24406  0175E6  1F22               	comf	(??___flge+3)& (0+255),f,b
 24407  0175E8  2B1F               	incf	??___flge& (0+255),f,b
 24408  0175EA  0E00               	movlw	0
 24409  0175EC  2320               	addwfc	(??___flge+1)& (0+255),f,b
 24410  0175EE  2321               	addwfc	(??___flge+2)& (0+255),f,b
 24411  0175F0  2322               	addwfc	(??___flge+3)& (0+255),f,b
 24412  0175F2  0E00               	movlw	0
 24413  0175F4  251F               	addwf	??___flge& (0+255),w,b
 24414  0175F6  6F1B               	movwf	___flge@ff2& (0+255),b
 24415  0175F8  0E00               	movlw	0
 24416  0175FA  2120               	addwfc	(??___flge+1)& (0+255),w,b
 24417  0175FC  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 24418  0175FE  0E00               	movlw	0
 24419  017600  2121               	addwfc	(??___flge+2)& (0+255),w,b
 24420  017602  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 24421  017604  0E80               	movlw	128
 24422  017606  2122               	addwfc	(??___flge+3)& (0+255),w,b
 24423  017608  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 24424  01760A                     l1878:
 24425                           
 24426                           ; BSR set to: 1
 24427  01760A  0E00               	movlw	0
 24428  01760C  1B17               	xorwf	___flge@ff1& (0+255),f,b
 24429  01760E  0E00               	movlw	0
 24430  017610  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 24431  017612  0E00               	movlw	0
 24432  017614  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 24433  017616  0E80               	movlw	128
 24434  017618  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 24435  01761A  0E00               	movlw	0
 24436  01761C  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 24437  01761E  0E00               	movlw	0
 24438  017620  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 24439  017622  0E00               	movlw	0
 24440  017624  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 24441  017626  0E80               	movlw	128
 24442  017628  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 24443  01762A  511B               	movf	___flge@ff2& (0+255),w,b
 24444  01762C  5D17               	subwf	___flge@ff1& (0+255),w,b
 24445  01762E  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 24446  017630  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 24447  017632  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 24448  017634  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 24449  017636  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 24450  017638  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 24451  01763A  B0D8               	btfsc	status,0,c
 24452  01763C  D002               	goto	l17830
 24453                           
 24454                           ; BSR set to: 1
 24455  01763E  90D8               	bcf	status,0,c
 24456  017640  0012               	return	
 24457  017642                     l17830:
 24458                           
 24459                           ; BSR set to: 1
 24460                           
 24461                           ; BSR set to: 1
 24462  017642  80D8               	bsf	status,0,c
 24463                           
 24464                           ; BSR set to: 1
 24465  017644  0012               	return	
 24466  017646                     __end_of___flge:
 24467                           	opt stack 0
 24468                           tblptru	equ	0xFF8
 24469                           tblptrh	equ	0xFF7
 24470                           tblptrl	equ	0xFF6
 24471                           tablat	equ	0xFF5
 24472                           prodh	equ	0xFF4
 24473                           prodl	equ	0xFF3
 24474                           intcon	equ	0xFF2
 24475                           indf0	equ	0xFEF
 24476                           postinc0	equ	0xFEE
 24477                           fsr0h	equ	0xFEA
 24478                           fsr0l	equ	0xFE9
 24479                           wreg	equ	0xFE8
 24480                           indf1	equ	0xFE7
 24481                           postdec1	equ	0xFE5
 24482                           plusw1	equ	0xFE3
 24483                           fsr1h	equ	0xFE2
 24484                           fsr1l	equ	0xFE1
 24485                           indf2	equ	0xFDF
 24486                           postinc2	equ	0xFDE
 24487                           postdec2	equ	0xFDD
 24488                           plusw2	equ	0xFDB
 24489                           fsr2h	equ	0xFDA
 24490                           fsr2l	equ	0xFD9
 24491                           status	equ	0xFD8
 24492                           
 24493 ;; *************** function _readMaxFromEEPROM *****************
 24494 ;; Defined at:
 24495 ;;		line 189 in file "main.c"
 24496 ;; Parameters:    Size  Location     Type
 24497 ;;		None
 24498 ;; Auto vars:     Size  Location     Type
 24499 ;;		None
 24500 ;; Return value:  Size  Location     Type
 24501 ;;                  1    wreg      void 
 24502 ;; Registers used:
 24503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24504 ;; Tracked objects:
 24505 ;;		On entry : 0/0
 24506 ;;		On exit  : 0/0
 24507 ;;		Unchanged: 0/0
 24508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24513 ;;Total ram usage:        0 bytes
 24514 ;; Hardware stack levels used:    1
 24515 ;; Hardware stack levels required when called:   15
 24516 ;; This function calls:
 24517 ;;		_readDoubleFromEEPROM
 24518 ;; This function is called by:
 24519 ;;		_main
 24520 ;; This function uses a non-reentrant model
 24521 ;;
 24522                           
 24523                           	psect	text51
 24524  017878                     __ptext51:
 24525                           	opt stack 0
 24526  017878                     _readMaxFromEEPROM:
 24527                           	opt stack 15
 24528                           
 24529                           ;main.c: 191: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 24530                           
 24531                           ; BSR set to: 1
 24532                           ;incstack = 0
 24533  017878  0E8D               	movlw	low _max_Irms_address
 24534  01787A  6EF6               	movwf	tblptrl,c
 24535  01787C                     	if	1	;There is more than 1 active tblptr byte
 24536  01787C  0EE4               	movlw	high _max_Irms_address
 24537  01787E  6EF7               	movwf	tblptrh,c
 24538  017880                     	endif
 24539  017880                     	if	1	;There are 3 active tblptr bytes
 24540  017880  0E00               	movlw	low (_max_Irms_address shr (0+16))
 24541  017882  6EF8               	movwf	tblptru,c
 24542  017884                     	endif
 24543  017884  0009               	tblrd		*+
 24544  017886  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 24545  01788A  000A               	tblrd		*-
 24546  01788C  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 24547  017890  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 24548  017894  C119  F214         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 24549  017898  C11A  F215         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 24550  01789C  C11B  F216         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 24551  0178A0  C11C  F217         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 24552                           
 24553                           ;main.c: 192: max_Power = readDoubleFromEEPROM(max_Power_address);
 24554  0178A4  0E8B               	movlw	low _max_Power_address
 24555  0178A6  6EF6               	movwf	tblptrl,c
 24556  0178A8                     	if	1	;There is more than 1 active tblptr byte
 24557  0178A8  0EE4               	movlw	high _max_Power_address
 24558  0178AA  6EF7               	movwf	tblptrh,c
 24559  0178AC                     	endif
 24560  0178AC                     	if	1	;There are 3 active tblptr bytes
 24561  0178AC  0E00               	movlw	low (_max_Power_address shr (0+16))
 24562  0178AE  6EF8               	movwf	tblptru,c
 24563  0178B0                     	endif
 24564  0178B0  0009               	tblrd		*+
 24565  0178B2  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 24566  0178B6  000A               	tblrd		*-
 24567  0178B8  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 24568  0178BC  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 24569  0178C0  C119  F210         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 24570  0178C4  C11A  F211         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 24571  0178C8  C11B  F212         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 24572  0178CC  C11C  F213         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 24573                           
 24574                           ;main.c: 193: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 24575  0178D0  0E89               	movlw	low _max_POS3P3_ADC_Result_address
 24576  0178D2  6EF6               	movwf	tblptrl,c
 24577  0178D4                     	if	1	;There is more than 1 active tblptr byte
 24578  0178D4  0EE4               	movlw	high _max_POS3P3_ADC_Result_address
 24579  0178D6  6EF7               	movwf	tblptrh,c
 24580  0178D8                     	endif
 24581  0178D8                     	if	1	;There are 3 active tblptr bytes
 24582  0178D8  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 24583  0178DA  6EF8               	movwf	tblptru,c
 24584  0178DC                     	endif
 24585  0178DC  0009               	tblrd		*+
 24586  0178DE  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 24587  0178E2  000A               	tblrd		*-
 24588  0178E4  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 24589  0178E8  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 24590  0178EC  C119  F20C         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 24591  0178F0  C11A  F20D         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 24592  0178F4  C11B  F20E         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 24593  0178F8  C11C  F20F         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 24594                           
 24595                           ;main.c: 194: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 24596  0178FC  0E87               	movlw	low _max_POS12_ADC_Result_address
 24597  0178FE  6EF6               	movwf	tblptrl,c
 24598  017900                     	if	1	;There is more than 1 active tblptr byte
 24599  017900  0EE4               	movlw	high _max_POS12_ADC_Result_address
 24600  017902  6EF7               	movwf	tblptrh,c
 24601  017904                     	endif
 24602  017904                     	if	1	;There are 3 active tblptr bytes
 24603  017904  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 24604  017906  6EF8               	movwf	tblptru,c
 24605  017908                     	endif
 24606  017908  0009               	tblrd		*+
 24607  01790A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 24608  01790E  000A               	tblrd		*-
 24609  017910  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 24610  017914  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 24611  017918  C119  F208         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 24612  01791C  C11A  F209         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 24613  017920  C11B  F20A         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 24614  017924  C11C  F20B         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 24615                           
 24616                           ;main.c: 195: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 24617  017928  0E85               	movlw	low _max_Temp_ADC_Result_address
 24618  01792A  6EF6               	movwf	tblptrl,c
 24619  01792C                     	if	1	;There is more than 1 active tblptr byte
 24620  01792C  0EE4               	movlw	high _max_Temp_ADC_Result_address
 24621  01792E  6EF7               	movwf	tblptrh,c
 24622  017930                     	endif
 24623  017930                     	if	1	;There are 3 active tblptr bytes
 24624  017930  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 24625  017932  6EF8               	movwf	tblptru,c
 24626  017934                     	endif
 24627  017934  0009               	tblrd		*+
 24628  017936  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 24629  01793A  000A               	tblrd		*-
 24630  01793C  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 24631  017940  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 24632  017944  C119  F204         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 24633  017948  C11A  F205         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 24634  01794C  C11B  F206         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 24635  017950  C11C  F207         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 24636                           
 24637                           ;main.c: 196: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 24638  017954  0E83               	movlw	low _max_FVR_ADC_Result_address
 24639  017956  6EF6               	movwf	tblptrl,c
 24640  017958                     	if	1	;There is more than 1 active tblptr byte
 24641  017958  0EE4               	movlw	high _max_FVR_ADC_Result_address
 24642  01795A  6EF7               	movwf	tblptrh,c
 24643  01795C                     	endif
 24644  01795C                     	if	1	;There are 3 active tblptr bytes
 24645  01795C  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 24646  01795E  6EF8               	movwf	tblptru,c
 24647  017960                     	endif
 24648  017960  0009               	tblrd		*+
 24649  017962  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 24650  017966  000A               	tblrd		*-
 24651  017968  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 24652  01796C  EC3F  F0C4         	call	_readDoubleFromEEPROM	;wreg free
 24653  017970  C119  F200         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 24654  017974  C11A  F201         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 24655  017978  C11B  F202         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 24656  01797C  C11C  F203         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 24657  017980  0012               	return		;funcret
 24658  017982                     __end_of_readMaxFromEEPROM:
 24659                           	opt stack 0
 24660                           tblptru	equ	0xFF8
 24661                           tblptrh	equ	0xFF7
 24662                           tblptrl	equ	0xFF6
 24663                           tablat	equ	0xFF5
 24664                           prodh	equ	0xFF4
 24665                           prodl	equ	0xFF3
 24666                           intcon	equ	0xFF2
 24667                           indf0	equ	0xFEF
 24668                           postinc0	equ	0xFEE
 24669                           fsr0h	equ	0xFEA
 24670                           fsr0l	equ	0xFE9
 24671                           wreg	equ	0xFE8
 24672                           indf1	equ	0xFE7
 24673                           postdec1	equ	0xFE5
 24674                           plusw1	equ	0xFE3
 24675                           fsr1h	equ	0xFE2
 24676                           fsr1l	equ	0xFE1
 24677                           indf2	equ	0xFDF
 24678                           postinc2	equ	0xFDE
 24679                           postdec2	equ	0xFDD
 24680                           plusw2	equ	0xFDB
 24681                           fsr2h	equ	0xFDA
 24682                           fsr2l	equ	0xFD9
 24683                           status	equ	0xFD8
 24684                           
 24685 ;; *************** function _readDoubleFromEEPROM *****************
 24686 ;; Defined at:
 24687 ;;		line 22 in file "double_to_EEPROM.c"
 24688 ;; Parameters:    Size  Location     Type
 24689 ;;  starting_add    2   25[BANK1 ] unsigned int 
 24690 ;; Auto vars:     Size  Location     Type
 24691 ;;  byte_index      2   33[BANK1 ] int 
 24692 ;;  output_data     4   29[BANK1 ] struct .
 24693 ;; Return value:  Size  Location     Type
 24694 ;;                  4   25[BANK1 ] struct .
 24695 ;; Registers used:
 24696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24697 ;; Tracked objects:
 24698 ;;		On entry : 0/0
 24699 ;;		On exit  : 0/0
 24700 ;;		Unchanged: 0/0
 24701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24702 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24703 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24705 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24706 ;;Total ram usage:       10 bytes
 24707 ;; Hardware stack levels used:    1
 24708 ;; Hardware stack levels required when called:   14
 24709 ;; This function calls:
 24710 ;;		_DATAEE_ReadByte
 24711 ;; This function is called by:
 24712 ;;		_readMaxFromEEPROM
 24713 ;;		_ringBufferLUT
 24714 ;; This function uses a non-reentrant model
 24715 ;;
 24716                           
 24717                           	psect	text52
 24718  01887E                     __ptext52:
 24719                           	opt stack 0
 24720  01887E                     _readDoubleFromEEPROM:
 24721                           	opt stack 14
 24722                           
 24723                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 24724                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 24725                           
 24726                           ;incstack = 0
 24727  01887E  0E00               	movlw	0
 24728  018880  0101               	movlb	1	; () banked
 24729  018882  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 24730  018884  0E00               	movlw	0
 24731  018886  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 24732                           
 24733                           ; BSR set to: 1
 24734  018888  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 24735  01888A  E119               	bnz	l1414
 24736  01888C  D014               	goto	L8
 24737  01888E                     
 24738                           ; BSR set to: 1
 24739                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 24740                           
 24741                           ; BSR set to: 1
 24742  01888E  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 24743  018890  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 24744  018892  6ED9               	movwf	fsr2l,c
 24745  018894  0E01               	movlw	high readDoubleFromEEPROM@output_data
 24746  018896  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 24747  018898  6EDA               	movwf	fsr2h,c
 24748  01889A  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 24749  01889C  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 24750  01889E  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 24751  0188A0  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 24752  0188A2  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 24753  0188A4  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 24754  0188A6  ECC8  F0C8         	call	_DATAEE_ReadByte	;wreg free
 24755  0188AA  6EDF               	movwf	indf2,c
 24756  0188AC  0101               	movlb	1	; () banked
 24757  0188AE  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 24758  0188B0  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 24759                           
 24760                           ; BSR set to: 1
 24761  0188B2  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 24762  0188B4  E104               	bnz	u25680
 24763  0188B6                     L8:
 24764  0188B6  0E04               	movlw	4
 24765  0188B8  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 24766  0188BA  A0D8               	btfss	status,0,c
 24767  0188BC  D7E8               	goto	l1413
 24768  0188BE                     u25680:
 24769  0188BE                     l1414:
 24770                           
 24771                           ; BSR set to: 1
 24772                           ;double_to_EEPROM.c: 32: }
 24773                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 24774  0188BE  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 24775  0188C2  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 24776  0188C6  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 24777  0188CA  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 24778                           
 24779                           ; BSR set to: 1
 24780  0188CE  0012               	return		;funcret
 24781  0188D0                     __end_of_readDoubleFromEEPROM:
 24782                           	opt stack 0
 24783                           tblptru	equ	0xFF8
 24784                           tblptrh	equ	0xFF7
 24785                           tblptrl	equ	0xFF6
 24786                           tablat	equ	0xFF5
 24787                           prodh	equ	0xFF4
 24788                           prodl	equ	0xFF3
 24789                           intcon	equ	0xFF2
 24790                           indf0	equ	0xFEF
 24791                           postinc0	equ	0xFEE
 24792                           fsr0h	equ	0xFEA
 24793                           fsr0l	equ	0xFE9
 24794                           wreg	equ	0xFE8
 24795                           indf1	equ	0xFE7
 24796                           postdec1	equ	0xFE5
 24797                           plusw1	equ	0xFE3
 24798                           fsr1h	equ	0xFE2
 24799                           fsr1l	equ	0xFE1
 24800                           indf2	equ	0xFDF
 24801                           postinc2	equ	0xFDE
 24802                           postdec2	equ	0xFDD
 24803                           plusw2	equ	0xFDB
 24804                           fsr2h	equ	0xFDA
 24805                           fsr2l	equ	0xFD9
 24806                           status	equ	0xFD8
 24807                           
 24808 ;; *************** function _DATAEE_ReadByte *****************
 24809 ;; Defined at:
 24810 ;;		line 190 in file "mcc_generated_files/memory.c"
 24811 ;; Parameters:    Size  Location     Type
 24812 ;;  bAdd            2   23[BANK1 ] unsigned int 
 24813 ;; Auto vars:     Size  Location     Type
 24814 ;;		None
 24815 ;; Return value:  Size  Location     Type
 24816 ;;                  1    wreg      unsigned char 
 24817 ;; Registers used:
 24818 ;;		wreg, status,2, status,0
 24819 ;; Tracked objects:
 24820 ;;		On entry : 0/0
 24821 ;;		On exit  : 0/0
 24822 ;;		Unchanged: 0/0
 24823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24824 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24827 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24828 ;;Total ram usage:        2 bytes
 24829 ;; Hardware stack levels used:    1
 24830 ;; Hardware stack levels required when called:   13
 24831 ;; This function calls:
 24832 ;;		Nothing
 24833 ;; This function is called by:
 24834 ;;		_readDoubleFromEEPROM
 24835 ;; This function uses a non-reentrant model
 24836 ;;
 24837                           
 24838                           	psect	text53
 24839  019190                     __ptext53:
 24840                           	opt stack 0
 24841  019190                     _DATAEE_ReadByte:
 24842                           	opt stack 14
 24843                           
 24844                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 24845                           
 24846                           ; BSR set to: 1
 24847                           ;incstack = 0
 24848  019190  0101               	movlb	1	; () banked
 24849  019192  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 24850  019194  0B03               	andlw	3
 24851  019196  6E75               	movwf	3957,c	;volatile
 24852                           
 24853                           ; BSR set to: 1
 24854                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 24855  019198  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 24856                           
 24857                           ; BSR set to: 1
 24858                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 24859  01919C  0E3F               	movlw	-193
 24860  01919E  1677               	andwf	3959,f,c	;volsfr
 24861                           
 24862                           ; BSR set to: 1
 24863                           ;memory.c: 195: NVMCON1bits.RD = 1;
 24864  0191A0  8077               	bsf	3959,0,c	;volsfr
 24865                           
 24866                           ; BSR set to: 1
 24867                           ;memory.c: 196: __nop();
 24868  0191A2  F000               	nop	
 24869                           
 24870                           ;memory.c: 197: __nop();
 24871  0191A4  F000               	nop	
 24872                           
 24873                           ;memory.c: 199: return (NVMDAT);
 24874  0191A6  5076               	movf	3958,w,c	;volatile
 24875  0191A8  0012               	return	
 24876  0191AA                     __end_of_DATAEE_ReadByte:
 24877                           	opt stack 0
 24878                           tblptru	equ	0xFF8
 24879                           tblptrh	equ	0xFF7
 24880                           tblptrl	equ	0xFF6
 24881                           tablat	equ	0xFF5
 24882                           prodh	equ	0xFF4
 24883                           prodl	equ	0xFF3
 24884                           intcon	equ	0xFF2
 24885                           indf0	equ	0xFEF
 24886                           postinc0	equ	0xFEE
 24887                           fsr0h	equ	0xFEA
 24888                           fsr0l	equ	0xFE9
 24889                           wreg	equ	0xFE8
 24890                           indf1	equ	0xFE7
 24891                           postdec1	equ	0xFE5
 24892                           plusw1	equ	0xFE3
 24893                           fsr1h	equ	0xFE2
 24894                           fsr1l	equ	0xFE1
 24895                           indf2	equ	0xFDF
 24896                           postinc2	equ	0xFDE
 24897                           postdec2	equ	0xFDD
 24898                           plusw2	equ	0xFDB
 24899                           fsr2h	equ	0xFDA
 24900                           fsr2l	equ	0xFD9
 24901                           status	equ	0xFD8
 24902                           
 24903 ;; *************** function _getCauseOfReset *****************
 24904 ;; Defined at:
 24905 ;;		line 11 in file "cause_of_reset.c"
 24906 ;; Parameters:    Size  Location     Type
 24907 ;;		None
 24908 ;; Auto vars:     Size  Location     Type
 24909 ;;  return_reset    1   23[BANK1 ] enum E17455
 24910 ;; Return value:  Size  Location     Type
 24911 ;;                  1    wreg      enum E17948
 24912 ;; Registers used:
 24913 ;;		wreg, status,2
 24914 ;; Tracked objects:
 24915 ;;		On entry : 0/0
 24916 ;;		On exit  : 0/0
 24917 ;;		Unchanged: 0/0
 24918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24920 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24922 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24923 ;;Total ram usage:        1 bytes
 24924 ;; Hardware stack levels used:    1
 24925 ;; Hardware stack levels required when called:   13
 24926 ;; This function calls:
 24927 ;;		Nothing
 24928 ;; This function is called by:
 24929 ;;		_main
 24930 ;; This function uses a non-reentrant model
 24931 ;;
 24932                           
 24933                           	psect	text54
 24934  0188D0                     __ptext54:
 24935                           	opt stack 0
 24936  0188D0                     _getCauseOfReset:
 24937                           	opt stack 17
 24938                           
 24939                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 24940                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 24941                           
 24942                           ;incstack = 0
 24943  0188D0  AED7               	btfss	4055,7,c	;volatile
 24944  0188D2  D002               	goto	l1380
 24945                           
 24946                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 24947  0188D4  0E07               	movlw	7
 24948  0188D6  D019               	goto	L15
 24949  0188D8                     l1380:
 24950                           
 24951                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 24952  0188D8  ACD7               	btfss	4055,6,c	;volatile
 24953  0188DA  D002               	goto	l1382
 24954                           
 24955                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 24956  0188DC  0E08               	movlw	8
 24957  0188DE  D015               	goto	L15
 24958  0188E0                     l1382:
 24959                           
 24960                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 24961  0188E0  BAD7               	btfsc	4055,5,c	;volatile
 24962  0188E2  D002               	goto	l1384
 24963                           
 24964                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 24965  0188E4  0E05               	movlw	5
 24966  0188E6  D011               	goto	L15
 24967  0188E8                     l1384:
 24968                           
 24969                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 24970  0188E8  B6D7               	btfsc	4055,3,c	;volatile
 24971  0188EA  D002               	goto	l1386
 24972                           
 24973                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 24974  0188EC  0E03               	movlw	3
 24975  0188EE  D00D               	goto	L15
 24976  0188F0                     l1386:
 24977                           
 24978                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 24979  0188F0  B4D7               	btfsc	4055,2,c	;volatile
 24980  0188F2  D002               	goto	l1388
 24981                           
 24982                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 24983  0188F4  0E06               	movlw	6
 24984  0188F6  D009               	goto	L15
 24985  0188F8                     l1388:
 24986                           
 24987                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 24988  0188F8  B2D7               	btfsc	4055,1,c	;volatile
 24989  0188FA  D002               	goto	l1390
 24990                           
 24991                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 24992  0188FC  0E01               	movlw	1
 24993  0188FE  D005               	goto	L15
 24994  018900                     l1390:
 24995                           
 24996                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 24997  018900  B0D7               	btfsc	4055,0,c	;volatile
 24998  018902  D002               	goto	l1392
 24999                           
 25000                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 25001  018904  0E02               	movlw	2
 25002  018906  D001               	goto	L15
 25003  018908                     l1392:
 25004                           
 25005                           ;cause_of_reset.c: 60: else {
 25006                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 25007                           
 25008                           ; BSR set to: 1
 25009  018908  0E00               	movlw	0
 25010  01890A                     L15:
 25011  01890A  0101               	movlb	1	; () banked
 25012  01890C  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 25013                           
 25014                           ; BSR set to: 1
 25015                           ;cause_of_reset.c: 64: }
 25016                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 25017                           
 25018                           ; BSR set to: 1
 25019                           
 25020                           ; BSR set to: 1
 25021                           
 25022                           ; BSR set to: 1
 25023                           
 25024                           ; BSR set to: 1
 25025                           
 25026                           ; BSR set to: 1
 25027                           
 25028                           ; BSR set to: 1
 25029                           
 25030                           ; BSR set to: 1
 25031  01890E  9ED7               	bcf	4055,7,c	;volatile
 25032                           
 25033                           ; BSR set to: 1
 25034                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 25035  018910  9CD7               	bcf	4055,6,c	;volatile
 25036                           
 25037                           ; BSR set to: 1
 25038                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 25039  018912  8AD7               	bsf	4055,5,c	;volatile
 25040                           
 25041                           ; BSR set to: 1
 25042                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 25043  018914  88D7               	bsf	4055,4,c	;volatile
 25044                           
 25045                           ; BSR set to: 1
 25046                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 25047  018916  86D7               	bsf	4055,3,c	;volatile
 25048                           
 25049                           ; BSR set to: 1
 25050                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 25051  018918  84D7               	bsf	4055,2,c	;volatile
 25052                           
 25053                           ; BSR set to: 1
 25054                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 25055  01891A  82D7               	bsf	4055,1,c	;volatile
 25056                           
 25057                           ; BSR set to: 1
 25058                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 25059  01891C  80D7               	bsf	4055,0,c	;volatile
 25060                           
 25061                           ;cause_of_reset.c: 76: return return_reset_cause;
 25062  01891E  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 25063  018920  0012               	return	
 25064  018922                     __end_of_getCauseOfReset:
 25065                           	opt stack 0
 25066                           tblptru	equ	0xFF8
 25067                           tblptrh	equ	0xFF7
 25068                           tblptrl	equ	0xFF6
 25069                           tablat	equ	0xFF5
 25070                           prodh	equ	0xFF4
 25071                           prodl	equ	0xFF3
 25072                           intcon	equ	0xFF2
 25073                           indf0	equ	0xFEF
 25074                           postinc0	equ	0xFEE
 25075                           fsr0h	equ	0xFEA
 25076                           fsr0l	equ	0xFE9
 25077                           wreg	equ	0xFE8
 25078                           indf1	equ	0xFE7
 25079                           postdec1	equ	0xFE5
 25080                           plusw1	equ	0xFE3
 25081                           fsr1h	equ	0xFE2
 25082                           fsr1l	equ	0xFE1
 25083                           indf2	equ	0xFDF
 25084                           postinc2	equ	0xFDE
 25085                           postdec2	equ	0xFDD
 25086                           plusw2	equ	0xFDB
 25087                           fsr2h	equ	0xFDA
 25088                           fsr2l	equ	0xFD9
 25089                           status	equ	0xFD8
 25090                           
 25091 ;; *************** function _SYSTEM_Initialize *****************
 25092 ;; Defined at:
 25093 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25094 ;; Parameters:    Size  Location     Type
 25095 ;;		None
 25096 ;; Auto vars:     Size  Location     Type
 25097 ;;		None
 25098 ;; Return value:  Size  Location     Type
 25099 ;;                  1    wreg      void 
 25100 ;; Registers used:
 25101 ;;		wreg, status,2, status,0, cstack
 25102 ;; Tracked objects:
 25103 ;;		On entry : 0/0
 25104 ;;		On exit  : 0/0
 25105 ;;		Unchanged: 0/0
 25106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25111 ;;Total ram usage:        0 bytes
 25112 ;; Hardware stack levels used:    1
 25113 ;; Hardware stack levels required when called:   15
 25114 ;; This function calls:
 25115 ;;		_ADCC_Initialize
 25116 ;;		_EUSART2_Initialize
 25117 ;;		_FVR_Initialize
 25118 ;;		_HLVD_Initialize
 25119 ;;		_INTERRUPT_Initialize
 25120 ;;		_OSCILLATOR_Initialize
 25121 ;;		_PIN_MANAGER_Initialize
 25122 ;;		_PMD_Initialize
 25123 ;;		_TMR5_Initialize
 25124 ;;		_TMR6_Initialize
 25125 ;;		_TMR7_Initialize
 25126 ;; This function is called by:
 25127 ;;		_main
 25128 ;; This function uses a non-reentrant model
 25129 ;;
 25130                           
 25131                           	psect	text55
 25132  018F2E                     __ptext55:
 25133                           	opt stack 0
 25134  018F2E                     _SYSTEM_Initialize:
 25135                           	opt stack 15
 25136                           
 25137                           ;mcc.c: 52: INTERRUPT_Initialize();
 25138                           
 25139                           ; BSR set to: 1
 25140                           ;incstack = 0
 25141  018F2E  ECD5  F0C8         	call	_INTERRUPT_Initialize	;wreg free
 25142                           
 25143                           ;mcc.c: 53: PMD_Initialize();
 25144  018F32  EC91  F0C8         	call	_PMD_Initialize	;wreg free
 25145                           
 25146                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 25147  018F36  EC48  F0BF         	call	_PIN_MANAGER_Initialize	;wreg free
 25148                           
 25149                           ;mcc.c: 55: OSCILLATOR_Initialize();
 25150  018F3A  EC9F  F0C8         	call	_OSCILLATOR_Initialize	;wreg free
 25151                           
 25152                           ;mcc.c: 56: HLVD_Initialize();
 25153  018F3E  EC1D  F0C9         	call	_HLVD_Initialize	;wreg free
 25154                           
 25155                           ;mcc.c: 57: FVR_Initialize();
 25156  018F42  EC68  F0C9         	call	_FVR_Initialize	;wreg free
 25157                           
 25158                           ;mcc.c: 58: TMR7_Initialize();
 25159  018F46  ECE1  F0C4         	call	_TMR7_Initialize	;wreg free
 25160                           
 25161                           ;mcc.c: 59: TMR6_Initialize();
 25162  018F4A  EC4E  F0C7         	call	_TMR6_Initialize	;wreg free
 25163                           
 25164                           ;mcc.c: 60: ADCC_Initialize();
 25165  018F4E  ECE3  F0C3         	call	_ADCC_Initialize	;wreg free
 25166                           
 25167                           ;mcc.c: 61: TMR5_Initialize();
 25168  018F52  EC54  F0C5         	call	_TMR5_Initialize	;wreg free
 25169                           
 25170                           ;mcc.c: 62: EUSART2_Initialize();
 25171  018F56  ECE3  F0C2         	call	_EUSART2_Initialize	;wreg free
 25172  018F5A  0012               	return		;funcret
 25173  018F5C                     __end_of_SYSTEM_Initialize:
 25174                           	opt stack 0
 25175                           tblptru	equ	0xFF8
 25176                           tblptrh	equ	0xFF7
 25177                           tblptrl	equ	0xFF6
 25178                           tablat	equ	0xFF5
 25179                           prodh	equ	0xFF4
 25180                           prodl	equ	0xFF3
 25181                           intcon	equ	0xFF2
 25182                           indf0	equ	0xFEF
 25183                           postinc0	equ	0xFEE
 25184                           fsr0h	equ	0xFEA
 25185                           fsr0l	equ	0xFE9
 25186                           wreg	equ	0xFE8
 25187                           indf1	equ	0xFE7
 25188                           postdec1	equ	0xFE5
 25189                           plusw1	equ	0xFE3
 25190                           fsr1h	equ	0xFE2
 25191                           fsr1l	equ	0xFE1
 25192                           indf2	equ	0xFDF
 25193                           postinc2	equ	0xFDE
 25194                           postdec2	equ	0xFDD
 25195                           plusw2	equ	0xFDB
 25196                           fsr2h	equ	0xFDA
 25197                           fsr2l	equ	0xFD9
 25198                           status	equ	0xFD8
 25199                           
 25200 ;; *************** function _TMR7_Initialize *****************
 25201 ;; Defined at:
 25202 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 25203 ;; Parameters:    Size  Location     Type
 25204 ;;		None
 25205 ;; Auto vars:     Size  Location     Type
 25206 ;;		None
 25207 ;; Return value:  Size  Location     Type
 25208 ;;                  1    wreg      void 
 25209 ;; Registers used:
 25210 ;;		wreg, status,2, status,0, cstack
 25211 ;; Tracked objects:
 25212 ;;		On entry : 0/0
 25213 ;;		On exit  : 0/0
 25214 ;;		Unchanged: 0/0
 25215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25218 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25219 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25220 ;;Total ram usage:        2 bytes
 25221 ;; Hardware stack levels used:    1
 25222 ;; Hardware stack levels required when called:   14
 25223 ;; This function calls:
 25224 ;;		_TMR7_SetInterruptHandler
 25225 ;; This function is called by:
 25226 ;;		_SYSTEM_Initialize
 25227 ;; This function uses a non-reentrant model
 25228 ;;
 25229                           
 25230                           	psect	text56
 25231  0189C2                     __ptext56:
 25232                           	opt stack 0
 25233  0189C2                     _TMR7_Initialize:
 25234                           	opt stack 15
 25235                           
 25236                           ;tmr7.c: 69: T7GCON = 0x00;
 25237                           
 25238                           ;incstack = 0
 25239  0189C2  0E00               	movlw	0
 25240  0189C4  010F               	movlb	15	; () banked
 25241  0189C6  6F31               	movwf	49,b	;volatile
 25242                           
 25243                           ;tmr7.c: 72: T7GATE = 0x00;
 25244  0189C8  0E00               	movlw	0
 25245  0189CA  6F32               	movwf	50,b	;volatile
 25246                           
 25247                           ;tmr7.c: 75: T7CLK = 0x03;
 25248  0189CC  0E03               	movlw	3
 25249  0189CE  6F33               	movwf	51,b	;volatile
 25250                           
 25251                           ;tmr7.c: 78: TMR7H = 0xEC;
 25252  0189D0  0EEC               	movlw	236
 25253  0189D2  6F2F               	movwf	47,b	;volatile
 25254                           
 25255                           ;tmr7.c: 81: TMR7L = 0x78;
 25256  0189D4  0E78               	movlw	120
 25257  0189D6  6F2E               	movwf	46,b	;volatile
 25258                           
 25259                           ; BSR set to: 15
 25260                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 25261  0189D8  512E               	movf	46,w,b	;volatile
 25262  0189DA  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 25263  0189DE  0101               	movlb	1	; () banked
 25264  0189E0  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 25265  0189E2  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 25266  0189E6  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 25267  0189E8  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 25268  0189EA  6FDD               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 25269  0189EC  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 25270  0189EE  6FDE               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 25271                           
 25272                           ; BSR set to: 1
 25273                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 25274  0189F0  010E               	movlb	14	; () banked
 25275  0189F2  9D38               	bcf	56,6,b	;volatile
 25276                           
 25277                           ; BSR set to: 14
 25278                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 25279  0189F4  8D2E               	bsf	46,6,b	;volatile
 25280                           
 25281                           ; BSR set to: 14
 25282                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 25283  0189F6  0E04               	movlw	low _TMR7_DefaultInterruptHandler
 25284  0189F8  0101               	movlb	1	; () banked
 25285  0189FA  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 25286  0189FC  0E93               	movlw	high _TMR7_DefaultInterruptHandler
 25287  0189FE  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 25288  018A00  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 25289  018A02  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 25290  018A04  EC2C  F0C9         	call	_TMR7_SetInterruptHandler	;wreg free
 25291                           
 25292                           ;tmr7.c: 96: T7CON = 0x31;
 25293  018A08  0E31               	movlw	49
 25294  018A0A  010F               	movlb	15	; () banked
 25295  018A0C  6F30               	movwf	48,b	;volatile
 25296                           
 25297                           ; BSR set to: 15
 25298  018A0E  0012               	return		;funcret
 25299  018A10                     __end_of_TMR7_Initialize:
 25300                           	opt stack 0
 25301                           tblptru	equ	0xFF8
 25302                           tblptrh	equ	0xFF7
 25303                           tblptrl	equ	0xFF6
 25304                           tablat	equ	0xFF5
 25305                           prodh	equ	0xFF4
 25306                           prodl	equ	0xFF3
 25307                           intcon	equ	0xFF2
 25308                           indf0	equ	0xFEF
 25309                           postinc0	equ	0xFEE
 25310                           fsr0h	equ	0xFEA
 25311                           fsr0l	equ	0xFE9
 25312                           wreg	equ	0xFE8
 25313                           indf1	equ	0xFE7
 25314                           postdec1	equ	0xFE5
 25315                           plusw1	equ	0xFE3
 25316                           fsr1h	equ	0xFE2
 25317                           fsr1l	equ	0xFE1
 25318                           indf2	equ	0xFDF
 25319                           postinc2	equ	0xFDE
 25320                           postdec2	equ	0xFDD
 25321                           plusw2	equ	0xFDB
 25322                           fsr2h	equ	0xFDA
 25323                           fsr2l	equ	0xFD9
 25324                           status	equ	0xFD8
 25325                           
 25326 ;; *************** function _TMR7_SetInterruptHandler *****************
 25327 ;; Defined at:
 25328 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 25329 ;; Parameters:    Size  Location     Type
 25330 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 25331 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 25332 ;; Auto vars:     Size  Location     Type
 25333 ;;		None
 25334 ;; Return value:  Size  Location     Type
 25335 ;;                  1    wreg      void 
 25336 ;; Registers used:
 25337 ;;		wreg, status,2, status,0
 25338 ;; Tracked objects:
 25339 ;;		On entry : 0/0
 25340 ;;		On exit  : 0/0
 25341 ;;		Unchanged: 0/0
 25342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25343 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25346 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25347 ;;Total ram usage:        3 bytes
 25348 ;; Hardware stack levels used:    1
 25349 ;; Hardware stack levels required when called:   13
 25350 ;; This function calls:
 25351 ;;		Nothing
 25352 ;; This function is called by:
 25353 ;;		_TMR7_Initialize
 25354 ;;		_main
 25355 ;; This function uses a non-reentrant model
 25356 ;;
 25357                           
 25358                           	psect	text57
 25359  019258                     __ptext57:
 25360                           	opt stack 0
 25361  019258                     _TMR7_SetInterruptHandler:
 25362                           	opt stack 17
 25363                           
 25364                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 25365                           
 25366                           ; BSR set to: 15
 25367                           ;incstack = 0
 25368  019258  C117  F22B         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 25369  01925C  C118  F22C         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 25370  019260  C119  F22D         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 25371  019264  0012               	return		;funcret
 25372  019266                     __end_of_TMR7_SetInterruptHandler:
 25373                           	opt stack 0
 25374                           tblptru	equ	0xFF8
 25375                           tblptrh	equ	0xFF7
 25376                           tblptrl	equ	0xFF6
 25377                           tablat	equ	0xFF5
 25378                           prodh	equ	0xFF4
 25379                           prodl	equ	0xFF3
 25380                           intcon	equ	0xFF2
 25381                           indf0	equ	0xFEF
 25382                           postinc0	equ	0xFEE
 25383                           fsr0h	equ	0xFEA
 25384                           fsr0l	equ	0xFE9
 25385                           wreg	equ	0xFE8
 25386                           indf1	equ	0xFE7
 25387                           postdec1	equ	0xFE5
 25388                           plusw1	equ	0xFE3
 25389                           fsr1h	equ	0xFE2
 25390                           fsr1l	equ	0xFE1
 25391                           indf2	equ	0xFDF
 25392                           postinc2	equ	0xFDE
 25393                           postdec2	equ	0xFDD
 25394                           plusw2	equ	0xFDB
 25395                           fsr2h	equ	0xFDA
 25396                           fsr2l	equ	0xFD9
 25397                           status	equ	0xFD8
 25398                           
 25399 ;; *************** function _TMR6_Initialize *****************
 25400 ;; Defined at:
 25401 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 25402 ;; Parameters:    Size  Location     Type
 25403 ;;		None
 25404 ;; Auto vars:     Size  Location     Type
 25405 ;;		None
 25406 ;; Return value:  Size  Location     Type
 25407 ;;                  1    wreg      void 
 25408 ;; Registers used:
 25409 ;;		wreg, status,2, status,0, cstack
 25410 ;; Tracked objects:
 25411 ;;		On entry : 0/0
 25412 ;;		On exit  : 0/0
 25413 ;;		Unchanged: 0/0
 25414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25419 ;;Total ram usage:        0 bytes
 25420 ;; Hardware stack levels used:    1
 25421 ;; Hardware stack levels required when called:   14
 25422 ;; This function calls:
 25423 ;;		_TMR6_SetInterruptHandler
 25424 ;; This function is called by:
 25425 ;;		_SYSTEM_Initialize
 25426 ;; This function uses a non-reentrant model
 25427 ;;
 25428                           
 25429                           	psect	text58
 25430  018E9C                     __ptext58:
 25431                           	opt stack 0
 25432  018E9C                     _TMR6_Initialize:
 25433                           	opt stack 15
 25434                           
 25435                           ;tmr6.c: 69: T6CLKCON = 0x04;
 25436                           
 25437                           ;incstack = 0
 25438  018E9C  0E04               	movlw	4
 25439  018E9E  6EB3               	movwf	4019,c	;volatile
 25440                           
 25441                           ;tmr6.c: 72: T6HLT = 0x20;
 25442  018EA0  0E20               	movlw	32
 25443  018EA2  6EB2               	movwf	4018,c	;volatile
 25444                           
 25445                           ;tmr6.c: 75: T6RST = 0x00;
 25446  018EA4  0E00               	movlw	0
 25447  018EA6  6EB4               	movwf	4020,c	;volatile
 25448                           
 25449                           ;tmr6.c: 78: T6PR = 0xF1;
 25450  018EA8  0EF1               	movlw	241
 25451  018EAA  6EB0               	movwf	4016,c	;volatile
 25452                           
 25453                           ;tmr6.c: 81: T6TMR = 0x00;
 25454  018EAC  0E00               	movlw	0
 25455  018EAE  6EAF               	movwf	4015,c	;volatile
 25456                           
 25457                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 25458  018EB0  010E               	movlb	14	; () banked
 25459  018EB2  9B38               	bcf	56,5,b	;volatile
 25460                           
 25461                           ; BSR set to: 14
 25462                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 25463  018EB4  8B2E               	bsf	46,5,b	;volatile
 25464                           
 25465                           ; BSR set to: 14
 25466                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 25467  018EB6  0E06               	movlw	low _TMR6_DefaultInterruptHandler
 25468  018EB8  0101               	movlb	1	; () banked
 25469  018EBA  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 25470  018EBC  0E93               	movlw	high _TMR6_DefaultInterruptHandler
 25471  018EBE  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 25472  018EC0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 25473  018EC2  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 25474  018EC4  EC33  F0C9         	call	_TMR6_SetInterruptHandler	;wreg free
 25475                           
 25476                           ;tmr6.c: 93: T6CON = 0xBF;
 25477  018EC8  0EBF               	movlw	191
 25478  018ECA  6EB1               	movwf	4017,c	;volatile
 25479  018ECC  0012               	return		;funcret
 25480  018ECE                     __end_of_TMR6_Initialize:
 25481                           	opt stack 0
 25482                           tblptru	equ	0xFF8
 25483                           tblptrh	equ	0xFF7
 25484                           tblptrl	equ	0xFF6
 25485                           tablat	equ	0xFF5
 25486                           prodh	equ	0xFF4
 25487                           prodl	equ	0xFF3
 25488                           intcon	equ	0xFF2
 25489                           indf0	equ	0xFEF
 25490                           postinc0	equ	0xFEE
 25491                           fsr0h	equ	0xFEA
 25492                           fsr0l	equ	0xFE9
 25493                           wreg	equ	0xFE8
 25494                           indf1	equ	0xFE7
 25495                           postdec1	equ	0xFE5
 25496                           plusw1	equ	0xFE3
 25497                           fsr1h	equ	0xFE2
 25498                           fsr1l	equ	0xFE1
 25499                           indf2	equ	0xFDF
 25500                           postinc2	equ	0xFDE
 25501                           postdec2	equ	0xFDD
 25502                           plusw2	equ	0xFDB
 25503                           fsr2h	equ	0xFDA
 25504                           fsr2l	equ	0xFD9
 25505                           status	equ	0xFD8
 25506                           
 25507 ;; *************** function _TMR6_SetInterruptHandler *****************
 25508 ;; Defined at:
 25509 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 25510 ;; Parameters:    Size  Location     Type
 25511 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 25512 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 25513 ;; Auto vars:     Size  Location     Type
 25514 ;;		None
 25515 ;; Return value:  Size  Location     Type
 25516 ;;                  1    wreg      void 
 25517 ;; Registers used:
 25518 ;;		wreg, status,2, status,0
 25519 ;; Tracked objects:
 25520 ;;		On entry : 0/0
 25521 ;;		On exit  : 0/0
 25522 ;;		Unchanged: 0/0
 25523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25524 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25527 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25528 ;;Total ram usage:        3 bytes
 25529 ;; Hardware stack levels used:    1
 25530 ;; Hardware stack levels required when called:   13
 25531 ;; This function calls:
 25532 ;;		Nothing
 25533 ;; This function is called by:
 25534 ;;		_TMR6_Initialize
 25535 ;;		_main
 25536 ;; This function uses a non-reentrant model
 25537 ;;
 25538                           
 25539                           	psect	text59
 25540  019266                     __ptext59:
 25541                           	opt stack 0
 25542  019266                     _TMR6_SetInterruptHandler:
 25543                           	opt stack 17
 25544                           
 25545                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 25546                           
 25547                           ;incstack = 0
 25548  019266  C117  F231         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 25549  01926A  C118  F232         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 25550  01926E  C119  F233         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 25551  019272  0012               	return		;funcret
 25552  019274                     __end_of_TMR6_SetInterruptHandler:
 25553                           	opt stack 0
 25554                           tblptru	equ	0xFF8
 25555                           tblptrh	equ	0xFF7
 25556                           tblptrl	equ	0xFF6
 25557                           tablat	equ	0xFF5
 25558                           prodh	equ	0xFF4
 25559                           prodl	equ	0xFF3
 25560                           intcon	equ	0xFF2
 25561                           indf0	equ	0xFEF
 25562                           postinc0	equ	0xFEE
 25563                           fsr0h	equ	0xFEA
 25564                           fsr0l	equ	0xFE9
 25565                           wreg	equ	0xFE8
 25566                           indf1	equ	0xFE7
 25567                           postdec1	equ	0xFE5
 25568                           plusw1	equ	0xFE3
 25569                           fsr1h	equ	0xFE2
 25570                           fsr1l	equ	0xFE1
 25571                           indf2	equ	0xFDF
 25572                           postinc2	equ	0xFDE
 25573                           postdec2	equ	0xFDD
 25574                           plusw2	equ	0xFDB
 25575                           fsr2h	equ	0xFDA
 25576                           fsr2l	equ	0xFD9
 25577                           status	equ	0xFD8
 25578                           
 25579 ;; *************** function _TMR5_Initialize *****************
 25580 ;; Defined at:
 25581 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 25582 ;; Parameters:    Size  Location     Type
 25583 ;;		None
 25584 ;; Auto vars:     Size  Location     Type
 25585 ;;		None
 25586 ;; Return value:  Size  Location     Type
 25587 ;;                  1    wreg      void 
 25588 ;; Registers used:
 25589 ;;		wreg, status,2, status,0, cstack
 25590 ;; Tracked objects:
 25591 ;;		On entry : 0/0
 25592 ;;		On exit  : 0/0
 25593 ;;		Unchanged: 0/0
 25594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25597 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25598 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25599 ;;Total ram usage:        2 bytes
 25600 ;; Hardware stack levels used:    1
 25601 ;; Hardware stack levels required when called:   14
 25602 ;; This function calls:
 25603 ;;		_TMR5_SetInterruptHandler
 25604 ;; This function is called by:
 25605 ;;		_SYSTEM_Initialize
 25606 ;; This function uses a non-reentrant model
 25607 ;;
 25608                           
 25609                           	psect	text60
 25610  018AA8                     __ptext60:
 25611                           	opt stack 0
 25612  018AA8                     _TMR5_Initialize:
 25613                           	opt stack 15
 25614                           
 25615                           ;tmr5.c: 69: T5GCON = 0x00;
 25616                           
 25617                           ;incstack = 0
 25618  018AA8  0E00               	movlw	0
 25619  018AAA  6EC4               	movwf	4036,c	;volatile
 25620                           
 25621                           ;tmr5.c: 72: T5GATE = 0x00;
 25622  018AAC  0E00               	movlw	0
 25623  018AAE  6EC5               	movwf	4037,c	;volatile
 25624                           
 25625                           ;tmr5.c: 75: T5CLK = 0x01;
 25626  018AB0  0E01               	movlw	1
 25627  018AB2  6EC6               	movwf	4038,c	;volatile
 25628                           
 25629                           ;tmr5.c: 78: TMR5H = 0x00;
 25630  018AB4  0E00               	movlw	0
 25631  018AB6  6EC2               	movwf	4034,c	;volatile
 25632                           
 25633                           ;tmr5.c: 81: TMR5L = 0x00;
 25634  018AB8  0E00               	movlw	0
 25635  018ABA  6EC1               	movwf	4033,c	;volatile
 25636                           
 25637                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 25638  018ABC  50C1               	movf	4033,w,c	;volatile
 25639  018ABE  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 25640  018AC2  0101               	movlb	1	; () banked
 25641  018AC4  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 25642  018AC6  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 25643  018ACA  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 25644  018ACC  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 25645  018ACE  6FDB               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 25646  018AD0  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 25647  018AD2  6FDC               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 25648                           
 25649                           ; BSR set to: 1
 25650                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 25651  018AD4  010E               	movlb	14	; () banked
 25652  018AD6  9938               	bcf	56,4,b	;volatile
 25653                           
 25654                           ; BSR set to: 14
 25655                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 25656  018AD8  892E               	bsf	46,4,b	;volatile
 25657                           
 25658                           ; BSR set to: 14
 25659                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 25660  018ADA  0E08               	movlw	low _TMR5_DefaultInterruptHandler
 25661  018ADC  0101               	movlb	1	; () banked
 25662  018ADE  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 25663  018AE0  0E93               	movlw	high _TMR5_DefaultInterruptHandler
 25664  018AE2  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 25665  018AE4  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 25666  018AE6  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 25667  018AE8  EC3A  F0C9         	call	_TMR5_SetInterruptHandler	;wreg free
 25668                           
 25669                           ;tmr5.c: 96: T5CON = 0x13;
 25670  018AEC  0E13               	movlw	19
 25671  018AEE  6EC3               	movwf	4035,c	;volatile
 25672  018AF0  0012               	return		;funcret
 25673  018AF2                     __end_of_TMR5_Initialize:
 25674                           	opt stack 0
 25675                           tblptru	equ	0xFF8
 25676                           tblptrh	equ	0xFF7
 25677                           tblptrl	equ	0xFF6
 25678                           tablat	equ	0xFF5
 25679                           prodh	equ	0xFF4
 25680                           prodl	equ	0xFF3
 25681                           intcon	equ	0xFF2
 25682                           indf0	equ	0xFEF
 25683                           postinc0	equ	0xFEE
 25684                           fsr0h	equ	0xFEA
 25685                           fsr0l	equ	0xFE9
 25686                           wreg	equ	0xFE8
 25687                           indf1	equ	0xFE7
 25688                           postdec1	equ	0xFE5
 25689                           plusw1	equ	0xFE3
 25690                           fsr1h	equ	0xFE2
 25691                           fsr1l	equ	0xFE1
 25692                           indf2	equ	0xFDF
 25693                           postinc2	equ	0xFDE
 25694                           postdec2	equ	0xFDD
 25695                           plusw2	equ	0xFDB
 25696                           fsr2h	equ	0xFDA
 25697                           fsr2l	equ	0xFD9
 25698                           status	equ	0xFD8
 25699                           
 25700 ;; *************** function _TMR5_SetInterruptHandler *****************
 25701 ;; Defined at:
 25702 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 25703 ;; Parameters:    Size  Location     Type
 25704 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 25705 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 25706 ;; Auto vars:     Size  Location     Type
 25707 ;;		None
 25708 ;; Return value:  Size  Location     Type
 25709 ;;                  1    wreg      void 
 25710 ;; Registers used:
 25711 ;;		wreg, status,2, status,0
 25712 ;; Tracked objects:
 25713 ;;		On entry : 0/0
 25714 ;;		On exit  : 0/0
 25715 ;;		Unchanged: 0/0
 25716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25717 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25720 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25721 ;;Total ram usage:        3 bytes
 25722 ;; Hardware stack levels used:    1
 25723 ;; Hardware stack levels required when called:   13
 25724 ;; This function calls:
 25725 ;;		Nothing
 25726 ;; This function is called by:
 25727 ;;		_TMR5_Initialize
 25728 ;; This function uses a non-reentrant model
 25729 ;;
 25730                           
 25731                           	psect	text61
 25732  019274                     __ptext61:
 25733                           	opt stack 0
 25734  019274                     _TMR5_SetInterruptHandler:
 25735                           	opt stack 15
 25736                           
 25737                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 25738                           
 25739                           ;incstack = 0
 25740  019274  C117  F228         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 25741  019278  C118  F229         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 25742  01927C  C119  F22A         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 25743  019280  0012               	return		;funcret
 25744  019282                     __end_of_TMR5_SetInterruptHandler:
 25745                           	opt stack 0
 25746                           tblptru	equ	0xFF8
 25747                           tblptrh	equ	0xFF7
 25748                           tblptrl	equ	0xFF6
 25749                           tablat	equ	0xFF5
 25750                           prodh	equ	0xFF4
 25751                           prodl	equ	0xFF3
 25752                           intcon	equ	0xFF2
 25753                           indf0	equ	0xFEF
 25754                           postinc0	equ	0xFEE
 25755                           fsr0h	equ	0xFEA
 25756                           fsr0l	equ	0xFE9
 25757                           wreg	equ	0xFE8
 25758                           indf1	equ	0xFE7
 25759                           postdec1	equ	0xFE5
 25760                           plusw1	equ	0xFE3
 25761                           fsr1h	equ	0xFE2
 25762                           fsr1l	equ	0xFE1
 25763                           indf2	equ	0xFDF
 25764                           postinc2	equ	0xFDE
 25765                           postdec2	equ	0xFDD
 25766                           plusw2	equ	0xFDB
 25767                           fsr2h	equ	0xFDA
 25768                           fsr2l	equ	0xFD9
 25769                           status	equ	0xFD8
 25770                           
 25771 ;; *************** function _PMD_Initialize *****************
 25772 ;; Defined at:
 25773 ;;		line 83 in file "mcc_generated_files/mcc.c"
 25774 ;; Parameters:    Size  Location     Type
 25775 ;;		None
 25776 ;; Auto vars:     Size  Location     Type
 25777 ;;		None
 25778 ;; Return value:  Size  Location     Type
 25779 ;;                  1    wreg      void 
 25780 ;; Registers used:
 25781 ;;		wreg, status,2
 25782 ;; Tracked objects:
 25783 ;;		On entry : 0/0
 25784 ;;		On exit  : 0/0
 25785 ;;		Unchanged: 0/0
 25786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25791 ;;Total ram usage:        0 bytes
 25792 ;; Hardware stack levels used:    1
 25793 ;; Hardware stack levels required when called:   13
 25794 ;; This function calls:
 25795 ;;		Nothing
 25796 ;; This function is called by:
 25797 ;;		_SYSTEM_Initialize
 25798 ;; This function uses a non-reentrant model
 25799 ;;
 25800                           
 25801                           	psect	text62
 25802  019122                     __ptext62:
 25803                           	opt stack 0
 25804  019122                     _PMD_Initialize:
 25805                           	opt stack 16
 25806                           
 25807                           ;mcc.c: 86: PMD0 = 0x00;
 25808                           
 25809                           ;incstack = 0
 25810  019122  0E00               	movlw	0
 25811  019124  010E               	movlb	14	; () banked
 25812  019126  6F4C               	movwf	76,b	;volatile
 25813                           
 25814                           ;mcc.c: 88: PMD1 = 0x00;
 25815  019128  0E00               	movlw	0
 25816  01912A  6F4D               	movwf	77,b	;volatile
 25817                           
 25818                           ;mcc.c: 90: PMD2 = 0x00;
 25819  01912C  0E00               	movlw	0
 25820  01912E  6F4E               	movwf	78,b	;volatile
 25821                           
 25822                           ;mcc.c: 92: PMD3 = 0x00;
 25823  019130  0E00               	movlw	0
 25824  019132  6F4F               	movwf	79,b	;volatile
 25825                           
 25826                           ;mcc.c: 94: PMD4 = 0x00;
 25827  019134  0E00               	movlw	0
 25828  019136  6F50               	movwf	80,b	;volatile
 25829                           
 25830                           ;mcc.c: 96: PMD5 = 0x00;
 25831  019138  0E00               	movlw	0
 25832  01913A  6F51               	movwf	81,b	;volatile
 25833                           
 25834                           ; BSR set to: 14
 25835  01913C  0012               	return		;funcret
 25836  01913E                     __end_of_PMD_Initialize:
 25837                           	opt stack 0
 25838                           tblptru	equ	0xFF8
 25839                           tblptrh	equ	0xFF7
 25840                           tblptrl	equ	0xFF6
 25841                           tablat	equ	0xFF5
 25842                           prodh	equ	0xFF4
 25843                           prodl	equ	0xFF3
 25844                           intcon	equ	0xFF2
 25845                           indf0	equ	0xFEF
 25846                           postinc0	equ	0xFEE
 25847                           fsr0h	equ	0xFEA
 25848                           fsr0l	equ	0xFE9
 25849                           wreg	equ	0xFE8
 25850                           indf1	equ	0xFE7
 25851                           postdec1	equ	0xFE5
 25852                           plusw1	equ	0xFE3
 25853                           fsr1h	equ	0xFE2
 25854                           fsr1l	equ	0xFE1
 25855                           indf2	equ	0xFDF
 25856                           postinc2	equ	0xFDE
 25857                           postdec2	equ	0xFDD
 25858                           plusw2	equ	0xFDB
 25859                           fsr2h	equ	0xFDA
 25860                           fsr2l	equ	0xFD9
 25861                           status	equ	0xFD8
 25862                           
 25863 ;; *************** function _PIN_MANAGER_Initialize *****************
 25864 ;; Defined at:
 25865 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 25866 ;; Parameters:    Size  Location     Type
 25867 ;;		None
 25868 ;; Auto vars:     Size  Location     Type
 25869 ;;		None
 25870 ;; Return value:  Size  Location     Type
 25871 ;;                  1    wreg      void 
 25872 ;; Registers used:
 25873 ;;		wreg, status,2
 25874 ;; Tracked objects:
 25875 ;;		On entry : 0/0
 25876 ;;		On exit  : 0/0
 25877 ;;		Unchanged: 0/0
 25878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25883 ;;Total ram usage:        0 bytes
 25884 ;; Hardware stack levels used:    1
 25885 ;; Hardware stack levels required when called:   13
 25886 ;; This function calls:
 25887 ;;		Nothing
 25888 ;; This function is called by:
 25889 ;;		_SYSTEM_Initialize
 25890 ;; This function uses a non-reentrant model
 25891 ;;
 25892                           
 25893                           	psect	text63
 25894  017E90                     __ptext63:
 25895                           	opt stack 0
 25896  017E90                     _PIN_MANAGER_Initialize:
 25897                           	opt stack 16
 25898                           
 25899                           ;pin_manager.c: 62: LATE = 0x00;
 25900                           
 25901                           ; BSR set to: 14
 25902                           ;incstack = 0
 25903  017E90  0E00               	movlw	0
 25904  017E92  6E7D               	movwf	3965,c	;volatile
 25905                           
 25906                           ;pin_manager.c: 63: LATD = 0x00;
 25907  017E94  0E00               	movlw	0
 25908  017E96  6E7C               	movwf	3964,c	;volatile
 25909                           
 25910                           ;pin_manager.c: 64: LATA = 0x00;
 25911  017E98  0E00               	movlw	0
 25912  017E9A  6E79               	movwf	3961,c	;volatile
 25913                           
 25914                           ;pin_manager.c: 65: LATF = 0x00;
 25915  017E9C  0E00               	movlw	0
 25916  017E9E  6E7E               	movwf	3966,c	;volatile
 25917                           
 25918                           ;pin_manager.c: 66: LATB = 0x00;
 25919  017EA0  0E00               	movlw	0
 25920  017EA2  6E7A               	movwf	3962,c	;volatile
 25921                           
 25922                           ;pin_manager.c: 67: LATG = 0x00;
 25923  017EA4  0E00               	movlw	0
 25924  017EA6  6E7F               	movwf	3967,c	;volatile
 25925                           
 25926                           ;pin_manager.c: 68: LATC = 0x00;
 25927  017EA8  0E00               	movlw	0
 25928  017EAA  6E7B               	movwf	3963,c	;volatile
 25929                           
 25930                           ;pin_manager.c: 69: LATH = 0x00;
 25931  017EAC  0E00               	movlw	0
 25932  017EAE  6E80               	movwf	3968,c	;volatile
 25933                           
 25934                           ;pin_manager.c: 74: TRISE = 0xFF;
 25935  017EB0  6885               	setf	3973,c	;volatile
 25936                           
 25937                           ;pin_manager.c: 75: TRISF = 0xF0;
 25938  017EB2  0EF0               	movlw	240
 25939  017EB4  6E86               	movwf	3974,c	;volatile
 25940                           
 25941                           ;pin_manager.c: 76: TRISA = 0xFF;
 25942  017EB6  6881               	setf	3969,c	;volatile
 25943                           
 25944                           ;pin_manager.c: 77: TRISG = 0x5C;
 25945  017EB8  0E5C               	movlw	92
 25946  017EBA  6E87               	movwf	3975,c	;volatile
 25947                           
 25948                           ;pin_manager.c: 78: TRISB = 0xFF;
 25949  017EBC  6882               	setf	3970,c	;volatile
 25950                           
 25951                           ;pin_manager.c: 79: TRISH = 0x0F;
 25952  017EBE  0E0F               	movlw	15
 25953  017EC0  6E88               	movwf	3976,c	;volatile
 25954                           
 25955                           ;pin_manager.c: 80: TRISC = 0xFF;
 25956  017EC2  6883               	setf	3971,c	;volatile
 25957                           
 25958                           ;pin_manager.c: 81: TRISD = 0xFF;
 25959  017EC4  6884               	setf	3972,c	;volatile
 25960                           
 25961                           ;pin_manager.c: 86: ANSELD = 0xFF;
 25962  017EC6  010E               	movlb	14	; () banked
 25963  017EC8  69A7               	setf	167,b	;volatile
 25964                           
 25965                           ; BSR set to: 14
 25966                           ;pin_manager.c: 87: ANSELB = 0xFF;
 25967  017ECA  699A               	setf	154,b	;volatile
 25968                           
 25969                           ; BSR set to: 14
 25970                           ;pin_manager.c: 88: ANSELE = 0xFF;
 25971  017ECC  69AF               	setf	175,b	;volatile
 25972                           
 25973                           ;pin_manager.c: 89: ANSELG = 0x3C;
 25974  017ECE  0E3C               	movlw	60
 25975  017ED0  6FBC               	movwf	188,b	;volatile
 25976                           
 25977                           ;pin_manager.c: 90: ANSELF = 0xF0;
 25978  017ED2  0EF0               	movlw	240
 25979  017ED4  6FB4               	movwf	180,b	;volatile
 25980                           
 25981                           ; BSR set to: 14
 25982                           ;pin_manager.c: 91: ANSELA = 0xFF;
 25983  017ED6  6992               	setf	146,b	;volatile
 25984                           
 25985                           ;pin_manager.c: 96: WPUD = 0x00;
 25986  017ED8  0E00               	movlw	0
 25987  017EDA  6FA6               	movwf	166,b	;volatile
 25988                           
 25989                           ;pin_manager.c: 97: WPUF = 0x00;
 25990  017EDC  0E00               	movlw	0
 25991  017EDE  6FB3               	movwf	179,b	;volatile
 25992                           
 25993                           ;pin_manager.c: 98: WPUE = 0x00;
 25994  017EE0  0E00               	movlw	0
 25995  017EE2  6FAE               	movwf	174,b	;volatile
 25996                           
 25997                           ;pin_manager.c: 99: WPUB = 0x00;
 25998  017EE4  0E00               	movlw	0
 25999  017EE6  6F99               	movwf	153,b	;volatile
 26000                           
 26001                           ;pin_manager.c: 100: WPUG = 0x00;
 26002  017EE8  0E00               	movlw	0
 26003  017EEA  6FBB               	movwf	187,b	;volatile
 26004                           
 26005                           ;pin_manager.c: 101: WPUA = 0x00;
 26006  017EEC  0E00               	movlw	0
 26007  017EEE  6F91               	movwf	145,b	;volatile
 26008                           
 26009                           ;pin_manager.c: 102: WPUC = 0x00;
 26010  017EF0  0E00               	movlw	0
 26011  017EF2  6FA1               	movwf	161,b	;volatile
 26012                           
 26013                           ;pin_manager.c: 103: WPUH = 0x00;
 26014  017EF4  0E00               	movlw	0
 26015  017EF6  6FC0               	movwf	192,b	;volatile
 26016                           
 26017                           ;pin_manager.c: 108: ODCONE = 0x00;
 26018  017EF8  0E00               	movlw	0
 26019  017EFA  6FAD               	movwf	173,b	;volatile
 26020                           
 26021                           ;pin_manager.c: 109: ODCONF = 0x01;
 26022  017EFC  0E01               	movlw	1
 26023  017EFE  6FB2               	movwf	178,b	;volatile
 26024                           
 26025                           ;pin_manager.c: 110: ODCONA = 0x00;
 26026  017F00  0E00               	movlw	0
 26027  017F02  6F90               	movwf	144,b	;volatile
 26028                           
 26029                           ;pin_manager.c: 111: ODCONG = 0x00;
 26030  017F04  0E00               	movlw	0
 26031  017F06  6FBA               	movwf	186,b	;volatile
 26032                           
 26033                           ;pin_manager.c: 112: ODCONB = 0x00;
 26034  017F08  0E00               	movlw	0
 26035  017F0A  6F98               	movwf	152,b	;volatile
 26036                           
 26037                           ;pin_manager.c: 113: ODCONH = 0x00;
 26038  017F0C  0E00               	movlw	0
 26039  017F0E  6FBF               	movwf	191,b	;volatile
 26040                           
 26041                           ;pin_manager.c: 114: ODCONC = 0x00;
 26042  017F10  0E00               	movlw	0
 26043  017F12  6FA0               	movwf	160,b	;volatile
 26044                           
 26045                           ;pin_manager.c: 115: ODCOND = 0x00;
 26046  017F14  0E00               	movlw	0
 26047  017F16  6FA5               	movwf	165,b	;volatile
 26048                           
 26049                           ; BSR set to: 14
 26050                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 26051  017F18  698F               	setf	143,b	;volatile
 26052                           
 26053                           ; BSR set to: 14
 26054                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 26055  017F1A  6997               	setf	151,b	;volatile
 26056                           
 26057                           ; BSR set to: 14
 26058                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 26059  017F1C  699F               	setf	159,b	;volatile
 26060                           
 26061                           ; BSR set to: 14
 26062                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 26063  017F1E  69A4               	setf	164,b	;volatile
 26064                           
 26065                           ; BSR set to: 14
 26066                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 26067  017F20  69AC               	setf	172,b	;volatile
 26068                           
 26069                           ; BSR set to: 14
 26070                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 26071  017F22  69B1               	setf	177,b	;volatile
 26072                           
 26073                           ; BSR set to: 14
 26074                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 26075  017F24  69B9               	setf	185,b	;volatile
 26076                           
 26077                           ; BSR set to: 14
 26078                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 26079  017F26  69BE               	setf	190,b	;volatile
 26080                           
 26081                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 26082  017F28  0E0E               	movlw	14
 26083  017F2A  6F89               	movwf	137,b	;volatile
 26084                           
 26085                           ;pin_manager.c: 137: RX2PPS = 0x36;
 26086  017F2C  0E36               	movlw	54
 26087  017F2E  6F11               	movwf	17,b	;volatile
 26088                           
 26089                           ; BSR set to: 14
 26090  017F30  0012               	return		;funcret
 26091  017F32                     __end_of_PIN_MANAGER_Initialize:
 26092                           	opt stack 0
 26093                           tblptru	equ	0xFF8
 26094                           tblptrh	equ	0xFF7
 26095                           tblptrl	equ	0xFF6
 26096                           tablat	equ	0xFF5
 26097                           prodh	equ	0xFF4
 26098                           prodl	equ	0xFF3
 26099                           intcon	equ	0xFF2
 26100                           indf0	equ	0xFEF
 26101                           postinc0	equ	0xFEE
 26102                           fsr0h	equ	0xFEA
 26103                           fsr0l	equ	0xFE9
 26104                           wreg	equ	0xFE8
 26105                           indf1	equ	0xFE7
 26106                           postdec1	equ	0xFE5
 26107                           plusw1	equ	0xFE3
 26108                           fsr1h	equ	0xFE2
 26109                           fsr1l	equ	0xFE1
 26110                           indf2	equ	0xFDF
 26111                           postinc2	equ	0xFDE
 26112                           postdec2	equ	0xFDD
 26113                           plusw2	equ	0xFDB
 26114                           fsr2h	equ	0xFDA
 26115                           fsr2l	equ	0xFD9
 26116                           status	equ	0xFD8
 26117                           
 26118 ;; *************** function _OSCILLATOR_Initialize *****************
 26119 ;; Defined at:
 26120 ;;		line 65 in file "mcc_generated_files/mcc.c"
 26121 ;; Parameters:    Size  Location     Type
 26122 ;;		None
 26123 ;; Auto vars:     Size  Location     Type
 26124 ;;		None
 26125 ;; Return value:  Size  Location     Type
 26126 ;;                  1    wreg      void 
 26127 ;; Registers used:
 26128 ;;		wreg, status,2
 26129 ;; Tracked objects:
 26130 ;;		On entry : 0/0
 26131 ;;		On exit  : 0/0
 26132 ;;		Unchanged: 0/0
 26133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26138 ;;Total ram usage:        0 bytes
 26139 ;; Hardware stack levels used:    1
 26140 ;; Hardware stack levels required when called:   13
 26141 ;; This function calls:
 26142 ;;		Nothing
 26143 ;; This function is called by:
 26144 ;;		_SYSTEM_Initialize
 26145 ;; This function uses a non-reentrant model
 26146 ;;
 26147                           
 26148                           	psect	text64
 26149  01913E                     __ptext64:
 26150                           	opt stack 0
 26151  01913E                     _OSCILLATOR_Initialize:
 26152                           	opt stack 16
 26153                           
 26154                           ;mcc.c: 68: OSCCON1 = 0x20;
 26155                           
 26156                           ; BSR set to: 14
 26157                           ;incstack = 0
 26158  01913E  0E20               	movlw	32
 26159  019140  010E               	movlb	14	; () banked
 26160  019142  6F43               	movwf	67,b	;volatile
 26161                           
 26162                           ;mcc.c: 70: OSCCON3 = 0x00;
 26163  019144  0E00               	movlw	0
 26164  019146  6F45               	movwf	69,b	;volatile
 26165                           
 26166                           ;mcc.c: 72: OSCEN = 0x00;
 26167  019148  0E00               	movlw	0
 26168  01914A  6F47               	movwf	71,b	;volatile
 26169                           
 26170                           ;mcc.c: 74: OSCFRQ = 0x02;
 26171  01914C  0E02               	movlw	2
 26172  01914E  6F49               	movwf	73,b	;volatile
 26173                           
 26174                           ;mcc.c: 76: OSCTUNE = 0x00;
 26175  019150  0E00               	movlw	0
 26176  019152  6F48               	movwf	72,b	;volatile
 26177  019154                     
 26178                           ; BSR set to: 14
 26179                           
 26180                           ; BSR set to: 14
 26181                           ;mcc.c: 79: {
 26182  019154  B146               	btfsc	70,0,b	;volatile
 26183  019156  0012               	return	
 26184  019158  D7FD               	goto	l57
 26185  01915A                     __end_of_OSCILLATOR_Initialize:
 26186                           	opt stack 0
 26187                           tblptru	equ	0xFF8
 26188                           tblptrh	equ	0xFF7
 26189                           tblptrl	equ	0xFF6
 26190                           tablat	equ	0xFF5
 26191                           prodh	equ	0xFF4
 26192                           prodl	equ	0xFF3
 26193                           intcon	equ	0xFF2
 26194                           indf0	equ	0xFEF
 26195                           postinc0	equ	0xFEE
 26196                           fsr0h	equ	0xFEA
 26197                           fsr0l	equ	0xFE9
 26198                           wreg	equ	0xFE8
 26199                           indf1	equ	0xFE7
 26200                           postdec1	equ	0xFE5
 26201                           plusw1	equ	0xFE3
 26202                           fsr1h	equ	0xFE2
 26203                           fsr1l	equ	0xFE1
 26204                           indf2	equ	0xFDF
 26205                           postinc2	equ	0xFDE
 26206                           postdec2	equ	0xFDD
 26207                           plusw2	equ	0xFDB
 26208                           fsr2h	equ	0xFDA
 26209                           fsr2l	equ	0xFD9
 26210                           status	equ	0xFD8
 26211                           
 26212 ;; *************** function _INTERRUPT_Initialize *****************
 26213 ;; Defined at:
 26214 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26215 ;; Parameters:    Size  Location     Type
 26216 ;;		None
 26217 ;; Auto vars:     Size  Location     Type
 26218 ;;		None
 26219 ;; Return value:  Size  Location     Type
 26220 ;;                  1    wreg      void 
 26221 ;; Registers used:
 26222 ;;		None
 26223 ;; Tracked objects:
 26224 ;;		On entry : 0/0
 26225 ;;		On exit  : 0/0
 26226 ;;		Unchanged: 0/0
 26227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26232 ;;Total ram usage:        0 bytes
 26233 ;; Hardware stack levels used:    1
 26234 ;; Hardware stack levels required when called:   13
 26235 ;; This function calls:
 26236 ;;		Nothing
 26237 ;; This function is called by:
 26238 ;;		_SYSTEM_Initialize
 26239 ;; This function uses a non-reentrant model
 26240 ;;
 26241                           
 26242                           	psect	text65
 26243  0191AA                     __ptext65:
 26244                           	opt stack 0
 26245  0191AA                     _INTERRUPT_Initialize:
 26246                           	opt stack 16
 26247                           
 26248                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 26249                           
 26250                           ; BSR set to: 14
 26251                           ;incstack = 0
 26252  0191AA  8AF2               	bsf	intcon,5,c	;volatile
 26253                           
 26254                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 26255  0191AC  010E               	movlb	14	; () banked
 26256  0191AE  8F22               	bsf	34,7,b	;volatile
 26257                           
 26258                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 26259  0191B0  8924               	bsf	36,4,b	;volatile
 26260                           
 26261                           ;interrupt_manager.c: 66: IPR1bits.ADTIP = 1;
 26262  0191B2  8320               	bsf	32,1,b	;volatile
 26263                           
 26264                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 26265  0191B4  9B24               	bcf	36,5,b	;volatile
 26266                           
 26267                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 26268  0191B6  9D22               	bcf	34,6,b	;volatile
 26269                           
 26270                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 26271  0191B8  9D24               	bcf	36,6,b	;volatile
 26272                           
 26273                           ;interrupt_manager.c: 79: IPR2bits.HLVDIP = 0;
 26274  0191BA  9F21               	bcf	33,7,b	;volatile
 26275                           
 26276                           ; BSR set to: 14
 26277  0191BC  0012               	return		;funcret
 26278  0191BE                     __end_of_INTERRUPT_Initialize:
 26279                           	opt stack 0
 26280                           tblptru	equ	0xFF8
 26281                           tblptrh	equ	0xFF7
 26282                           tblptrl	equ	0xFF6
 26283                           tablat	equ	0xFF5
 26284                           prodh	equ	0xFF4
 26285                           prodl	equ	0xFF3
 26286                           intcon	equ	0xFF2
 26287                           indf0	equ	0xFEF
 26288                           postinc0	equ	0xFEE
 26289                           fsr0h	equ	0xFEA
 26290                           fsr0l	equ	0xFE9
 26291                           wreg	equ	0xFE8
 26292                           indf1	equ	0xFE7
 26293                           postdec1	equ	0xFE5
 26294                           plusw1	equ	0xFE3
 26295                           fsr1h	equ	0xFE2
 26296                           fsr1l	equ	0xFE1
 26297                           indf2	equ	0xFDF
 26298                           postinc2	equ	0xFDE
 26299                           postdec2	equ	0xFDD
 26300                           plusw2	equ	0xFDB
 26301                           fsr2h	equ	0xFDA
 26302                           fsr2l	equ	0xFD9
 26303                           status	equ	0xFD8
 26304                           
 26305 ;; *************** function _HLVD_Initialize *****************
 26306 ;; Defined at:
 26307 ;;		line 58 in file "mcc_generated_files/hlvd.c"
 26308 ;; Parameters:    Size  Location     Type
 26309 ;;		None
 26310 ;; Auto vars:     Size  Location     Type
 26311 ;;		None
 26312 ;; Return value:  Size  Location     Type
 26313 ;;                  1    wreg      void 
 26314 ;; Registers used:
 26315 ;;		wreg, status,2
 26316 ;; Tracked objects:
 26317 ;;		On entry : 0/0
 26318 ;;		On exit  : 0/0
 26319 ;;		Unchanged: 0/0
 26320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26325 ;;Total ram usage:        0 bytes
 26326 ;; Hardware stack levels used:    1
 26327 ;; Hardware stack levels required when called:   13
 26328 ;; This function calls:
 26329 ;;		Nothing
 26330 ;; This function is called by:
 26331 ;;		_SYSTEM_Initialize
 26332 ;; This function uses a non-reentrant model
 26333 ;;
 26334                           
 26335                           	psect	text66
 26336  01923A                     __ptext66:
 26337                           	opt stack 0
 26338  01923A                     _HLVD_Initialize:
 26339                           	opt stack 16
 26340                           
 26341                           ;hlvd.c: 62: HLVDCON1 = 0x09;
 26342                           
 26343                           ; BSR set to: 14
 26344                           ;incstack = 0
 26345  01923A  0E09               	movlw	9
 26346  01923C  010E               	movlb	14	; () banked
 26347  01923E  6FC3               	movwf	195,b	;volatile
 26348                           
 26349                           ;hlvd.c: 64: HLVDCON0 = 0x82;
 26350  019240  0E82               	movlw	130
 26351  019242  6FC2               	movwf	194,b	;volatile
 26352                           
 26353                           ; BSR set to: 14
 26354                           ;hlvd.c: 66: PIR2bits.HLVDIF = 0;
 26355  019244  9F35               	bcf	53,7,b	;volatile
 26356                           
 26357                           ; BSR set to: 14
 26358                           ;hlvd.c: 68: PIE2bits.HLVDIE = 1;
 26359  019246  8F2B               	bsf	43,7,b	;volatile
 26360                           
 26361                           ; BSR set to: 14
 26362  019248  0012               	return		;funcret
 26363  01924A                     __end_of_HLVD_Initialize:
 26364                           	opt stack 0
 26365                           tblptru	equ	0xFF8
 26366                           tblptrh	equ	0xFF7
 26367                           tblptrl	equ	0xFF6
 26368                           tablat	equ	0xFF5
 26369                           prodh	equ	0xFF4
 26370                           prodl	equ	0xFF3
 26371                           intcon	equ	0xFF2
 26372                           indf0	equ	0xFEF
 26373                           postinc0	equ	0xFEE
 26374                           fsr0h	equ	0xFEA
 26375                           fsr0l	equ	0xFE9
 26376                           wreg	equ	0xFE8
 26377                           indf1	equ	0xFE7
 26378                           postdec1	equ	0xFE5
 26379                           plusw1	equ	0xFE3
 26380                           fsr1h	equ	0xFE2
 26381                           fsr1l	equ	0xFE1
 26382                           indf2	equ	0xFDF
 26383                           postinc2	equ	0xFDE
 26384                           postdec2	equ	0xFDD
 26385                           plusw2	equ	0xFDB
 26386                           fsr2h	equ	0xFDA
 26387                           fsr2l	equ	0xFD9
 26388                           status	equ	0xFD8
 26389                           
 26390 ;; *************** function _FVR_Initialize *****************
 26391 ;; Defined at:
 26392 ;;		line 58 in file "mcc_generated_files/fvr.c"
 26393 ;; Parameters:    Size  Location     Type
 26394 ;;		None
 26395 ;; Auto vars:     Size  Location     Type
 26396 ;;		None
 26397 ;; Return value:  Size  Location     Type
 26398 ;;                  1    wreg      void 
 26399 ;; Registers used:
 26400 ;;		wreg, status,2
 26401 ;; Tracked objects:
 26402 ;;		On entry : 0/0
 26403 ;;		On exit  : 0/0
 26404 ;;		Unchanged: 0/0
 26405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26410 ;;Total ram usage:        0 bytes
 26411 ;; Hardware stack levels used:    1
 26412 ;; Hardware stack levels required when called:   13
 26413 ;; This function calls:
 26414 ;;		Nothing
 26415 ;; This function is called by:
 26416 ;;		_SYSTEM_Initialize
 26417 ;; This function uses a non-reentrant model
 26418 ;;
 26419                           
 26420                           	psect	text67
 26421  0192D0                     __ptext67:
 26422                           	opt stack 0
 26423  0192D0                     _FVR_Initialize:
 26424                           	opt stack 16
 26425                           
 26426                           ;fvr.c: 61: FVRCON = 0xA6;
 26427                           
 26428                           ; BSR set to: 14
 26429                           ;incstack = 0
 26430  0192D0  0EA6               	movlw	166
 26431  0192D2  010E               	movlb	14	; () banked
 26432  0192D4  6FC4               	movwf	196,b	;volatile
 26433                           
 26434                           ; BSR set to: 14
 26435  0192D6  0012               	return		;funcret
 26436  0192D8                     __end_of_FVR_Initialize:
 26437                           	opt stack 0
 26438                           tblptru	equ	0xFF8
 26439                           tblptrh	equ	0xFF7
 26440                           tblptrl	equ	0xFF6
 26441                           tablat	equ	0xFF5
 26442                           prodh	equ	0xFF4
 26443                           prodl	equ	0xFF3
 26444                           intcon	equ	0xFF2
 26445                           indf0	equ	0xFEF
 26446                           postinc0	equ	0xFEE
 26447                           fsr0h	equ	0xFEA
 26448                           fsr0l	equ	0xFE9
 26449                           wreg	equ	0xFE8
 26450                           indf1	equ	0xFE7
 26451                           postdec1	equ	0xFE5
 26452                           plusw1	equ	0xFE3
 26453                           fsr1h	equ	0xFE2
 26454                           fsr1l	equ	0xFE1
 26455                           indf2	equ	0xFDF
 26456                           postinc2	equ	0xFDE
 26457                           postdec2	equ	0xFDD
 26458                           plusw2	equ	0xFDB
 26459                           fsr2h	equ	0xFDA
 26460                           fsr2l	equ	0xFD9
 26461                           status	equ	0xFD8
 26462                           
 26463 ;; *************** function _EUSART2_Initialize *****************
 26464 ;; Defined at:
 26465 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 26466 ;; Parameters:    Size  Location     Type
 26467 ;;		None
 26468 ;; Auto vars:     Size  Location     Type
 26469 ;;		None
 26470 ;; Return value:  Size  Location     Type
 26471 ;;                  1    wreg      void 
 26472 ;; Registers used:
 26473 ;;		wreg, status,2, status,0, cstack
 26474 ;; Tracked objects:
 26475 ;;		On entry : 0/0
 26476 ;;		On exit  : 0/0
 26477 ;;		Unchanged: 0/0
 26478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26483 ;;Total ram usage:        0 bytes
 26484 ;; Hardware stack levels used:    1
 26485 ;; Hardware stack levels required when called:   14
 26486 ;; This function calls:
 26487 ;;		_EUSART2_SetRxInterruptHandler
 26488 ;;		_EUSART2_SetTxInterruptHandler
 26489 ;; This function is called by:
 26490 ;;		_SYSTEM_Initialize
 26491 ;; This function uses a non-reentrant model
 26492 ;;
 26493                           
 26494                           	psect	text68
 26495  0185C6                     __ptext68:
 26496                           	opt stack 0
 26497  0185C6                     _EUSART2_Initialize:
 26498                           	opt stack 15
 26499                           
 26500                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 26501                           
 26502                           ; BSR set to: 14
 26503                           ;incstack = 0
 26504  0185C6  827E               	bsf	3966,1,c	;volatile
 26505                           
 26506                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 26507  0185C8  010E               	movlb	14	; () banked
 26508  0185CA  9F2C               	bcf	44,7,b	;volatile
 26509                           
 26510                           ; BSR set to: 14
 26511                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 26512  0185CC  0EE2               	movlw	low _EUSART2_Receive_ISR
 26513  0185CE  0101               	movlb	1	; () banked
 26514  0185D0  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 26515  0185D2  0E7D               	movlw	high _EUSART2_Receive_ISR
 26516  0185D4  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 26517  0185D6  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 26518  0185D8  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 26519  0185DA  EC48  F0C9         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 26520                           
 26521                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 26522  0185DE  010E               	movlb	14	; () banked
 26523  0185E0  9D2C               	bcf	44,6,b	;volatile
 26524                           
 26525                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 26526  0185E2  0EFE               	movlw	low _EUSART2_Transmit_ISR
 26527  0185E4  0101               	movlb	1	; () banked
 26528  0185E6  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 26529  0185E8  0E8D               	movlw	high _EUSART2_Transmit_ISR
 26530  0185EA  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 26531  0185EC  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 26532  0185EE  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 26533  0185F0  EC41  F0C9         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 26534                           
 26535                           ;eusart2.c: 91: BAUD2CON = 0x08;
 26536  0185F4  0E08               	movlw	8
 26537  0185F6  010E               	movlb	14	; () banked
 26538  0185F8  6FF7               	movwf	247,b	;volatile
 26539                           
 26540                           ; BSR set to: 14
 26541                           ;eusart2.c: 94: RC2STA = 0x90;
 26542  0185FA  0E90               	movlw	144
 26543  0185FC  6FF5               	movwf	245,b	;volatile
 26544                           
 26545                           ; BSR set to: 14
 26546                           ;eusart2.c: 97: TX2STA = 0x24;
 26547  0185FE  0E24               	movlw	36
 26548  018600  6FF6               	movwf	246,b	;volatile
 26549                           
 26550                           ; BSR set to: 14
 26551                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 26552  018602  0E8A               	movlw	138
 26553  018604  6FF3               	movwf	243,b	;volatile
 26554                           
 26555                           ; BSR set to: 14
 26556                           ;eusart2.c: 103: SP2BRGH = 0x00;
 26557  018606  0E00               	movlw	0
 26558  018608  6FF4               	movwf	244,b	;volatile
 26559                           
 26560                           ; BSR set to: 14
 26561                           ;eusart2.c: 107: eusart2TxHead = 0;
 26562  01860A  0E00               	movlw	0
 26563  01860C  0101               	movlb	1	; () banked
 26564  01860E  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 26565                           
 26566                           ; BSR set to: 1
 26567                           ;eusart2.c: 108: eusart2TxTail = 0;
 26568  018610  0E00               	movlw	0
 26569  018612  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 26570                           
 26571                           ; BSR set to: 1
 26572                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 26573  018614  0E80               	movlw	128
 26574  018616  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 26575                           
 26576                           ; BSR set to: 1
 26577                           ;eusart2.c: 111: eusart2RxHead = 0;
 26578  018618  0E00               	movlw	0
 26579  01861A  0100               	movlb	0	; () banked
 26580  01861C  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 26581                           
 26582                           ; BSR set to: 0
 26583                           ;eusart2.c: 112: eusart2RxTail = 0;
 26584  01861E  0E00               	movlw	0
 26585  018620  0101               	movlb	1	; () banked
 26586  018622  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 26587                           
 26588                           ; BSR set to: 1
 26589                           ;eusart2.c: 113: eusart2RxCount = 0;
 26590  018624  0E00               	movlw	0
 26591  018626  6FDF               	movwf	_eusart2RxCount& (0+255),b	;volatile
 26592                           
 26593                           ; BSR set to: 1
 26594                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 26595  018628  010E               	movlb	14	; () banked
 26596  01862A  8F2C               	bsf	44,7,b	;volatile
 26597                           
 26598                           ; BSR set to: 14
 26599                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 26600  01862C  927E               	bcf	3966,1,c	;volatile
 26601                           
 26602                           ; BSR set to: 14
 26603  01862E  0012               	return		;funcret
 26604  018630                     __end_of_EUSART2_Initialize:
 26605                           	opt stack 0
 26606                           tblptru	equ	0xFF8
 26607                           tblptrh	equ	0xFF7
 26608                           tblptrl	equ	0xFF6
 26609                           tablat	equ	0xFF5
 26610                           prodh	equ	0xFF4
 26611                           prodl	equ	0xFF3
 26612                           intcon	equ	0xFF2
 26613                           indf0	equ	0xFEF
 26614                           postinc0	equ	0xFEE
 26615                           fsr0h	equ	0xFEA
 26616                           fsr0l	equ	0xFE9
 26617                           wreg	equ	0xFE8
 26618                           indf1	equ	0xFE7
 26619                           postdec1	equ	0xFE5
 26620                           plusw1	equ	0xFE3
 26621                           fsr1h	equ	0xFE2
 26622                           fsr1l	equ	0xFE1
 26623                           indf2	equ	0xFDF
 26624                           postinc2	equ	0xFDE
 26625                           postdec2	equ	0xFDD
 26626                           plusw2	equ	0xFDB
 26627                           fsr2h	equ	0xFDA
 26628                           fsr2l	equ	0xFD9
 26629                           status	equ	0xFD8
 26630                           
 26631 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 26632 ;; Defined at:
 26633 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 26634 ;; Parameters:    Size  Location     Type
 26635 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 26636 ;;		 -> EUSART2_Transmit_ISR(1), 
 26637 ;; Auto vars:     Size  Location     Type
 26638 ;;		None
 26639 ;; Return value:  Size  Location     Type
 26640 ;;                  1    wreg      void 
 26641 ;; Registers used:
 26642 ;;		wreg, status,2, status,0
 26643 ;; Tracked objects:
 26644 ;;		On entry : 0/0
 26645 ;;		On exit  : 0/0
 26646 ;;		Unchanged: 0/0
 26647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26648 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26651 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26652 ;;Total ram usage:        3 bytes
 26653 ;; Hardware stack levels used:    1
 26654 ;; Hardware stack levels required when called:   13
 26655 ;; This function calls:
 26656 ;;		Nothing
 26657 ;; This function is called by:
 26658 ;;		_EUSART2_Initialize
 26659 ;; This function uses a non-reentrant model
 26660 ;;
 26661                           
 26662                           	psect	text69
 26663  019282                     __ptext69:
 26664                           	opt stack 0
 26665  019282                     _EUSART2_SetTxInterruptHandler:
 26666                           	opt stack 15
 26667                           
 26668                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 26669                           
 26670                           ; BSR set to: 14
 26671                           ;incstack = 0
 26672  019282  C117  F237         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 26673  019286  C118  F238         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 26674  01928A  C119  F239         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 26675  01928E  0012               	return		;funcret
 26676  019290                     __end_of_EUSART2_SetTxInterruptHandler:
 26677                           	opt stack 0
 26678                           tblptru	equ	0xFF8
 26679                           tblptrh	equ	0xFF7
 26680                           tblptrl	equ	0xFF6
 26681                           tablat	equ	0xFF5
 26682                           prodh	equ	0xFF4
 26683                           prodl	equ	0xFF3
 26684                           intcon	equ	0xFF2
 26685                           indf0	equ	0xFEF
 26686                           postinc0	equ	0xFEE
 26687                           fsr0h	equ	0xFEA
 26688                           fsr0l	equ	0xFE9
 26689                           wreg	equ	0xFE8
 26690                           indf1	equ	0xFE7
 26691                           postdec1	equ	0xFE5
 26692                           plusw1	equ	0xFE3
 26693                           fsr1h	equ	0xFE2
 26694                           fsr1l	equ	0xFE1
 26695                           indf2	equ	0xFDF
 26696                           postinc2	equ	0xFDE
 26697                           postdec2	equ	0xFDD
 26698                           plusw2	equ	0xFDB
 26699                           fsr2h	equ	0xFDA
 26700                           fsr2l	equ	0xFD9
 26701                           status	equ	0xFD8
 26702                           
 26703 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 26704 ;; Defined at:
 26705 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 26706 ;; Parameters:    Size  Location     Type
 26707 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 26708 ;;		 -> EUSART2_Receive_ISR(1), 
 26709 ;; Auto vars:     Size  Location     Type
 26710 ;;		None
 26711 ;; Return value:  Size  Location     Type
 26712 ;;                  1    wreg      void 
 26713 ;; Registers used:
 26714 ;;		wreg, status,2, status,0
 26715 ;; Tracked objects:
 26716 ;;		On entry : 0/0
 26717 ;;		On exit  : 0/0
 26718 ;;		Unchanged: 0/0
 26719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26720 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26723 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26724 ;;Total ram usage:        3 bytes
 26725 ;; Hardware stack levels used:    1
 26726 ;; Hardware stack levels required when called:   13
 26727 ;; This function calls:
 26728 ;;		Nothing
 26729 ;; This function is called by:
 26730 ;;		_EUSART2_Initialize
 26731 ;; This function uses a non-reentrant model
 26732 ;;
 26733                           
 26734                           	psect	text70
 26735  019290                     __ptext70:
 26736                           	opt stack 0
 26737  019290                     _EUSART2_SetRxInterruptHandler:
 26738                           	opt stack 15
 26739                           
 26740                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 26741                           
 26742                           ;incstack = 0
 26743  019290  C117  F234         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 26744  019294  C118  F235         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 26745  019298  C119  F236         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 26746  01929C  0012               	return		;funcret
 26747  01929E                     __end_of_EUSART2_SetRxInterruptHandler:
 26748                           	opt stack 0
 26749                           tblptru	equ	0xFF8
 26750                           tblptrh	equ	0xFF7
 26751                           tblptrl	equ	0xFF6
 26752                           tablat	equ	0xFF5
 26753                           prodh	equ	0xFF4
 26754                           prodl	equ	0xFF3
 26755                           intcon	equ	0xFF2
 26756                           indf0	equ	0xFEF
 26757                           postinc0	equ	0xFEE
 26758                           fsr0h	equ	0xFEA
 26759                           fsr0l	equ	0xFE9
 26760                           wreg	equ	0xFE8
 26761                           indf1	equ	0xFE7
 26762                           postdec1	equ	0xFE5
 26763                           plusw1	equ	0xFE3
 26764                           fsr1h	equ	0xFE2
 26765                           fsr1l	equ	0xFE1
 26766                           indf2	equ	0xFDF
 26767                           postinc2	equ	0xFDE
 26768                           postdec2	equ	0xFDD
 26769                           plusw2	equ	0xFDB
 26770                           fsr2h	equ	0xFDA
 26771                           fsr2l	equ	0xFD9
 26772                           status	equ	0xFD8
 26773                           
 26774 ;; *************** function _ADCC_Initialize *****************
 26775 ;; Defined at:
 26776 ;;		line 63 in file "mcc_generated_files/adcc.c"
 26777 ;; Parameters:    Size  Location     Type
 26778 ;;		None
 26779 ;; Auto vars:     Size  Location     Type
 26780 ;;		None
 26781 ;; Return value:  Size  Location     Type
 26782 ;;                  1    wreg      void 
 26783 ;; Registers used:
 26784 ;;		wreg, status,2, status,0, cstack
 26785 ;; Tracked objects:
 26786 ;;		On entry : 0/0
 26787 ;;		On exit  : 0/0
 26788 ;;		Unchanged: 0/0
 26789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26794 ;;Total ram usage:        0 bytes
 26795 ;; Hardware stack levels used:    1
 26796 ;; Hardware stack levels required when called:   14
 26797 ;; This function calls:
 26798 ;;		_ADCC_SetADTIInterruptHandler
 26799 ;; This function is called by:
 26800 ;;		_SYSTEM_Initialize
 26801 ;; This function uses a non-reentrant model
 26802 ;;
 26803                           
 26804                           	psect	text71
 26805  0187C6                     __ptext71:
 26806                           	opt stack 0
 26807  0187C6                     _ADCC_Initialize:
 26808                           	opt stack 15
 26809                           
 26810                           ;adcc.c: 67: ADLTHL = 0x00;
 26811                           
 26812                           ;incstack = 0
 26813  0187C6  0E00               	movlw	0
 26814  0187C8  6E6A               	movwf	3946,c	;volatile
 26815                           
 26816                           ;adcc.c: 69: ADLTHH = 0x00;
 26817  0187CA  0E00               	movlw	0
 26818  0187CC  6E6B               	movwf	3947,c	;volatile
 26819                           
 26820                           ;adcc.c: 71: ADUTHL = 0x00;
 26821  0187CE  0E00               	movlw	0
 26822  0187D0  6E6C               	movwf	3948,c	;volatile
 26823                           
 26824                           ;adcc.c: 73: ADUTHH = 0x00;
 26825  0187D2  0E00               	movlw	0
 26826  0187D4  6E6D               	movwf	3949,c	;volatile
 26827                           
 26828                           ;adcc.c: 75: ADSTPTL = 0x00;
 26829  0187D6  0E00               	movlw	0
 26830  0187D8  6E68               	movwf	3944,c	;volatile
 26831                           
 26832                           ;adcc.c: 77: ADSTPTH = 0x00;
 26833  0187DA  0E00               	movlw	0
 26834  0187DC  6E69               	movwf	3945,c	;volatile
 26835                           
 26836                           ;adcc.c: 79: ADRPT = 0xFF;
 26837  0187DE  6866               	setf	3942,c	;volatile
 26838                           
 26839                           ;adcc.c: 81: ADPCH = 0x00;
 26840  0187E0  0E00               	movlw	0
 26841  0187E2  010F               	movlb	15	; () banked
 26842  0187E4  6F5F               	movwf	95,b	;volatile
 26843                           
 26844                           ;adcc.c: 83: ADCAP = 0x00;
 26845  0187E6  0E00               	movlw	0
 26846  0187E8  6F5D               	movwf	93,b	;volatile
 26847                           
 26848                           ;adcc.c: 85: ADCON1 = 0x00;
 26849  0187EA  0E00               	movlw	0
 26850  0187EC  6F59               	movwf	89,b	;volatile
 26851                           
 26852                           ;adcc.c: 87: ADCON2 = 0x04;
 26853  0187EE  0E04               	movlw	4
 26854  0187F0  6F5A               	movwf	90,b	;volatile
 26855                           
 26856                           ;adcc.c: 89: ADCON3 = 0x5F;
 26857  0187F2  0E5F               	movlw	95
 26858  0187F4  6F5B               	movwf	91,b	;volatile
 26859                           
 26860                           ;adcc.c: 91: ADSTAT = 0x00;
 26861  0187F6  0E00               	movlw	0
 26862  0187F8  6E65               	movwf	3941,c	;volatile
 26863                           
 26864                           ;adcc.c: 93: ADREF = 0x12;
 26865  0187FA  0E12               	movlw	18
 26866  0187FC  6F58               	movwf	88,b	;volatile
 26867                           
 26868                           ;adcc.c: 95: ADACT = 0x00;
 26869  0187FE  0E00               	movlw	0
 26870  018800  6F56               	movwf	86,b	;volatile
 26871                           
 26872                           ;adcc.c: 97: ADCLK = 0x1F;
 26873  018802  0E1F               	movlw	31
 26874  018804  6F57               	movwf	87,b	;volatile
 26875                           
 26876                           ;adcc.c: 99: ADCON0 = 0xC4;
 26877  018806  0EC4               	movlw	196
 26878  018808  6E60               	movwf	3936,c	;volatile
 26879                           
 26880                           ; BSR set to: 15
 26881                           ;adcc.c: 101: ADACQ = 0xFF;
 26882  01880A  695C               	setf	92,b	;volatile
 26883                           
 26884                           ; BSR set to: 15
 26885                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 26886  01880C  010E               	movlb	14	; () banked
 26887  01880E  9334               	bcf	52,1,b	;volatile
 26888                           
 26889                           ; BSR set to: 14
 26890                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 26891  018810  832A               	bsf	42,1,b	;volatile
 26892                           
 26893                           ; BSR set to: 14
 26894                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 26895  018812  0E0A               	movlw	low _ADCC_DefaultInterruptHandler
 26896  018814  0101               	movlb	1	; () banked
 26897  018816  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 26898  018818  0E93               	movlw	high _ADCC_DefaultInterruptHandler
 26899  01881A  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 26900  01881C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26901  01881E  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 26902  018820  EC4F  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 26903  018824  0012               	return		;funcret
 26904  018826                     __end_of_ADCC_Initialize:
 26905                           	opt stack 0
 26906                           tblptru	equ	0xFF8
 26907                           tblptrh	equ	0xFF7
 26908                           tblptrl	equ	0xFF6
 26909                           tablat	equ	0xFF5
 26910                           prodh	equ	0xFF4
 26911                           prodl	equ	0xFF3
 26912                           intcon	equ	0xFF2
 26913                           indf0	equ	0xFEF
 26914                           postinc0	equ	0xFEE
 26915                           fsr0h	equ	0xFEA
 26916                           fsr0l	equ	0xFE9
 26917                           wreg	equ	0xFE8
 26918                           indf1	equ	0xFE7
 26919                           postdec1	equ	0xFE5
 26920                           plusw1	equ	0xFE3
 26921                           fsr1h	equ	0xFE2
 26922                           fsr1l	equ	0xFE1
 26923                           indf2	equ	0xFDF
 26924                           postinc2	equ	0xFDE
 26925                           postdec2	equ	0xFDD
 26926                           plusw2	equ	0xFDB
 26927                           fsr2h	equ	0xFDA
 26928                           fsr2l	equ	0xFD9
 26929                           status	equ	0xFD8
 26930                           
 26931 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 26932 ;; Defined at:
 26933 ;;		line 307 in file "mcc_generated_files/adcc.c"
 26934 ;; Parameters:    Size  Location     Type
 26935 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 26936 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 26937 ;; Auto vars:     Size  Location     Type
 26938 ;;		None
 26939 ;; Return value:  Size  Location     Type
 26940 ;;                  1    wreg      void 
 26941 ;; Registers used:
 26942 ;;		wreg, status,2, status,0
 26943 ;; Tracked objects:
 26944 ;;		On entry : 0/0
 26945 ;;		On exit  : 0/0
 26946 ;;		Unchanged: 0/0
 26947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26948 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26951 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26952 ;;Total ram usage:        3 bytes
 26953 ;; Hardware stack levels used:    1
 26954 ;; Hardware stack levels required when called:   13
 26955 ;; This function calls:
 26956 ;;		Nothing
 26957 ;; This function is called by:
 26958 ;;		_ADCC_Initialize
 26959 ;;		_main
 26960 ;; This function uses a non-reentrant model
 26961 ;;
 26962                           
 26963                           	psect	text72
 26964  01929E                     __ptext72:
 26965                           	opt stack 0
 26966  01929E                     _ADCC_SetADTIInterruptHandler:
 26967                           	opt stack 15
 26968                           
 26969                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 26970                           
 26971                           ;incstack = 0
 26972  01929E  C117  F22E         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 26973  0192A2  C118  F22F         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 26974  0192A6  C119  F230         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 26975  0192AA  0012               	return		;funcret
 26976  0192AC                     __end_of_ADCC_SetADTIInterruptHandler:
 26977                           	opt stack 0
 26978                           tblptru	equ	0xFF8
 26979                           tblptrh	equ	0xFF7
 26980                           tblptrl	equ	0xFF6
 26981                           tablat	equ	0xFF5
 26982                           prodh	equ	0xFF4
 26983                           prodl	equ	0xFF3
 26984                           intcon	equ	0xFF2
 26985                           indf0	equ	0xFEF
 26986                           postinc0	equ	0xFEE
 26987                           fsr0h	equ	0xFEA
 26988                           fsr0l	equ	0xFE9
 26989                           wreg	equ	0xFE8
 26990                           indf1	equ	0xFE7
 26991                           postdec1	equ	0xFE5
 26992                           plusw1	equ	0xFE3
 26993                           fsr1h	equ	0xFE2
 26994                           fsr1l	equ	0xFE1
 26995                           indf2	equ	0xFDF
 26996                           postinc2	equ	0xFDE
 26997                           postdec2	equ	0xFDD
 26998                           plusw2	equ	0xFDB
 26999                           fsr2h	equ	0xFDA
 27000                           fsr2l	equ	0xFD9
 27001                           status	equ	0xFD8
 27002                           
 27003 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 27004 ;; Defined at:
 27005 ;;		line 104 in file "mcc_generated_files/interrupt_manager.c"
 27006 ;; Parameters:    Size  Location     Type
 27007 ;;		None
 27008 ;; Auto vars:     Size  Location     Type
 27009 ;;		None
 27010 ;; Return value:  Size  Location     Type
 27011 ;;                  1    wreg      void 
 27012 ;; Registers used:
 27013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 27014 ;; Tracked objects:
 27015 ;;		On entry : 0/0
 27016 ;;		On exit  : 0/0
 27017 ;;		Unchanged: 0/0
 27018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27021 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27022 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27023 ;;Total ram usage:       21 bytes
 27024 ;; Hardware stack levels used:    1
 27025 ;; Hardware stack levels required when called:   12
 27026 ;; This function calls:
 27027 ;;		Absolute function
 27028 ;;		_EUSART2_Transmit_ISR
 27029 ;;		_HLVD_ISR
 27030 ;;		_TMR6_ISR
 27031 ;;		_TMR7_ISR
 27032 ;; This function is called by:
 27033 ;;		Interrupt level 1
 27034 ;; This function uses a non-reentrant model
 27035 ;;
 27036                           
 27037                           	psect	intcodelo
 27038  000018                     __pintcodelo:
 27039                           	opt stack 0
 27040  000018                     _INTERRUPT_InterruptManagerLow:
 27041                           	opt stack 11
 27042                           
 27043                           ;incstack = 0
 27044  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 27045  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 27046  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 27047  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 27048  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 27049  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 27050  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 27051  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 27052  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 27053  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 27054  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 27055  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 27056  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 27057  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 27058  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 27059  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 27060  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 27061  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 27062  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 27063  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 27064  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 27065  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 27066                           
 27067                           ;interrupt_manager.c: 107: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 27068  00006E  010E               	movlb	14	; () banked
 27069  000070  BB2E               	btfsc	46,5,b	;volatile
 27070                           
 27071                           ; BSR set to: 14
 27072  000072  AB38               	btfss	56,5,b	;volatile
 27073  000074  D003               	goto	i1l223
 27074                           
 27075                           ; BSR set to: 14
 27076                           ;interrupt_manager.c: 108: {
 27077                           ;interrupt_manager.c: 109: TMR6_ISR();
 27078  000076  ECEE  F0C7         	call	_TMR6_ISR	;wreg free
 27079                           
 27080                           ;interrupt_manager.c: 110: }
 27081  00007A  D01B               	goto	i1l229
 27082  00007C                     i1l223:
 27083                           
 27084                           ; BSR set to: 14
 27085                           ;interrupt_manager.c: 111: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 27086  00007C  BD2C               	btfsc	44,6,b	;volatile
 27087                           
 27088                           ; BSR set to: 14
 27089  00007E  AD36               	btfss	54,6,b	;volatile
 27090  000080  D00D               	goto	i1l225
 27091                           
 27092                           ; BSR set to: 14
 27093                           ;interrupt_manager.c: 112: {
 27094                           ;interrupt_manager.c: 113: EUSART2_TxDefaultInterruptHandler();
 27095  000082  D801               	call	i1u2692_28
 27096  000084  D016               	goto	i1l229
 27097  000086                     i1u2692_28:
 27098  000086  0005               	push	
 27099  000088  6EFA               	movwf	pclath,c
 27100  00008A  0102               	movlb	2	; () banked
 27101  00008C  5137               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 27102  00008E  6EFD               	movwf	tosl,c
 27103  000090  5138               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 27104  000092  6EFE               	movwf	tosh,c
 27105  000094  5139               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 27106  000096  6EFF               	movwf	tosu,c
 27107  000098  50FA               	movf	pclath,w,c
 27108  00009A  0012               	return		;indir
 27109  00009C                     i1l225:
 27110                           
 27111                           ; BSR set to: 14
 27112                           ;interrupt_manager.c: 115: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 27113  00009C  BD2E               	btfsc	46,6,b	;volatile
 27114                           
 27115                           ; BSR set to: 14
 27116  00009E  AD38               	btfss	56,6,b	;volatile
 27117  0000A0  D003               	goto	i1l227
 27118                           
 27119                           ; BSR set to: 14
 27120                           ;interrupt_manager.c: 116: {
 27121                           ;interrupt_manager.c: 117: TMR7_ISR();
 27122  0000A2  EC1A  F0C7         	call	_TMR7_ISR	;wreg free
 27123                           
 27124                           ;interrupt_manager.c: 118: }
 27125  0000A6  D005               	goto	i1l229
 27126  0000A8                     i1l227:
 27127                           
 27128                           ; BSR set to: 14
 27129                           ;interrupt_manager.c: 119: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 27130  0000A8  BF2B               	btfsc	43,7,b	;volatile
 27131                           
 27132                           ; BSR set to: 14
 27133  0000AA  AF35               	btfss	53,7,b	;volatile
 27134  0000AC  D002               	goto	i1l229
 27135                           
 27136                           ; BSR set to: 14
 27137                           ;interrupt_manager.c: 120: {
 27138                           ;interrupt_manager.c: 121: HLVD_ISR();
 27139  0000AE  EC70  F0C9         	call	_HLVD_ISR	;wreg free
 27140  0000B2                     i1l229:
 27141                           
 27142                           ;interrupt_manager.c: 123: else
 27143                           ;interrupt_manager.c: 124: {
 27144  0000B2  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 27145  0000B6  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 27146  0000BA  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 27147  0000BE  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 27148  0000C2  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 27149  0000C6  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 27150  0000CA  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 27151  0000CE  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 27152  0000D2  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 27153  0000D6  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 27154  0000DA  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 27155  0000DE  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 27156  0000E2  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 27157  0000E6  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 27158  0000EA  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 27159  0000EE  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 27160  0000F2  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 27161  0000F6  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 27162  0000FA  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 27163  0000FE  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 27164  000102  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 27165  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 27166  000108  0010               	retfie	
 27167  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 27168                           	opt stack 0
 27169                           tosu	equ	0xFFF
 27170                           tosh	equ	0xFFE
 27171                           tosl	equ	0xFFD
 27172                           pclatu	equ	0xFFB
 27173                           pclath	equ	0xFFA
 27174                           tblptru	equ	0xFF8
 27175                           tblptrh	equ	0xFF7
 27176                           tblptrl	equ	0xFF6
 27177                           tablat	equ	0xFF5
 27178                           prodh	equ	0xFF4
 27179                           prodl	equ	0xFF3
 27180                           intcon	equ	0xFF2
 27181                           indf0	equ	0xFEF
 27182                           postinc0	equ	0xFEE
 27183                           fsr0h	equ	0xFEA
 27184                           fsr0l	equ	0xFE9
 27185                           wreg	equ	0xFE8
 27186                           indf1	equ	0xFE7
 27187                           postdec1	equ	0xFE5
 27188                           plusw1	equ	0xFE3
 27189                           fsr1h	equ	0xFE2
 27190                           fsr1l	equ	0xFE1
 27191                           bsr	equ	0xFE0
 27192                           indf2	equ	0xFDF
 27193                           postinc2	equ	0xFDE
 27194                           postdec2	equ	0xFDD
 27195                           plusw2	equ	0xFDB
 27196                           fsr2h	equ	0xFDA
 27197                           fsr2l	equ	0xFD9
 27198                           status	equ	0xFD8
 27199                           
 27200 ;; *************** function _TMR7_ISR *****************
 27201 ;; Defined at:
 27202 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 27203 ;; Parameters:    Size  Location     Type
 27204 ;;		None
 27205 ;; Auto vars:     Size  Location     Type
 27206 ;;		None
 27207 ;; Return value:  Size  Location     Type
 27208 ;;                  1    wreg      void 
 27209 ;; Registers used:
 27210 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 27211 ;; Tracked objects:
 27212 ;;		On entry : 0/0
 27213 ;;		On exit  : 0/0
 27214 ;;		Unchanged: 0/0
 27215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27220 ;;Total ram usage:        0 bytes
 27221 ;; Hardware stack levels used:    1
 27222 ;; Hardware stack levels required when called:   11
 27223 ;; This function calls:
 27224 ;;		Absolute function
 27225 ;;		_TMR7_DefaultInterruptHandler
 27226 ;;		_TMR7_WriteTimer
 27227 ;;		_acquisitionTimerCallback
 27228 ;; This function is called by:
 27229 ;;		_INTERRUPT_InterruptManagerLow
 27230 ;; This function uses a non-reentrant model
 27231 ;;
 27232                           
 27233                           	psect	text74
 27234  018E34                     __ptext74:
 27235                           	opt stack 0
 27236  018E34                     _TMR7_ISR:
 27237                           	opt stack 11
 27238                           
 27239                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 27240                           
 27241                           ;incstack = 0
 27242  018E34  010E               	movlb	14	; () banked
 27243  018E36  9D38               	bcf	56,6,b	;volatile
 27244                           
 27245                           ; BSR set to: 14
 27246                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 27247  018E38  C1DD  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 27248  018E3C  C1DE  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 27249  018E40  EC29  F0C8         	call	_TMR7_WriteTimer	;wreg free
 27250                           
 27251                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 27252  018E44  0102               	movlb	2	; () banked
 27253  018E46  512B               	movf	_TMR7_InterruptHandler& (0+255),w,b
 27254  018E48  112C               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 27255  018E4A  112D               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 27256  018E4C  B4D8               	btfsc	status,2,c
 27257  018E4E  0012               	return	
 27258                           
 27259                           ; BSR set to: 2
 27260                           ;tmr7.c: 172: {
 27261                           ;tmr7.c: 173: TMR7_InterruptHandler();
 27262  018E50  D801               	call	i1u2669_28
 27263  018E52  0012               	return	
 27264  018E54                     i1u2669_28:
 27265  018E54  0005               	push	
 27266  018E56  6EFA               	movwf	pclath,c
 27267  018E58  512B               	movf	_TMR7_InterruptHandler& (0+255),w,b
 27268  018E5A  6EFD               	movwf	tosl,c
 27269  018E5C  512C               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 27270  018E5E  6EFE               	movwf	tosh,c
 27271  018E60  512D               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 27272  018E62  6EFF               	movwf	tosu,c
 27273  018E64  50FA               	movf	pclath,w,c
 27274  018E66  0012               	return		;indir
 27275  018E68                     __end_of_TMR7_ISR:
 27276                           	opt stack 0
 27277                           tosu	equ	0xFFF
 27278                           tosh	equ	0xFFE
 27279                           tosl	equ	0xFFD
 27280                           pclatu	equ	0xFFB
 27281                           pclath	equ	0xFFA
 27282                           tblptru	equ	0xFF8
 27283                           tblptrh	equ	0xFF7
 27284                           tblptrl	equ	0xFF6
 27285                           tablat	equ	0xFF5
 27286                           prodh	equ	0xFF4
 27287                           prodl	equ	0xFF3
 27288                           intcon	equ	0xFF2
 27289                           indf0	equ	0xFEF
 27290                           postinc0	equ	0xFEE
 27291                           fsr0h	equ	0xFEA
 27292                           fsr0l	equ	0xFE9
 27293                           wreg	equ	0xFE8
 27294                           indf1	equ	0xFE7
 27295                           postdec1	equ	0xFE5
 27296                           plusw1	equ	0xFE3
 27297                           fsr1h	equ	0xFE2
 27298                           fsr1l	equ	0xFE1
 27299                           bsr	equ	0xFE0
 27300                           indf2	equ	0xFDF
 27301                           postinc2	equ	0xFDE
 27302                           postdec2	equ	0xFDD
 27303                           plusw2	equ	0xFDB
 27304                           fsr2h	equ	0xFDA
 27305                           fsr2l	equ	0xFD9
 27306                           status	equ	0xFD8
 27307                           
 27308 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 27309 ;; Defined at:
 27310 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 27311 ;; Parameters:    Size  Location     Type
 27312 ;;		None
 27313 ;; Auto vars:     Size  Location     Type
 27314 ;;		None
 27315 ;; Return value:  Size  Location     Type
 27316 ;;                  1    wreg      void 
 27317 ;; Registers used:
 27318 ;;		None
 27319 ;; Tracked objects:
 27320 ;;		On entry : 0/0
 27321 ;;		On exit  : 0/0
 27322 ;;		Unchanged: 0/0
 27323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27328 ;;Total ram usage:        0 bytes
 27329 ;; Hardware stack levels used:    1
 27330 ;; Hardware stack levels required when called:    9
 27331 ;; This function calls:
 27332 ;;		Nothing
 27333 ;; This function is called by:
 27334 ;;		_TMR7_Initialize
 27335 ;;		_TMR7_ISR
 27336 ;; This function uses a non-reentrant model
 27337 ;;
 27338                           
 27339                           	psect	text75
 27340  019304                     __ptext75:
 27341                           	opt stack 0
 27342  019304                     _TMR7_DefaultInterruptHandler:
 27343                           	opt stack 12
 27344                           
 27345                           ;incstack = 0
 27346  019304  0012               	return		;funcret
 27347  019306                     __end_of_TMR7_DefaultInterruptHandler:
 27348                           	opt stack 0
 27349                           tosu	equ	0xFFF
 27350                           tosh	equ	0xFFE
 27351                           tosl	equ	0xFFD
 27352                           pclatu	equ	0xFFB
 27353                           pclath	equ	0xFFA
 27354                           tblptru	equ	0xFF8
 27355                           tblptrh	equ	0xFF7
 27356                           tblptrl	equ	0xFF6
 27357                           tablat	equ	0xFF5
 27358                           prodh	equ	0xFF4
 27359                           prodl	equ	0xFF3
 27360                           intcon	equ	0xFF2
 27361                           indf0	equ	0xFEF
 27362                           postinc0	equ	0xFEE
 27363                           fsr0h	equ	0xFEA
 27364                           fsr0l	equ	0xFE9
 27365                           wreg	equ	0xFE8
 27366                           indf1	equ	0xFE7
 27367                           postdec1	equ	0xFE5
 27368                           plusw1	equ	0xFE3
 27369                           fsr1h	equ	0xFE2
 27370                           fsr1l	equ	0xFE1
 27371                           bsr	equ	0xFE0
 27372                           indf2	equ	0xFDF
 27373                           postinc2	equ	0xFDE
 27374                           postdec2	equ	0xFDD
 27375                           plusw2	equ	0xFDB
 27376                           fsr2h	equ	0xFDA
 27377                           fsr2l	equ	0xFD9
 27378                           status	equ	0xFD8
 27379                           
 27380 ;; *************** function _acquisitionTimerCallback *****************
 27381 ;; Defined at:
 27382 ;;		line 425 in file "main.c"
 27383 ;; Parameters:    Size  Location     Type
 27384 ;;		None
 27385 ;; Auto vars:     Size  Location     Type
 27386 ;;		None
 27387 ;; Return value:  Size  Location     Type
 27388 ;;                  1    wreg      void 
 27389 ;; Registers used:
 27390 ;;		wreg, status,2, cstack
 27391 ;; Tracked objects:
 27392 ;;		On entry : 0/0
 27393 ;;		On exit  : 0/0
 27394 ;;		Unchanged: 0/0
 27395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27400 ;;Total ram usage:        0 bytes
 27401 ;; Hardware stack levels used:    1
 27402 ;; Hardware stack levels required when called:   10
 27403 ;; This function calls:
 27404 ;;		_ADCC_ClearAccumulator
 27405 ;;		_ADCC_DischargeSampleCapacitor
 27406 ;;		_ADCC_StartConversion
 27407 ;; This function is called by:
 27408 ;;		_main
 27409 ;;		_TMR7_ISR
 27410 ;; This function uses a non-reentrant model
 27411 ;;
 27412                           
 27413                           	psect	text76
 27414  0191F8                     __ptext76:
 27415                           	opt stack 0
 27416  0191F8                     _acquisitionTimerCallback:
 27417                           	opt stack 11
 27418                           
 27419                           ;main.c: 428: ADCC_DischargeSampleCapacitor();
 27420                           
 27421                           ;incstack = 0
 27422  0191F8  EC6C  F0C9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 27423                           
 27424                           ;main.c: 431: ADCC_ClearAccumulator();
 27425  0191FC  EC7A  F0C9         	call	_ADCC_ClearAccumulator	;wreg free
 27426                           
 27427                           ;main.c: 434: ADCC_StartConversion(next_channel);
 27428  019200  0101               	movlb	1	; () banked
 27429  019202  51E8               	movf	_next_channel& (0+255),w,b
 27430  019204  EC56  F0C9         	call	_ADCC_StartConversion
 27431  019208  0012               	return		;funcret
 27432  01920A                     __end_of_acquisitionTimerCallback:
 27433                           	opt stack 0
 27434                           tosu	equ	0xFFF
 27435                           tosh	equ	0xFFE
 27436                           tosl	equ	0xFFD
 27437                           pclatu	equ	0xFFB
 27438                           pclath	equ	0xFFA
 27439                           tblptru	equ	0xFF8
 27440                           tblptrh	equ	0xFF7
 27441                           tblptrl	equ	0xFF6
 27442                           tablat	equ	0xFF5
 27443                           prodh	equ	0xFF4
 27444                           prodl	equ	0xFF3
 27445                           intcon	equ	0xFF2
 27446                           indf0	equ	0xFEF
 27447                           postinc0	equ	0xFEE
 27448                           fsr0h	equ	0xFEA
 27449                           fsr0l	equ	0xFE9
 27450                           wreg	equ	0xFE8
 27451                           indf1	equ	0xFE7
 27452                           postdec1	equ	0xFE5
 27453                           plusw1	equ	0xFE3
 27454                           fsr1h	equ	0xFE2
 27455                           fsr1l	equ	0xFE1
 27456                           bsr	equ	0xFE0
 27457                           indf2	equ	0xFDF
 27458                           postinc2	equ	0xFDE
 27459                           postdec2	equ	0xFDD
 27460                           plusw2	equ	0xFDB
 27461                           fsr2h	equ	0xFDA
 27462                           fsr2l	equ	0xFD9
 27463                           status	equ	0xFD8
 27464                           
 27465 ;; *************** function _ADCC_StartConversion *****************
 27466 ;; Defined at:
 27467 ;;		line 112 in file "mcc_generated_files/adcc.c"
 27468 ;; Parameters:    Size  Location     Type
 27469 ;;  channel         1    wreg     enum E17310
 27470 ;; Auto vars:     Size  Location     Type
 27471 ;;  channel         1    0[BANK1 ] enum E17310
 27472 ;; Return value:  Size  Location     Type
 27473 ;;                  1    wreg      void 
 27474 ;; Registers used:
 27475 ;;		wreg
 27476 ;; Tracked objects:
 27477 ;;		On entry : 0/0
 27478 ;;		On exit  : 0/0
 27479 ;;		Unchanged: 0/0
 27480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27482 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27484 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27485 ;;Total ram usage:        1 bytes
 27486 ;; Hardware stack levels used:    1
 27487 ;; Hardware stack levels required when called:    9
 27488 ;; This function calls:
 27489 ;;		Nothing
 27490 ;; This function is called by:
 27491 ;;		_acquisitionTimerCallback
 27492 ;; This function uses a non-reentrant model
 27493 ;;
 27494                           
 27495                           	psect	text77
 27496  0192AC                     __ptext77:
 27497                           	opt stack 0
 27498  0192AC                     _ADCC_StartConversion:
 27499                           	opt stack 11
 27500                           
 27501                           ;incstack = 0
 27502                           ;ADCC_StartConversion@channel stored from wreg
 27503  0192AC  0101               	movlb	1	; () banked
 27504  0192AE  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 27505                           
 27506                           ;adcc.c: 115: ADPCH = channel;
 27507  0192B0  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 27508                           
 27509                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 27510  0192B4  8E60               	bsf	3936,7,c	;volatile
 27511                           
 27512                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 27513  0192B6  8060               	bsf	3936,0,c	;volatile
 27514  0192B8  0012               	return		;funcret
 27515  0192BA                     __end_of_ADCC_StartConversion:
 27516                           	opt stack 0
 27517                           tosu	equ	0xFFF
 27518                           tosh	equ	0xFFE
 27519                           tosl	equ	0xFFD
 27520                           pclatu	equ	0xFFB
 27521                           pclath	equ	0xFFA
 27522                           tblptru	equ	0xFF8
 27523                           tblptrh	equ	0xFF7
 27524                           tblptrl	equ	0xFF6
 27525                           tablat	equ	0xFF5
 27526                           prodh	equ	0xFF4
 27527                           prodl	equ	0xFF3
 27528                           intcon	equ	0xFF2
 27529                           indf0	equ	0xFEF
 27530                           postinc0	equ	0xFEE
 27531                           fsr0h	equ	0xFEA
 27532                           fsr0l	equ	0xFE9
 27533                           wreg	equ	0xFE8
 27534                           indf1	equ	0xFE7
 27535                           postdec1	equ	0xFE5
 27536                           plusw1	equ	0xFE3
 27537                           fsr1h	equ	0xFE2
 27538                           fsr1l	equ	0xFE1
 27539                           bsr	equ	0xFE0
 27540                           indf2	equ	0xFDF
 27541                           postinc2	equ	0xFDE
 27542                           postdec2	equ	0xFDD
 27543                           plusw2	equ	0xFDB
 27544                           fsr2h	equ	0xFDA
 27545                           fsr2l	equ	0xFD9
 27546                           status	equ	0xFD8
 27547                           
 27548 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 27549 ;; Defined at:
 27550 ;;		line 174 in file "mcc_generated_files/adcc.c"
 27551 ;; Parameters:    Size  Location     Type
 27552 ;;		None
 27553 ;; Auto vars:     Size  Location     Type
 27554 ;;		None
 27555 ;; Return value:  Size  Location     Type
 27556 ;;                  1    wreg      void 
 27557 ;; Registers used:
 27558 ;;		wreg, status,2
 27559 ;; Tracked objects:
 27560 ;;		On entry : 0/0
 27561 ;;		On exit  : 0/0
 27562 ;;		Unchanged: 0/0
 27563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27568 ;;Total ram usage:        0 bytes
 27569 ;; Hardware stack levels used:    1
 27570 ;; Hardware stack levels required when called:    9
 27571 ;; This function calls:
 27572 ;;		Nothing
 27573 ;; This function is called by:
 27574 ;;		_acquisitionTimerCallback
 27575 ;; This function uses a non-reentrant model
 27576 ;;
 27577                           
 27578                           	psect	text78
 27579  0192D8                     __ptext78:
 27580                           	opt stack 0
 27581  0192D8                     _ADCC_DischargeSampleCapacitor:
 27582                           	opt stack 11
 27583                           
 27584                           ;adcc.c: 177: ADPCH = 0x3c;
 27585                           
 27586                           ;incstack = 0
 27587  0192D8  0E3C               	movlw	60
 27588  0192DA  010F               	movlb	15	; () banked
 27589  0192DC  6F5F               	movwf	95,b	;volatile
 27590                           
 27591                           ; BSR set to: 15
 27592  0192DE  0012               	return		;funcret
 27593  0192E0                     __end_of_ADCC_DischargeSampleCapacitor:
 27594                           	opt stack 0
 27595                           tosu	equ	0xFFF
 27596                           tosh	equ	0xFFE
 27597                           tosl	equ	0xFFD
 27598                           pclatu	equ	0xFFB
 27599                           pclath	equ	0xFFA
 27600                           tblptru	equ	0xFF8
 27601                           tblptrh	equ	0xFF7
 27602                           tblptrl	equ	0xFF6
 27603                           tablat	equ	0xFF5
 27604                           prodh	equ	0xFF4
 27605                           prodl	equ	0xFF3
 27606                           intcon	equ	0xFF2
 27607                           indf0	equ	0xFEF
 27608                           postinc0	equ	0xFEE
 27609                           fsr0h	equ	0xFEA
 27610                           fsr0l	equ	0xFE9
 27611                           wreg	equ	0xFE8
 27612                           indf1	equ	0xFE7
 27613                           postdec1	equ	0xFE5
 27614                           plusw1	equ	0xFE3
 27615                           fsr1h	equ	0xFE2
 27616                           fsr1l	equ	0xFE1
 27617                           bsr	equ	0xFE0
 27618                           indf2	equ	0xFDF
 27619                           postinc2	equ	0xFDE
 27620                           postdec2	equ	0xFDD
 27621                           plusw2	equ	0xFDB
 27622                           fsr2h	equ	0xFDA
 27623                           fsr2l	equ	0xFD9
 27624                           status	equ	0xFD8
 27625                           
 27626 ;; *************** function _ADCC_ClearAccumulator *****************
 27627 ;; Defined at:
 27628 ;;		line 204 in file "mcc_generated_files/adcc.c"
 27629 ;; Parameters:    Size  Location     Type
 27630 ;;		None
 27631 ;; Auto vars:     Size  Location     Type
 27632 ;;		None
 27633 ;; Return value:  Size  Location     Type
 27634 ;;                  1    wreg      void 
 27635 ;; Registers used:
 27636 ;;		None
 27637 ;; Tracked objects:
 27638 ;;		On entry : 0/0
 27639 ;;		On exit  : 0/0
 27640 ;;		Unchanged: 0/0
 27641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27646 ;;Total ram usage:        0 bytes
 27647 ;; Hardware stack levels used:    1
 27648 ;; Hardware stack levels required when called:    9
 27649 ;; This function calls:
 27650 ;;		Nothing
 27651 ;; This function is called by:
 27652 ;;		_acquisitionTimerCallback
 27653 ;; This function uses a non-reentrant model
 27654 ;;
 27655                           
 27656                           	psect	text79
 27657  0192F4                     __ptext79:
 27658                           	opt stack 0
 27659  0192F4                     _ADCC_ClearAccumulator:
 27660                           	opt stack 11
 27661                           
 27662                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 27663                           
 27664                           ; BSR set to: 15
 27665                           ;incstack = 0
 27666  0192F4  010F               	movlb	15	; () banked
 27667  0192F6  875A               	bsf	90,3,b	;volatile
 27668                           
 27669                           ; BSR set to: 15
 27670  0192F8  0012               	return		;funcret
 27671  0192FA                     __end_of_ADCC_ClearAccumulator:
 27672                           	opt stack 0
 27673                           tosu	equ	0xFFF
 27674                           tosh	equ	0xFFE
 27675                           tosl	equ	0xFFD
 27676                           pclatu	equ	0xFFB
 27677                           pclath	equ	0xFFA
 27678                           tblptru	equ	0xFF8
 27679                           tblptrh	equ	0xFF7
 27680                           tblptrl	equ	0xFF6
 27681                           tablat	equ	0xFF5
 27682                           prodh	equ	0xFF4
 27683                           prodl	equ	0xFF3
 27684                           intcon	equ	0xFF2
 27685                           indf0	equ	0xFEF
 27686                           postinc0	equ	0xFEE
 27687                           fsr0h	equ	0xFEA
 27688                           fsr0l	equ	0xFE9
 27689                           wreg	equ	0xFE8
 27690                           indf1	equ	0xFE7
 27691                           postdec1	equ	0xFE5
 27692                           plusw1	equ	0xFE3
 27693                           fsr1h	equ	0xFE2
 27694                           fsr1l	equ	0xFE1
 27695                           bsr	equ	0xFE0
 27696                           indf2	equ	0xFDF
 27697                           postinc2	equ	0xFDE
 27698                           postdec2	equ	0xFDD
 27699                           plusw2	equ	0xFDB
 27700                           fsr2h	equ	0xFDA
 27701                           fsr2l	equ	0xFD9
 27702                           status	equ	0xFD8
 27703                           
 27704 ;; *************** function _TMR7_WriteTimer *****************
 27705 ;; Defined at:
 27706 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 27707 ;; Parameters:    Size  Location     Type
 27708 ;;  timerVal        2    0[BANK1 ] unsigned int 
 27709 ;; Auto vars:     Size  Location     Type
 27710 ;;		None
 27711 ;; Return value:  Size  Location     Type
 27712 ;;                  1    wreg      void 
 27713 ;; Registers used:
 27714 ;;		wreg, status,2
 27715 ;; Tracked objects:
 27716 ;;		On entry : 0/0
 27717 ;;		On exit  : 0/0
 27718 ;;		Unchanged: 0/0
 27719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27720 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27723 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27724 ;;Total ram usage:        2 bytes
 27725 ;; Hardware stack levels used:    1
 27726 ;; Hardware stack levels required when called:    9
 27727 ;; This function calls:
 27728 ;;		Nothing
 27729 ;; This function is called by:
 27730 ;;		_TMR7_ISR
 27731 ;;		_TMR7_Reload
 27732 ;; This function uses a non-reentrant model
 27733 ;;
 27734                           
 27735                           	psect	text80
 27736  019052                     __ptext80:
 27737                           	opt stack 0
 27738  019052                     _TMR7_WriteTimer:
 27739                           	opt stack 12
 27740                           
 27741                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 27742                           
 27743                           ; BSR set to: 15
 27744                           ;incstack = 0
 27745  019052  010F               	movlb	15	; () banked
 27746  019054  A530               	btfss	48,2,b	;volatile
 27747  019056  D009               	goto	i1l640
 27748                           
 27749                           ; BSR set to: 15
 27750                           ;tmr7.c: 130: {
 27751                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 27752  019058  9130               	bcf	48,0,b	;volatile
 27753                           
 27754                           ; BSR set to: 15
 27755                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 27756  01905A  0101               	movlb	1	; () banked
 27757  01905C  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 27758  01905E  010F               	movlb	15	; () banked
 27759  019060  6F2F               	movwf	47,b	;volatile
 27760                           
 27761                           ; BSR set to: 15
 27762                           ;tmr7.c: 136: TMR7L = timerVal;
 27763  019062  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 27764                           
 27765                           ; BSR set to: 15
 27766                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 27767  019066  8130               	bsf	48,0,b	;volatile
 27768                           
 27769                           ;tmr7.c: 140: }
 27770  019068  0012               	return	
 27771  01906A                     i1l640:
 27772                           
 27773                           ; BSR set to: 15
 27774                           ;tmr7.c: 141: else
 27775                           ;tmr7.c: 142: {
 27776                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 27777                           
 27778                           ; BSR set to: 15
 27779  01906A  0101               	movlb	1	; () banked
 27780  01906C  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 27781  01906E  010F               	movlb	15	; () banked
 27782  019070  6F2F               	movwf	47,b	;volatile
 27783                           
 27784                           ; BSR set to: 15
 27785                           ;tmr7.c: 145: TMR7L = timerVal;
 27786  019072  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 27787  019076  0012               	return	
 27788  019078                     __end_of_TMR7_WriteTimer:
 27789                           	opt stack 0
 27790                           tosu	equ	0xFFF
 27791                           tosh	equ	0xFFE
 27792                           tosl	equ	0xFFD
 27793                           pclatu	equ	0xFFB
 27794                           pclath	equ	0xFFA
 27795                           tblptru	equ	0xFF8
 27796                           tblptrh	equ	0xFF7
 27797                           tblptrl	equ	0xFF6
 27798                           tablat	equ	0xFF5
 27799                           prodh	equ	0xFF4
 27800                           prodl	equ	0xFF3
 27801                           intcon	equ	0xFF2
 27802                           indf0	equ	0xFEF
 27803                           postinc0	equ	0xFEE
 27804                           fsr0h	equ	0xFEA
 27805                           fsr0l	equ	0xFE9
 27806                           wreg	equ	0xFE8
 27807                           indf1	equ	0xFE7
 27808                           postdec1	equ	0xFE5
 27809                           plusw1	equ	0xFE3
 27810                           fsr1h	equ	0xFE2
 27811                           fsr1l	equ	0xFE1
 27812                           bsr	equ	0xFE0
 27813                           indf2	equ	0xFDF
 27814                           postinc2	equ	0xFDE
 27815                           postdec2	equ	0xFDD
 27816                           plusw2	equ	0xFDB
 27817                           fsr2h	equ	0xFDA
 27818                           fsr2l	equ	0xFD9
 27819                           status	equ	0xFD8
 27820                           
 27821 ;; *************** function _TMR6_ISR *****************
 27822 ;; Defined at:
 27823 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 27824 ;; Parameters:    Size  Location     Type
 27825 ;;		None
 27826 ;; Auto vars:     Size  Location     Type
 27827 ;;		None
 27828 ;; Return value:  Size  Location     Type
 27829 ;;                  1    wreg      void 
 27830 ;; Registers used:
 27831 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 27832 ;; Tracked objects:
 27833 ;;		On entry : 0/0
 27834 ;;		On exit  : 0/0
 27835 ;;		Unchanged: 0/0
 27836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27841 ;;Total ram usage:        0 bytes
 27842 ;; Hardware stack levels used:    1
 27843 ;; Hardware stack levels required when called:   10
 27844 ;; This function calls:
 27845 ;;		Absolute function
 27846 ;;		_TMR6_DefaultInterruptHandler
 27847 ;;		_heartbeatTimerCallback
 27848 ;; This function is called by:
 27849 ;;		_INTERRUPT_InterruptManagerLow
 27850 ;; This function uses a non-reentrant model
 27851 ;;
 27852                           
 27853                           	psect	text81
 27854  018FDC                     __ptext81:
 27855                           	opt stack 0
 27856  018FDC                     _TMR6_ISR:
 27857                           	opt stack 12
 27858                           
 27859                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 27860                           
 27861                           ; BSR set to: 15
 27862                           ;incstack = 0
 27863  018FDC  010E               	movlb	14	; () banked
 27864  018FDE  9B38               	bcf	56,5,b	;volatile
 27865                           
 27866                           ; BSR set to: 14
 27867                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 27868  018FE0  0102               	movlb	2	; () banked
 27869  018FE2  5131               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27870  018FE4  1132               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27871  018FE6  1133               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27872  018FE8  B4D8               	btfsc	status,2,c
 27873  018FEA  0012               	return	
 27874                           
 27875                           ; BSR set to: 2
 27876                           ;tmr6.c: 172: {
 27877                           ;tmr6.c: 173: TMR6_InterruptHandler();
 27878  018FEC  D801               	call	i1u2667_28
 27879  018FEE  0012               	return	
 27880  018FF0                     i1u2667_28:
 27881  018FF0  0005               	push	
 27882  018FF2  6EFA               	movwf	pclath,c
 27883  018FF4  5131               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27884  018FF6  6EFD               	movwf	tosl,c
 27885  018FF8  5132               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27886  018FFA  6EFE               	movwf	tosh,c
 27887  018FFC  5133               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27888  018FFE  6EFF               	movwf	tosu,c
 27889  019000  50FA               	movf	pclath,w,c
 27890  019002  0012               	return		;indir
 27891  019004                     __end_of_TMR6_ISR:
 27892                           	opt stack 0
 27893                           tosu	equ	0xFFF
 27894                           tosh	equ	0xFFE
 27895                           tosl	equ	0xFFD
 27896                           pclatu	equ	0xFFB
 27897                           pclath	equ	0xFFA
 27898                           tblptru	equ	0xFF8
 27899                           tblptrh	equ	0xFF7
 27900                           tblptrl	equ	0xFF6
 27901                           tablat	equ	0xFF5
 27902                           prodh	equ	0xFF4
 27903                           prodl	equ	0xFF3
 27904                           intcon	equ	0xFF2
 27905                           indf0	equ	0xFEF
 27906                           postinc0	equ	0xFEE
 27907                           fsr0h	equ	0xFEA
 27908                           fsr0l	equ	0xFE9
 27909                           wreg	equ	0xFE8
 27910                           indf1	equ	0xFE7
 27911                           postdec1	equ	0xFE5
 27912                           plusw1	equ	0xFE3
 27913                           fsr1h	equ	0xFE2
 27914                           fsr1l	equ	0xFE1
 27915                           bsr	equ	0xFE0
 27916                           indf2	equ	0xFDF
 27917                           postinc2	equ	0xFDE
 27918                           postdec2	equ	0xFDD
 27919                           plusw2	equ	0xFDB
 27920                           fsr2h	equ	0xFDA
 27921                           fsr2l	equ	0xFD9
 27922                           status	equ	0xFD8
 27923                           
 27924 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27925 ;; Defined at:
 27926 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27927 ;; Parameters:    Size  Location     Type
 27928 ;;		None
 27929 ;; Auto vars:     Size  Location     Type
 27930 ;;		None
 27931 ;; Return value:  Size  Location     Type
 27932 ;;                  1    wreg      void 
 27933 ;; Registers used:
 27934 ;;		None
 27935 ;; Tracked objects:
 27936 ;;		On entry : 0/0
 27937 ;;		On exit  : 0/0
 27938 ;;		Unchanged: 0/0
 27939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27944 ;;Total ram usage:        0 bytes
 27945 ;; Hardware stack levels used:    1
 27946 ;; Hardware stack levels required when called:    9
 27947 ;; This function calls:
 27948 ;;		Nothing
 27949 ;; This function is called by:
 27950 ;;		_TMR6_Initialize
 27951 ;;		_TMR6_ISR
 27952 ;; This function uses a non-reentrant model
 27953 ;;
 27954                           
 27955                           	psect	text82
 27956  019306                     __ptext82:
 27957                           	opt stack 0
 27958  019306                     _TMR6_DefaultInterruptHandler:
 27959                           	opt stack 12
 27960                           
 27961                           ;incstack = 0
 27962  019306  0012               	return		;funcret
 27963  019308                     __end_of_TMR6_DefaultInterruptHandler:
 27964                           	opt stack 0
 27965                           tosu	equ	0xFFF
 27966                           tosh	equ	0xFFE
 27967                           tosl	equ	0xFFD
 27968                           pclatu	equ	0xFFB
 27969                           pclath	equ	0xFFA
 27970                           tblptru	equ	0xFF8
 27971                           tblptrh	equ	0xFF7
 27972                           tblptrl	equ	0xFF6
 27973                           tablat	equ	0xFF5
 27974                           prodh	equ	0xFF4
 27975                           prodl	equ	0xFF3
 27976                           intcon	equ	0xFF2
 27977                           indf0	equ	0xFEF
 27978                           postinc0	equ	0xFEE
 27979                           fsr0h	equ	0xFEA
 27980                           fsr0l	equ	0xFE9
 27981                           wreg	equ	0xFE8
 27982                           indf1	equ	0xFE7
 27983                           postdec1	equ	0xFE5
 27984                           plusw1	equ	0xFE3
 27985                           fsr1h	equ	0xFE2
 27986                           fsr1l	equ	0xFE1
 27987                           bsr	equ	0xFE0
 27988                           indf2	equ	0xFDF
 27989                           postinc2	equ	0xFDE
 27990                           postdec2	equ	0xFDD
 27991                           plusw2	equ	0xFDB
 27992                           fsr2h	equ	0xFDA
 27993                           fsr2l	equ	0xFD9
 27994                           status	equ	0xFD8
 27995                           
 27996 ;; *************** function _heartbeatTimerCallback *****************
 27997 ;; Defined at:
 27998 ;;		line 206 in file "main.c"
 27999 ;; Parameters:    Size  Location     Type
 28000 ;;		None
 28001 ;; Auto vars:     Size  Location     Type
 28002 ;;		None
 28003 ;; Return value:  Size  Location     Type
 28004 ;;                  1    wreg      void 
 28005 ;; Registers used:
 28006 ;;		wreg, status,2, status,0
 28007 ;; Tracked objects:
 28008 ;;		On entry : 0/0
 28009 ;;		On exit  : 0/0
 28010 ;;		Unchanged: 0/0
 28011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28014 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28015 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28016 ;;Total ram usage:        1 bytes
 28017 ;; Hardware stack levels used:    1
 28018 ;; Hardware stack levels required when called:    9
 28019 ;; This function calls:
 28020 ;;		Nothing
 28021 ;; This function is called by:
 28022 ;;		_main
 28023 ;;		_TMR6_ISR
 28024 ;; This function uses a non-reentrant model
 28025 ;;
 28026                           
 28027                           	psect	text83
 28028  018C9A                     __ptext83:
 28029                           	opt stack 0
 28030  018C9A                     _heartbeatTimerCallback:
 28031                           	opt stack 12
 28032                           
 28033                           ;main.c: 209: LATFbits.LATF2 = !LATFbits.LATF2;
 28034                           
 28035                           ;incstack = 0
 28036  018C9A  B47E               	btfsc	3966,2,c	;volatile
 28037  018C9C  D004               	goto	i1u1117_20
 28038  018C9E  0101               	movlb	1	; () banked
 28039  018CA0  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 28040  018CA2  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 28041  018CA4  D002               	goto	i1u1118_28
 28042  018CA6                     i1u1117_20:
 28043  018CA6  0101               	movlb	1	; () banked
 28044  018CA8  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 28045  018CAA                     i1u1118_28:
 28046  018CAA  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 28047  018CAC  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 28048  018CAE  507E               	movf	3966,w,c	;volatile
 28049  018CB0  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 28050  018CB2  0BFB               	andlw	-5
 28051  018CB4  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 28052  018CB6  6E7E               	movwf	3966,c	;volatile
 28053                           
 28054                           ;main.c: 212: dev_on_time++;
 28055  018CB8  0E01               	movlw	1
 28056  018CBA  0102               	movlb	2	; () banked
 28057  018CBC  271C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 28058  018CBE  0E00               	movlw	0
 28059  018CC0  231D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 28060  018CC2  231E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 28061  018CC4  231F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 28062                           
 28063                           ; BSR set to: 2
 28064                           ;main.c: 215: if (load_enable) {
 28065  018CC6  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 28066  018CC8  D006               	goto	i1l993
 28067                           
 28068                           ; BSR set to: 2
 28069                           ;main.c: 217: load_on_time++;
 28070  018CCA  0E01               	movlw	1
 28071  018CCC  2718               	addwf	_load_on_time& (0+255),f,b	;volatile
 28072  018CCE  0E00               	movlw	0
 28073  018CD0  2319               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 28074  018CD2  231A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 28075  018CD4  231B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 28076  018CD6                     i1l993:
 28077                           
 28078                           ; BSR set to: 2
 28079  018CD6  0004               	clrwdt		;# 
 28080  018CD8  0012               	return		;funcret
 28081  018CDA                     __end_of_heartbeatTimerCallback:
 28082                           	opt stack 0
 28083                           tosu	equ	0xFFF
 28084                           tosh	equ	0xFFE
 28085                           tosl	equ	0xFFD
 28086                           pclatu	equ	0xFFB
 28087                           pclath	equ	0xFFA
 28088                           tblptru	equ	0xFF8
 28089                           tblptrh	equ	0xFF7
 28090                           tblptrl	equ	0xFF6
 28091                           tablat	equ	0xFF5
 28092                           prodh	equ	0xFF4
 28093                           prodl	equ	0xFF3
 28094                           intcon	equ	0xFF2
 28095                           indf0	equ	0xFEF
 28096                           postinc0	equ	0xFEE
 28097                           fsr0h	equ	0xFEA
 28098                           fsr0l	equ	0xFE9
 28099                           wreg	equ	0xFE8
 28100                           indf1	equ	0xFE7
 28101                           postdec1	equ	0xFE5
 28102                           plusw1	equ	0xFE3
 28103                           fsr1h	equ	0xFE2
 28104                           fsr1l	equ	0xFE1
 28105                           bsr	equ	0xFE0
 28106                           indf2	equ	0xFDF
 28107                           postinc2	equ	0xFDE
 28108                           postdec2	equ	0xFDD
 28109                           plusw2	equ	0xFDB
 28110                           fsr2h	equ	0xFDA
 28111                           fsr2l	equ	0xFD9
 28112                           status	equ	0xFD8
 28113                           
 28114 ;; *************** function _HLVD_ISR *****************
 28115 ;; Defined at:
 28116 ;;		line 118 in file "mcc_generated_files/hlvd.c"
 28117 ;; Parameters:    Size  Location     Type
 28118 ;;		None
 28119 ;; Auto vars:     Size  Location     Type
 28120 ;;		None
 28121 ;; Return value:  Size  Location     Type
 28122 ;;                  1    wreg      void 
 28123 ;; Registers used:
 28124 ;;		None
 28125 ;; Tracked objects:
 28126 ;;		On entry : 0/0
 28127 ;;		On exit  : 0/0
 28128 ;;		Unchanged: 0/0
 28129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28134 ;;Total ram usage:        0 bytes
 28135 ;; Hardware stack levels used:    1
 28136 ;; Hardware stack levels required when called:    9
 28137 ;; This function calls:
 28138 ;;		Nothing
 28139 ;; This function is called by:
 28140 ;;		_INTERRUPT_InterruptManagerLow
 28141 ;; This function uses a non-reentrant model
 28142 ;;
 28143                           
 28144                           	psect	text84
 28145  0192E0                     __ptext84:
 28146                           	opt stack 0
 28147  0192E0                     _HLVD_ISR:
 28148                           	opt stack 13
 28149                           
 28150                           ;hlvd.c: 122: PIR2bits.HLVDIF = 0;
 28151                           
 28152                           ;incstack = 0
 28153  0192E0  010E               	movlb	14	; () banked
 28154  0192E2  9F35               	bcf	53,7,b	;volatile
 28155                           
 28156                           ;hlvd.c: 124: VCC_overvoltage_flag = 1;
 28157  0192E4  845E               	bsf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 28158                           
 28159                           ; BSR set to: 14
 28160  0192E6  0012               	return		;funcret
 28161  0192E8                     __end_of_HLVD_ISR:
 28162                           	opt stack 0
 28163                           tosu	equ	0xFFF
 28164                           tosh	equ	0xFFE
 28165                           tosl	equ	0xFFD
 28166                           pclatu	equ	0xFFB
 28167                           pclath	equ	0xFFA
 28168                           tblptru	equ	0xFF8
 28169                           tblptrh	equ	0xFF7
 28170                           tblptrl	equ	0xFF6
 28171                           tablat	equ	0xFF5
 28172                           prodh	equ	0xFF4
 28173                           prodl	equ	0xFF3
 28174                           intcon	equ	0xFF2
 28175                           indf0	equ	0xFEF
 28176                           postinc0	equ	0xFEE
 28177                           fsr0h	equ	0xFEA
 28178                           fsr0l	equ	0xFE9
 28179                           wreg	equ	0xFE8
 28180                           indf1	equ	0xFE7
 28181                           postdec1	equ	0xFE5
 28182                           plusw1	equ	0xFE3
 28183                           fsr1h	equ	0xFE2
 28184                           fsr1l	equ	0xFE1
 28185                           bsr	equ	0xFE0
 28186                           indf2	equ	0xFDF
 28187                           postinc2	equ	0xFDE
 28188                           postdec2	equ	0xFDD
 28189                           plusw2	equ	0xFDB
 28190                           fsr2h	equ	0xFDA
 28191                           fsr2l	equ	0xFD9
 28192                           status	equ	0xFD8
 28193                           
 28194 ;; *************** function _EUSART2_Transmit_ISR *****************
 28195 ;; Defined at:
 28196 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 28197 ;; Parameters:    Size  Location     Type
 28198 ;;		None
 28199 ;; Auto vars:     Size  Location     Type
 28200 ;;		None
 28201 ;; Return value:  Size  Location     Type
 28202 ;;                  1    wreg      void 
 28203 ;; Registers used:
 28204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28205 ;; Tracked objects:
 28206 ;;		On entry : 0/0
 28207 ;;		On exit  : 0/0
 28208 ;;		Unchanged: 0/0
 28209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28214 ;;Total ram usage:        0 bytes
 28215 ;; Hardware stack levels used:    1
 28216 ;; Hardware stack levels required when called:    9
 28217 ;; This function calls:
 28218 ;;		Nothing
 28219 ;; This function is called by:
 28220 ;;		_EUSART2_Initialize
 28221 ;;		_INTERRUPT_InterruptManagerLow
 28222 ;; This function uses a non-reentrant model
 28223 ;;
 28224                           
 28225                           	psect	text85
 28226  018DFE                     __ptext85:
 28227                           	opt stack 0
 28228  018DFE                     _EUSART2_Transmit_ISR:
 28229                           	opt stack 13
 28230                           
 28231                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 28232                           
 28233                           ; BSR set to: 14
 28234                           ;incstack = 0
 28235  018DFE  0E80               	movlw	128
 28236  018E00  0101               	movlb	1	; () banked
 28237  018E02  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 28238  018E04  D014               	goto	i1l403
 28239                           
 28240                           ; BSR set to: 1
 28241                           ;eusart2.c: 203: {
 28242                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 28243  018E06  51E2               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 28244  018E08  0D01               	mullw	1
 28245  018E0A  0E00               	movlw	low _eusart2TxBuffer
 28246  018E0C  24F3               	addwf	prodl,w,c
 28247  018E0E  6ED9               	movwf	fsr2l,c
 28248  018E10  0E03               	movlw	high _eusart2TxBuffer
 28249  018E12  20F4               	addwfc	prodh,w,c
 28250  018E14  6EDA               	movwf	fsr2h,c
 28251  018E16  50DF               	movf	indf2,w,c
 28252  018E18  010E               	movlb	14	; () banked
 28253  018E1A  6FF2               	movwf	242,b	;volatile
 28254                           
 28255                           ; BSR set to: 14
 28256  018E1C  0101               	movlb	1	; () banked
 28257  018E1E  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 28258                           
 28259                           ; BSR set to: 1
 28260                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 28261  018E20  0E7F               	movlw	127
 28262  018E22  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 28263  018E24  D002               	goto	i1l404
 28264                           
 28265                           ; BSR set to: 1
 28266                           ;eusart2.c: 206: {
 28267                           ;eusart2.c: 207: eusart2TxTail = 0;
 28268  018E26  0E00               	movlw	0
 28269  018E28  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 28270  018E2A                     i1l404:
 28271                           
 28272                           ; BSR set to: 1
 28273                           ;eusart2.c: 208: }
 28274                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 28275                           
 28276                           ; BSR set to: 1
 28277  018E2A  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 28278                           
 28279                           ;eusart2.c: 210: }
 28280  018E2C  0012               	return	
 28281  018E2E                     i1l403:
 28282                           
 28283                           ; BSR set to: 1
 28284                           ;eusart2.c: 211: else
 28285                           ;eusart2.c: 212: {
 28286                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 28287  018E2E  010E               	movlb	14	; () banked
 28288  018E30  9D2C               	bcf	44,6,b	;volatile
 28289  018E32  0012               	return	
 28290  018E34                     __end_of_EUSART2_Transmit_ISR:
 28291                           	opt stack 0
 28292                           tosu	equ	0xFFF
 28293                           tosh	equ	0xFFE
 28294                           tosl	equ	0xFFD
 28295                           pclatu	equ	0xFFB
 28296                           pclath	equ	0xFFA
 28297                           tblptru	equ	0xFF8
 28298                           tblptrh	equ	0xFF7
 28299                           tblptrl	equ	0xFF6
 28300                           tablat	equ	0xFF5
 28301                           prodh	equ	0xFF4
 28302                           prodl	equ	0xFF3
 28303                           intcon	equ	0xFF2
 28304                           indf0	equ	0xFEF
 28305                           postinc0	equ	0xFEE
 28306                           fsr0h	equ	0xFEA
 28307                           fsr0l	equ	0xFE9
 28308                           wreg	equ	0xFE8
 28309                           indf1	equ	0xFE7
 28310                           postdec1	equ	0xFE5
 28311                           plusw1	equ	0xFE3
 28312                           fsr1h	equ	0xFE2
 28313                           fsr1l	equ	0xFE1
 28314                           bsr	equ	0xFE0
 28315                           indf2	equ	0xFDF
 28316                           postinc2	equ	0xFDE
 28317                           postdec2	equ	0xFDD
 28318                           plusw2	equ	0xFDB
 28319                           fsr2h	equ	0xFDA
 28320                           fsr2l	equ	0xFD9
 28321                           status	equ	0xFD8
 28322                           
 28323 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 28324 ;; Defined at:
 28325 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 28326 ;; Parameters:    Size  Location     Type
 28327 ;;		None
 28328 ;; Auto vars:     Size  Location     Type
 28329 ;;		None
 28330 ;; Return value:  Size  Location     Type
 28331 ;;                  1    wreg      void 
 28332 ;; Registers used:
 28333 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28334 ;; Tracked objects:
 28335 ;;		On entry : 0/0
 28336 ;;		On exit  : 0/0
 28337 ;;		Unchanged: 0/0
 28338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28341 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28342 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28343 ;;Total ram usage:       18 bytes
 28344 ;; Hardware stack levels used:    1
 28345 ;; Hardware stack levels required when called:    8
 28346 ;; This function calls:
 28347 ;;		Absolute function
 28348 ;;		_ADCC_ThresholdISR
 28349 ;;		_EUSART2_Receive_ISR
 28350 ;;		_TMR5_ISR
 28351 ;; This function is called by:
 28352 ;;		Interrupt level 2
 28353 ;; This function uses a non-reentrant model
 28354 ;;
 28355                           
 28356                           	psect	intcode
 28357  000008                     __pintcode:
 28358                           	opt stack 0
 28359  000008                     _INTERRUPT_InterruptManagerHigh:
 28360                           	opt stack 11
 28361                           
 28362                           ;incstack = 0
 28363  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 28364  00000A  EF8B  F0BE         	goto	int_func
 28365                           tosu	equ	0xFFF
 28366                           tosh	equ	0xFFE
 28367                           tosl	equ	0xFFD
 28368                           pclatu	equ	0xFFB
 28369                           pclath	equ	0xFFA
 28370                           tblptru	equ	0xFF8
 28371                           tblptrh	equ	0xFF7
 28372                           tblptrl	equ	0xFF6
 28373                           tablat	equ	0xFF5
 28374                           prodh	equ	0xFF4
 28375                           prodl	equ	0xFF3
 28376                           intcon	equ	0xFF2
 28377                           indf0	equ	0xFEF
 28378                           postinc0	equ	0xFEE
 28379                           fsr0h	equ	0xFEA
 28380                           fsr0l	equ	0xFE9
 28381                           wreg	equ	0xFE8
 28382                           indf1	equ	0xFE7
 28383                           postdec1	equ	0xFE5
 28384                           plusw1	equ	0xFE3
 28385                           fsr1h	equ	0xFE2
 28386                           fsr1l	equ	0xFE1
 28387                           bsr	equ	0xFE0
 28388                           indf2	equ	0xFDF
 28389                           postinc2	equ	0xFDE
 28390                           postdec2	equ	0xFDD
 28391                           plusw2	equ	0xFDB
 28392                           fsr2h	equ	0xFDA
 28393                           fsr2l	equ	0xFD9
 28394                           status	equ	0xFD8
 28395                           
 28396                           	psect	intcode_body
 28397  017D16                     __pintcode_body:
 28398                           	opt stack 11
 28399  017D16                     int_func:
 28400                           	opt stack 11
 28401  017D16  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 28402  017D1A  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 28403  017D1E  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 28404  017D22  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 28405  017D26  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 28406  017D2A  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 28407  017D2E  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 28408  017D32  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 28409  017D36  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 28410  017D3A  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 28411  017D3E  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 28412  017D42  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 28413  017D46  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 28414  017D4A  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 28415  017D4E  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 28416  017D52  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 28417  017D56  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 28418  017D5A  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 28419                           
 28420                           ;interrupt_manager.c: 86: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 28421  017D5E  010E               	movlb	14	; () banked
 28422  017D60  BF2C               	btfsc	44,7,b	;volatile
 28423                           
 28424                           ; BSR set to: 14
 28425  017D62  AF36               	btfss	54,7,b	;volatile
 28426  017D64  D00D               	goto	i2l212
 28427                           
 28428                           ; BSR set to: 14
 28429                           ;interrupt_manager.c: 87: {
 28430                           ;interrupt_manager.c: 88: EUSART2_RxDefaultInterruptHandler();
 28431  017D66  D801               	call	i2u2683_48
 28432  017D68  D016               	goto	i2l216
 28433  017D6A                     i2u2683_48:
 28434  017D6A  0005               	push	
 28435  017D6C  6EFA               	movwf	pclath,c
 28436  017D6E  0102               	movlb	2	; () banked
 28437  017D70  5134               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 28438  017D72  6EFD               	movwf	tosl,c
 28439  017D74  5135               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 28440  017D76  6EFE               	movwf	tosh,c
 28441  017D78  5136               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 28442  017D7A  6EFF               	movwf	tosu,c
 28443  017D7C  50FA               	movf	pclath,w,c
 28444  017D7E  0012               	return		;indir
 28445  017D80                     i2l212:
 28446                           
 28447                           ; BSR set to: 14
 28448                           ;interrupt_manager.c: 90: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 28449  017D80  B92E               	btfsc	46,4,b	;volatile
 28450                           
 28451                           ; BSR set to: 14
 28452  017D82  A938               	btfss	56,4,b	;volatile
 28453  017D84  D003               	goto	i2l214
 28454                           
 28455                           ; BSR set to: 14
 28456                           ;interrupt_manager.c: 91: {
 28457                           ;interrupt_manager.c: 92: TMR5_ISR();
 28458  017D86  EC34  F0C7         	call	_TMR5_ISR	;wreg free
 28459                           
 28460                           ;interrupt_manager.c: 93: }
 28461  017D8A  D005               	goto	i2l216
 28462  017D8C                     i2l214:
 28463                           
 28464                           ; BSR set to: 14
 28465                           ;interrupt_manager.c: 94: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 28466  017D8C  B32A               	btfsc	42,1,b	;volatile
 28467                           
 28468                           ; BSR set to: 14
 28469  017D8E  A334               	btfss	52,1,b	;volatile
 28470  017D90  D002               	goto	i2l216
 28471                           
 28472                           ; BSR set to: 14
 28473                           ;interrupt_manager.c: 95: {
 28474                           ;interrupt_manager.c: 96: ADCC_ThresholdISR();
 28475  017D92  EC02  F0C8         	call	_ADCC_ThresholdISR	;wreg free
 28476  017D96                     i2l216:
 28477                           
 28478                           ;interrupt_manager.c: 98: else
 28479                           ;interrupt_manager.c: 99: {
 28480  017D96  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 28481  017D9A  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 28482  017D9E  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 28483  017DA2  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 28484  017DA6  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 28485  017DAA  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 28486  017DAE  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 28487  017DB2  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 28488  017DB6  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 28489  017DBA  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 28490  017DBE  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 28491  017DC2  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 28492  017DC6  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 28493  017DCA  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 28494  017DCE  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 28495  017DD2  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 28496  017DD6  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 28497  017DDA  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 28498  017DDE  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 28499  017DE0  0011               	retfie		f
 28500  017DE2                     __end_of_INTERRUPT_InterruptManagerHigh:
 28501                           	opt stack 0
 28502                           tosu	equ	0xFFF
 28503                           tosh	equ	0xFFE
 28504                           tosl	equ	0xFFD
 28505                           pclatu	equ	0xFFB
 28506                           pclath	equ	0xFFA
 28507                           tblptru	equ	0xFF8
 28508                           tblptrh	equ	0xFF7
 28509                           tblptrl	equ	0xFF6
 28510                           tablat	equ	0xFF5
 28511                           prodh	equ	0xFF4
 28512                           prodl	equ	0xFF3
 28513                           intcon	equ	0xFF2
 28514                           indf0	equ	0xFEF
 28515                           postinc0	equ	0xFEE
 28516                           fsr0h	equ	0xFEA
 28517                           fsr0l	equ	0xFE9
 28518                           wreg	equ	0xFE8
 28519                           indf1	equ	0xFE7
 28520                           postdec1	equ	0xFE5
 28521                           plusw1	equ	0xFE3
 28522                           fsr1h	equ	0xFE2
 28523                           fsr1l	equ	0xFE1
 28524                           bsr	equ	0xFE0
 28525                           indf2	equ	0xFDF
 28526                           postinc2	equ	0xFDE
 28527                           postdec2	equ	0xFDD
 28528                           plusw2	equ	0xFDB
 28529                           fsr2h	equ	0xFDA
 28530                           fsr2l	equ	0xFD9
 28531                           status	equ	0xFD8
 28532                           
 28533 ;; *************** function _TMR5_ISR *****************
 28534 ;; Defined at:
 28535 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 28536 ;; Parameters:    Size  Location     Type
 28537 ;;		None
 28538 ;; Auto vars:     Size  Location     Type
 28539 ;;		None
 28540 ;; Return value:  Size  Location     Type
 28541 ;;                  1    wreg      void 
 28542 ;; Registers used:
 28543 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 28544 ;; Tracked objects:
 28545 ;;		On entry : 0/0
 28546 ;;		On exit  : 0/0
 28547 ;;		Unchanged: 0/0
 28548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28553 ;;Total ram usage:        0 bytes
 28554 ;; Hardware stack levels used:    1
 28555 ;; Hardware stack levels required when called:    1
 28556 ;; This function calls:
 28557 ;;		Absolute function
 28558 ;;		_TMR5_DefaultInterruptHandler
 28559 ;;		_TMR5_WriteTimer
 28560 ;; This function is called by:
 28561 ;;		_INTERRUPT_InterruptManagerHigh
 28562 ;; This function uses a non-reentrant model
 28563 ;;
 28564                           
 28565                           	psect	text87
 28566  018E68                     __ptext87:
 28567                           	opt stack 0
 28568  018E68                     _TMR5_ISR:
 28569                           	opt stack 17
 28570                           
 28571                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 28572                           
 28573                           ;incstack = 0
 28574  018E68  010E               	movlb	14	; () banked
 28575  018E6A  9938               	bcf	56,4,b	;volatile
 28576                           
 28577                           ; BSR set to: 14
 28578                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 28579  018E6C  C1DB  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 28580  018E70  C1DC  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 28581  018E74  ECAD  F0C8         	call	_TMR5_WriteTimer	;wreg free
 28582                           
 28583                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 28584  018E78  0102               	movlb	2	; () banked
 28585  018E7A  5128               	movf	_TMR5_InterruptHandler& (0+255),w,b
 28586  018E7C  1129               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 28587  018E7E  112A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 28588  018E80  B4D8               	btfsc	status,2,c
 28589  018E82  0012               	return	
 28590                           
 28591                           ; BSR set to: 2
 28592                           ;tmr5.c: 172: {
 28593                           ;tmr5.c: 173: TMR5_InterruptHandler();
 28594  018E84  D801               	call	i2u2663_48
 28595  018E86  0012               	return	
 28596  018E88                     i2u2663_48:
 28597  018E88  0005               	push	
 28598  018E8A  6EFA               	movwf	pclath,c
 28599  018E8C  5128               	movf	_TMR5_InterruptHandler& (0+255),w,b
 28600  018E8E  6EFD               	movwf	tosl,c
 28601  018E90  5129               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 28602  018E92  6EFE               	movwf	tosh,c
 28603  018E94  512A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 28604  018E96  6EFF               	movwf	tosu,c
 28605  018E98  50FA               	movf	pclath,w,c
 28606  018E9A  0012               	return		;indir
 28607  018E9C                     __end_of_TMR5_ISR:
 28608                           	opt stack 0
 28609                           tosu	equ	0xFFF
 28610                           tosh	equ	0xFFE
 28611                           tosl	equ	0xFFD
 28612                           pclatu	equ	0xFFB
 28613                           pclath	equ	0xFFA
 28614                           tblptru	equ	0xFF8
 28615                           tblptrh	equ	0xFF7
 28616                           tblptrl	equ	0xFF6
 28617                           tablat	equ	0xFF5
 28618                           prodh	equ	0xFF4
 28619                           prodl	equ	0xFF3
 28620                           intcon	equ	0xFF2
 28621                           indf0	equ	0xFEF
 28622                           postinc0	equ	0xFEE
 28623                           fsr0h	equ	0xFEA
 28624                           fsr0l	equ	0xFE9
 28625                           wreg	equ	0xFE8
 28626                           indf1	equ	0xFE7
 28627                           postdec1	equ	0xFE5
 28628                           plusw1	equ	0xFE3
 28629                           fsr1h	equ	0xFE2
 28630                           fsr1l	equ	0xFE1
 28631                           bsr	equ	0xFE0
 28632                           indf2	equ	0xFDF
 28633                           postinc2	equ	0xFDE
 28634                           postdec2	equ	0xFDD
 28635                           plusw2	equ	0xFDB
 28636                           fsr2h	equ	0xFDA
 28637                           fsr2l	equ	0xFD9
 28638                           status	equ	0xFD8
 28639                           
 28640 ;; *************** function _TMR5_WriteTimer *****************
 28641 ;; Defined at:
 28642 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 28643 ;; Parameters:    Size  Location     Type
 28644 ;;  timerVal        2    0[COMRAM] unsigned int 
 28645 ;; Auto vars:     Size  Location     Type
 28646 ;;		None
 28647 ;; Return value:  Size  Location     Type
 28648 ;;                  1    wreg      void 
 28649 ;; Registers used:
 28650 ;;		wreg, status,2
 28651 ;; Tracked objects:
 28652 ;;		On entry : 0/0
 28653 ;;		On exit  : 0/0
 28654 ;;		Unchanged: 0/0
 28655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28660 ;;Total ram usage:        2 bytes
 28661 ;; Hardware stack levels used:    1
 28662 ;; This function calls:
 28663 ;;		Nothing
 28664 ;; This function is called by:
 28665 ;;		_TMR5_ISR
 28666 ;;		_TMR5_Reload
 28667 ;; This function uses a non-reentrant model
 28668 ;;
 28669                           
 28670                           	psect	text88
 28671  01915A                     __ptext88:
 28672                           	opt stack 0
 28673  01915A                     _TMR5_WriteTimer:
 28674                           	opt stack 17
 28675                           
 28676                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 28677                           
 28678                           ;incstack = 0
 28679  01915A  A4C3               	btfss	4035,2,c	;volatile
 28680  01915C  D007               	goto	i2l714
 28681                           
 28682                           ;tmr5.c: 130: {
 28683                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 28684  01915E  90C3               	bcf	4035,0,c	;volatile
 28685                           
 28686                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 28687  019160  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 28688  019162  6EC2               	movwf	4034,c	;volatile
 28689                           
 28690                           ;tmr5.c: 136: TMR5L = timerVal;
 28691  019164  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 28692                           
 28693                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 28694  019168  80C3               	bsf	4035,0,c	;volatile
 28695                           
 28696                           ;tmr5.c: 140: }
 28697  01916A  0012               	return	
 28698  01916C                     i2l714:
 28699                           
 28700                           ;tmr5.c: 141: else
 28701                           ;tmr5.c: 142: {
 28702                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 28703  01916C  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 28704  01916E  6EC2               	movwf	4034,c	;volatile
 28705                           
 28706                           ;tmr5.c: 145: TMR5L = timerVal;
 28707  019170  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 28708  019174  0012               	return	
 28709  019176                     __end_of_TMR5_WriteTimer:
 28710                           	opt stack 0
 28711                           tosu	equ	0xFFF
 28712                           tosh	equ	0xFFE
 28713                           tosl	equ	0xFFD
 28714                           pclatu	equ	0xFFB
 28715                           pclath	equ	0xFFA
 28716                           tblptru	equ	0xFF8
 28717                           tblptrh	equ	0xFF7
 28718                           tblptrl	equ	0xFF6
 28719                           tablat	equ	0xFF5
 28720                           prodh	equ	0xFF4
 28721                           prodl	equ	0xFF3
 28722                           intcon	equ	0xFF2
 28723                           indf0	equ	0xFEF
 28724                           postinc0	equ	0xFEE
 28725                           fsr0h	equ	0xFEA
 28726                           fsr0l	equ	0xFE9
 28727                           wreg	equ	0xFE8
 28728                           indf1	equ	0xFE7
 28729                           postdec1	equ	0xFE5
 28730                           plusw1	equ	0xFE3
 28731                           fsr1h	equ	0xFE2
 28732                           fsr1l	equ	0xFE1
 28733                           bsr	equ	0xFE0
 28734                           indf2	equ	0xFDF
 28735                           postinc2	equ	0xFDE
 28736                           postdec2	equ	0xFDD
 28737                           plusw2	equ	0xFDB
 28738                           fsr2h	equ	0xFDA
 28739                           fsr2l	equ	0xFD9
 28740                           status	equ	0xFD8
 28741                           
 28742 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 28743 ;; Defined at:
 28744 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 28745 ;; Parameters:    Size  Location     Type
 28746 ;;		None
 28747 ;; Auto vars:     Size  Location     Type
 28748 ;;		None
 28749 ;; Return value:  Size  Location     Type
 28750 ;;                  1    wreg      void 
 28751 ;; Registers used:
 28752 ;;		None
 28753 ;; Tracked objects:
 28754 ;;		On entry : 0/0
 28755 ;;		On exit  : 0/0
 28756 ;;		Unchanged: 0/0
 28757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28762 ;;Total ram usage:        0 bytes
 28763 ;; Hardware stack levels used:    1
 28764 ;; This function calls:
 28765 ;;		Nothing
 28766 ;; This function is called by:
 28767 ;;		_TMR5_Initialize
 28768 ;;		_TMR5_ISR
 28769 ;; This function uses a non-reentrant model
 28770 ;;
 28771                           
 28772                           	psect	text89
 28773  019308                     __ptext89:
 28774                           	opt stack 0
 28775  019308                     _TMR5_DefaultInterruptHandler:
 28776                           	opt stack 17
 28777                           
 28778                           ;incstack = 0
 28779  019308  0012               	return		;funcret
 28780  01930A                     __end_of_TMR5_DefaultInterruptHandler:
 28781                           	opt stack 0
 28782                           tosu	equ	0xFFF
 28783                           tosh	equ	0xFFE
 28784                           tosl	equ	0xFFD
 28785                           pclatu	equ	0xFFB
 28786                           pclath	equ	0xFFA
 28787                           tblptru	equ	0xFF8
 28788                           tblptrh	equ	0xFF7
 28789                           tblptrl	equ	0xFF6
 28790                           tablat	equ	0xFF5
 28791                           prodh	equ	0xFF4
 28792                           prodl	equ	0xFF3
 28793                           intcon	equ	0xFF2
 28794                           indf0	equ	0xFEF
 28795                           postinc0	equ	0xFEE
 28796                           fsr0h	equ	0xFEA
 28797                           fsr0l	equ	0xFE9
 28798                           wreg	equ	0xFE8
 28799                           indf1	equ	0xFE7
 28800                           postdec1	equ	0xFE5
 28801                           plusw1	equ	0xFE3
 28802                           fsr1h	equ	0xFE2
 28803                           fsr1l	equ	0xFE1
 28804                           bsr	equ	0xFE0
 28805                           indf2	equ	0xFDF
 28806                           postinc2	equ	0xFDE
 28807                           postdec2	equ	0xFDD
 28808                           plusw2	equ	0xFDB
 28809                           fsr2h	equ	0xFDA
 28810                           fsr2l	equ	0xFD9
 28811                           status	equ	0xFD8
 28812                           
 28813 ;; *************** function _EUSART2_Receive_ISR *****************
 28814 ;; Defined at:
 28815 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 28816 ;; Parameters:    Size  Location     Type
 28817 ;;		None
 28818 ;; Auto vars:     Size  Location     Type
 28819 ;;		None
 28820 ;; Return value:  Size  Location     Type
 28821 ;;                  1    wreg      void 
 28822 ;; Registers used:
 28823 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28824 ;; Tracked objects:
 28825 ;;		On entry : 0/0
 28826 ;;		On exit  : 0/0
 28827 ;;		Unchanged: 0/0
 28828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28833 ;;Total ram usage:        0 bytes
 28834 ;; Hardware stack levels used:    1
 28835 ;; Hardware stack levels required when called:    3
 28836 ;; This function calls:
 28837 ;;		i2_printf
 28838 ;; This function is called by:
 28839 ;;		_EUSART2_Initialize
 28840 ;;		_INTERRUPT_InterruptManagerHigh
 28841 ;; This function uses a non-reentrant model
 28842 ;;
 28843                           
 28844                           	psect	text90
 28845  017DE2                     __ptext90:
 28846                           	opt stack 0
 28847  017DE2                     _EUSART2_Receive_ISR:
 28848                           	opt stack 15
 28849                           
 28850                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 28851                           
 28852                           ;incstack = 0
 28853  017DE2  010E               	movlb	14	; () banked
 28854  017DE4  A3F5               	btfss	245,1,b	;volatile
 28855  017DE6  D003               	goto	i2l409
 28856                           
 28857                           ; BSR set to: 14
 28858                           ;eusart2.c: 221: {
 28859                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 28860  017DE8  99F5               	bcf	245,4,b	;volatile
 28861                           
 28862                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 28863  017DEA  89F5               	bsf	245,4,b	;volatile
 28864                           
 28865                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 28866  017DEC  827E               	bsf	3966,1,c	;volatile
 28867  017DEE                     i2l409:
 28868                           
 28869                           ; BSR set to: 14
 28870                           ;eusart2.c: 227: }
 28871                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 28872  017DEE  927E               	bcf	3966,1,c	;volatile
 28873                           
 28874                           ; BSR set to: 14
 28875                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 28876  017DF0  0100               	movlb	0	; () banked
 28877  017DF2  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 28878  017DF4  0D01               	mullw	1
 28879  017DF6  0E80               	movlw	low _eusart2RxBuffer
 28880  017DF8  24F3               	addwf	prodl,w,c
 28881  017DFA  6ED9               	movwf	fsr2l,c
 28882  017DFC  0E03               	movlw	high _eusart2RxBuffer
 28883  017DFE  20F4               	addwfc	prodh,w,c
 28884  017E00  6EDA               	movwf	fsr2h,c
 28885  017E02  CEF1 FFDF          	movff	3825,indf2	;volatile
 28886                           
 28887                           ; BSR set to: 0
 28888  017E06  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 28889                           
 28890                           ; BSR set to: 0
 28891                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 28892  017E08  0E3F               	movlw	63
 28893  017E0A  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 28894  017E0C  D002               	goto	i2l410
 28895                           
 28896                           ; BSR set to: 0
 28897                           ;eusart2.c: 234: {
 28898                           ;eusart2.c: 235: eusart2RxHead = 0;
 28899  017E0E  0E00               	movlw	0
 28900  017E10  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 28901  017E12                     i2l410:
 28902                           
 28903                           ; BSR set to: 0
 28904                           ;eusart2.c: 236: }
 28905                           ;eusart2.c: 237: eusart2RxCount++;
 28906                           
 28907                           ; BSR set to: 0
 28908  017E12  0101               	movlb	1	; () banked
 28909  017E14  2BDF               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 28910                           
 28911                           ; BSR set to: 1
 28912                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 28913  017E16  0E0A               	movlw	10
 28914  017E18  010E               	movlb	14	; () banked
 28915  017E1A  19F1               	xorwf	241,w,b	;volatile
 28916  017E1C  B4D8               	btfsc	status,2,c
 28917  017E1E  D004               	goto	i2u1928_40
 28918                           
 28919                           ; BSR set to: 14
 28920  017E20  0E0D               	movlw	13
 28921  017E22  19F1               	xorwf	241,w,b	;volatile
 28922  017E24  A4D8               	btfss	status,2,c
 28923  017E26  D006               	goto	i2l411
 28924  017E28                     i2u1928_40:
 28925                           
 28926                           ; BSR set to: 14
 28927                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 28928  017E28  0100               	movlb	0	; () banked
 28929  017E2A  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 28930                           
 28931                           ; BSR set to: 0
 28932                           ;eusart2.c: 248: RC2REG = 0;
 28933  017E2C  0E00               	movlw	0
 28934  017E2E  010E               	movlb	14	; () banked
 28935  017E30  6FF1               	movwf	241,b	;volatile
 28936                           
 28937                           ;eusart2.c: 250: }
 28938  017E32  D002               	goto	i2l414
 28939  017E34                     i2l411:
 28940                           
 28941                           ; BSR set to: 14
 28942                           ;eusart2.c: 252: else {
 28943                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 28944  017E34  0100               	movlb	0	; () banked
 28945  017E36  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 28946  017E38                     i2l414:
 28947                           
 28948                           ;eusart2.c: 256: }
 28949                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 28950                           
 28951                           ; BSR set to: 0
 28952  017E38  0E08               	movlw	8
 28953  017E3A  010E               	movlb	14	; () banked
 28954  017E3C  19F1               	xorwf	241,w,b	;volatile
 28955  017E3E  A4D8               	btfss	status,2,c
 28956  017E40  0012               	return	
 28957                           
 28958                           ; BSR set to: 14
 28959                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 28960  017E42  0100               	movlb	0	; () banked
 28961  017E44  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 28962  017E46  0D01               	mullw	1
 28963  017E48  0E80               	movlw	low _eusart2RxBuffer
 28964  017E4A  24F3               	addwf	prodl,w,c
 28965  017E4C  6ED9               	movwf	fsr2l,c
 28966  017E4E  0E03               	movlw	high _eusart2RxBuffer
 28967  017E50  20F4               	addwfc	prodh,w,c
 28968  017E52  6EDA               	movwf	fsr2h,c
 28969  017E54  0E00               	movlw	0
 28970  017E56  6EDF               	movwf	indf2,c
 28971                           
 28972                           ; BSR set to: 0
 28973                           ;eusart2.c: 262: eusart2RxHead--;
 28974  017E58  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 28975                           
 28976                           ; BSR set to: 0
 28977                           ;eusart2.c: 265: printf("\033[K");
 28978  017E5A  0EC5               	movlw	low STR_1
 28979  017E5C  6F88               	movwf	i2printf@f& (0+255),b
 28980  017E5E  0EFF               	movlw	high STR_1
 28981  017E60  6F89               	movwf	(i2printf@f+1)& (0+255),b
 28982  017E62  EC66  F090         	call	i2_printf	;wreg free
 28983                           
 28984                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 28985  017E66  0101               	movlb	1	; () banked
 28986  017E68  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 28987  017E6A  0100               	movlb	0	; () banked
 28988  017E6C  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 28989  017E6E  B4D8               	btfsc	status,2,c
 28990  017E70  D00B               	goto	i2l416
 28991                           
 28992                           ; BSR set to: 0
 28993                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 28994  017E72  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 28995  017E74  0D01               	mullw	1
 28996  017E76  0E80               	movlw	low _eusart2RxBuffer
 28997  017E78  24F3               	addwf	prodl,w,c
 28998  017E7A  6ED9               	movwf	fsr2l,c
 28999  017E7C  0E03               	movlw	high _eusart2RxBuffer
 29000  017E7E  20F4               	addwfc	prodh,w,c
 29001  017E80  6EDA               	movwf	fsr2h,c
 29002  017E82  0E00               	movlw	0
 29003  017E84  6EDF               	movwf	indf2,c
 29004                           
 29005                           ; BSR set to: 0
 29006                           ;eusart2.c: 270: eusart2RxHead--;
 29007  017E86  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 29008  017E88                     i2l416:
 29009                           
 29010                           ; BSR set to: 0
 29011                           ;eusart2.c: 272: }
 29012                           ;eusart2.c: 274: RC2REG = 0;
 29013                           
 29014                           ; BSR set to: 0
 29015  017E88  0E00               	movlw	0
 29016  017E8A  010E               	movlb	14	; () banked
 29017  017E8C  6FF1               	movwf	241,b	;volatile
 29018  017E8E  0012               	return	
 29019  017E90                     __end_of_EUSART2_Receive_ISR:
 29020                           	opt stack 0
 29021                           tosu	equ	0xFFF
 29022                           tosh	equ	0xFFE
 29023                           tosl	equ	0xFFD
 29024                           pclatu	equ	0xFFB
 29025                           pclath	equ	0xFFA
 29026                           tblptru	equ	0xFF8
 29027                           tblptrh	equ	0xFF7
 29028                           tblptrl	equ	0xFF6
 29029                           tablat	equ	0xFF5
 29030                           prodh	equ	0xFF4
 29031                           prodl	equ	0xFF3
 29032                           intcon	equ	0xFF2
 29033                           indf0	equ	0xFEF
 29034                           postinc0	equ	0xFEE
 29035                           fsr0h	equ	0xFEA
 29036                           fsr0l	equ	0xFE9
 29037                           wreg	equ	0xFE8
 29038                           indf1	equ	0xFE7
 29039                           postdec1	equ	0xFE5
 29040                           plusw1	equ	0xFE3
 29041                           fsr1h	equ	0xFE2
 29042                           fsr1l	equ	0xFE1
 29043                           bsr	equ	0xFE0
 29044                           indf2	equ	0xFDF
 29045                           postinc2	equ	0xFDE
 29046                           postdec2	equ	0xFDD
 29047                           plusw2	equ	0xFDB
 29048                           fsr2h	equ	0xFDA
 29049                           fsr2l	equ	0xFD9
 29050                           status	equ	0xFD8
 29051                           
 29052 ;; *************** function i2_printf *****************
 29053 ;; Defined at:
 29054 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 29055 ;; Parameters:    Size  Location     Type
 29056 ;;  f               2   40[BANK0 ] PTR const unsigned char 
 29057 ;;		 -> STR_148(30), STR_147(46), STR_146(39), STR_145(62), 
 29058 ;;		 -> STR_144(55), STR_143(433), STR_141(492), STR_139(605), 
 29059 ;;		 -> STR_137(720), STR_135(922), STR_133(33), STR_131(52), 
 29060 ;;		 -> STR_129(45), STR_127(51), STR_125(52), STR_123(46), 
 29061 ;;		 -> STR_121(51), STR_119(53), STR_117(58), STR_115(71), 
 29062 ;;		 -> STR_114(63), STR_113(37), STR_112(46), STR_111(102), 
 29063 ;;		 -> STR_110(86), STR_108(25), STR_106(42), STR_105(53), 
 29064 ;;		 -> STR_104(31), STR_102(29), STR_101(28), STR_99(42), 
 29065 ;;		 -> STR_97(41), STR_95(40), STR_93(56), STR_91(34), 
 29066 ;;		 -> STR_89(34), STR_87(32), STR_85(37), STR_83(58), 
 29067 ;;		 -> STR_81(36), STR_79(36), STR_77(37), STR_75(45), 
 29068 ;;		 -> STR_74(66), STR_72(21), STR_70(24), STR_69(48), 
 29069 ;;		 -> STR_59(54), STR_58(64), STR_56(59), STR_54(85), 
 29070 ;;		 -> STR_52(47), STR_51(17), STR_48(52), STR_46(4), 
 29071 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 29072 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 29073 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 29074 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 29075 ;; Auto vars:     Size  Location     Type
 29076 ;;  printf          4   69[BANK0 ] PTR const unsigned char 
 29077 ;;  printf          4   65[BANK0 ] unsigned long 
 29078 ;;  printf          4   59[BANK0 ] struct .
 29079 ;;  printf          2   77[BANK0 ] int 
 29080 ;;  printf          2   75[BANK0 ] int 
 29081 ;;  printf          2   73[BANK0 ] unsigned short 
 29082 ;;  printf          2   63[BANK0 ] int 
 29083 ;;  printf          2   57[BANK0 ] PTR void [1]
 29084 ;;		 -> ?i2_printf(2), ?_printf(2), 
 29085 ;;  printf          2   55[BANK0 ] unsigned int 
 29086 ;;  printf          2   53[BANK0 ] PTR const unsigned char 
 29087 ;;		 -> STR_162(7), printf@c(1), STR_161(16), STR_160(22), 
 29088 ;;		 -> STR_159(21), STR_158(27), STR_157(41), STR_156(32), 
 29089 ;;		 -> STR_155(19), STR_154(16), STR_153(15), STR_152(16), 
 29090 ;;		 -> STR_151(10), STR_150(13), STR_149(12), ringBufferLUT@channel_name(22), 
 29091 ;;		 -> TRIAC_Firing_Angle(4), 
 29092 ;;  printf          1   79[BANK0 ] char 
 29093 ;;  printf          1   52[BANK0 ] unsigned char 
 29094 ;;  printf          1    0        unsigned char 
 29095 ;; Return value:  Size  Location     Type
 29096 ;;                  2   40[BANK0 ] int 
 29097 ;; Registers used:
 29098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29099 ;; Tracked objects:
 29100 ;;		On entry : 0/0
 29101 ;;		On exit  : 0/0
 29102 ;;		Unchanged: 0/0
 29103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29105 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29106 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29107 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29108 ;;Total ram usage:       40 bytes
 29109 ;; Hardware stack levels used:    1
 29110 ;; Hardware stack levels required when called:    2
 29111 ;; This function calls:
 29112 ;;		i2___awdiv
 29113 ;;		i2___fladd
 29114 ;;		i2___flge
 29115 ;;		i2___flmul
 29116 ;;		i2___flneg
 29117 ;;		i2___flsub
 29118 ;;		i2___fltol
 29119 ;;		i2___lldiv
 29120 ;;		i2___llmod
 29121 ;;		i2___wmul
 29122 ;;		i2___xxtofl
 29123 ;;		i2__div_to_l_
 29124 ;;		i2__tdiv_to_l_
 29125 ;;		i2_fround
 29126 ;;		i2_isdigit
 29127 ;;		i2_putch
 29128 ;;		i2_scale
 29129 ;; This function is called by:
 29130 ;;		_EUSART2_Receive_ISR
 29131 ;; This function uses a non-reentrant model
 29132 ;;
 29133                           
 29134                           	psect	text91
 29135  0120CC                     __ptext91:
 29136                           	opt stack 0
 29137  0120CC                     i2_printf:
 29138                           	opt stack 15
 29139                           
 29140                           ;doprnt.c: 466: va_list ap;
 29141                           ;doprnt.c: 499: signed char c;
 29142                           ;doprnt.c: 501: int width;
 29143                           ;doprnt.c: 504: int prec;
 29144                           ;doprnt.c: 508: unsigned short flag;
 29145                           ;doprnt.c: 515: char d;
 29146                           ;doprnt.c: 516: double fval;
 29147                           ;doprnt.c: 517: int exp;
 29148                           ;doprnt.c: 523: union {
 29149                           ;doprnt.c: 524: unsigned long vd;
 29150                           ;doprnt.c: 525: double integ;
 29151                           ;doprnt.c: 526: } tmpval;
 29152                           ;doprnt.c: 528: unsigned long val;
 29153                           ;doprnt.c: 529: unsigned len;
 29154                           ;doprnt.c: 530: const char * cp;
 29155                           ;doprnt.c: 533: *ap = __va_start();
 29156                           
 29157                           ; BSR set to: 14
 29158                           ;incstack = 0
 29159  0120CC  0E8A               	movlw	low (?i2_printf+2)
 29160  0120CE  0100               	movlb	0	; () banked
 29161  0120D0  6F99               	movwf	i2printf@ap& (0+255),b
 29162  0120D2  0E00               	movlw	high (?i2_printf+2)
 29163  0120D4  6F9A               	movwf	(i2printf@ap+1)& (0+255),b
 29164                           
 29165                           ;doprnt.c: 536: while(c = *f++) {
 29166  0120D6  EF29  F097         	goto	i2u1914_40
 29167  0120DA                     
 29168                           ; BSR set to: 0
 29169                           ;doprnt.c: 538: if(c != '%')
 29170                           
 29171                           ; BSR set to: 0
 29172  0120DA  0E25               	movlw	37
 29173  0120DC  19AF               	xorwf	i2printf@c& (0+255),w,b
 29174  0120DE  B4D8               	btfsc	status,2,c
 29175  0120E0  D005               	goto	i2l1456
 29176                           
 29177                           ; BSR set to: 0
 29178                           ;doprnt.c: 540: {
 29179                           ;doprnt.c: 541: (putch(c) );
 29180  0120E2  51AF               	movf	i2printf@c& (0+255),w,b
 29181  0120E4  EC63  F0C9         	call	i2_putch
 29182                           
 29183                           ;doprnt.c: 542: continue;
 29184  0120E8  EF29  F097         	goto	i2u1914_40
 29185  0120EC                     i2l1456:
 29186                           
 29187                           ;doprnt.c: 543: }
 29188                           ;doprnt.c: 546: width = 0;
 29189  0120EC  0E00               	movlw	0
 29190  0120EE  0100               	movlb	0	; () banked
 29191  0120F0  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 29192  0120F2  0E00               	movlw	0
 29193  0120F4  6FAB               	movwf	i2printf@width& (0+255),b
 29194                           
 29195                           ;doprnt.c: 548: flag = 0;
 29196  0120F6  0E00               	movlw	0
 29197  0120F8  6FAA               	movwf	(i2printf@flag+1)& (0+255),b
 29198  0120FA  0E00               	movlw	0
 29199  0120FC  6FA9               	movwf	i2printf@flag& (0+255),b
 29200                           
 29201                           ; BSR set to: 0
 29202                           ;doprnt.c: 551: switch(*f) {
 29203                           
 29204                           ;doprnt.c: 550: for(;;) {
 29205  0120FE  D004               	goto	i2l1458
 29206  012100                     
 29207                           ;doprnt.c: 580: flag |= 0x04;
 29208                           
 29209                           ; BSR set to: 0
 29210  012100  0100               	movlb	0	; () banked
 29211  012102  85A9               	bsf	i2printf@flag& (0+255),2,b
 29212                           
 29213                           ;doprnt.c: 581: f++;
 29214  012104  4B88               	infsnz	i2printf@f& (0+255),f,b
 29215  012106  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 29216  012108                     i2l1458:
 29217                           
 29218                           ; BSR set to: 0
 29219  012108  C088  FFF6         	movff	i2printf@f,tblptrl
 29220  01210C  C089  FFF7         	movff	i2printf@f+1,tblptrh
 29221  012110  0E00               	movlw	low (__mediumconst shr (0+16))
 29222  012112  6EF8               	movwf	tblptru,c
 29223  012114  0E0D               	movlw	(high __ramtop+-1)
 29224  012116  64F7               	cpfsgt	tblptrh,c
 29225  012118  D003               	bra	i2u1840_47
 29226  01211A  0008               	tblrd		*
 29227  01211C  50F5               	movf	tablat,w,c
 29228  01211E  D005               	bra	i2u1840_40
 29229  012120                     i2u1840_47:
 29230  012120  CFF6 FFE9          	movff	tblptrl,fsr0l
 29231  012124  CFF7 FFEA          	movff	tblptrh,fsr0h
 29232  012128  50EF               	movf	indf0,w,c
 29233  01212A                     i2u1840_40:
 29234                           
 29235                           ; Switch size 1, requested type "space"
 29236                           ; Number of cases is 1, Range of values is 48 to 48
 29237                           ; switch strategies available:
 29238                           ; Name         Instructions Cycles
 29239                           ; simple_byte            4     3 (average)
 29240                           ;	Chosen strategy is simple_byte
 29241  01212A  0A30               	xorlw	48	; case 48
 29242  01212C  B4D8               	btfsc	status,2,c
 29243  01212E  D7E8               	goto	i2l1459
 29244                           
 29245                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 29246                           
 29247                           ;doprnt.c: 586: }
 29248                           
 29249                           ;doprnt.c: 585: break;
 29250  012130  C088  FFF6         	movff	i2printf@f,tblptrl
 29251  012134  C089  FFF7         	movff	i2printf@f+1,tblptrh
 29252  012138  0E00               	movlw	low (__mediumconst shr (0+16))
 29253  01213A  6EF8               	movwf	tblptru,c
 29254  01213C  0E0D               	movlw	(high __ramtop+-1)
 29255  01213E  64F7               	cpfsgt	tblptrh,c
 29256  012140  D003               	bra	i2u1841_47
 29257  012142  0008               	tblrd		*
 29258  012144  50F5               	movf	tablat,w,c
 29259  012146  D005               	bra	i2u1841_40
 29260  012148                     i2u1841_47:
 29261  012148  CFF6 FFE9          	movff	tblptrl,fsr0l
 29262  01214C  CFF7 FFEA          	movff	tblptrh,fsr0h
 29263  012150  50EF               	movf	indf0,w,c
 29264  012152                     i2u1841_40:
 29265  012152  EC82  F0C8         	call	i2_isdigit
 29266  012156  A0D8               	btfss	status,0,c
 29267  012158  D04B               	goto	i2u1845_40
 29268                           
 29269                           ;doprnt.c: 598: width = 0;
 29270  01215A  0E00               	movlw	0
 29271  01215C  0100               	movlb	0	; () banked
 29272  01215E  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 29273  012160  0E00               	movlw	0
 29274  012162  6FAB               	movwf	i2printf@width& (0+255),b
 29275  012164                     
 29276                           ;doprnt.c: 600: width *= 10;
 29277                           
 29278                           ; BSR set to: 0
 29279  012164  C0AB  F001         	movff	i2printf@width,i2___wmul@multiplier
 29280  012168  C0AC  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 29281  01216C  0E00               	movlw	0
 29282  01216E  6E04               	movwf	i2___wmul@multiplicand+1,c
 29283  012170  0E0A               	movlw	10
 29284  012172  6E03               	movwf	i2___wmul@multiplicand,c
 29285  012174  EC3C  F0C8         	call	i2___wmul	;wreg free
 29286  012178  C001  F0AB         	movff	?i2___wmul,i2printf@width
 29287  01217C  C002  F0AC         	movff	?i2___wmul+1,i2printf@width+1
 29288                           
 29289                           ;doprnt.c: 601: width += *f++ - '0';
 29290  012180  0ED0               	movlw	208
 29291  012182  0100               	movlb	0	; () banked
 29292  012184  6F8A               	movwf	??i2_printf& (0+255),b
 29293  012186  0EFF               	movlw	255
 29294  012188  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 29295  01218A  C088  FFF6         	movff	i2printf@f,tblptrl
 29296  01218E  C089  FFF7         	movff	i2printf@f+1,tblptrh
 29297  012192  0E00               	movlw	low (__mediumconst shr (0+16))
 29298  012194  6EF8               	movwf	tblptru,c
 29299  012196  0E0D               	movlw	(high __ramtop+-1)
 29300  012198  64F7               	cpfsgt	tblptrh,c
 29301  01219A  D003               	bra	i2u1843_47
 29302  01219C  0008               	tblrd		*
 29303  01219E  50F5               	movf	tablat,w,c
 29304  0121A0  D005               	bra	i2u1843_40
 29305  0121A2                     i2u1843_47:
 29306  0121A2  CFF6 FFE9          	movff	tblptrl,fsr0l
 29307  0121A6  CFF7 FFEA          	movff	tblptrh,fsr0h
 29308  0121AA  50EF               	movf	indf0,w,c
 29309  0121AC                     i2u1843_40:
 29310  0121AC  0100               	movlb	0	; () banked
 29311  0121AE  6F8C               	movwf	(??i2_printf+2)& (0+255),b
 29312  0121B0  6B8D               	clrf	(??i2_printf+3)& (0+255),b
 29313  0121B2  518A               	movf	??i2_printf& (0+255),w,b
 29314  0121B4  278C               	addwf	(??i2_printf+2)& (0+255),f,b
 29315  0121B6  518B               	movf	(??i2_printf+1)& (0+255),w,b
 29316  0121B8  238D               	addwfc	(??i2_printf+3)& (0+255),f,b
 29317  0121BA  518C               	movf	(??i2_printf+2)& (0+255),w,b
 29318  0121BC  27AB               	addwf	i2printf@width& (0+255),f,b
 29319  0121BE  518D               	movf	(??i2_printf+3)& (0+255),w,b
 29320  0121C0  23AC               	addwfc	(i2printf@width+1)& (0+255),f,b
 29321                           
 29322                           ; BSR set to: 0
 29323  0121C2  4B88               	infsnz	i2printf@f& (0+255),f,b
 29324  0121C4  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 29325                           
 29326                           ; BSR set to: 0
 29327                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 29328  0121C6  C088  FFF6         	movff	i2printf@f,tblptrl
 29329  0121CA  C089  FFF7         	movff	i2printf@f+1,tblptrh
 29330  0121CE  0E00               	movlw	low (__mediumconst shr (0+16))
 29331  0121D0  6EF8               	movwf	tblptru,c
 29332  0121D2  0E0D               	movlw	(high __ramtop+-1)
 29333  0121D4  64F7               	cpfsgt	tblptrh,c
 29334  0121D6  D003               	bra	i2u1844_47
 29335  0121D8  0008               	tblrd		*
 29336  0121DA  50F5               	movf	tablat,w,c
 29337  0121DC  D005               	bra	i2u1844_40
 29338  0121DE                     i2u1844_47:
 29339  0121DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 29340  0121E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 29341  0121E6  50EF               	movf	indf0,w,c
 29342  0121E8                     i2u1844_40:
 29343  0121E8  EC82  F0C8         	call	i2_isdigit
 29344  0121EC  B0D8               	btfsc	status,0,c
 29345  0121EE  D7BA               	goto	i2l1464
 29346  0121F0                     i2u1845_40:
 29347                           
 29348                           ;doprnt.c: 608: }
 29349                           ;doprnt.c: 611: if(*f == '.') {
 29350  0121F0  C088  FFF6         	movff	i2printf@f,tblptrl
 29351  0121F4  C089  FFF7         	movff	i2printf@f+1,tblptrh
 29352  0121F8  0E00               	movlw	low (__mediumconst shr (0+16))
 29353  0121FA  6EF8               	movwf	tblptru,c
 29354  0121FC  0E0D               	movlw	(high __ramtop+-1)
 29355  0121FE  64F7               	cpfsgt	tblptrh,c
 29356  012200  D003               	bra	i2u1846_47
 29357  012202  0008               	tblrd		*
 29358  012204  50F5               	movf	tablat,w,c
 29359  012206  D005               	bra	i2u1846_40
 29360  012208                     i2u1846_47:
 29361  012208  CFF6 FFE9          	movff	tblptrl,fsr0l
 29362  01220C  CFF7 FFEA          	movff	tblptrh,fsr0h
 29363  012210  50EF               	movf	indf0,w,c
 29364  012212                     i2u1846_40:
 29365  012212  0A2E               	xorlw	46
 29366  012214  A4D8               	btfss	status,2,c
 29367  012216  D048               	goto	i2l1466
 29368                           
 29369                           ;doprnt.c: 612: flag |= 0x4000;
 29370  012218  0100               	movlb	0	; () banked
 29371  01221A  8DAA               	bsf	(i2printf@flag+1)& (0+255),6,b
 29372                           
 29373                           ;doprnt.c: 613: f++;
 29374  01221C  4B88               	infsnz	i2printf@f& (0+255),f,b
 29375  01221E  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 29376                           
 29377                           ; BSR set to: 0
 29378                           ;doprnt.c: 620: {
 29379                           ;doprnt.c: 621: prec = 0;
 29380  012220  0E00               	movlw	0
 29381  012222  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 29382  012224  0E00               	movlw	0
 29383  012226  6FAD               	movwf	i2printf@prec& (0+255),b
 29384                           
 29385                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 29386  012228  D029               	goto	i2l1467
 29387  01222A                     
 29388                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 29389                           
 29390                           ; BSR set to: 0
 29391  01222A  C0AD  F001         	movff	i2printf@prec,i2___wmul@multiplier
 29392  01222E  C0AE  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 29393  012232  0E00               	movlw	0
 29394  012234  6E04               	movwf	i2___wmul@multiplicand+1,c
 29395  012236  0E0A               	movlw	10
 29396  012238  6E03               	movwf	i2___wmul@multiplicand,c
 29397  01223A  EC3C  F0C8         	call	i2___wmul	;wreg free
 29398  01223E  C088  FFF6         	movff	i2printf@f,tblptrl
 29399  012242  C089  FFF7         	movff	i2printf@f+1,tblptrh
 29400  012246  0E00               	movlw	low (__mediumconst shr (0+16))
 29401  012248  6EF8               	movwf	tblptru,c
 29402  01224A  0E0D               	movlw	(high __ramtop+-1)
 29403  01224C  64F7               	cpfsgt	tblptrh,c
 29404  01224E  D003               	bra	i2u1848_47
 29405  012250  0008               	tblrd		*
 29406  012252  50F5               	movf	tablat,w,c
 29407  012254  D005               	bra	i2u1848_40
 29408  012256                     i2u1848_47:
 29409  012256  CFF6 FFE9          	movff	tblptrl,fsr0l
 29410  01225A  CFF7 FFEA          	movff	tblptrh,fsr0h
 29411  01225E  50EF               	movf	indf0,w,c
 29412  012260                     i2u1848_40:
 29413  012260  0100               	movlb	0	; () banked
 29414  012262  6F8A               	movwf	??i2_printf& (0+255),b
 29415  012264  518A               	movf	??i2_printf& (0+255),w,b
 29416  012266  2601               	addwf	?i2___wmul,f,c
 29417  012268  0E00               	movlw	0
 29418  01226A  2202               	addwfc	?i2___wmul+1,f,c
 29419  01226C  0ED0               	movlw	208
 29420  01226E  2401               	addwf	?i2___wmul,w,c
 29421  012270  6FAD               	movwf	i2printf@prec& (0+255),b
 29422  012272  0EFF               	movlw	255
 29423  012274  2002               	addwfc	?i2___wmul+1,w,c
 29424  012276  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 29425                           
 29426                           ; BSR set to: 0
 29427  012278  4B88               	infsnz	i2printf@f& (0+255),f,b
 29428  01227A  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 29429  01227C                     i2l1467:
 29430                           
 29431                           ; BSR set to: 0
 29432                           
 29433                           ; BSR set to: 0
 29434  01227C  C088  FFF6         	movff	i2printf@f,tblptrl
 29435  012280  C089  FFF7         	movff	i2printf@f+1,tblptrh
 29436  012284  0E00               	movlw	low (__mediumconst shr (0+16))
 29437  012286  6EF8               	movwf	tblptru,c
 29438  012288  0E0D               	movlw	(high __ramtop+-1)
 29439  01228A  64F7               	cpfsgt	tblptrh,c
 29440  01228C  D003               	bra	i2u1849_47
 29441  01228E  0008               	tblrd		*
 29442  012290  50F5               	movf	tablat,w,c
 29443  012292  D005               	bra	i2u1849_40
 29444  012294                     i2u1849_47:
 29445  012294  CFF6 FFE9          	movff	tblptrl,fsr0l
 29446  012298  CFF7 FFEA          	movff	tblptrh,fsr0h
 29447  01229C  50EF               	movf	indf0,w,c
 29448  01229E                     i2u1849_40:
 29449  01229E  EC82  F0C8         	call	i2_isdigit
 29450  0122A2  A0D8               	btfss	status,0,c
 29451  0122A4  D0A4               	goto	i2l1471
 29452  0122A6  D7C1               	goto	i2l1468
 29453  0122A8                     i2l1466:
 29454                           
 29455                           ;doprnt.c: 626: prec = 0;
 29456  0122A8  0E00               	movlw	0
 29457  0122AA  0100               	movlb	0	; () banked
 29458  0122AC  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 29459  0122AE  0E00               	movlw	0
 29460  0122B0  6FAD               	movwf	i2printf@prec& (0+255),b
 29461                           
 29462                           ; BSR set to: 0
 29463                           ;doprnt.c: 628: flag |= 0x1000;
 29464  0122B2  89AA               	bsf	(i2printf@flag+1)& (0+255),4,b
 29465                           
 29466                           ; BSR set to: 0
 29467                           ;doprnt.c: 630: }
 29468                           ;doprnt.c: 635: switch(c = *f++) {
 29469  0122B4  D09C               	goto	i2l1471
 29470  0122B6                     
 29471                           ; BSR set to: 0
 29472                           ;doprnt.c: 663: flag |= 0x400;
 29473                           
 29474                           ; BSR set to: 0
 29475  0122B6  85AA               	bsf	(i2printf@flag+1)& (0+255),2,b
 29476                           
 29477                           ; BSR set to: 0
 29478                           ;doprnt.c: 698: case 'i':
 29479                           ;doprnt.c: 699: break;
 29480                           
 29481                           ; BSR set to: 0
 29482                           
 29483                           ;doprnt.c: 697: case 'd':
 29484                           
 29485                           ;doprnt.c: 664: break;
 29486  0122B8  D0D1               	goto	i2l1475
 29487  0122BA                     
 29488                           ; BSR set to: 0
 29489                           ;doprnt.c: 718: case 'x':
 29490                           ;doprnt.c: 721: flag |= 0x80;
 29491                           
 29492                           ; BSR set to: 0
 29493                           
 29494                           ; BSR set to: 0
 29495  0122BA  8FA9               	bsf	i2printf@flag& (0+255),7,b
 29496                           
 29497                           ;doprnt.c: 723: break;
 29498  0122BC  D0CF               	goto	i2l1475
 29499  0122BE                     
 29500                           ; BSR set to: 0
 29501                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 29502                           
 29503                           ; BSR set to: 0
 29504  0122BE  C099  FFD9         	movff	i2printf@ap,fsr2l
 29505  0122C2  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 29506  0122C6  CFDE F095          	movff	postinc2,i2printf@cp
 29507  0122CA  CFDD F096          	movff	postdec2,i2printf@cp+1
 29508                           
 29509                           ; BSR set to: 0
 29510  0122CE  0E02               	movlw	2
 29511  0122D0  2799               	addwf	i2printf@ap& (0+255),f,b
 29512  0122D2  0E00               	movlw	0
 29513  0122D4  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 29514                           
 29515                           ; BSR set to: 0
 29516                           ;doprnt.c: 740: if(!cp)
 29517  0122D6  5195               	movf	i2printf@cp& (0+255),w,b
 29518  0122D8  1196               	iorwf	(i2printf@cp+1)& (0+255),w,b
 29519  0122DA  A4D8               	btfss	status,2,c
 29520  0122DC  D004               	goto	i2l1481
 29521                           
 29522                           ; BSR set to: 0
 29523                           ;doprnt.c: 741: cp = "(null)";
 29524  0122DE  0E86               	movlw	low STR_162
 29525  0122E0  6F95               	movwf	i2printf@cp& (0+255),b
 29526  0122E2  0EFF               	movlw	high STR_162
 29527  0122E4  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 29528  0122E6                     i2l1481:
 29529                           
 29530                           ; BSR set to: 0
 29531                           ;doprnt.c: 745: len = 0;
 29532                           
 29533                           ; BSR set to: 0
 29534  0122E6  0E00               	movlw	0
 29535  0122E8  6F98               	movwf	(i2printf@len+1)& (0+255),b
 29536  0122EA  0E00               	movlw	0
 29537  0122EC  6F97               	movwf	i2printf@len& (0+255),b
 29538                           
 29539                           ;doprnt.c: 746: while(cp[len])
 29540  0122EE  D003               	goto	i2l1482
 29541  0122F0                     
 29542                           ;doprnt.c: 747: len++;
 29543                           
 29544                           ; BSR set to: 0
 29545  0122F0  0100               	movlb	0	; () banked
 29546  0122F2  4B97               	infsnz	i2printf@len& (0+255),f,b
 29547  0122F4  2B98               	incf	(i2printf@len+1)& (0+255),f,b
 29548  0122F6                     i2l1482:
 29549                           
 29550                           ; BSR set to: 0
 29551                           
 29552                           ; BSR set to: 0
 29553  0122F6  5197               	movf	i2printf@len& (0+255),w,b
 29554  0122F8  2595               	addwf	i2printf@cp& (0+255),w,b
 29555  0122FA  6F8A               	movwf	??i2_printf& (0+255),b
 29556  0122FC  5198               	movf	(i2printf@len+1)& (0+255),w,b
 29557  0122FE  2196               	addwfc	(i2printf@cp+1)& (0+255),w,b
 29558  012300  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 29559  012302  C08A  FFF6         	movff	??i2_printf,tblptrl
 29560  012306  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 29561  01230A  0E00               	movlw	low (__mediumconst shr (0+16))
 29562  01230C  6EF8               	movwf	tblptru,c
 29563  01230E  0E0D               	movlw	(high __ramtop+-1)
 29564  012310  64F7               	cpfsgt	tblptrh,c
 29565  012312  D003               	bra	i2u1852_47
 29566  012314  0008               	tblrd		*
 29567  012316  50F5               	movf	tablat,w,c
 29568  012318  D005               	bra	i2u1852_40
 29569  01231A                     i2u1852_47:
 29570  01231A  CFF6 FFE9          	movff	tblptrl,fsr0l
 29571  01231E  CFF7 FFEA          	movff	tblptrh,fsr0h
 29572  012322  50EF               	movf	indf0,w,c
 29573  012324                     i2u1852_40:
 29574  012324  0900               	iorlw	0
 29575  012326  A4D8               	btfss	status,2,c
 29576  012328  D7E3               	goto	i2l1483
 29577  01232A                     i2u1853_40:
 29578                           
 29579                           ;doprnt.c: 753: if(prec && prec < len)
 29580                           
 29581                           ;doprnt.c: 750: dostring:
 29582  01232A  0100               	movlb	0	; () banked
 29583  01232C  51AD               	movf	i2printf@prec& (0+255),w,b
 29584  01232E  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 29585  012330  B4D8               	btfsc	status,2,c
 29586  012332  D00A               	goto	i2l1486
 29587                           
 29588                           ; BSR set to: 0
 29589  012334  5197               	movf	i2printf@len& (0+255),w,b
 29590  012336  5DAD               	subwf	i2printf@prec& (0+255),w,b
 29591  012338  5198               	movf	(i2printf@len+1)& (0+255),w,b
 29592  01233A  59AE               	subwfb	(i2printf@prec+1)& (0+255),w,b
 29593  01233C  B0D8               	btfsc	status,0,c
 29594  01233E  D004               	goto	i2l1486
 29595                           
 29596                           ; BSR set to: 0
 29597                           ;doprnt.c: 754: len = prec;
 29598  012340  C0AD  F097         	movff	i2printf@prec,i2printf@len
 29599  012344  C0AE  F098         	movff	i2printf@prec+1,i2printf@len+1
 29600  012348                     i2l1486:
 29601                           
 29602                           ; BSR set to: 0
 29603                           ;doprnt.c: 757: if(width > len)
 29604                           
 29605                           ; BSR set to: 0
 29606  012348  51AB               	movf	i2printf@width& (0+255),w,b
 29607  01234A  5D97               	subwf	i2printf@len& (0+255),w,b
 29608  01234C  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 29609  01234E  5998               	subwfb	(i2printf@len+1)& (0+255),w,b
 29610  012350  B0D8               	btfsc	status,0,c
 29611  012352  D005               	goto	i2l1487
 29612                           
 29613                           ; BSR set to: 0
 29614                           ;doprnt.c: 758: width -= len;
 29615  012354  5197               	movf	i2printf@len& (0+255),w,b
 29616  012356  5FAB               	subwf	i2printf@width& (0+255),f,b
 29617  012358  5198               	movf	(i2printf@len+1)& (0+255),w,b
 29618  01235A  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 29619  01235C  D008               	goto	i2l1489
 29620  01235E                     i2l1487:
 29621                           
 29622                           ; BSR set to: 0
 29623                           ;doprnt.c: 759: else
 29624                           ;doprnt.c: 760: width = 0;
 29625                           
 29626                           ; BSR set to: 0
 29627  01235E  0E00               	movlw	0
 29628  012360  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 29629  012362  0E00               	movlw	0
 29630  012364  6FAB               	movwf	i2printf@width& (0+255),b
 29631                           
 29632                           ; BSR set to: 0
 29633                           ;doprnt.c: 764: while(width--)
 29634  012366  D003               	goto	i2l1489
 29635  012368                     i2l14862:
 29636                           
 29637                           ; BSR set to: 0
 29638                           ;doprnt.c: 765: (putch(' ') );
 29639  012368  0E20               	movlw	32
 29640  01236A  EC63  F0C9         	call	i2_putch
 29641  01236E                     i2l1489:
 29642  01236E  0100               	movlb	0	; () banked
 29643  012370  07AB               	decf	i2printf@width& (0+255),f,b
 29644  012372  A0D8               	btfss	status,0,c
 29645  012374  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 29646  012376  29AB               	incf	i2printf@width& (0+255),w,b
 29647  012378  E1F7               	bnz	i2l14862
 29648  01237A  29AC               	incf	(i2printf@width+1)& (0+255),w,b
 29649  01237C  B4D8               	btfsc	status,2,c
 29650  01237E  D017               	goto	i2l1492
 29651  012380  D7F3               	goto	i2l1490
 29652  012382                     i2l14866:
 29653                           
 29654                           ; BSR set to: 0
 29655                           ;doprnt.c: 768: (putch(*cp++) );
 29656  012382  C095  FFF6         	movff	i2printf@cp,tblptrl
 29657  012386  C096  FFF7         	movff	i2printf@cp+1,tblptrh
 29658  01238A  0E00               	movlw	low (__mediumconst shr (0+16))
 29659  01238C  6EF8               	movwf	tblptru,c
 29660  01238E  0E0D               	movlw	(high __ramtop+-1)
 29661  012390  64F7               	cpfsgt	tblptrh,c
 29662  012392  D003               	bra	i2u1858_47
 29663  012394  0008               	tblrd		*
 29664  012396  50F5               	movf	tablat,w,c
 29665  012398  D005               	bra	i2u1858_40
 29666  01239A                     i2u1858_47:
 29667  01239A  CFF6 FFE9          	movff	tblptrl,fsr0l
 29668  01239E  CFF7 FFEA          	movff	tblptrh,fsr0h
 29669  0123A2  50EF               	movf	indf0,w,c
 29670  0123A4                     i2u1858_40:
 29671  0123A4  EC63  F0C9         	call	i2_putch
 29672  0123A8  0100               	movlb	0	; () banked
 29673  0123AA  4B95               	infsnz	i2printf@cp& (0+255),f,b
 29674  0123AC  2B96               	incf	(i2printf@cp+1)& (0+255),f,b
 29675  0123AE                     i2l1492:
 29676                           
 29677                           ; BSR set to: 0
 29678                           
 29679                           ; BSR set to: 0
 29680  0123AE  0797               	decf	i2printf@len& (0+255),f,b
 29681  0123B0  A0D8               	btfss	status,0,c
 29682  0123B2  0798               	decf	(i2printf@len+1)& (0+255),f,b
 29683  0123B4  2997               	incf	i2printf@len& (0+255),w,b
 29684  0123B6  E1E5               	bnz	i2l14866
 29685  0123B8  2998               	incf	(i2printf@len+1)& (0+255),w,b
 29686  0123BA  B4D8               	btfsc	status,2,c
 29687  0123BC  EF29  F097         	goto	i2u1914_40
 29688  0123C0  D7E0               	goto	i2l1493
 29689  0123C2                     
 29690                           ; BSR set to: 0
 29691                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 29692                           
 29693                           ; BSR set to: 0
 29694  0123C2  C099  FFD9         	movff	i2printf@ap,fsr2l
 29695  0123C6  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 29696  0123CA  50DF               	movf	indf2,w,c
 29697  0123CC  6FAF               	movwf	i2printf@c& (0+255),b
 29698                           
 29699                           ; BSR set to: 0
 29700  0123CE  0E02               	movlw	2
 29701  0123D0  2799               	addwf	i2printf@ap& (0+255),f,b
 29702  0123D2  0E00               	movlw	0
 29703  0123D4  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 29704  0123D6                     
 29705                           ; BSR set to: 0
 29706                           ;doprnt.c: 805: cp = (char *)&c;
 29707                           
 29708                           ; BSR set to: 0
 29709  0123D6  0EAF               	movlw	low i2printf@c
 29710  0123D8  6F95               	movwf	i2printf@cp& (0+255),b
 29711  0123DA  0E00               	movlw	high i2printf@c
 29712  0123DC  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 29713                           
 29714                           ; BSR set to: 0
 29715                           ;doprnt.c: 806: len = 1;
 29716  0123DE  0E00               	movlw	0
 29717  0123E0  6F98               	movwf	(i2printf@len+1)& (0+255),b
 29718  0123E2  0E01               	movlw	1
 29719  0123E4  6F97               	movwf	i2printf@len& (0+255),b
 29720                           
 29721                           ;doprnt.c: 807: goto dostring;
 29722  0123E6  D7A1               	goto	i2u1853_40
 29723  0123E8                     
 29724                           ; BSR set to: 0
 29725                           ;doprnt.c: 818: flag |= 0xC0;
 29726                           
 29727                           ; BSR set to: 0
 29728  0123E8  0EC0               	movlw	192
 29729  0123EA  13A9               	iorwf	i2printf@flag& (0+255),f,b
 29730                           
 29731                           ; BSR set to: 0
 29732                           ;doprnt.c: 822: }
 29733                           
 29734                           ;doprnt.c: 819: break;
 29735  0123EC  D037               	goto	i2l1475
 29736  0123EE                     i2l1471:
 29737                           
 29738                           ; BSR set to: 0
 29739  0123EE  0100               	movlb	0	; () banked
 29740  0123F0  5188               	movf	i2printf@f& (0+255),w,b
 29741  0123F2  6F8A               	movwf	??i2_printf& (0+255),b
 29742  0123F4  5189               	movf	(i2printf@f+1)& (0+255),w,b
 29743  0123F6  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 29744  0123F8  4B88               	infsnz	i2printf@f& (0+255),f,b
 29745  0123FA  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 29746  0123FC  C08A  FFF6         	movff	??i2_printf,tblptrl
 29747  012400  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 29748  012404  0E00               	movlw	low (__mediumconst shr (0+16))
 29749  012406  6EF8               	movwf	tblptru,c
 29750  012408  0E0D               	movlw	(high __ramtop+-1)
 29751  01240A  64F7               	cpfsgt	tblptrh,c
 29752  01240C  D003               	bra	i2u1860_47
 29753  01240E  0008               	tblrd		*
 29754  012410  50F5               	movf	tablat,w,c
 29755  012412  D005               	bra	i2u1860_40
 29756  012414                     i2u1860_47:
 29757  012414  CFF6 FFE9          	movff	tblptrl,fsr0l
 29758  012418  CFF7 FFEA          	movff	tblptrh,fsr0h
 29759  01241C  50EF               	movf	indf0,w,c
 29760  01241E                     i2u1860_40:
 29761  01241E  0100               	movlb	0	; () banked
 29762  012420  6FAF               	movwf	i2printf@c& (0+255),b
 29763  012422  51AF               	movf	i2printf@c& (0+255),w,b
 29764                           
 29765                           ; Switch size 1, requested type "space"
 29766                           ; Number of cases is 9, Range of values is 0 to 120
 29767                           ; switch strategies available:
 29768                           ; Name         Instructions Cycles
 29769                           ; simple_byte           28    15 (average)
 29770                           ;	Chosen strategy is simple_byte
 29771  012424  0A00               	xorlw	0	; case 0
 29772  012426  B4D8               	btfsc	status,2,c
 29773  012428  0012               	return	
 29774  01242A  0A58               	xorlw	88	; case 88
 29775  01242C  B4D8               	btfsc	status,2,c
 29776  01242E  D745               	goto	i2l1478
 29777  012430  0A3B               	xorlw	59	; case 99
 29778  012432  B4D8               	btfsc	status,2,c
 29779  012434  D7C6               	goto	i2l1495
 29780  012436  0A07               	xorlw	7	; case 100
 29781  012438  B4D8               	btfsc	status,2,c
 29782  01243A  D010               	goto	i2l1475
 29783  01243C  0A02               	xorlw	2	; case 102
 29784  01243E  B4D8               	btfsc	status,2,c
 29785  012440  D73A               	goto	i2l1474
 29786  012442  0A0F               	xorlw	15	; case 105
 29787  012444  B4D8               	btfsc	status,2,c
 29788  012446  D00A               	goto	i2l1475
 29789  012448  0A1A               	xorlw	26	; case 115
 29790  01244A  B4D8               	btfsc	status,2,c
 29791  01244C  D738               	goto	i2l1480
 29792  01244E  0A06               	xorlw	6	; case 117
 29793  012450  B4D8               	btfsc	status,2,c
 29794  012452  D7CA               	goto	i2l1497
 29795  012454  0A0D               	xorlw	13	; case 120
 29796  012456  B4D8               	btfsc	status,2,c
 29797  012458  D730               	goto	i2l1478
 29798  01245A  D7BD               	goto	i2l1496
 29799  01245C                     i2l1475:
 29800                           
 29801                           ; BSR set to: 0
 29802                           ;doprnt.c: 825: if(flag & (0x700)) {
 29803                           
 29804                           ; BSR set to: 0
 29805  01245C  0E07               	movlw	7
 29806  01245E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 29807  012460  B4D8               	btfsc	status,2,c
 29808  012462  D33B               	goto	i2l1498
 29809                           
 29810                           ; BSR set to: 0
 29811                           ;doprnt.c: 827: if(flag & 0x1000)
 29812  012464  A9AA               	btfss	(i2printf@flag+1)& (0+255),4,b
 29813  012466  D004               	goto	i2l1499
 29814                           
 29815                           ; BSR set to: 0
 29816                           ;doprnt.c: 829: prec = 6;
 29817  012468  0E00               	movlw	0
 29818  01246A  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 29819  01246C  0E06               	movlw	6
 29820  01246E  6FAD               	movwf	i2printf@prec& (0+255),b
 29821  012470                     i2l1499:
 29822                           
 29823                           ; BSR set to: 0
 29824                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 29825                           
 29826                           ; BSR set to: 0
 29827  012470  C099  FFD9         	movff	i2printf@ap,fsr2l
 29828  012474  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 29829  012478  CFDE F0A5          	movff	postinc2,i2printf@fval
 29830  01247C  CFDE F0A6          	movff	postinc2,i2printf@fval+1
 29831  012480  CFDE F0A7          	movff	postinc2,i2printf@fval+2
 29832  012484  CFDE F0A8          	movff	postinc2,i2printf@fval+3
 29833                           
 29834                           ; BSR set to: 0
 29835  012488  0E04               	movlw	4
 29836  01248A  2799               	addwf	i2printf@ap& (0+255),f,b
 29837  01248C  0E00               	movlw	0
 29838  01248E  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 29839                           
 29840                           ; BSR set to: 0
 29841                           ;doprnt.c: 831: if(fval < 0.0) {
 29842  012490  AFA8               	btfss	(i2printf@fval+3)& (0+255),7,b
 29843  012492  D015               	goto	i2l1500
 29844                           
 29845                           ; BSR set to: 0
 29846                           ;doprnt.c: 832: fval = -fval;
 29847  012494  C0A5  F02C         	movff	i2printf@fval,i2___flneg@f1
 29848  012498  C0A6  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 29849  01249C  C0A7  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 29850  0124A0  C0A8  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 29851  0124A4  ECAE  F0C7         	call	i2___flneg	;wreg free
 29852  0124A8  C02C  F0A5         	movff	?i2___flneg,i2printf@fval
 29853  0124AC  C02D  F0A6         	movff	?i2___flneg+1,i2printf@fval+1
 29854  0124B0  C02E  F0A7         	movff	?i2___flneg+2,i2printf@fval+2
 29855  0124B4  C02F  F0A8         	movff	?i2___flneg+3,i2printf@fval+3
 29856                           
 29857                           ;doprnt.c: 833: flag |= 0x03;
 29858  0124B8  0E03               	movlw	3
 29859  0124BA  0100               	movlb	0	; () banked
 29860  0124BC  13A9               	iorwf	i2printf@flag& (0+255),f,b
 29861  0124BE                     i2l1500:
 29862                           
 29863                           ; BSR set to: 0
 29864                           ;doprnt.c: 834: }
 29865                           ;doprnt.c: 835: exp = 0;
 29866                           
 29867                           ; BSR set to: 0
 29868  0124BE  0E00               	movlw	0
 29869  0124C0  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 29870  0124C2  0E00               	movlw	0
 29871  0124C4  6F9F               	movwf	i2printf@exp& (0+255),b
 29872                           
 29873                           ; BSR set to: 0
 29874                           ;doprnt.c: 836: if( fval!=0) {
 29875  0124C6  51A5               	movf	i2printf@fval& (0+255),w,b
 29876  0124C8  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 29877  0124CA  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 29878  0124CC  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 29879  0124CE  B4D8               	btfsc	status,2,c
 29880  0124D0  D082               	goto	i2l1505
 29881                           
 29882                           ; BSR set to: 0
 29883                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 29884  0124D2  35A7               	rlcf	(i2printf@fval+2)& (0+255),w,b
 29885  0124D4  35A8               	rlcf	(i2printf@fval+3)& (0+255),w,b
 29886  0124D6  0F82               	addlw	130
 29887  0124D8  6F9F               	movwf	i2printf@exp& (0+255),b
 29888  0124DA  6BA0               	clrf	(i2printf@exp+1)& (0+255),b
 29889  0124DC  0EFF               	movlw	255
 29890  0124DE  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 29891                           
 29892                           ; BSR set to: 0
 29893                           ;doprnt.c: 838: exp--;
 29894  0124E0  079F               	decf	i2printf@exp& (0+255),f,b
 29895  0124E2  A0D8               	btfss	status,0,c
 29896  0124E4  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 29897                           
 29898                           ; BSR set to: 0
 29899                           ;doprnt.c: 839: exp *= 3;
 29900  0124E6  C09F  F001         	movff	i2printf@exp,i2___wmul@multiplier
 29901  0124EA  C0A0  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 29902  0124EE  0E00               	movlw	0
 29903  0124F0  6E04               	movwf	i2___wmul@multiplicand+1,c
 29904  0124F2  0E03               	movlw	3
 29905  0124F4  6E03               	movwf	i2___wmul@multiplicand,c
 29906  0124F6  EC3C  F0C8         	call	i2___wmul	;wreg free
 29907  0124FA  C001  F09F         	movff	?i2___wmul,i2printf@exp
 29908  0124FE  C002  F0A0         	movff	?i2___wmul+1,i2printf@exp+1
 29909                           
 29910                           ;doprnt.c: 840: exp /= 10;
 29911  012502  C09F  F007         	movff	i2printf@exp,i2___awdiv@dividend
 29912  012506  C0A0  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 29913  01250A  0E00               	movlw	0
 29914  01250C  6E0A               	movwf	i2___awdiv@divisor+1,c
 29915  01250E  0E0A               	movlw	10
 29916  012510  6E09               	movwf	i2___awdiv@divisor,c
 29917  012512  EC3D  F0C1         	call	i2___awdiv	;wreg free
 29918  012516  C007  F09F         	movff	?i2___awdiv,i2printf@exp
 29919  01251A  C008  F0A0         	movff	?i2___awdiv+1,i2printf@exp+1
 29920                           
 29921                           ;doprnt.c: 841: if(exp < 0)
 29922  01251E  0100               	movlb	0	; () banked
 29923  012520  AFA0               	btfss	(i2printf@exp+1)& (0+255),7,b
 29924  012522  D003               	goto	i2l1502
 29925                           
 29926                           ; BSR set to: 0
 29927                           ;doprnt.c: 842: exp--;
 29928  012524  079F               	decf	i2printf@exp& (0+255),f,b
 29929  012526  A0D8               	btfss	status,0,c
 29930  012528  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 29931  01252A                     i2l1502:
 29932                           
 29933                           ; BSR set to: 0
 29934                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 29935                           
 29936                           ; BSR set to: 0
 29937  01252A  519F               	movf	i2printf@exp& (0+255),w,b
 29938  01252C  0800               	sublw	0
 29939  01252E  EC8A  F09E         	call	i2_scale
 29940  012532  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 29941  012536  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 29942  01253A  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 29943  01253E  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 29944                           
 29945                           ;doprnt.c: 847: tmpval.integ *= fval;
 29946  012542  C09B  F030         	movff	i2printf@tmpval,i2___flmul@b
 29947  012546  C09C  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 29948  01254A  C09D  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 29949  01254E  C09E  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 29950  012552  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 29951  012556  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 29952  01255A  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 29953  01255E  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 29954  012562  EC27  F0A4         	call	i2___flmul	;wreg free
 29955  012566  C030  F09B         	movff	?i2___flmul,i2printf@tmpval
 29956  01256A  C031  F09C         	movff	?i2___flmul+1,i2printf@tmpval+1
 29957  01256E  C032  F09D         	movff	?i2___flmul+2,i2printf@tmpval+2
 29958  012572  C033  F09E         	movff	?i2___flmul+3,i2printf@tmpval+3
 29959                           
 29960                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 29961  012576  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 29962  01257A  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 29963  01257E  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 29964  012582  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 29965  012586  0E00               	movlw	0
 29966  012588  6E38               	movwf	i2___flge@ff2,c
 29967  01258A  0E00               	movlw	0
 29968  01258C  6E39               	movwf	i2___flge@ff2+1,c
 29969  01258E  0E80               	movlw	128
 29970  012590  6E3A               	movwf	i2___flge@ff2+2,c
 29971  012592  0E3F               	movlw	63
 29972  012594  6E3B               	movwf	i2___flge@ff2+3,c
 29973  012596  EC23  F0BB         	call	i2___flge	;wreg free
 29974  01259A  B0D8               	btfsc	status,0,c
 29975  01259C  D005               	goto	i2l1503
 29976                           
 29977                           ;doprnt.c: 849: exp--;
 29978  01259E  0100               	movlb	0	; () banked
 29979  0125A0  079F               	decf	i2printf@exp& (0+255),f,b
 29980  0125A2  A0D8               	btfss	status,0,c
 29981  0125A4  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 29982  0125A6  D017               	goto	i2l1505
 29983  0125A8                     i2l1503:
 29984                           
 29985                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 29986                           
 29987                           ; BSR set to: 0
 29988  0125A8  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 29989  0125AC  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 29990  0125B0  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 29991  0125B4  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 29992  0125B8  0E00               	movlw	0
 29993  0125BA  6E38               	movwf	i2___flge@ff2,c
 29994  0125BC  0E00               	movlw	0
 29995  0125BE  6E39               	movwf	i2___flge@ff2+1,c
 29996  0125C0  0E20               	movlw	32
 29997  0125C2  6E3A               	movwf	i2___flge@ff2+2,c
 29998  0125C4  0E41               	movlw	65
 29999  0125C6  6E3B               	movwf	i2___flge@ff2+3,c
 30000  0125C8  EC23  F0BB         	call	i2___flge	;wreg free
 30001  0125CC  A0D8               	btfss	status,0,c
 30002  0125CE  D003               	goto	i2l1505
 30003                           
 30004                           ;doprnt.c: 851: exp++;
 30005  0125D0  0100               	movlb	0	; () banked
 30006  0125D2  4B9F               	infsnz	i2printf@exp& (0+255),f,b
 30007  0125D4  2BA0               	incf	(i2printf@exp+1)& (0+255),f,b
 30008  0125D6                     i2l1505:
 30009                           
 30010                           ;doprnt.c: 852: }
 30011                           ;doprnt.c: 1112: if(prec <= 12)
 30012                           
 30013                           ; BSR set to: 0
 30014                           
 30015                           ; BSR set to: 0
 30016                           
 30017                           ; BSR set to: 0
 30018  0125D6  0100               	movlb	0	; () banked
 30019  0125D8  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 30020  0125DA  D006               	goto	i2u1868_40
 30021  0125DC  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 30022  0125DE  E121               	bnz	i2l14934
 30023  0125E0  0E0D               	movlw	13
 30024  0125E2  5DAD               	subwf	i2printf@prec& (0+255),w,b
 30025  0125E4  B0D8               	btfsc	status,0,c
 30026  0125E6  D01D               	goto	i2l1506
 30027  0125E8                     i2u1868_40:
 30028                           
 30029                           ; BSR set to: 0
 30030                           ;doprnt.c: 1113: fval += fround(prec);
 30031  0125E8  C0A5  F056         	movff	i2printf@fval,i2___fladd@b
 30032  0125EC  C0A6  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 30033  0125F0  C0A7  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 30034  0125F4  C0A8  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 30035  0125F8  51AD               	movf	i2printf@prec& (0+255),w,b
 30036  0125FA  EC88  F0B1         	call	i2_fround
 30037  0125FE  C049  F05A         	movff	?i2_fround,i2___fladd@a
 30038  012602  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 30039  012606  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 30040  01260A  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 30041  01260E  EC6E  F0A7         	call	i2___fladd	;wreg free
 30042  012612  C056  F0A5         	movff	?i2___fladd,i2printf@fval
 30043  012616  C057  F0A6         	movff	?i2___fladd+1,i2printf@fval+1
 30044  01261A  C058  F0A7         	movff	?i2___fladd+2,i2printf@fval+2
 30045  01261E  C059  F0A8         	movff	?i2___fladd+3,i2printf@fval+3
 30046  012622                     i2l1506:
 30047  012622                     i2l14934:
 30048                           
 30049                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 30050  012622  0100               	movlb	0	; () banked
 30051  012624  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 30052  012626  D006               	goto	i2u1869_40
 30053  012628  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 30054  01262A  E122               	bnz	i2l14942
 30055  01262C  0E0A               	movlw	10
 30056  01262E  5D9F               	subwf	i2printf@exp& (0+255),w,b
 30057  012630  B0D8               	btfsc	status,0,c
 30058  012632  D01E               	goto	i2u1872_40
 30059  012634                     i2u1869_40:
 30060                           
 30061                           ; BSR set to: 0
 30062  012634  51A5               	movf	i2printf@fval& (0+255),w,b
 30063  012636  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 30064  012638  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 30065  01263A  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 30066  01263C  B4D8               	btfsc	status,2,c
 30067  01263E  D063               	goto	i2l1507
 30068                           
 30069                           ; BSR set to: 0
 30070  012640  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 30071  012644  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 30072  012648  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 30073  01264C  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 30074  012650  ECB0  F0BD         	call	i2___fltol	;wreg free
 30075  012654  0100               	movlb	0	; () banked
 30076  012656  516C               	movf	?i2___fltol& (0+255),w,b
 30077  012658  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 30078  01265A  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 30079  01265C  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 30080  01265E  B4D8               	btfsc	status,2,c
 30081                           
 30082                           ; BSR set to: 0
 30083  012660  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 30084  012662  D051               	goto	i2l1507
 30085  012664  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 30086  012666  E104               	bnz	i2l14942
 30087  012668  0E02               	movlw	2
 30088  01266A  5D9F               	subwf	i2printf@exp& (0+255),w,b
 30089  01266C  A0D8               	btfss	status,0,c
 30090  01266E  D04B               	goto	i2l1507
 30091  012670                     i2u1872_40:
 30092  012670                     i2l14942:
 30093                           
 30094                           ; BSR set to: 0
 30095                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 30096  012670  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 30097  012674  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 30098  012678  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 30099  01267C  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 30100  012680  0E5F               	movlw	95
 30101  012682  6E38               	movwf	i2___flge@ff2,c
 30102  012684  0E70               	movlw	112
 30103  012686  6E39               	movwf	i2___flge@ff2+1,c
 30104  012688  0E89               	movlw	137
 30105  01268A  6E3A               	movwf	i2___flge@ff2+2,c
 30106  01268C  0E40               	movlw	64
 30107  01268E  6E3B               	movwf	i2___flge@ff2+3,c
 30108  012690  EC23  F0BB         	call	i2___flge	;wreg free
 30109  012694  B0D8               	btfsc	status,0,c
 30110  012696  D003               	goto	i2l1510
 30111                           
 30112                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 30113  012698  0100               	movlb	0	; () banked
 30114  01269A  0EF7               	movlw	247
 30115  01269C  D002               	goto	L16
 30116  01269E                     i2l1510:
 30117                           
 30118                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 30119                           
 30120                           ; BSR set to: 0
 30121  01269E  0100               	movlb	0	; () banked
 30122  0126A0  0EF8               	movlw	248
 30123  0126A2                     L16:
 30124  0126A2  279F               	addwf	i2printf@exp& (0+255),f,b
 30125  0126A4  0EFF               	movlw	255
 30126  0126A6  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 30127                           
 30128                           ; BSR set to: 0
 30129                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 30130                           
 30131                           ; BSR set to: 0
 30132  0126A8  519F               	movf	i2printf@exp& (0+255),w,b
 30133  0126AA  EC8A  F09E         	call	i2_scale
 30134  0126AE  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 30135  0126B2  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 30136  0126B6  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 30137  0126BA  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 30138  0126BE  C0A5  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 30139  0126C2  C0A6  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 30140  0126C6  C0A7  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 30141  0126CA  C0A8  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 30142  0126CE  C09B  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 30143  0126D2  C09C  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 30144  0126D6  C09D  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 30145  0126DA  C09E  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 30146  0126DE  EC6C  F0B9         	call	i2__div_to_l_	;wreg free
 30147  0126E2  C001  F0A1         	movff	?i2__div_to_l_,i2printf@val
 30148  0126E6  C002  F0A2         	movff	?i2__div_to_l_+1,i2printf@val+1
 30149  0126EA  C003  F0A3         	movff	?i2__div_to_l_+2,i2printf@val+2
 30150  0126EE  C004  F0A4         	movff	?i2__div_to_l_+3,i2printf@val+3
 30151                           
 30152                           ;doprnt.c: 1129: fval = 0.0;
 30153  0126F2  0E00               	movlw	0
 30154  0126F4  0100               	movlb	0	; () banked
 30155  0126F6  6FA5               	movwf	i2printf@fval& (0+255),b
 30156  0126F8  0E00               	movlw	0
 30157  0126FA  6FA6               	movwf	(i2printf@fval+1)& (0+255),b
 30158  0126FC  0E00               	movlw	0
 30159  0126FE  6FA7               	movwf	(i2printf@fval+2)& (0+255),b
 30160  012700  0E00               	movlw	0
 30161  012702  6FA8               	movwf	(i2printf@fval+3)& (0+255),b
 30162                           
 30163                           ;doprnt.c: 1130: } else {
 30164  012704  D03C               	goto	i2l1516
 30165  012706                     i2l1507:
 30166                           
 30167                           ; BSR set to: 0
 30168                           ;doprnt.c: 1131: val = (unsigned long)fval;
 30169                           
 30170                           ; BSR set to: 0
 30171  012706  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 30172  01270A  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 30173  01270E  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 30174  012712  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 30175  012716  ECB0  F0BD         	call	i2___fltol	;wreg free
 30176  01271A  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 30177  01271E  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 30178  012722  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 30179  012726  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 30180                           
 30181                           ;doprnt.c: 1132: fval -= (double)val;
 30182  01272A  C0A5  F080         	movff	i2printf@fval,i2___flsub@b
 30183  01272E  C0A6  F081         	movff	i2printf@fval+1,i2___flsub@b+1
 30184  012732  C0A7  F082         	movff	i2printf@fval+2,i2___flsub@b+2
 30185  012736  C0A8  F083         	movff	i2printf@fval+3,i2___flsub@b+3
 30186  01273A  C0A1  F005         	movff	i2printf@val,i2___xxtofl@val
 30187  01273E  C0A2  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 30188  012742  C0A3  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 30189  012746  C0A4  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 30190  01274A  0E00               	movlw	0
 30191  01274C  ECFC  F0B6         	call	i2___xxtofl
 30192  012750  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 30193  012754  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 30194  012758  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 30195  01275C  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 30196  012760  ECE6  F0C5         	call	i2___flsub	;wreg free
 30197  012764  C080  F0A5         	movff	?i2___flsub,i2printf@fval
 30198  012768  C081  F0A6         	movff	?i2___flsub+1,i2printf@fval+1
 30199  01276C  C082  F0A7         	movff	?i2___flsub+2,i2printf@fval+2
 30200  012770  C083  F0A8         	movff	?i2___flsub+3,i2printf@fval+3
 30201                           
 30202                           ;doprnt.c: 1133: exp = 0;
 30203  012774  0E00               	movlw	0
 30204  012776  0100               	movlb	0	; () banked
 30205  012778  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 30206  01277A  0E00               	movlw	0
 30207  01277C  6F9F               	movwf	i2printf@exp& (0+255),b
 30208  01277E                     i2l1516:
 30209                           
 30210                           ; BSR set to: 0
 30211                           ;doprnt.c: 1134: }
 30212                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 30213                           
 30214                           ; BSR set to: 0
 30215  01277E  0E01               	movlw	1
 30216  012780  6FAF               	movwf	i2printf@c& (0+255),b
 30217  012782                     i2l14962:
 30218                           
 30219                           ; BSR set to: 0
 30220  012782  0E0A               	movlw	10
 30221  012784  19AF               	xorwf	i2printf@c& (0+255),w,b
 30222  012786  B4D8               	btfsc	status,2,c
 30223  012788  D01B               	goto	i2u1876_40
 30224                           
 30225                           ; BSR set to: 0
 30226                           ;doprnt.c: 1137: if(val < dpowers[c])
 30227                           
 30228                           ; BSR set to: 0
 30229                           
 30230                           ; BSR set to: 0
 30231  01278A  51AF               	movf	i2printf@c& (0+255),w,b
 30232  01278C  0D04               	mullw	4
 30233  01278E  0E3B               	movlw	low _dpowers
 30234  012790  24F3               	addwf	prodl,w,c
 30235  012792  6EF6               	movwf	tblptrl,c
 30236  012794  0EE4               	movlw	high _dpowers
 30237  012796  20F4               	addwfc	prodh,w,c
 30238  012798  6EF7               	movwf	tblptrh,c
 30239  01279A                     	if	1	;There are 3 active tblptr bytes
 30240  01279A  6AF8               	clrf	tblptru,c
 30241  01279C  0E00               	movlw	low (__mediumconst shr (0+16))
 30242  01279E  22F8               	addwfc	tblptru,f,c
 30243  0127A0                     	endif
 30244  0127A0  0009               	tblrd		*+
 30245  0127A2  50F5               	movf	tablat,w,c
 30246  0127A4  5DA1               	subwf	i2printf@val& (0+255),w,b
 30247  0127A6  0009               	tblrd		*+
 30248  0127A8  50F5               	movf	tablat,w,c
 30249  0127AA  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 30250  0127AC  0009               	tblrd		*+
 30251  0127AE  50F5               	movf	tablat,w,c
 30252  0127B0  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 30253  0127B2  0009               	tblrd		*+
 30254  0127B4  50F5               	movf	tablat,w,c
 30255  0127B6  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 30256  0127B8  A0D8               	btfss	status,0,c
 30257  0127BA  D002               	goto	i2u1876_40
 30258                           
 30259                           ; BSR set to: 0
 30260                           
 30261                           ; BSR set to: 0
 30262                           
 30263                           ; BSR set to: 0
 30264                           ;doprnt.c: 1138: break;
 30265  0127BC  2BAF               	incf	i2printf@c& (0+255),f,b
 30266  0127BE  D7E1               	goto	i2l14962
 30267  0127C0                     i2u1876_40:
 30268                           
 30269                           ; BSR set to: 0
 30270                           ;doprnt.c: 1142: width -= prec + c + exp;
 30271                           
 30272                           ; BSR set to: 0
 30273  0127C0  C0AF  F08A         	movff	i2printf@c,??i2_printf
 30274  0127C4  6B8B               	clrf	(??i2_printf+1)& (0+255),b
 30275  0127C6  BF8A               	btfsc	??i2_printf& (0+255),7,b
 30276  0127C8  078B               	decf	(??i2_printf+1)& (0+255),f,b
 30277  0127CA  51AD               	movf	i2printf@prec& (0+255),w,b
 30278  0127CC  278A               	addwf	??i2_printf& (0+255),f,b
 30279  0127CE  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 30280  0127D0  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 30281  0127D2  519F               	movf	i2printf@exp& (0+255),w,b
 30282  0127D4  278A               	addwf	??i2_printf& (0+255),f,b
 30283  0127D6  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 30284  0127D8  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 30285  0127DA  518A               	movf	??i2_printf& (0+255),w,b
 30286  0127DC  5FAB               	subwf	i2printf@width& (0+255),f,b
 30287  0127DE  518B               	movf	(??i2_printf+1)& (0+255),w,b
 30288  0127E0  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 30289                           
 30290                           ;doprnt.c: 1143: if(
 30291                           ;doprnt.c: 1147: prec)
 30292  0127E2  51AD               	movf	i2printf@prec& (0+255),w,b
 30293  0127E4  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 30294  0127E6  B4D8               	btfsc	status,2,c
 30295  0127E8  D003               	goto	i2l1520
 30296                           
 30297                           ; BSR set to: 0
 30298                           ;doprnt.c: 1148: width--;
 30299  0127EA  07AB               	decf	i2printf@width& (0+255),f,b
 30300  0127EC  A0D8               	btfss	status,0,c
 30301  0127EE  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 30302  0127F0                     i2l1520:
 30303                           
 30304                           ; BSR set to: 0
 30305                           ;doprnt.c: 1149: if(flag & 0x03)
 30306                           
 30307                           ; BSR set to: 0
 30308  0127F0  0E03               	movlw	3
 30309  0127F2  15A9               	andwf	i2printf@flag& (0+255),w,b
 30310  0127F4  6F8A               	movwf	??i2_printf& (0+255),b
 30311  0127F6  0E00               	movlw	0
 30312  0127F8  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 30313  0127FA  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 30314  0127FC  518A               	movf	??i2_printf& (0+255),w,b
 30315  0127FE  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 30316  012800  B4D8               	btfsc	status,2,c
 30317  012802  D003               	goto	i2l1521
 30318                           
 30319                           ; BSR set to: 0
 30320                           ;doprnt.c: 1150: width--;
 30321  012804  07AB               	decf	i2printf@width& (0+255),f,b
 30322  012806  A0D8               	btfss	status,0,c
 30323  012808  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 30324  01280A                     i2l1521:
 30325                           
 30326                           ; BSR set to: 0
 30327                           ;doprnt.c: 1153: if(flag & 0x04) {
 30328                           
 30329                           ; BSR set to: 0
 30330  01280A  A5A9               	btfss	i2printf@flag& (0+255),2,b
 30331  01280C  D025               	goto	i2l1528
 30332                           
 30333                           ; BSR set to: 0
 30334                           ;doprnt.c: 1157: if(flag & 0x03)
 30335  01280E  0E03               	movlw	3
 30336  012810  15A9               	andwf	i2printf@flag& (0+255),w,b
 30337  012812  6F8A               	movwf	??i2_printf& (0+255),b
 30338  012814  0E00               	movlw	0
 30339  012816  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 30340  012818  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 30341  01281A  518A               	movf	??i2_printf& (0+255),w,b
 30342  01281C  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 30343  01281E  B4D8               	btfsc	status,2,c
 30344  012820  D00B               	goto	i2l1524
 30345                           
 30346                           ; BSR set to: 0
 30347                           ;doprnt.c: 1159: (putch('-') );
 30348  012822  0E2D               	movlw	45
 30349  012824  EC63  F0C9         	call	i2_putch
 30350                           
 30351                           ;doprnt.c: 1168: while(width > 0) {
 30352  012828  D007               	goto	i2l1524
 30353  01282A                     i2l14988:
 30354                           
 30355                           ;doprnt.c: 1169: (putch('0') );
 30356  01282A  0E30               	movlw	48
 30357  01282C  EC63  F0C9         	call	i2_putch
 30358                           
 30359                           ;doprnt.c: 1170: width--;
 30360  012830  0100               	movlb	0	; () banked
 30361  012832  07AB               	decf	i2printf@width& (0+255),f,b
 30362  012834  A0D8               	btfss	status,0,c
 30363  012836  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 30364  012838                     i2l1524:
 30365                           
 30366                           ; BSR set to: 0
 30367  012838  0100               	movlb	0	; () banked
 30368  01283A  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 30369  01283C  D06B               	goto	i2l1532
 30370  01283E  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 30371  012840  E1F4               	bnz	i2l14988
 30372  012842  05AB               	decf	i2printf@width& (0+255),w,b
 30373  012844  A0D8               	btfss	status,0,c
 30374  012846  D066               	goto	i2l1532
 30375  012848  D7F0               	goto	i2l1525
 30376  01284A                     i2l14994:
 30377                           
 30378                           ; BSR set to: 0
 30379                           ;doprnt.c: 1181: (putch(' ') );
 30380  01284A  0E20               	movlw	32
 30381  01284C  EC63  F0C9         	call	i2_putch
 30382                           
 30383                           ;doprnt.c: 1182: width--;
 30384  012850  0100               	movlb	0	; () banked
 30385  012852  07AB               	decf	i2printf@width& (0+255),f,b
 30386  012854  A0D8               	btfss	status,0,c
 30387  012856  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 30388  012858                     i2l1528:
 30389                           
 30390                           ; BSR set to: 0
 30391                           
 30392                           ; BSR set to: 0
 30393  012858  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 30394  01285A  D005               	goto	i2u1882_40
 30395  01285C  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 30396  01285E  E1F5               	bnz	i2l14994
 30397  012860  05AB               	decf	i2printf@width& (0+255),w,b
 30398  012862  B0D8               	btfsc	status,0,c
 30399  012864  D7F2               	goto	i2l1529
 30400  012866                     i2u1882_40:
 30401                           
 30402                           ; BSR set to: 0
 30403                           ;doprnt.c: 1183: }
 30404                           ;doprnt.c: 1188: if(flag & 0x03)
 30405                           
 30406                           ; BSR set to: 0
 30407  012866  0E03               	movlw	3
 30408  012868  15A9               	andwf	i2printf@flag& (0+255),w,b
 30409  01286A  6F8A               	movwf	??i2_printf& (0+255),b
 30410  01286C  0E00               	movlw	0
 30411  01286E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 30412  012870  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 30413  012872  518A               	movf	??i2_printf& (0+255),w,b
 30414  012874  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 30415  012876  B4D8               	btfsc	status,2,c
 30416  012878  D04D               	goto	i2l1532
 30417                           
 30418                           ; BSR set to: 0
 30419                           ;doprnt.c: 1190: (putch('-') );
 30420  01287A  0E2D               	movlw	45
 30421  01287C  EC63  F0C9         	call	i2_putch
 30422                           
 30423                           ;doprnt.c: 1195: }
 30424                           ;doprnt.c: 1196: while(c--) {
 30425  012880  D049               	goto	i2l1532
 30426  012882                     
 30427                           ;doprnt.c: 1200: {
 30428                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 30429  012882  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 30430  012886  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 30431  01288A  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 30432  01288E  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 30433  012892  0100               	movlb	0	; () banked
 30434  012894  51AF               	movf	i2printf@c& (0+255),w,b
 30435  012896  0D04               	mullw	4
 30436  012898  0E3B               	movlw	low _dpowers
 30437  01289A  24F3               	addwf	prodl,w,c
 30438  01289C  6EF6               	movwf	tblptrl,c
 30439  01289E  0EE4               	movlw	high _dpowers
 30440  0128A0  20F4               	addwfc	prodh,w,c
 30441  0128A2  6EF7               	movwf	tblptrh,c
 30442  0128A4                     	if	1	;There are 3 active tblptr bytes
 30443  0128A4  6AF8               	clrf	tblptru,c
 30444  0128A6  0E00               	movlw	low (__mediumconst shr (0+16))
 30445  0128A8  22F8               	addwfc	tblptru,f,c
 30446  0128AA                     	endif
 30447  0128AA  0009               	tblrd		*+
 30448  0128AC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 30449  0128B0  0009               	tblrd		*+
 30450  0128B2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 30451  0128B6  0009               	tblrd		*+
 30452  0128B8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 30453  0128BC  000A               	tblrd		*-
 30454  0128BE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 30455  0128C2  EC7F  F0C1         	call	i2___lldiv	;wreg free
 30456  0128C6  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 30457  0128CA  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 30458  0128CE  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 30459  0128D2  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 30460                           
 30461                           ;doprnt.c: 1202: tmpval.vd %= 10;
 30462  0128D6  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 30463  0128DA  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 30464  0128DE  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 30465  0128E2  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 30466  0128E6  0E0A               	movlw	10
 30467  0128E8  6E12               	movwf	i2___llmod@divisor,c
 30468  0128EA  0E00               	movlw	0
 30469  0128EC  6E13               	movwf	i2___llmod@divisor+1,c
 30470  0128EE  0E00               	movlw	0
 30471  0128F0  6E14               	movwf	i2___llmod@divisor+2,c
 30472  0128F2  0E00               	movlw	0
 30473  0128F4  6E15               	movwf	i2___llmod@divisor+3,c
 30474  0128F6  EC80  F0C3         	call	i2___llmod	;wreg free
 30475  0128FA  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 30476  0128FE  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 30477  012902  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 30478  012906  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 30479                           
 30480                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 30481  01290A  0100               	movlb	0	; () banked
 30482  01290C  519B               	movf	i2printf@tmpval& (0+255),w,b
 30483  01290E  0F30               	addlw	48
 30484  012910  EC63  F0C9         	call	i2_putch
 30485  012914                     i2l1532:
 30486  012914  0100               	movlb	0	; () banked
 30487  012916  07AF               	decf	i2printf@c& (0+255),f,b
 30488  012918  29AF               	incf	i2printf@c& (0+255),w,b
 30489  01291A  B4D8               	btfsc	status,2,c
 30490  01291C  D008               	goto	i2l1535
 30491  01291E  D7B1               	goto	i2l1533
 30492  012920                     i2l15012:
 30493                           
 30494                           ; BSR set to: 0
 30495                           ;doprnt.c: 1208: (putch('0') );
 30496  012920  0E30               	movlw	48
 30497  012922  EC63  F0C9         	call	i2_putch
 30498                           
 30499                           ;doprnt.c: 1209: exp--;
 30500  012926  0100               	movlb	0	; () banked
 30501  012928  079F               	decf	i2printf@exp& (0+255),f,b
 30502  01292A  A0D8               	btfss	status,0,c
 30503  01292C  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 30504  01292E                     i2l1535:
 30505                           
 30506                           ; BSR set to: 0
 30507                           
 30508                           ; BSR set to: 0
 30509  01292E  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 30510  012930  D005               	goto	i2u1885_40
 30511  012932  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 30512  012934  E1F5               	bnz	i2l15012
 30513  012936  059F               	decf	i2printf@exp& (0+255),w,b
 30514  012938  B0D8               	btfsc	status,0,c
 30515  01293A  D7F2               	goto	i2l1536
 30516  01293C                     i2u1885_40:
 30517                           
 30518                           ; BSR set to: 0
 30519                           ;doprnt.c: 1210: }
 30520                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 30521                           
 30522                           ; BSR set to: 0
 30523  01293C  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 30524  01293E  D009               	goto	i2l1538
 30525  012940  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 30526  012942  E104               	bnz	i2u1886_40
 30527  012944  0E09               	movlw	9
 30528  012946  5DAD               	subwf	i2printf@prec& (0+255),w,b
 30529  012948  A0D8               	btfss	status,0,c
 30530  01294A  D003               	goto	i2l1538
 30531  01294C                     i2u1886_40:
 30532                           
 30533                           ; BSR set to: 0
 30534                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 30535  01294C  0E08               	movlw	8
 30536  01294E  6FAF               	movwf	i2printf@c& (0+255),b
 30537  012950  D002               	goto	i2l1539
 30538  012952                     i2l1538:
 30539                           
 30540                           ; BSR set to: 0
 30541                           ;doprnt.c: 1213: else
 30542                           ;doprnt.c: 1214: c = prec;
 30543  012952  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 30544  012956                     i2l1539:
 30545                           
 30546                           ; BSR set to: 0
 30547                           ;doprnt.c: 1215: prec -= c;
 30548                           
 30549                           ; BSR set to: 0
 30550  012956  51AF               	movf	i2printf@c& (0+255),w,b
 30551  012958  5FAD               	subwf	i2printf@prec& (0+255),f,b
 30552  01295A  0E00               	movlw	0
 30553  01295C  BFAF               	btfsc	i2printf@c& (0+255),7,b
 30554  01295E  0EFF               	movlw	255
 30555  012960  5BAE               	subwfb	(i2printf@prec+1)& (0+255),f,b
 30556                           
 30557                           ; BSR set to: 0
 30558                           ;doprnt.c: 1219: if(c)
 30559  012962  51AF               	movf	i2printf@c& (0+255),w,b
 30560  012964  B4D8               	btfsc	status,2,c
 30561  012966  D003               	goto	i2l1540
 30562                           
 30563                           ; BSR set to: 0
 30564                           ;doprnt.c: 1221: (putch('.') );
 30565  012968  0E2E               	movlw	46
 30566  01296A  EC63  F0C9         	call	i2_putch
 30567  01296E                     i2l1540:
 30568                           
 30569                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 30570  01296E  0100               	movlb	0	; () banked
 30571  012970  51AF               	movf	i2printf@c& (0+255),w,b
 30572  012972  EC8A  F09E         	call	i2_scale
 30573  012976  C049  F090         	movff	?i2_scale,i2_printf$4186
 30574  01297A  C04A  F091         	movff	?i2_scale+1,i2_printf$4186+1
 30575  01297E  C04B  F092         	movff	?i2_scale+2,i2_printf$4186+2
 30576  012982  C04C  F093         	movff	?i2_scale+3,i2_printf$4186+3
 30577                           
 30578                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 30579  012986  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 30580  01298A  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 30581  01298E  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 30582  012992  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 30583  012996  C090  F030         	movff	i2_printf$4186,i2___flmul@b
 30584  01299A  C091  F031         	movff	i2_printf$4186+1,i2___flmul@b+1
 30585  01299E  C092  F032         	movff	i2_printf$4186+2,i2___flmul@b+2
 30586  0129A2  C093  F033         	movff	i2_printf$4186+3,i2___flmul@b+3
 30587  0129A6  EC27  F0A4         	call	i2___flmul	;wreg free
 30588  0129AA  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 30589  0129AE  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 30590  0129B2  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 30591  0129B6  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 30592  0129BA  ECB0  F0BD         	call	i2___fltol	;wreg free
 30593  0129BE  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 30594  0129C2  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 30595  0129C6  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 30596  0129CA  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 30597                           
 30598                           ;doprnt.c: 1228: while(c--) {
 30599  0129CE  D073               	goto	i2l1541
 30600  0129D0                     
 30601                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 30602  0129D0  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 30603  0129D4  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 30604  0129D8  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 30605  0129DC  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 30606  0129E0  0100               	movlb	0	; () banked
 30607  0129E2  51AF               	movf	i2printf@c& (0+255),w,b
 30608  0129E4  0D04               	mullw	4
 30609  0129E6  0E3B               	movlw	low _dpowers
 30610  0129E8  24F3               	addwf	prodl,w,c
 30611  0129EA  6EF6               	movwf	tblptrl,c
 30612  0129EC  0EE4               	movlw	high _dpowers
 30613  0129EE  20F4               	addwfc	prodh,w,c
 30614  0129F0  6EF7               	movwf	tblptrh,c
 30615  0129F2                     	if	1	;There are 3 active tblptr bytes
 30616  0129F2  6AF8               	clrf	tblptru,c
 30617  0129F4  0E00               	movlw	low (__mediumconst shr (0+16))
 30618  0129F6  22F8               	addwfc	tblptru,f,c
 30619  0129F8                     	endif
 30620  0129F8  0009               	tblrd		*+
 30621  0129FA  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 30622  0129FE  0009               	tblrd		*+
 30623  012A00  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 30624  012A04  0009               	tblrd		*+
 30625  012A06  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 30626  012A0A  000A               	tblrd		*-
 30627  012A0C  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 30628  012A10  EC7F  F0C1         	call	i2___lldiv	;wreg free
 30629  012A14  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 30630  012A18  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 30631  012A1C  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 30632  012A20  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 30633                           
 30634                           ;doprnt.c: 1230: tmpval.vd %= 10;
 30635  012A24  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 30636  012A28  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 30637  012A2C  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 30638  012A30  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 30639  012A34  0E0A               	movlw	10
 30640  012A36  6E12               	movwf	i2___llmod@divisor,c
 30641  012A38  0E00               	movlw	0
 30642  012A3A  6E13               	movwf	i2___llmod@divisor+1,c
 30643  012A3C  0E00               	movlw	0
 30644  012A3E  6E14               	movwf	i2___llmod@divisor+2,c
 30645  012A40  0E00               	movlw	0
 30646  012A42  6E15               	movwf	i2___llmod@divisor+3,c
 30647  012A44  EC80  F0C3         	call	i2___llmod	;wreg free
 30648  012A48  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 30649  012A4C  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 30650  012A50  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 30651  012A54  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 30652                           
 30653                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 30654  012A58  0100               	movlb	0	; () banked
 30655  012A5A  519B               	movf	i2printf@tmpval& (0+255),w,b
 30656  012A5C  0F30               	addlw	48
 30657  012A5E  EC63  F0C9         	call	i2_putch
 30658                           
 30659                           ;doprnt.c: 1232: val %= dpowers[c];
 30660  012A62  C0A1  F00E         	movff	i2printf@val,i2___llmod@dividend
 30661  012A66  C0A2  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 30662  012A6A  C0A3  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 30663  012A6E  C0A4  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 30664  012A72  0100               	movlb	0	; () banked
 30665  012A74  51AF               	movf	i2printf@c& (0+255),w,b
 30666  012A76  0D04               	mullw	4
 30667  012A78  0E3B               	movlw	low _dpowers
 30668  012A7A  24F3               	addwf	prodl,w,c
 30669  012A7C  6EF6               	movwf	tblptrl,c
 30670  012A7E  0EE4               	movlw	high _dpowers
 30671  012A80  20F4               	addwfc	prodh,w,c
 30672  012A82  6EF7               	movwf	tblptrh,c
 30673  012A84                     	if	1	;There are 3 active tblptr bytes
 30674  012A84  6AF8               	clrf	tblptru,c
 30675  012A86  0E00               	movlw	low (__mediumconst shr (0+16))
 30676  012A88  22F8               	addwfc	tblptru,f,c
 30677  012A8A                     	endif
 30678  012A8A  0009               	tblrd		*+
 30679  012A8C  CFF5 F012          	movff	tablat,i2___llmod@divisor
 30680  012A90  0009               	tblrd		*+
 30681  012A92  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 30682  012A96  0009               	tblrd		*+
 30683  012A98  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 30684  012A9C  000A               	tblrd		*-
 30685  012A9E  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 30686  012AA2  EC80  F0C3         	call	i2___llmod	;wreg free
 30687  012AA6  C00E  F0A1         	movff	?i2___llmod,i2printf@val
 30688  012AAA  C00F  F0A2         	movff	?i2___llmod+1,i2printf@val+1
 30689  012AAE  C010  F0A3         	movff	?i2___llmod+2,i2printf@val+2
 30690  012AB2  C011  F0A4         	movff	?i2___llmod+3,i2printf@val+3
 30691  012AB6                     i2l1541:
 30692  012AB6  0100               	movlb	0	; () banked
 30693  012AB8  07AF               	decf	i2printf@c& (0+255),f,b
 30694  012ABA  29AF               	incf	i2printf@c& (0+255),w,b
 30695  012ABC  B4D8               	btfsc	status,2,c
 30696  012ABE  D008               	goto	i2l1544
 30697  012AC0  D787               	goto	i2l1542
 30698  012AC2                     
 30699                           ; BSR set to: 0
 30700                           ;doprnt.c: 1236: (putch('0') );
 30701                           
 30702                           ; BSR set to: 0
 30703  012AC2  0E30               	movlw	48
 30704  012AC4  EC63  F0C9         	call	i2_putch
 30705                           
 30706                           ;doprnt.c: 1237: prec--;
 30707  012AC8  0100               	movlb	0	; () banked
 30708  012ACA  07AD               	decf	i2printf@prec& (0+255),f,b
 30709  012ACC  A0D8               	btfss	status,0,c
 30710  012ACE  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 30711  012AD0                     i2l1544:
 30712                           
 30713                           ; BSR set to: 0
 30714                           
 30715                           ; BSR set to: 0
 30716  012AD0  51AD               	movf	i2printf@prec& (0+255),w,b
 30717  012AD2  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 30718  012AD4  B4D8               	btfsc	status,2,c
 30719  012AD6  D1BD               	goto	i2u1914_40
 30720  012AD8  D7F4               	goto	i2l1545
 30721  012ADA                     i2l1498:
 30722                           
 30723                           ; BSR set to: 0
 30724                           ;doprnt.c: 1246: }
 30725                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 30726                           
 30727                           ; BSR set to: 0
 30728  012ADA  0EC0               	movlw	192
 30729  012ADC  15A9               	andwf	i2printf@flag& (0+255),w,b
 30730  012ADE  6F8A               	movwf	??i2_printf& (0+255),b
 30731  012AE0  0E00               	movlw	0
 30732  012AE2  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 30733  012AE4  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 30734  012AE6  518A               	movf	??i2_printf& (0+255),w,b
 30735  012AE8  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 30736  012AEA  A4D8               	btfss	status,2,c
 30737  012AEC  D01E               	goto	i2l1547
 30738                           
 30739                           ; BSR set to: 0
 30740                           ;doprnt.c: 1253: {
 30741                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 30742  012AEE  C099  FFD9         	movff	i2printf@ap,fsr2l
 30743  012AF2  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 30744  012AF6  CFDE F0A1          	movff	postinc2,i2printf@val
 30745  012AFA  CFDD F0A2          	movff	postdec2,i2printf@val+1
 30746  012AFE  0E00               	movlw	0
 30747  012B00  BFA2               	btfsc	(i2printf@val+1)& (0+255),7,b
 30748  012B02  0EFF               	movlw	-1
 30749  012B04  6FA3               	movwf	(i2printf@val+2)& (0+255),b
 30750  012B06  6FA4               	movwf	(i2printf@val+3)& (0+255),b
 30751                           
 30752                           ; BSR set to: 0
 30753  012B08  0E02               	movlw	2
 30754  012B0A  2799               	addwf	i2printf@ap& (0+255),f,b
 30755  012B0C  0E00               	movlw	0
 30756  012B0E  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 30757                           
 30758                           ; BSR set to: 0
 30759                           ;doprnt.c: 1261: if((long)val < 0) {
 30760  012B10  AFA4               	btfss	(i2printf@val+3)& (0+255),7,b
 30761  012B12  D01D               	goto	i2l1549
 30762                           
 30763                           ; BSR set to: 0
 30764                           ;doprnt.c: 1262: flag |= 0x03;
 30765  012B14  0E03               	movlw	3
 30766  012B16  13A9               	iorwf	i2printf@flag& (0+255),f,b
 30767                           
 30768                           ; BSR set to: 0
 30769                           ;doprnt.c: 1263: val = -val;
 30770  012B18  1FA4               	comf	(i2printf@val+3)& (0+255),f,b
 30771  012B1A  1FA3               	comf	(i2printf@val+2)& (0+255),f,b
 30772  012B1C  1FA2               	comf	(i2printf@val+1)& (0+255),f,b
 30773  012B1E  6DA1               	negf	i2printf@val& (0+255),b
 30774  012B20  0E00               	movlw	0
 30775  012B22  23A2               	addwfc	(i2printf@val+1)& (0+255),f,b
 30776  012B24  23A3               	addwfc	(i2printf@val+2)& (0+255),f,b
 30777  012B26  23A4               	addwfc	(i2printf@val+3)& (0+255),f,b
 30778                           
 30779                           ; BSR set to: 0
 30780                           ;doprnt.c: 1264: }
 30781                           ;doprnt.c: 1266: }
 30782  012B28  D012               	goto	i2l1549
 30783  012B2A                     i2l1547:
 30784                           
 30785                           ; BSR set to: 0
 30786                           ;doprnt.c: 1268: else
 30787                           ;doprnt.c: 1273: {
 30788                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 30789                           
 30790                           ; BSR set to: 0
 30791  012B2A  C099  FFD9         	movff	i2printf@ap,fsr2l
 30792  012B2E  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 30793  012B32  CFDE F08A          	movff	postinc2,??i2_printf
 30794  012B36  CFDD F08B          	movff	postdec2,??i2_printf+1
 30795  012B3A  C08A  F0A1         	movff	??i2_printf,i2printf@val
 30796  012B3E  C08B  F0A2         	movff	??i2_printf+1,i2printf@val+1
 30797  012B42  6BA3               	clrf	(i2printf@val+2)& (0+255),b
 30798  012B44  6BA4               	clrf	(i2printf@val+3)& (0+255),b
 30799                           
 30800                           ; BSR set to: 0
 30801  012B46  0E02               	movlw	2
 30802  012B48  2799               	addwf	i2printf@ap& (0+255),f,b
 30803  012B4A  0E00               	movlw	0
 30804  012B4C  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 30805  012B4E                     i2l1549:
 30806                           
 30807                           ; BSR set to: 0
 30808                           ;doprnt.c: 1287: }
 30809                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 30810                           
 30811                           ; BSR set to: 0
 30812  012B4E  51AD               	movf	i2printf@prec& (0+255),w,b
 30813  012B50  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 30814  012B52  A4D8               	btfss	status,2,c
 30815  012B54  D04B               	goto	i2l1551
 30816                           
 30817                           ; BSR set to: 0
 30818  012B56  51A1               	movf	i2printf@val& (0+255),w,b
 30819  012B58  11A2               	iorwf	(i2printf@val+1)& (0+255),w,b
 30820  012B5A  11A3               	iorwf	(i2printf@val+2)& (0+255),w,b
 30821  012B5C  11A4               	iorwf	(i2printf@val+3)& (0+255),w,b
 30822  012B5E  A4D8               	btfss	status,2,c
 30823  012B60  D045               	goto	i2l1551
 30824                           
 30825                           ; BSR set to: 0
 30826                           ;doprnt.c: 1291: prec++;
 30827  012B62  4BAD               	infsnz	i2printf@prec& (0+255),f,b
 30828  012B64  2BAE               	incf	(i2printf@prec+1)& (0+255),f,b
 30829                           
 30830                           ; BSR set to: 0
 30831                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 30832  012B66  D042               	goto	i2l1551
 30833  012B68                     
 30834                           ; BSR set to: 0
 30835                           ;doprnt.c: 1302: case 0xC0:
 30836                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 30837                           
 30838                           ; BSR set to: 0
 30839                           
 30840                           ; BSR set to: 0
 30841  012B68  0E01               	movlw	1
 30842  012B6A  6FAF               	movwf	i2printf@c& (0+255),b
 30843  012B6C                     i2l15072:
 30844                           
 30845                           ; BSR set to: 0
 30846  012B6C  0E0A               	movlw	10
 30847  012B6E  19AF               	xorwf	i2printf@c& (0+255),w,b
 30848  012B70  B4D8               	btfsc	status,2,c
 30849  012B72  D047               	goto	i2l1557
 30850                           
 30851                           ; BSR set to: 0
 30852                           ;doprnt.c: 1306: if(val < dpowers[c])
 30853                           
 30854                           ; BSR set to: 0
 30855                           
 30856                           ; BSR set to: 0
 30857  012B74  51AF               	movf	i2printf@c& (0+255),w,b
 30858  012B76  0D04               	mullw	4
 30859  012B78  0E3B               	movlw	low _dpowers
 30860  012B7A  24F3               	addwf	prodl,w,c
 30861  012B7C  6EF6               	movwf	tblptrl,c
 30862  012B7E  0EE4               	movlw	high _dpowers
 30863  012B80  20F4               	addwfc	prodh,w,c
 30864  012B82  6EF7               	movwf	tblptrh,c
 30865  012B84                     	if	1	;There are 3 active tblptr bytes
 30866  012B84  6AF8               	clrf	tblptru,c
 30867  012B86  0E00               	movlw	low (__mediumconst shr (0+16))
 30868  012B88  22F8               	addwfc	tblptru,f,c
 30869  012B8A                     	endif
 30870  012B8A  0009               	tblrd		*+
 30871  012B8C  50F5               	movf	tablat,w,c
 30872  012B8E  5DA1               	subwf	i2printf@val& (0+255),w,b
 30873  012B90  0009               	tblrd		*+
 30874  012B92  50F5               	movf	tablat,w,c
 30875  012B94  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 30876  012B96  0009               	tblrd		*+
 30877  012B98  50F5               	movf	tablat,w,c
 30878  012B9A  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 30879  012B9C  0009               	tblrd		*+
 30880  012B9E  50F5               	movf	tablat,w,c
 30881  012BA0  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 30882  012BA2  A0D8               	btfss	status,0,c
 30883  012BA4  D02E               	goto	i2l1557
 30884                           
 30885                           ; BSR set to: 0
 30886                           
 30887                           ; BSR set to: 0
 30888                           
 30889                           ; BSR set to: 0
 30890                           ;doprnt.c: 1307: break;
 30891  012BA6  2BAF               	incf	i2printf@c& (0+255),f,b
 30892  012BA8  D7E1               	goto	i2l15072
 30893  012BAA                     
 30894                           ; BSR set to: 0
 30895                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 30896                           
 30897                           ; BSR set to: 0
 30898  012BAA  0E01               	movlw	1
 30899  012BAC  6FAF               	movwf	i2printf@c& (0+255),b
 30900  012BAE                     i2l15086:
 30901                           
 30902                           ; BSR set to: 0
 30903  012BAE  0E08               	movlw	8
 30904  012BB0  19AF               	xorwf	i2printf@c& (0+255),w,b
 30905  012BB2  B4D8               	btfsc	status,2,c
 30906  012BB4  D026               	goto	i2l1557
 30907                           
 30908                           ; BSR set to: 0
 30909                           ;doprnt.c: 1317: if(val < hexpowers[c])
 30910                           
 30911                           ; BSR set to: 0
 30912                           
 30913                           ; BSR set to: 0
 30914  012BB6  51AF               	movf	i2printf@c& (0+255),w,b
 30915  012BB8  0D04               	mullw	4
 30916  012BBA  0E63               	movlw	low _hexpowers
 30917  012BBC  24F3               	addwf	prodl,w,c
 30918  012BBE  6EF6               	movwf	tblptrl,c
 30919  012BC0  0EE4               	movlw	high _hexpowers
 30920  012BC2  20F4               	addwfc	prodh,w,c
 30921  012BC4  6EF7               	movwf	tblptrh,c
 30922  012BC6                     	if	1	;There are 3 active tblptr bytes
 30923  012BC6  6AF8               	clrf	tblptru,c
 30924  012BC8  0E00               	movlw	low (__mediumconst shr (0+16))
 30925  012BCA  22F8               	addwfc	tblptru,f,c
 30926  012BCC                     	endif
 30927  012BCC  0009               	tblrd		*+
 30928  012BCE  50F5               	movf	tablat,w,c
 30929  012BD0  5DA1               	subwf	i2printf@val& (0+255),w,b
 30930  012BD2  0009               	tblrd		*+
 30931  012BD4  50F5               	movf	tablat,w,c
 30932  012BD6  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 30933  012BD8  0009               	tblrd		*+
 30934  012BDA  50F5               	movf	tablat,w,c
 30935  012BDC  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 30936  012BDE  0009               	tblrd		*+
 30937  012BE0  50F5               	movf	tablat,w,c
 30938  012BE2  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 30939  012BE4  A0D8               	btfss	status,0,c
 30940  012BE6  D00D               	goto	i2l1557
 30941                           
 30942                           ; BSR set to: 0
 30943                           
 30944                           ; BSR set to: 0
 30945                           
 30946                           ; BSR set to: 0
 30947                           ;doprnt.c: 1318: break;
 30948  012BE8  2BAF               	incf	i2printf@c& (0+255),f,b
 30949  012BEA  D7E1               	goto	i2l15086
 30950  012BEC                     i2l1551:
 30951                           
 30952                           ; BSR set to: 0
 30953                           
 30954                           ; BSR set to: 0
 30955  012BEC  51A9               	movf	i2printf@flag& (0+255),w,b
 30956  012BEE  0BC0               	andlw	192
 30957                           
 30958                           ; Switch size 1, requested type "space"
 30959                           ; Number of cases is 3, Range of values is 0 to 192
 30960                           ; switch strategies available:
 30961                           ; Name         Instructions Cycles
 30962                           ; simple_byte           10     6 (average)
 30963                           ;	Chosen strategy is simple_byte
 30964  012BF0  0A00               	xorlw	0	; case 0
 30965  012BF2  B4D8               	btfsc	status,2,c
 30966  012BF4  D7B9               	goto	i2l1552
 30967  012BF6  0A80               	xorlw	128	; case 128
 30968  012BF8  B4D8               	btfsc	status,2,c
 30969  012BFA  D7D7               	goto	i2l1558
 30970  012BFC  0A40               	xorlw	64	; case 192
 30971  012BFE  B4D8               	btfsc	status,2,c
 30972  012C00  D7B3               	goto	i2l1552
 30973  012C02                     i2l1557:
 30974                           
 30975                           ; BSR set to: 0
 30976                           ;doprnt.c: 1339: if(c < prec)
 30977                           
 30978                           ; BSR set to: 0
 30979  012C02  0E80               	movlw	128
 30980  012C04  BFAF               	btfsc	i2printf@c& (0+255),7,b
 30981  012C06  0E7F               	movlw	127
 30982  012C08  6F8A               	movwf	??i2_printf& (0+255),b
 30983  012C0A  51AD               	movf	i2printf@prec& (0+255),w,b
 30984  012C0C  5DAF               	subwf	i2printf@c& (0+255),w,b
 30985  012C0E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 30986  012C10  0A80               	xorlw	128
 30987  012C12  598A               	subwfb	??i2_printf& (0+255),w,b
 30988  012C14  B0D8               	btfsc	status,0,c
 30989  012C16  D003               	goto	i2l1562
 30990                           
 30991                           ; BSR set to: 0
 30992                           ;doprnt.c: 1340: c = prec;
 30993  012C18  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 30994  012C1C  D010               	goto	i2l1564
 30995  012C1E                     i2l1562:
 30996                           
 30997                           ; BSR set to: 0
 30998                           ;doprnt.c: 1341: else if(prec < c)
 30999                           
 31000                           ; BSR set to: 0
 31001  012C1E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 31002  012C20  0A80               	xorlw	128
 31003  012C22  6F8A               	movwf	??i2_printf& (0+255),b
 31004  012C24  51AF               	movf	i2printf@c& (0+255),w,b
 31005  012C26  5DAD               	subwf	i2printf@prec& (0+255),w,b
 31006  012C28  0E80               	movlw	128
 31007  012C2A  BFAF               	btfsc	i2printf@c& (0+255),7,b
 31008  012C2C  0E7F               	movlw	127
 31009  012C2E  598A               	subwfb	??i2_printf& (0+255),w,b
 31010  012C30  B0D8               	btfsc	status,0,c
 31011  012C32  D005               	goto	i2l1564
 31012                           
 31013                           ; BSR set to: 0
 31014                           ;doprnt.c: 1342: prec = c;
 31015  012C34  51AF               	movf	i2printf@c& (0+255),w,b
 31016  012C36  6FAD               	movwf	i2printf@prec& (0+255),b
 31017  012C38  6BAE               	clrf	(i2printf@prec+1)& (0+255),b
 31018  012C3A  BFAD               	btfsc	i2printf@prec& (0+255),7,b
 31019  012C3C  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 31020  012C3E                     i2l1564:
 31021                           
 31022                           ; BSR set to: 0
 31023                           ;doprnt.c: 1345: if(width && flag & 0x03)
 31024                           
 31025                           ; BSR set to: 0
 31026                           
 31027                           ; BSR set to: 0
 31028  012C3E  51AB               	movf	i2printf@width& (0+255),w,b
 31029  012C40  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 31030  012C42  B4D8               	btfsc	status,2,c
 31031  012C44  D00D               	goto	i2l1565
 31032                           
 31033                           ; BSR set to: 0
 31034  012C46  0E03               	movlw	3
 31035  012C48  15A9               	andwf	i2printf@flag& (0+255),w,b
 31036  012C4A  6F8A               	movwf	??i2_printf& (0+255),b
 31037  012C4C  0E00               	movlw	0
 31038  012C4E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 31039  012C50  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 31040  012C52  518A               	movf	??i2_printf& (0+255),w,b
 31041  012C54  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 31042  012C56  B4D8               	btfsc	status,2,c
 31043  012C58  D003               	goto	i2l1565
 31044                           
 31045                           ; BSR set to: 0
 31046                           ;doprnt.c: 1346: width--;
 31047  012C5A  07AB               	decf	i2printf@width& (0+255),f,b
 31048  012C5C  A0D8               	btfss	status,0,c
 31049  012C5E  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 31050  012C60                     i2l1565:
 31051                           
 31052                           ; BSR set to: 0
 31053                           ;doprnt.c: 1348: if(flag & 0x4000) {
 31054                           
 31055                           ; BSR set to: 0
 31056  012C60  ADAA               	btfss	(i2printf@flag+1)& (0+255),6,b
 31057  012C62  D013               	goto	i2l1568
 31058                           
 31059                           ; BSR set to: 0
 31060                           ;doprnt.c: 1349: if(width > prec)
 31061  012C64  51AB               	movf	i2printf@width& (0+255),w,b
 31062  012C66  5DAD               	subwf	i2printf@prec& (0+255),w,b
 31063  012C68  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 31064  012C6A  0A80               	xorlw	128
 31065  012C6C  6F8A               	movwf	??i2_printf& (0+255),b
 31066  012C6E  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 31067  012C70  0A80               	xorlw	128
 31068  012C72  598A               	subwfb	??i2_printf& (0+255),w,b
 31069  012C74  B0D8               	btfsc	status,0,c
 31070  012C76  D005               	goto	i2l1567
 31071                           
 31072                           ; BSR set to: 0
 31073                           ;doprnt.c: 1350: width -= prec;
 31074  012C78  51AD               	movf	i2printf@prec& (0+255),w,b
 31075  012C7A  5FAB               	subwf	i2printf@width& (0+255),f,b
 31076  012C7C  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 31077  012C7E  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 31078  012C80  D004               	goto	i2l1568
 31079  012C82                     i2l1567:
 31080                           
 31081                           ; BSR set to: 0
 31082                           ;doprnt.c: 1351: else
 31083                           ;doprnt.c: 1352: width = 0;
 31084                           
 31085                           ; BSR set to: 0
 31086  012C82  0E00               	movlw	0
 31087  012C84  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 31088  012C86  0E00               	movlw	0
 31089  012C88  6FAB               	movwf	i2printf@width& (0+255),b
 31090  012C8A                     i2l1568:
 31091                           
 31092                           ; BSR set to: 0
 31093                           ;doprnt.c: 1353: }
 31094                           ;doprnt.c: 1381: if(width > c)
 31095                           
 31096                           ; BSR set to: 0
 31097                           
 31098                           ; BSR set to: 0
 31099  012C8A  0E80               	movlw	128
 31100  012C8C  BFAF               	btfsc	i2printf@c& (0+255),7,b
 31101  012C8E  0E7F               	movlw	127
 31102  012C90  6F8A               	movwf	??i2_printf& (0+255),b
 31103  012C92  51AB               	movf	i2printf@width& (0+255),w,b
 31104  012C94  5DAF               	subwf	i2printf@c& (0+255),w,b
 31105  012C96  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 31106  012C98  0A80               	xorlw	128
 31107  012C9A  598A               	subwfb	??i2_printf& (0+255),w,b
 31108  012C9C  B0D8               	btfsc	status,0,c
 31109  012C9E  D007               	goto	i2l1569
 31110                           
 31111                           ; BSR set to: 0
 31112                           ;doprnt.c: 1382: width -= c;
 31113  012CA0  51AF               	movf	i2printf@c& (0+255),w,b
 31114  012CA2  5FAB               	subwf	i2printf@width& (0+255),f,b
 31115  012CA4  0E00               	movlw	0
 31116  012CA6  BFAF               	btfsc	i2printf@c& (0+255),7,b
 31117  012CA8  0EFF               	movlw	255
 31118  012CAA  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 31119  012CAC  D004               	goto	i2l1570
 31120  012CAE                     i2l1569:
 31121                           
 31122                           ; BSR set to: 0
 31123                           ;doprnt.c: 1383: else
 31124                           ;doprnt.c: 1384: width = 0;
 31125                           
 31126                           ; BSR set to: 0
 31127  012CAE  0E00               	movlw	0
 31128  012CB0  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 31129  012CB2  0E00               	movlw	0
 31130  012CB4  6FAB               	movwf	i2printf@width& (0+255),b
 31131  012CB6                     i2l1570:
 31132                           
 31133                           ; BSR set to: 0
 31134                           ;doprnt.c: 1387: if(flag & 0x04) {
 31135                           
 31136                           ; BSR set to: 0
 31137  012CB6  A5A9               	btfss	i2printf@flag& (0+255),2,b
 31138  012CB8  D01A               	goto	i2l1571
 31139                           
 31140                           ; BSR set to: 0
 31141                           ;doprnt.c: 1392: if(flag & 0x03)
 31142  012CBA  0E03               	movlw	3
 31143  012CBC  15A9               	andwf	i2printf@flag& (0+255),w,b
 31144  012CBE  6F8A               	movwf	??i2_printf& (0+255),b
 31145  012CC0  0E00               	movlw	0
 31146  012CC2  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 31147  012CC4  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 31148  012CC6  518A               	movf	??i2_printf& (0+255),w,b
 31149  012CC8  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 31150  012CCA  B4D8               	btfsc	status,2,c
 31151  012CCC  D003               	goto	i2l1572
 31152                           
 31153                           ; BSR set to: 0
 31154                           ;doprnt.c: 1393: (putch('-') );
 31155  012CCE  0E2D               	movlw	45
 31156  012CD0  EC63  F0C9         	call	i2_putch
 31157  012CD4                     i2l1572:
 31158                           
 31159                           ;doprnt.c: 1415: if(width)
 31160  012CD4  0100               	movlb	0	; () banked
 31161  012CD6  51AB               	movf	i2printf@width& (0+255),w,b
 31162  012CD8  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 31163  012CDA  B4D8               	btfsc	status,2,c
 31164  012CDC  D0B1               	goto	i2l1581
 31165                           
 31166                           ; BSR set to: 0
 31167                           ;doprnt.c: 1417: (putch('0') );
 31168                           
 31169                           ; BSR set to: 0
 31170                           
 31171                           ;doprnt.c: 1416: do
 31172  012CDE  0E30               	movlw	48
 31173  012CE0  EC63  F0C9         	call	i2_putch
 31174                           
 31175                           ;doprnt.c: 1418: while(--width);
 31176  012CE4  0100               	movlb	0	; () banked
 31177  012CE6  07AB               	decf	i2printf@width& (0+255),f,b
 31178  012CE8  A0D8               	btfss	status,0,c
 31179  012CEA  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 31180  012CEC  D7F4               	goto	L26
 31181  012CEE                     i2l1571:
 31182                           
 31183                           ; BSR set to: 0
 31184                           ;doprnt.c: 1422: {
 31185                           ;doprnt.c: 1424: if(width
 31186                           ;doprnt.c: 1428: )
 31187                           
 31188                           ; BSR set to: 0
 31189  012CEE  51AB               	movf	i2printf@width& (0+255),w,b
 31190  012CF0  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 31191  012CF2  B4D8               	btfsc	status,2,c
 31192  012CF4  D00B               	goto	i2u1912_40
 31193  012CF6                     i2u1911_40:
 31194                           
 31195                           ; BSR set to: 0
 31196                           ;doprnt.c: 1430: (putch(' ') );
 31197                           
 31198                           ; BSR set to: 0
 31199                           
 31200                           ;doprnt.c: 1429: do
 31201  012CF6  0E20               	movlw	32
 31202  012CF8  EC63  F0C9         	call	i2_putch
 31203                           
 31204                           ;doprnt.c: 1431: while(--width);
 31205  012CFC  0100               	movlb	0	; () banked
 31206  012CFE  07AB               	decf	i2printf@width& (0+255),f,b
 31207  012D00  A0D8               	btfss	status,0,c
 31208  012D02  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 31209  012D04  51AB               	movf	i2printf@width& (0+255),w,b
 31210  012D06  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 31211  012D08  A4D8               	btfss	status,2,c
 31212  012D0A  D7F5               	goto	i2u1911_40
 31213  012D0C                     i2u1912_40:
 31214                           
 31215                           ; BSR set to: 0
 31216                           ;doprnt.c: 1438: if(flag & 0x03)
 31217                           
 31218                           ; BSR set to: 0
 31219                           
 31220                           ; BSR set to: 0
 31221  012D0C  0E03               	movlw	3
 31222  012D0E  15A9               	andwf	i2printf@flag& (0+255),w,b
 31223  012D10  6F8A               	movwf	??i2_printf& (0+255),b
 31224  012D12  0E00               	movlw	0
 31225  012D14  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 31226  012D16  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 31227  012D18  518A               	movf	??i2_printf& (0+255),w,b
 31228  012D1A  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 31229  012D1C  B4D8               	btfsc	status,2,c
 31230  012D1E  D090               	goto	i2l1581
 31231                           
 31232                           ; BSR set to: 0
 31233                           ;doprnt.c: 1439: (putch('-') );
 31234  012D20  0E2D               	movlw	45
 31235  012D22  EC63  F0C9         	call	i2_putch
 31236                           
 31237                           ;doprnt.c: 1469: }
 31238                           ;doprnt.c: 1474: while(prec--) {
 31239  012D26  D08C               	goto	i2l1581
 31240  012D28                     
 31241                           ;doprnt.c: 1486: case 0xC0:
 31242                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 31243  012D28  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 31244  012D2C  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 31245  012D30  0100               	movlb	0	; () banked
 31246  012D32  90D8               	bcf	status,0,c
 31247  012D34  378A               	rlcf	??i2_printf& (0+255),f,b
 31248  012D36  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 31249  012D38  90D8               	bcf	status,0,c
 31250  012D3A  378A               	rlcf	??i2_printf& (0+255),f,b
 31251  012D3C  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 31252  012D3E  0E3B               	movlw	low _dpowers
 31253  012D40  258A               	addwf	??i2_printf& (0+255),w,b
 31254  012D42  6EF6               	movwf	tblptrl,c
 31255  012D44  0EE4               	movlw	high _dpowers
 31256  012D46  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 31257  012D48  6EF7               	movwf	tblptrh,c
 31258  012D4A                     	if	1	;There are 3 active tblptr bytes
 31259  012D4A  6AF8               	clrf	tblptru,c
 31260  012D4C  0E00               	movlw	low (__mediumconst shr (0+16))
 31261  012D4E  22F8               	addwfc	tblptru,f,c
 31262  012D50                     	endif
 31263  012D50  0009               	tblrd		*+
 31264  012D52  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 31265  012D56  0009               	tblrd		*+
 31266  012D58  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 31267  012D5C  0009               	tblrd		*+
 31268  012D5E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 31269  012D62  000A               	tblrd		*-
 31270  012D64  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 31271  012D68  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 31272  012D6C  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 31273  012D70  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 31274  012D74  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 31275  012D78  EC7F  F0C1         	call	i2___lldiv	;wreg free
 31276  012D7C  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 31277  012D80  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 31278  012D84  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 31279  012D88  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 31280  012D8C  0E0A               	movlw	10
 31281  012D8E  6E12               	movwf	i2___llmod@divisor,c
 31282  012D90  0E00               	movlw	0
 31283  012D92  6E13               	movwf	i2___llmod@divisor+1,c
 31284  012D94  0E00               	movlw	0
 31285  012D96  6E14               	movwf	i2___llmod@divisor+2,c
 31286  012D98  0E00               	movlw	0
 31287  012D9A  6E15               	movwf	i2___llmod@divisor+3,c
 31288  012D9C  EC80  F0C3         	call	i2___llmod	;wreg free
 31289  012DA0  500E               	movf	?i2___llmod,w,c
 31290  012DA2  0F30               	addlw	48
 31291  012DA4  0100               	movlb	0	; () banked
 31292  012DA6  6FAF               	movwf	i2printf@c& (0+255),b
 31293                           
 31294                           ;doprnt.c: 1491: break;
 31295  012DA8  D048               	goto	i2l1586
 31296  012DAA                     
 31297                           ; BSR set to: 0
 31298                           ;doprnt.c: 1499: {
 31299                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 31300                           
 31301                           ; BSR set to: 0
 31302  012DAA  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 31303  012DAE  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 31304  012DB2  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 31305  012DB6  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 31306  012DBA  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 31307  012DBE  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 31308  012DC2  90D8               	bcf	status,0,c
 31309  012DC4  378A               	rlcf	??i2_printf& (0+255),f,b
 31310  012DC6  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 31311  012DC8  90D8               	bcf	status,0,c
 31312  012DCA  378A               	rlcf	??i2_printf& (0+255),f,b
 31313  012DCC  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 31314  012DCE  0E63               	movlw	low _hexpowers
 31315  012DD0  258A               	addwf	??i2_printf& (0+255),w,b
 31316  012DD2  6EF6               	movwf	tblptrl,c
 31317  012DD4  0EE4               	movlw	high _hexpowers
 31318  012DD6  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 31319  012DD8  6EF7               	movwf	tblptrh,c
 31320  012DDA                     	if	1	;There are 3 active tblptr bytes
 31321  012DDA  6AF8               	clrf	tblptru,c
 31322  012DDC  0E00               	movlw	low (__mediumconst shr (0+16))
 31323  012DDE  22F8               	addwfc	tblptru,f,c
 31324  012DE0                     	endif
 31325  012DE0  0009               	tblrd		*+
 31326  012DE2  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 31327  012DE6  0009               	tblrd		*+
 31328  012DE8  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 31329  012DEC  0009               	tblrd		*+
 31330  012DEE  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 31331  012DF2  000A               	tblrd		*-
 31332  012DF4  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 31333  012DF8  EC7F  F0C1         	call	i2___lldiv	;wreg free
 31334  012DFC  5001               	movf	?i2___lldiv,w,c
 31335  012DFE  0B0F               	andlw	15
 31336  012E00  0100               	movlb	0	; () banked
 31337  012E02  6F94               	movwf	i2printf@idx& (0+255),b
 31338                           
 31339                           ; BSR set to: 0
 31340                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 31341  012E04  5194               	movf	i2printf@idx& (0+255),w,b
 31342  012E06  0D01               	mullw	1
 31343  012E08  0E80               	movlw	low STR_163
 31344  012E0A  24F3               	addwf	prodl,w,c
 31345  012E0C  6EF6               	movwf	tblptrl,c
 31346  012E0E  0EFD               	movlw	high STR_163
 31347  012E10  20F4               	addwfc	prodh,w,c
 31348  012E12  6EF7               	movwf	tblptrh,c
 31349  012E14                     	if	1	;There are 3 active tblptr bytes
 31350  012E14  6AF8               	clrf	tblptru,c
 31351  012E16  0E00               	movlw	low (__mediumconst shr (0+16))
 31352  012E18  22F8               	addwfc	tblptru,f,c
 31353  012E1A                     	endif
 31354  012E1A  0008               	tblrd		*
 31355  012E1C  CFF5 F0AF          	movff	tablat,i2printf@c
 31356                           
 31357                           ; BSR set to: 0
 31358                           ;doprnt.c: 1523: }
 31359                           
 31360                           ;doprnt.c: 1508: }
 31361                           ;doprnt.c: 1510: break;
 31362  012E20  D00C               	goto	i2l1586
 31363  012E22                     i2l15160:
 31364  012E22  0100               	movlb	0	; () banked
 31365  012E24  51A9               	movf	i2printf@flag& (0+255),w,b
 31366  012E26  0BC0               	andlw	192
 31367                           
 31368                           ; Switch size 1, requested type "space"
 31369                           ; Number of cases is 3, Range of values is 0 to 192
 31370                           ; switch strategies available:
 31371                           ; Name         Instructions Cycles
 31372                           ; simple_byte           10     6 (average)
 31373                           ;	Chosen strategy is simple_byte
 31374  012E28  0A00               	xorlw	0	; case 0
 31375  012E2A  B4D8               	btfsc	status,2,c
 31376  012E2C  D77D               	goto	i2l1584
 31377  012E2E  0A80               	xorlw	128	; case 128
 31378  012E30  B4D8               	btfsc	status,2,c
 31379  012E32  D7BB               	goto	i2l1587
 31380  012E34  0A40               	xorlw	64	; case 192
 31381  012E36  B4D8               	btfsc	status,2,c
 31382  012E38  D777               	goto	i2l1584
 31383  012E3A                     i2l1586:
 31384                           
 31385                           ; BSR set to: 0
 31386                           ;doprnt.c: 1524: (putch(c) );
 31387                           
 31388                           ; BSR set to: 0
 31389  012E3A  51AF               	movf	i2printf@c& (0+255),w,b
 31390  012E3C  EC63  F0C9         	call	i2_putch
 31391  012E40                     i2l1581:
 31392  012E40  0100               	movlb	0	; () banked
 31393  012E42  07AD               	decf	i2printf@prec& (0+255),f,b
 31394  012E44  A0D8               	btfss	status,0,c
 31395  012E46  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 31396  012E48  29AD               	incf	i2printf@prec& (0+255),w,b
 31397  012E4A  E1EB               	bnz	i2l15160
 31398  012E4C  29AE               	incf	(i2printf@prec+1)& (0+255),w,b
 31399  012E4E  A4D8               	btfss	status,2,c
 31400  012E50  D7E8               	goto	i2l1583
 31401  012E52                     i2u1914_40:
 31402                           
 31403                           ; BSR set to: 0
 31404                           
 31405                           ; BSR set to: 0
 31406  012E52  0100               	movlb	0	; () banked
 31407  012E54  5188               	movf	i2printf@f& (0+255),w,b
 31408  012E56  6F8A               	movwf	??i2_printf& (0+255),b
 31409  012E58  5189               	movf	(i2printf@f+1)& (0+255),w,b
 31410  012E5A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 31411  012E5C  4B88               	infsnz	i2printf@f& (0+255),f,b
 31412  012E5E  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 31413  012E60  C08A  FFF6         	movff	??i2_printf,tblptrl
 31414  012E64  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 31415  012E68  0E00               	movlw	low (__mediumconst shr (0+16))
 31416  012E6A  6EF8               	movwf	tblptru,c
 31417  012E6C  0E0D               	movlw	(high __ramtop+-1)
 31418  012E6E  64F7               	cpfsgt	tblptrh,c
 31419  012E70  D003               	bra	i2u1915_47
 31420  012E72  0008               	tblrd		*
 31421  012E74  50F5               	movf	tablat,w,c
 31422  012E76  D005               	bra	i2u1915_40
 31423  012E78                     i2u1915_47:
 31424  012E78  CFF6 FFE9          	movff	tblptrl,fsr0l
 31425  012E7C  CFF7 FFEA          	movff	tblptrh,fsr0h
 31426  012E80  50EF               	movf	indf0,w,c
 31427  012E82                     i2u1915_40:
 31428  012E82  0100               	movlb	0	; () banked
 31429  012E84  6FAF               	movwf	i2printf@c& (0+255),b
 31430  012E86  51AF               	movf	i2printf@c& (0+255),w,b
 31431  012E88  B4D8               	btfsc	status,2,c
 31432  012E8A  0012               	return	
 31433  012E8C  EF6D  F090         	goto	i2l1455
 31434  012E90                     __end_ofi2_printf:
 31435                           	opt stack 0
 31436                           tosu	equ	0xFFF
 31437                           tosh	equ	0xFFE
 31438                           tosl	equ	0xFFD
 31439                           pclatu	equ	0xFFB
 31440                           pclath	equ	0xFFA
 31441                           tblptru	equ	0xFF8
 31442                           tblptrh	equ	0xFF7
 31443                           tblptrl	equ	0xFF6
 31444                           tablat	equ	0xFF5
 31445                           prodh	equ	0xFF4
 31446                           prodl	equ	0xFF3
 31447                           intcon	equ	0xFF2
 31448                           indf0	equ	0xFEF
 31449                           postinc0	equ	0xFEE
 31450                           fsr0h	equ	0xFEA
 31451                           fsr0l	equ	0xFE9
 31452                           wreg	equ	0xFE8
 31453                           indf1	equ	0xFE7
 31454                           postdec1	equ	0xFE5
 31455                           plusw1	equ	0xFE3
 31456                           fsr1h	equ	0xFE2
 31457                           fsr1l	equ	0xFE1
 31458                           bsr	equ	0xFE0
 31459                           indf2	equ	0xFDF
 31460                           postinc2	equ	0xFDE
 31461                           postdec2	equ	0xFDD
 31462                           plusw2	equ	0xFDB
 31463                           fsr2h	equ	0xFDA
 31464                           fsr2l	equ	0xFD9
 31465                           status	equ	0xFD8
 31466                           
 31467 ;; *************** function i2_scale *****************
 31468 ;; Defined at:
 31469 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 31470 ;; Parameters:    Size  Location     Type
 31471 ;;  scl             1    wreg     char 
 31472 ;; Auto vars:     Size  Location     Type
 31473 ;;  scl             1   80[COMRAM] char 
 31474 ;; Return value:  Size  Location     Type
 31475 ;;                  4   72[COMRAM] char 
 31476 ;; Registers used:
 31477 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31478 ;; Tracked objects:
 31479 ;;		On entry : 0/0
 31480 ;;		On exit  : 0/0
 31481 ;;		Unchanged: 0/0
 31482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31484 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31486 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31487 ;;Total ram usage:        9 bytes
 31488 ;; Hardware stack levels used:    1
 31489 ;; Hardware stack levels required when called:    1
 31490 ;; This function calls:
 31491 ;;		i2___awdiv
 31492 ;;		i2___awmod
 31493 ;;		i2___flmul
 31494 ;; This function is called by:
 31495 ;;		i2_printf
 31496 ;; This function uses a non-reentrant model
 31497 ;;
 31498                           
 31499                           	psect	text92
 31500  013D14                     __ptext92:
 31501                           	opt stack 0
 31502  013D14                     i2_scale:
 31503                           	opt stack 15
 31504                           
 31505                           ; BSR set to: 0
 31506                           ;incstack = 0
 31507                           ;i2scale@scl stored from wreg
 31508  013D14  6E51               	movwf	i2scale@scl,c
 31509                           
 31510                           ;doprnt.c: 428: if(scl < 0) {
 31511  013D16  AE51               	btfss	i2scale@scl,7,c
 31512  013D18  D11F               	goto	i2l1444
 31513                           
 31514                           ;doprnt.c: 429: scl = -scl;
 31515  013D1A  6C51               	negf	i2scale@scl,c
 31516                           
 31517                           ;doprnt.c: 430: if(scl>=110)
 31518  013D1C  5051               	movf	i2scale@scl,w,c
 31519  013D1E  0A80               	xorlw	128
 31520  013D20  0F12               	addlw	-238
 31521  013D22  A0D8               	btfss	status,0,c
 31522  013D24  D0A1               	goto	i2l1445
 31523                           
 31524                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 31525  013D26  0E00               	movlw	0
 31526  013D28  6E0A               	movwf	i2___awdiv@divisor+1,c
 31527  013D2A  0E0A               	movlw	10
 31528  013D2C  6E09               	movwf	i2___awdiv@divisor,c
 31529  013D2E  0E00               	movlw	0
 31530  013D30  6E04               	movwf	i2___awmod@divisor+1,c
 31531  013D32  0E64               	movlw	100
 31532  013D34  6E03               	movwf	i2___awmod@divisor,c
 31533  013D36  5051               	movf	i2scale@scl,w,c
 31534  013D38  6E01               	movwf	i2___awmod@dividend,c
 31535  013D3A  6A02               	clrf	i2___awmod@dividend+1,c
 31536  013D3C  BE01               	btfsc	i2___awmod@dividend,7,c
 31537  013D3E  0602               	decf	i2___awmod@dividend+1,f,c
 31538  013D40  EC74  F0C2         	call	i2___awmod	;wreg free
 31539  013D44  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 31540  013D48  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 31541  013D4C  EC3D  F0C1         	call	i2___awdiv	;wreg free
 31542  013D50  90D8               	bcf	status,0,c
 31543  013D52  3607               	rlcf	?i2___awdiv,f,c
 31544  013D54  3608               	rlcf	?i2___awdiv+1,f,c
 31545  013D56  90D8               	bcf	status,0,c
 31546  013D58  3607               	rlcf	?i2___awdiv,f,c
 31547  013D5A  3608               	rlcf	?i2___awdiv+1,f,c
 31548  013D5C  0E24               	movlw	36
 31549  013D5E  2607               	addwf	?i2___awdiv,f,c
 31550  013D60  0E00               	movlw	0
 31551  013D62  2208               	addwfc	?i2___awdiv+1,f,c
 31552  013D64  0E07               	movlw	low __npowers_
 31553  013D66  2407               	addwf	?i2___awdiv,w,c
 31554  013D68  6EF6               	movwf	tblptrl,c
 31555  013D6A  0EE4               	movlw	high __npowers_
 31556  013D6C  2008               	addwfc	?i2___awdiv+1,w,c
 31557  013D6E  6EF7               	movwf	tblptrh,c
 31558  013D70                     	if	1	;There are 3 active tblptr bytes
 31559  013D70  6AF8               	clrf	tblptru,c
 31560  013D72  0E00               	movlw	low (__mediumconst shr (0+16))
 31561  013D74  22F8               	addwfc	tblptru,f,c
 31562  013D76                     	endif
 31563  013D76  0009               	tblrd		*+
 31564  013D78  CFF5 F034          	movff	tablat,i2___flmul@a
 31565  013D7C  0009               	tblrd		*+
 31566  013D7E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 31567  013D82  0009               	tblrd		*+
 31568  013D84  CFF5 F036          	movff	tablat,i2___flmul@a+2
 31569  013D88  000A               	tblrd		*-
 31570  013D8A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 31571  013D8E  0E00               	movlw	0
 31572  013D90  6E0A               	movwf	i2___awdiv@divisor+1,c
 31573  013D92  0E64               	movlw	100
 31574  013D94  6E09               	movwf	i2___awdiv@divisor,c
 31575  013D96  5051               	movf	i2scale@scl,w,c
 31576  013D98  6E07               	movwf	i2___awdiv@dividend,c
 31577  013D9A  6A08               	clrf	i2___awdiv@dividend+1,c
 31578  013D9C  BE07               	btfsc	i2___awdiv@dividend,7,c
 31579  013D9E  0608               	decf	i2___awdiv@dividend+1,f,c
 31580  013DA0  EC3D  F0C1         	call	i2___awdiv	;wreg free
 31581  013DA4  90D8               	bcf	status,0,c
 31582  013DA6  3607               	rlcf	?i2___awdiv,f,c
 31583  013DA8  3608               	rlcf	?i2___awdiv+1,f,c
 31584  013DAA  90D8               	bcf	status,0,c
 31585  013DAC  3607               	rlcf	?i2___awdiv,f,c
 31586  013DAE  3608               	rlcf	?i2___awdiv+1,f,c
 31587  013DB0  0E48               	movlw	72
 31588  013DB2  2607               	addwf	?i2___awdiv,f,c
 31589  013DB4  0E00               	movlw	0
 31590  013DB6  2208               	addwfc	?i2___awdiv+1,f,c
 31591  013DB8  0E07               	movlw	low __npowers_
 31592  013DBA  2407               	addwf	?i2___awdiv,w,c
 31593  013DBC  6EF6               	movwf	tblptrl,c
 31594  013DBE  0EE4               	movlw	high __npowers_
 31595  013DC0  2008               	addwfc	?i2___awdiv+1,w,c
 31596  013DC2  6EF7               	movwf	tblptrh,c
 31597  013DC4                     	if	1	;There are 3 active tblptr bytes
 31598  013DC4  6AF8               	clrf	tblptru,c
 31599  013DC6  0E00               	movlw	low (__mediumconst shr (0+16))
 31600  013DC8  22F8               	addwfc	tblptru,f,c
 31601  013DCA                     	endif
 31602  013DCA  0009               	tblrd		*+
 31603  013DCC  CFF5 F030          	movff	tablat,i2___flmul@b
 31604  013DD0  0009               	tblrd		*+
 31605  013DD2  CFF5 F031          	movff	tablat,i2___flmul@b+1
 31606  013DD6  0009               	tblrd		*+
 31607  013DD8  CFF5 F032          	movff	tablat,i2___flmul@b+2
 31608  013DDC  000A               	tblrd		*-
 31609  013DDE  CFF5 F033          	movff	tablat,i2___flmul@b+3
 31610  013DE2  EC27  F0A4         	call	i2___flmul	;wreg free
 31611  013DE6  C030  F04D         	movff	?i2___flmul,i2_scale$4185
 31612  013DEA  C031  F04E         	movff	?i2___flmul+1,i2_scale$4185+1
 31613  013DEE  C032  F04F         	movff	?i2___flmul+2,i2_scale$4185+2
 31614  013DF2  C033  F050         	movff	?i2___flmul+3,i2_scale$4185+3
 31615                           
 31616                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 31617  013DF6  C04D  F030         	movff	i2_scale$4185,i2___flmul@b
 31618  013DFA  C04E  F031         	movff	i2_scale$4185+1,i2___flmul@b+1
 31619  013DFE  C04F  F032         	movff	i2_scale$4185+2,i2___flmul@b+2
 31620  013E02  C050  F033         	movff	i2_scale$4185+3,i2___flmul@b+3
 31621  013E06  0E00               	movlw	0
 31622  013E08  6E04               	movwf	i2___awmod@divisor+1,c
 31623  013E0A  0E0A               	movlw	10
 31624  013E0C  6E03               	movwf	i2___awmod@divisor,c
 31625  013E0E  5051               	movf	i2scale@scl,w,c
 31626  013E10  6E01               	movwf	i2___awmod@dividend,c
 31627  013E12  6A02               	clrf	i2___awmod@dividend+1,c
 31628  013E14  BE01               	btfsc	i2___awmod@dividend,7,c
 31629  013E16  0602               	decf	i2___awmod@dividend+1,f,c
 31630  013E18  EC74  F0C2         	call	i2___awmod	;wreg free
 31631  013E1C  90D8               	bcf	status,0,c
 31632  013E1E  3601               	rlcf	?i2___awmod,f,c
 31633  013E20  3602               	rlcf	?i2___awmod+1,f,c
 31634  013E22  90D8               	bcf	status,0,c
 31635  013E24  3601               	rlcf	?i2___awmod,f,c
 31636  013E26  3602               	rlcf	?i2___awmod+1,f,c
 31637  013E28  0E07               	movlw	low __npowers_
 31638  013E2A  2401               	addwf	?i2___awmod,w,c
 31639  013E2C  6EF6               	movwf	tblptrl,c
 31640  013E2E  0EE4               	movlw	high __npowers_
 31641  013E30  2002               	addwfc	?i2___awmod+1,w,c
 31642  013E32  6EF7               	movwf	tblptrh,c
 31643  013E34                     	if	1	;There are 3 active tblptr bytes
 31644  013E34  6AF8               	clrf	tblptru,c
 31645  013E36  0E00               	movlw	low (__mediumconst shr (0+16))
 31646  013E38  22F8               	addwfc	tblptru,f,c
 31647  013E3A                     	endif
 31648  013E3A  0009               	tblrd		*+
 31649  013E3C  CFF5 F034          	movff	tablat,i2___flmul@a
 31650  013E40  0009               	tblrd		*+
 31651  013E42  CFF5 F035          	movff	tablat,i2___flmul@a+1
 31652  013E46  0009               	tblrd		*+
 31653  013E48  CFF5 F036          	movff	tablat,i2___flmul@a+2
 31654  013E4C  000A               	tblrd		*-
 31655  013E4E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 31656  013E52  EC27  F0A4         	call	i2___flmul	;wreg free
 31657  013E56  C030  F049         	movff	?i2___flmul,?i2_scale
 31658  013E5A  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 31659  013E5E  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 31660  013E62  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 31661  013E66  0012               	return	
 31662  013E68                     i2l1445:
 31663                           
 31664                           ;doprnt.c: 432: else if(scl > 10)
 31665  013E68  5051               	movf	i2scale@scl,w,c
 31666  013E6A  0A80               	xorlw	128
 31667  013E6C  0F75               	addlw	-139
 31668  013E6E  A0D8               	btfss	status,0,c
 31669  013E70  D05B               	goto	i2l1448
 31670                           
 31671                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 31672  013E72  0E00               	movlw	0
 31673  013E74  6E0A               	movwf	i2___awdiv@divisor+1,c
 31674  013E76  0E0A               	movlw	10
 31675  013E78  6E09               	movwf	i2___awdiv@divisor,c
 31676  013E7A  5051               	movf	i2scale@scl,w,c
 31677  013E7C  6E07               	movwf	i2___awdiv@dividend,c
 31678  013E7E  6A08               	clrf	i2___awdiv@dividend+1,c
 31679  013E80  BE07               	btfsc	i2___awdiv@dividend,7,c
 31680  013E82  0608               	decf	i2___awdiv@dividend+1,f,c
 31681  013E84  EC3D  F0C1         	call	i2___awdiv	;wreg free
 31682  013E88  90D8               	bcf	status,0,c
 31683  013E8A  3607               	rlcf	?i2___awdiv,f,c
 31684  013E8C  3608               	rlcf	?i2___awdiv+1,f,c
 31685  013E8E  90D8               	bcf	status,0,c
 31686  013E90  3607               	rlcf	?i2___awdiv,f,c
 31687  013E92  3608               	rlcf	?i2___awdiv+1,f,c
 31688  013E94  0E24               	movlw	36
 31689  013E96  2607               	addwf	?i2___awdiv,f,c
 31690  013E98  0E00               	movlw	0
 31691  013E9A  2208               	addwfc	?i2___awdiv+1,f,c
 31692  013E9C  0E07               	movlw	low __npowers_
 31693  013E9E  2407               	addwf	?i2___awdiv,w,c
 31694  013EA0  6EF6               	movwf	tblptrl,c
 31695  013EA2  0EE4               	movlw	high __npowers_
 31696  013EA4  2008               	addwfc	?i2___awdiv+1,w,c
 31697  013EA6  6EF7               	movwf	tblptrh,c
 31698  013EA8                     	if	1	;There are 3 active tblptr bytes
 31699  013EA8  6AF8               	clrf	tblptru,c
 31700  013EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 31701  013EAC  22F8               	addwfc	tblptru,f,c
 31702  013EAE                     	endif
 31703  013EAE  0009               	tblrd		*+
 31704  013EB0  CFF5 F030          	movff	tablat,i2___flmul@b
 31705  013EB4  0009               	tblrd		*+
 31706  013EB6  CFF5 F031          	movff	tablat,i2___flmul@b+1
 31707  013EBA  0009               	tblrd		*+
 31708  013EBC  CFF5 F032          	movff	tablat,i2___flmul@b+2
 31709  013EC0  000A               	tblrd		*-
 31710  013EC2  CFF5 F033          	movff	tablat,i2___flmul@b+3
 31711  013EC6  0E00               	movlw	0
 31712  013EC8  6E04               	movwf	i2___awmod@divisor+1,c
 31713  013ECA  0E0A               	movlw	10
 31714  013ECC  6E03               	movwf	i2___awmod@divisor,c
 31715  013ECE  5051               	movf	i2scale@scl,w,c
 31716  013ED0  6E01               	movwf	i2___awmod@dividend,c
 31717  013ED2  6A02               	clrf	i2___awmod@dividend+1,c
 31718  013ED4  BE01               	btfsc	i2___awmod@dividend,7,c
 31719  013ED6  0602               	decf	i2___awmod@dividend+1,f,c
 31720  013ED8  EC74  F0C2         	call	i2___awmod	;wreg free
 31721  013EDC  90D8               	bcf	status,0,c
 31722  013EDE  3601               	rlcf	?i2___awmod,f,c
 31723  013EE0  3602               	rlcf	?i2___awmod+1,f,c
 31724  013EE2  90D8               	bcf	status,0,c
 31725  013EE4  3601               	rlcf	?i2___awmod,f,c
 31726  013EE6  3602               	rlcf	?i2___awmod+1,f,c
 31727  013EE8  0E07               	movlw	low __npowers_
 31728  013EEA  2401               	addwf	?i2___awmod,w,c
 31729  013EEC  6EF6               	movwf	tblptrl,c
 31730  013EEE  0EE4               	movlw	high __npowers_
 31731  013EF0  2002               	addwfc	?i2___awmod+1,w,c
 31732  013EF2  6EF7               	movwf	tblptrh,c
 31733  013EF4                     	if	1	;There are 3 active tblptr bytes
 31734  013EF4  6AF8               	clrf	tblptru,c
 31735  013EF6  0E00               	movlw	low (__mediumconst shr (0+16))
 31736  013EF8  22F8               	addwfc	tblptru,f,c
 31737  013EFA                     	endif
 31738  013EFA  0009               	tblrd		*+
 31739  013EFC  CFF5 F034          	movff	tablat,i2___flmul@a
 31740  013F00  0009               	tblrd		*+
 31741  013F02  CFF5 F035          	movff	tablat,i2___flmul@a+1
 31742  013F06  0009               	tblrd		*+
 31743  013F08  CFF5 F036          	movff	tablat,i2___flmul@a+2
 31744  013F0C  000A               	tblrd		*-
 31745  013F0E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 31746  013F12  EC27  F0A4         	call	i2___flmul	;wreg free
 31747  013F16  C030  F049         	movff	?i2___flmul,?i2_scale
 31748  013F1A  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 31749  013F1E  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 31750  013F22  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 31751  013F26  0012               	return	
 31752  013F28                     i2l1448:
 31753                           
 31754                           ;doprnt.c: 434: return _npowers_[scl];
 31755  013F28  5051               	movf	i2scale@scl,w,c
 31756  013F2A  0D04               	mullw	4
 31757  013F2C  0E07               	movlw	low __npowers_
 31758  013F2E  24F3               	addwf	prodl,w,c
 31759  013F30  6EF6               	movwf	tblptrl,c
 31760  013F32  0EE4               	movlw	high __npowers_
 31761  013F34  20F4               	addwfc	prodh,w,c
 31762  013F36  6EF7               	movwf	tblptrh,c
 31763  013F38                     	if	1	;There are 3 active tblptr bytes
 31764  013F38  6AF8               	clrf	tblptru,c
 31765  013F3A  0E00               	movlw	low (__mediumconst shr (0+16))
 31766  013F3C  22F8               	addwfc	tblptru,f,c
 31767  013F3E                     	endif
 31768  013F3E  0009               	tblrd		*+
 31769  013F40  CFF5 F049          	movff	tablat,?i2_scale
 31770  013F44  0009               	tblrd		*+
 31771  013F46  CFF5 F04A          	movff	tablat,?i2_scale+1
 31772  013F4A  0009               	tblrd		*+
 31773  013F4C  CFF5 F04B          	movff	tablat,?i2_scale+2
 31774  013F50  000A               	tblrd		*-
 31775  013F52  CFF5 F04C          	movff	tablat,?i2_scale+3
 31776  013F56  0012               	return	
 31777  013F58                     i2l1444:
 31778                           
 31779                           ;doprnt.c: 435: }
 31780                           ;doprnt.c: 436: if(scl>=110)
 31781  013F58  5051               	movf	i2scale@scl,w,c
 31782  013F5A  0A80               	xorlw	128
 31783  013F5C  0F12               	addlw	-238
 31784  013F5E  A0D8               	btfss	status,0,c
 31785  013F60  D0A1               	goto	i2l1449
 31786                           
 31787                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 31788  013F62  0E00               	movlw	0
 31789  013F64  6E0A               	movwf	i2___awdiv@divisor+1,c
 31790  013F66  0E0A               	movlw	10
 31791  013F68  6E09               	movwf	i2___awdiv@divisor,c
 31792  013F6A  0E00               	movlw	0
 31793  013F6C  6E04               	movwf	i2___awmod@divisor+1,c
 31794  013F6E  0E64               	movlw	100
 31795  013F70  6E03               	movwf	i2___awmod@divisor,c
 31796  013F72  5051               	movf	i2scale@scl,w,c
 31797  013F74  6E01               	movwf	i2___awmod@dividend,c
 31798  013F76  6A02               	clrf	i2___awmod@dividend+1,c
 31799  013F78  BE01               	btfsc	i2___awmod@dividend,7,c
 31800  013F7A  0602               	decf	i2___awmod@dividend+1,f,c
 31801  013F7C  EC74  F0C2         	call	i2___awmod	;wreg free
 31802  013F80  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 31803  013F84  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 31804  013F88  EC3D  F0C1         	call	i2___awdiv	;wreg free
 31805  013F8C  90D8               	bcf	status,0,c
 31806  013F8E  3607               	rlcf	?i2___awdiv,f,c
 31807  013F90  3608               	rlcf	?i2___awdiv+1,f,c
 31808  013F92  90D8               	bcf	status,0,c
 31809  013F94  3607               	rlcf	?i2___awdiv,f,c
 31810  013F96  3608               	rlcf	?i2___awdiv+1,f,c
 31811  013F98  0E24               	movlw	36
 31812  013F9A  2607               	addwf	?i2___awdiv,f,c
 31813  013F9C  0E00               	movlw	0
 31814  013F9E  2208               	addwfc	?i2___awdiv+1,f,c
 31815  013FA0  0ED3               	movlw	low __powers_
 31816  013FA2  2407               	addwf	?i2___awdiv,w,c
 31817  013FA4  6EF6               	movwf	tblptrl,c
 31818  013FA6  0EE3               	movlw	high __powers_
 31819  013FA8  2008               	addwfc	?i2___awdiv+1,w,c
 31820  013FAA  6EF7               	movwf	tblptrh,c
 31821  013FAC                     	if	1	;There are 3 active tblptr bytes
 31822  013FAC  6AF8               	clrf	tblptru,c
 31823  013FAE  0E00               	movlw	low (__mediumconst shr (0+16))
 31824  013FB0  22F8               	addwfc	tblptru,f,c
 31825  013FB2                     	endif
 31826  013FB2  0009               	tblrd		*+
 31827  013FB4  CFF5 F034          	movff	tablat,i2___flmul@a
 31828  013FB8  0009               	tblrd		*+
 31829  013FBA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 31830  013FBE  0009               	tblrd		*+
 31831  013FC0  CFF5 F036          	movff	tablat,i2___flmul@a+2
 31832  013FC4  000A               	tblrd		*-
 31833  013FC6  CFF5 F037          	movff	tablat,i2___flmul@a+3
 31834  013FCA  0E00               	movlw	0
 31835  013FCC  6E0A               	movwf	i2___awdiv@divisor+1,c
 31836  013FCE  0E64               	movlw	100
 31837  013FD0  6E09               	movwf	i2___awdiv@divisor,c
 31838  013FD2  5051               	movf	i2scale@scl,w,c
 31839  013FD4  6E07               	movwf	i2___awdiv@dividend,c
 31840  013FD6  6A08               	clrf	i2___awdiv@dividend+1,c
 31841  013FD8  BE07               	btfsc	i2___awdiv@dividend,7,c
 31842  013FDA  0608               	decf	i2___awdiv@dividend+1,f,c
 31843  013FDC  EC3D  F0C1         	call	i2___awdiv	;wreg free
 31844  013FE0  90D8               	bcf	status,0,c
 31845  013FE2  3607               	rlcf	?i2___awdiv,f,c
 31846  013FE4  3608               	rlcf	?i2___awdiv+1,f,c
 31847  013FE6  90D8               	bcf	status,0,c
 31848  013FE8  3607               	rlcf	?i2___awdiv,f,c
 31849  013FEA  3608               	rlcf	?i2___awdiv+1,f,c
 31850  013FEC  0E48               	movlw	72
 31851  013FEE  2607               	addwf	?i2___awdiv,f,c
 31852  013FF0  0E00               	movlw	0
 31853  013FF2  2208               	addwfc	?i2___awdiv+1,f,c
 31854  013FF4  0ED3               	movlw	low __powers_
 31855  013FF6  2407               	addwf	?i2___awdiv,w,c
 31856  013FF8  6EF6               	movwf	tblptrl,c
 31857  013FFA  0EE3               	movlw	high __powers_
 31858  013FFC  2008               	addwfc	?i2___awdiv+1,w,c
 31859  013FFE  6EF7               	movwf	tblptrh,c
 31860  014000                     	if	1	;There are 3 active tblptr bytes
 31861  014000  6AF8               	clrf	tblptru,c
 31862  014002  0E00               	movlw	low (__mediumconst shr (0+16))
 31863  014004  22F8               	addwfc	tblptru,f,c
 31864  014006                     	endif
 31865  014006  0009               	tblrd		*+
 31866  014008  CFF5 F030          	movff	tablat,i2___flmul@b
 31867  01400C  0009               	tblrd		*+
 31868  01400E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 31869  014012  0009               	tblrd		*+
 31870  014014  CFF5 F032          	movff	tablat,i2___flmul@b+2
 31871  014018  000A               	tblrd		*-
 31872  01401A  CFF5 F033          	movff	tablat,i2___flmul@b+3
 31873  01401E  EC27  F0A4         	call	i2___flmul	;wreg free
 31874  014022  C030  F04D         	movff	?i2___flmul,i2_scale$4185
 31875  014026  C031  F04E         	movff	?i2___flmul+1,i2_scale$4185+1
 31876  01402A  C032  F04F         	movff	?i2___flmul+2,i2_scale$4185+2
 31877  01402E  C033  F050         	movff	?i2___flmul+3,i2_scale$4185+3
 31878                           
 31879                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 31880  014032  C04D  F030         	movff	i2_scale$4185,i2___flmul@b
 31881  014036  C04E  F031         	movff	i2_scale$4185+1,i2___flmul@b+1
 31882  01403A  C04F  F032         	movff	i2_scale$4185+2,i2___flmul@b+2
 31883  01403E  C050  F033         	movff	i2_scale$4185+3,i2___flmul@b+3
 31884  014042  0E00               	movlw	0
 31885  014044  6E04               	movwf	i2___awmod@divisor+1,c
 31886  014046  0E0A               	movlw	10
 31887  014048  6E03               	movwf	i2___awmod@divisor,c
 31888  01404A  5051               	movf	i2scale@scl,w,c
 31889  01404C  6E01               	movwf	i2___awmod@dividend,c
 31890  01404E  6A02               	clrf	i2___awmod@dividend+1,c
 31891  014050  BE01               	btfsc	i2___awmod@dividend,7,c
 31892  014052  0602               	decf	i2___awmod@dividend+1,f,c
 31893  014054  EC74  F0C2         	call	i2___awmod	;wreg free
 31894  014058  90D8               	bcf	status,0,c
 31895  01405A  3601               	rlcf	?i2___awmod,f,c
 31896  01405C  3602               	rlcf	?i2___awmod+1,f,c
 31897  01405E  90D8               	bcf	status,0,c
 31898  014060  3601               	rlcf	?i2___awmod,f,c
 31899  014062  3602               	rlcf	?i2___awmod+1,f,c
 31900  014064  0ED3               	movlw	low __powers_
 31901  014066  2401               	addwf	?i2___awmod,w,c
 31902  014068  6EF6               	movwf	tblptrl,c
 31903  01406A  0EE3               	movlw	high __powers_
 31904  01406C  2002               	addwfc	?i2___awmod+1,w,c
 31905  01406E  6EF7               	movwf	tblptrh,c
 31906  014070                     	if	1	;There are 3 active tblptr bytes
 31907  014070  6AF8               	clrf	tblptru,c
 31908  014072  0E00               	movlw	low (__mediumconst shr (0+16))
 31909  014074  22F8               	addwfc	tblptru,f,c
 31910  014076                     	endif
 31911  014076  0009               	tblrd		*+
 31912  014078  CFF5 F034          	movff	tablat,i2___flmul@a
 31913  01407C  0009               	tblrd		*+
 31914  01407E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 31915  014082  0009               	tblrd		*+
 31916  014084  CFF5 F036          	movff	tablat,i2___flmul@a+2
 31917  014088  000A               	tblrd		*-
 31918  01408A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 31919  01408E  EC27  F0A4         	call	i2___flmul	;wreg free
 31920  014092  C030  F049         	movff	?i2___flmul,?i2_scale
 31921  014096  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 31922  01409A  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 31923  01409E  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 31924  0140A2  0012               	return	
 31925  0140A4                     i2l1449:
 31926                           
 31927                           ;doprnt.c: 438: else if(scl > 10)
 31928  0140A4  5051               	movf	i2scale@scl,w,c
 31929  0140A6  0A80               	xorlw	128
 31930  0140A8  0F75               	addlw	-139
 31931  0140AA  A0D8               	btfss	status,0,c
 31932  0140AC  D05B               	goto	i2l1451
 31933                           
 31934                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 31935  0140AE  0E00               	movlw	0
 31936  0140B0  6E0A               	movwf	i2___awdiv@divisor+1,c
 31937  0140B2  0E0A               	movlw	10
 31938  0140B4  6E09               	movwf	i2___awdiv@divisor,c
 31939  0140B6  5051               	movf	i2scale@scl,w,c
 31940  0140B8  6E07               	movwf	i2___awdiv@dividend,c
 31941  0140BA  6A08               	clrf	i2___awdiv@dividend+1,c
 31942  0140BC  BE07               	btfsc	i2___awdiv@dividend,7,c
 31943  0140BE  0608               	decf	i2___awdiv@dividend+1,f,c
 31944  0140C0  EC3D  F0C1         	call	i2___awdiv	;wreg free
 31945  0140C4  90D8               	bcf	status,0,c
 31946  0140C6  3607               	rlcf	?i2___awdiv,f,c
 31947  0140C8  3608               	rlcf	?i2___awdiv+1,f,c
 31948  0140CA  90D8               	bcf	status,0,c
 31949  0140CC  3607               	rlcf	?i2___awdiv,f,c
 31950  0140CE  3608               	rlcf	?i2___awdiv+1,f,c
 31951  0140D0  0E24               	movlw	36
 31952  0140D2  2607               	addwf	?i2___awdiv,f,c
 31953  0140D4  0E00               	movlw	0
 31954  0140D6  2208               	addwfc	?i2___awdiv+1,f,c
 31955  0140D8  0ED3               	movlw	low __powers_
 31956  0140DA  2407               	addwf	?i2___awdiv,w,c
 31957  0140DC  6EF6               	movwf	tblptrl,c
 31958  0140DE  0EE3               	movlw	high __powers_
 31959  0140E0  2008               	addwfc	?i2___awdiv+1,w,c
 31960  0140E2  6EF7               	movwf	tblptrh,c
 31961  0140E4                     	if	1	;There are 3 active tblptr bytes
 31962  0140E4  6AF8               	clrf	tblptru,c
 31963  0140E6  0E00               	movlw	low (__mediumconst shr (0+16))
 31964  0140E8  22F8               	addwfc	tblptru,f,c
 31965  0140EA                     	endif
 31966  0140EA  0009               	tblrd		*+
 31967  0140EC  CFF5 F030          	movff	tablat,i2___flmul@b
 31968  0140F0  0009               	tblrd		*+
 31969  0140F2  CFF5 F031          	movff	tablat,i2___flmul@b+1
 31970  0140F6  0009               	tblrd		*+
 31971  0140F8  CFF5 F032          	movff	tablat,i2___flmul@b+2
 31972  0140FC  000A               	tblrd		*-
 31973  0140FE  CFF5 F033          	movff	tablat,i2___flmul@b+3
 31974  014102  0E00               	movlw	0
 31975  014104  6E04               	movwf	i2___awmod@divisor+1,c
 31976  014106  0E0A               	movlw	10
 31977  014108  6E03               	movwf	i2___awmod@divisor,c
 31978  01410A  5051               	movf	i2scale@scl,w,c
 31979  01410C  6E01               	movwf	i2___awmod@dividend,c
 31980  01410E  6A02               	clrf	i2___awmod@dividend+1,c
 31981  014110  BE01               	btfsc	i2___awmod@dividend,7,c
 31982  014112  0602               	decf	i2___awmod@dividend+1,f,c
 31983  014114  EC74  F0C2         	call	i2___awmod	;wreg free
 31984  014118  90D8               	bcf	status,0,c
 31985  01411A  3601               	rlcf	?i2___awmod,f,c
 31986  01411C  3602               	rlcf	?i2___awmod+1,f,c
 31987  01411E  90D8               	bcf	status,0,c
 31988  014120  3601               	rlcf	?i2___awmod,f,c
 31989  014122  3602               	rlcf	?i2___awmod+1,f,c
 31990  014124  0ED3               	movlw	low __powers_
 31991  014126  2401               	addwf	?i2___awmod,w,c
 31992  014128  6EF6               	movwf	tblptrl,c
 31993  01412A  0EE3               	movlw	high __powers_
 31994  01412C  2002               	addwfc	?i2___awmod+1,w,c
 31995  01412E  6EF7               	movwf	tblptrh,c
 31996  014130                     	if	1	;There are 3 active tblptr bytes
 31997  014130  6AF8               	clrf	tblptru,c
 31998  014132  0E00               	movlw	low (__mediumconst shr (0+16))
 31999  014134  22F8               	addwfc	tblptru,f,c
 32000  014136                     	endif
 32001  014136  0009               	tblrd		*+
 32002  014138  CFF5 F034          	movff	tablat,i2___flmul@a
 32003  01413C  0009               	tblrd		*+
 32004  01413E  CFF5 F035          	movff	tablat,i2___flmul@a+1
 32005  014142  0009               	tblrd		*+
 32006  014144  CFF5 F036          	movff	tablat,i2___flmul@a+2
 32007  014148  000A               	tblrd		*-
 32008  01414A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 32009  01414E  EC27  F0A4         	call	i2___flmul	;wreg free
 32010  014152  C030  F049         	movff	?i2___flmul,?i2_scale
 32011  014156  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 32012  01415A  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 32013  01415E  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 32014  014162  0012               	return	
 32015  014164                     i2l1451:
 32016                           
 32017                           ;doprnt.c: 440: return _powers_[scl];
 32018  014164  5051               	movf	i2scale@scl,w,c
 32019  014166  0D04               	mullw	4
 32020  014168  0ED3               	movlw	low __powers_
 32021  01416A  24F3               	addwf	prodl,w,c
 32022  01416C  6EF6               	movwf	tblptrl,c
 32023  01416E  0EE3               	movlw	high __powers_
 32024  014170  20F4               	addwfc	prodh,w,c
 32025  014172  6EF7               	movwf	tblptrh,c
 32026  014174                     	if	1	;There are 3 active tblptr bytes
 32027  014174  6AF8               	clrf	tblptru,c
 32028  014176  0E00               	movlw	low (__mediumconst shr (0+16))
 32029  014178  22F8               	addwfc	tblptru,f,c
 32030  01417A                     	endif
 32031  01417A  0009               	tblrd		*+
 32032  01417C  CFF5 F049          	movff	tablat,?i2_scale
 32033  014180  0009               	tblrd		*+
 32034  014182  CFF5 F04A          	movff	tablat,?i2_scale+1
 32035  014186  0009               	tblrd		*+
 32036  014188  CFF5 F04B          	movff	tablat,?i2_scale+2
 32037  01418C  000A               	tblrd		*-
 32038  01418E  CFF5 F04C          	movff	tablat,?i2_scale+3
 32039  014192  0012               	return	
 32040  014194                     __end_ofi2_scale:
 32041                           	opt stack 0
 32042                           tosu	equ	0xFFF
 32043                           tosh	equ	0xFFE
 32044                           tosl	equ	0xFFD
 32045                           pclatu	equ	0xFFB
 32046                           pclath	equ	0xFFA
 32047                           tblptru	equ	0xFF8
 32048                           tblptrh	equ	0xFF7
 32049                           tblptrl	equ	0xFF6
 32050                           tablat	equ	0xFF5
 32051                           prodh	equ	0xFF4
 32052                           prodl	equ	0xFF3
 32053                           intcon	equ	0xFF2
 32054                           indf0	equ	0xFEF
 32055                           postinc0	equ	0xFEE
 32056                           fsr0h	equ	0xFEA
 32057                           fsr0l	equ	0xFE9
 32058                           wreg	equ	0xFE8
 32059                           indf1	equ	0xFE7
 32060                           postdec1	equ	0xFE5
 32061                           plusw1	equ	0xFE3
 32062                           fsr1h	equ	0xFE2
 32063                           fsr1l	equ	0xFE1
 32064                           bsr	equ	0xFE0
 32065                           indf2	equ	0xFDF
 32066                           postinc2	equ	0xFDE
 32067                           postdec2	equ	0xFDD
 32068                           plusw2	equ	0xFDB
 32069                           fsr2h	equ	0xFDA
 32070                           fsr2l	equ	0xFD9
 32071                           status	equ	0xFD8
 32072                           
 32073 ;; *************** function i2_putch *****************
 32074 ;; Defined at:
 32075 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 32076 ;; Parameters:    Size  Location     Type
 32077 ;;  txData          1    wreg     unsigned char 
 32078 ;; Auto vars:     Size  Location     Type
 32079 ;;  txData          1    1[COMRAM] unsigned char 
 32080 ;; Return value:  Size  Location     Type
 32081 ;;                  1    wreg      void 
 32082 ;; Registers used:
 32083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32084 ;; Tracked objects:
 32085 ;;		On entry : 0/0
 32086 ;;		On exit  : 0/0
 32087 ;;		Unchanged: 0/0
 32088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32093 ;;Total ram usage:        1 bytes
 32094 ;; Hardware stack levels used:    1
 32095 ;; Hardware stack levels required when called:    1
 32096 ;; This function calls:
 32097 ;;		i2_EUSART2_Write
 32098 ;; This function is called by:
 32099 ;;		i2_printf
 32100 ;; This function uses a non-reentrant model
 32101 ;;
 32102                           
 32103                           	psect	text93
 32104  0192C6                     __ptext93:
 32105                           	opt stack 0
 32106  0192C6                     i2_putch:
 32107                           	opt stack 15
 32108                           
 32109                           ;incstack = 0
 32110                           ;i2putch@txData stored from wreg
 32111  0192C6  6E02               	movwf	i2putch@txData,c
 32112                           
 32113                           ;eusart2.c: 195: EUSART2_Write(txData);
 32114  0192C8  5002               	movf	i2putch@txData,w,c
 32115  0192CA  EC79  F0C5         	call	i2_EUSART2_Write
 32116  0192CE  0012               	return		;funcret
 32117  0192D0                     __end_ofi2_putch:
 32118                           	opt stack 0
 32119                           tosu	equ	0xFFF
 32120                           tosh	equ	0xFFE
 32121                           tosl	equ	0xFFD
 32122                           pclatu	equ	0xFFB
 32123                           pclath	equ	0xFFA
 32124                           tblptru	equ	0xFF8
 32125                           tblptrh	equ	0xFF7
 32126                           tblptrl	equ	0xFF6
 32127                           tablat	equ	0xFF5
 32128                           prodh	equ	0xFF4
 32129                           prodl	equ	0xFF3
 32130                           intcon	equ	0xFF2
 32131                           indf0	equ	0xFEF
 32132                           postinc0	equ	0xFEE
 32133                           fsr0h	equ	0xFEA
 32134                           fsr0l	equ	0xFE9
 32135                           wreg	equ	0xFE8
 32136                           indf1	equ	0xFE7
 32137                           postdec1	equ	0xFE5
 32138                           plusw1	equ	0xFE3
 32139                           fsr1h	equ	0xFE2
 32140                           fsr1l	equ	0xFE1
 32141                           bsr	equ	0xFE0
 32142                           indf2	equ	0xFDF
 32143                           postinc2	equ	0xFDE
 32144                           postdec2	equ	0xFDD
 32145                           plusw2	equ	0xFDB
 32146                           fsr2h	equ	0xFDA
 32147                           fsr2l	equ	0xFD9
 32148                           status	equ	0xFD8
 32149                           
 32150 ;; *************** function i2_EUSART2_Write *****************
 32151 ;; Defined at:
 32152 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 32153 ;; Parameters:    Size  Location     Type
 32154 ;;  txData          1    wreg     unsigned char 
 32155 ;; Auto vars:     Size  Location     Type
 32156 ;;  txData          1    0[COMRAM] unsigned char 
 32157 ;; Return value:  Size  Location     Type
 32158 ;;                  1    wreg      void 
 32159 ;; Registers used:
 32160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32161 ;; Tracked objects:
 32162 ;;		On entry : 0/0
 32163 ;;		On exit  : 0/0
 32164 ;;		Unchanged: 0/0
 32165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32170 ;;Total ram usage:        1 bytes
 32171 ;; Hardware stack levels used:    1
 32172 ;; This function calls:
 32173 ;;		Nothing
 32174 ;; This function is called by:
 32175 ;;		i2_putch
 32176 ;; This function uses a non-reentrant model
 32177 ;;
 32178                           
 32179                           	psect	text94
 32180  018AF2                     __ptext94:
 32181                           	opt stack 0
 32182  018AF2                     i2_EUSART2_Write:
 32183                           	opt stack 15
 32184                           
 32185                           ;incstack = 0
 32186                           ;i2EUSART2_Write@txData stored from wreg
 32187  018AF2  6E01               	movwf	i2EUSART2_Write@txData,c
 32188                           
 32189                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 32190  018AF4  D002               	goto	i2l388
 32191  018AF6                     i2l389:
 32192                           
 32193                           ; BSR set to: 1
 32194  018AF6  0004               	clrwdt		;# 
 32195                           
 32196                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 32197  018AF8  827E               	bsf	3966,1,c	;volatile
 32198  018AFA                     i2l388:
 32199  018AFA  0101               	movlb	1	; () banked
 32200  018AFC  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 32201  018AFE  B4D8               	btfsc	status,2,c
 32202  018B00  D7FA               	goto	i2l389
 32203                           
 32204                           ; BSR set to: 1
 32205                           ;eusart2.c: 167: }
 32206                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 32207  018B02  927E               	bcf	3966,1,c	;volatile
 32208                           
 32209                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 32210  018B04  010E               	movlb	14	; () banked
 32211  018B06  BD2C               	btfsc	44,6,b	;volatile
 32212  018B08  D003               	goto	i2l391
 32213                           
 32214                           ; BSR set to: 14
 32215                           ;eusart2.c: 172: {
 32216                           ;eusart2.c: 173: TX2REG = txData;
 32217  018B0A  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 32218                           
 32219                           ;eusart2.c: 174: }
 32220  018B0E  D013               	goto	i2l392
 32221  018B10                     i2l391:
 32222                           
 32223                           ; BSR set to: 14
 32224                           ;eusart2.c: 175: else
 32225                           ;eusart2.c: 176: {
 32226                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 32227  018B10  9D2C               	bcf	44,6,b	;volatile
 32228                           
 32229                           ; BSR set to: 14
 32230                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 32231  018B12  0101               	movlb	1	; () banked
 32232  018B14  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 32233  018B16  0D01               	mullw	1
 32234  018B18  0E00               	movlw	low _eusart2TxBuffer
 32235  018B1A  24F3               	addwf	prodl,w,c
 32236  018B1C  6ED9               	movwf	fsr2l,c
 32237  018B1E  0E03               	movlw	high _eusart2TxBuffer
 32238  018B20  20F4               	addwfc	prodh,w,c
 32239  018B22  6EDA               	movwf	fsr2h,c
 32240  018B24  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 32241                           
 32242                           ; BSR set to: 1
 32243  018B28  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 32244                           
 32245                           ; BSR set to: 1
 32246                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 32247  018B2A  0E7F               	movlw	127
 32248  018B2C  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 32249  018B2E  D002               	goto	i2l393
 32250                           
 32251                           ; BSR set to: 1
 32252                           ;eusart2.c: 180: {
 32253                           ;eusart2.c: 181: eusart2TxHead = 0;
 32254  018B30  0E00               	movlw	0
 32255  018B32  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 32256  018B34                     i2l393:
 32257                           
 32258                           ; BSR set to: 1
 32259                           ;eusart2.c: 182: }
 32260                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 32261                           
 32262                           ; BSR set to: 1
 32263  018B34  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 32264  018B36                     i2l392:
 32265                           
 32266                           ;eusart2.c: 184: }
 32267                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 32268                           
 32269                           ; BSR set to: 1
 32270  018B36  010E               	movlb	14	; () banked
 32271  018B38  8D2C               	bsf	44,6,b	;volatile
 32272                           
 32273                           ; BSR set to: 14
 32274  018B3A  0012               	return		;funcret
 32275  018B3C                     __end_ofi2_EUSART2_Write:
 32276                           	opt stack 0
 32277                           tosu	equ	0xFFF
 32278                           tosh	equ	0xFFE
 32279                           tosl	equ	0xFFD
 32280                           pclatu	equ	0xFFB
 32281                           pclath	equ	0xFFA
 32282                           tblptru	equ	0xFF8
 32283                           tblptrh	equ	0xFF7
 32284                           tblptrl	equ	0xFF6
 32285                           tablat	equ	0xFF5
 32286                           prodh	equ	0xFF4
 32287                           prodl	equ	0xFF3
 32288                           intcon	equ	0xFF2
 32289                           indf0	equ	0xFEF
 32290                           postinc0	equ	0xFEE
 32291                           fsr0h	equ	0xFEA
 32292                           fsr0l	equ	0xFE9
 32293                           wreg	equ	0xFE8
 32294                           indf1	equ	0xFE7
 32295                           postdec1	equ	0xFE5
 32296                           plusw1	equ	0xFE3
 32297                           fsr1h	equ	0xFE2
 32298                           fsr1l	equ	0xFE1
 32299                           bsr	equ	0xFE0
 32300                           indf2	equ	0xFDF
 32301                           postinc2	equ	0xFDE
 32302                           postdec2	equ	0xFDD
 32303                           plusw2	equ	0xFDB
 32304                           fsr2h	equ	0xFDA
 32305                           fsr2l	equ	0xFD9
 32306                           status	equ	0xFD8
 32307                           
 32308 ;; *************** function i2_isdigit *****************
 32309 ;; Defined at:
 32310 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 32311 ;; Parameters:    Size  Location     Type
 32312 ;;  c               1    wreg     unsigned char 
 32313 ;; Auto vars:     Size  Location     Type
 32314 ;;  c               1    2[COMRAM] unsigned char 
 32315 ;; Return value:  Size  Location     Type
 32316 ;;		None               void
 32317 ;; Registers used:
 32318 ;;		wreg, status,2, status,0
 32319 ;; Tracked objects:
 32320 ;;		On entry : 0/0
 32321 ;;		On exit  : 0/0
 32322 ;;		Unchanged: 0/0
 32323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32328 ;;Total ram usage:        3 bytes
 32329 ;; Hardware stack levels used:    1
 32330 ;; This function calls:
 32331 ;;		Nothing
 32332 ;; This function is called by:
 32333 ;;		i2_printf
 32334 ;; This function uses a non-reentrant model
 32335 ;;
 32336                           
 32337                           	psect	text95
 32338  019104                     __ptext95:
 32339                           	opt stack 0
 32340  019104                     i2_isdigit:
 32341                           	opt stack 16
 32342                           
 32343                           ; BSR set to: 14
 32344                           ;incstack = 0
 32345                           ;i2isdigit@c stored from wreg
 32346  019104  6E03               	movwf	i2isdigit@c,c
 32347  019106  0E00               	movlw	0
 32348  019108  6E02               	movwf	i2_isdigit$3264,c
 32349  01910A  0E3A               	movlw	58
 32350  01910C  6003               	cpfslt	i2isdigit@c,c
 32351  01910E  D005               	goto	i2l2022
 32352  019110  0E2F               	movlw	47
 32353  019112  6403               	cpfsgt	i2isdigit@c,c
 32354  019114  D002               	goto	i2l2022
 32355  019116  0E01               	movlw	1
 32356  019118  6E02               	movwf	i2_isdigit$3264,c
 32357  01911A                     i2l2022:
 32358  01911A  C002  F001         	movff	i2_isdigit$3264,??i2_isdigit
 32359  01911E  3001               	rrcf	??i2_isdigit,w,c
 32360  019120  0012               	return	
 32361  019122                     __end_ofi2_isdigit:
 32362                           	opt stack 0
 32363                           tosu	equ	0xFFF
 32364                           tosh	equ	0xFFE
 32365                           tosl	equ	0xFFD
 32366                           pclatu	equ	0xFFB
 32367                           pclath	equ	0xFFA
 32368                           tblptru	equ	0xFF8
 32369                           tblptrh	equ	0xFF7
 32370                           tblptrl	equ	0xFF6
 32371                           tablat	equ	0xFF5
 32372                           prodh	equ	0xFF4
 32373                           prodl	equ	0xFF3
 32374                           intcon	equ	0xFF2
 32375                           indf0	equ	0xFEF
 32376                           postinc0	equ	0xFEE
 32377                           fsr0h	equ	0xFEA
 32378                           fsr0l	equ	0xFE9
 32379                           wreg	equ	0xFE8
 32380                           indf1	equ	0xFE7
 32381                           postdec1	equ	0xFE5
 32382                           plusw1	equ	0xFE3
 32383                           fsr1h	equ	0xFE2
 32384                           fsr1l	equ	0xFE1
 32385                           bsr	equ	0xFE0
 32386                           indf2	equ	0xFDF
 32387                           postinc2	equ	0xFDE
 32388                           postdec2	equ	0xFDD
 32389                           plusw2	equ	0xFDB
 32390                           fsr2h	equ	0xFDA
 32391                           fsr2l	equ	0xFD9
 32392                           status	equ	0xFD8
 32393                           
 32394 ;; *************** function i2_fround *****************
 32395 ;; Defined at:
 32396 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 32397 ;; Parameters:    Size  Location     Type
 32398 ;;  prec            1    wreg     unsigned char 
 32399 ;; Auto vars:     Size  Location     Type
 32400 ;;  prec            1   84[COMRAM] unsigned char 
 32401 ;; Return value:  Size  Location     Type
 32402 ;;                  4   72[COMRAM] unsigned char 
 32403 ;; Registers used:
 32404 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32405 ;; Tracked objects:
 32406 ;;		On entry : 0/0
 32407 ;;		On exit  : 0/0
 32408 ;;		Unchanged: 0/0
 32409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32411 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32413 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32414 ;;Total ram usage:       13 bytes
 32415 ;; Hardware stack levels used:    1
 32416 ;; Hardware stack levels required when called:    1
 32417 ;; This function calls:
 32418 ;;		i2___awdiv
 32419 ;;		i2___awmod
 32420 ;;		i2___flmul
 32421 ;; This function is called by:
 32422 ;;		i2_printf
 32423 ;; This function uses a non-reentrant model
 32424 ;;
 32425                           
 32426                           	psect	text96
 32427  016310                     __ptext96:
 32428                           	opt stack 0
 32429  016310                     i2_fround:
 32430                           	opt stack 15
 32431                           
 32432                           ;incstack = 0
 32433                           ;i2fround@prec stored from wreg
 32434  016310  6E55               	movwf	i2fround@prec,c
 32435                           
 32436                           ;doprnt.c: 413: if(prec>=110)
 32437  016312  0E6D               	movlw	109
 32438  016314  6455               	cpfsgt	i2fround@prec,c
 32439  016316  D0B5               	goto	i2l1438
 32440                           
 32441                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 32442  016318  0E00               	movlw	0
 32443  01631A  6E0A               	movwf	i2___awdiv@divisor+1,c
 32444  01631C  0E0A               	movlw	10
 32445  01631E  6E09               	movwf	i2___awdiv@divisor,c
 32446  016320  0E00               	movlw	0
 32447  016322  6E04               	movwf	i2___awmod@divisor+1,c
 32448  016324  0E64               	movlw	100
 32449  016326  6E03               	movwf	i2___awmod@divisor,c
 32450  016328  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 32451  01632C  6A02               	clrf	i2___awmod@dividend+1,c
 32452  01632E  EC74  F0C2         	call	i2___awmod	;wreg free
 32453  016332  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 32454  016336  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 32455  01633A  EC3D  F0C1         	call	i2___awdiv	;wreg free
 32456  01633E  90D8               	bcf	status,0,c
 32457  016340  3607               	rlcf	?i2___awdiv,f,c
 32458  016342  3608               	rlcf	?i2___awdiv+1,f,c
 32459  016344  90D8               	bcf	status,0,c
 32460  016346  3607               	rlcf	?i2___awdiv,f,c
 32461  016348  3608               	rlcf	?i2___awdiv+1,f,c
 32462  01634A  0E24               	movlw	36
 32463  01634C  2607               	addwf	?i2___awdiv,f,c
 32464  01634E  0E00               	movlw	0
 32465  016350  2208               	addwfc	?i2___awdiv+1,f,c
 32466  016352  0E07               	movlw	low __npowers_
 32467  016354  2407               	addwf	?i2___awdiv,w,c
 32468  016356  6EF6               	movwf	tblptrl,c
 32469  016358  0EE4               	movlw	high __npowers_
 32470  01635A  2008               	addwfc	?i2___awdiv+1,w,c
 32471  01635C  6EF7               	movwf	tblptrh,c
 32472  01635E                     	if	1	;There are 3 active tblptr bytes
 32473  01635E  6AF8               	clrf	tblptru,c
 32474  016360  0E00               	movlw	low (__mediumconst shr (0+16))
 32475  016362  22F8               	addwfc	tblptru,f,c
 32476  016364                     	endif
 32477  016364  0009               	tblrd		*+
 32478  016366  CFF5 F034          	movff	tablat,i2___flmul@a
 32479  01636A  0009               	tblrd		*+
 32480  01636C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 32481  016370  0009               	tblrd		*+
 32482  016372  CFF5 F036          	movff	tablat,i2___flmul@a+2
 32483  016376  000A               	tblrd		*-
 32484  016378  CFF5 F037          	movff	tablat,i2___flmul@a+3
 32485  01637C  0E00               	movlw	0
 32486  01637E  6E0A               	movwf	i2___awdiv@divisor+1,c
 32487  016380  0E64               	movlw	100
 32488  016382  6E09               	movwf	i2___awdiv@divisor,c
 32489  016384  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 32490  016388  6A08               	clrf	i2___awdiv@dividend+1,c
 32491  01638A  EC3D  F0C1         	call	i2___awdiv	;wreg free
 32492  01638E  90D8               	bcf	status,0,c
 32493  016390  3607               	rlcf	?i2___awdiv,f,c
 32494  016392  3608               	rlcf	?i2___awdiv+1,f,c
 32495  016394  90D8               	bcf	status,0,c
 32496  016396  3607               	rlcf	?i2___awdiv,f,c
 32497  016398  3608               	rlcf	?i2___awdiv+1,f,c
 32498  01639A  0E48               	movlw	72
 32499  01639C  2607               	addwf	?i2___awdiv,f,c
 32500  01639E  0E00               	movlw	0
 32501  0163A0  2208               	addwfc	?i2___awdiv+1,f,c
 32502  0163A2  0E07               	movlw	low __npowers_
 32503  0163A4  2407               	addwf	?i2___awdiv,w,c
 32504  0163A6  6EF6               	movwf	tblptrl,c
 32505  0163A8  0EE4               	movlw	high __npowers_
 32506  0163AA  2008               	addwfc	?i2___awdiv+1,w,c
 32507  0163AC  6EF7               	movwf	tblptrh,c
 32508  0163AE                     	if	1	;There are 3 active tblptr bytes
 32509  0163AE  6AF8               	clrf	tblptru,c
 32510  0163B0  0E00               	movlw	low (__mediumconst shr (0+16))
 32511  0163B2  22F8               	addwfc	tblptru,f,c
 32512  0163B4                     	endif
 32513  0163B4  0009               	tblrd		*+
 32514  0163B6  CFF5 F030          	movff	tablat,i2___flmul@b
 32515  0163BA  0009               	tblrd		*+
 32516  0163BC  CFF5 F031          	movff	tablat,i2___flmul@b+1
 32517  0163C0  0009               	tblrd		*+
 32518  0163C2  CFF5 F032          	movff	tablat,i2___flmul@b+2
 32519  0163C6  000A               	tblrd		*-
 32520  0163C8  CFF5 F033          	movff	tablat,i2___flmul@b+3
 32521  0163CC  EC27  F0A4         	call	i2___flmul	;wreg free
 32522  0163D0  C030  F051         	movff	?i2___flmul,i2_fround$4183
 32523  0163D4  C031  F052         	movff	?i2___flmul+1,i2_fround$4183+1
 32524  0163D8  C032  F053         	movff	?i2___flmul+2,i2_fround$4183+2
 32525  0163DC  C033  F054         	movff	?i2___flmul+3,i2_fround$4183+3
 32526                           
 32527                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 32528  0163E0  0E00               	movlw	0
 32529  0163E2  6E04               	movwf	i2___awmod@divisor+1,c
 32530  0163E4  0E0A               	movlw	10
 32531  0163E6  6E03               	movwf	i2___awmod@divisor,c
 32532  0163E8  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 32533  0163EC  6A02               	clrf	i2___awmod@dividend+1,c
 32534  0163EE  EC74  F0C2         	call	i2___awmod	;wreg free
 32535  0163F2  90D8               	bcf	status,0,c
 32536  0163F4  3601               	rlcf	?i2___awmod,f,c
 32537  0163F6  3602               	rlcf	?i2___awmod+1,f,c
 32538  0163F8  90D8               	bcf	status,0,c
 32539  0163FA  3601               	rlcf	?i2___awmod,f,c
 32540  0163FC  3602               	rlcf	?i2___awmod+1,f,c
 32541  0163FE  0E07               	movlw	low __npowers_
 32542  016400  2401               	addwf	?i2___awmod,w,c
 32543  016402  6EF6               	movwf	tblptrl,c
 32544  016404  0EE4               	movlw	high __npowers_
 32545  016406  2002               	addwfc	?i2___awmod+1,w,c
 32546  016408  6EF7               	movwf	tblptrh,c
 32547  01640A                     	if	1	;There are 3 active tblptr bytes
 32548  01640A  6AF8               	clrf	tblptru,c
 32549  01640C  0E00               	movlw	low (__mediumconst shr (0+16))
 32550  01640E  22F8               	addwfc	tblptru,f,c
 32551  016410                     	endif
 32552  016410  0009               	tblrd		*+
 32553  016412  CFF5 F034          	movff	tablat,i2___flmul@a
 32554  016416  0009               	tblrd		*+
 32555  016418  CFF5 F035          	movff	tablat,i2___flmul@a+1
 32556  01641C  0009               	tblrd		*+
 32557  01641E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 32558  016422  000A               	tblrd		*-
 32559  016424  CFF5 F037          	movff	tablat,i2___flmul@a+3
 32560  016428  C051  F030         	movff	i2_fround$4183,i2___flmul@b
 32561  01642C  C052  F031         	movff	i2_fround$4183+1,i2___flmul@b+1
 32562  016430  C053  F032         	movff	i2_fround$4183+2,i2___flmul@b+2
 32563  016434  C054  F033         	movff	i2_fround$4183+3,i2___flmul@b+3
 32564  016438  EC27  F0A4         	call	i2___flmul	;wreg free
 32565  01643C  C030  F04D         	movff	?i2___flmul,i2_fround$4184
 32566  016440  C031  F04E         	movff	?i2___flmul+1,i2_fround$4184+1
 32567  016444  C032  F04F         	movff	?i2___flmul+2,i2_fround$4184+2
 32568  016448  C033  F050         	movff	?i2___flmul+3,i2_fround$4184+3
 32569                           
 32570                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 32571  01644C  C04D  F030         	movff	i2_fround$4184,i2___flmul@b
 32572  016450  C04E  F031         	movff	i2_fround$4184+1,i2___flmul@b+1
 32573  016454  C04F  F032         	movff	i2_fround$4184+2,i2___flmul@b+2
 32574  016458  C050  F033         	movff	i2_fround$4184+3,i2___flmul@b+3
 32575  01645C  0E00               	movlw	0
 32576  01645E  6E34               	movwf	i2___flmul@a,c
 32577  016460  0E00               	movlw	0
 32578  016462  6E35               	movwf	i2___flmul@a+1,c
 32579  016464  0E00               	movlw	0
 32580  016466  6E36               	movwf	i2___flmul@a+2,c
 32581  016468  0E3F               	movlw	63
 32582  01646A  6E37               	movwf	i2___flmul@a+3,c
 32583  01646C  EC27  F0A4         	call	i2___flmul	;wreg free
 32584  016470  C030  F049         	movff	?i2___flmul,?i2_fround
 32585  016474  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 32586  016478  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 32587  01647C  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 32588  016480  0012               	return	
 32589  016482                     i2l1438:
 32590                           
 32591                           ;doprnt.c: 415: else if(prec > 10)
 32592  016482  0E0A               	movlw	10
 32593  016484  6455               	cpfsgt	i2fround@prec,c
 32594  016486  D071               	goto	i2l1441
 32595                           
 32596                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 32597  016488  0E00               	movlw	0
 32598  01648A  6E04               	movwf	i2___awmod@divisor+1,c
 32599  01648C  0E0A               	movlw	10
 32600  01648E  6E03               	movwf	i2___awmod@divisor,c
 32601  016490  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 32602  016494  6A02               	clrf	i2___awmod@dividend+1,c
 32603  016496  EC74  F0C2         	call	i2___awmod	;wreg free
 32604  01649A  90D8               	bcf	status,0,c
 32605  01649C  3601               	rlcf	?i2___awmod,f,c
 32606  01649E  3602               	rlcf	?i2___awmod+1,f,c
 32607  0164A0  90D8               	bcf	status,0,c
 32608  0164A2  3601               	rlcf	?i2___awmod,f,c
 32609  0164A4  3602               	rlcf	?i2___awmod+1,f,c
 32610  0164A6  0E07               	movlw	low __npowers_
 32611  0164A8  2401               	addwf	?i2___awmod,w,c
 32612  0164AA  6EF6               	movwf	tblptrl,c
 32613  0164AC  0EE4               	movlw	high __npowers_
 32614  0164AE  2002               	addwfc	?i2___awmod+1,w,c
 32615  0164B0  6EF7               	movwf	tblptrh,c
 32616  0164B2                     	if	1	;There are 3 active tblptr bytes
 32617  0164B2  6AF8               	clrf	tblptru,c
 32618  0164B4  0E00               	movlw	low (__mediumconst shr (0+16))
 32619  0164B6  22F8               	addwfc	tblptru,f,c
 32620  0164B8                     	endif
 32621  0164B8  0009               	tblrd		*+
 32622  0164BA  CFF5 F034          	movff	tablat,i2___flmul@a
 32623  0164BE  0009               	tblrd		*+
 32624  0164C0  CFF5 F035          	movff	tablat,i2___flmul@a+1
 32625  0164C4  0009               	tblrd		*+
 32626  0164C6  CFF5 F036          	movff	tablat,i2___flmul@a+2
 32627  0164CA  000A               	tblrd		*-
 32628  0164CC  CFF5 F037          	movff	tablat,i2___flmul@a+3
 32629  0164D0  0E00               	movlw	0
 32630  0164D2  6E0A               	movwf	i2___awdiv@divisor+1,c
 32631  0164D4  0E0A               	movlw	10
 32632  0164D6  6E09               	movwf	i2___awdiv@divisor,c
 32633  0164D8  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 32634  0164DC  6A08               	clrf	i2___awdiv@dividend+1,c
 32635  0164DE  EC3D  F0C1         	call	i2___awdiv	;wreg free
 32636  0164E2  90D8               	bcf	status,0,c
 32637  0164E4  3607               	rlcf	?i2___awdiv,f,c
 32638  0164E6  3608               	rlcf	?i2___awdiv+1,f,c
 32639  0164E8  90D8               	bcf	status,0,c
 32640  0164EA  3607               	rlcf	?i2___awdiv,f,c
 32641  0164EC  3608               	rlcf	?i2___awdiv+1,f,c
 32642  0164EE  0E24               	movlw	36
 32643  0164F0  2607               	addwf	?i2___awdiv,f,c
 32644  0164F2  0E00               	movlw	0
 32645  0164F4  2208               	addwfc	?i2___awdiv+1,f,c
 32646  0164F6  0E07               	movlw	low __npowers_
 32647  0164F8  2407               	addwf	?i2___awdiv,w,c
 32648  0164FA  6EF6               	movwf	tblptrl,c
 32649  0164FC  0EE4               	movlw	high __npowers_
 32650  0164FE  2008               	addwfc	?i2___awdiv+1,w,c
 32651  016500  6EF7               	movwf	tblptrh,c
 32652  016502                     	if	1	;There are 3 active tblptr bytes
 32653  016502  6AF8               	clrf	tblptru,c
 32654  016504  0E00               	movlw	low (__mediumconst shr (0+16))
 32655  016506  22F8               	addwfc	tblptru,f,c
 32656  016508                     	endif
 32657  016508  0009               	tblrd		*+
 32658  01650A  CFF5 F030          	movff	tablat,i2___flmul@b
 32659  01650E  0009               	tblrd		*+
 32660  016510  CFF5 F031          	movff	tablat,i2___flmul@b+1
 32661  016514  0009               	tblrd		*+
 32662  016516  CFF5 F032          	movff	tablat,i2___flmul@b+2
 32663  01651A  000A               	tblrd		*-
 32664  01651C  CFF5 F033          	movff	tablat,i2___flmul@b+3
 32665  016520  EC27  F0A4         	call	i2___flmul	;wreg free
 32666  016524  C030  F051         	movff	?i2___flmul,i2_fround$4183
 32667  016528  C031  F052         	movff	?i2___flmul+1,i2_fround$4183+1
 32668  01652C  C032  F053         	movff	?i2___flmul+2,i2_fround$4183+2
 32669  016530  C033  F054         	movff	?i2___flmul+3,i2_fround$4183+3
 32670                           
 32671                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 32672  016534  C051  F030         	movff	i2_fround$4183,i2___flmul@b
 32673  016538  C052  F031         	movff	i2_fround$4183+1,i2___flmul@b+1
 32674  01653C  C053  F032         	movff	i2_fround$4183+2,i2___flmul@b+2
 32675  016540  C054  F033         	movff	i2_fround$4183+3,i2___flmul@b+3
 32676  016544  0E00               	movlw	0
 32677  016546  6E34               	movwf	i2___flmul@a,c
 32678  016548  0E00               	movlw	0
 32679  01654A  6E35               	movwf	i2___flmul@a+1,c
 32680  01654C  0E00               	movlw	0
 32681  01654E  6E36               	movwf	i2___flmul@a+2,c
 32682  016550  0E3F               	movlw	63
 32683  016552  6E37               	movwf	i2___flmul@a+3,c
 32684  016554  EC27  F0A4         	call	i2___flmul	;wreg free
 32685  016558  C030  F049         	movff	?i2___flmul,?i2_fround
 32686  01655C  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 32687  016560  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 32688  016564  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 32689  016568  0012               	return	
 32690  01656A                     i2l1441:
 32691                           
 32692                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 32693  01656A  5055               	movf	i2fround@prec,w,c
 32694  01656C  0D04               	mullw	4
 32695  01656E  0E07               	movlw	low __npowers_
 32696  016570  24F3               	addwf	prodl,w,c
 32697  016572  6EF6               	movwf	tblptrl,c
 32698  016574  0EE4               	movlw	high __npowers_
 32699  016576  20F4               	addwfc	prodh,w,c
 32700  016578  6EF7               	movwf	tblptrh,c
 32701  01657A                     	if	1	;There are 3 active tblptr bytes
 32702  01657A  6AF8               	clrf	tblptru,c
 32703  01657C  0E00               	movlw	low (__mediumconst shr (0+16))
 32704  01657E  22F8               	addwfc	tblptru,f,c
 32705  016580                     	endif
 32706  016580  0009               	tblrd		*+
 32707  016582  CFF5 F030          	movff	tablat,i2___flmul@b
 32708  016586  0009               	tblrd		*+
 32709  016588  CFF5 F031          	movff	tablat,i2___flmul@b+1
 32710  01658C  0009               	tblrd		*+
 32711  01658E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 32712  016592  000A               	tblrd		*-
 32713  016594  CFF5 F033          	movff	tablat,i2___flmul@b+3
 32714  016598  0E00               	movlw	0
 32715  01659A  6E34               	movwf	i2___flmul@a,c
 32716  01659C  0E00               	movlw	0
 32717  01659E  6E35               	movwf	i2___flmul@a+1,c
 32718  0165A0  0E00               	movlw	0
 32719  0165A2  6E36               	movwf	i2___flmul@a+2,c
 32720  0165A4  0E3F               	movlw	63
 32721  0165A6  6E37               	movwf	i2___flmul@a+3,c
 32722  0165A8  EC27  F0A4         	call	i2___flmul	;wreg free
 32723  0165AC  C030  F049         	movff	?i2___flmul,?i2_fround
 32724  0165B0  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 32725  0165B4  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 32726  0165B8  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 32727  0165BC  0012               	return	
 32728  0165BE                     __end_ofi2_fround:
 32729                           	opt stack 0
 32730                           tosu	equ	0xFFF
 32731                           tosh	equ	0xFFE
 32732                           tosl	equ	0xFFD
 32733                           pclatu	equ	0xFFB
 32734                           pclath	equ	0xFFA
 32735                           tblptru	equ	0xFF8
 32736                           tblptrh	equ	0xFF7
 32737                           tblptrl	equ	0xFF6
 32738                           tablat	equ	0xFF5
 32739                           prodh	equ	0xFF4
 32740                           prodl	equ	0xFF3
 32741                           intcon	equ	0xFF2
 32742                           indf0	equ	0xFEF
 32743                           postinc0	equ	0xFEE
 32744                           fsr0h	equ	0xFEA
 32745                           fsr0l	equ	0xFE9
 32746                           wreg	equ	0xFE8
 32747                           indf1	equ	0xFE7
 32748                           postdec1	equ	0xFE5
 32749                           plusw1	equ	0xFE3
 32750                           fsr1h	equ	0xFE2
 32751                           fsr1l	equ	0xFE1
 32752                           bsr	equ	0xFE0
 32753                           indf2	equ	0xFDF
 32754                           postinc2	equ	0xFDE
 32755                           postdec2	equ	0xFDD
 32756                           plusw2	equ	0xFDB
 32757                           fsr2h	equ	0xFDA
 32758                           fsr2l	equ	0xFD9
 32759                           status	equ	0xFD8
 32760                           
 32761 ;; *************** function i2___awmod *****************
 32762 ;; Defined at:
 32763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 32764 ;; Parameters:    Size  Location     Type
 32765 ;;  dividend        2    0[COMRAM] int 
 32766 ;;  divisor         2    2[COMRAM] int 
 32767 ;; Auto vars:     Size  Location     Type
 32768 ;;  __awmod         1    5[COMRAM] unsigned char 
 32769 ;;  __awmod         1    4[COMRAM] unsigned char 
 32770 ;; Return value:  Size  Location     Type
 32771 ;;                  2    0[COMRAM] int 
 32772 ;; Registers used:
 32773 ;;		wreg, status,2, status,0
 32774 ;; Tracked objects:
 32775 ;;		On entry : 0/0
 32776 ;;		On exit  : 0/0
 32777 ;;		Unchanged: 0/0
 32778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32782 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32783 ;;Total ram usage:        6 bytes
 32784 ;; Hardware stack levels used:    1
 32785 ;; This function calls:
 32786 ;;		Nothing
 32787 ;; This function is called by:
 32788 ;;		i2_fround
 32789 ;;		i2_scale
 32790 ;; This function uses a non-reentrant model
 32791 ;;
 32792                           
 32793                           	psect	text97
 32794  0184E8                     __ptext97:
 32795                           	opt stack 0
 32796  0184E8                     i2___awmod:
 32797                           	opt stack 15
 32798                           
 32799                           ;incstack = 0
 32800  0184E8  0E00               	movlw	0
 32801  0184EA  6E06               	movwf	i2___awmod@sign,c
 32802  0184EC  AE02               	btfss	i2___awmod@dividend+1,7,c
 32803  0184EE  D006               	goto	i2l1827
 32804  0184F0  6C01               	negf	i2___awmod@dividend,c
 32805  0184F2  1E02               	comf	i2___awmod@dividend+1,f,c
 32806  0184F4  B0D8               	btfsc	status,0,c
 32807  0184F6  2A02               	incf	i2___awmod@dividend+1,f,c
 32808  0184F8  0E01               	movlw	1
 32809  0184FA  6E06               	movwf	i2___awmod@sign,c
 32810  0184FC                     i2l1827:
 32811  0184FC  AE04               	btfss	i2___awmod@divisor+1,7,c
 32812  0184FE  D004               	goto	i2l1828
 32813  018500  6C03               	negf	i2___awmod@divisor,c
 32814  018502  1E04               	comf	i2___awmod@divisor+1,f,c
 32815  018504  B0D8               	btfsc	status,0,c
 32816  018506  2A04               	incf	i2___awmod@divisor+1,f,c
 32817  018508                     i2l1828:
 32818  018508  5003               	movf	i2___awmod@divisor,w,c
 32819  01850A  1004               	iorwf	i2___awmod@divisor+1,w,c
 32820  01850C  B4D8               	btfsc	status,2,c
 32821  01850E  D018               	goto	i2l1835
 32822  018510  0E01               	movlw	1
 32823  018512  6E05               	movwf	i2___awmod@counter,c
 32824  018514  D004               	goto	i2l1830
 32825  018516  90D8               	bcf	status,0,c
 32826  018518  3603               	rlcf	i2___awmod@divisor,f,c
 32827  01851A  3604               	rlcf	i2___awmod@divisor+1,f,c
 32828  01851C  2A05               	incf	i2___awmod@counter,f,c
 32829  01851E                     i2l1830:
 32830  01851E  AE04               	btfss	i2___awmod@divisor+1,7,c
 32831  018520  D7FA               	goto	i2l1831
 32832  018522                     i2u1689_40:
 32833  018522  5003               	movf	i2___awmod@divisor,w,c
 32834  018524  5C01               	subwf	i2___awmod@dividend,w,c
 32835  018526  5004               	movf	i2___awmod@divisor+1,w,c
 32836  018528  5802               	subwfb	i2___awmod@dividend+1,w,c
 32837  01852A  A0D8               	btfss	status,0,c
 32838  01852C  D004               	goto	i2l1834
 32839  01852E  5003               	movf	i2___awmod@divisor,w,c
 32840  018530  5E01               	subwf	i2___awmod@dividend,f,c
 32841  018532  5004               	movf	i2___awmod@divisor+1,w,c
 32842  018534  5A02               	subwfb	i2___awmod@dividend+1,f,c
 32843  018536                     i2l1834:
 32844  018536  90D8               	bcf	status,0,c
 32845  018538  3204               	rrcf	i2___awmod@divisor+1,f,c
 32846  01853A  3203               	rrcf	i2___awmod@divisor,f,c
 32847  01853C  2E05               	decfsz	i2___awmod@counter,f,c
 32848  01853E  D7F1               	goto	i2u1689_40
 32849  018540                     i2l1835:
 32850  018540  5006               	movf	i2___awmod@sign,w,c
 32851  018542  B4D8               	btfsc	status,2,c
 32852  018544  D004               	goto	i2l1836
 32853  018546  6C01               	negf	i2___awmod@dividend,c
 32854  018548  1E02               	comf	i2___awmod@dividend+1,f,c
 32855  01854A  B0D8               	btfsc	status,0,c
 32856  01854C  2A02               	incf	i2___awmod@dividend+1,f,c
 32857  01854E                     i2l1836:
 32858  01854E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 32859  018552  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 32860  018556  0012               	return	
 32861  018558                     __end_ofi2___awmod:
 32862                           	opt stack 0
 32863                           tosu	equ	0xFFF
 32864                           tosh	equ	0xFFE
 32865                           tosl	equ	0xFFD
 32866                           pclatu	equ	0xFFB
 32867                           pclath	equ	0xFFA
 32868                           tblptru	equ	0xFF8
 32869                           tblptrh	equ	0xFF7
 32870                           tblptrl	equ	0xFF6
 32871                           tablat	equ	0xFF5
 32872                           prodh	equ	0xFF4
 32873                           prodl	equ	0xFF3
 32874                           intcon	equ	0xFF2
 32875                           indf0	equ	0xFEF
 32876                           postinc0	equ	0xFEE
 32877                           fsr0h	equ	0xFEA
 32878                           fsr0l	equ	0xFE9
 32879                           wreg	equ	0xFE8
 32880                           indf1	equ	0xFE7
 32881                           postdec1	equ	0xFE5
 32882                           plusw1	equ	0xFE3
 32883                           fsr1h	equ	0xFE2
 32884                           fsr1l	equ	0xFE1
 32885                           bsr	equ	0xFE0
 32886                           indf2	equ	0xFDF
 32887                           postinc2	equ	0xFDE
 32888                           postdec2	equ	0xFDD
 32889                           plusw2	equ	0xFDB
 32890                           fsr2h	equ	0xFDA
 32891                           fsr2l	equ	0xFD9
 32892                           status	equ	0xFD8
 32893                           
 32894 ;; *************** function i2___awdiv *****************
 32895 ;; Defined at:
 32896 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 32897 ;; Parameters:    Size  Location     Type
 32898 ;;  dividend        2    6[COMRAM] int 
 32899 ;;  divisor         2    8[COMRAM] int 
 32900 ;; Auto vars:     Size  Location     Type
 32901 ;;  __awdiv         2   12[COMRAM] int 
 32902 ;;  __awdiv         1   11[COMRAM] unsigned char 
 32903 ;;  __awdiv         1   10[COMRAM] unsigned char 
 32904 ;; Return value:  Size  Location     Type
 32905 ;;                  2    6[COMRAM] int 
 32906 ;; Registers used:
 32907 ;;		wreg, status,2, status,0
 32908 ;; Tracked objects:
 32909 ;;		On entry : 0/0
 32910 ;;		On exit  : 0/0
 32911 ;;		Unchanged: 0/0
 32912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32916 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32917 ;;Total ram usage:        8 bytes
 32918 ;; Hardware stack levels used:    1
 32919 ;; This function calls:
 32920 ;;		Nothing
 32921 ;; This function is called by:
 32922 ;;		i2_fround
 32923 ;;		i2_scale
 32924 ;;		i2_printf
 32925 ;; This function uses a non-reentrant model
 32926 ;;
 32927                           
 32928                           	psect	text98
 32929  01827A                     __ptext98:
 32930                           	opt stack 0
 32931  01827A                     i2___awdiv:
 32932                           	opt stack 15
 32933                           
 32934                           ;incstack = 0
 32935  01827A  0E00               	movlw	0
 32936  01827C  6E0C               	movwf	i2___awdiv@sign,c
 32937  01827E  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 32938  018280  D006               	goto	i2l1814
 32939  018282  6C09               	negf	i2___awdiv@divisor,c
 32940  018284  1E0A               	comf	i2___awdiv@divisor+1,f,c
 32941  018286  B0D8               	btfsc	status,0,c
 32942  018288  2A0A               	incf	i2___awdiv@divisor+1,f,c
 32943  01828A  0E01               	movlw	1
 32944  01828C  6E0C               	movwf	i2___awdiv@sign,c
 32945  01828E                     i2l1814:
 32946  01828E  AE08               	btfss	i2___awdiv@dividend+1,7,c
 32947  018290  D006               	goto	i2l1815
 32948  018292  6C07               	negf	i2___awdiv@dividend,c
 32949  018294  1E08               	comf	i2___awdiv@dividend+1,f,c
 32950  018296  B0D8               	btfsc	status,0,c
 32951  018298  2A08               	incf	i2___awdiv@dividend+1,f,c
 32952  01829A  0E01               	movlw	1
 32953  01829C  1A0C               	xorwf	i2___awdiv@sign,f,c
 32954  01829E                     i2l1815:
 32955  01829E  0E00               	movlw	0
 32956  0182A0  6E0E               	movwf	i2___awdiv@quotient+1,c
 32957  0182A2  0E00               	movlw	0
 32958  0182A4  6E0D               	movwf	i2___awdiv@quotient,c
 32959  0182A6  5009               	movf	i2___awdiv@divisor,w,c
 32960  0182A8  100A               	iorwf	i2___awdiv@divisor+1,w,c
 32961  0182AA  B4D8               	btfsc	status,2,c
 32962  0182AC  D01C               	goto	i2l1822
 32963  0182AE  0E01               	movlw	1
 32964  0182B0  6E0B               	movwf	i2___awdiv@counter,c
 32965  0182B2  D004               	goto	i2l1817
 32966  0182B4  90D8               	bcf	status,0,c
 32967  0182B6  3609               	rlcf	i2___awdiv@divisor,f,c
 32968  0182B8  360A               	rlcf	i2___awdiv@divisor+1,f,c
 32969  0182BA  2A0B               	incf	i2___awdiv@counter,f,c
 32970  0182BC                     i2l1817:
 32971  0182BC  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 32972  0182BE  D7FA               	goto	i2l1818
 32973  0182C0                     i2u1683_40:
 32974  0182C0  90D8               	bcf	status,0,c
 32975  0182C2  360D               	rlcf	i2___awdiv@quotient,f,c
 32976  0182C4  360E               	rlcf	i2___awdiv@quotient+1,f,c
 32977  0182C6  5009               	movf	i2___awdiv@divisor,w,c
 32978  0182C8  5C07               	subwf	i2___awdiv@dividend,w,c
 32979  0182CA  500A               	movf	i2___awdiv@divisor+1,w,c
 32980  0182CC  5808               	subwfb	i2___awdiv@dividend+1,w,c
 32981  0182CE  A0D8               	btfss	status,0,c
 32982  0182D0  D005               	goto	i2l1821
 32983  0182D2  5009               	movf	i2___awdiv@divisor,w,c
 32984  0182D4  5E07               	subwf	i2___awdiv@dividend,f,c
 32985  0182D6  500A               	movf	i2___awdiv@divisor+1,w,c
 32986  0182D8  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 32987  0182DA  800D               	bsf	i2___awdiv@quotient,0,c
 32988  0182DC                     i2l1821:
 32989  0182DC  90D8               	bcf	status,0,c
 32990  0182DE  320A               	rrcf	i2___awdiv@divisor+1,f,c
 32991  0182E0  3209               	rrcf	i2___awdiv@divisor,f,c
 32992  0182E2  2E0B               	decfsz	i2___awdiv@counter,f,c
 32993  0182E4  D7ED               	goto	i2u1683_40
 32994  0182E6                     i2l1822:
 32995  0182E6  500C               	movf	i2___awdiv@sign,w,c
 32996  0182E8  B4D8               	btfsc	status,2,c
 32997  0182EA  D004               	goto	i2l1823
 32998  0182EC  6C0D               	negf	i2___awdiv@quotient,c
 32999  0182EE  1E0E               	comf	i2___awdiv@quotient+1,f,c
 33000  0182F0  B0D8               	btfsc	status,0,c
 33001  0182F2  2A0E               	incf	i2___awdiv@quotient+1,f,c
 33002  0182F4                     i2l1823:
 33003  0182F4  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 33004  0182F8  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 33005  0182FC  0012               	return	
 33006  0182FE                     __end_ofi2___awdiv:
 33007                           	opt stack 0
 33008                           tosu	equ	0xFFF
 33009                           tosh	equ	0xFFE
 33010                           tosl	equ	0xFFD
 33011                           pclatu	equ	0xFFB
 33012                           pclath	equ	0xFFA
 33013                           tblptru	equ	0xFF8
 33014                           tblptrh	equ	0xFF7
 33015                           tblptrl	equ	0xFF6
 33016                           tablat	equ	0xFF5
 33017                           prodh	equ	0xFF4
 33018                           prodl	equ	0xFF3
 33019                           intcon	equ	0xFF2
 33020                           indf0	equ	0xFEF
 33021                           postinc0	equ	0xFEE
 33022                           fsr0h	equ	0xFEA
 33023                           fsr0l	equ	0xFE9
 33024                           wreg	equ	0xFE8
 33025                           indf1	equ	0xFE7
 33026                           postdec1	equ	0xFE5
 33027                           plusw1	equ	0xFE3
 33028                           fsr1h	equ	0xFE2
 33029                           fsr1l	equ	0xFE1
 33030                           bsr	equ	0xFE0
 33031                           indf2	equ	0xFDF
 33032                           postinc2	equ	0xFDE
 33033                           postdec2	equ	0xFDD
 33034                           plusw2	equ	0xFDB
 33035                           fsr2h	equ	0xFDA
 33036                           fsr2l	equ	0xFD9
 33037                           status	equ	0xFD8
 33038                           
 33039 ;; *************** function i2__tdiv_to_l_ *****************
 33040 ;; Defined at:
 33041 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 33042 ;; Parameters:    Size  Location     Type
 33043 ;;  f1              3    0[COMRAM] float 
 33044 ;;  f2              3    3[COMRAM] float 
 33045 ;; Auto vars:     Size  Location     Type
 33046 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 33047 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 33048 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 33049 ;; Return value:  Size  Location     Type
 33050 ;;                  4    0[COMRAM] unsigned long 
 33051 ;; Registers used:
 33052 ;;		wreg, status,2, status,0
 33053 ;; Tracked objects:
 33054 ;;		On entry : 0/0
 33055 ;;		On exit  : 0/0
 33056 ;;		Unchanged: 0/0
 33057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33058 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33059 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33060 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33061 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33062 ;;Total ram usage:       15 bytes
 33063 ;; Hardware stack levels used:    1
 33064 ;; This function calls:
 33065 ;;		Nothing
 33066 ;; This function is called by:
 33067 ;;		i2_printf
 33068 ;; This function uses a non-reentrant model
 33069 ;;
 33070                           
 33071                           	psect	text99
 33072  01707C                     __ptext99:
 33073                           	opt stack 0
 33074  01707C                     i2__tdiv_to_l_:
 33075                           	opt stack 16
 33076                           
 33077                           ;incstack = 0
 33078  01707C  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 33079  017080  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 33080  017082  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 33081  017084  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 33082  017086  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 33083  017088  E301               	bnc	u1750_41
 33084  01708A  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 33085  01708C                     u1750_41:
 33086  01708C  5007               	movf	??i2__tdiv_to_l_,w,c
 33087  01708E  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 33088  017090  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 33089  017092  A4D8               	btfss	status,2,c
 33090  017094  D009               	goto	i2l1962
 33091  017096  0E00               	movlw	0
 33092  017098  6E01               	movwf	?i2__tdiv_to_l_,c
 33093  01709A  0E00               	movlw	0
 33094  01709C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 33095  01709E  0E00               	movlw	0
 33096  0170A0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 33097  0170A2  0E00               	movlw	0
 33098  0170A4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 33099  0170A6  0012               	return	
 33100  0170A8                     i2l1962:
 33101  0170A8  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 33102  0170AC  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 33103  0170AE  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 33104  0170B0  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 33105  0170B2  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 33106  0170B4  E301               	bnc	u1752_41
 33107  0170B6  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 33108  0170B8                     u1752_41:
 33109  0170B8  5007               	movf	??i2__tdiv_to_l_,w,c
 33110  0170BA  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 33111  0170BC  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 33112  0170BE  A4D8               	btfss	status,2,c
 33113  0170C0  D009               	goto	i2l1964
 33114  0170C2  0E00               	movlw	0
 33115  0170C4  6E01               	movwf	?i2__tdiv_to_l_,c
 33116  0170C6  0E00               	movlw	0
 33117  0170C8  6E02               	movwf	?i2__tdiv_to_l_+1,c
 33118  0170CA  0E00               	movlw	0
 33119  0170CC  6E03               	movwf	?i2__tdiv_to_l_+2,c
 33120  0170CE  0E00               	movlw	0
 33121  0170D0  6E04               	movwf	?i2__tdiv_to_l_+3,c
 33122  0170D2  0012               	return	
 33123  0170D4                     i2l1964:
 33124  0170D4  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 33125  0170D6  0EFF               	movlw	255
 33126  0170D8  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 33127  0170DA  0EFF               	movlw	255
 33128  0170DC  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 33129  0170DE  0E00               	movlw	0
 33130  0170E0  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 33131  0170E2  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 33132  0170E4  0EFF               	movlw	255
 33133  0170E6  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 33134  0170E8  0EFF               	movlw	255
 33135  0170EA  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 33136  0170EC  0E00               	movlw	0
 33137  0170EE  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 33138  0170F0  0E00               	movlw	0
 33139  0170F2  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 33140  0170F4  0E00               	movlw	0
 33141  0170F6  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 33142  0170F8  0E00               	movlw	0
 33143  0170FA  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 33144  0170FC  0E00               	movlw	0
 33145  0170FE  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 33146  017100  0E7F               	movlw	127
 33147  017102  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 33148  017104  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 33149  017106  0F98               	addlw	152
 33150  017108  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 33151  01710A  0E18               	movlw	24
 33152  01710C  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 33153  01710E                     i2l1965:
 33154  01710E  90D8               	bcf	status,0,c
 33155  017110  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 33156  017112  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 33157  017114  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 33158  017116  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 33159  017118  5004               	movf	i2__tdiv_to_l_@f2,w,c
 33160  01711A  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 33161  01711C  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 33162  01711E  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 33163  017120  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 33164  017122  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 33165  017124  A0D8               	btfss	status,0,c
 33166  017126  D007               	goto	i2l1966
 33167  017128  5004               	movf	i2__tdiv_to_l_@f2,w,c
 33168  01712A  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 33169  01712C  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 33170  01712E  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 33171  017130  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 33172  017132  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 33173  017134  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 33174  017136                     i2l1966:
 33175  017136  90D8               	bcf	status,0,c
 33176  017138  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 33177  01713A  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 33178  01713C  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 33179  01713E  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 33180  017140  D7E6               	goto	i2l1965
 33181  017142  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 33182  017144  D016               	goto	i2l1968
 33183  017146  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 33184  017148  0A80               	xorlw	128
 33185  01714A  0F97               	addlw	151
 33186  01714C  B0D8               	btfsc	status,0,c
 33187  01714E  D009               	goto	i2l1969
 33188  017150  0E00               	movlw	0
 33189  017152  6E01               	movwf	?i2__tdiv_to_l_,c
 33190  017154  0E00               	movlw	0
 33191  017156  6E02               	movwf	?i2__tdiv_to_l_+1,c
 33192  017158  0E00               	movlw	0
 33193  01715A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 33194  01715C  0E00               	movlw	0
 33195  01715E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 33196  017160  0012               	return	
 33197  017162                     i2l1969:
 33198  017162  90D8               	bcf	status,0,c
 33199  017164  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 33200  017166  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 33201  017168  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 33202  01716A  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 33203  01716C  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 33204  01716E  D7F9               	goto	i2l1969
 33205  017170  D015               	goto	i2u1758_40
 33206  017172                     i2l1968:
 33207  017172  0E17               	movlw	23
 33208  017174  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 33209  017176  D00F               	goto	i2l1974
 33210  017178  0E00               	movlw	0
 33211  01717A  6E01               	movwf	?i2__tdiv_to_l_,c
 33212  01717C  0E00               	movlw	0
 33213  01717E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 33214  017180  0E00               	movlw	0
 33215  017182  6E03               	movwf	?i2__tdiv_to_l_+2,c
 33216  017184  0E00               	movlw	0
 33217  017186  6E04               	movwf	?i2__tdiv_to_l_+3,c
 33218  017188  0012               	return	
 33219  01718A  90D8               	bcf	status,0,c
 33220  01718C  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 33221  01718E  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 33222  017190  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 33223  017192  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 33224  017194  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 33225  017196                     i2l1974:
 33226  017196  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 33227  017198  A4D8               	btfss	status,2,c
 33228  01719A  D7F7               	goto	i2l1975
 33229  01719C                     i2u1758_40:
 33230  01719C  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 33231  0171A0  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 33232  0171A4  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 33233  0171A8  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 33234  0171AC  0012               	return		;funcret
 33235  0171AE                     __end_ofi2__tdiv_to_l_:
 33236                           	opt stack 0
 33237                           tosu	equ	0xFFF
 33238                           tosh	equ	0xFFE
 33239                           tosl	equ	0xFFD
 33240                           pclatu	equ	0xFFB
 33241                           pclath	equ	0xFFA
 33242                           tblptru	equ	0xFF8
 33243                           tblptrh	equ	0xFF7
 33244                           tblptrl	equ	0xFF6
 33245                           tablat	equ	0xFF5
 33246                           prodh	equ	0xFF4
 33247                           prodl	equ	0xFF3
 33248                           intcon	equ	0xFF2
 33249                           indf0	equ	0xFEF
 33250                           postinc0	equ	0xFEE
 33251                           fsr0h	equ	0xFEA
 33252                           fsr0l	equ	0xFE9
 33253                           wreg	equ	0xFE8
 33254                           indf1	equ	0xFE7
 33255                           postdec1	equ	0xFE5
 33256                           plusw1	equ	0xFE3
 33257                           fsr1h	equ	0xFE2
 33258                           fsr1l	equ	0xFE1
 33259                           bsr	equ	0xFE0
 33260                           indf2	equ	0xFDF
 33261                           postinc2	equ	0xFDE
 33262                           postdec2	equ	0xFDD
 33263                           plusw2	equ	0xFDB
 33264                           fsr2h	equ	0xFDA
 33265                           fsr2l	equ	0xFD9
 33266                           status	equ	0xFD8
 33267                           
 33268 ;; *************** function i2__div_to_l_ *****************
 33269 ;; Defined at:
 33270 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 33271 ;; Parameters:    Size  Location     Type
 33272 ;;  f1              4    0[COMRAM] unsigned long 
 33273 ;;  f2              4    4[COMRAM] unsigned long 
 33274 ;; Auto vars:     Size  Location     Type
 33275 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 33276 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 33277 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 33278 ;; Return value:  Size  Location     Type
 33279 ;;                  4    0[COMRAM] unsigned long 
 33280 ;; Registers used:
 33281 ;;		wreg, status,2, status,0
 33282 ;; Tracked objects:
 33283 ;;		On entry : 0/0
 33284 ;;		On exit  : 0/0
 33285 ;;		Unchanged: 0/0
 33286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33288 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33290 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33291 ;;Total ram usage:       14 bytes
 33292 ;; Hardware stack levels used:    1
 33293 ;; This function calls:
 33294 ;;		Nothing
 33295 ;; This function is called by:
 33296 ;;		i2_printf
 33297 ;; This function uses a non-reentrant model
 33298 ;;
 33299                           
 33300                           	psect	text100
 33301  0172D8                     __ptext100:
 33302                           	opt stack 0
 33303  0172D8                     i2__div_to_l_:
 33304                           	opt stack 16
 33305                           
 33306                           ;incstack = 0
 33307  0172D8  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 33308  0172DA  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 33309  0172DC  6E0E               	movwf	i2__div_to_l_@exp1,c
 33310  0172DE  500E               	movf	i2__div_to_l_@exp1,w,c
 33311  0172E0  A4D8               	btfss	status,2,c
 33312  0172E2  D009               	goto	i2l1858
 33313  0172E4  0E00               	movlw	0
 33314  0172E6  6E01               	movwf	?i2__div_to_l_,c
 33315  0172E8  0E00               	movlw	0
 33316  0172EA  6E02               	movwf	?i2__div_to_l_+1,c
 33317  0172EC  0E00               	movlw	0
 33318  0172EE  6E03               	movwf	?i2__div_to_l_+2,c
 33319  0172F0  0E00               	movlw	0
 33320  0172F2  6E04               	movwf	?i2__div_to_l_+3,c
 33321  0172F4  0012               	return	
 33322  0172F6                     i2l1858:
 33323  0172F6  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 33324  0172F8  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 33325  0172FA  6E0D               	movwf	i2__div_to_l_@cntr,c
 33326  0172FC  500D               	movf	i2__div_to_l_@cntr,w,c
 33327  0172FE  A4D8               	btfss	status,2,c
 33328  017300  D009               	goto	i2l1860
 33329  017302  0E00               	movlw	0
 33330  017304  6E01               	movwf	?i2__div_to_l_,c
 33331  017306  0E00               	movlw	0
 33332  017308  6E02               	movwf	?i2__div_to_l_+1,c
 33333  01730A  0E00               	movlw	0
 33334  01730C  6E03               	movwf	?i2__div_to_l_+2,c
 33335  01730E  0E00               	movlw	0
 33336  017310  6E04               	movwf	?i2__div_to_l_+3,c
 33337  017312  0012               	return	
 33338  017314                     i2l1860:
 33339  017314  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 33340  017316  0EFF               	movlw	255
 33341  017318  1601               	andwf	i2__div_to_l_@f1,f,c
 33342  01731A  0EFF               	movlw	255
 33343  01731C  1602               	andwf	i2__div_to_l_@f1+1,f,c
 33344  01731E  0EFF               	movlw	255
 33345  017320  1603               	andwf	i2__div_to_l_@f1+2,f,c
 33346  017322  0E00               	movlw	0
 33347  017324  1604               	andwf	i2__div_to_l_@f1+3,f,c
 33348  017326  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 33349  017328  0EFF               	movlw	255
 33350  01732A  1605               	andwf	i2__div_to_l_@f2,f,c
 33351  01732C  0EFF               	movlw	255
 33352  01732E  1606               	andwf	i2__div_to_l_@f2+1,f,c
 33353  017330  0EFF               	movlw	255
 33354  017332  1607               	andwf	i2__div_to_l_@f2+2,f,c
 33355  017334  0E00               	movlw	0
 33356  017336  1608               	andwf	i2__div_to_l_@f2+3,f,c
 33357  017338  0E00               	movlw	0
 33358  01733A  6E09               	movwf	i2__div_to_l_@quot,c
 33359  01733C  0E00               	movlw	0
 33360  01733E  6E0A               	movwf	i2__div_to_l_@quot+1,c
 33361  017340  0E00               	movlw	0
 33362  017342  6E0B               	movwf	i2__div_to_l_@quot+2,c
 33363  017344  0E00               	movlw	0
 33364  017346  6E0C               	movwf	i2__div_to_l_@quot+3,c
 33365  017348  0E7F               	movlw	127
 33366  01734A  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 33367  01734C  500D               	movf	i2__div_to_l_@cntr,w,c
 33368  01734E  0FA0               	addlw	160
 33369  017350  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 33370  017352  0E20               	movlw	32
 33371  017354  6E0D               	movwf	i2__div_to_l_@cntr,c
 33372  017356  90D8               	bcf	status,0,c
 33373  017358  3609               	rlcf	i2__div_to_l_@quot,f,c
 33374  01735A  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 33375  01735C  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 33376  01735E  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 33377  017360  5005               	movf	i2__div_to_l_@f2,w,c
 33378  017362  5C01               	subwf	i2__div_to_l_@f1,w,c
 33379  017364  5006               	movf	i2__div_to_l_@f2+1,w,c
 33380  017366  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 33381  017368  5007               	movf	i2__div_to_l_@f2+2,w,c
 33382  01736A  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 33383  01736C  5008               	movf	i2__div_to_l_@f2+3,w,c
 33384  01736E  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 33385  017370  A0D8               	btfss	status,0,c
 33386  017372  D009               	goto	i2l1862
 33387  017374  5005               	movf	i2__div_to_l_@f2,w,c
 33388  017376  5E01               	subwf	i2__div_to_l_@f1,f,c
 33389  017378  5006               	movf	i2__div_to_l_@f2+1,w,c
 33390  01737A  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 33391  01737C  5007               	movf	i2__div_to_l_@f2+2,w,c
 33392  01737E  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 33393  017380  5008               	movf	i2__div_to_l_@f2+3,w,c
 33394  017382  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 33395  017384  8009               	bsf	i2__div_to_l_@quot,0,c
 33396  017386                     i2l1862:
 33397  017386  90D8               	bcf	status,0,c
 33398  017388  3601               	rlcf	i2__div_to_l_@f1,f,c
 33399  01738A  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 33400  01738C  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 33401  01738E  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 33402  017390  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 33403  017392  D7E1               	goto	i2l1861
 33404  017394  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 33405  017396  D016               	goto	i2l1864
 33406  017398  500E               	movf	i2__div_to_l_@exp1,w,c
 33407  01739A  0A80               	xorlw	128
 33408  01739C  0F9F               	addlw	159
 33409  01739E  B0D8               	btfsc	status,0,c
 33410  0173A0  D009               	goto	i2l1865
 33411  0173A2  0E00               	movlw	0
 33412  0173A4  6E01               	movwf	?i2__div_to_l_,c
 33413  0173A6  0E00               	movlw	0
 33414  0173A8  6E02               	movwf	?i2__div_to_l_+1,c
 33415  0173AA  0E00               	movlw	0
 33416  0173AC  6E03               	movwf	?i2__div_to_l_+2,c
 33417  0173AE  0E00               	movlw	0
 33418  0173B0  6E04               	movwf	?i2__div_to_l_+3,c
 33419  0173B2  0012               	return	
 33420  0173B4                     i2l1865:
 33421  0173B4  90D8               	bcf	status,0,c
 33422  0173B6  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 33423  0173B8  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 33424  0173BA  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 33425  0173BC  3209               	rrcf	i2__div_to_l_@quot,f,c
 33426  0173BE  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 33427  0173C0  D7F9               	goto	i2l1865
 33428  0173C2  D015               	goto	i2u1749_40
 33429  0173C4                     i2l1864:
 33430  0173C4  0E1F               	movlw	31
 33431  0173C6  640E               	cpfsgt	i2__div_to_l_@exp1,c
 33432  0173C8  D00F               	goto	i2l1870
 33433  0173CA  0E00               	movlw	0
 33434  0173CC  6E01               	movwf	?i2__div_to_l_,c
 33435  0173CE  0E00               	movlw	0
 33436  0173D0  6E02               	movwf	?i2__div_to_l_+1,c
 33437  0173D2  0E00               	movlw	0
 33438  0173D4  6E03               	movwf	?i2__div_to_l_+2,c
 33439  0173D6  0E00               	movlw	0
 33440  0173D8  6E04               	movwf	?i2__div_to_l_+3,c
 33441  0173DA  0012               	return	
 33442  0173DC  90D8               	bcf	status,0,c
 33443  0173DE  3609               	rlcf	i2__div_to_l_@quot,f,c
 33444  0173E0  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 33445  0173E2  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 33446  0173E4  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 33447  0173E6  060E               	decf	i2__div_to_l_@exp1,f,c
 33448  0173E8                     i2l1870:
 33449  0173E8  500E               	movf	i2__div_to_l_@exp1,w,c
 33450  0173EA  A4D8               	btfss	status,2,c
 33451  0173EC  D7F7               	goto	i2l1871
 33452  0173EE                     i2u1749_40:
 33453  0173EE  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 33454  0173F2  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 33455  0173F6  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 33456  0173FA  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 33457  0173FE  0012               	return		;funcret
 33458  017400                     __end_ofi2__div_to_l_:
 33459                           	opt stack 0
 33460                           tosu	equ	0xFFF
 33461                           tosh	equ	0xFFE
 33462                           tosl	equ	0xFFD
 33463                           pclatu	equ	0xFFB
 33464                           pclath	equ	0xFFA
 33465                           tblptru	equ	0xFF8
 33466                           tblptrh	equ	0xFF7
 33467                           tblptrl	equ	0xFF6
 33468                           tablat	equ	0xFF5
 33469                           prodh	equ	0xFF4
 33470                           prodl	equ	0xFF3
 33471                           intcon	equ	0xFF2
 33472                           indf0	equ	0xFEF
 33473                           postinc0	equ	0xFEE
 33474                           fsr0h	equ	0xFEA
 33475                           fsr0l	equ	0xFE9
 33476                           wreg	equ	0xFE8
 33477                           indf1	equ	0xFE7
 33478                           postdec1	equ	0xFE5
 33479                           plusw1	equ	0xFE3
 33480                           fsr1h	equ	0xFE2
 33481                           fsr1l	equ	0xFE1
 33482                           bsr	equ	0xFE0
 33483                           indf2	equ	0xFDF
 33484                           postinc2	equ	0xFDE
 33485                           postdec2	equ	0xFDD
 33486                           plusw2	equ	0xFDB
 33487                           fsr2h	equ	0xFDA
 33488                           fsr2l	equ	0xFD9
 33489                           status	equ	0xFD8
 33490                           
 33491 ;; *************** function i2___wmul *****************
 33492 ;; Defined at:
 33493 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 33494 ;; Parameters:    Size  Location     Type
 33495 ;;  multiplier      2    0[COMRAM] unsigned int 
 33496 ;;  multiplicand    2    2[COMRAM] unsigned int 
 33497 ;; Auto vars:     Size  Location     Type
 33498 ;;  __wmul          2    4[COMRAM] unsigned int 
 33499 ;; Return value:  Size  Location     Type
 33500 ;;                  2    0[COMRAM] unsigned int 
 33501 ;; Registers used:
 33502 ;;		wreg, status,2, status,0, prodl, prodh
 33503 ;; Tracked objects:
 33504 ;;		On entry : 0/0
 33505 ;;		On exit  : 0/0
 33506 ;;		Unchanged: 0/0
 33507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33511 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33512 ;;Total ram usage:        6 bytes
 33513 ;; Hardware stack levels used:    1
 33514 ;; This function calls:
 33515 ;;		Nothing
 33516 ;; This function is called by:
 33517 ;;		i2_printf
 33518 ;; This function uses a non-reentrant model
 33519 ;;
 33520                           
 33521                           	psect	text101
 33522  019078                     __ptext101:
 33523                           	opt stack 0
 33524  019078                     i2___wmul:
 33525                           	opt stack 16
 33526                           
 33527                           ;incstack = 0
 33528  019078  5001               	movf	i2___wmul@multiplier,w,c
 33529  01907A  0203               	mulwf	i2___wmul@multiplicand,c
 33530  01907C  CFF3 F005          	movff	prodl,i2___wmul@product
 33531  019080  CFF4 F006          	movff	prodh,i2___wmul@product+1
 33532  019084  5001               	movf	i2___wmul@multiplier,w,c
 33533  019086  0204               	mulwf	i2___wmul@multiplicand+1,c
 33534  019088  50F3               	movf	prodl,w,c
 33535  01908A  2606               	addwf	i2___wmul@product+1,f,c
 33536  01908C  5002               	movf	i2___wmul@multiplier+1,w,c
 33537  01908E  0203               	mulwf	i2___wmul@multiplicand,c
 33538  019090  50F3               	movf	prodl,w,c
 33539  019092  2606               	addwf	i2___wmul@product+1,f,c
 33540  019094  C005  F001         	movff	i2___wmul@product,?i2___wmul
 33541  019098  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 33542  01909C  0012               	return	
 33543  01909E                     __end_ofi2___wmul:
 33544                           	opt stack 0
 33545                           tosu	equ	0xFFF
 33546                           tosh	equ	0xFFE
 33547                           tosl	equ	0xFFD
 33548                           pclatu	equ	0xFFB
 33549                           pclath	equ	0xFFA
 33550                           tblptru	equ	0xFF8
 33551                           tblptrh	equ	0xFF7
 33552                           tblptrl	equ	0xFF6
 33553                           tablat	equ	0xFF5
 33554                           prodh	equ	0xFF4
 33555                           prodl	equ	0xFF3
 33556                           intcon	equ	0xFF2
 33557                           indf0	equ	0xFEF
 33558                           postinc0	equ	0xFEE
 33559                           fsr0h	equ	0xFEA
 33560                           fsr0l	equ	0xFE9
 33561                           wreg	equ	0xFE8
 33562                           indf1	equ	0xFE7
 33563                           postdec1	equ	0xFE5
 33564                           plusw1	equ	0xFE3
 33565                           fsr1h	equ	0xFE2
 33566                           fsr1l	equ	0xFE1
 33567                           bsr	equ	0xFE0
 33568                           indf2	equ	0xFDF
 33569                           postinc2	equ	0xFDE
 33570                           postdec2	equ	0xFDD
 33571                           plusw2	equ	0xFDB
 33572                           fsr2h	equ	0xFDA
 33573                           fsr2l	equ	0xFD9
 33574                           status	equ	0xFD8
 33575                           
 33576 ;; *************** function i2___llmod *****************
 33577 ;; Defined at:
 33578 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 33579 ;; Parameters:    Size  Location     Type
 33580 ;;  dividend        4   13[COMRAM] unsigned long 
 33581 ;;  divisor         4   17[COMRAM] unsigned long 
 33582 ;; Auto vars:     Size  Location     Type
 33583 ;;  __llmod         1   21[COMRAM] unsigned char 
 33584 ;; Return value:  Size  Location     Type
 33585 ;;                  4   13[COMRAM] unsigned long 
 33586 ;; Registers used:
 33587 ;;		wreg, status,2, status,0
 33588 ;; Tracked objects:
 33589 ;;		On entry : 0/0
 33590 ;;		On exit  : 0/0
 33591 ;;		Unchanged: 0/0
 33592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33593 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33596 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33597 ;;Total ram usage:        9 bytes
 33598 ;; Hardware stack levels used:    1
 33599 ;; This function calls:
 33600 ;;		Nothing
 33601 ;; This function is called by:
 33602 ;;		i2_printf
 33603 ;; This function uses a non-reentrant model
 33604 ;;
 33605                           
 33606                           	psect	text102
 33607  018700                     __ptext102:
 33608                           	opt stack 0
 33609  018700                     i2___llmod:
 33610                           	opt stack 16
 33611                           
 33612                           ;incstack = 0
 33613  018700  5012               	movf	i2___llmod@divisor,w,c
 33614  018702  1013               	iorwf	i2___llmod@divisor+1,w,c
 33615  018704  1014               	iorwf	i2___llmod@divisor+2,w,c
 33616  018706  1015               	iorwf	i2___llmod@divisor+3,w,c
 33617  018708  B4D8               	btfsc	status,2,c
 33618  01870A  D024               	goto	i2l2063
 33619  01870C  0E01               	movlw	1
 33620  01870E  6E16               	movwf	i2___llmod@counter,c
 33621  018710  D006               	goto	i2l2058
 33622  018712  90D8               	bcf	status,0,c
 33623  018714  3612               	rlcf	i2___llmod@divisor,f,c
 33624  018716  3613               	rlcf	i2___llmod@divisor+1,f,c
 33625  018718  3614               	rlcf	i2___llmod@divisor+2,f,c
 33626  01871A  3615               	rlcf	i2___llmod@divisor+3,f,c
 33627  01871C  2A16               	incf	i2___llmod@counter,f,c
 33628  01871E                     i2l2058:
 33629  01871E  AE15               	btfss	i2___llmod@divisor+3,7,c
 33630  018720  D7F8               	goto	i2l2059
 33631  018722                     i2u1765_40:
 33632  018722  5012               	movf	i2___llmod@divisor,w,c
 33633  018724  5C0E               	subwf	i2___llmod@dividend,w,c
 33634  018726  5013               	movf	i2___llmod@divisor+1,w,c
 33635  018728  580F               	subwfb	i2___llmod@dividend+1,w,c
 33636  01872A  5014               	movf	i2___llmod@divisor+2,w,c
 33637  01872C  5810               	subwfb	i2___llmod@dividend+2,w,c
 33638  01872E  5015               	movf	i2___llmod@divisor+3,w,c
 33639  018730  5811               	subwfb	i2___llmod@dividend+3,w,c
 33640  018732  A0D8               	btfss	status,0,c
 33641  018734  D008               	goto	i2l2062
 33642  018736  5012               	movf	i2___llmod@divisor,w,c
 33643  018738  5E0E               	subwf	i2___llmod@dividend,f,c
 33644  01873A  5013               	movf	i2___llmod@divisor+1,w,c
 33645  01873C  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 33646  01873E  5014               	movf	i2___llmod@divisor+2,w,c
 33647  018740  5A10               	subwfb	i2___llmod@dividend+2,f,c
 33648  018742  5015               	movf	i2___llmod@divisor+3,w,c
 33649  018744  5A11               	subwfb	i2___llmod@dividend+3,f,c
 33650  018746                     i2l2062:
 33651  018746  90D8               	bcf	status,0,c
 33652  018748  3215               	rrcf	i2___llmod@divisor+3,f,c
 33653  01874A  3214               	rrcf	i2___llmod@divisor+2,f,c
 33654  01874C  3213               	rrcf	i2___llmod@divisor+1,f,c
 33655  01874E  3212               	rrcf	i2___llmod@divisor,f,c
 33656  018750  2E16               	decfsz	i2___llmod@counter,f,c
 33657  018752  D7E7               	goto	i2u1765_40
 33658  018754                     i2l2063:
 33659  018754  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 33660  018758  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 33661  01875C  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 33662  018760  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 33663  018764  0012               	return		;funcret
 33664  018766                     __end_ofi2___llmod:
 33665                           	opt stack 0
 33666                           tosu	equ	0xFFF
 33667                           tosh	equ	0xFFE
 33668                           tosl	equ	0xFFD
 33669                           pclatu	equ	0xFFB
 33670                           pclath	equ	0xFFA
 33671                           tblptru	equ	0xFF8
 33672                           tblptrh	equ	0xFF7
 33673                           tblptrl	equ	0xFF6
 33674                           tablat	equ	0xFF5
 33675                           prodh	equ	0xFF4
 33676                           prodl	equ	0xFF3
 33677                           intcon	equ	0xFF2
 33678                           indf0	equ	0xFEF
 33679                           postinc0	equ	0xFEE
 33680                           fsr0h	equ	0xFEA
 33681                           fsr0l	equ	0xFE9
 33682                           wreg	equ	0xFE8
 33683                           indf1	equ	0xFE7
 33684                           postdec1	equ	0xFE5
 33685                           plusw1	equ	0xFE3
 33686                           fsr1h	equ	0xFE2
 33687                           fsr1l	equ	0xFE1
 33688                           bsr	equ	0xFE0
 33689                           indf2	equ	0xFDF
 33690                           postinc2	equ	0xFDE
 33691                           postdec2	equ	0xFDD
 33692                           plusw2	equ	0xFDB
 33693                           fsr2h	equ	0xFDA
 33694                           fsr2l	equ	0xFD9
 33695                           status	equ	0xFD8
 33696                           
 33697 ;; *************** function i2___lldiv *****************
 33698 ;; Defined at:
 33699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 33700 ;; Parameters:    Size  Location     Type
 33701 ;;  dividend        4    0[COMRAM] unsigned long 
 33702 ;;  divisor         4    4[COMRAM] unsigned long 
 33703 ;; Auto vars:     Size  Location     Type
 33704 ;;  __lldiv         4    8[COMRAM] unsigned long 
 33705 ;;  __lldiv         1   12[COMRAM] unsigned char 
 33706 ;; Return value:  Size  Location     Type
 33707 ;;                  4    0[COMRAM] unsigned long 
 33708 ;; Registers used:
 33709 ;;		wreg, status,2, status,0
 33710 ;; Tracked objects:
 33711 ;;		On entry : 0/0
 33712 ;;		On exit  : 0/0
 33713 ;;		Unchanged: 0/0
 33714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33715 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33716 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33718 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33719 ;;Total ram usage:       13 bytes
 33720 ;; Hardware stack levels used:    1
 33721 ;; This function calls:
 33722 ;;		Nothing
 33723 ;; This function is called by:
 33724 ;;		i2_printf
 33725 ;; This function uses a non-reentrant model
 33726 ;;
 33727                           
 33728                           	psect	text103
 33729  0182FE                     __ptext103:
 33730                           	opt stack 0
 33731  0182FE                     i2___lldiv:
 33732                           	opt stack 16
 33733                           
 33734                           ;incstack = 0
 33735  0182FE  0E00               	movlw	0
 33736  018300  6E09               	movwf	i2___lldiv@quotient,c
 33737  018302  0E00               	movlw	0
 33738  018304  6E0A               	movwf	i2___lldiv@quotient+1,c
 33739  018306  0E00               	movlw	0
 33740  018308  6E0B               	movwf	i2___lldiv@quotient+2,c
 33741  01830A  0E00               	movlw	0
 33742  01830C  6E0C               	movwf	i2___lldiv@quotient+3,c
 33743  01830E  5005               	movf	i2___lldiv@divisor,w,c
 33744  018310  1006               	iorwf	i2___lldiv@divisor+1,w,c
 33745  018312  1007               	iorwf	i2___lldiv@divisor+2,w,c
 33746  018314  1008               	iorwf	i2___lldiv@divisor+3,w,c
 33747  018316  B4D8               	btfsc	status,2,c
 33748  018318  D02A               	goto	i2l2053
 33749  01831A  0E01               	movlw	1
 33750  01831C  6E0D               	movwf	i2___lldiv@counter,c
 33751  01831E  D006               	goto	i2l2048
 33752  018320  90D8               	bcf	status,0,c
 33753  018322  3605               	rlcf	i2___lldiv@divisor,f,c
 33754  018324  3606               	rlcf	i2___lldiv@divisor+1,f,c
 33755  018326  3607               	rlcf	i2___lldiv@divisor+2,f,c
 33756  018328  3608               	rlcf	i2___lldiv@divisor+3,f,c
 33757  01832A  2A0D               	incf	i2___lldiv@counter,f,c
 33758  01832C                     i2l2048:
 33759  01832C  AE08               	btfss	i2___lldiv@divisor+3,7,c
 33760  01832E  D7F8               	goto	i2l2049
 33761  018330                     i2u1762_40:
 33762  018330  90D8               	bcf	status,0,c
 33763  018332  3609               	rlcf	i2___lldiv@quotient,f,c
 33764  018334  360A               	rlcf	i2___lldiv@quotient+1,f,c
 33765  018336  360B               	rlcf	i2___lldiv@quotient+2,f,c
 33766  018338  360C               	rlcf	i2___lldiv@quotient+3,f,c
 33767  01833A  5005               	movf	i2___lldiv@divisor,w,c
 33768  01833C  5C01               	subwf	i2___lldiv@dividend,w,c
 33769  01833E  5006               	movf	i2___lldiv@divisor+1,w,c
 33770  018340  5802               	subwfb	i2___lldiv@dividend+1,w,c
 33771  018342  5007               	movf	i2___lldiv@divisor+2,w,c
 33772  018344  5803               	subwfb	i2___lldiv@dividend+2,w,c
 33773  018346  5008               	movf	i2___lldiv@divisor+3,w,c
 33774  018348  5804               	subwfb	i2___lldiv@dividend+3,w,c
 33775  01834A  A0D8               	btfss	status,0,c
 33776  01834C  D009               	goto	i2l2052
 33777  01834E  5005               	movf	i2___lldiv@divisor,w,c
 33778  018350  5E01               	subwf	i2___lldiv@dividend,f,c
 33779  018352  5006               	movf	i2___lldiv@divisor+1,w,c
 33780  018354  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 33781  018356  5007               	movf	i2___lldiv@divisor+2,w,c
 33782  018358  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 33783  01835A  5008               	movf	i2___lldiv@divisor+3,w,c
 33784  01835C  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 33785  01835E  8009               	bsf	i2___lldiv@quotient,0,c
 33786  018360                     i2l2052:
 33787  018360  90D8               	bcf	status,0,c
 33788  018362  3208               	rrcf	i2___lldiv@divisor+3,f,c
 33789  018364  3207               	rrcf	i2___lldiv@divisor+2,f,c
 33790  018366  3206               	rrcf	i2___lldiv@divisor+1,f,c
 33791  018368  3205               	rrcf	i2___lldiv@divisor,f,c
 33792  01836A  2E0D               	decfsz	i2___lldiv@counter,f,c
 33793  01836C  D7E1               	goto	i2u1762_40
 33794  01836E                     i2l2053:
 33795  01836E  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 33796  018372  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 33797  018376  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 33798  01837A  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 33799  01837E  0012               	return		;funcret
 33800  018380                     __end_ofi2___lldiv:
 33801                           	opt stack 0
 33802                           tosu	equ	0xFFF
 33803                           tosh	equ	0xFFE
 33804                           tosl	equ	0xFFD
 33805                           pclatu	equ	0xFFB
 33806                           pclath	equ	0xFFA
 33807                           tblptru	equ	0xFF8
 33808                           tblptrh	equ	0xFF7
 33809                           tblptrl	equ	0xFF6
 33810                           tablat	equ	0xFF5
 33811                           prodh	equ	0xFF4
 33812                           prodl	equ	0xFF3
 33813                           intcon	equ	0xFF2
 33814                           indf0	equ	0xFEF
 33815                           postinc0	equ	0xFEE
 33816                           fsr0h	equ	0xFEA
 33817                           fsr0l	equ	0xFE9
 33818                           wreg	equ	0xFE8
 33819                           indf1	equ	0xFE7
 33820                           postdec1	equ	0xFE5
 33821                           plusw1	equ	0xFE3
 33822                           fsr1h	equ	0xFE2
 33823                           fsr1l	equ	0xFE1
 33824                           bsr	equ	0xFE0
 33825                           indf2	equ	0xFDF
 33826                           postinc2	equ	0xFDE
 33827                           postdec2	equ	0xFDD
 33828                           plusw2	equ	0xFDB
 33829                           fsr2h	equ	0xFDA
 33830                           fsr2l	equ	0xFD9
 33831                           status	equ	0xFD8
 33832                           
 33833 ;; *************** function _ADCC_ThresholdISR *****************
 33834 ;; Defined at:
 33835 ;;		line 298 in file "mcc_generated_files/adcc.c"
 33836 ;; Parameters:    Size  Location     Type
 33837 ;;		None
 33838 ;; Auto vars:     Size  Location     Type
 33839 ;;		None
 33840 ;; Return value:  Size  Location     Type
 33841 ;;                  1    wreg      void 
 33842 ;; Registers used:
 33843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33844 ;; Tracked objects:
 33845 ;;		On entry : 0/0
 33846 ;;		On exit  : 0/0
 33847 ;;		Unchanged: 0/0
 33848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33853 ;;Total ram usage:        0 bytes
 33854 ;; Hardware stack levels used:    1
 33855 ;; Hardware stack levels required when called:    7
 33856 ;; This function calls:
 33857 ;;		Absolute function
 33858 ;;		_ADCC_DefaultInterruptHandler
 33859 ;;		_ADCPostProcessingCallback
 33860 ;; This function is called by:
 33861 ;;		_INTERRUPT_InterruptManagerHigh
 33862 ;; This function uses a non-reentrant model
 33863 ;;
 33864                           
 33865                           	psect	text104
 33866  019004                     __ptext104:
 33867                           	opt stack 0
 33868  019004                     _ADCC_ThresholdISR:
 33869                           	opt stack 11
 33870                           
 33871                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 33872                           
 33873                           ;incstack = 0
 33874  019004  010E               	movlb	14	; () banked
 33875  019006  9334               	bcf	52,1,b	;volatile
 33876                           
 33877                           ; BSR set to: 14
 33878                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 33879  019008  0102               	movlb	2	; () banked
 33880  01900A  512E               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33881  01900C  112F               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33882  01900E  1130               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33883  019010  B4D8               	btfsc	status,2,c
 33884  019012  0012               	return	
 33885                           
 33886                           ; BSR set to: 2
 33887                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 33888  019014  D801               	call	i2u2665_48
 33889  019016  0012               	return	
 33890  019018                     i2u2665_48:
 33891  019018  0005               	push	
 33892  01901A  6EFA               	movwf	pclath,c
 33893  01901C  512E               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33894  01901E  6EFD               	movwf	tosl,c
 33895  019020  512F               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33896  019022  6EFE               	movwf	tosh,c
 33897  019024  5130               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33898  019026  6EFF               	movwf	tosu,c
 33899  019028  50FA               	movf	pclath,w,c
 33900  01902A  0012               	return		;indir
 33901  01902C                     __end_of_ADCC_ThresholdISR:
 33902                           	opt stack 0
 33903                           tosu	equ	0xFFF
 33904                           tosh	equ	0xFFE
 33905                           tosl	equ	0xFFD
 33906                           pclatu	equ	0xFFB
 33907                           pclath	equ	0xFFA
 33908                           tblptru	equ	0xFF8
 33909                           tblptrh	equ	0xFF7
 33910                           tblptrl	equ	0xFF6
 33911                           tablat	equ	0xFF5
 33912                           prodh	equ	0xFF4
 33913                           prodl	equ	0xFF3
 33914                           intcon	equ	0xFF2
 33915                           indf0	equ	0xFEF
 33916                           postinc0	equ	0xFEE
 33917                           fsr0h	equ	0xFEA
 33918                           fsr0l	equ	0xFE9
 33919                           wreg	equ	0xFE8
 33920                           indf1	equ	0xFE7
 33921                           postdec1	equ	0xFE5
 33922                           plusw1	equ	0xFE3
 33923                           fsr1h	equ	0xFE2
 33924                           fsr1l	equ	0xFE1
 33925                           bsr	equ	0xFE0
 33926                           indf2	equ	0xFDF
 33927                           postinc2	equ	0xFDE
 33928                           postdec2	equ	0xFDD
 33929                           plusw2	equ	0xFDB
 33930                           fsr2h	equ	0xFDA
 33931                           fsr2l	equ	0xFD9
 33932                           status	equ	0xFD8
 33933                           
 33934 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33935 ;; Defined at:
 33936 ;;		line 310 in file "mcc_generated_files/adcc.c"
 33937 ;; Parameters:    Size  Location     Type
 33938 ;;		None
 33939 ;; Auto vars:     Size  Location     Type
 33940 ;;		None
 33941 ;; Return value:  Size  Location     Type
 33942 ;;                  1    wreg      void 
 33943 ;; Registers used:
 33944 ;;		None
 33945 ;; Tracked objects:
 33946 ;;		On entry : 0/0
 33947 ;;		On exit  : 0/0
 33948 ;;		Unchanged: 0/0
 33949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33954 ;;Total ram usage:        0 bytes
 33955 ;; Hardware stack levels used:    1
 33956 ;; This function calls:
 33957 ;;		Nothing
 33958 ;; This function is called by:
 33959 ;;		_ADCC_Initialize
 33960 ;;		_ADCC_ThresholdISR
 33961 ;; This function uses a non-reentrant model
 33962 ;;
 33963                           
 33964                           	psect	text105
 33965  01930A                     __ptext105:
 33966                           	opt stack 0
 33967  01930A                     _ADCC_DefaultInterruptHandler:
 33968                           	opt stack 17
 33969                           
 33970                           ;incstack = 0
 33971  01930A  0012               	return		;funcret
 33972  01930C                     __end_of_ADCC_DefaultInterruptHandler:
 33973                           	opt stack 0
 33974                           tosu	equ	0xFFF
 33975                           tosh	equ	0xFFE
 33976                           tosl	equ	0xFFD
 33977                           pclatu	equ	0xFFB
 33978                           pclath	equ	0xFFA
 33979                           tblptru	equ	0xFF8
 33980                           tblptrh	equ	0xFF7
 33981                           tblptrl	equ	0xFF6
 33982                           tablat	equ	0xFF5
 33983                           prodh	equ	0xFF4
 33984                           prodl	equ	0xFF3
 33985                           intcon	equ	0xFF2
 33986                           indf0	equ	0xFEF
 33987                           postinc0	equ	0xFEE
 33988                           fsr0h	equ	0xFEA
 33989                           fsr0l	equ	0xFE9
 33990                           wreg	equ	0xFE8
 33991                           indf1	equ	0xFE7
 33992                           postdec1	equ	0xFE5
 33993                           plusw1	equ	0xFE3
 33994                           fsr1h	equ	0xFE2
 33995                           fsr1l	equ	0xFE1
 33996                           bsr	equ	0xFE0
 33997                           indf2	equ	0xFDF
 33998                           postinc2	equ	0xFDE
 33999                           postdec2	equ	0xFDD
 34000                           plusw2	equ	0xFDB
 34001                           fsr2h	equ	0xFDA
 34002                           fsr2l	equ	0xFD9
 34003                           status	equ	0xFD8
 34004                           
 34005 ;; *************** function _ADCPostProcessingCallback *****************
 34006 ;; Defined at:
 34007 ;;		line 227 in file "main.c"
 34008 ;; Parameters:    Size  Location     Type
 34009 ;;		None
 34010 ;; Auto vars:     Size  Location     Type
 34011 ;;  current_adc_    1  117[BANK0 ] enum E17425
 34012 ;; Return value:  Size  Location     Type
 34013 ;;                  1    wreg      void 
 34014 ;; Registers used:
 34015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34016 ;; Tracked objects:
 34017 ;;		On entry : 0/0
 34018 ;;		On exit  : 0/0
 34019 ;;		Unchanged: 0/0
 34020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34022 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34024 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34025 ;;Total ram usage:       21 bytes
 34026 ;; Hardware stack levels used:    1
 34027 ;; Hardware stack levels required when called:    6
 34028 ;; This function calls:
 34029 ;;		_ADCC_GetConversionResult
 34030 ;;		_ADCC_GetFilterValue
 34031 ;;		_ADCC_HasAccumulatorOverflowed
 34032 ;;		_ADCC_StopConversion
 34033 ;;		_abs
 34034 ;;		_currentMeasuredToPeak
 34035 ;;		_peakToRMS
 34036 ;;		i2_TMR7_StopTimer
 34037 ;;		i2___fladd
 34038 ;;		i2___fldiv
 34039 ;;		i2___flge
 34040 ;;		i2___flmul
 34041 ;;		i2___flneg
 34042 ;;		i2___fltol
 34043 ;;		i2___xxtofl
 34044 ;; This function is called by:
 34045 ;;		_main
 34046 ;;		_ADCC_ThresholdISR
 34047 ;; This function uses a non-reentrant model
 34048 ;;
 34049                           
 34050                           	psect	text106
 34051  012E90                     __ptext106:
 34052                           	opt stack 0
 34053  012E90                     _ADCPostProcessingCallback:
 34054                           	opt stack 11
 34055                           
 34056                           ;main.c: 230: ADCC_StopConversion();
 34057                           
 34058                           ;incstack = 0
 34059  012E90  EC80  F0C9         	call	_ADCC_StopConversion	;wreg free
 34060                           
 34061                           ;main.c: 233: adcc_channel_t current_adc_channel = ADPCH;
 34062  012E94  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 34063                           
 34064                           ;main.c: 236: switch (current_adc_channel) {
 34065  012E98  EF20  F09C         	goto	i2l997
 34066  012E9C                     
 34067                           ;main.c: 240: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 34068  012E9C  ECE9  F0C8         	call	_ADCC_GetConversionResult	;wreg free
 34069  012EA0  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 34070  012EA4  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 34071  012EA8  6A07               	clrf	i2___xxtofl@val+2,c
 34072  012EAA  6A08               	clrf	i2___xxtofl@val+3,c
 34073  012EAC  0E00               	movlw	0
 34074  012EAE  ECFC  F0B6         	call	i2___xxtofl
 34075  012EB2  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 34076  012EB6  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 34077  012EBA  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 34078  012EBE  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 34079  012EC2  0E0D               	movlw	13
 34080  012EC4  6E34               	movwf	i2___flmul@a,c
 34081  012EC6  0E68               	movlw	104
 34082  012EC8  6E35               	movwf	i2___flmul@a+1,c
 34083  012ECA  0E53               	movlw	83
 34084  012ECC  6E36               	movwf	i2___flmul@a+2,c
 34085  012ECE  0E3B               	movlw	59
 34086  012ED0  6E37               	movwf	i2___flmul@a+3,c
 34087  012ED2  EC27  F0A4         	call	i2___flmul	;wreg free
 34088  012ED6  C030  F1D7         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 34089  012EDA  C031  F1D8         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 34090  012EDE  C032  F1D9         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 34091  012EE2  C033  F1DA         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 34092                           
 34093                           ;main.c: 242: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 34094  012EE6  0E0A               	movlw	10
 34095  012EE8  6E34               	movwf	i2___flge@ff1,c
 34096  012EEA  0ED7               	movlw	215
 34097  012EEC  6E35               	movwf	i2___flge@ff1+1,c
 34098  012EEE  0E23               	movlw	35
 34099  012EF0  6E36               	movwf	i2___flge@ff1+2,c
 34100  012EF2  0E3C               	movlw	60
 34101  012EF4  6E37               	movwf	i2___flge@ff1+3,c
 34102  012EF6  C1D7  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 34103  012EFA  C1D8  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 34104  012EFE  C1D9  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 34105  012F02  C1DA  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 34106  012F06  EC23  F0BB         	call	i2___flge	;wreg free
 34107  012F0A  A0D8               	btfss	status,0,c
 34108  012F0C  D005               	goto	i2u1771_40
 34109  012F0E  EC5D  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 34110  012F12  0900               	iorlw	0
 34111  012F14  B4D8               	btfsc	status,2,c
 34112  012F16  D007               	goto	i2l999
 34113  012F18                     i2u1771_40:
 34114                           
 34115                           ;main.c: 244: LATFbits.LATF3 = 1;
 34116  012F18  867E               	bsf	3966,3,c	;volatile
 34117                           
 34118                           ;main.c: 245: adc_error_flag = 1;
 34119  012F1A  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 34120                           
 34121                           ;main.c: 247: PIE5bits.TMR7IE = 0;
 34122  012F1C  010E               	movlb	14	; () banked
 34123  012F1E  9D2E               	bcf	46,6,b	;volatile
 34124                           
 34125                           ; BSR set to: 14
 34126                           ;main.c: 248: TMR7_StopTimer();
 34127  012F20  EC7D  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 34128                           
 34129                           ;main.c: 249: return;
 34130  012F24  0012               	return	
 34131  012F26                     i2l999:
 34132                           
 34133                           ;main.c: 251: }
 34134                           ;main.c: 253: next_channel = channel_FVR_buf1;
 34135  012F26  0E3F               	movlw	63
 34136  012F28  0101               	movlb	1	; () banked
 34137  012F2A  6FE8               	movwf	_next_channel& (0+255),b
 34138                           
 34139                           ;main.c: 255: break;
 34140  012F2C  0012               	return	
 34141  012F2E                     
 34142                           ;main.c: 260: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 34143                           
 34144                           ; BSR set to: 1
 34145  012F2E  0E0D               	movlw	13
 34146  012F30  6E34               	movwf	i2___flmul@a,c
 34147  012F32  0E68               	movlw	104
 34148  012F34  6E35               	movwf	i2___flmul@a+1,c
 34149  012F36  0E53               	movlw	83
 34150  012F38  6E36               	movwf	i2___flmul@a+2,c
 34151  012F3A  0E3B               	movlw	59
 34152  012F3C  6E37               	movwf	i2___flmul@a+3,c
 34153  012F3E  ECE9  F0C8         	call	_ADCC_GetConversionResult	;wreg free
 34154  012F42  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 34155  012F46  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 34156  012F4A  6A07               	clrf	i2___xxtofl@val+2,c
 34157  012F4C  6A08               	clrf	i2___xxtofl@val+3,c
 34158  012F4E  0E00               	movlw	0
 34159  012F50  ECFC  F0B6         	call	i2___xxtofl
 34160  012F54  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 34161  012F58  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 34162  012F5C  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 34163  012F60  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 34164  012F64  EC27  F0A4         	call	i2___flmul	;wreg free
 34165  012F68  C030  F056         	movff	?i2___flmul,i2___fladd@b
 34166  012F6C  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 34167  012F70  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 34168  012F74  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 34169  012F78  C1D7  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 34170  012F7C  C1D8  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 34171  012F80  C1D9  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 34172  012F84  C1DA  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 34173  012F88  EC6E  F0A7         	call	i2___fladd	;wreg free
 34174  012F8C  C056  F1E4         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 34175  012F90  C057  F1E5         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 34176  012F94  C058  F1E6         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 34177  012F98  C059  F1E7         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 34178                           
 34179                           ;main.c: 261: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 34180  012F9C  0E6F               	movlw	111
 34181  012F9E  6E13               	movwf	i2___fldiv@b,c
 34182  012FA0  0E12               	movlw	18
 34183  012FA2  6E14               	movwf	i2___fldiv@b+1,c
 34184  012FA4  0E03               	movlw	3
 34185  012FA6  6E15               	movwf	i2___fldiv@b+2,c
 34186  012FA8  0E40               	movlw	64
 34187  012FAA  6E16               	movwf	i2___fldiv@b+3,c
 34188  012FAC  C1E4  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 34189  012FB0  C1E5  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 34190  012FB4  C1E6  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 34191  012FB8  C1E7  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 34192  012FBC  EC2E  F0B0         	call	i2___fldiv	;wreg free
 34193  012FC0  C013  F224         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 34194  012FC4  C014  F225         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 34195  012FC8  C015  F226         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 34196  012FCC  C016  F227         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 34197                           
 34198                           ;main.c: 263: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 34199  012FD0  0E00               	movlw	0
 34200  012FD2  6E34               	movwf	i2___flge@ff1,c
 34201  012FD4  0E00               	movlw	0
 34202  012FD6  6E35               	movwf	i2___flge@ff1+1,c
 34203  012FD8  0E20               	movlw	32
 34204  012FDA  6E36               	movwf	i2___flge@ff1+2,c
 34205  012FDC  0E40               	movlw	64
 34206  012FDE  6E37               	movwf	i2___flge@ff1+3,c
 34207  012FE0  C1E4  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 34208  012FE4  C1E5  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 34209  012FE8  C1E6  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 34210  012FEC  C1E7  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 34211  012FF0  EC23  F0BB         	call	i2___flge	;wreg free
 34212  012FF4  A0D8               	btfss	status,0,c
 34213  012FF6  D019               	goto	i2u1774_40
 34214  012FF8  C1E4  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 34215  012FFC  C1E5  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 34216  013000  C1E6  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 34217  013004  C1E7  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 34218  013008  0E00               	movlw	0
 34219  01300A  6E38               	movwf	i2___flge@ff2,c
 34220  01300C  0E00               	movlw	0
 34221  01300E  6E39               	movwf	i2___flge@ff2+1,c
 34222  013010  0E00               	movlw	0
 34223  013012  6E3A               	movwf	i2___flge@ff2+2,c
 34224  013014  0E40               	movlw	64
 34225  013016  6E3B               	movwf	i2___flge@ff2+3,c
 34226  013018  EC23  F0BB         	call	i2___flge	;wreg free
 34227  01301C  A0D8               	btfss	status,0,c
 34228  01301E  D005               	goto	i2u1774_40
 34229  013020  EC5D  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 34230  013024  0900               	iorlw	0
 34231  013026  B4D8               	btfsc	status,2,c
 34232  013028  D007               	goto	i2l1005
 34233  01302A                     i2u1774_40:
 34234                           
 34235                           ;main.c: 265: LATFbits.LATF3 = 1;
 34236  01302A  867E               	bsf	3966,3,c	;volatile
 34237                           
 34238                           ;main.c: 266: adc_error_flag = 1;
 34239  01302C  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 34240                           
 34241                           ;main.c: 268: PIE5bits.TMR7IE = 0;
 34242  01302E  010E               	movlb	14	; () banked
 34243  013030  9D2E               	bcf	46,6,b	;volatile
 34244                           
 34245                           ; BSR set to: 14
 34246                           ;main.c: 269: TMR7_StopTimer();
 34247  013032  EC7D  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 34248                           
 34249                           ;main.c: 270: return;
 34250  013036  0012               	return	
 34251  013038                     i2l1005:
 34252                           
 34253                           ;main.c: 272: }
 34254                           ;main.c: 274: next_channel = POS3P3_ADC;
 34255  013038  0E22               	movlw	34
 34256  01303A  0101               	movlb	1	; () banked
 34257  01303C  6FE8               	movwf	_next_channel& (0+255),b
 34258                           
 34259                           ;main.c: 276: break;
 34260  01303E  0012               	return	
 34261  013040                     
 34262                           ;main.c: 281: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 34263                           
 34264                           ; BSR set to: 1
 34265  013040  C224  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 34266  013044  C225  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 34267  013048  C226  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 34268  01304C  C227  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 34269  013050  ECDF  F0C8         	call	_ADCC_GetFilterValue	;wreg free
 34270  013054  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 34271  013058  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 34272  01305C  6A07               	clrf	i2___xxtofl@val+2,c
 34273  01305E  6A08               	clrf	i2___xxtofl@val+3,c
 34274  013060  0E00               	movlw	0
 34275  013062  ECFC  F0B6         	call	i2___xxtofl
 34276  013066  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 34277  01306A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 34278  01306E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 34279  013072  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 34280  013076  EC27  F0A4         	call	i2___flmul	;wreg free
 34281  01307A  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4173
 34282  01307E  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4173+1
 34283  013082  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4173+2
 34284  013086  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4173+3
 34285                           
 34286                           ;main.c: 281: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 34287  01308A  C0D6  F030         	movff	_ADCPostProcessingCallback$4173,i2___flmul@b
 34288  01308E  C0D7  F031         	movff	_ADCPostProcessingCallback$4173+1,i2___flmul@b+1
 34289  013092  C0D8  F032         	movff	_ADCPostProcessingCallback$4173+2,i2___flmul@b+2
 34290  013096  C0D9  F033         	movff	_ADCPostProcessingCallback$4173+3,i2___flmul@b+3
 34291  01309A  0E0D               	movlw	13
 34292  01309C  6E34               	movwf	i2___flmul@a,c
 34293  01309E  0E68               	movlw	104
 34294  0130A0  6E35               	movwf	i2___flmul@a+1,c
 34295  0130A2  0ED3               	movlw	211
 34296  0130A4  6E36               	movwf	i2___flmul@a+2,c
 34297  0130A6  0E3B               	movlw	59
 34298  0130A8  6E37               	movwf	i2___flmul@a+3,c
 34299  0130AA  EC27  F0A4         	call	i2___flmul	;wreg free
 34300  0130AE  C030  F1D3         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 34301  0130B2  C031  F1D4         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 34302  0130B6  C032  F1D5         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 34303  0130BA  C033  F1D6         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 34304                           
 34305                           ;main.c: 283: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 34306  0130BE  0E00               	movlw	0
 34307  0130C0  6E34               	movwf	i2___flge@ff1,c
 34308  0130C2  0E00               	movlw	0
 34309  0130C4  6E35               	movwf	i2___flge@ff1+1,c
 34310  0130C6  0E60               	movlw	96
 34311  0130C8  6E36               	movwf	i2___flge@ff1+2,c
 34312  0130CA  0E40               	movlw	64
 34313  0130CC  6E37               	movwf	i2___flge@ff1+3,c
 34314  0130CE  C1D3  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 34315  0130D2  C1D4  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 34316  0130D6  C1D5  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 34317  0130DA  C1D6  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 34318  0130DE  EC23  F0BB         	call	i2___flge	;wreg free
 34319  0130E2  A0D8               	btfss	status,0,c
 34320  0130E4  D005               	goto	i2u1776_40
 34321  0130E6  EC5D  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 34322  0130EA  0900               	iorlw	0
 34323  0130EC  B4D8               	btfsc	status,2,c
 34324  0130EE  D007               	goto	i2l1009
 34325  0130F0                     i2u1776_40:
 34326                           
 34327                           ;main.c: 285: LATFbits.LATF3 = 1;
 34328  0130F0  867E               	bsf	3966,3,c	;volatile
 34329                           
 34330                           ;main.c: 286: adc_error_flag = 1;
 34331  0130F2  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 34332                           
 34333                           ;main.c: 288: PIE5bits.TMR7IE = 0;
 34334  0130F4  010E               	movlb	14	; () banked
 34335  0130F6  9D2E               	bcf	46,6,b	;volatile
 34336                           
 34337                           ; BSR set to: 14
 34338                           ;main.c: 289: TMR7_StopTimer();
 34339  0130F8  EC7D  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 34340                           
 34341                           ;main.c: 290: return;
 34342  0130FC  0012               	return	
 34343  0130FE                     i2l1009:
 34344                           
 34345                           ;main.c: 292: }
 34346                           ;main.c: 294: next_channel = ISNS_ADC;
 34347  0130FE  0E00               	movlw	0
 34348  013100  0101               	movlb	1	; () banked
 34349  013102  6FE8               	movwf	_next_channel& (0+255),b
 34350                           
 34351                           ;main.c: 296: break;
 34352  013104  0012               	return	
 34353  013106                     
 34354                           ;main.c: 301: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 34355                           
 34356                           ; BSR set to: 1
 34357  013106  0E00               	movlw	0
 34358  013108  6E17               	movwf	i2___fldiv@a,c
 34359  01310A  0EC0               	movlw	192
 34360  01310C  6E18               	movwf	i2___fldiv@a+1,c
 34361  01310E  0E7F               	movlw	127
 34362  013110  6E19               	movwf	i2___fldiv@a+2,c
 34363  013112  0E44               	movlw	68
 34364  013114  6E1A               	movwf	i2___fldiv@a+3,c
 34365  013116  C1D3  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 34366  01311A  C1D4  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 34367  01311E  C1D5  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 34368  013122  C1D6  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 34369  013126  EC2E  F0B0         	call	i2___fldiv	;wreg free
 34370  01312A  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 34371  01312E  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 34372  013132  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 34373  013136  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 34374  01313A  ECDF  F0C8         	call	_ADCC_GetFilterValue	;wreg free
 34375  01313E  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 34376  013142  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 34377  013146  6A07               	clrf	i2___xxtofl@val+2,c
 34378  013148  6A08               	clrf	i2___xxtofl@val+3,c
 34379  01314A  0E00               	movlw	0
 34380  01314C  ECFC  F0B6         	call	i2___xxtofl
 34381  013150  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 34382  013154  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 34383  013158  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 34384  01315C  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 34385  013160  EC27  F0A4         	call	i2___flmul	;wreg free
 34386  013164  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4173
 34387  013168  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4173+1
 34388  01316C  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4173+2
 34389  013170  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4173+3
 34390                           
 34391                           ;main.c: 301: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 34392  013174  C0D6  F030         	movff	_ADCPostProcessingCallback$4173,i2___flmul@b
 34393  013178  C0D7  F031         	movff	_ADCPostProcessingCallback$4173+1,i2___flmul@b+1
 34394  01317C  C0D8  F032         	movff	_ADCPostProcessingCallback$4173+2,i2___flmul@b+2
 34395  013180  C0D9  F033         	movff	_ADCPostProcessingCallback$4173+3,i2___flmul@b+3
 34396  013184  0E35               	movlw	53
 34397  013186  6E34               	movwf	i2___flmul@a,c
 34398  013188  0E5E               	movlw	94
 34399  01318A  6E35               	movwf	i2___flmul@a+1,c
 34400  01318C  0EF2               	movlw	242
 34401  01318E  6E36               	movwf	i2___flmul@a+2,c
 34402  013190  0E3F               	movlw	63
 34403  013192  6E37               	movwf	i2___flmul@a+3,c
 34404  013194  EC27  F0A4         	call	i2___flmul	;wreg free
 34405  013198  C030  F1C7         	movff	?i2___flmul,_Imeas	;volatile
 34406  01319C  C031  F1C8         	movff	?i2___flmul+1,_Imeas+1	;volatile
 34407  0131A0  C032  F1C9         	movff	?i2___flmul+2,_Imeas+2	;volatile
 34408  0131A4  C033  F1CA         	movff	?i2___flmul+3,_Imeas+3	;volatile
 34409                           
 34410                           ;main.c: 305: if (LATGbits.LATG0 != 1) {
 34411  0131A8  B07F               	btfsc	3967,0,c	;volatile
 34412  0131AA  D128               	goto	i2l1013
 34413                           
 34414                           ;main.c: 310: if (load_enable) {
 34415  0131AC  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 34416  0131AE  D0CD               	goto	i2l1014
 34417                           
 34418                           ;main.c: 313: if (dimming_period < 0x7FEE) {
 34419  0131B0  0EEE               	movlw	238
 34420  0131B2  0100               	movlb	0	; () banked
 34421  0131B4  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 34422  0131B6  0E7F               	movlw	127
 34423  0131B8  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 34424  0131BA  B0D8               	btfsc	status,0,c
 34425  0131BC  D052               	goto	i2l1015
 34426                           
 34427                           ; BSR set to: 0
 34428                           ;main.c: 315: Ipk = Imeas;
 34429  0131BE  C1C7  F0F6         	movff	_Imeas,_Ipk	;volatile
 34430  0131C2  C1C8  F0F7         	movff	_Imeas+1,_Ipk+1	;volatile
 34431  0131C6  C1C9  F0F8         	movff	_Imeas+2,_Ipk+2	;volatile
 34432  0131CA  C1CA  F0F9         	movff	_Imeas+3,_Ipk+3	;volatile
 34433                           
 34434                           ; BSR set to: 0
 34435                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 34436  0131CE  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 34437  0131D2  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 34438  0131D6  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 34439  0131DA  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 34440  0131DE  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 34441  0131E2  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 34442  0131E6  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 34443  0131EA  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 34444  0131EE  EC12  F0B4         	call	_peakToRMS	;wreg free
 34445  0131F2  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4174
 34446  0131F6  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4174+1
 34447  0131FA  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4174+2
 34448  0131FE  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4174+3
 34449                           
 34450                           ;main.c: 316: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 34451  013202  C2EB  F05A         	movff	_Irms_offset,i2___fladd@a
 34452  013206  C2EC  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 34453  01320A  C2ED  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 34454  01320E  C2EE  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 34455  013212  C0DA  F056         	movff	_ADCPostProcessingCallback$4174,i2___fladd@b
 34456  013216  C0DB  F057         	movff	_ADCPostProcessingCallback$4174+1,i2___fladd@b+1
 34457  01321A  C0DC  F058         	movff	_ADCPostProcessingCallback$4174+2,i2___fladd@b+2
 34458  01321E  C0DD  F059         	movff	_ADCPostProcessingCallback$4174+3,i2___fladd@b+3
 34459  013222  EC6E  F0A7         	call	i2___fladd	;wreg free
 34460  013226  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 34461  01322A  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 34462  01322E  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 34463  013232  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 34464  013236  ECB0  F0BD         	call	i2___fltol	;wreg free
 34465  01323A  C06C  F076         	movff	?i2___fltol,abs@a
 34466  01323E  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 34467  013242  ECC5  F0C7         	call	_abs	;wreg free
 34468  013246  0100               	movlb	0	; () banked
 34469  013248  C076  F005         	movff	?_abs,i2___xxtofl@val
 34470  01324C  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 34471  013250  0E00               	movlw	0
 34472  013252  BE06               	btfsc	i2___xxtofl@val+1,7,c
 34473  013254  0EFF               	movlw	-1
 34474  013256  6E07               	movwf	i2___xxtofl@val+2,c
 34475  013258  6E08               	movwf	i2___xxtofl@val+3,c
 34476  01325A  0E01               	movlw	1
 34477  01325C  ECFC  F0B6         	call	i2___xxtofl
 34478  013260  D063               	goto	L17
 34479  013262                     i2l1015:
 34480                           
 34481                           ;main.c: 321: else {
 34482                           ;main.c: 323: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 34483  013262  C1C7  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 34484  013266  C1C8  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 34485  01326A  C1C9  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 34486  01326E  C1CA  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 34487  013272  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 34488  013276  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 34489  01327A  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 34490  01327E  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 34491  013282  ECC0  F0C1         	call	_currentMeasuredToPeak	;wreg free
 34492  013286  C099  F0F6         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 34493  01328A  C09A  F0F7         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 34494  01328E  C09B  F0F8         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 34495  013292  C09C  F0F9         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 34496                           
 34497                           ;main.c: 324: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 34498  013296  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 34499  01329A  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 34500  01329E  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 34501  0132A2  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 34502  0132A6  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 34503  0132AA  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 34504  0132AE  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 34505  0132B2  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 34506  0132B6  EC12  F0B4         	call	_peakToRMS	;wreg free
 34507  0132BA  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4174
 34508  0132BE  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4174+1
 34509  0132C2  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4174+2
 34510  0132C6  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4174+3
 34511                           
 34512                           ;main.c: 324: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 34513  0132CA  C2EB  F05A         	movff	_Irms_offset,i2___fladd@a
 34514  0132CE  C2EC  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 34515  0132D2  C2ED  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 34516  0132D6  C2EE  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 34517  0132DA  C0DA  F056         	movff	_ADCPostProcessingCallback$4174,i2___fladd@b
 34518  0132DE  C0DB  F057         	movff	_ADCPostProcessingCallback$4174+1,i2___fladd@b+1
 34519  0132E2  C0DC  F058         	movff	_ADCPostProcessingCallback$4174+2,i2___fladd@b+2
 34520  0132E6  C0DD  F059         	movff	_ADCPostProcessingCallback$4174+3,i2___fladd@b+3
 34521  0132EA  EC6E  F0A7         	call	i2___fladd	;wreg free
 34522  0132EE  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 34523  0132F2  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 34524  0132F6  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 34525  0132FA  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 34526  0132FE  ECB0  F0BD         	call	i2___fltol	;wreg free
 34527  013302  C06C  F076         	movff	?i2___fltol,abs@a
 34528  013306  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 34529  01330A  ECC5  F0C7         	call	_abs	;wreg free
 34530  01330E  0100               	movlb	0	; () banked
 34531  013310  C076  F005         	movff	?_abs,i2___xxtofl@val
 34532  013314  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 34533  013318  0E00               	movlw	0
 34534  01331A  BE06               	btfsc	i2___xxtofl@val+1,7,c
 34535  01331C  0EFF               	movlw	-1
 34536  01331E  6E07               	movwf	i2___xxtofl@val+2,c
 34537  013320  6E08               	movwf	i2___xxtofl@val+3,c
 34538  013322  0E01               	movlw	1
 34539  013324  ECFC  F0B6         	call	i2___xxtofl
 34540  013328                     L17:
 34541  013328  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 34542  01332C  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 34543  013330  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 34544  013334  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 34545                           
 34546                           ;main.c: 326: }
 34547                           ;main.c: 328: Vpk = Vpk_const;
 34548  013338  C2EF  F220         	movff	_Vpk_const,_Vpk	;volatile
 34549  01333C  C2F0  F221         	movff	_Vpk_const+1,_Vpk+1	;volatile
 34550  013340  C2F1  F222         	movff	_Vpk_const+2,_Vpk+2	;volatile
 34551  013344  C2F2  F223         	movff	_Vpk_const+3,_Vpk+3	;volatile
 34552                           
 34553                           ;main.c: 330: }
 34554  013348  D02C               	goto	i2l1017
 34555  01334A                     i2l1014:
 34556                           
 34557                           ;main.c: 332: else {
 34558                           ;main.c: 334: Ipk = 0.0;
 34559  01334A  0E00               	movlw	0
 34560  01334C  0100               	movlb	0	; () banked
 34561  01334E  6FF6               	movwf	_Ipk& (0+255),b	;volatile
 34562  013350  0E00               	movlw	0
 34563  013352  6FF7               	movwf	(_Ipk+1)& (0+255),b	;volatile
 34564  013354  0E00               	movlw	0
 34565  013356  6FF8               	movwf	(_Ipk+2)& (0+255),b	;volatile
 34566  013358  0E00               	movlw	0
 34567  01335A  6FF9               	movwf	(_Ipk+3)& (0+255),b	;volatile
 34568                           
 34569                           ;main.c: 335: Vpk = 0.0;
 34570  01335C  0E00               	movlw	0
 34571  01335E  0102               	movlb	2	; () banked
 34572  013360  6F20               	movwf	_Vpk& (0+255),b	;volatile
 34573  013362  0E00               	movlw	0
 34574  013364  6F21               	movwf	(_Vpk+1)& (0+255),b	;volatile
 34575  013366  0E00               	movlw	0
 34576  013368  6F22               	movwf	(_Vpk+2)& (0+255),b	;volatile
 34577  01336A  0E00               	movlw	0
 34578  01336C  6F23               	movwf	(_Vpk+3)& (0+255),b	;volatile
 34579                           
 34580                           ; BSR set to: 2
 34581                           ;main.c: 336: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 34582  01336E  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 34583  013372  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 34584  013376  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 34585  01337A  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 34586  01337E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 34587  013382  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 34588  013386  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 34589  01338A  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 34590  01338E  EC12  F0B4         	call	_peakToRMS	;wreg free
 34591  013392  C0B1  F1C3         	movff	?_peakToRMS,_Irms	;volatile
 34592  013396  C0B2  F1C4         	movff	?_peakToRMS+1,_Irms+1	;volatile
 34593  01339A  C0B3  F1C5         	movff	?_peakToRMS+2,_Irms+2	;volatile
 34594  01339E  C0B4  F1C6         	movff	?_peakToRMS+3,_Irms+3	;volatile
 34595  0133A2                     i2l1017:
 34596                           
 34597                           ;main.c: 338: }
 34598                           ;main.c: 340: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 34599  0133A2  C220  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 34600  0133A6  C221  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 34601  0133AA  C222  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 34602  0133AE  C223  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 34603  0133B2  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 34604  0133B6  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 34605  0133BA  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 34606  0133BE  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 34607  0133C2  EC12  F0B4         	call	_peakToRMS	;wreg free
 34608  0133C6  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 34609  0133CA  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 34610  0133CE  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 34611  0133D2  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 34612                           
 34613                           ;main.c: 341: Avg_Power = Vrms * Irms;
 34614  0133D6  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 34615  0133DA  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 34616  0133DE  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 34617  0133E2  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 34618  0133E6  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 34619  0133EA  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 34620  0133EE  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 34621  0133F2  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 34622  0133F6  EC27  F0A4         	call	i2___flmul	;wreg free
 34623  0133FA  D087               	goto	L18
 34624  0133FC                     i2l1013:
 34625                           
 34626                           ;main.c: 346: else {
 34627                           ;main.c: 348: Ipk = Imeas;
 34628  0133FC  C1C7  F0F6         	movff	_Imeas,_Ipk	;volatile
 34629  013400  C1C8  F0F7         	movff	_Imeas+1,_Ipk+1	;volatile
 34630  013404  C1C9  F0F8         	movff	_Imeas+2,_Ipk+2	;volatile
 34631  013408  C1CA  F0F9         	movff	_Imeas+3,_Ipk+3	;volatile
 34632                           
 34633                           ;main.c: 349: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 34634  01340C  0E00               	movlw	0
 34635  01340E  0100               	movlb	0	; () banked
 34636  013410  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 34637  013412  0E00               	movlw	0
 34638  013414  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 34639  013416  0E00               	movlw	0
 34640  013418  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 34641  01341A  0E00               	movlw	0
 34642  01341C  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 34643  01341E  C0F6  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 34644  013422  C0F7  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 34645  013426  C0F8  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 34646  01342A  C0F9  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 34647  01342E  EC12  F0B4         	call	_peakToRMS	;wreg free
 34648  013432  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4174
 34649  013436  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4174+1
 34650  01343A  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4174+2
 34651  01343E  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4174+3
 34652                           
 34653                           ;main.c: 349: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 34654  013442  C2EB  F05A         	movff	_Irms_offset,i2___fladd@a
 34655  013446  C2EC  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 34656  01344A  C2ED  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 34657  01344E  C2EE  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 34658  013452  C0DA  F056         	movff	_ADCPostProcessingCallback$4174,i2___fladd@b
 34659  013456  C0DB  F057         	movff	_ADCPostProcessingCallback$4174+1,i2___fladd@b+1
 34660  01345A  C0DC  F058         	movff	_ADCPostProcessingCallback$4174+2,i2___fladd@b+2
 34661  01345E  C0DD  F059         	movff	_ADCPostProcessingCallback$4174+3,i2___fladd@b+3
 34662  013462  EC6E  F0A7         	call	i2___fladd	;wreg free
 34663  013466  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 34664  01346A  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 34665  01346E  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 34666  013472  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 34667  013476  ECB0  F0BD         	call	i2___fltol	;wreg free
 34668  01347A  C06C  F076         	movff	?i2___fltol,abs@a
 34669  01347E  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 34670  013482  ECC5  F0C7         	call	_abs	;wreg free
 34671  013486  0100               	movlb	0	; () banked
 34672  013488  C076  F005         	movff	?_abs,i2___xxtofl@val
 34673  01348C  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 34674  013490  0E00               	movlw	0
 34675  013492  BE06               	btfsc	i2___xxtofl@val+1,7,c
 34676  013494  0EFF               	movlw	-1
 34677  013496  6E07               	movwf	i2___xxtofl@val+2,c
 34678  013498  6E08               	movwf	i2___xxtofl@val+3,c
 34679  01349A  0E01               	movlw	1
 34680  01349C  ECFC  F0B6         	call	i2___xxtofl
 34681  0134A0  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 34682  0134A4  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 34683  0134A8  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 34684  0134AC  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 34685                           
 34686                           ;main.c: 350: Vrms = peakToRMS(Vpk_const, 0.0);
 34687  0134B0  C2EF  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 34688  0134B4  C2F0  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 34689  0134B8  C2F1  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 34690  0134BC  C2F2  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 34691  0134C0  0E00               	movlw	0
 34692  0134C2  0100               	movlb	0	; () banked
 34693  0134C4  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 34694  0134C6  0E00               	movlw	0
 34695  0134C8  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 34696  0134CA  0E00               	movlw	0
 34697  0134CC  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 34698  0134CE  0E00               	movlw	0
 34699  0134D0  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 34700  0134D2  EC12  F0B4         	call	_peakToRMS	;wreg free
 34701  0134D6  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 34702  0134DA  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 34703  0134DE  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 34704  0134E2  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 34705                           
 34706                           ;main.c: 351: Avg_Power = Vrms * Irms;
 34707  0134E6  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 34708  0134EA  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 34709  0134EE  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 34710  0134F2  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 34711  0134F6  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 34712  0134FA  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 34713  0134FE  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 34714  013502  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 34715  013506  EC27  F0A4         	call	i2___flmul	;wreg free
 34716  01350A                     L18:
 34717  01350A  C030  F1BB         	movff	?i2___flmul,_Avg_Power	;volatile
 34718  01350E  C031  F1BC         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 34719  013512  C032  F1BD         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 34720  013516  C033  F1BE         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 34721                           
 34722                           ;main.c: 353: }
 34723                           ;main.c: 355: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 34724  01351A  0E00               	movlw	0
 34725  01351C  6E34               	movwf	i2___flge@ff1,c
 34726  01351E  0E00               	movlw	0
 34727  013520  6E35               	movwf	i2___flge@ff1+1,c
 34728  013522  0EA0               	movlw	160
 34729  013524  6E36               	movwf	i2___flge@ff1+2,c
 34730  013526  0E40               	movlw	64
 34731  013528  6E37               	movwf	i2___flge@ff1+3,c
 34732  01352A  C1C3  F038         	movff	_Irms,i2___flge@ff2	;volatile
 34733  01352E  C1C4  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 34734  013532  C1C5  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 34735  013536  C1C6  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 34736  01353A  EC23  F0BB         	call	i2___flge	;wreg free
 34737  01353E  A0D8               	btfss	status,0,c
 34738  013540  D005               	goto	i2u1781_40
 34739  013542  EC5D  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 34740  013546  0900               	iorlw	0
 34741  013548  B4D8               	btfsc	status,2,c
 34742  01354A  D007               	goto	i2l1019
 34743  01354C                     i2u1781_40:
 34744                           
 34745                           ;main.c: 357: LATFbits.LATF3 = 1;
 34746  01354C  867E               	bsf	3966,3,c	;volatile
 34747                           
 34748                           ;main.c: 358: adc_error_flag = 1;
 34749  01354E  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 34750                           
 34751                           ;main.c: 360: PIE5bits.TMR7IE = 0;
 34752  013550  010E               	movlb	14	; () banked
 34753  013552  9D2E               	bcf	46,6,b	;volatile
 34754                           
 34755                           ; BSR set to: 14
 34756                           ;main.c: 361: TMR7_StopTimer();
 34757  013554  EC7D  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 34758                           
 34759                           ;main.c: 362: return;
 34760  013558  0012               	return	
 34761  01355A                     i2l1019:
 34762                           
 34763                           ;main.c: 364: }
 34764                           ;main.c: 366: next_channel = POS12_ADC;
 34765  01355A  0E04               	movlw	4
 34766  01355C  0101               	movlb	1	; () banked
 34767  01355E  6FE8               	movwf	_next_channel& (0+255),b
 34768                           
 34769                           ;main.c: 368: break;
 34770  013560  0012               	return	
 34771  013562                     
 34772                           ;main.c: 373: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 34773                           
 34774                           ; BSR set to: 1
 34775  013562  0E00               	movlw	0
 34776  013564  6E17               	movwf	i2___fldiv@a,c
 34777  013566  0EC0               	movlw	192
 34778  013568  6E18               	movwf	i2___fldiv@a+1,c
 34779  01356A  0E7F               	movlw	127
 34780  01356C  6E19               	movwf	i2___fldiv@a+2,c
 34781  01356E  0E44               	movlw	68
 34782  013570  6E1A               	movwf	i2___fldiv@a+3,c
 34783  013572  C1D3  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 34784  013576  C1D4  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 34785  01357A  C1D5  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 34786  01357E  C1D6  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 34787  013582  EC2E  F0B0         	call	i2___fldiv	;wreg free
 34788  013586  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 34789  01358A  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 34790  01358E  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 34791  013592  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 34792  013596  ECDF  F0C8         	call	_ADCC_GetFilterValue	;wreg free
 34793  01359A  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 34794  01359E  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 34795  0135A2  6A07               	clrf	i2___xxtofl@val+2,c
 34796  0135A4  6A08               	clrf	i2___xxtofl@val+3,c
 34797  0135A6  0E00               	movlw	0
 34798  0135A8  ECFC  F0B6         	call	i2___xxtofl
 34799  0135AC  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 34800  0135B0  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 34801  0135B4  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 34802  0135B8  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 34803  0135BC  EC27  F0A4         	call	i2___flmul	;wreg free
 34804  0135C0  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4173
 34805  0135C4  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4173+1
 34806  0135C8  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4173+2
 34807  0135CC  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4173+3
 34808                           
 34809                           ;main.c: 373: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 34810  0135D0  C0D6  F030         	movff	_ADCPostProcessingCallback$4173,i2___flmul@b
 34811  0135D4  C0D7  F031         	movff	_ADCPostProcessingCallback$4173+1,i2___flmul@b+1
 34812  0135D8  C0D8  F032         	movff	_ADCPostProcessingCallback$4173+2,i2___flmul@b+2
 34813  0135DC  C0D9  F033         	movff	_ADCPostProcessingCallback$4173+3,i2___flmul@b+3
 34814  0135E0  0E3E               	movlw	62
 34815  0135E2  6E34               	movwf	i2___flmul@a,c
 34816  0135E4  0EF8               	movlw	248
 34817  0135E6  6E35               	movwf	i2___flmul@a+1,c
 34818  0135E8  0E80               	movlw	128
 34819  0135EA  6E36               	movwf	i2___flmul@a+2,c
 34820  0135EC  0E40               	movlw	64
 34821  0135EE  6E37               	movwf	i2___flmul@a+3,c
 34822  0135F0  EC27  F0A4         	call	i2___flmul	;wreg free
 34823  0135F4  C030  F1CF         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 34824  0135F8  C031  F1D0         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 34825  0135FC  C032  F1D1         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 34826  013600  C033  F1D2         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 34827                           
 34828                           ;main.c: 375: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 34829  013604  0E9A               	movlw	154
 34830  013606  6E34               	movwf	i2___flge@ff1,c
 34831  013608  0E99               	movlw	153
 34832  01360A  6E35               	movwf	i2___flge@ff1+1,c
 34833  01360C  0E59               	movlw	89
 34834  01360E  6E36               	movwf	i2___flge@ff1+2,c
 34835  013610  0E41               	movlw	65
 34836  013612  6E37               	movwf	i2___flge@ff1+3,c
 34837  013614  C1CF  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 34838  013618  C1D0  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 34839  01361C  C1D1  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 34840  013620  C1D2  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 34841  013624  EC23  F0BB         	call	i2___flge	;wreg free
 34842  013628  A0D8               	btfss	status,0,c
 34843  01362A  D005               	goto	i2u1783_40
 34844  01362C  EC5D  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 34845  013630  0900               	iorlw	0
 34846  013632  B4D8               	btfsc	status,2,c
 34847  013634  D007               	goto	i2l1023
 34848  013636                     i2u1783_40:
 34849                           
 34850                           ;main.c: 377: LATFbits.LATF3 = 1;
 34851  013636  867E               	bsf	3966,3,c	;volatile
 34852                           
 34853                           ;main.c: 378: adc_error_flag = 1;
 34854  013638  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 34855                           
 34856                           ;main.c: 380: PIE5bits.TMR7IE = 0;
 34857  01363A  010E               	movlb	14	; () banked
 34858  01363C  9D2E               	bcf	46,6,b	;volatile
 34859                           
 34860                           ; BSR set to: 14
 34861                           ;main.c: 381: TMR7_StopTimer();
 34862  01363E  EC7D  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 34863                           
 34864                           ;main.c: 382: return;
 34865  013642  0012               	return	
 34866  013644                     i2l1023:
 34867                           
 34868                           ;main.c: 384: }
 34869                           ;main.c: 386: next_channel = channel_Temp;
 34870  013644  0E3D               	movlw	61
 34871  013646  0101               	movlb	1	; () banked
 34872  013648  6FE8               	movwf	_next_channel& (0+255),b
 34873                           
 34874                           ;main.c: 388: break;
 34875  01364A  0012               	return	
 34876  01364C                     
 34877                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 34878                           
 34879                           ; BSR set to: 1
 34880  01364C  0E00               	movlw	0
 34881  01364E  6E17               	movwf	i2___fldiv@a,c
 34882  013650  0E00               	movlw	0
 34883  013652  6E18               	movwf	i2___fldiv@a+1,c
 34884  013654  0E00               	movlw	0
 34885  013656  6E19               	movwf	i2___fldiv@a+2,c
 34886  013658  0E40               	movlw	64
 34887  01365A  6E1A               	movwf	i2___fldiv@a+3,c
 34888  01365C  C1D3  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 34889  013660  C1D4  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 34890  013664  C1D5  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 34891  013668  C1D6  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 34892  01366C  EC2E  F0B0         	call	i2___fldiv	;wreg free
 34893  013670  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 34894  013674  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 34895  013678  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 34896  01367C  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 34897  013680  0E00               	movlw	0
 34898  013682  6E5A               	movwf	i2___fladd@a,c
 34899  013684  0E00               	movlw	0
 34900  013686  6E5B               	movwf	i2___fladd@a+1,c
 34901  013688  0E80               	movlw	128
 34902  01368A  6E5C               	movwf	i2___fladd@a+2,c
 34903  01368C  0E3F               	movlw	63
 34904  01368E  6E5D               	movwf	i2___fladd@a+3,c
 34905  013690  0E00               	movlw	0
 34906  013692  6E17               	movwf	i2___fldiv@a,c
 34907  013694  0EC0               	movlw	192
 34908  013696  6E18               	movwf	i2___fldiv@a+1,c
 34909  013698  0E7F               	movlw	127
 34910  01369A  6E19               	movwf	i2___fldiv@a+2,c
 34911  01369C  0E44               	movlw	68
 34912  01369E  6E1A               	movwf	i2___fldiv@a+3,c
 34913  0136A0  ECDF  F0C8         	call	_ADCC_GetFilterValue	;wreg free
 34914  0136A4  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 34915  0136A8  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 34916  0136AC  6A07               	clrf	i2___xxtofl@val+2,c
 34917  0136AE  6A08               	clrf	i2___xxtofl@val+3,c
 34918  0136B0  0E00               	movlw	0
 34919  0136B2  ECFC  F0B6         	call	i2___xxtofl
 34920  0136B6  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 34921  0136BA  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 34922  0136BE  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 34923  0136C2  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 34924  0136C6  EC2E  F0B0         	call	i2___fldiv	;wreg free
 34925  0136CA  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 34926  0136CE  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 34927  0136D2  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 34928  0136D6  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 34929  0136DA  ECAE  F0C7         	call	i2___flneg	;wreg free
 34930  0136DE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 34931  0136E2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 34932  0136E6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 34933  0136EA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 34934  0136EE  EC6E  F0A7         	call	i2___fladd	;wreg free
 34935  0136F2  C056  F030         	movff	?i2___fladd,i2___flmul@b
 34936  0136F6  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 34937  0136FA  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 34938  0136FE  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 34939  013702  EC27  F0A4         	call	i2___flmul	;wreg free
 34940  013706  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4175
 34941  01370A  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4175+1
 34942  01370E  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4175+2
 34943  013712  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4175+3
 34944                           
 34945                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 34946  013716  0EDA               	movlw	218
 34947  013718  6E17               	movwf	i2___fldiv@a,c
 34948  01371A  0E03               	movlw	3
 34949  01371C  6E18               	movwf	i2___fldiv@a+1,c
 34950  01371E  0EAD               	movlw	173
 34951  013720  6E19               	movwf	i2___fldiv@a+2,c
 34952  013722  0E3A               	movlw	58
 34953  013724  6E1A               	movwf	i2___fldiv@a+3,c
 34954  013726  0E39               	movlw	57
 34955  013728  6E5A               	movwf	i2___fladd@a,c
 34956  01372A  0EB4               	movlw	180
 34957  01372C  6E5B               	movwf	i2___fladd@a+1,c
 34958  01372E  0E28               	movlw	40
 34959  013730  6E5C               	movwf	i2___fladd@a+2,c
 34960  013732  0E3F               	movlw	63
 34961  013734  6E5D               	movwf	i2___fladd@a+3,c
 34962  013736  C0C9  F02C         	movff	_ADCPostProcessingCallback$4175,i2___flneg@f1
 34963  01373A  C0CA  F02D         	movff	_ADCPostProcessingCallback$4175+1,i2___flneg@f1+1
 34964  01373E  C0CB  F02E         	movff	_ADCPostProcessingCallback$4175+2,i2___flneg@f1+2
 34965  013742  C0CC  F02F         	movff	_ADCPostProcessingCallback$4175+3,i2___flneg@f1+3
 34966  013746  ECAE  F0C7         	call	i2___flneg	;wreg free
 34967  01374A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 34968  01374E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 34969  013752  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 34970  013756  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 34971  01375A  EC6E  F0A7         	call	i2___fladd	;wreg free
 34972  01375E  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 34973  013762  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 34974  013766  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 34975  01376A  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 34976  01376E  EC2E  F0B0         	call	i2___fldiv	;wreg free
 34977  013772  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4176
 34978  013776  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4176+1
 34979  01377A  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4176+2
 34980  01377E  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4176+3
 34981                           
 34982                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 34983  013782  C2F3  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 34984  013786  C2F4  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 34985  01378A  C2F5  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 34986  01378E  C2F6  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 34987  013792  C0CD  F056         	movff	_ADCPostProcessingCallback$4176,i2___fladd@b
 34988  013796  C0CE  F057         	movff	_ADCPostProcessingCallback$4176+1,i2___fladd@b+1
 34989  01379A  C0CF  F058         	movff	_ADCPostProcessingCallback$4176+2,i2___fladd@b+2
 34990  01379E  C0D0  F059         	movff	_ADCPostProcessingCallback$4176+3,i2___fladd@b+3
 34991  0137A2  EC6E  F0A7         	call	i2___fladd	;wreg free
 34992  0137A6  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4177
 34993  0137AA  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4177+1
 34994  0137AE  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4177+2
 34995  0137B2  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4177+3
 34996                           
 34997                           ;main.c: 393: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 34998  0137B6  C0D1  F056         	movff	_ADCPostProcessingCallback$4177,i2___fladd@b
 34999  0137BA  C0D2  F057         	movff	_ADCPostProcessingCallback$4177+1,i2___fladd@b+1
 35000  0137BE  C0D3  F058         	movff	_ADCPostProcessingCallback$4177+2,i2___fladd@b+2
 35001  0137C2  C0D4  F059         	movff	_ADCPostProcessingCallback$4177+3,i2___fladd@b+3
 35002  0137C6  0E00               	movlw	0
 35003  0137C8  6E5A               	movwf	i2___fladd@a,c
 35004  0137CA  0E00               	movlw	0
 35005  0137CC  6E5B               	movwf	i2___fladd@a+1,c
 35006  0137CE  0E20               	movlw	32
 35007  0137D0  6E5C               	movwf	i2___fladd@a+2,c
 35008  0137D2  0EC2               	movlw	194
 35009  0137D4  6E5D               	movwf	i2___fladd@a+3,c
 35010  0137D6  EC6E  F0A7         	call	i2___fladd	;wreg free
 35011  0137DA  C056  F1CB         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 35012  0137DE  C057  F1CC         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 35013  0137E2  C058  F1CD         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 35014  0137E6  C059  F1CE         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 35015                           
 35016                           ;main.c: 395: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 35017  0137EA  0E00               	movlw	0
 35018  0137EC  6E34               	movwf	i2___flge@ff1,c
 35019  0137EE  0E00               	movlw	0
 35020  0137F0  6E35               	movwf	i2___flge@ff1+1,c
 35021  0137F2  0E20               	movlw	32
 35022  0137F4  6E36               	movwf	i2___flge@ff1+2,c
 35023  0137F6  0E42               	movlw	66
 35024  0137F8  6E37               	movwf	i2___flge@ff1+3,c
 35025  0137FA  C1CB  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 35026  0137FE  C1CC  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 35027  013802  C1CD  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 35028  013806  C1CE  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 35029  01380A  EC23  F0BB         	call	i2___flge	;wreg free
 35030  01380E  A0D8               	btfss	status,0,c
 35031  013810  D005               	goto	i2u1785_40
 35032  013812  EC5D  F0C9         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 35033  013816  0900               	iorlw	0
 35034  013818  B4D8               	btfsc	status,2,c
 35035  01381A  D007               	goto	i2l1027
 35036  01381C                     i2u1785_40:
 35037                           
 35038                           ;main.c: 397: LATFbits.LATF3 = 1;
 35039  01381C  867E               	bsf	3966,3,c	;volatile
 35040                           
 35041                           ;main.c: 398: adc_error_flag = 1;
 35042  01381E  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 35043                           
 35044                           ;main.c: 400: PIE5bits.TMR7IE = 0;
 35045  013820  010E               	movlb	14	; () banked
 35046  013822  9D2E               	bcf	46,6,b	;volatile
 35047                           
 35048                           ; BSR set to: 14
 35049                           ;main.c: 401: TMR7_StopTimer();
 35050  013824  EC7D  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 35051                           
 35052                           ;main.c: 402: return;
 35053  013828  0012               	return	
 35054  01382A                     i2l1027:
 35055                           
 35056                           ;main.c: 404: }
 35057                           ;main.c: 406: next_channel = channel_VSS;
 35058  01382A  0E3C               	movlw	60
 35059  01382C  0101               	movlb	1	; () banked
 35060  01382E  6FE8               	movwf	_next_channel& (0+255),b
 35061                           
 35062                           ;main.c: 408: break;
 35063  013830  0012               	return	
 35064  013832                     i2l1030:
 35065                           
 35066                           ; BSR set to: 0
 35067                           ;main.c: 413: LATFbits.LATF3 = 1;
 35068  013832  867E               	bsf	3966,3,c	;volatile
 35069                           
 35070                           ;main.c: 414: adc_error_flag = 1;
 35071  013834  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 35072                           
 35073                           ; BSR set to: 0
 35074                           ;main.c: 416: PIE5bits.TMR7IE == 0;
 35075  013836  010E               	movlb	14	; () banked
 35076  013838  512E               	movf	46,w,b	;volatile
 35077                           
 35078                           ; BSR set to: 14
 35079                           ;main.c: 417: TMR7_StopTimer();
 35080  01383A  EC7D  F0C9         	call	i2_TMR7_StopTimer	;wreg free
 35081                           
 35082                           ;main.c: 420: }
 35083                           
 35084                           ;main.c: 418: break;
 35085  01383E  0012               	return	
 35086  013840                     i2l997:
 35087  013840  0100               	movlb	0	; () banked
 35088  013842  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 35089                           
 35090                           ; Switch size 1, requested type "space"
 35091                           ; Number of cases is 6, Range of values is 0 to 63
 35092                           ; switch strategies available:
 35093                           ; Name         Instructions Cycles
 35094                           ; simple_byte           19    10 (average)
 35095                           ;	Chosen strategy is simple_byte
 35096  013844  0A00               	xorlw	0	; case 0
 35097  013846  B4D8               	btfsc	status,2,c
 35098  013848  D45E               	goto	i2l1012
 35099  01384A  0A04               	xorlw	4	; case 4
 35100  01384C  B4D8               	btfsc	status,2,c
 35101  01384E  D689               	goto	i2l1022
 35102  013850  0A26               	xorlw	38	; case 34
 35103  013852  B4D8               	btfsc	status,2,c
 35104  013854  EF20  F098         	goto	i2l1008
 35105  013858  0A1E               	xorlw	30	; case 60
 35106  01385A  B4D8               	btfsc	status,2,c
 35107  01385C  EF4E  F097         	goto	i2l998
 35108  013860  0A01               	xorlw	1	; case 61
 35109  013862  B4D8               	btfsc	status,2,c
 35110  013864  D6F3               	goto	i2l1026
 35111  013866  0A02               	xorlw	2	; case 63
 35112  013868  B4D8               	btfsc	status,2,c
 35113  01386A  EF97  F097         	goto	i2l1004
 35114  01386E  D7E1               	goto	i2l1030
 35115  013870                     __end_of_ADCPostProcessingCallback:
 35116                           	opt stack 0
 35117                           tosu	equ	0xFFF
 35118                           tosh	equ	0xFFE
 35119                           tosl	equ	0xFFD
 35120                           pclatu	equ	0xFFB
 35121                           pclath	equ	0xFFA
 35122                           tblptru	equ	0xFF8
 35123                           tblptrh	equ	0xFF7
 35124                           tblptrl	equ	0xFF6
 35125                           tablat	equ	0xFF5
 35126                           prodh	equ	0xFF4
 35127                           prodl	equ	0xFF3
 35128                           intcon	equ	0xFF2
 35129                           indf0	equ	0xFEF
 35130                           postinc0	equ	0xFEE
 35131                           fsr0h	equ	0xFEA
 35132                           fsr0l	equ	0xFE9
 35133                           wreg	equ	0xFE8
 35134                           indf1	equ	0xFE7
 35135                           postdec1	equ	0xFE5
 35136                           plusw1	equ	0xFE3
 35137                           fsr1h	equ	0xFE2
 35138                           fsr1l	equ	0xFE1
 35139                           bsr	equ	0xFE0
 35140                           indf2	equ	0xFDF
 35141                           postinc2	equ	0xFDE
 35142                           postdec2	equ	0xFDD
 35143                           plusw2	equ	0xFDB
 35144                           fsr2h	equ	0xFDA
 35145                           fsr2l	equ	0xFD9
 35146                           status	equ	0xFD8
 35147                           
 35148 ;; *************** function i2_TMR7_StopTimer *****************
 35149 ;; Defined at:
 35150 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 35151 ;; Parameters:    Size  Location     Type
 35152 ;;		None
 35153 ;; Auto vars:     Size  Location     Type
 35154 ;;		None
 35155 ;; Return value:  Size  Location     Type
 35156 ;;                  1    wreg      void 
 35157 ;; Registers used:
 35158 ;;		None
 35159 ;; Tracked objects:
 35160 ;;		On entry : 0/0
 35161 ;;		On exit  : 0/0
 35162 ;;		Unchanged: 0/0
 35163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35168 ;;Total ram usage:        0 bytes
 35169 ;; Hardware stack levels used:    1
 35170 ;; This function calls:
 35171 ;;		Nothing
 35172 ;; This function is called by:
 35173 ;;		_ADCPostProcessingCallback
 35174 ;; This function uses a non-reentrant model
 35175 ;;
 35176                           
 35177                           	psect	text107
 35178  0192FA                     __ptext107:
 35179                           	opt stack 0
 35180  0192FA                     i2_TMR7_StopTimer:
 35181                           	opt stack 16
 35182                           
 35183                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 35184                           
 35185                           ;incstack = 0
 35186  0192FA  010F               	movlb	15	; () banked
 35187  0192FC  9130               	bcf	48,0,b	;volatile
 35188                           
 35189                           ; BSR set to: 15
 35190  0192FE  0012               	return		;funcret
 35191  019300                     __end_ofi2_TMR7_StopTimer:
 35192                           	opt stack 0
 35193                           tosu	equ	0xFFF
 35194                           tosh	equ	0xFFE
 35195                           tosl	equ	0xFFD
 35196                           pclatu	equ	0xFFB
 35197                           pclath	equ	0xFFA
 35198                           tblptru	equ	0xFF8
 35199                           tblptrh	equ	0xFF7
 35200                           tblptrl	equ	0xFF6
 35201                           tablat	equ	0xFF5
 35202                           prodh	equ	0xFF4
 35203                           prodl	equ	0xFF3
 35204                           intcon	equ	0xFF2
 35205                           indf0	equ	0xFEF
 35206                           postinc0	equ	0xFEE
 35207                           fsr0h	equ	0xFEA
 35208                           fsr0l	equ	0xFE9
 35209                           wreg	equ	0xFE8
 35210                           indf1	equ	0xFE7
 35211                           postdec1	equ	0xFE5
 35212                           plusw1	equ	0xFE3
 35213                           fsr1h	equ	0xFE2
 35214                           fsr1l	equ	0xFE1
 35215                           bsr	equ	0xFE0
 35216                           indf2	equ	0xFDF
 35217                           postinc2	equ	0xFDE
 35218                           postdec2	equ	0xFDD
 35219                           plusw2	equ	0xFDB
 35220                           fsr2h	equ	0xFDA
 35221                           fsr2l	equ	0xFD9
 35222                           status	equ	0xFD8
 35223                           
 35224 ;; *************** function _peakToRMS *****************
 35225 ;; Defined at:
 35226 ;;		line 122 in file "main.c"
 35227 ;; Parameters:    Size  Location     Type
 35228 ;;  Peak            4   81[BANK0 ] void 
 35229 ;;  Angle           4   85[BANK0 ] void 
 35230 ;; Auto vars:     Size  Location     Type
 35231 ;;  RMS             4  101[BANK0 ] void 
 35232 ;; Return value:  Size  Location     Type
 35233 ;;                  4   81[BANK0 ] void 
 35234 ;; Registers used:
 35235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35236 ;; Tracked objects:
 35237 ;;		On entry : 0/0
 35238 ;;		On exit  : 0/0
 35239 ;;		Unchanged: 0/0
 35240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35241 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35242 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35244 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35245 ;;Total ram usage:       24 bytes
 35246 ;; Hardware stack levels used:    1
 35247 ;; Hardware stack levels required when called:    5
 35248 ;; This function calls:
 35249 ;;		_acos
 35250 ;;		_sin
 35251 ;;		_sqrt
 35252 ;;		i2___fladd
 35253 ;;		i2___fldiv
 35254 ;;		i2___flmul
 35255 ;;		i2___flneg
 35256 ;; This function is called by:
 35257 ;;		_ADCPostProcessingCallback
 35258 ;; This function uses a non-reentrant model
 35259 ;;
 35260                           
 35261                           	psect	text108
 35262  016824                     __ptext108:
 35263                           	opt stack 0
 35264  016824                     _peakToRMS:
 35265                           	opt stack 11
 35266                           
 35267                           ;main.c: 125: double RMS = 0.0;
 35268                           
 35269                           ; BSR set to: 15
 35270                           ;incstack = 0
 35271  016824  0E00               	movlw	0
 35272  016826  0100               	movlb	0	; () banked
 35273  016828  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 35274  01682A  0E00               	movlw	0
 35275  01682C  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 35276  01682E  0E00               	movlw	0
 35277  016830  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 35278  016832  0E00               	movlw	0
 35279  016834  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 35280                           
 35281                           ; BSR set to: 0
 35282                           ;main.c: 128: RMS = 2.0 * acos(-1.0);
 35283  016836  0E00               	movlw	0
 35284  016838  6FA9               	movwf	acos@x& (0+255),b
 35285  01683A  0E00               	movlw	0
 35286  01683C  6FAA               	movwf	(acos@x+1)& (0+255),b
 35287  01683E  0E80               	movlw	128
 35288  016840  6FAB               	movwf	(acos@x+2)& (0+255),b
 35289  016842  0EBF               	movlw	191
 35290  016844  6FAC               	movwf	(acos@x+3)& (0+255),b
 35291  016846  ECAC  F0C2         	call	_acos	;wreg free
 35292  01684A  C0A9  F0C1         	movff	?_acos,_peakToRMS$4170
 35293  01684E  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4170+1
 35294  016852  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4170+2
 35295  016856  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4170+3
 35296                           
 35297                           ;main.c: 128: RMS = 2.0 * acos(-1.0);
 35298  01685A  C0C1  F030         	movff	_peakToRMS$4170,i2___flmul@b
 35299  01685E  C0C2  F031         	movff	_peakToRMS$4170+1,i2___flmul@b+1
 35300  016862  C0C3  F032         	movff	_peakToRMS$4170+2,i2___flmul@b+2
 35301  016866  C0C4  F033         	movff	_peakToRMS$4170+3,i2___flmul@b+3
 35302  01686A  0E00               	movlw	0
 35303  01686C  6E34               	movwf	i2___flmul@a,c
 35304  01686E  0E00               	movlw	0
 35305  016870  6E35               	movwf	i2___flmul@a+1,c
 35306  016872  0E00               	movlw	0
 35307  016874  6E36               	movwf	i2___flmul@a+2,c
 35308  016876  0E40               	movlw	64
 35309  016878  6E37               	movwf	i2___flmul@a+3,c
 35310  01687A  EC27  F0A4         	call	i2___flmul	;wreg free
 35311  01687E  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 35312  016882  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 35313  016886  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 35314  01688A  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 35315                           
 35316                           ;main.c: 129: RMS = RMS - (2.0 * Angle);
 35317  01688E  0E00               	movlw	0
 35318  016890  6E34               	movwf	i2___flmul@a,c
 35319  016892  0E00               	movlw	0
 35320  016894  6E35               	movwf	i2___flmul@a+1,c
 35321  016896  0E00               	movlw	0
 35322  016898  6E36               	movwf	i2___flmul@a+2,c
 35323  01689A  0E40               	movlw	64
 35324  01689C  6E37               	movwf	i2___flmul@a+3,c
 35325  01689E  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 35326  0168A2  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 35327  0168A6  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 35328  0168AA  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 35329  0168AE  EC27  F0A4         	call	i2___flmul	;wreg free
 35330  0168B2  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 35331  0168B6  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 35332  0168BA  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 35333  0168BE  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 35334  0168C2  ECAE  F0C7         	call	i2___flneg	;wreg free
 35335  0168C6  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 35336  0168CA  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 35337  0168CE  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 35338  0168D2  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 35339  0168D6  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 35340  0168DA  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 35341  0168DE  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 35342  0168E2  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 35343  0168E6  EC6E  F0A7         	call	i2___fladd	;wreg free
 35344  0168EA  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 35345  0168EE  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 35346  0168F2  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 35347  0168F6  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 35348                           
 35349                           ;main.c: 130: RMS = RMS + sin(2.0 * Angle);
 35350  0168FA  0E00               	movlw	0
 35351  0168FC  6E34               	movwf	i2___flmul@a,c
 35352  0168FE  0E00               	movlw	0
 35353  016900  6E35               	movwf	i2___flmul@a+1,c
 35354  016902  0E00               	movlw	0
 35355  016904  6E36               	movwf	i2___flmul@a+2,c
 35356  016906  0E40               	movlw	64
 35357  016908  6E37               	movwf	i2___flmul@a+3,c
 35358  01690A  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 35359  01690E  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 35360  016912  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 35361  016916  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 35362  01691A  EC27  F0A4         	call	i2___flmul	;wreg free
 35363  01691E  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4171
 35364  016922  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4171+1
 35365  016926  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4171+2
 35366  01692A  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4171+3
 35367                           
 35368                           ;main.c: 130: RMS = RMS + sin(2.0 * Angle);
 35369  01692E  C0B9  F088         	movff	_peakToRMS$4171,sin@f
 35370  016932  C0BA  F089         	movff	_peakToRMS$4171+1,sin@f+1
 35371  016936  C0BB  F08A         	movff	_peakToRMS$4171+2,sin@f+2
 35372  01693A  C0BC  F08B         	movff	_peakToRMS$4171+3,sin@f+3
 35373  01693E  EC8F  F0AA         	call	_sin	;wreg free
 35374  016942  C088  F0BD         	movff	?_sin,_peakToRMS$4172
 35375  016946  C089  F0BE         	movff	?_sin+1,_peakToRMS$4172+1
 35376  01694A  C08A  F0BF         	movff	?_sin+2,_peakToRMS$4172+2
 35377  01694E  C08B  F0C0         	movff	?_sin+3,_peakToRMS$4172+3
 35378                           
 35379                           ;main.c: 130: RMS = RMS + sin(2.0 * Angle);
 35380  016952  C0BD  F056         	movff	_peakToRMS$4172,i2___fladd@b
 35381  016956  C0BE  F057         	movff	_peakToRMS$4172+1,i2___fladd@b+1
 35382  01695A  C0BF  F058         	movff	_peakToRMS$4172+2,i2___fladd@b+2
 35383  01695E  C0C0  F059         	movff	_peakToRMS$4172+3,i2___fladd@b+3
 35384  016962  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 35385  016966  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 35386  01696A  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 35387  01696E  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 35388  016972  EC6E  F0A7         	call	i2___fladd	;wreg free
 35389  016976  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 35390  01697A  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 35391  01697E  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 35392  016982  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 35393                           
 35394                           ;main.c: 131: RMS = RMS / (4.0 * acos(-1.0));
 35395  016986  0E00               	movlw	0
 35396  016988  0100               	movlb	0	; () banked
 35397  01698A  6FA9               	movwf	acos@x& (0+255),b
 35398  01698C  0E00               	movlw	0
 35399  01698E  6FAA               	movwf	(acos@x+1)& (0+255),b
 35400  016990  0E80               	movlw	128
 35401  016992  6FAB               	movwf	(acos@x+2)& (0+255),b
 35402  016994  0EBF               	movlw	191
 35403  016996  6FAC               	movwf	(acos@x+3)& (0+255),b
 35404  016998  ECAC  F0C2         	call	_acos	;wreg free
 35405  01699C  C0A9  F0C1         	movff	?_acos,_peakToRMS$4170
 35406  0169A0  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4170+1
 35407  0169A4  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4170+2
 35408  0169A8  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4170+3
 35409                           
 35410                           ;main.c: 131: RMS = RMS / (4.0 * acos(-1.0));
 35411  0169AC  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 35412  0169B0  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 35413  0169B4  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 35414  0169B8  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 35415  0169BC  0E00               	movlw	0
 35416  0169BE  6E34               	movwf	i2___flmul@a,c
 35417  0169C0  0E00               	movlw	0
 35418  0169C2  6E35               	movwf	i2___flmul@a+1,c
 35419  0169C4  0E80               	movlw	128
 35420  0169C6  6E36               	movwf	i2___flmul@a+2,c
 35421  0169C8  0E40               	movlw	64
 35422  0169CA  6E37               	movwf	i2___flmul@a+3,c
 35423  0169CC  C0C1  F030         	movff	_peakToRMS$4170,i2___flmul@b
 35424  0169D0  C0C2  F031         	movff	_peakToRMS$4170+1,i2___flmul@b+1
 35425  0169D4  C0C3  F032         	movff	_peakToRMS$4170+2,i2___flmul@b+2
 35426  0169D8  C0C4  F033         	movff	_peakToRMS$4170+3,i2___flmul@b+3
 35427  0169DC  EC27  F0A4         	call	i2___flmul	;wreg free
 35428  0169E0  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 35429  0169E4  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 35430  0169E8  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 35431  0169EC  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 35432  0169F0  EC2E  F0B0         	call	i2___fldiv	;wreg free
 35433  0169F4  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 35434  0169F8  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 35435  0169FC  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 35436  016A00  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 35437                           
 35438                           ;main.c: 132: RMS = sqrt(RMS);
 35439  016A04  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 35440  016A08  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 35441  016A0C  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 35442  016A10  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 35443  016A14  EC0C  F0AC         	call	_sqrt	;wreg free
 35444  016A18  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 35445  016A1C  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 35446  016A20  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 35447  016A24  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 35448                           
 35449                           ;main.c: 133: RMS = Peak * RMS;
 35450  016A28  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 35451  016A2C  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 35452  016A30  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 35453  016A34  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 35454  016A38  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 35455  016A3C  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 35456  016A40  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 35457  016A44  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 35458  016A48  EC27  F0A4         	call	i2___flmul	;wreg free
 35459  016A4C  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 35460  016A50  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 35461  016A54  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 35462  016A58  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 35463                           
 35464                           ;main.c: 134: return RMS;
 35465  016A5C  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 35466  016A60  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 35467  016A64  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 35468  016A68  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 35469  016A6C  0012               	return	
 35470  016A6E                     __end_of_peakToRMS:
 35471                           	opt stack 0
 35472                           tosu	equ	0xFFF
 35473                           tosh	equ	0xFFE
 35474                           tosl	equ	0xFFD
 35475                           pclatu	equ	0xFFB
 35476                           pclath	equ	0xFFA
 35477                           tblptru	equ	0xFF8
 35478                           tblptrh	equ	0xFF7
 35479                           tblptrl	equ	0xFF6
 35480                           tablat	equ	0xFF5
 35481                           prodh	equ	0xFF4
 35482                           prodl	equ	0xFF3
 35483                           intcon	equ	0xFF2
 35484                           indf0	equ	0xFEF
 35485                           postinc0	equ	0xFEE
 35486                           fsr0h	equ	0xFEA
 35487                           fsr0l	equ	0xFE9
 35488                           wreg	equ	0xFE8
 35489                           indf1	equ	0xFE7
 35490                           postdec1	equ	0xFE5
 35491                           plusw1	equ	0xFE3
 35492                           fsr1h	equ	0xFE2
 35493                           fsr1l	equ	0xFE1
 35494                           bsr	equ	0xFE0
 35495                           indf2	equ	0xFDF
 35496                           postinc2	equ	0xFDE
 35497                           postdec2	equ	0xFDD
 35498                           plusw2	equ	0xFDB
 35499                           fsr2h	equ	0xFDA
 35500                           fsr2l	equ	0xFD9
 35501                           status	equ	0xFD8
 35502                           
 35503 ;; *************** function _acos *****************
 35504 ;; Defined at:
 35505 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 35506 ;; Parameters:    Size  Location     Type
 35507 ;;  x               4   73[BANK0 ] void 
 35508 ;; Auto vars:     Size  Location     Type
 35509 ;;		None
 35510 ;; Return value:  Size  Location     Type
 35511 ;;                  4   73[BANK0 ] void 
 35512 ;; Registers used:
 35513 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35514 ;; Tracked objects:
 35515 ;;		On entry : 0/0
 35516 ;;		On exit  : 0/0
 35517 ;;		Unchanged: 0/0
 35518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35519 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35520 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35522 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35523 ;;Total ram usage:        8 bytes
 35524 ;; Hardware stack levels used:    1
 35525 ;; Hardware stack levels required when called:    4
 35526 ;; This function calls:
 35527 ;;		_asin
 35528 ;;		i2___fladd
 35529 ;;		i2___flneg
 35530 ;; This function is called by:
 35531 ;;		_peakToRMS
 35532 ;; This function uses a non-reentrant model
 35533 ;;
 35534                           
 35535                           	psect	text109
 35536  018558                     __ptext109:
 35537                           	opt stack 0
 35538  018558                     _acos:
 35539                           	opt stack 11
 35540                           
 35541                           ;incstack = 0
 35542  018558  C0A9  F091         	movff	acos@x,asin@x
 35543  01855C  C0AA  F092         	movff	acos@x+1,asin@x+1
 35544  018560  C0AB  F093         	movff	acos@x+2,asin@x+2
 35545  018564  C0AC  F094         	movff	acos@x+3,asin@x+3
 35546  018568  EC0D  F0A9         	call	_asin	;wreg free
 35547  01856C  C091  F0AD         	movff	?_asin,_acos$4178
 35548  018570  C092  F0AE         	movff	?_asin+1,_acos$4178+1
 35549  018574  C093  F0AF         	movff	?_asin+2,_acos$4178+2
 35550  018578  C094  F0B0         	movff	?_asin+3,_acos$4178+3
 35551  01857C  C0AD  F02C         	movff	_acos$4178,i2___flneg@f1
 35552  018580  C0AE  F02D         	movff	_acos$4178+1,i2___flneg@f1+1
 35553  018584  C0AF  F02E         	movff	_acos$4178+2,i2___flneg@f1+2
 35554  018588  C0B0  F02F         	movff	_acos$4178+3,i2___flneg@f1+3
 35555  01858C  ECAE  F0C7         	call	i2___flneg	;wreg free
 35556  018590  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 35557  018594  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 35558  018598  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 35559  01859C  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 35560  0185A0  0EDB               	movlw	219
 35561  0185A2  6E5A               	movwf	i2___fladd@a,c
 35562  0185A4  0E0F               	movlw	15
 35563  0185A6  6E5B               	movwf	i2___fladd@a+1,c
 35564  0185A8  0EC9               	movlw	201
 35565  0185AA  6E5C               	movwf	i2___fladd@a+2,c
 35566  0185AC  0E3F               	movlw	63
 35567  0185AE  6E5D               	movwf	i2___fladd@a+3,c
 35568  0185B0  EC6E  F0A7         	call	i2___fladd	;wreg free
 35569  0185B4  C056  F0A9         	movff	?i2___fladd,?_acos
 35570  0185B8  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 35571  0185BC  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 35572  0185C0  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 35573  0185C4  0012               	return	
 35574  0185C6                     __end_of_acos:
 35575                           	opt stack 0
 35576                           tosu	equ	0xFFF
 35577                           tosh	equ	0xFFE
 35578                           tosl	equ	0xFFD
 35579                           pclatu	equ	0xFFB
 35580                           pclath	equ	0xFFA
 35581                           tblptru	equ	0xFF8
 35582                           tblptrh	equ	0xFF7
 35583                           tblptrl	equ	0xFF6
 35584                           tablat	equ	0xFF5
 35585                           prodh	equ	0xFF4
 35586                           prodl	equ	0xFF3
 35587                           intcon	equ	0xFF2
 35588                           indf0	equ	0xFEF
 35589                           postinc0	equ	0xFEE
 35590                           fsr0h	equ	0xFEA
 35591                           fsr0l	equ	0xFE9
 35592                           wreg	equ	0xFE8
 35593                           indf1	equ	0xFE7
 35594                           postdec1	equ	0xFE5
 35595                           plusw1	equ	0xFE3
 35596                           fsr1h	equ	0xFE2
 35597                           fsr1l	equ	0xFE1
 35598                           bsr	equ	0xFE0
 35599                           indf2	equ	0xFDF
 35600                           postinc2	equ	0xFDE
 35601                           postdec2	equ	0xFDD
 35602                           plusw2	equ	0xFDB
 35603                           fsr2h	equ	0xFDA
 35604                           fsr2l	equ	0xFD9
 35605                           status	equ	0xFD8
 35606                           
 35607 ;; *************** function _asin *****************
 35608 ;; Defined at:
 35609 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 35610 ;; Parameters:    Size  Location     Type
 35611 ;;  x               4   49[BANK0 ] void 
 35612 ;; Auto vars:     Size  Location     Type
 35613 ;;  y               4   65[BANK0 ] void 
 35614 ;;  sgn             4   53[BANK0 ] void 
 35615 ;; Return value:  Size  Location     Type
 35616 ;;                  4   49[BANK0 ] void 
 35617 ;; Registers used:
 35618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35619 ;; Tracked objects:
 35620 ;;		On entry : 0/0
 35621 ;;		On exit  : 0/0
 35622 ;;		Unchanged: 0/0
 35623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35624 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35625 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35627 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35628 ;;Total ram usage:       24 bytes
 35629 ;; Hardware stack levels used:    1
 35630 ;; Hardware stack levels required when called:    3
 35631 ;; This function calls:
 35632 ;;		_atan
 35633 ;;		_fabs
 35634 ;;		_sqrt
 35635 ;;		i2___fladd
 35636 ;;		i2___fldiv
 35637 ;;		i2___flge
 35638 ;;		i2___flmul
 35639 ;;		i2___flneg
 35640 ;; This function is called by:
 35641 ;;		_acos
 35642 ;; This function uses a non-reentrant model
 35643 ;;
 35644                           
 35645                           	psect	text110
 35646  01521A                     __ptext110:
 35647                           	opt stack 0
 35648  01521A                     _asin:
 35649                           	opt stack 11
 35650                           
 35651                           ;incstack = 0
 35652  01521A  0E00               	movlw	0
 35653  01521C  6E34               	movwf	i2___flge@ff1,c
 35654  01521E  0E00               	movlw	0
 35655  015220  6E35               	movwf	i2___flge@ff1+1,c
 35656  015222  0E80               	movlw	128
 35657  015224  6E36               	movwf	i2___flge@ff1+2,c
 35658  015226  0E3F               	movlw	63
 35659  015228  6E37               	movwf	i2___flge@ff1+3,c
 35660  01522A  C091  F030         	movff	asin@x,fabs@d
 35661  01522E  C092  F031         	movff	asin@x+1,fabs@d+1
 35662  015232  C093  F032         	movff	asin@x+2,fabs@d+2
 35663  015236  C094  F033         	movff	asin@x+3,fabs@d+3
 35664  01523A  ECAA  F0C6         	call	_fabs	;wreg free
 35665  01523E  C030  F038         	movff	?_fabs,i2___flge@ff2
 35666  015242  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 35667  015246  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 35668  01524A  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 35669  01524E  EC23  F0BB         	call	i2___flge	;wreg free
 35670  015252  B0D8               	btfsc	status,0,c
 35671  015254  D00F               	goto	i2l1738
 35672  015256  0E00               	movlw	0
 35673  015258  0102               	movlb	2	; () banked
 35674  01525A  6F3B               	movwf	(_errno+1)& (0+255),b
 35675  01525C  0E21               	movlw	33
 35676  01525E  6F3A               	movwf	_errno& (0+255),b
 35677  015260  0E00               	movlw	0
 35678  015262  0100               	movlb	0	; () banked
 35679  015264  6F91               	movwf	?_asin& (0+255),b
 35680  015266  0E00               	movlw	0
 35681  015268  6F92               	movwf	(?_asin+1)& (0+255),b
 35682  01526A  0E00               	movlw	0
 35683  01526C  6F93               	movwf	(?_asin+2)& (0+255),b
 35684  01526E  0E00               	movlw	0
 35685  015270  6F94               	movwf	(?_asin+3)& (0+255),b
 35686                           
 35687                           ; BSR set to: 0
 35688  015272  0012               	return	
 35689  015274                     i2l1738:
 35690                           
 35691                           ; BSR set to: 0
 35692  015274  0E00               	movlw	0
 35693  015276  0100               	movlb	0	; () banked
 35694  015278  6F95               	movwf	asin@sgn& (0+255),b
 35695  01527A  0E00               	movlw	0
 35696  01527C  6F96               	movwf	(asin@sgn+1)& (0+255),b
 35697  01527E  0E80               	movlw	128
 35698  015280  6F97               	movwf	(asin@sgn+2)& (0+255),b
 35699  015282  0E3F               	movlw	63
 35700  015284  6F98               	movwf	(asin@sgn+3)& (0+255),b
 35701                           
 35702                           ; BSR set to: 0
 35703  015286  C091  F034         	movff	asin@x,i2___flmul@a
 35704  01528A  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 35705  01528E  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 35706  015292  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 35707  015296  C091  F030         	movff	asin@x,i2___flmul@b
 35708  01529A  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 35709  01529E  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 35710  0152A2  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 35711  0152A6  EC27  F0A4         	call	i2___flmul	;wreg free
 35712  0152AA  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 35713  0152AE  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 35714  0152B2  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 35715  0152B6  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 35716  0152BA  ECAE  F0C7         	call	i2___flneg	;wreg free
 35717  0152BE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 35718  0152C2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 35719  0152C6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 35720  0152CA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 35721  0152CE  0E00               	movlw	0
 35722  0152D0  6E5A               	movwf	i2___fladd@a,c
 35723  0152D2  0E00               	movlw	0
 35724  0152D4  6E5B               	movwf	i2___fladd@a+1,c
 35725  0152D6  0E80               	movlw	128
 35726  0152D8  6E5C               	movwf	i2___fladd@a+2,c
 35727  0152DA  0E3F               	movlw	63
 35728  0152DC  6E5D               	movwf	i2___fladd@a+3,c
 35729  0152DE  EC6E  F0A7         	call	i2___fladd	;wreg free
 35730  0152E2  C056  F06C         	movff	?i2___fladd,sqrt@a
 35731  0152E6  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 35732  0152EA  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 35733  0152EE  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 35734  0152F2  EC0C  F0AC         	call	_sqrt	;wreg free
 35735  0152F6  C06C  F0A1         	movff	?_sqrt,asin@y
 35736  0152FA  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 35737  0152FE  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 35738  015302  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 35739  015306  C091  F030         	movff	asin@x,fabs@d
 35740  01530A  C092  F031         	movff	asin@x+1,fabs@d+1
 35741  01530E  C093  F032         	movff	asin@x+2,fabs@d+2
 35742  015312  C094  F033         	movff	asin@x+3,fabs@d+3
 35743  015316  ECAA  F0C6         	call	_fabs	;wreg free
 35744  01531A  C030  F034         	movff	?_fabs,i2___flge@ff1
 35745  01531E  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 35746  015322  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 35747  015326  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 35748  01532A  0E8F               	movlw	143
 35749  01532C  6E38               	movwf	i2___flge@ff2,c
 35750  01532E  0EC2               	movlw	194
 35751  015330  6E39               	movwf	i2___flge@ff2+1,c
 35752  015332  0E35               	movlw	53
 35753  015334  6E3A               	movwf	i2___flge@ff2+2,c
 35754  015336  0E3F               	movlw	63
 35755  015338  6E3B               	movwf	i2___flge@ff2+3,c
 35756  01533A  EC23  F0BB         	call	i2___flge	;wreg free
 35757  01533E  B0D8               	btfsc	status,0,c
 35758  015340  D02D               	goto	i2l1740
 35759  015342  C091  F013         	movff	asin@x,i2___fldiv@b
 35760  015346  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 35761  01534A  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 35762  01534E  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 35763  015352  C0A1  F017         	movff	asin@y,i2___fldiv@a
 35764  015356  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 35765  01535A  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 35766  01535E  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 35767  015362  EC2E  F0B0         	call	i2___fldiv	;wreg free
 35768  015366  C013  F0A5         	movff	?i2___fldiv,_asin$4179
 35769  01536A  C014  F0A6         	movff	?i2___fldiv+1,_asin$4179+1
 35770  01536E  C015  F0A7         	movff	?i2___fldiv+2,_asin$4179+2
 35771  015372  C016  F0A8         	movff	?i2___fldiv+3,_asin$4179+3
 35772  015376  C0A5  F07C         	movff	_asin$4179,atan@f
 35773  01537A  C0A6  F07D         	movff	_asin$4179+1,atan@f+1
 35774  01537E  C0A7  F07E         	movff	_asin$4179+2,atan@f+2
 35775  015382  C0A8  F07F         	movff	_asin$4179+3,atan@f+3
 35776  015386  EC37  F0B5         	call	_atan	;wreg free
 35777  01538A  C07C  F091         	movff	?_atan,?_asin
 35778  01538E  C07D  F092         	movff	?_atan+1,?_asin+1
 35779  015392  C07E  F093         	movff	?_atan+2,?_asin+2
 35780  015396  C07F  F094         	movff	?_atan+3,?_asin+3
 35781  01539A  0012               	return	
 35782  01539C                     i2l1740:
 35783  01539C  0100               	movlb	0	; () banked
 35784  01539E  AF94               	btfss	(asin@x+3)& (0+255),7,b
 35785  0153A0  D06D               	goto	i2l1741
 35786                           
 35787                           ; BSR set to: 0
 35788  0153A2  C091  F017         	movff	asin@x,i2___fldiv@a
 35789  0153A6  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 35790  0153AA  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 35791  0153AE  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 35792  0153B2  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 35793  0153B6  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 35794  0153BA  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 35795  0153BE  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 35796  0153C2  ECAE  F0C7         	call	i2___flneg	;wreg free
 35797  0153C6  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 35798  0153CA  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 35799  0153CE  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 35800  0153D2  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 35801  0153D6  EC2E  F0B0         	call	i2___fldiv	;wreg free
 35802  0153DA  C013  F0A5         	movff	?i2___fldiv,_asin$4179
 35803  0153DE  C014  F0A6         	movff	?i2___fldiv+1,_asin$4179+1
 35804  0153E2  C015  F0A7         	movff	?i2___fldiv+2,_asin$4179+2
 35805  0153E6  C016  F0A8         	movff	?i2___fldiv+3,_asin$4179+3
 35806  0153EA  C0A5  F07C         	movff	_asin$4179,atan@f
 35807  0153EE  C0A6  F07D         	movff	_asin$4179+1,atan@f+1
 35808  0153F2  C0A7  F07E         	movff	_asin$4179+2,atan@f+2
 35809  0153F6  C0A8  F07F         	movff	_asin$4179+3,atan@f+3
 35810  0153FA  EC37  F0B5         	call	_atan	;wreg free
 35811  0153FE  C07C  F09D         	movff	?_atan,_asin$4180
 35812  015402  C07D  F09E         	movff	?_atan+1,_asin$4180+1
 35813  015406  C07E  F09F         	movff	?_atan+2,_asin$4180+2
 35814  01540A  C07F  F0A0         	movff	?_atan+3,_asin$4180+3
 35815  01540E  0EDB               	movlw	219
 35816  015410  6E5A               	movwf	i2___fladd@a,c
 35817  015412  0E0F               	movlw	15
 35818  015414  6E5B               	movwf	i2___fladd@a+1,c
 35819  015416  0EC9               	movlw	201
 35820  015418  6E5C               	movwf	i2___fladd@a+2,c
 35821  01541A  0E3F               	movlw	63
 35822  01541C  6E5D               	movwf	i2___fladd@a+3,c
 35823  01541E  C09D  F02C         	movff	_asin$4180,i2___flneg@f1
 35824  015422  C09E  F02D         	movff	_asin$4180+1,i2___flneg@f1+1
 35825  015426  C09F  F02E         	movff	_asin$4180+2,i2___flneg@f1+2
 35826  01542A  C0A0  F02F         	movff	_asin$4180+3,i2___flneg@f1+3
 35827  01542E  ECAE  F0C7         	call	i2___flneg	;wreg free
 35828  015432  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 35829  015436  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 35830  01543A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 35831  01543E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 35832  015442  EC6E  F0A7         	call	i2___fladd	;wreg free
 35833  015446  C056  F099         	movff	?i2___fladd,_asin$4181
 35834  01544A  C057  F09A         	movff	?i2___fladd+1,_asin$4181+1
 35835  01544E  C058  F09B         	movff	?i2___fladd+2,_asin$4181+2
 35836  015452  C059  F09C         	movff	?i2___fladd+3,_asin$4181+3
 35837  015456  C099  F02C         	movff	_asin$4181,i2___flneg@f1
 35838  01545A  C09A  F02D         	movff	_asin$4181+1,i2___flneg@f1+1
 35839  01545E  C09B  F02E         	movff	_asin$4181+2,i2___flneg@f1+2
 35840  015462  C09C  F02F         	movff	_asin$4181+3,i2___flneg@f1+3
 35841  015466  ECAE  F0C7         	call	i2___flneg	;wreg free
 35842  01546A  C02C  F091         	movff	?i2___flneg,?_asin
 35843  01546E  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 35844  015472  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 35845  015476  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 35846  01547A  0012               	return	
 35847  01547C                     i2l1741:
 35848  01547C  C091  F017         	movff	asin@x,i2___fldiv@a
 35849  015480  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 35850  015484  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 35851  015488  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 35852  01548C  C0A1  F013         	movff	asin@y,i2___fldiv@b
 35853  015490  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 35854  015494  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 35855  015498  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 35856  01549C  EC2E  F0B0         	call	i2___fldiv	;wreg free
 35857  0154A0  C013  F0A5         	movff	?i2___fldiv,_asin$4179
 35858  0154A4  C014  F0A6         	movff	?i2___fldiv+1,_asin$4179+1
 35859  0154A8  C015  F0A7         	movff	?i2___fldiv+2,_asin$4179+2
 35860  0154AC  C016  F0A8         	movff	?i2___fldiv+3,_asin$4179+3
 35861  0154B0  C0A5  F07C         	movff	_asin$4179,atan@f
 35862  0154B4  C0A6  F07D         	movff	_asin$4179+1,atan@f+1
 35863  0154B8  C0A7  F07E         	movff	_asin$4179+2,atan@f+2
 35864  0154BC  C0A8  F07F         	movff	_asin$4179+3,atan@f+3
 35865  0154C0  EC37  F0B5         	call	_atan	;wreg free
 35866  0154C4  C07C  F09D         	movff	?_atan,_asin$4180
 35867  0154C8  C07D  F09E         	movff	?_atan+1,_asin$4180+1
 35868  0154CC  C07E  F09F         	movff	?_atan+2,_asin$4180+2
 35869  0154D0  C07F  F0A0         	movff	?_atan+3,_asin$4180+3
 35870  0154D4  C09D  F02C         	movff	_asin$4180,i2___flneg@f1
 35871  0154D8  C09E  F02D         	movff	_asin$4180+1,i2___flneg@f1+1
 35872  0154DC  C09F  F02E         	movff	_asin$4180+2,i2___flneg@f1+2
 35873  0154E0  C0A0  F02F         	movff	_asin$4180+3,i2___flneg@f1+3
 35874  0154E4  ECAE  F0C7         	call	i2___flneg	;wreg free
 35875  0154E8  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 35876  0154EC  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 35877  0154F0  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 35878  0154F4  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 35879  0154F8  0EDB               	movlw	219
 35880  0154FA  6E5A               	movwf	i2___fladd@a,c
 35881  0154FC  0E0F               	movlw	15
 35882  0154FE  6E5B               	movwf	i2___fladd@a+1,c
 35883  015500  0EC9               	movlw	201
 35884  015502  6E5C               	movwf	i2___fladd@a+2,c
 35885  015504  0E3F               	movlw	63
 35886  015506  6E5D               	movwf	i2___fladd@a+3,c
 35887  015508  EC6E  F0A7         	call	i2___fladd	;wreg free
 35888  01550C  C056  F091         	movff	?i2___fladd,?_asin
 35889  015510  C057  F092         	movff	?i2___fladd+1,?_asin+1
 35890  015514  C058  F093         	movff	?i2___fladd+2,?_asin+2
 35891  015518  C059  F094         	movff	?i2___fladd+3,?_asin+3
 35892  01551C  0012               	return	
 35893  01551E                     __end_of_asin:
 35894                           	opt stack 0
 35895                           tosu	equ	0xFFF
 35896                           tosh	equ	0xFFE
 35897                           tosl	equ	0xFFD
 35898                           pclatu	equ	0xFFB
 35899                           pclath	equ	0xFFA
 35900                           tblptru	equ	0xFF8
 35901                           tblptrh	equ	0xFF7
 35902                           tblptrl	equ	0xFF6
 35903                           tablat	equ	0xFF5
 35904                           prodh	equ	0xFF4
 35905                           prodl	equ	0xFF3
 35906                           intcon	equ	0xFF2
 35907                           indf0	equ	0xFEF
 35908                           postinc0	equ	0xFEE
 35909                           fsr0h	equ	0xFEA
 35910                           fsr0l	equ	0xFE9
 35911                           wreg	equ	0xFE8
 35912                           indf1	equ	0xFE7
 35913                           postdec1	equ	0xFE5
 35914                           plusw1	equ	0xFE3
 35915                           fsr1h	equ	0xFE2
 35916                           fsr1l	equ	0xFE1
 35917                           bsr	equ	0xFE0
 35918                           indf2	equ	0xFDF
 35919                           postinc2	equ	0xFDE
 35920                           postdec2	equ	0xFDD
 35921                           plusw2	equ	0xFDB
 35922                           fsr2h	equ	0xFDA
 35923                           fsr2l	equ	0xFD9
 35924                           status	equ	0xFD8
 35925                           
 35926 ;; *************** function _sqrt *****************
 35927 ;; Defined at:
 35928 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 35929 ;; Parameters:    Size  Location     Type
 35930 ;;  a               4   12[BANK0 ] void 
 35931 ;; Auto vars:     Size  Location     Type
 35932 ;;  frac            4   37[BANK0 ] unsigned long 
 35933 ;;  root            4   33[BANK0 ] struct .
 35934 ;;  grs             4   27[BANK0 ] unsigned long 
 35935 ;;  tfrac           4   22[BANK0 ] unsigned long 
 35936 ;;  exp             2   31[BANK0 ] int 
 35937 ;;  p               1   26[BANK0 ] unsigned char 
 35938 ;;  i               1   21[BANK0 ] unsigned char 
 35939 ;;  sign            1   20[BANK0 ] unsigned char 
 35940 ;; Return value:  Size  Location     Type
 35941 ;;                  4   12[BANK0 ] unsigned char 
 35942 ;; Registers used:
 35943 ;;		wreg, status,2, status,0
 35944 ;; Tracked objects:
 35945 ;;		On entry : 0/0
 35946 ;;		On exit  : 0/0
 35947 ;;		Unchanged: 0/0
 35948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35949 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35950 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35951 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35952 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35953 ;;Total ram usage:       29 bytes
 35954 ;; Hardware stack levels used:    1
 35955 ;; This function calls:
 35956 ;;		Nothing
 35957 ;; This function is called by:
 35958 ;;		_peakToRMS
 35959 ;;		_asin
 35960 ;; This function uses a non-reentrant model
 35961 ;;
 35962                           
 35963                           	psect	text111
 35964  015818                     __ptext111:
 35965                           	opt stack 0
 35966  015818                     _sqrt:
 35967                           	opt stack 15
 35968                           
 35969                           ;incstack = 0
 35970  015818  0100               	movlb	0	; () banked
 35971  01581A  516F               	movf	(sqrt@a+3)& (0+255),w,b
 35972  01581C  0B80               	andlw	128
 35973  01581E  6F74               	movwf	sqrt@sign& (0+255),b
 35974  015820  516F               	movf	(sqrt@a+3)& (0+255),w,b
 35975  015822  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 35976  015824  6F7A               	movwf	sqrt@p& (0+255),b
 35977                           
 35978                           ; BSR set to: 0
 35979  015826  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 35980                           
 35981                           ; BSR set to: 0
 35982  015828  817A               	bsf	sqrt@p& (0+255),0,b
 35983                           
 35984                           ; BSR set to: 0
 35985                           
 35986                           ; BSR set to: 0
 35987  01582A  C07A  F07F         	movff	sqrt@p,sqrt@exp
 35988  01582E  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 35989                           
 35990                           ; BSR set to: 0
 35991  015830  0EFF               	movlw	255
 35992  015832  156C               	andwf	sqrt@a& (0+255),w,b
 35993  015834  6F85               	movwf	sqrt@frac& (0+255),b
 35994  015836  0EFF               	movlw	255
 35995  015838  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 35996  01583A  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 35997  01583C  0E7F               	movlw	127
 35998  01583E  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 35999  015840  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 36000  015842  0E00               	movlw	0
 36001  015844  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 36002  015846  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 36003                           
 36004                           ; BSR set to: 0
 36005  015848  517F               	movf	sqrt@exp& (0+255),w,b
 36006  01584A  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 36007  01584C  B4D8               	btfsc	status,2,c
 36008  01584E  D005               	goto	i2l2267
 36009                           
 36010                           ; BSR set to: 0
 36011  015850  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 36012                           
 36013                           ; BSR set to: 0
 36014  015852  297F               	incf	sqrt@exp& (0+255),w,b
 36015  015854  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 36016  015856  A4D8               	btfss	status,2,c
 36017  015858  D008               	goto	i2l2269
 36018  01585A                     i2l2267:
 36019                           
 36020                           ; BSR set to: 0
 36021                           
 36022                           ; BSR set to: 0
 36023  01585A  0E00               	movlw	0
 36024  01585C  6F85               	movwf	sqrt@frac& (0+255),b
 36025  01585E  0E00               	movlw	0
 36026  015860  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 36027  015862  0E00               	movlw	0
 36028  015864  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 36029  015866  0E00               	movlw	0
 36030  015868  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 36031  01586A                     i2l2269:
 36032                           
 36033                           ; BSR set to: 0
 36034                           
 36035                           ; BSR set to: 0
 36036  01586A  517F               	movf	sqrt@exp& (0+255),w,b
 36037  01586C  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 36038  01586E  A4D8               	btfss	status,2,c
 36039  015870  D009               	goto	i2l2270
 36040                           
 36041                           ; BSR set to: 0
 36042  015872  0E00               	movlw	0
 36043  015874  6F6C               	movwf	?_sqrt& (0+255),b
 36044  015876  0E00               	movlw	0
 36045  015878  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 36046  01587A  0E00               	movlw	0
 36047  01587C  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 36048  01587E  0E00               	movlw	0
 36049  015880  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 36050                           
 36051                           ; BSR set to: 0
 36052  015882  0012               	return	
 36053  015884                     i2l2270:
 36054                           
 36055                           ; BSR set to: 0
 36056                           
 36057                           ; BSR set to: 0
 36058  015884  5174               	movf	sqrt@sign& (0+255),w,b
 36059  015886  B4D8               	btfsc	status,2,c
 36060  015888  D01A               	goto	i2l2272
 36061                           
 36062                           ; BSR set to: 0
 36063  01588A  0E00               	movlw	0
 36064  01588C  6F81               	movwf	sqrt@root& (0+255),b
 36065  01588E  0E00               	movlw	0
 36066  015890  6F82               	movwf	(sqrt@root+1)& (0+255),b
 36067  015892  0E40               	movlw	64
 36068  015894  6F83               	movwf	(sqrt@root+2)& (0+255),b
 36069  015896  0E00               	movlw	0
 36070  015898  6F84               	movwf	(sqrt@root+3)& (0+255),b
 36071                           
 36072                           ; BSR set to: 0
 36073  01589A  0E80               	movlw	128
 36074  01589C  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 36075  01589E  0EFF               	movlw	255
 36076  0158A0  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 36077                           
 36078                           ; BSR set to: 0
 36079  0158A2  0E00               	movlw	0
 36080  0158A4  0102               	movlb	2	; () banked
 36081  0158A6  6F3B               	movwf	(_errno+1)& (0+255),b
 36082  0158A8  0E21               	movlw	33
 36083  0158AA  6F3A               	movwf	_errno& (0+255),b
 36084                           
 36085                           ; BSR set to: 2
 36086  0158AC  C081  F06C         	movff	sqrt@root,?_sqrt
 36087  0158B0  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 36088  0158B4  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 36089  0158B8  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 36090                           
 36091                           ; BSR set to: 2
 36092  0158BC  0012               	return	
 36093  0158BE                     i2l2272:
 36094                           
 36095                           ; BSR set to: 2
 36096  0158BE  0100               	movlb	0	; () banked
 36097  0158C0  297F               	incf	sqrt@exp& (0+255),w,b
 36098  0158C2  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 36099  0158C4  A4D8               	btfss	status,2,c
 36100  0158C6  D011               	goto	i2l2273
 36101                           
 36102                           ; BSR set to: 0
 36103  0158C8  0E00               	movlw	0
 36104  0158CA  6F81               	movwf	sqrt@root& (0+255),b
 36105  0158CC  0E00               	movlw	0
 36106  0158CE  6F82               	movwf	(sqrt@root+1)& (0+255),b
 36107  0158D0  0E80               	movlw	128
 36108  0158D2  6F83               	movwf	(sqrt@root+2)& (0+255),b
 36109  0158D4  0E7F               	movlw	127
 36110  0158D6  6F84               	movwf	(sqrt@root+3)& (0+255),b
 36111                           
 36112                           ; BSR set to: 0
 36113  0158D8  C081  F06C         	movff	sqrt@root,?_sqrt
 36114  0158DC  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 36115  0158E0  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 36116  0158E4  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 36117                           
 36118                           ; BSR set to: 0
 36119  0158E8  0012               	return	
 36120  0158EA                     i2l2273:
 36121                           
 36122                           ; BSR set to: 0
 36123                           
 36124                           ; BSR set to: 0
 36125  0158EA  0E81               	movlw	129
 36126  0158EC  277F               	addwf	sqrt@exp& (0+255),f,b
 36127  0158EE  0EFF               	movlw	255
 36128  0158F0  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 36129  0158F2  517F               	movf	sqrt@exp& (0+255),w,b
 36130  0158F4  0B01               	andlw	1
 36131  0158F6  6F7A               	movwf	sqrt@p& (0+255),b
 36132  0158F8  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 36133  0158FA  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 36134  0158FC  337F               	rrcf	sqrt@exp& (0+255),f,b
 36135  0158FE  0E7F               	movlw	127
 36136  015900  277F               	addwf	sqrt@exp& (0+255),f,b
 36137  015902  0E00               	movlw	0
 36138  015904  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 36139  015906  90D8               	bcf	status,0,c
 36140  015908  3585               	rlcf	sqrt@frac& (0+255),w,b
 36141  01590A  6F76               	movwf	sqrt@tfrac& (0+255),b
 36142  01590C  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 36143  01590E  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 36144  015910  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 36145  015912  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 36146  015914  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 36147  015916  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 36148                           
 36149                           ; BSR set to: 0
 36150  015918  0E00               	movlw	0
 36151  01591A  6F85               	movwf	sqrt@frac& (0+255),b
 36152  01591C  0E00               	movlw	0
 36153  01591E  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 36154  015920  0E00               	movlw	0
 36155  015922  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 36156  015924  0E00               	movlw	0
 36157  015926  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 36158                           
 36159                           ; BSR set to: 0
 36160  015928  0E00               	movlw	0
 36161  01592A  6F7B               	movwf	sqrt@grs& (0+255),b
 36162  01592C  0E00               	movlw	0
 36163  01592E  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 36164  015930  0E00               	movlw	0
 36165  015932  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 36166  015934  0E01               	movlw	1
 36167  015936  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 36168                           
 36169                           ; BSR set to: 0
 36170  015938  517A               	movf	sqrt@p& (0+255),w,b
 36171  01593A  B4D8               	btfsc	status,2,c
 36172  01593C  D005               	goto	i2l2274
 36173                           
 36174                           ; BSR set to: 0
 36175  01593E  90D8               	bcf	status,0,c
 36176  015940  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 36177  015942  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 36178  015944  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 36179  015946  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 36180  015948                     i2l2274:
 36181                           
 36182                           ; BSR set to: 0
 36183                           
 36184                           ; BSR set to: 0
 36185  015948  0E00               	movlw	0
 36186  01594A  6F75               	movwf	sqrt@i& (0+255),b
 36187  01594C  D052               	goto	i2l2275
 36188  01594E                     
 36189                           ; BSR set to: 0
 36190                           
 36191                           ; BSR set to: 0
 36192  01594E  517B               	movf	sqrt@grs& (0+255),w,b
 36193  015950  1385               	iorwf	sqrt@frac& (0+255),f,b
 36194  015952  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 36195  015954  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 36196  015956  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 36197  015958  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 36198  01595A  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 36199  01595C  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 36200  01595E  5185               	movf	sqrt@frac& (0+255),w,b
 36201  015960  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 36202  015962  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 36203  015964  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 36204  015966  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 36205  015968  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 36206  01596A  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 36207  01596C  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 36208  01596E  A0D8               	btfss	status,0,c
 36209  015970  D011               	goto	i2l2277
 36210                           
 36211                           ; BSR set to: 0
 36212  015972  5185               	movf	sqrt@frac& (0+255),w,b
 36213  015974  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 36214  015976  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 36215  015978  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 36216  01597A  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 36217  01597C  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 36218  01597E  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 36219  015980  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 36220  015982  517B               	movf	sqrt@grs& (0+255),w,b
 36221  015984  2785               	addwf	sqrt@frac& (0+255),f,b
 36222  015986  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 36223  015988  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 36224  01598A  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 36225  01598C  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 36226  01598E  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 36227  015990  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 36228  015992  D014               	goto	i2l2278
 36229  015994                     i2l2277:
 36230                           
 36231                           ; BSR set to: 0
 36232                           
 36233                           ; BSR set to: 0
 36234  015994  C07B  F070         	movff	sqrt@grs,??_sqrt
 36235  015998  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 36236  01599C  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 36237  0159A0  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 36238  0159A4  1F70               	comf	??_sqrt& (0+255),f,b
 36239  0159A6  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 36240  0159A8  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 36241  0159AA  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 36242  0159AC  5170               	movf	??_sqrt& (0+255),w,b
 36243  0159AE  1785               	andwf	sqrt@frac& (0+255),f,b
 36244  0159B0  5171               	movf	(??_sqrt+1)& (0+255),w,b
 36245  0159B2  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 36246  0159B4  5172               	movf	(??_sqrt+2)& (0+255),w,b
 36247  0159B6  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 36248  0159B8  5173               	movf	(??_sqrt+3)& (0+255),w,b
 36249  0159BA  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 36250  0159BC                     i2l2278:
 36251                           
 36252                           ; BSR set to: 0
 36253                           
 36254                           ; BSR set to: 0
 36255  0159BC  C07B  F070         	movff	sqrt@grs,??_sqrt
 36256  0159C0  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 36257  0159C4  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 36258  0159C8  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 36259  0159CC  90D8               	bcf	status,0,c
 36260  0159CE  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 36261  0159D0  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 36262  0159D2  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 36263  0159D4  3370               	rrcf	??_sqrt& (0+255),f,b
 36264  0159D6  C070  F07B         	movff	??_sqrt,sqrt@grs
 36265  0159DA  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 36266  0159DE  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 36267  0159E2  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 36268                           
 36269                           ; BSR set to: 0
 36270  0159E6  90D8               	bcf	status,0,c
 36271  0159E8  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 36272  0159EA  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 36273  0159EC  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 36274  0159EE  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 36275                           
 36276                           ; BSR set to: 0
 36277  0159F0  2B75               	incf	sqrt@i& (0+255),f,b
 36278  0159F2                     i2l2275:
 36279                           
 36280                           ; BSR set to: 0
 36281                           
 36282                           ; BSR set to: 0
 36283  0159F2  0E18               	movlw	24
 36284  0159F4  6575               	cpfsgt	sqrt@i& (0+255),b
 36285  0159F6  D7AB               	goto	i2l2276
 36286                           
 36287                           ; BSR set to: 0
 36288                           
 36289                           ; BSR set to: 0
 36290  0159F8  C085  F070         	movff	sqrt@frac,??_sqrt
 36291  0159FC  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 36292  015A00  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 36293  015A04  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 36294  015A08  90D8               	bcf	status,0,c
 36295  015A0A  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 36296  015A0C  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 36297  015A0E  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 36298  015A10  3370               	rrcf	??_sqrt& (0+255),f,b
 36299  015A12  C070  F085         	movff	??_sqrt,sqrt@frac
 36300  015A16  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 36301  015A1A  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 36302  015A1E  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 36303                           
 36304                           ; BSR set to: 0
 36305  015A22  0E01               	movlw	1
 36306  015A24  1585               	andwf	sqrt@frac& (0+255),w,b
 36307  015A26  6F7B               	movwf	sqrt@grs& (0+255),b
 36308  015A28  0E00               	movlw	0
 36309  015A2A  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 36310  015A2C  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 36311  015A2E  0E00               	movlw	0
 36312  015A30  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 36313  015A32  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 36314  015A34  0E00               	movlw	0
 36315  015A36  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 36316  015A38  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 36317                           
 36318                           ; BSR set to: 0
 36319  015A3A  C085  F070         	movff	sqrt@frac,??_sqrt
 36320  015A3E  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 36321  015A42  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 36322  015A46  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 36323  015A4A  90D8               	bcf	status,0,c
 36324  015A4C  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 36325  015A4E  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 36326  015A50  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 36327  015A52  3370               	rrcf	??_sqrt& (0+255),f,b
 36328  015A54  C070  F085         	movff	??_sqrt,sqrt@frac
 36329  015A58  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 36330  015A5C  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 36331  015A60  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 36332  015A64  517B               	movf	sqrt@grs& (0+255),w,b
 36333  015A66  2785               	addwf	sqrt@frac& (0+255),f,b
 36334  015A68  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 36335  015A6A  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 36336  015A6C  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 36337  015A6E  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 36338  015A70  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 36339  015A72  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 36340                           
 36341                           ; BSR set to: 0
 36342  015A74  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 36343  015A76  D017               	goto	i2l2280
 36344                           
 36345                           ; BSR set to: 0
 36346  015A78  C085  F070         	movff	sqrt@frac,??_sqrt
 36347  015A7C  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 36348  015A80  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 36349  015A84  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 36350  015A88  90D8               	bcf	status,0,c
 36351  015A8A  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 36352  015A8C  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 36353  015A8E  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 36354  015A90  3370               	rrcf	??_sqrt& (0+255),f,b
 36355  015A92  C070  F085         	movff	??_sqrt,sqrt@frac
 36356  015A96  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 36357  015A9A  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 36358  015A9E  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 36359  015AA2  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 36360  015AA4  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 36361  015AA6                     i2l2280:
 36362                           
 36363                           ; BSR set to: 0
 36364                           
 36365                           ; BSR set to: 0
 36366  015AA6  0EFF               	movlw	255
 36367  015AA8  1585               	andwf	sqrt@frac& (0+255),w,b
 36368  015AAA  6F81               	movwf	sqrt@root& (0+255),b
 36369  015AAC  0EFF               	movlw	255
 36370  015AAE  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 36371  015AB0  6F82               	movwf	(sqrt@root+1)& (0+255),b
 36372  015AB2  0E7F               	movlw	127
 36373  015AB4  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 36374  015AB6  6F83               	movwf	(sqrt@root+2)& (0+255),b
 36375  015AB8  0E00               	movlw	0
 36376  015ABA  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 36377  015ABC  6F84               	movwf	(sqrt@root+3)& (0+255),b
 36378                           
 36379                           ; BSR set to: 0
 36380  015ABE  C07F  F07A         	movff	sqrt@exp,sqrt@p
 36381                           
 36382                           ; BSR set to: 0
 36383  015AC2  B17A               	btfsc	sqrt@p& (0+255),0,b
 36384                           
 36385                           ; BSR set to: 0
 36386  015AC4  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 36387                           
 36388                           ; BSR set to: 0
 36389                           
 36390                           ; BSR set to: 0
 36391  015AC6  90D8               	bcf	status,0,c
 36392  015AC8  317A               	rrcf	sqrt@p& (0+255),w,b
 36393  015ACA  6F84               	movwf	(sqrt@root+3)& (0+255),b
 36394                           
 36395                           ; BSR set to: 0
 36396  015ACC  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 36397                           
 36398                           ; BSR set to: 0
 36399  015ACE  C081  F06C         	movff	sqrt@root,?_sqrt
 36400  015AD2  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 36401  015AD6  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 36402  015ADA  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 36403  015ADE  0012               	return	
 36404  015AE0                     __end_of_sqrt:
 36405                           	opt stack 0
 36406                           tosu	equ	0xFFF
 36407                           tosh	equ	0xFFE
 36408                           tosl	equ	0xFFD
 36409                           pclatu	equ	0xFFB
 36410                           pclath	equ	0xFFA
 36411                           tblptru	equ	0xFF8
 36412                           tblptrh	equ	0xFF7
 36413                           tblptrl	equ	0xFF6
 36414                           tablat	equ	0xFF5
 36415                           prodh	equ	0xFF4
 36416                           prodl	equ	0xFF3
 36417                           intcon	equ	0xFF2
 36418                           indf0	equ	0xFEF
 36419                           postinc0	equ	0xFEE
 36420                           fsr0h	equ	0xFEA
 36421                           fsr0l	equ	0xFE9
 36422                           wreg	equ	0xFE8
 36423                           indf1	equ	0xFE7
 36424                           postdec1	equ	0xFE5
 36425                           plusw1	equ	0xFE3
 36426                           fsr1h	equ	0xFE2
 36427                           fsr1l	equ	0xFE1
 36428                           bsr	equ	0xFE0
 36429                           indf2	equ	0xFDF
 36430                           postinc2	equ	0xFDE
 36431                           postdec2	equ	0xFDD
 36432                           plusw2	equ	0xFDB
 36433                           fsr2h	equ	0xFDA
 36434                           fsr2l	equ	0xFD9
 36435                           status	equ	0xFD8
 36436                           
 36437 ;; *************** function _atan *****************
 36438 ;; Defined at:
 36439 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 36440 ;; Parameters:    Size  Location     Type
 36441 ;;  f               4   28[BANK0 ] unsigned char 
 36442 ;; Auto vars:     Size  Location     Type
 36443 ;;  val             4   45[BANK0 ] unsigned char 
 36444 ;;  val_squared     4   41[BANK0 ] unsigned char 
 36445 ;;  x               4   36[BANK0 ] unsigned char 
 36446 ;;  y               4   32[BANK0 ] unsigned char 
 36447 ;;  recip           1   40[BANK0 ] unsigned char 
 36448 ;; Return value:  Size  Location     Type
 36449 ;;                  4   28[BANK0 ] unsigned char 
 36450 ;; Registers used:
 36451 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36452 ;; Tracked objects:
 36453 ;;		On entry : 0/0
 36454 ;;		On exit  : 0/0
 36455 ;;		Unchanged: 0/0
 36456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36458 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36460 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36461 ;;Total ram usage:       21 bytes
 36462 ;; Hardware stack levels used:    1
 36463 ;; Hardware stack levels required when called:    2
 36464 ;; This function calls:
 36465 ;;		_eval_poly
 36466 ;;		_fabs
 36467 ;;		i2___fladd
 36468 ;;		i2___fldiv
 36469 ;;		i2___flge
 36470 ;;		i2___flmul
 36471 ;;		i2___flneg
 36472 ;; This function is called by:
 36473 ;;		_asin
 36474 ;; This function uses a non-reentrant model
 36475 ;;
 36476                           
 36477                           	psect	text112
 36478  016A6E                     __ptext112:
 36479                           	opt stack 0
 36480  016A6E                     _atan:
 36481                           	opt stack 11
 36482                           
 36483                           ;incstack = 0
 36484  016A6E  C07C  F030         	movff	atan@f,fabs@d
 36485  016A72  C07D  F031         	movff	atan@f+1,fabs@d+1
 36486  016A76  C07E  F032         	movff	atan@f+2,fabs@d+2
 36487  016A7A  C07F  F033         	movff	atan@f+3,fabs@d+3
 36488  016A7E  ECAA  F0C6         	call	_fabs	;wreg free
 36489  016A82  C030  F08D         	movff	?_fabs,atan@val
 36490  016A86  C031  F08E         	movff	?_fabs+1,atan@val+1
 36491  016A8A  C032  F08F         	movff	?_fabs+2,atan@val+2
 36492  016A8E  C033  F090         	movff	?_fabs+3,atan@val+3
 36493  016A92  0100               	movlb	0	; () banked
 36494  016A94  518D               	movf	atan@val& (0+255),w,b
 36495  016A96  118E               	iorwf	(atan@val+1)& (0+255),w,b
 36496  016A98  118F               	iorwf	(atan@val+2)& (0+255),w,b
 36497  016A9A  1190               	iorwf	(atan@val+3)& (0+255),w,b
 36498  016A9C  A4D8               	btfss	status,2,c
 36499  016A9E  D009               	goto	i2l1757
 36500                           
 36501                           ; BSR set to: 0
 36502  016AA0  0E00               	movlw	0
 36503  016AA2  6F7C               	movwf	?_atan& (0+255),b
 36504  016AA4  0E00               	movlw	0
 36505  016AA6  6F7D               	movwf	(?_atan+1)& (0+255),b
 36506  016AA8  0E00               	movlw	0
 36507  016AAA  6F7E               	movwf	(?_atan+2)& (0+255),b
 36508  016AAC  0E00               	movlw	0
 36509  016AAE  6F7F               	movwf	(?_atan+3)& (0+255),b
 36510                           
 36511                           ; BSR set to: 0
 36512  016AB0  0012               	return	
 36513  016AB2                     i2l1757:
 36514                           
 36515                           ; BSR set to: 0
 36516                           
 36517                           ; BSR set to: 0
 36518  016AB2  0E00               	movlw	0
 36519  016AB4  6E34               	movwf	i2___flge@ff1,c
 36520  016AB6  0E00               	movlw	0
 36521  016AB8  6E35               	movwf	i2___flge@ff1+1,c
 36522  016ABA  0E80               	movlw	128
 36523  016ABC  6E36               	movwf	i2___flge@ff1+2,c
 36524  016ABE  0E3F               	movlw	63
 36525  016AC0  6E37               	movwf	i2___flge@ff1+3,c
 36526  016AC2  C08D  F038         	movff	atan@val,i2___flge@ff2
 36527  016AC6  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 36528  016ACA  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 36529  016ACE  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 36530  016AD2  EC23  F0BB         	call	i2___flge	;wreg free
 36531  016AD6  B0D8               	btfsc	status,0,c
 36532  016AD8  D002               	goto	i2u1519_40
 36533  016ADA  0E01               	movlw	1
 36534  016ADC  D001               	goto	i2u1520_40
 36535  016ADE                     i2u1519_40:
 36536  016ADE  0E00               	movlw	0
 36537  016AE0                     i2u1520_40:
 36538  016AE0  0100               	movlb	0	; () banked
 36539  016AE2  6F88               	movwf	atan@recip& (0+255),b
 36540  016AE4  5188               	movf	atan@recip& (0+255),w,b
 36541  016AE6  B4D8               	btfsc	status,2,c
 36542  016AE8  D01A               	goto	i2l1759
 36543                           
 36544                           ; BSR set to: 0
 36545  016AEA  0E00               	movlw	0
 36546  016AEC  6E13               	movwf	i2___fldiv@b,c
 36547  016AEE  0E00               	movlw	0
 36548  016AF0  6E14               	movwf	i2___fldiv@b+1,c
 36549  016AF2  0E80               	movlw	128
 36550  016AF4  6E15               	movwf	i2___fldiv@b+2,c
 36551  016AF6  0E3F               	movlw	63
 36552  016AF8  6E16               	movwf	i2___fldiv@b+3,c
 36553  016AFA  C08D  F017         	movff	atan@val,i2___fldiv@a
 36554  016AFE  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 36555  016B02  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 36556  016B06  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 36557  016B0A  EC2E  F0B0         	call	i2___fldiv	;wreg free
 36558  016B0E  C013  F08D         	movff	?i2___fldiv,atan@val
 36559  016B12  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 36560  016B16  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 36561  016B1A  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 36562  016B1E                     i2l1759:
 36563  016B1E  C08D  F030         	movff	atan@val,i2___flmul@b
 36564  016B22  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 36565  016B26  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 36566  016B2A  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 36567  016B2E  C08D  F034         	movff	atan@val,i2___flmul@a
 36568  016B32  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 36569  016B36  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 36570  016B3A  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 36571  016B3E  EC27  F0A4         	call	i2___flmul	;wreg free
 36572  016B42  C030  F089         	movff	?i2___flmul,atan@val_squared
 36573  016B46  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 36574  016B4A  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 36575  016B4E  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 36576  016B52  C089  F06C         	movff	atan@val_squared,eval_poly@x
 36577  016B56  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 36578  016B5A  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 36579  016B5E  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 36580  016B62  0EBB               	movlw	low atan@coeff_b
 36581  016B64  0100               	movlb	0	; () banked
 36582  016B66  6F70               	movwf	eval_poly@d& (0+255),b
 36583  016B68  0EE4               	movlw	high atan@coeff_b
 36584  016B6A  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 36585  016B6C  0E00               	movlw	0
 36586  016B6E  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 36587  016B70  0E04               	movlw	4
 36588  016B72  6F72               	movwf	eval_poly@n& (0+255),b
 36589  016B74  ECC1  F0BC         	call	_eval_poly	;wreg free
 36590  016B78  C06C  F080         	movff	?_eval_poly,atan@y
 36591  016B7C  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 36592  016B80  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 36593  016B84  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 36594  016B88  C089  F06C         	movff	atan@val_squared,eval_poly@x
 36595  016B8C  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 36596  016B90  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 36597  016B94  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 36598  016B98  0E8F               	movlw	low atan@coeff_a
 36599  016B9A  0100               	movlb	0	; () banked
 36600  016B9C  6F70               	movwf	eval_poly@d& (0+255),b
 36601  016B9E  0EE4               	movlw	high atan@coeff_a
 36602  016BA0  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 36603  016BA2  0E00               	movlw	0
 36604  016BA4  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 36605  016BA6  0E05               	movlw	5
 36606  016BA8  6F72               	movwf	eval_poly@n& (0+255),b
 36607  016BAA  ECC1  F0BC         	call	_eval_poly	;wreg free
 36608  016BAE  C06C  F084         	movff	?_eval_poly,atan@x
 36609  016BB2  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 36610  016BB6  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 36611  016BBA  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 36612  016BBE  C08D  F030         	movff	atan@val,i2___flmul@b
 36613  016BC2  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 36614  016BC6  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 36615  016BCA  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 36616  016BCE  C080  F017         	movff	atan@y,i2___fldiv@a
 36617  016BD2  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 36618  016BD6  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 36619  016BDA  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 36620  016BDE  C084  F013         	movff	atan@x,i2___fldiv@b
 36621  016BE2  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 36622  016BE6  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 36623  016BEA  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 36624  016BEE  EC2E  F0B0         	call	i2___fldiv	;wreg free
 36625  016BF2  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 36626  016BF6  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 36627  016BFA  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 36628  016BFE  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 36629  016C02  EC27  F0A4         	call	i2___flmul	;wreg free
 36630  016C06  C030  F08D         	movff	?i2___flmul,atan@val
 36631  016C0A  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 36632  016C0E  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 36633  016C12  C033  F090         	movff	?i2___flmul+3,atan@val+3
 36634  016C16  0100               	movlb	0	; () banked
 36635  016C18  5188               	movf	atan@recip& (0+255),w,b
 36636  016C1A  B4D8               	btfsc	status,2,c
 36637  016C1C  D024               	goto	i2l1760
 36638                           
 36639                           ; BSR set to: 0
 36640  016C1E  C08D  F02C         	movff	atan@val,i2___flneg@f1
 36641  016C22  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 36642  016C26  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 36643  016C2A  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 36644  016C2E  ECAE  F0C7         	call	i2___flneg	;wreg free
 36645  016C32  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 36646  016C36  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 36647  016C3A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 36648  016C3E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 36649  016C42  0EDB               	movlw	219
 36650  016C44  6E5A               	movwf	i2___fladd@a,c
 36651  016C46  0E0F               	movlw	15
 36652  016C48  6E5B               	movwf	i2___fladd@a+1,c
 36653  016C4A  0EC9               	movlw	201
 36654  016C4C  6E5C               	movwf	i2___fladd@a+2,c
 36655  016C4E  0E3F               	movlw	63
 36656  016C50  6E5D               	movwf	i2___fladd@a+3,c
 36657  016C52  EC6E  F0A7         	call	i2___fladd	;wreg free
 36658  016C56  C056  F08D         	movff	?i2___fladd,atan@val
 36659  016C5A  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 36660  016C5E  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 36661  016C62  C059  F090         	movff	?i2___fladd+3,atan@val+3
 36662  016C66                     i2l1760:
 36663  016C66  0100               	movlb	0	; () banked
 36664  016C68  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 36665  016C6A  D009               	goto	i2l1762
 36666                           
 36667                           ; BSR set to: 0
 36668  016C6C  C08D  F07C         	movff	atan@val,?_atan
 36669  016C70  C08E  F07D         	movff	atan@val+1,?_atan+1
 36670  016C74  C08F  F07E         	movff	atan@val+2,?_atan+2
 36671  016C78  C090  F07F         	movff	atan@val+3,?_atan+3
 36672  016C7C  0012               	return	
 36673  016C7E                     i2l1762:
 36674                           
 36675                           ; BSR set to: 0
 36676                           
 36677                           ; BSR set to: 0
 36678  016C7E  C08D  F02C         	movff	atan@val,i2___flneg@f1
 36679  016C82  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 36680  016C86  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 36681  016C8A  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 36682  016C8E  ECAE  F0C7         	call	i2___flneg	;wreg free
 36683  016C92  C02C  F07C         	movff	?i2___flneg,?_atan
 36684  016C96  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 36685  016C9A  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 36686  016C9E  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 36687  016CA2  0012               	return	
 36688  016CA4                     __end_of_atan:
 36689                           	opt stack 0
 36690                           tosu	equ	0xFFF
 36691                           tosh	equ	0xFFE
 36692                           tosl	equ	0xFFD
 36693                           pclatu	equ	0xFFB
 36694                           pclath	equ	0xFFA
 36695                           tblptru	equ	0xFF8
 36696                           tblptrh	equ	0xFF7
 36697                           tblptrl	equ	0xFF6
 36698                           tablat	equ	0xFF5
 36699                           prodh	equ	0xFF4
 36700                           prodl	equ	0xFF3
 36701                           intcon	equ	0xFF2
 36702                           indf0	equ	0xFEF
 36703                           postinc0	equ	0xFEE
 36704                           fsr0h	equ	0xFEA
 36705                           fsr0l	equ	0xFE9
 36706                           wreg	equ	0xFE8
 36707                           indf1	equ	0xFE7
 36708                           postdec1	equ	0xFE5
 36709                           plusw1	equ	0xFE3
 36710                           fsr1h	equ	0xFE2
 36711                           fsr1l	equ	0xFE1
 36712                           bsr	equ	0xFE0
 36713                           indf2	equ	0xFDF
 36714                           postinc2	equ	0xFDE
 36715                           postdec2	equ	0xFDD
 36716                           plusw2	equ	0xFDB
 36717                           fsr2h	equ	0xFDA
 36718                           fsr2l	equ	0xFD9
 36719                           status	equ	0xFD8
 36720                           
 36721 ;; *************** function _fabs *****************
 36722 ;; Defined at:
 36723 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 36724 ;; Parameters:    Size  Location     Type
 36725 ;;  d               4   47[COMRAM] unsigned char 
 36726 ;; Auto vars:     Size  Location     Type
 36727 ;;		None
 36728 ;; Return value:  Size  Location     Type
 36729 ;;                  4   47[COMRAM] unsigned char 
 36730 ;; Registers used:
 36731 ;;		wreg, status,2, status,0, cstack
 36732 ;; Tracked objects:
 36733 ;;		On entry : 0/0
 36734 ;;		On exit  : 0/0
 36735 ;;		Unchanged: 0/0
 36736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36741 ;;Total ram usage:        4 bytes
 36742 ;; Hardware stack levels used:    1
 36743 ;; Hardware stack levels required when called:    1
 36744 ;; This function calls:
 36745 ;;		i2___flneg
 36746 ;; This function is called by:
 36747 ;;		_asin
 36748 ;;		_atan
 36749 ;; This function uses a non-reentrant model
 36750 ;;
 36751                           
 36752                           	psect	text113
 36753  018D54                     __ptext113:
 36754                           	opt stack 0
 36755  018D54                     _fabs:
 36756                           	opt stack 12
 36757                           
 36758                           ;incstack = 0
 36759  018D54  AE33               	btfss	fabs@d+3,7,c
 36760  018D56  D013               	goto	i2l1854
 36761  018D58  C030  F02C         	movff	fabs@d,i2___flneg@f1
 36762  018D5C  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 36763  018D60  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 36764  018D64  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 36765  018D68  ECAE  F0C7         	call	i2___flneg	;wreg free
 36766  018D6C  C02C  F030         	movff	?i2___flneg,?_fabs
 36767  018D70  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 36768  018D74  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 36769  018D78  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 36770  018D7C  0012               	return	
 36771  018D7E                     i2l1854:
 36772  018D7E  C030  F030         	movff	fabs@d,?_fabs
 36773  018D82  C031  F031         	movff	fabs@d+1,?_fabs+1
 36774  018D86  C032  F032         	movff	fabs@d+2,?_fabs+2
 36775  018D8A  C033  F033         	movff	fabs@d+3,?_fabs+3
 36776  018D8E  0012               	return		;funcret
 36777  018D90                     __end_of_fabs:
 36778                           	opt stack 0
 36779                           tosu	equ	0xFFF
 36780                           tosh	equ	0xFFE
 36781                           tosl	equ	0xFFD
 36782                           pclatu	equ	0xFFB
 36783                           pclath	equ	0xFFA
 36784                           tblptru	equ	0xFF8
 36785                           tblptrh	equ	0xFF7
 36786                           tblptrl	equ	0xFF6
 36787                           tablat	equ	0xFF5
 36788                           prodh	equ	0xFF4
 36789                           prodl	equ	0xFF3
 36790                           intcon	equ	0xFF2
 36791                           indf0	equ	0xFEF
 36792                           postinc0	equ	0xFEE
 36793                           fsr0h	equ	0xFEA
 36794                           fsr0l	equ	0xFE9
 36795                           wreg	equ	0xFE8
 36796                           indf1	equ	0xFE7
 36797                           postdec1	equ	0xFE5
 36798                           plusw1	equ	0xFE3
 36799                           fsr1h	equ	0xFE2
 36800                           fsr1l	equ	0xFE1
 36801                           bsr	equ	0xFE0
 36802                           indf2	equ	0xFDF
 36803                           postinc2	equ	0xFDE
 36804                           postdec2	equ	0xFDD
 36805                           plusw2	equ	0xFDB
 36806                           fsr2h	equ	0xFDA
 36807                           fsr2l	equ	0xFD9
 36808                           status	equ	0xFD8
 36809                           
 36810 ;; *************** function _currentMeasuredToPeak *****************
 36811 ;; Defined at:
 36812 ;;		line 139 in file "main.c"
 36813 ;; Parameters:    Size  Location     Type
 36814 ;;  Measured        4   57[BANK0 ] unsigned char 
 36815 ;;  Angle           4   61[BANK0 ] unsigned char 
 36816 ;; Auto vars:     Size  Location     Type
 36817 ;;  Peak            4   65[BANK0 ] unsigned char 
 36818 ;; Return value:  Size  Location     Type
 36819 ;;                  4   57[BANK0 ] unsigned char 
 36820 ;; Registers used:
 36821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36822 ;; Tracked objects:
 36823 ;;		On entry : 0/0
 36824 ;;		On exit  : 0/0
 36825 ;;		Unchanged: 0/0
 36826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36827 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36828 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36830 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36831 ;;Total ram usage:       12 bytes
 36832 ;; Hardware stack levels used:    1
 36833 ;; Hardware stack levels required when called:    3
 36834 ;; This function calls:
 36835 ;;		_sin
 36836 ;;		i2___fldiv
 36837 ;; This function is called by:
 36838 ;;		_ADCPostProcessingCallback
 36839 ;; This function uses a non-reentrant model
 36840 ;;
 36841                           
 36842                           	psect	text114
 36843  018380                     __ptext114:
 36844                           	opt stack 0
 36845  018380                     _currentMeasuredToPeak:
 36846                           	opt stack 13
 36847                           
 36848                           ;main.c: 142: double Peak = 0.0;
 36849                           
 36850                           ;incstack = 0
 36851  018380  0E00               	movlw	0
 36852  018382  0100               	movlb	0	; () banked
 36853  018384  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 36854  018386  0E00               	movlw	0
 36855  018388  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 36856  01838A  0E00               	movlw	0
 36857  01838C  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 36858  01838E  0E00               	movlw	0
 36859  018390  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 36860                           
 36861                           ; BSR set to: 0
 36862                           ;main.c: 145: Peak = sin(Angle);
 36863  018392  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 36864  018396  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 36865  01839A  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 36866  01839E  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 36867  0183A2  EC8F  F0AA         	call	_sin	;wreg free
 36868  0183A6  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 36869  0183AA  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 36870  0183AE  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 36871  0183B2  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 36872                           
 36873                           ;main.c: 146: Peak = Measured / Peak;
 36874  0183B6  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 36875  0183BA  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 36876  0183BE  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 36877  0183C2  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 36878  0183C6  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 36879  0183CA  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 36880  0183CE  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 36881  0183D2  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 36882  0183D6  EC2E  F0B0         	call	i2___fldiv	;wreg free
 36883  0183DA  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 36884  0183DE  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 36885  0183E2  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 36886  0183E6  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 36887                           
 36888                           ;main.c: 147: return Peak;
 36889  0183EA  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 36890  0183EE  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 36891  0183F2  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 36892  0183F6  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 36893  0183FA  0012               	return	
 36894  0183FC                     __end_of_currentMeasuredToPeak:
 36895                           	opt stack 0
 36896                           tosu	equ	0xFFF
 36897                           tosh	equ	0xFFE
 36898                           tosl	equ	0xFFD
 36899                           pclatu	equ	0xFFB
 36900                           pclath	equ	0xFFA
 36901                           tblptru	equ	0xFF8
 36902                           tblptrh	equ	0xFF7
 36903                           tblptrl	equ	0xFF6
 36904                           tablat	equ	0xFF5
 36905                           prodh	equ	0xFF4
 36906                           prodl	equ	0xFF3
 36907                           intcon	equ	0xFF2
 36908                           indf0	equ	0xFEF
 36909                           postinc0	equ	0xFEE
 36910                           fsr0h	equ	0xFEA
 36911                           fsr0l	equ	0xFE9
 36912                           wreg	equ	0xFE8
 36913                           indf1	equ	0xFE7
 36914                           postdec1	equ	0xFE5
 36915                           plusw1	equ	0xFE3
 36916                           fsr1h	equ	0xFE2
 36917                           fsr1l	equ	0xFE1
 36918                           bsr	equ	0xFE0
 36919                           indf2	equ	0xFDF
 36920                           postinc2	equ	0xFDE
 36921                           postdec2	equ	0xFDD
 36922                           plusw2	equ	0xFDB
 36923                           fsr2h	equ	0xFDA
 36924                           fsr2l	equ	0xFD9
 36925                           status	equ	0xFD8
 36926                           
 36927 ;; *************** function _sin *****************
 36928 ;; Defined at:
 36929 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 36930 ;; Parameters:    Size  Location     Type
 36931 ;;  f               4   40[BANK0 ] unsigned char 
 36932 ;; Auto vars:     Size  Location     Type
 36933 ;;  x2              4   52[BANK0 ] unsigned char 
 36934 ;;  y               4   44[BANK0 ] unsigned char 
 36935 ;;  sgn             1   56[BANK0 ] unsigned char 
 36936 ;; Return value:  Size  Location     Type
 36937 ;;                  4   40[BANK0 ] unsigned char 
 36938 ;; Registers used:
 36939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36940 ;; Tracked objects:
 36941 ;;		On entry : 0/0
 36942 ;;		On exit  : 0/0
 36943 ;;		Unchanged: 0/0
 36944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36946 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36948 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36949 ;;Total ram usage:       17 bytes
 36950 ;; Hardware stack levels used:    1
 36951 ;; Hardware stack levels required when called:    2
 36952 ;; This function calls:
 36953 ;;		_eval_poly
 36954 ;;		_floor
 36955 ;;		i2___fladd
 36956 ;;		i2___fldiv
 36957 ;;		i2___flge
 36958 ;;		i2___flmul
 36959 ;;		i2___flneg
 36960 ;;		i2___flsub
 36961 ;; This function is called by:
 36962 ;;		_peakToRMS
 36963 ;;		_currentMeasuredToPeak
 36964 ;; This function uses a non-reentrant model
 36965 ;;
 36966                           
 36967                           	psect	text115
 36968  01551E                     __ptext115:
 36969                           	opt stack 0
 36970  01551E                     _sin:
 36971                           	opt stack 13
 36972                           
 36973                           ;incstack = 0
 36974  01551E  0E00               	movlw	0
 36975  015520  0100               	movlb	0	; () banked
 36976  015522  6F98               	movwf	sin@sgn& (0+255),b
 36977                           
 36978                           ; BSR set to: 0
 36979  015524  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 36980  015526  D015               	goto	i2l2137
 36981                           
 36982                           ; BSR set to: 0
 36983  015528  C088  F02C         	movff	sin@f,i2___flneg@f1
 36984  01552C  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 36985  015530  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 36986  015534  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 36987  015538  ECAE  F0C7         	call	i2___flneg	;wreg free
 36988  01553C  C02C  F088         	movff	?i2___flneg,sin@f
 36989  015540  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 36990  015544  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 36991  015548  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 36992  01554C  0E01               	movlw	1
 36993  01554E  0100               	movlb	0	; () banked
 36994  015550  6F98               	movwf	sin@sgn& (0+255),b
 36995  015552                     i2l2137:
 36996                           
 36997                           ; BSR set to: 0
 36998                           
 36999                           ; BSR set to: 0
 37000  015552  C088  F030         	movff	sin@f,i2___flmul@b
 37001  015556  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 37002  01555A  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 37003  01555E  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 37004  015562  0E83               	movlw	131
 37005  015564  6E34               	movwf	i2___flmul@a,c
 37006  015566  0EF9               	movlw	249
 37007  015568  6E35               	movwf	i2___flmul@a+1,c
 37008  01556A  0E22               	movlw	34
 37009  01556C  6E36               	movwf	i2___flmul@a+2,c
 37010  01556E  0E3E               	movlw	62
 37011  015570  6E37               	movwf	i2___flmul@a+3,c
 37012  015572  EC27  F0A4         	call	i2___flmul	;wreg free
 37013  015576  C030  F088         	movff	?i2___flmul,sin@f
 37014  01557A  C031  F089         	movff	?i2___flmul+1,sin@f+1
 37015  01557E  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 37016  015582  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 37017  015586  C088  F080         	movff	sin@f,i2___flsub@b
 37018  01558A  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 37019  01558E  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 37020  015592  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 37021  015596  C088  F076         	movff	sin@f,floor@x
 37022  01559A  C089  F077         	movff	sin@f+1,floor@x+1
 37023  01559E  C08A  F078         	movff	sin@f+2,floor@x+2
 37024  0155A2  C08B  F079         	movff	sin@f+3,floor@x+3
 37025  0155A6  ECB3  F0BB         	call	_floor	;wreg free
 37026  0155AA  C076  F084         	movff	?_floor,i2___flsub@a
 37027  0155AE  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 37028  0155B2  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 37029  0155B6  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 37030  0155BA  ECE6  F0C5         	call	i2___flsub	;wreg free
 37031  0155BE  C080  F088         	movff	?i2___flsub,sin@f
 37032  0155C2  C081  F089         	movff	?i2___flsub+1,sin@f+1
 37033  0155C6  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 37034  0155CA  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 37035  0155CE  C088  F030         	movff	sin@f,i2___flmul@b
 37036  0155D2  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 37037  0155D6  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 37038  0155DA  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 37039  0155DE  0E00               	movlw	0
 37040  0155E0  6E34               	movwf	i2___flmul@a,c
 37041  0155E2  0E00               	movlw	0
 37042  0155E4  6E35               	movwf	i2___flmul@a+1,c
 37043  0155E6  0E80               	movlw	128
 37044  0155E8  6E36               	movwf	i2___flmul@a+2,c
 37045  0155EA  0E40               	movlw	64
 37046  0155EC  6E37               	movwf	i2___flmul@a+3,c
 37047  0155EE  EC27  F0A4         	call	i2___flmul	;wreg free
 37048  0155F2  C030  F088         	movff	?i2___flmul,sin@f
 37049  0155F6  C031  F089         	movff	?i2___flmul+1,sin@f+1
 37050  0155FA  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 37051  0155FE  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 37052  015602  0E00               	movlw	0
 37053  015604  6E34               	movwf	i2___flge@ff1,c
 37054  015606  0E00               	movlw	0
 37055  015608  6E35               	movwf	i2___flge@ff1+1,c
 37056  01560A  0E00               	movlw	0
 37057  01560C  6E36               	movwf	i2___flge@ff1+2,c
 37058  01560E  0E40               	movlw	64
 37059  015610  6E37               	movwf	i2___flge@ff1+3,c
 37060  015612  C088  F038         	movff	sin@f,i2___flge@ff2
 37061  015616  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 37062  01561A  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 37063  01561E  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 37064  015622  EC23  F0BB         	call	i2___flge	;wreg free
 37065  015626  B0D8               	btfsc	status,0,c
 37066  015628  D023               	goto	i2l2138
 37067  01562A  C088  F080         	movff	sin@f,i2___flsub@b
 37068  01562E  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 37069  015632  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 37070  015636  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 37071  01563A  0E00               	movlw	0
 37072  01563C  0100               	movlb	0	; () banked
 37073  01563E  6F84               	movwf	i2___flsub@a& (0+255),b
 37074  015640  0E00               	movlw	0
 37075  015642  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 37076  015644  0E00               	movlw	0
 37077  015646  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 37078  015648  0E40               	movlw	64
 37079  01564A  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 37080  01564C  ECE6  F0C5         	call	i2___flsub	;wreg free
 37081  015650  C080  F088         	movff	?i2___flsub,sin@f
 37082  015654  C081  F089         	movff	?i2___flsub+1,sin@f+1
 37083  015658  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 37084  01565C  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 37085  015660  0100               	movlb	0	; () banked
 37086  015662  5198               	movf	sin@sgn& (0+255),w,b
 37087  015664  A4D8               	btfss	status,2,c
 37088  015666  D002               	goto	i2u1666_40
 37089  015668  0E01               	movlw	1
 37090  01566A  D001               	goto	i2u1667_40
 37091  01566C                     i2u1666_40:
 37092  01566C  0E00               	movlw	0
 37093  01566E                     i2u1667_40:
 37094  01566E  6F98               	movwf	sin@sgn& (0+255),b
 37095  015670                     i2l2138:
 37096                           
 37097                           ; BSR set to: 0
 37098  015670  0E00               	movlw	0
 37099  015672  6E34               	movwf	i2___flge@ff1,c
 37100  015674  0E00               	movlw	0
 37101  015676  6E35               	movwf	i2___flge@ff1+1,c
 37102  015678  0E80               	movlw	128
 37103  01567A  6E36               	movwf	i2___flge@ff1+2,c
 37104  01567C  0E3F               	movlw	63
 37105  01567E  6E37               	movwf	i2___flge@ff1+3,c
 37106  015680  C088  F038         	movff	sin@f,i2___flge@ff2
 37107  015684  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 37108  015688  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 37109  01568C  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 37110  015690  EC23  F0BB         	call	i2___flge	;wreg free
 37111  015694  B0D8               	btfsc	status,0,c
 37112  015696  D024               	goto	i2l2139
 37113  015698  C088  F02C         	movff	sin@f,i2___flneg@f1
 37114  01569C  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 37115  0156A0  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 37116  0156A4  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 37117  0156A8  ECAE  F0C7         	call	i2___flneg	;wreg free
 37118  0156AC  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 37119  0156B0  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 37120  0156B4  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 37121  0156B8  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 37122  0156BC  0E00               	movlw	0
 37123  0156BE  6E5A               	movwf	i2___fladd@a,c
 37124  0156C0  0E00               	movlw	0
 37125  0156C2  6E5B               	movwf	i2___fladd@a+1,c
 37126  0156C4  0E00               	movlw	0
 37127  0156C6  6E5C               	movwf	i2___fladd@a+2,c
 37128  0156C8  0E40               	movlw	64
 37129  0156CA  6E5D               	movwf	i2___fladd@a+3,c
 37130  0156CC  EC6E  F0A7         	call	i2___fladd	;wreg free
 37131  0156D0  C056  F088         	movff	?i2___fladd,sin@f
 37132  0156D4  C057  F089         	movff	?i2___fladd+1,sin@f+1
 37133  0156D8  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 37134  0156DC  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 37135  0156E0                     i2l2139:
 37136  0156E0  C088  F030         	movff	sin@f,i2___flmul@b
 37137  0156E4  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 37138  0156E8  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 37139  0156EC  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 37140  0156F0  C088  F034         	movff	sin@f,i2___flmul@a
 37141  0156F4  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 37142  0156F8  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 37143  0156FC  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 37144  015700  EC27  F0A4         	call	i2___flmul	;wreg free
 37145  015704  C030  F094         	movff	?i2___flmul,sin@x2
 37146  015708  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 37147  01570C  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 37148  015710  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 37149  015714  C094  F06C         	movff	sin@x2,eval_poly@x
 37150  015718  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 37151  01571C  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 37152  015720  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 37153  015724  0ECF               	movlw	low sin@coeff_b
 37154  015726  0100               	movlb	0	; () banked
 37155  015728  6F70               	movwf	eval_poly@d& (0+255),b
 37156  01572A  0EE4               	movlw	high sin@coeff_b
 37157  01572C  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 37158  01572E  0E00               	movlw	0
 37159  015730  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 37160  015732  0E03               	movlw	3
 37161  015734  6F72               	movwf	eval_poly@n& (0+255),b
 37162  015736  ECC1  F0BC         	call	_eval_poly	;wreg free
 37163  01573A  C06C  F08C         	movff	?_eval_poly,sin@y
 37164  01573E  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 37165  015742  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 37166  015746  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 37167  01574A  C08C  F017         	movff	sin@y,i2___fldiv@a
 37168  01574E  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 37169  015752  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 37170  015756  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 37171  01575A  0E00               	movlw	0
 37172  01575C  0100               	movlb	0	; () banked
 37173  01575E  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 37174  015760  0E04               	movlw	4
 37175  015762  6F72               	movwf	eval_poly@n& (0+255),b
 37176  015764  0EA7               	movlw	low sin@coeff_a
 37177  015766  6F70               	movwf	eval_poly@d& (0+255),b
 37178  015768  0EE4               	movlw	high sin@coeff_a
 37179  01576A  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 37180  01576C  C094  F06C         	movff	sin@x2,eval_poly@x
 37181  015770  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 37182  015774  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 37183  015778  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 37184  01577C  ECC1  F0BC         	call	_eval_poly	;wreg free
 37185  015780  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 37186  015784  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 37187  015788  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 37188  01578C  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 37189  015790  EC2E  F0B0         	call	i2___fldiv	;wreg free
 37190  015794  C013  F090         	movff	?i2___fldiv,_sin$4182
 37191  015798  C014  F091         	movff	?i2___fldiv+1,_sin$4182+1
 37192  01579C  C015  F092         	movff	?i2___fldiv+2,_sin$4182+2
 37193  0157A0  C016  F093         	movff	?i2___fldiv+3,_sin$4182+3
 37194  0157A4  C088  F030         	movff	sin@f,i2___flmul@b
 37195  0157A8  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 37196  0157AC  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 37197  0157B0  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 37198  0157B4  C090  F034         	movff	_sin$4182,i2___flmul@a
 37199  0157B8  C091  F035         	movff	_sin$4182+1,i2___flmul@a+1
 37200  0157BC  C092  F036         	movff	_sin$4182+2,i2___flmul@a+2
 37201  0157C0  C093  F037         	movff	_sin$4182+3,i2___flmul@a+3
 37202  0157C4  EC27  F0A4         	call	i2___flmul	;wreg free
 37203  0157C8  C030  F088         	movff	?i2___flmul,sin@f
 37204  0157CC  C031  F089         	movff	?i2___flmul+1,sin@f+1
 37205  0157D0  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 37206  0157D4  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 37207  0157D8  0100               	movlb	0	; () banked
 37208  0157DA  5198               	movf	sin@sgn& (0+255),w,b
 37209  0157DC  B4D8               	btfsc	status,2,c
 37210  0157DE  D013               	goto	i2l2140
 37211                           
 37212                           ; BSR set to: 0
 37213  0157E0  C088  F02C         	movff	sin@f,i2___flneg@f1
 37214  0157E4  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 37215  0157E8  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 37216  0157EC  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 37217  0157F0  ECAE  F0C7         	call	i2___flneg	;wreg free
 37218  0157F4  C02C  F088         	movff	?i2___flneg,?_sin
 37219  0157F8  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 37220  0157FC  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 37221  015800  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 37222  015804  0012               	return	
 37223  015806                     i2l2140:
 37224                           
 37225                           ; BSR set to: 0
 37226  015806  C088  F088         	movff	sin@f,?_sin
 37227  01580A  C089  F089         	movff	sin@f+1,?_sin+1
 37228  01580E  C08A  F08A         	movff	sin@f+2,?_sin+2
 37229  015812  C08B  F08B         	movff	sin@f+3,?_sin+3
 37230  015816  0012               	return		;funcret
 37231  015818                     __end_of_sin:
 37232                           	opt stack 0
 37233                           tosu	equ	0xFFF
 37234                           tosh	equ	0xFFE
 37235                           tosl	equ	0xFFD
 37236                           pclatu	equ	0xFFB
 37237                           pclath	equ	0xFFA
 37238                           tblptru	equ	0xFF8
 37239                           tblptrh	equ	0xFF7
 37240                           tblptrl	equ	0xFF6
 37241                           tablat	equ	0xFF5
 37242                           prodh	equ	0xFF4
 37243                           prodl	equ	0xFF3
 37244                           intcon	equ	0xFF2
 37245                           indf0	equ	0xFEF
 37246                           postinc0	equ	0xFEE
 37247                           fsr0h	equ	0xFEA
 37248                           fsr0l	equ	0xFE9
 37249                           wreg	equ	0xFE8
 37250                           indf1	equ	0xFE7
 37251                           postdec1	equ	0xFE5
 37252                           plusw1	equ	0xFE3
 37253                           fsr1h	equ	0xFE2
 37254                           fsr1l	equ	0xFE1
 37255                           bsr	equ	0xFE0
 37256                           indf2	equ	0xFDF
 37257                           postinc2	equ	0xFDE
 37258                           postdec2	equ	0xFDD
 37259                           plusw2	equ	0xFDB
 37260                           fsr2h	equ	0xFDA
 37261                           fsr2l	equ	0xFD9
 37262                           status	equ	0xFD8
 37263                           
 37264 ;; *************** function i2___flsub *****************
 37265 ;; Defined at:
 37266 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 37267 ;; Parameters:    Size  Location     Type
 37268 ;;  b               4   32[BANK0 ] unsigned char 
 37269 ;;  a               4   36[BANK0 ] unsigned char 
 37270 ;; Auto vars:     Size  Location     Type
 37271 ;;		None
 37272 ;; Return value:  Size  Location     Type
 37273 ;;                  4   32[BANK0 ] unsigned char 
 37274 ;; Registers used:
 37275 ;;		wreg, status,2, status,0, cstack
 37276 ;; Tracked objects:
 37277 ;;		On entry : 0/0
 37278 ;;		On exit  : 0/0
 37279 ;;		Unchanged: 0/0
 37280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37281 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37284 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37285 ;;Total ram usage:        8 bytes
 37286 ;; Hardware stack levels used:    1
 37287 ;; Hardware stack levels required when called:    1
 37288 ;; This function calls:
 37289 ;;		i2___fladd
 37290 ;; This function is called by:
 37291 ;;		_sin
 37292 ;;		i2_printf
 37293 ;; This function uses a non-reentrant model
 37294 ;;
 37295                           
 37296                           	psect	text116
 37297  018BCC                     __ptext116:
 37298                           	opt stack 0
 37299  018BCC                     i2___flsub:
 37300                           	opt stack 15
 37301                           
 37302                           ;incstack = 0
 37303  018BCC  0E00               	movlw	0
 37304  018BCE  0100               	movlb	0	; () banked
 37305  018BD0  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 37306  018BD2  0E00               	movlw	0
 37307  018BD4  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 37308  018BD6  0E00               	movlw	0
 37309  018BD8  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 37310  018BDA  0E80               	movlw	128
 37311  018BDC  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 37312                           
 37313                           ; BSR set to: 0
 37314  018BDE  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 37315  018BE2  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 37316  018BE6  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 37317  018BEA  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 37318  018BEE  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 37319  018BF2  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 37320  018BF6  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 37321  018BFA  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 37322  018BFE  EC6E  F0A7         	call	i2___fladd	;wreg free
 37323  018C02  C056  F080         	movff	?i2___fladd,?i2___flsub
 37324  018C06  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 37325  018C0A  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 37326  018C0E  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 37327  018C12  0012               	return	
 37328  018C14                     __end_ofi2___flsub:
 37329                           	opt stack 0
 37330                           tosu	equ	0xFFF
 37331                           tosh	equ	0xFFE
 37332                           tosl	equ	0xFFD
 37333                           pclatu	equ	0xFFB
 37334                           pclath	equ	0xFFA
 37335                           tblptru	equ	0xFF8
 37336                           tblptrh	equ	0xFF7
 37337                           tblptrl	equ	0xFF6
 37338                           tablat	equ	0xFF5
 37339                           prodh	equ	0xFF4
 37340                           prodl	equ	0xFF3
 37341                           intcon	equ	0xFF2
 37342                           indf0	equ	0xFEF
 37343                           postinc0	equ	0xFEE
 37344                           fsr0h	equ	0xFEA
 37345                           fsr0l	equ	0xFE9
 37346                           wreg	equ	0xFE8
 37347                           indf1	equ	0xFE7
 37348                           postdec1	equ	0xFE5
 37349                           plusw1	equ	0xFE3
 37350                           fsr1h	equ	0xFE2
 37351                           fsr1l	equ	0xFE1
 37352                           bsr	equ	0xFE0
 37353                           indf2	equ	0xFDF
 37354                           postinc2	equ	0xFDE
 37355                           postdec2	equ	0xFDD
 37356                           plusw2	equ	0xFDB
 37357                           fsr2h	equ	0xFDA
 37358                           fsr2l	equ	0xFD9
 37359                           status	equ	0xFD8
 37360                           
 37361 ;; *************** function i2___flneg *****************
 37362 ;; Defined at:
 37363 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 37364 ;; Parameters:    Size  Location     Type
 37365 ;;  f1              4   43[COMRAM] unsigned char 
 37366 ;; Auto vars:     Size  Location     Type
 37367 ;;		None
 37368 ;; Return value:  Size  Location     Type
 37369 ;;                  4   43[COMRAM] unsigned char 
 37370 ;; Registers used:
 37371 ;;		wreg, status,2, status,0
 37372 ;; Tracked objects:
 37373 ;;		On entry : 0/0
 37374 ;;		On exit  : 0/0
 37375 ;;		Unchanged: 0/0
 37376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37381 ;;Total ram usage:        4 bytes
 37382 ;; Hardware stack levels used:    1
 37383 ;; This function calls:
 37384 ;;		Nothing
 37385 ;; This function is called by:
 37386 ;;		_peakToRMS
 37387 ;;		_ADCPostProcessingCallback
 37388 ;;		_acos
 37389 ;;		_asin
 37390 ;;		_atan
 37391 ;;		_fabs
 37392 ;;		_sin
 37393 ;;		i2_printf
 37394 ;; This function uses a non-reentrant model
 37395 ;;
 37396                           
 37397                           	psect	text117
 37398  018F5C                     __ptext117:
 37399                           	opt stack 0
 37400  018F5C                     i2___flneg:
 37401                           	opt stack 16
 37402                           
 37403                           ;incstack = 0
 37404  018F5C  502C               	movf	i2___flneg@f1,w,c
 37405  018F5E  102D               	iorwf	i2___flneg@f1+1,w,c
 37406  018F60  102E               	iorwf	i2___flneg@f1+2,w,c
 37407  018F62  102F               	iorwf	i2___flneg@f1+3,w,c
 37408  018F64  B4D8               	btfsc	status,2,c
 37409  018F66  D008               	goto	i2l1882
 37410  018F68  0E00               	movlw	0
 37411  018F6A  1A2C               	xorwf	i2___flneg@f1,f,c
 37412  018F6C  0E00               	movlw	0
 37413  018F6E  1A2D               	xorwf	i2___flneg@f1+1,f,c
 37414  018F70  0E00               	movlw	0
 37415  018F72  1A2E               	xorwf	i2___flneg@f1+2,f,c
 37416  018F74  0E80               	movlw	128
 37417  018F76  1A2F               	xorwf	i2___flneg@f1+3,f,c
 37418  018F78                     i2l1882:
 37419  018F78  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 37420  018F7C  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 37421  018F80  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 37422  018F84  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 37423  018F88  0012               	return	
 37424  018F8A                     __end_ofi2___flneg:
 37425                           	opt stack 0
 37426                           tosu	equ	0xFFF
 37427                           tosh	equ	0xFFE
 37428                           tosl	equ	0xFFD
 37429                           pclatu	equ	0xFFB
 37430                           pclath	equ	0xFFA
 37431                           tblptru	equ	0xFF8
 37432                           tblptrh	equ	0xFF7
 37433                           tblptrl	equ	0xFF6
 37434                           tablat	equ	0xFF5
 37435                           prodh	equ	0xFF4
 37436                           prodl	equ	0xFF3
 37437                           intcon	equ	0xFF2
 37438                           indf0	equ	0xFEF
 37439                           postinc0	equ	0xFEE
 37440                           fsr0h	equ	0xFEA
 37441                           fsr0l	equ	0xFE9
 37442                           wreg	equ	0xFE8
 37443                           indf1	equ	0xFE7
 37444                           postdec1	equ	0xFE5
 37445                           plusw1	equ	0xFE3
 37446                           fsr1h	equ	0xFE2
 37447                           fsr1l	equ	0xFE1
 37448                           bsr	equ	0xFE0
 37449                           indf2	equ	0xFDF
 37450                           postinc2	equ	0xFDE
 37451                           postdec2	equ	0xFDD
 37452                           plusw2	equ	0xFDB
 37453                           fsr2h	equ	0xFDA
 37454                           fsr2l	equ	0xFD9
 37455                           status	equ	0xFD8
 37456                           
 37457 ;; *************** function i2___fldiv *****************
 37458 ;; Defined at:
 37459 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 37460 ;; Parameters:    Size  Location     Type
 37461 ;;  b               4   18[COMRAM] unsigned char 
 37462 ;;  a               4   22[COMRAM] unsigned char 
 37463 ;; Auto vars:     Size  Location     Type
 37464 ;;  __fldiv         4   37[COMRAM] unsigned long 
 37465 ;;  __fldiv         4   31[COMRAM] unsigned long 
 37466 ;;  __fldiv         2   35[COMRAM] int 
 37467 ;;  __fldiv         1   42[COMRAM] unsigned char 
 37468 ;;  __fldiv         1   41[COMRAM] unsigned char 
 37469 ;;  __fldiv         1   30[COMRAM] unsigned char 
 37470 ;; Return value:  Size  Location     Type
 37471 ;;                  4   18[COMRAM] unsigned char 
 37472 ;; Registers used:
 37473 ;;		wreg, status,2, status,0
 37474 ;; Tracked objects:
 37475 ;;		On entry : 0/0
 37476 ;;		On exit  : 0/0
 37477 ;;		Unchanged: 0/0
 37478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37479 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37480 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37481 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37482 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37483 ;;Total ram usage:       25 bytes
 37484 ;; Hardware stack levels used:    1
 37485 ;; This function calls:
 37486 ;;		Nothing
 37487 ;; This function is called by:
 37488 ;;		_peakToRMS
 37489 ;;		_currentMeasuredToPeak
 37490 ;;		_ADCPostProcessingCallback
 37491 ;;		_asin
 37492 ;;		_atan
 37493 ;;		_sin
 37494 ;; This function uses a non-reentrant model
 37495 ;;
 37496                           
 37497                           	psect	text118
 37498  01605C                     __ptext118:
 37499                           	opt stack 0
 37500  01605C                     i2___fldiv:
 37501                           	opt stack 16
 37502                           
 37503                           ;incstack = 0
 37504  01605C  5016               	movf	i2___fldiv@b+3,w,c
 37505  01605E  0B80               	andlw	128
 37506  016060  6E1F               	movwf	i2___fldiv@sign,c
 37507  016062  5016               	movf	i2___fldiv@b+3,w,c
 37508  016064  2416               	addwf	i2___fldiv@b+3,w,c
 37509  016066  6E2A               	movwf	i2___fldiv@bexp,c
 37510  016068  BE15               	btfsc	i2___fldiv@b+2,7,c
 37511  01606A  802A               	bsf	i2___fldiv@bexp,0,c
 37512  01606C  502A               	movf	i2___fldiv@bexp,w,c
 37513  01606E  B4D8               	btfsc	status,2,c
 37514  016070  D00D               	goto	i2l2202
 37515  016072  282A               	incf	i2___fldiv@bexp,w,c
 37516  016074  A4D8               	btfss	status,2,c
 37517  016076  D008               	goto	i2l2203
 37518  016078  0E00               	movlw	0
 37519  01607A  6E13               	movwf	i2___fldiv@b,c
 37520  01607C  0E00               	movlw	0
 37521  01607E  6E14               	movwf	i2___fldiv@b+1,c
 37522  016080  0E00               	movlw	0
 37523  016082  6E15               	movwf	i2___fldiv@b+2,c
 37524  016084  0E00               	movlw	0
 37525  016086  6E16               	movwf	i2___fldiv@b+3,c
 37526  016088                     i2l2203:
 37527  016088  8E15               	bsf	i2___fldiv@b+2,7,c
 37528  01608A  D006               	goto	L19
 37529  01608C                     i2l2202:
 37530  01608C  0E00               	movlw	0
 37531  01608E  6E13               	movwf	i2___fldiv@b,c
 37532  016090  0E00               	movlw	0
 37533  016092  6E14               	movwf	i2___fldiv@b+1,c
 37534  016094  0E00               	movlw	0
 37535  016096  6E15               	movwf	i2___fldiv@b+2,c
 37536  016098                     L19:
 37537  016098  0E00               	movlw	0
 37538  01609A  6E16               	movwf	i2___fldiv@b+3,c
 37539  01609C  501A               	movf	i2___fldiv@a+3,w,c
 37540  01609E  0B80               	andlw	128
 37541  0160A0  1A1F               	xorwf	i2___fldiv@sign,f,c
 37542  0160A2  501A               	movf	i2___fldiv@a+3,w,c
 37543  0160A4  241A               	addwf	i2___fldiv@a+3,w,c
 37544  0160A6  6E2B               	movwf	i2___fldiv@aexp,c
 37545  0160A8  BE19               	btfsc	i2___fldiv@a+2,7,c
 37546  0160AA  802B               	bsf	i2___fldiv@aexp,0,c
 37547  0160AC  502B               	movf	i2___fldiv@aexp,w,c
 37548  0160AE  B4D8               	btfsc	status,2,c
 37549  0160B0  D00D               	goto	i2l2206
 37550  0160B2  282B               	incf	i2___fldiv@aexp,w,c
 37551  0160B4  A4D8               	btfss	status,2,c
 37552  0160B6  D008               	goto	i2l2207
 37553  0160B8  0E00               	movlw	0
 37554  0160BA  6E17               	movwf	i2___fldiv@a,c
 37555  0160BC  0E00               	movlw	0
 37556  0160BE  6E18               	movwf	i2___fldiv@a+1,c
 37557  0160C0  0E00               	movlw	0
 37558  0160C2  6E19               	movwf	i2___fldiv@a+2,c
 37559  0160C4  0E00               	movlw	0
 37560  0160C6  6E1A               	movwf	i2___fldiv@a+3,c
 37561  0160C8                     i2l2207:
 37562  0160C8  8E19               	bsf	i2___fldiv@a+2,7,c
 37563  0160CA  D006               	goto	L20
 37564  0160CC                     i2l2206:
 37565  0160CC  0E00               	movlw	0
 37566  0160CE  6E17               	movwf	i2___fldiv@a,c
 37567  0160D0  0E00               	movlw	0
 37568  0160D2  6E18               	movwf	i2___fldiv@a+1,c
 37569  0160D4  0E00               	movlw	0
 37570  0160D6  6E19               	movwf	i2___fldiv@a+2,c
 37571  0160D8                     L20:
 37572  0160D8  0E00               	movlw	0
 37573  0160DA  6E1A               	movwf	i2___fldiv@a+3,c
 37574  0160DC  5017               	movf	i2___fldiv@a,w,c
 37575  0160DE  1018               	iorwf	i2___fldiv@a+1,w,c
 37576  0160E0  1019               	iorwf	i2___fldiv@a+2,w,c
 37577  0160E2  101A               	iorwf	i2___fldiv@a+3,w,c
 37578  0160E4  A4D8               	btfss	status,2,c
 37579  0160E6  D015               	goto	i2l2209
 37580  0160E8  0E00               	movlw	0
 37581  0160EA  6E13               	movwf	i2___fldiv@b,c
 37582  0160EC  0E00               	movlw	0
 37583  0160EE  6E14               	movwf	i2___fldiv@b+1,c
 37584  0160F0  0E00               	movlw	0
 37585  0160F2  6E15               	movwf	i2___fldiv@b+2,c
 37586  0160F4  0E00               	movlw	0
 37587  0160F6  6E16               	movwf	i2___fldiv@b+3,c
 37588  0160F8  0E80               	movlw	128
 37589  0160FA  1215               	iorwf	i2___fldiv@b+2,f,c
 37590  0160FC  0E7F               	movlw	127
 37591  0160FE  1216               	iorwf	i2___fldiv@b+3,f,c
 37592  016100  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 37593  016104  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 37594  016108  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 37595  01610C  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 37596  016110  0012               	return	
 37597  016112                     i2l2209:
 37598  016112  502A               	movf	i2___fldiv@bexp,w,c
 37599  016114  A4D8               	btfss	status,2,c
 37600  016116  D011               	goto	i2l2211
 37601  016118  0E00               	movlw	0
 37602  01611A  6E13               	movwf	i2___fldiv@b,c
 37603  01611C  0E00               	movlw	0
 37604  01611E  6E14               	movwf	i2___fldiv@b+1,c
 37605  016120  0E00               	movlw	0
 37606  016122  6E15               	movwf	i2___fldiv@b+2,c
 37607  016124  0E00               	movlw	0
 37608  016126  6E16               	movwf	i2___fldiv@b+3,c
 37609  016128  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 37610  01612C  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 37611  016130  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 37612  016134  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 37613  016138  0012               	return	
 37614  01613A                     i2l2211:
 37615  01613A  502B               	movf	i2___fldiv@aexp,w,c
 37616  01613C  6E1B               	movwf	??i2___fldiv& (0+255),c
 37617  01613E  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 37618  016140  1E1B               	comf	??i2___fldiv,f,c
 37619  016142  1E1C               	comf	??i2___fldiv+1,f,c
 37620  016144  4A1B               	infsnz	??i2___fldiv,f,c
 37621  016146  2A1C               	incf	??i2___fldiv+1,f,c
 37622  016148  502A               	movf	i2___fldiv@bexp,w,c
 37623  01614A  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 37624  01614C  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 37625  01614E  501B               	movf	??i2___fldiv,w,c
 37626  016150  261D               	addwf	??i2___fldiv+2,f,c
 37627  016152  501C               	movf	??i2___fldiv+1,w,c
 37628  016154  221E               	addwfc	??i2___fldiv+3,f,c
 37629  016156  0E7F               	movlw	127
 37630  016158  241D               	addwf	??i2___fldiv+2,w,c
 37631  01615A  6E24               	movwf	i2___fldiv@new_exp,c
 37632  01615C  0E00               	movlw	0
 37633  01615E  201E               	addwfc	??i2___fldiv+3,w,c
 37634  016160  6E25               	movwf	i2___fldiv@new_exp+1,c
 37635  016162  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 37636  016166  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 37637  01616A  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 37638  01616E  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 37639  016172  0E00               	movlw	0
 37640  016174  6E13               	movwf	i2___fldiv@b,c
 37641  016176  0E00               	movlw	0
 37642  016178  6E14               	movwf	i2___fldiv@b+1,c
 37643  01617A  0E00               	movlw	0
 37644  01617C  6E15               	movwf	i2___fldiv@b+2,c
 37645  01617E  0E00               	movlw	0
 37646  016180  6E16               	movwf	i2___fldiv@b+3,c
 37647  016182  0E00               	movlw	0
 37648  016184  6E26               	movwf	i2___fldiv@grs,c
 37649  016186  0E00               	movlw	0
 37650  016188  6E27               	movwf	i2___fldiv@grs+1,c
 37651  01618A  0E00               	movlw	0
 37652  01618C  6E28               	movwf	i2___fldiv@grs+2,c
 37653  01618E  0E00               	movlw	0
 37654  016190  6E29               	movwf	i2___fldiv@grs+3,c
 37655  016192  0E00               	movlw	0
 37656  016194  6E2B               	movwf	i2___fldiv@aexp,c
 37657  016196  D028               	goto	i2l2212
 37658  016198  502B               	movf	i2___fldiv@aexp,w,c
 37659  01619A  B4D8               	btfsc	status,2,c
 37660  01619C  D011               	goto	i2l2214
 37661  01619E  90D8               	bcf	status,0,c
 37662  0161A0  3620               	rlcf	i2___fldiv@rem,f,c
 37663  0161A2  3621               	rlcf	i2___fldiv@rem+1,f,c
 37664  0161A4  3622               	rlcf	i2___fldiv@rem+2,f,c
 37665  0161A6  3623               	rlcf	i2___fldiv@rem+3,f,c
 37666  0161A8  90D8               	bcf	status,0,c
 37667  0161AA  3613               	rlcf	i2___fldiv@b,f,c
 37668  0161AC  3614               	rlcf	i2___fldiv@b+1,f,c
 37669  0161AE  3615               	rlcf	i2___fldiv@b+2,f,c
 37670  0161B0  3616               	rlcf	i2___fldiv@b+3,f,c
 37671  0161B2  BE29               	btfsc	i2___fldiv@grs+3,7,c
 37672  0161B4  8013               	bsf	i2___fldiv@b,0,c
 37673  0161B6  90D8               	bcf	status,0,c
 37674  0161B8  3626               	rlcf	i2___fldiv@grs,f,c
 37675  0161BA  3627               	rlcf	i2___fldiv@grs+1,f,c
 37676  0161BC  3628               	rlcf	i2___fldiv@grs+2,f,c
 37677  0161BE  3629               	rlcf	i2___fldiv@grs+3,f,c
 37678  0161C0                     i2l2214:
 37679  0161C0  5017               	movf	i2___fldiv@a,w,c
 37680  0161C2  5C20               	subwf	i2___fldiv@rem,w,c
 37681  0161C4  5018               	movf	i2___fldiv@a+1,w,c
 37682  0161C6  5821               	subwfb	i2___fldiv@rem+1,w,c
 37683  0161C8  5019               	movf	i2___fldiv@a+2,w,c
 37684  0161CA  5822               	subwfb	i2___fldiv@rem+2,w,c
 37685  0161CC  501A               	movf	i2___fldiv@a+3,w,c
 37686  0161CE  5823               	subwfb	i2___fldiv@rem+3,w,c
 37687  0161D0  A0D8               	btfss	status,0,c
 37688  0161D2  D009               	goto	i2l2216
 37689  0161D4  8C29               	bsf	i2___fldiv@grs+3,6,c
 37690  0161D6  5017               	movf	i2___fldiv@a,w,c
 37691  0161D8  5E20               	subwf	i2___fldiv@rem,f,c
 37692  0161DA  5018               	movf	i2___fldiv@a+1,w,c
 37693  0161DC  5A21               	subwfb	i2___fldiv@rem+1,f,c
 37694  0161DE  5019               	movf	i2___fldiv@a+2,w,c
 37695  0161E0  5A22               	subwfb	i2___fldiv@rem+2,f,c
 37696  0161E2  501A               	movf	i2___fldiv@a+3,w,c
 37697  0161E4  5A23               	subwfb	i2___fldiv@rem+3,f,c
 37698  0161E6                     i2l2216:
 37699  0161E6  2A2B               	incf	i2___fldiv@aexp,f,c
 37700  0161E8                     i2l2212:
 37701  0161E8  0E19               	movlw	25
 37702  0161EA  642B               	cpfsgt	i2___fldiv@aexp,c
 37703  0161EC  D7D5               	goto	i2l2213
 37704  0161EE  5020               	movf	i2___fldiv@rem,w,c
 37705  0161F0  1021               	iorwf	i2___fldiv@rem+1,w,c
 37706  0161F2  1022               	iorwf	i2___fldiv@rem+2,w,c
 37707  0161F4  1023               	iorwf	i2___fldiv@rem+3,w,c
 37708  0161F6  B4D8               	btfsc	status,2,c
 37709  0161F8  D011               	goto	i2l2219
 37710  0161FA  8026               	bsf	i2___fldiv@grs,0,c
 37711  0161FC  D00F               	goto	i2l2219
 37712  0161FE  90D8               	bcf	status,0,c
 37713  016200  3613               	rlcf	i2___fldiv@b,f,c
 37714  016202  3614               	rlcf	i2___fldiv@b+1,f,c
 37715  016204  3615               	rlcf	i2___fldiv@b+2,f,c
 37716  016206  3616               	rlcf	i2___fldiv@b+3,f,c
 37717  016208  BE29               	btfsc	i2___fldiv@grs+3,7,c
 37718  01620A  8013               	bsf	i2___fldiv@b,0,c
 37719  01620C  90D8               	bcf	status,0,c
 37720  01620E  3626               	rlcf	i2___fldiv@grs,f,c
 37721  016210  3627               	rlcf	i2___fldiv@grs+1,f,c
 37722  016212  3628               	rlcf	i2___fldiv@grs+2,f,c
 37723  016214  3629               	rlcf	i2___fldiv@grs+3,f,c
 37724  016216  0624               	decf	i2___fldiv@new_exp,f,c
 37725  016218  A0D8               	btfss	status,0,c
 37726  01621A  0625               	decf	i2___fldiv@new_exp+1,f,c
 37727  01621C                     i2l2219:
 37728  01621C  AE15               	btfss	i2___fldiv@b+2,7,c
 37729  01621E  D7EF               	goto	i2l2220
 37730  016220  0E00               	movlw	0
 37731  016222  6E2B               	movwf	i2___fldiv@aexp,c
 37732  016224  AE29               	btfss	i2___fldiv@grs+3,7,c
 37733  016226  D016               	goto	i2l2226
 37734  016228  0EFF               	movlw	255
 37735  01622A  1426               	andwf	i2___fldiv@grs,w,c
 37736  01622C  6E1B               	movwf	??i2___fldiv& (0+255),c
 37737  01622E  0EFF               	movlw	255
 37738  016230  1427               	andwf	i2___fldiv@grs+1,w,c
 37739  016232  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 37740  016234  0EFF               	movlw	255
 37741  016236  1428               	andwf	i2___fldiv@grs+2,w,c
 37742  016238  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 37743  01623A  0E7F               	movlw	127
 37744  01623C  1429               	andwf	i2___fldiv@grs+3,w,c
 37745  01623E  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 37746  016240  501B               	movf	??i2___fldiv,w,c
 37747  016242  101C               	iorwf	??i2___fldiv+1,w,c
 37748  016244  101D               	iorwf	??i2___fldiv+2,w,c
 37749  016246  101E               	iorwf	??i2___fldiv+3,w,c
 37750  016248  A4D8               	btfss	status,2,c
 37751  01624A  D002               	goto	i2u1476_40
 37752  01624C  A013               	btfss	i2___fldiv@b,0,c
 37753  01624E  D002               	goto	i2l2226
 37754  016250                     i2u1476_40:
 37755  016250  0E01               	movlw	1
 37756  016252  6E2B               	movwf	i2___fldiv@aexp,c
 37757  016254                     i2l2226:
 37758  016254  502B               	movf	i2___fldiv@aexp,w,c
 37759  016256  B4D8               	btfsc	status,2,c
 37760  016258  D01F               	goto	i2l2228
 37761  01625A  0E01               	movlw	1
 37762  01625C  2613               	addwf	i2___fldiv@b,f,c
 37763  01625E  0E00               	movlw	0
 37764  016260  2214               	addwfc	i2___fldiv@b+1,f,c
 37765  016262  2215               	addwfc	i2___fldiv@b+2,f,c
 37766  016264  2216               	addwfc	i2___fldiv@b+3,f,c
 37767  016266  A016               	btfss	i2___fldiv@b+3,0,c
 37768  016268  D017               	goto	i2l2228
 37769  01626A  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 37770  01626E  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 37771  016272  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 37772  016276  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 37773  01627A  341E               	rlcf	??i2___fldiv+3,w,c
 37774  01627C  321E               	rrcf	??i2___fldiv+3,f,c
 37775  01627E  321D               	rrcf	??i2___fldiv+2,f,c
 37776  016280  321C               	rrcf	??i2___fldiv+1,f,c
 37777  016282  321B               	rrcf	??i2___fldiv,f,c
 37778  016284  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 37779  016288  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 37780  01628C  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 37781  016290  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 37782  016294  4A24               	infsnz	i2___fldiv@new_exp,f,c
 37783  016296  2A25               	incf	i2___fldiv@new_exp+1,f,c
 37784  016298                     i2l2228:
 37785  016298  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 37786  01629A  D010               	goto	i2l2229
 37787  01629C  5025               	movf	i2___fldiv@new_exp+1,w,c
 37788  01629E  E103               	bnz	i2u1479_40
 37789  0162A0  2824               	incf	i2___fldiv@new_exp,w,c
 37790  0162A2  A0D8               	btfss	status,0,c
 37791  0162A4  D00B               	goto	i2l2229
 37792  0162A6                     i2u1479_40:
 37793  0162A6  0E00               	movlw	0
 37794  0162A8  6E25               	movwf	i2___fldiv@new_exp+1,c
 37795  0162AA  6824               	setf	i2___fldiv@new_exp,c
 37796  0162AC  0E00               	movlw	0
 37797  0162AE  6E13               	movwf	i2___fldiv@b,c
 37798  0162B0  0E00               	movlw	0
 37799  0162B2  6E14               	movwf	i2___fldiv@b+1,c
 37800  0162B4  0E00               	movlw	0
 37801  0162B6  6E15               	movwf	i2___fldiv@b+2,c
 37802  0162B8  0E00               	movlw	0
 37803  0162BA  6E16               	movwf	i2___fldiv@b+3,c
 37804  0162BC                     i2l2229:
 37805  0162BC  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 37806  0162BE  D005               	goto	i2u1480_40
 37807  0162C0  5025               	movf	i2___fldiv@new_exp+1,w,c
 37808  0162C2  E111               	bnz	i2l12202
 37809  0162C4  0424               	decf	i2___fldiv@new_exp,w,c
 37810  0162C6  B0D8               	btfsc	status,0,c
 37811  0162C8  D00E               	goto	i2l2230
 37812  0162CA                     i2u1480_40:
 37813  0162CA  0E00               	movlw	0
 37814  0162CC  6E25               	movwf	i2___fldiv@new_exp+1,c
 37815  0162CE  0E00               	movlw	0
 37816  0162D0  6E24               	movwf	i2___fldiv@new_exp,c
 37817  0162D2  0E00               	movlw	0
 37818  0162D4  6E13               	movwf	i2___fldiv@b,c
 37819  0162D6  0E00               	movlw	0
 37820  0162D8  6E14               	movwf	i2___fldiv@b+1,c
 37821  0162DA  0E00               	movlw	0
 37822  0162DC  6E15               	movwf	i2___fldiv@b+2,c
 37823  0162DE  0E00               	movlw	0
 37824  0162E0  6E16               	movwf	i2___fldiv@b+3,c
 37825  0162E2  0E00               	movlw	0
 37826  0162E4  6E1F               	movwf	i2___fldiv@sign,c
 37827  0162E6                     i2l2230:
 37828  0162E6                     i2l12202:
 37829  0162E6  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 37830  0162EA  A02A               	btfss	i2___fldiv@bexp,0,c
 37831  0162EC  D002               	goto	i2l2231
 37832  0162EE  8E15               	bsf	i2___fldiv@b+2,7,c
 37833  0162F0  D001               	goto	i2l2232
 37834  0162F2                     i2l2231:
 37835  0162F2  9E15               	bcf	i2___fldiv@b+2,7,c
 37836  0162F4                     i2l2232:
 37837  0162F4  90D8               	bcf	status,0,c
 37838  0162F6  302A               	rrcf	i2___fldiv@bexp,w,c
 37839  0162F8  6E16               	movwf	i2___fldiv@b+3,c
 37840  0162FA  501F               	movf	i2___fldiv@sign,w,c
 37841  0162FC  1216               	iorwf	i2___fldiv@b+3,f,c
 37842  0162FE  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 37843  016302  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 37844  016306  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 37845  01630A  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 37846  01630E  0012               	return	
 37847  016310                     __end_ofi2___fldiv:
 37848                           	opt stack 0
 37849                           tosu	equ	0xFFF
 37850                           tosh	equ	0xFFE
 37851                           tosl	equ	0xFFD
 37852                           pclatu	equ	0xFFB
 37853                           pclath	equ	0xFFA
 37854                           tblptru	equ	0xFF8
 37855                           tblptrh	equ	0xFF7
 37856                           tblptrl	equ	0xFF6
 37857                           tablat	equ	0xFF5
 37858                           prodh	equ	0xFF4
 37859                           prodl	equ	0xFF3
 37860                           intcon	equ	0xFF2
 37861                           indf0	equ	0xFEF
 37862                           postinc0	equ	0xFEE
 37863                           fsr0h	equ	0xFEA
 37864                           fsr0l	equ	0xFE9
 37865                           wreg	equ	0xFE8
 37866                           indf1	equ	0xFE7
 37867                           postdec1	equ	0xFE5
 37868                           plusw1	equ	0xFE3
 37869                           fsr1h	equ	0xFE2
 37870                           fsr1l	equ	0xFE1
 37871                           bsr	equ	0xFE0
 37872                           indf2	equ	0xFDF
 37873                           postinc2	equ	0xFDE
 37874                           postdec2	equ	0xFDD
 37875                           plusw2	equ	0xFDB
 37876                           fsr2h	equ	0xFDA
 37877                           fsr2l	equ	0xFD9
 37878                           status	equ	0xFD8
 37879                           
 37880 ;; *************** function _floor *****************
 37881 ;; Defined at:
 37882 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 37883 ;; Parameters:    Size  Location     Type
 37884 ;;  x               4   22[BANK0 ] unsigned char 
 37885 ;; Auto vars:     Size  Location     Type
 37886 ;;  i               4   26[BANK0 ] unsigned char 
 37887 ;;  expon           2   30[BANK0 ] int 
 37888 ;; Return value:  Size  Location     Type
 37889 ;;                  4   22[BANK0 ] int 
 37890 ;; Registers used:
 37891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37892 ;; Tracked objects:
 37893 ;;		On entry : 0/0
 37894 ;;		On exit  : 0/0
 37895 ;;		Unchanged: 0/0
 37896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37898 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37900 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37901 ;;Total ram usage:       10 bytes
 37902 ;; Hardware stack levels used:    1
 37903 ;; Hardware stack levels required when called:    1
 37904 ;; This function calls:
 37905 ;;		_frexp
 37906 ;;		i2___fladd
 37907 ;;		i2___flge
 37908 ;;		i2___fltol
 37909 ;;		i2___xxtofl
 37910 ;; This function is called by:
 37911 ;;		_sin
 37912 ;; This function uses a non-reentrant model
 37913 ;;
 37914                           
 37915                           	psect	text119
 37916  017766                     __ptext119:
 37917                           	opt stack 0
 37918  017766                     _floor:
 37919                           	opt stack 13
 37920                           
 37921                           ;incstack = 0
 37922  017766  C076  F001         	movff	floor@x,frexp@value
 37923  01776A  C077  F002         	movff	floor@x+1,frexp@value+1
 37924  01776E  C078  F003         	movff	floor@x+2,frexp@value+2
 37925  017772  C079  F004         	movff	floor@x+3,frexp@value+3
 37926  017776  0E7E               	movlw	low floor@expon
 37927  017778  6E05               	movwf	frexp@eptr,c
 37928  01777A  0E00               	movlw	high floor@expon
 37929  01777C  6E06               	movwf	frexp@eptr+1,c
 37930  01777E  ECFE  F0C1         	call	_frexp	;wreg free
 37931  017782  0100               	movlb	0	; () banked
 37932  017784  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 37933  017786  D014               	goto	i2l2359
 37934                           
 37935                           ; BSR set to: 0
 37936  017788  AF79               	btfss	(floor@x+3)& (0+255),7,b
 37937  01778A  D009               	goto	i2l2360
 37938                           
 37939                           ; BSR set to: 0
 37940  01778C  0E00               	movlw	0
 37941  01778E  6F76               	movwf	?_floor& (0+255),b
 37942  017790  0E00               	movlw	0
 37943  017792  6F77               	movwf	(?_floor+1)& (0+255),b
 37944  017794  0E80               	movlw	128
 37945  017796  6F78               	movwf	(?_floor+2)& (0+255),b
 37946  017798  0EBF               	movlw	191
 37947  01779A  6F79               	movwf	(?_floor+3)& (0+255),b
 37948                           
 37949                           ; BSR set to: 0
 37950  01779C  0012               	return	
 37951  01779E                     i2l2360:
 37952                           
 37953                           ; BSR set to: 0
 37954                           
 37955                           ; BSR set to: 0
 37956  01779E  0E00               	movlw	0
 37957  0177A0  6F76               	movwf	?_floor& (0+255),b
 37958  0177A2  0E00               	movlw	0
 37959  0177A4  6F77               	movwf	(?_floor+1)& (0+255),b
 37960  0177A6  0E00               	movlw	0
 37961  0177A8  6F78               	movwf	(?_floor+2)& (0+255),b
 37962  0177AA  0E00               	movlw	0
 37963  0177AC  6F79               	movwf	(?_floor+3)& (0+255),b
 37964                           
 37965                           ; BSR set to: 0
 37966  0177AE  0012               	return	
 37967  0177B0                     i2l2359:
 37968                           
 37969                           ; BSR set to: 0
 37970                           
 37971                           ; BSR set to: 0
 37972  0177B0  517F               	movf	(floor@expon+1)& (0+255),w,b
 37973  0177B2  E104               	bnz	i2u1660_40
 37974  0177B4  0E1D               	movlw	29
 37975  0177B6  5D7E               	subwf	floor@expon& (0+255),w,b
 37976  0177B8  A0D8               	btfss	status,0,c
 37977  0177BA  D009               	goto	i2l2362
 37978  0177BC                     i2u1660_40:
 37979                           
 37980                           ; BSR set to: 0
 37981  0177BC  C076  F076         	movff	floor@x,?_floor
 37982  0177C0  C077  F077         	movff	floor@x+1,?_floor+1
 37983  0177C4  C078  F078         	movff	floor@x+2,?_floor+2
 37984  0177C8  C079  F079         	movff	floor@x+3,?_floor+3
 37985  0177CC  0012               	return	
 37986  0177CE                     i2l2362:
 37987                           
 37988                           ; BSR set to: 0
 37989                           
 37990                           ; BSR set to: 0
 37991  0177CE  C076  F06C         	movff	floor@x,i2___fltol@f1
 37992  0177D2  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 37993  0177D6  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 37994  0177DA  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 37995  0177DE  ECB0  F0BD         	call	i2___fltol	;wreg free
 37996  0177E2  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 37997  0177E6  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 37998  0177EA  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 37999  0177EE  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 38000  0177F2  0E01               	movlw	1
 38001  0177F4  ECFC  F0B6         	call	i2___xxtofl
 38002  0177F8  C005  F07A         	movff	?i2___xxtofl,floor@i
 38003  0177FC  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 38004  017800  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 38005  017804  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 38006  017808  C076  F034         	movff	floor@x,i2___flge@ff1
 38007  01780C  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 38008  017810  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 38009  017814  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 38010  017818  C07A  F038         	movff	floor@i,i2___flge@ff2
 38011  01781C  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 38012  017820  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 38013  017824  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 38014  017828  EC23  F0BB         	call	i2___flge	;wreg free
 38015  01782C  B0D8               	btfsc	status,0,c
 38016  01782E  D01B               	goto	i2l2363
 38017  017830  C07A  F056         	movff	floor@i,i2___fladd@b
 38018  017834  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 38019  017838  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 38020  01783C  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 38021  017840  0E00               	movlw	0
 38022  017842  6E5A               	movwf	i2___fladd@a,c
 38023  017844  0E00               	movlw	0
 38024  017846  6E5B               	movwf	i2___fladd@a+1,c
 38025  017848  0E80               	movlw	128
 38026  01784A  6E5C               	movwf	i2___fladd@a+2,c
 38027  01784C  0EBF               	movlw	191
 38028  01784E  6E5D               	movwf	i2___fladd@a+3,c
 38029  017850  EC6E  F0A7         	call	i2___fladd	;wreg free
 38030  017854  C056  F076         	movff	?i2___fladd,?_floor
 38031  017858  C057  F077         	movff	?i2___fladd+1,?_floor+1
 38032  01785C  C058  F078         	movff	?i2___fladd+2,?_floor+2
 38033  017860  C059  F079         	movff	?i2___fladd+3,?_floor+3
 38034  017864  0012               	return	
 38035  017866                     i2l2363:
 38036  017866  C07A  F076         	movff	floor@i,?_floor
 38037  01786A  C07B  F077         	movff	floor@i+1,?_floor+1
 38038  01786E  C07C  F078         	movff	floor@i+2,?_floor+2
 38039  017872  C07D  F079         	movff	floor@i+3,?_floor+3
 38040  017876  0012               	return		;funcret
 38041  017878                     __end_of_floor:
 38042                           	opt stack 0
 38043                           tosu	equ	0xFFF
 38044                           tosh	equ	0xFFE
 38045                           tosl	equ	0xFFD
 38046                           pclatu	equ	0xFFB
 38047                           pclath	equ	0xFFA
 38048                           tblptru	equ	0xFF8
 38049                           tblptrh	equ	0xFF7
 38050                           tblptrl	equ	0xFF6
 38051                           tablat	equ	0xFF5
 38052                           prodh	equ	0xFF4
 38053                           prodl	equ	0xFF3
 38054                           intcon	equ	0xFF2
 38055                           indf0	equ	0xFEF
 38056                           postinc0	equ	0xFEE
 38057                           fsr0h	equ	0xFEA
 38058                           fsr0l	equ	0xFE9
 38059                           wreg	equ	0xFE8
 38060                           indf1	equ	0xFE7
 38061                           postdec1	equ	0xFE5
 38062                           plusw1	equ	0xFE3
 38063                           fsr1h	equ	0xFE2
 38064                           fsr1l	equ	0xFE1
 38065                           bsr	equ	0xFE0
 38066                           indf2	equ	0xFDF
 38067                           postinc2	equ	0xFDE
 38068                           postdec2	equ	0xFDD
 38069                           plusw2	equ	0xFDB
 38070                           fsr2h	equ	0xFDA
 38071                           fsr2l	equ	0xFD9
 38072                           status	equ	0xFD8
 38073                           
 38074 ;; *************** function i2___xxtofl *****************
 38075 ;; Defined at:
 38076 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 38077 ;; Parameters:    Size  Location     Type
 38078 ;;  sign            1    wreg     unsigned char 
 38079 ;;  val             4    4[COMRAM] long 
 38080 ;; Auto vars:     Size  Location     Type
 38081 ;;  sign            1   12[COMRAM] unsigned char 
 38082 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 38083 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 38084 ;; Return value:  Size  Location     Type
 38085 ;;                  4    4[COMRAM] unsigned char 
 38086 ;; Registers used:
 38087 ;;		wreg, status,2, status,0
 38088 ;; Tracked objects:
 38089 ;;		On entry : 0/0
 38090 ;;		On exit  : 0/0
 38091 ;;		Unchanged: 0/0
 38092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38094 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38096 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38097 ;;Total ram usage:       14 bytes
 38098 ;; Hardware stack levels used:    1
 38099 ;; This function calls:
 38100 ;;		Nothing
 38101 ;; This function is called by:
 38102 ;;		_ADCPostProcessingCallback
 38103 ;;		_floor
 38104 ;;		i2_printf
 38105 ;; This function uses a non-reentrant model
 38106 ;;
 38107                           
 38108                           	psect	text120
 38109  016DF8                     __ptext120:
 38110                           	opt stack 0
 38111  016DF8                     i2___xxtofl:
 38112                           	opt stack 16
 38113                           
 38114                           ;incstack = 0
 38115                           ;i2___xxtofl@sign stored from wreg
 38116  016DF8  6E0D               	movwf	i2___xxtofl@sign,c
 38117  016DFA  500D               	movf	i2___xxtofl@sign,w,c
 38118  016DFC  A4D8               	btfss	status,2,c
 38119  016DFE  AE08               	btfss	i2___xxtofl@val+3,7,c
 38120  016E00  D01A               	goto	i2l2338
 38121  016E02  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 38122  016E06  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 38123  016E0A  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 38124  016E0E  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 38125  016E12  1E09               	comf	??i2___xxtofl,f,c
 38126  016E14  1E0A               	comf	??i2___xxtofl+1,f,c
 38127  016E16  1E0B               	comf	??i2___xxtofl+2,f,c
 38128  016E18  1E0C               	comf	??i2___xxtofl+3,f,c
 38129  016E1A  2A09               	incf	??i2___xxtofl,f,c
 38130  016E1C  0E00               	movlw	0
 38131  016E1E  220A               	addwfc	??i2___xxtofl+1,f,c
 38132  016E20  220B               	addwfc	??i2___xxtofl+2,f,c
 38133  016E22  220C               	addwfc	??i2___xxtofl+3,f,c
 38134  016E24  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 38135  016E28  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 38136  016E2C  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 38137  016E30  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 38138  016E34  D008               	goto	i2l2339
 38139  016E36                     i2l2338:
 38140  016E36  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 38141  016E3A  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 38142  016E3E  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 38143  016E42  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 38144  016E46                     i2l2339:
 38145  016E46  5005               	movf	i2___xxtofl@val,w,c
 38146  016E48  1006               	iorwf	i2___xxtofl@val+1,w,c
 38147  016E4A  1007               	iorwf	i2___xxtofl@val+2,w,c
 38148  016E4C  1008               	iorwf	i2___xxtofl@val+3,w,c
 38149  016E4E  A4D8               	btfss	status,2,c
 38150  016E50  D009               	goto	i2l2340
 38151  016E52  0E00               	movlw	0
 38152  016E54  6E05               	movwf	?i2___xxtofl,c
 38153  016E56  0E00               	movlw	0
 38154  016E58  6E06               	movwf	?i2___xxtofl+1,c
 38155  016E5A  0E00               	movlw	0
 38156  016E5C  6E07               	movwf	?i2___xxtofl+2,c
 38157  016E5E  0E00               	movlw	0
 38158  016E60  6E08               	movwf	?i2___xxtofl+3,c
 38159  016E62  0012               	return	
 38160  016E64                     i2l2340:
 38161  016E64  0E96               	movlw	150
 38162  016E66  6E0E               	movwf	i2___xxtofl@exp,c
 38163  016E68  D006               	goto	i2l2342
 38164  016E6A  2A0E               	incf	i2___xxtofl@exp,f,c
 38165  016E6C  90D8               	bcf	status,0,c
 38166  016E6E  3212               	rrcf	i2___xxtofl@arg+3,f,c
 38167  016E70  3211               	rrcf	i2___xxtofl@arg+2,f,c
 38168  016E72  3210               	rrcf	i2___xxtofl@arg+1,f,c
 38169  016E74  320F               	rrcf	i2___xxtofl@arg,f,c
 38170  016E76                     i2l2342:
 38171  016E76  0E00               	movlw	0
 38172  016E78  140F               	andwf	i2___xxtofl@arg,w,c
 38173  016E7A  6E09               	movwf	??i2___xxtofl& (0+255),c
 38174  016E7C  0E00               	movlw	0
 38175  016E7E  1410               	andwf	i2___xxtofl@arg+1,w,c
 38176  016E80  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 38177  016E82  0E00               	movlw	0
 38178  016E84  1411               	andwf	i2___xxtofl@arg+2,w,c
 38179  016E86  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 38180  016E88  0EFE               	movlw	254
 38181  016E8A  1412               	andwf	i2___xxtofl@arg+3,w,c
 38182  016E8C  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 38183  016E8E  5009               	movf	??i2___xxtofl,w,c
 38184  016E90  100A               	iorwf	??i2___xxtofl+1,w,c
 38185  016E92  100B               	iorwf	??i2___xxtofl+2,w,c
 38186  016E94  100C               	iorwf	??i2___xxtofl+3,w,c
 38187  016E96  B4D8               	btfsc	status,2,c
 38188  016E98  D00D               	goto	i2l2345
 38189  016E9A  D7E7               	goto	i2l2343
 38190  016E9C  2A0E               	incf	i2___xxtofl@exp,f,c
 38191  016E9E  0E01               	movlw	1
 38192  016EA0  260F               	addwf	i2___xxtofl@arg,f,c
 38193  016EA2  0E00               	movlw	0
 38194  016EA4  2210               	addwfc	i2___xxtofl@arg+1,f,c
 38195  016EA6  2211               	addwfc	i2___xxtofl@arg+2,f,c
 38196  016EA8  2212               	addwfc	i2___xxtofl@arg+3,f,c
 38197  016EAA  90D8               	bcf	status,0,c
 38198  016EAC  3212               	rrcf	i2___xxtofl@arg+3,f,c
 38199  016EAE  3211               	rrcf	i2___xxtofl@arg+2,f,c
 38200  016EB0  3210               	rrcf	i2___xxtofl@arg+1,f,c
 38201  016EB2  320F               	rrcf	i2___xxtofl@arg,f,c
 38202  016EB4                     i2l2345:
 38203  016EB4  0E00               	movlw	0
 38204  016EB6  140F               	andwf	i2___xxtofl@arg,w,c
 38205  016EB8  6E09               	movwf	??i2___xxtofl& (0+255),c
 38206  016EBA  0E00               	movlw	0
 38207  016EBC  1410               	andwf	i2___xxtofl@arg+1,w,c
 38208  016EBE  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 38209  016EC0  0E00               	movlw	0
 38210  016EC2  1411               	andwf	i2___xxtofl@arg+2,w,c
 38211  016EC4  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 38212  016EC6  0EFF               	movlw	255
 38213  016EC8  1412               	andwf	i2___xxtofl@arg+3,w,c
 38214  016ECA  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 38215  016ECC  5009               	movf	??i2___xxtofl,w,c
 38216  016ECE  100A               	iorwf	??i2___xxtofl+1,w,c
 38217  016ED0  100B               	iorwf	??i2___xxtofl+2,w,c
 38218  016ED2  100C               	iorwf	??i2___xxtofl+3,w,c
 38219  016ED4  B4D8               	btfsc	status,2,c
 38220  016ED6  D007               	goto	i2l2348
 38221  016ED8  D7E1               	goto	i2l2346
 38222  016EDA  060E               	decf	i2___xxtofl@exp,f,c
 38223  016EDC  90D8               	bcf	status,0,c
 38224  016EDE  360F               	rlcf	i2___xxtofl@arg,f,c
 38225  016EE0  3610               	rlcf	i2___xxtofl@arg+1,f,c
 38226  016EE2  3611               	rlcf	i2___xxtofl@arg+2,f,c
 38227  016EE4  3612               	rlcf	i2___xxtofl@arg+3,f,c
 38228  016EE6                     i2l2348:
 38229  016EE6  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 38230  016EE8  D003               	goto	i2u1568_40
 38231  016EEA  0E02               	movlw	2
 38232  016EEC  600E               	cpfslt	i2___xxtofl@exp,c
 38233  016EEE  D7F5               	goto	i2l2349
 38234  016EF0                     i2u1568_40:
 38235  016EF0  B00E               	btfsc	i2___xxtofl@exp,0,c
 38236  016EF2  D008               	goto	i2l2353
 38237  016EF4  0EFF               	movlw	255
 38238  016EF6  160F               	andwf	i2___xxtofl@arg,f,c
 38239  016EF8  0EFF               	movlw	255
 38240  016EFA  1610               	andwf	i2___xxtofl@arg+1,f,c
 38241  016EFC  0E7F               	movlw	127
 38242  016EFE  1611               	andwf	i2___xxtofl@arg+2,f,c
 38243  016F00  0EFF               	movlw	255
 38244  016F02  1612               	andwf	i2___xxtofl@arg+3,f,c
 38245  016F04                     i2l2353:
 38246  016F04  90D8               	bcf	status,0,c
 38247  016F06  320E               	rrcf	i2___xxtofl@exp,f,c
 38248  016F08  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 38249  016F0C  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 38250  016F0E  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 38251  016F10  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 38252  016F12  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 38253  016F16  6A0B               	clrf	??i2___xxtofl+2,c
 38254  016F18  6A0A               	clrf	??i2___xxtofl+1,c
 38255  016F1A  6A09               	clrf	??i2___xxtofl,c
 38256  016F1C  5009               	movf	??i2___xxtofl,w,c
 38257  016F1E  120F               	iorwf	i2___xxtofl@arg,f,c
 38258  016F20  500A               	movf	??i2___xxtofl+1,w,c
 38259  016F22  1210               	iorwf	i2___xxtofl@arg+1,f,c
 38260  016F24  500B               	movf	??i2___xxtofl+2,w,c
 38261  016F26  1211               	iorwf	i2___xxtofl@arg+2,f,c
 38262  016F28  500C               	movf	??i2___xxtofl+3,w,c
 38263  016F2A  1212               	iorwf	i2___xxtofl@arg+3,f,c
 38264  016F2C  500D               	movf	i2___xxtofl@sign,w,c
 38265  016F2E  A4D8               	btfss	status,2,c
 38266  016F30  AE08               	btfss	i2___xxtofl@val+3,7,c
 38267  016F32  D001               	goto	i2l2354
 38268  016F34  8E12               	bsf	i2___xxtofl@arg+3,7,c
 38269  016F36                     i2l2354:
 38270  016F36  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 38271  016F3A  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 38272  016F3E  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 38273  016F42  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 38274  016F46  0012               	return	
 38275  016F48                     __end_ofi2___xxtofl:
 38276                           	opt stack 0
 38277                           tosu	equ	0xFFF
 38278                           tosh	equ	0xFFE
 38279                           tosl	equ	0xFFD
 38280                           pclatu	equ	0xFFB
 38281                           pclath	equ	0xFFA
 38282                           tblptru	equ	0xFF8
 38283                           tblptrh	equ	0xFF7
 38284                           tblptrl	equ	0xFF6
 38285                           tablat	equ	0xFF5
 38286                           prodh	equ	0xFF4
 38287                           prodl	equ	0xFF3
 38288                           intcon	equ	0xFF2
 38289                           indf0	equ	0xFEF
 38290                           postinc0	equ	0xFEE
 38291                           fsr0h	equ	0xFEA
 38292                           fsr0l	equ	0xFE9
 38293                           wreg	equ	0xFE8
 38294                           indf1	equ	0xFE7
 38295                           postdec1	equ	0xFE5
 38296                           plusw1	equ	0xFE3
 38297                           fsr1h	equ	0xFE2
 38298                           fsr1l	equ	0xFE1
 38299                           bsr	equ	0xFE0
 38300                           indf2	equ	0xFDF
 38301                           postinc2	equ	0xFDE
 38302                           postdec2	equ	0xFDD
 38303                           plusw2	equ	0xFDB
 38304                           fsr2h	equ	0xFDA
 38305                           fsr2l	equ	0xFD9
 38306                           status	equ	0xFD8
 38307                           
 38308 ;; *************** function i2___fltol *****************
 38309 ;; Defined at:
 38310 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 38311 ;; Parameters:    Size  Location     Type
 38312 ;;  f1              4   12[BANK0 ] unsigned char 
 38313 ;; Auto vars:     Size  Location     Type
 38314 ;;  __fltol         1   21[BANK0 ] unsigned char 
 38315 ;;  __fltol         1   20[BANK0 ] unsigned char 
 38316 ;; Return value:  Size  Location     Type
 38317 ;;                  4   12[BANK0 ] long 
 38318 ;; Registers used:
 38319 ;;		wreg, status,2, status,0
 38320 ;; Tracked objects:
 38321 ;;		On entry : 0/0
 38322 ;;		On exit  : 0/0
 38323 ;;		Unchanged: 0/0
 38324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38327 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38328 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38329 ;;Total ram usage:       10 bytes
 38330 ;; Hardware stack levels used:    1
 38331 ;; This function calls:
 38332 ;;		Nothing
 38333 ;; This function is called by:
 38334 ;;		_ADCPostProcessingCallback
 38335 ;;		_floor
 38336 ;;		i2_printf
 38337 ;; This function uses a non-reentrant model
 38338 ;;
 38339                           
 38340                           	psect	text121
 38341  017B60                     __ptext121:
 38342                           	opt stack 0
 38343  017B60                     i2___fltol:
 38344                           	opt stack 16
 38345                           
 38346                           ;incstack = 0
 38347  017B60  0100               	movlb	0	; () banked
 38348  017B62  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 38349  017B64  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 38350  017B66  6F75               	movwf	i2___fltol@exp1& (0+255),b
 38351  017B68  5175               	movf	i2___fltol@exp1& (0+255),w,b
 38352  017B6A  A4D8               	btfss	status,2,c
 38353  017B6C  D009               	goto	i2l1905
 38354                           
 38355                           ; BSR set to: 0
 38356  017B6E  0E00               	movlw	0
 38357  017B70  6F6C               	movwf	?i2___fltol& (0+255),b
 38358  017B72  0E00               	movlw	0
 38359  017B74  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 38360  017B76  0E00               	movlw	0
 38361  017B78  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 38362  017B7A  0E00               	movlw	0
 38363  017B7C  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 38364                           
 38365                           ; BSR set to: 0
 38366  017B7E  0012               	return	
 38367  017B80                     i2l1905:
 38368                           
 38369                           ; BSR set to: 0
 38370                           
 38371                           ; BSR set to: 0
 38372  017B80  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 38373  017B84  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 38374  017B88  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 38375  017B8C  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 38376  017B90  0E20               	movlw	32
 38377  017B92  D005               	goto	i2u1556_40
 38378  017B94                     i2u1556_45:
 38379  017B94  90D8               	bcf	status,0,c
 38380  017B96  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 38381  017B98  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 38382  017B9A  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 38383  017B9C  3370               	rrcf	??i2___fltol& (0+255),f,b
 38384  017B9E                     i2u1556_40:
 38385  017B9E  2EE8               	decfsz	wreg,f,c
 38386  017BA0  D7F9               	goto	i2u1556_45
 38387  017BA2  5170               	movf	??i2___fltol& (0+255),w,b
 38388  017BA4  6F74               	movwf	i2___fltol@sign1& (0+255),b
 38389                           
 38390                           ; BSR set to: 0
 38391  017BA6  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 38392                           
 38393                           ; BSR set to: 0
 38394  017BA8  0EFF               	movlw	255
 38395  017BAA  176C               	andwf	i2___fltol@f1& (0+255),f,b
 38396  017BAC  0EFF               	movlw	255
 38397  017BAE  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 38398  017BB0  0EFF               	movlw	255
 38399  017BB2  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 38400  017BB4  0E00               	movlw	0
 38401  017BB6  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 38402                           
 38403                           ; BSR set to: 0
 38404  017BB8  0E96               	movlw	150
 38405  017BBA  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 38406                           
 38407                           ; BSR set to: 0
 38408  017BBC  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 38409  017BBE  D016               	goto	i2l1907
 38410                           
 38411                           ; BSR set to: 0
 38412  017BC0  5175               	movf	i2___fltol@exp1& (0+255),w,b
 38413  017BC2  0A80               	xorlw	128
 38414  017BC4  0F97               	addlw	151
 38415  017BC6  B0D8               	btfsc	status,0,c
 38416  017BC8  D009               	goto	i2l1908
 38417                           
 38418                           ; BSR set to: 0
 38419  017BCA  0E00               	movlw	0
 38420  017BCC  6F6C               	movwf	?i2___fltol& (0+255),b
 38421  017BCE  0E00               	movlw	0
 38422  017BD0  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 38423  017BD2  0E00               	movlw	0
 38424  017BD4  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 38425  017BD6  0E00               	movlw	0
 38426  017BD8  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 38427                           
 38428                           ; BSR set to: 0
 38429  017BDA  0012               	return	
 38430  017BDC                     i2l1908:
 38431                           
 38432                           ; BSR set to: 0
 38433                           
 38434                           ; BSR set to: 0
 38435                           
 38436                           ; BSR set to: 0
 38437  017BDC  90D8               	bcf	status,0,c
 38438  017BDE  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 38439  017BE0  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 38440  017BE2  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 38441  017BE4  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 38442                           
 38443                           ; BSR set to: 0
 38444  017BE6  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 38445  017BE8  D7F9               	goto	i2l1908
 38446                           
 38447                           ; BSR set to: 0
 38448  017BEA  D015               	goto	i2u1560_40
 38449  017BEC                     i2l1907:
 38450                           
 38451                           ; BSR set to: 0
 38452                           
 38453                           ; BSR set to: 0
 38454  017BEC  0E1F               	movlw	31
 38455  017BEE  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 38456  017BF0  D00F               	goto	i2l1913
 38457                           
 38458                           ; BSR set to: 0
 38459  017BF2  0E00               	movlw	0
 38460  017BF4  6F6C               	movwf	?i2___fltol& (0+255),b
 38461  017BF6  0E00               	movlw	0
 38462  017BF8  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 38463  017BFA  0E00               	movlw	0
 38464  017BFC  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 38465  017BFE  0E00               	movlw	0
 38466  017C00  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 38467                           
 38468                           ; BSR set to: 0
 38469  017C02  0012               	return	
 38470  017C04                     
 38471                           ; BSR set to: 0
 38472                           
 38473                           ; BSR set to: 0
 38474  017C04  90D8               	bcf	status,0,c
 38475  017C06  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 38476  017C08  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 38477  017C0A  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 38478  017C0C  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 38479  017C0E  0775               	decf	i2___fltol@exp1& (0+255),f,b
 38480  017C10                     i2l1913:
 38481                           
 38482                           ; BSR set to: 0
 38483                           
 38484                           ; BSR set to: 0
 38485  017C10  5175               	movf	i2___fltol@exp1& (0+255),w,b
 38486  017C12  A4D8               	btfss	status,2,c
 38487  017C14  D7F7               	goto	i2l1914
 38488  017C16                     i2u1560_40:
 38489                           
 38490                           ; BSR set to: 0
 38491                           
 38492                           ; BSR set to: 0
 38493                           
 38494                           ; BSR set to: 0
 38495  017C16  5174               	movf	i2___fltol@sign1& (0+255),w,b
 38496  017C18  B4D8               	btfsc	status,2,c
 38497  017C1A  D008               	goto	i2l1916
 38498                           
 38499                           ; BSR set to: 0
 38500  017C1C  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 38501  017C1E  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 38502  017C20  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 38503  017C22  6D6C               	negf	i2___fltol@f1& (0+255),b
 38504  017C24  0E00               	movlw	0
 38505  017C26  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 38506  017C28  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 38507  017C2A  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 38508  017C2C                     i2l1916:
 38509                           
 38510                           ; BSR set to: 0
 38511                           
 38512                           ; BSR set to: 0
 38513  017C2C  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 38514  017C30  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 38515  017C34  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 38516  017C38  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 38517  017C3C  0012               	return	
 38518  017C3E                     __end_ofi2___fltol:
 38519                           	opt stack 0
 38520                           tosu	equ	0xFFF
 38521                           tosh	equ	0xFFE
 38522                           tosl	equ	0xFFD
 38523                           pclatu	equ	0xFFB
 38524                           pclath	equ	0xFFA
 38525                           tblptru	equ	0xFF8
 38526                           tblptrh	equ	0xFF7
 38527                           tblptrl	equ	0xFF6
 38528                           tablat	equ	0xFF5
 38529                           prodh	equ	0xFF4
 38530                           prodl	equ	0xFF3
 38531                           intcon	equ	0xFF2
 38532                           indf0	equ	0xFEF
 38533                           postinc0	equ	0xFEE
 38534                           fsr0h	equ	0xFEA
 38535                           fsr0l	equ	0xFE9
 38536                           wreg	equ	0xFE8
 38537                           indf1	equ	0xFE7
 38538                           postdec1	equ	0xFE5
 38539                           plusw1	equ	0xFE3
 38540                           fsr1h	equ	0xFE2
 38541                           fsr1l	equ	0xFE1
 38542                           bsr	equ	0xFE0
 38543                           indf2	equ	0xFDF
 38544                           postinc2	equ	0xFDE
 38545                           postdec2	equ	0xFDD
 38546                           plusw2	equ	0xFDB
 38547                           fsr2h	equ	0xFDA
 38548                           fsr2l	equ	0xFD9
 38549                           status	equ	0xFD8
 38550                           
 38551 ;; *************** function i2___flge *****************
 38552 ;; Defined at:
 38553 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 38554 ;; Parameters:    Size  Location     Type
 38555 ;;  ff1             4   51[COMRAM] long 
 38556 ;;  ff2             4   55[COMRAM] long 
 38557 ;; Auto vars:     Size  Location     Type
 38558 ;;		None
 38559 ;; Return value:  Size  Location     Type
 38560 ;;		None               void
 38561 ;; Registers used:
 38562 ;;		wreg, status,2, status,0
 38563 ;; Tracked objects:
 38564 ;;		On entry : 0/0
 38565 ;;		On exit  : 0/0
 38566 ;;		Unchanged: 0/0
 38567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38568 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38570 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38571 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38572 ;;Total ram usage:       12 bytes
 38573 ;; Hardware stack levels used:    1
 38574 ;; This function calls:
 38575 ;;		Nothing
 38576 ;; This function is called by:
 38577 ;;		_ADCPostProcessingCallback
 38578 ;;		_asin
 38579 ;;		_atan
 38580 ;;		_sin
 38581 ;;		_floor
 38582 ;;		i2_printf
 38583 ;; This function uses a non-reentrant model
 38584 ;;
 38585                           
 38586                           	psect	text122
 38587  017646                     __ptext122:
 38588                           	opt stack 0
 38589  017646                     i2___flge:
 38590                           	opt stack 16
 38591                           
 38592                           ; BSR set to: 0
 38593                           ;incstack = 0
 38594  017646  0E00               	movlw	0
 38595  017648  1434               	andwf	i2___flge@ff1,w,c
 38596  01764A  6E3C               	movwf	??i2___flge& (0+255),c
 38597  01764C  0E00               	movlw	0
 38598  01764E  1435               	andwf	i2___flge@ff1+1,w,c
 38599  017650  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 38600  017652  0E80               	movlw	128
 38601  017654  1436               	andwf	i2___flge@ff1+2,w,c
 38602  017656  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 38603  017658  0E7F               	movlw	127
 38604  01765A  1437               	andwf	i2___flge@ff1+3,w,c
 38605  01765C  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 38606  01765E  503C               	movf	??i2___flge,w,c
 38607  017660  103D               	iorwf	??i2___flge+1,w,c
 38608  017662  103E               	iorwf	??i2___flge+2,w,c
 38609  017664  103F               	iorwf	??i2___flge+3,w,c
 38610  017666  A4D8               	btfss	status,2,c
 38611  017668  D008               	goto	i2l1875
 38612  01766A  0E00               	movlw	0
 38613  01766C  6E34               	movwf	i2___flge@ff1,c
 38614  01766E  0E00               	movlw	0
 38615  017670  6E35               	movwf	i2___flge@ff1+1,c
 38616  017672  0E00               	movlw	0
 38617  017674  6E36               	movwf	i2___flge@ff1+2,c
 38618  017676  0E00               	movlw	0
 38619  017678  6E37               	movwf	i2___flge@ff1+3,c
 38620  01767A                     i2l1875:
 38621  01767A  0E00               	movlw	0
 38622  01767C  1438               	andwf	i2___flge@ff2,w,c
 38623  01767E  6E3C               	movwf	??i2___flge& (0+255),c
 38624  017680  0E00               	movlw	0
 38625  017682  1439               	andwf	i2___flge@ff2+1,w,c
 38626  017684  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 38627  017686  0E80               	movlw	128
 38628  017688  143A               	andwf	i2___flge@ff2+2,w,c
 38629  01768A  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 38630  01768C  0E7F               	movlw	127
 38631  01768E  143B               	andwf	i2___flge@ff2+3,w,c
 38632  017690  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 38633  017692  503C               	movf	??i2___flge,w,c
 38634  017694  103D               	iorwf	??i2___flge+1,w,c
 38635  017696  103E               	iorwf	??i2___flge+2,w,c
 38636  017698  103F               	iorwf	??i2___flge+3,w,c
 38637  01769A  A4D8               	btfss	status,2,c
 38638  01769C  D008               	goto	i2l1876
 38639  01769E  0E00               	movlw	0
 38640  0176A0  6E38               	movwf	i2___flge@ff2,c
 38641  0176A2  0E00               	movlw	0
 38642  0176A4  6E39               	movwf	i2___flge@ff2+1,c
 38643  0176A6  0E00               	movlw	0
 38644  0176A8  6E3A               	movwf	i2___flge@ff2+2,c
 38645  0176AA  0E00               	movlw	0
 38646  0176AC  6E3B               	movwf	i2___flge@ff2+3,c
 38647  0176AE                     i2l1876:
 38648  0176AE  AE37               	btfss	i2___flge@ff1+3,7,c
 38649  0176B0  D01D               	goto	i2l1877
 38650  0176B2  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 38651  0176B6  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 38652  0176BA  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 38653  0176BE  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 38654  0176C2  1E3C               	comf	??i2___flge,f,c
 38655  0176C4  1E3D               	comf	??i2___flge+1,f,c
 38656  0176C6  1E3E               	comf	??i2___flge+2,f,c
 38657  0176C8  1E3F               	comf	??i2___flge+3,f,c
 38658  0176CA  2A3C               	incf	??i2___flge,f,c
 38659  0176CC  0E00               	movlw	0
 38660  0176CE  223D               	addwfc	??i2___flge+1,f,c
 38661  0176D0  223E               	addwfc	??i2___flge+2,f,c
 38662  0176D2  223F               	addwfc	??i2___flge+3,f,c
 38663  0176D4  0E00               	movlw	0
 38664  0176D6  243C               	addwf	??i2___flge,w,c
 38665  0176D8  6E34               	movwf	i2___flge@ff1,c
 38666  0176DA  0E00               	movlw	0
 38667  0176DC  203D               	addwfc	??i2___flge+1,w,c
 38668  0176DE  6E35               	movwf	i2___flge@ff1+1,c
 38669  0176E0  0E00               	movlw	0
 38670  0176E2  203E               	addwfc	??i2___flge+2,w,c
 38671  0176E4  6E36               	movwf	i2___flge@ff1+2,c
 38672  0176E6  0E80               	movlw	128
 38673  0176E8  203F               	addwfc	??i2___flge+3,w,c
 38674  0176EA  6E37               	movwf	i2___flge@ff1+3,c
 38675  0176EC                     i2l1877:
 38676  0176EC  AE3B               	btfss	i2___flge@ff2+3,7,c
 38677  0176EE  D01D               	goto	i2l1878
 38678  0176F0  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 38679  0176F4  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 38680  0176F8  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 38681  0176FC  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 38682  017700  1E3C               	comf	??i2___flge,f,c
 38683  017702  1E3D               	comf	??i2___flge+1,f,c
 38684  017704  1E3E               	comf	??i2___flge+2,f,c
 38685  017706  1E3F               	comf	??i2___flge+3,f,c
 38686  017708  2A3C               	incf	??i2___flge,f,c
 38687  01770A  0E00               	movlw	0
 38688  01770C  223D               	addwfc	??i2___flge+1,f,c
 38689  01770E  223E               	addwfc	??i2___flge+2,f,c
 38690  017710  223F               	addwfc	??i2___flge+3,f,c
 38691  017712  0E00               	movlw	0
 38692  017714  243C               	addwf	??i2___flge,w,c
 38693  017716  6E38               	movwf	i2___flge@ff2,c
 38694  017718  0E00               	movlw	0
 38695  01771A  203D               	addwfc	??i2___flge+1,w,c
 38696  01771C  6E39               	movwf	i2___flge@ff2+1,c
 38697  01771E  0E00               	movlw	0
 38698  017720  203E               	addwfc	??i2___flge+2,w,c
 38699  017722  6E3A               	movwf	i2___flge@ff2+2,c
 38700  017724  0E80               	movlw	128
 38701  017726  203F               	addwfc	??i2___flge+3,w,c
 38702  017728  6E3B               	movwf	i2___flge@ff2+3,c
 38703  01772A                     i2l1878:
 38704  01772A  0E00               	movlw	0
 38705  01772C  1A34               	xorwf	i2___flge@ff1,f,c
 38706  01772E  0E00               	movlw	0
 38707  017730  1A35               	xorwf	i2___flge@ff1+1,f,c
 38708  017732  0E00               	movlw	0
 38709  017734  1A36               	xorwf	i2___flge@ff1+2,f,c
 38710  017736  0E80               	movlw	128
 38711  017738  1A37               	xorwf	i2___flge@ff1+3,f,c
 38712  01773A  0E00               	movlw	0
 38713  01773C  1A38               	xorwf	i2___flge@ff2,f,c
 38714  01773E  0E00               	movlw	0
 38715  017740  1A39               	xorwf	i2___flge@ff2+1,f,c
 38716  017742  0E00               	movlw	0
 38717  017744  1A3A               	xorwf	i2___flge@ff2+2,f,c
 38718  017746  0E80               	movlw	128
 38719  017748  1A3B               	xorwf	i2___flge@ff2+3,f,c
 38720  01774A  5038               	movf	i2___flge@ff2,w,c
 38721  01774C  5C34               	subwf	i2___flge@ff1,w,c
 38722  01774E  5039               	movf	i2___flge@ff2+1,w,c
 38723  017750  5835               	subwfb	i2___flge@ff1+1,w,c
 38724  017752  503A               	movf	i2___flge@ff2+2,w,c
 38725  017754  5836               	subwfb	i2___flge@ff1+2,w,c
 38726  017756  503B               	movf	i2___flge@ff2+3,w,c
 38727  017758  5837               	subwfb	i2___flge@ff1+3,w,c
 38728  01775A  B0D8               	btfsc	status,0,c
 38729  01775C  D002               	goto	i2l11274
 38730  01775E  90D8               	bcf	status,0,c
 38731  017760  0012               	return	
 38732  017762                     i2l11274:
 38733  017762  80D8               	bsf	status,0,c
 38734  017764  0012               	return	
 38735  017766                     __end_ofi2___flge:
 38736                           	opt stack 0
 38737                           tosu	equ	0xFFF
 38738                           tosh	equ	0xFFE
 38739                           tosl	equ	0xFFD
 38740                           pclatu	equ	0xFFB
 38741                           pclath	equ	0xFFA
 38742                           tblptru	equ	0xFF8
 38743                           tblptrh	equ	0xFF7
 38744                           tblptrl	equ	0xFF6
 38745                           tablat	equ	0xFF5
 38746                           prodh	equ	0xFF4
 38747                           prodl	equ	0xFF3
 38748                           intcon	equ	0xFF2
 38749                           indf0	equ	0xFEF
 38750                           postinc0	equ	0xFEE
 38751                           fsr0h	equ	0xFEA
 38752                           fsr0l	equ	0xFE9
 38753                           wreg	equ	0xFE8
 38754                           indf1	equ	0xFE7
 38755                           postdec1	equ	0xFE5
 38756                           plusw1	equ	0xFE3
 38757                           fsr1h	equ	0xFE2
 38758                           fsr1l	equ	0xFE1
 38759                           bsr	equ	0xFE0
 38760                           indf2	equ	0xFDF
 38761                           postinc2	equ	0xFDE
 38762                           postdec2	equ	0xFDD
 38763                           plusw2	equ	0xFDB
 38764                           fsr2h	equ	0xFDA
 38765                           fsr2l	equ	0xFD9
 38766                           status	equ	0xFD8
 38767                           
 38768 ;; *************** function _frexp *****************
 38769 ;; Defined at:
 38770 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 38771 ;; Parameters:    Size  Location     Type
 38772 ;;  value           4    0[COMRAM] long 
 38773 ;;  eptr            2    4[COMRAM] PTR int 
 38774 ;;		 -> floor@expon(2), 
 38775 ;; Auto vars:     Size  Location     Type
 38776 ;;		None
 38777 ;; Return value:  Size  Location     Type
 38778 ;;                  4    0[COMRAM] PTR int 
 38779 ;; Registers used:
 38780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38781 ;; Tracked objects:
 38782 ;;		On entry : 0/0
 38783 ;;		On exit  : 0/0
 38784 ;;		Unchanged: 0/0
 38785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38786 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38789 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38790 ;;Total ram usage:        8 bytes
 38791 ;; Hardware stack levels used:    1
 38792 ;; This function calls:
 38793 ;;		Nothing
 38794 ;; This function is called by:
 38795 ;;		_floor
 38796 ;; This function uses a non-reentrant model
 38797 ;;
 38798                           
 38799                           	psect	text123
 38800  0183FC                     __ptext123:
 38801                           	opt stack 0
 38802  0183FC                     _frexp:
 38803                           	opt stack 13
 38804                           
 38805                           ;incstack = 0
 38806  0183FC  5001               	movf	frexp@value,w,c
 38807  0183FE  1002               	iorwf	frexp@value+1,w,c
 38808  018400  1003               	iorwf	frexp@value+2,w,c
 38809  018402  1004               	iorwf	frexp@value+3,w,c
 38810  018404  A4D8               	btfss	status,2,c
 38811  018406  D009               	goto	i2l2368
 38812  018408  C005  FFD9         	movff	frexp@eptr,fsr2l
 38813  01840C  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 38814  018410  0E00               	movlw	0
 38815  018412  6EDE               	movwf	postinc2,c
 38816  018414  0E00               	movlw	0
 38817  018416  6EDD               	movwf	postdec2,c
 38818                           
 38819                           ;	Return value of _frexp is never used
 38820  018418  0012               	return	
 38821  01841A                     i2l2368:
 38822  01841A  5004               	movf	frexp@value+3,w,c
 38823  01841C  0B7F               	andlw	127
 38824  01841E  6E07               	movwf	??_frexp& (0+255),c
 38825  018420  6A08               	clrf	(??_frexp+1)& (0+255),c
 38826  018422  90D8               	bcf	status,0,c
 38827  018424  3607               	rlcf	??_frexp,f,c
 38828  018426  3608               	rlcf	??_frexp+1,f,c
 38829  018428  C005  FFD9         	movff	frexp@eptr,fsr2l
 38830  01842C  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 38831  018430  C007  FFDE         	movff	??_frexp,postinc2
 38832  018434  C008  FFDD         	movff	??_frexp+1,postdec2
 38833  018438  AE03               	btfss	frexp@value+2,7,c
 38834  01843A  D003               	goto	i2u1554_40
 38835  01843C  6A07               	clrf	??_frexp& (0+255),c
 38836  01843E  2A07               	incf	??_frexp& (0+255),f,c
 38837  018440  D001               	goto	i2u1554_48
 38838  018442                     i2u1554_40:
 38839  018442  6A07               	clrf	??_frexp& (0+255),c
 38840  018444                     i2u1554_48:
 38841  018444  5007               	movf	??_frexp,w,c
 38842  018446  C005  FFD9         	movff	frexp@eptr,fsr2l
 38843  01844A  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 38844  01844E  12DE               	iorwf	postinc2,f,c
 38845  018450  0E00               	movlw	0
 38846  018452  12DD               	iorwf	postdec2,f,c
 38847  018454  C005  FFD9         	movff	frexp@eptr,fsr2l
 38848  018458  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 38849  01845C  0E82               	movlw	130
 38850  01845E  26DE               	addwf	postinc2,f,c
 38851  018460  0EFF               	movlw	255
 38852  018462  22DD               	addwfc	postdec2,f,c
 38853  018464  8004               	bsf	frexp@value+3,0,c
 38854  018466  8204               	bsf	frexp@value+3,1,c
 38855  018468  8404               	bsf	frexp@value+3,2,c
 38856  01846A  8604               	bsf	frexp@value+3,3,c
 38857  01846C  8804               	bsf	frexp@value+3,4,c
 38858  01846E  8A04               	bsf	frexp@value+3,5,c
 38859  018470  9C04               	bcf	frexp@value+3,6,c
 38860  018472  9E03               	bcf	frexp@value+2,7,c
 38861  018474  0012               	return	
 38862  018476                     __end_of_frexp:
 38863                           	opt stack 0
 38864                           tosu	equ	0xFFF
 38865                           tosh	equ	0xFFE
 38866                           tosl	equ	0xFFD
 38867                           pclatu	equ	0xFFB
 38868                           pclath	equ	0xFFA
 38869                           tblptru	equ	0xFF8
 38870                           tblptrh	equ	0xFF7
 38871                           tblptrl	equ	0xFF6
 38872                           tablat	equ	0xFF5
 38873                           prodh	equ	0xFF4
 38874                           prodl	equ	0xFF3
 38875                           intcon	equ	0xFF2
 38876                           indf0	equ	0xFEF
 38877                           postinc0	equ	0xFEE
 38878                           fsr0h	equ	0xFEA
 38879                           fsr0l	equ	0xFE9
 38880                           wreg	equ	0xFE8
 38881                           indf1	equ	0xFE7
 38882                           postdec1	equ	0xFE5
 38883                           plusw1	equ	0xFE3
 38884                           fsr1h	equ	0xFE2
 38885                           fsr1l	equ	0xFE1
 38886                           bsr	equ	0xFE0
 38887                           indf2	equ	0xFDF
 38888                           postinc2	equ	0xFDE
 38889                           postdec2	equ	0xFDD
 38890                           plusw2	equ	0xFDB
 38891                           fsr2h	equ	0xFDA
 38892                           fsr2l	equ	0xFD9
 38893                           status	equ	0xFD8
 38894                           
 38895 ;; *************** function _eval_poly *****************
 38896 ;; Defined at:
 38897 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 38898 ;; Parameters:    Size  Location     Type
 38899 ;;  x               4   12[BANK0 ] PTR int 
 38900 ;;  d               2   16[BANK0 ] PTR const 
 38901 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 38902 ;;  n               2   18[BANK0 ] int 
 38903 ;; Auto vars:     Size  Location     Type
 38904 ;;  res             4   24[BANK0 ] int 
 38905 ;; Return value:  Size  Location     Type
 38906 ;;                  4   12[BANK0 ] int 
 38907 ;; Registers used:
 38908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38909 ;; Tracked objects:
 38910 ;;		On entry : 0/0
 38911 ;;		On exit  : 0/0
 38912 ;;		Unchanged: 0/0
 38913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38914 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38915 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38916 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38917 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38918 ;;Total ram usage:       16 bytes
 38919 ;; Hardware stack levels used:    1
 38920 ;; Hardware stack levels required when called:    1
 38921 ;; This function calls:
 38922 ;;		i2___fladd
 38923 ;;		i2___flmul
 38924 ;; This function is called by:
 38925 ;;		_atan
 38926 ;;		_sin
 38927 ;; This function uses a non-reentrant model
 38928 ;;
 38929                           
 38930                           	psect	text124
 38931  017982                     __ptext124:
 38932                           	opt stack 0
 38933  017982                     _eval_poly:
 38934                           	opt stack 13
 38935                           
 38936                           ;incstack = 0
 38937  017982  C072  F074         	movff	eval_poly@n,??_eval_poly
 38938  017986  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 38939  01798A  0100               	movlb	0	; () banked
 38940  01798C  90D8               	bcf	status,0,c
 38941  01798E  3774               	rlcf	??_eval_poly& (0+255),f,b
 38942  017990  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 38943  017992  90D8               	bcf	status,0,c
 38944  017994  3774               	rlcf	??_eval_poly& (0+255),f,b
 38945  017996  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 38946  017998  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 38947  01799C  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 38948  0179A0  5174               	movf	??_eval_poly& (0+255),w,b
 38949  0179A2  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 38950  0179A4  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 38951  0179A6  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 38952  0179A8  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 38953  0179AC  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 38954  0179B0                     	if	0	;tblptru may be non-zero
 38955  0179B0                     	endif
 38956  0179B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 38957  0179B0  0E00               	movlw	low (__mediumconst shr (0+16))
 38958  0179B2  6EF8               	movwf	tblptru,c
 38959  0179B4                     	endif
 38960  0179B4  0009               	tblrd		*+
 38961  0179B6  CFF5 F078          	movff	tablat,eval_poly@res
 38962  0179BA  0009               	tblrd		*+
 38963  0179BC  CFF5 F079          	movff	tablat,eval_poly@res+1
 38964  0179C0  0009               	tblrd		*+
 38965  0179C2  CFF5 F07A          	movff	tablat,eval_poly@res+2
 38966  0179C6  000A               	tblrd		*-
 38967  0179C8  CFF5 F07B          	movff	tablat,eval_poly@res+3
 38968  0179CC  D04C               	goto	i2l1848
 38969  0179CE                     
 38970                           ; BSR set to: 0
 38971                           
 38972                           ; BSR set to: 0
 38973  0179CE  C078  F034         	movff	eval_poly@res,i2___flmul@a
 38974  0179D2  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 38975  0179D6  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 38976  0179DA  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 38977  0179DE  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 38978  0179E2  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 38979  0179E6  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 38980  0179EA  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 38981  0179EE  EC27  F0A4         	call	i2___flmul	;wreg free
 38982  0179F2  C030  F056         	movff	?i2___flmul,i2___fladd@b
 38983  0179F6  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 38984  0179FA  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 38985  0179FE  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 38986  017A02  0100               	movlb	0	; () banked
 38987  017A04  0772               	decf	eval_poly@n& (0+255),f,b
 38988  017A06  A0D8               	btfss	status,0,c
 38989  017A08  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 38990  017A0A  C072  F074         	movff	eval_poly@n,??_eval_poly
 38991  017A0E  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 38992  017A12  90D8               	bcf	status,0,c
 38993  017A14  3774               	rlcf	??_eval_poly& (0+255),f,b
 38994  017A16  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 38995  017A18  90D8               	bcf	status,0,c
 38996  017A1A  3774               	rlcf	??_eval_poly& (0+255),f,b
 38997  017A1C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 38998  017A1E  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 38999  017A22  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 39000  017A26  5174               	movf	??_eval_poly& (0+255),w,b
 39001  017A28  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 39002  017A2A  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 39003  017A2C  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 39004  017A2E  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 39005  017A32  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 39006  017A36                     	if	0	;tblptru may be non-zero
 39007  017A36                     	endif
 39008  017A36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 39009  017A36  0E00               	movlw	low (__mediumconst shr (0+16))
 39010  017A38  6EF8               	movwf	tblptru,c
 39011  017A3A                     	endif
 39012  017A3A  0009               	tblrd		*+
 39013  017A3C  CFF5 F05A          	movff	tablat,i2___fladd@a
 39014  017A40  0009               	tblrd		*+
 39015  017A42  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 39016  017A46  0009               	tblrd		*+
 39017  017A48  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 39018  017A4C  000A               	tblrd		*-
 39019  017A4E  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 39020  017A52  EC6E  F0A7         	call	i2___fladd	;wreg free
 39021  017A56  C056  F078         	movff	?i2___fladd,eval_poly@res
 39022  017A5A  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 39023  017A5E  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 39024  017A62  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 39025  017A66                     i2l1848:
 39026  017A66  0100               	movlb	0	; () banked
 39027  017A68  5172               	movf	eval_poly@n& (0+255),w,b
 39028  017A6A  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 39029  017A6C  A4D8               	btfss	status,2,c
 39030  017A6E  D7AF               	goto	i2l1849
 39031                           
 39032                           ; BSR set to: 0
 39033  017A70  C078  F06C         	movff	eval_poly@res,?_eval_poly
 39034  017A74  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 39035  017A78  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 39036  017A7C  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 39037                           
 39038                           ; BSR set to: 0
 39039  017A80  0012               	return		;funcret
 39040  017A82                     __end_of_eval_poly:
 39041                           	opt stack 0
 39042                           tosu	equ	0xFFF
 39043                           tosh	equ	0xFFE
 39044                           tosl	equ	0xFFD
 39045                           pclatu	equ	0xFFB
 39046                           pclath	equ	0xFFA
 39047                           tblptru	equ	0xFF8
 39048                           tblptrh	equ	0xFF7
 39049                           tblptrl	equ	0xFF6
 39050                           tablat	equ	0xFF5
 39051                           prodh	equ	0xFF4
 39052                           prodl	equ	0xFF3
 39053                           intcon	equ	0xFF2
 39054                           indf0	equ	0xFEF
 39055                           postinc0	equ	0xFEE
 39056                           fsr0h	equ	0xFEA
 39057                           fsr0l	equ	0xFE9
 39058                           wreg	equ	0xFE8
 39059                           indf1	equ	0xFE7
 39060                           postdec1	equ	0xFE5
 39061                           plusw1	equ	0xFE3
 39062                           fsr1h	equ	0xFE2
 39063                           fsr1l	equ	0xFE1
 39064                           bsr	equ	0xFE0
 39065                           indf2	equ	0xFDF
 39066                           postinc2	equ	0xFDE
 39067                           postdec2	equ	0xFDD
 39068                           plusw2	equ	0xFDB
 39069                           fsr2h	equ	0xFDA
 39070                           fsr2l	equ	0xFD9
 39071                           status	equ	0xFD8
 39072                           
 39073 ;; *************** function i2___flmul *****************
 39074 ;; Defined at:
 39075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 39076 ;; Parameters:    Size  Location     Type
 39077 ;;  b               4   47[COMRAM] int 
 39078 ;;  a               4   51[COMRAM] int 
 39079 ;; Auto vars:     Size  Location     Type
 39080 ;;  __flmul         4   66[COMRAM] struct .
 39081 ;;  __flmul         4   61[COMRAM] unsigned long 
 39082 ;;  __flmul         2   70[COMRAM] struct .
 39083 ;;  __flmul         1   65[COMRAM] unsigned char 
 39084 ;;  __flmul         1   60[COMRAM] unsigned char 
 39085 ;;  __flmul         1   59[COMRAM] unsigned char 
 39086 ;; Return value:  Size  Location     Type
 39087 ;;                  4   47[COMRAM] unsigned char 
 39088 ;; Registers used:
 39089 ;;		wreg, status,2, status,0, prodl, prodh
 39090 ;; Tracked objects:
 39091 ;;		On entry : 0/0
 39092 ;;		On exit  : 0/0
 39093 ;;		Unchanged: 0/0
 39094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39095 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39096 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39097 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39098 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39099 ;;Total ram usage:       25 bytes
 39100 ;; Hardware stack levels used:    1
 39101 ;; This function calls:
 39102 ;;		Nothing
 39103 ;; This function is called by:
 39104 ;;		_peakToRMS
 39105 ;;		_ADCPostProcessingCallback
 39106 ;;		_asin
 39107 ;;		_atan
 39108 ;;		_eval_poly
 39109 ;;		_sin
 39110 ;;		i2_fround
 39111 ;;		i2_scale
 39112 ;;		i2_printf
 39113 ;; This function uses a non-reentrant model
 39114 ;;
 39115                           
 39116                           	psect	text125
 39117  01484E                     __ptext125:
 39118                           	opt stack 0
 39119  01484E                     i2___flmul:
 39120                           	opt stack 15
 39121                           
 39122                           ; BSR set to: 0
 39123                           ;incstack = 0
 39124  01484E  5033               	movf	i2___flmul@b+3,w,c
 39125  014850  0B80               	andlw	128
 39126  014852  6E3C               	movwf	i2___flmul@sign,c
 39127  014854  5033               	movf	i2___flmul@b+3,w,c
 39128  014856  2433               	addwf	i2___flmul@b+3,w,c
 39129  014858  6E42               	movwf	i2___flmul@bexp,c
 39130  01485A  BE32               	btfsc	i2___flmul@b+2,7,c
 39131  01485C  8042               	bsf	i2___flmul@bexp,0,c
 39132  01485E  5042               	movf	i2___flmul@bexp,w,c
 39133  014860  B4D8               	btfsc	status,2,c
 39134  014862  D00D               	goto	i2l2236
 39135  014864  2842               	incf	i2___flmul@bexp,w,c
 39136  014866  A4D8               	btfss	status,2,c
 39137  014868  D008               	goto	i2l2237
 39138  01486A  0E00               	movlw	0
 39139  01486C  6E30               	movwf	i2___flmul@b,c
 39140  01486E  0E00               	movlw	0
 39141  014870  6E31               	movwf	i2___flmul@b+1,c
 39142  014872  0E00               	movlw	0
 39143  014874  6E32               	movwf	i2___flmul@b+2,c
 39144  014876  0E00               	movlw	0
 39145  014878  6E33               	movwf	i2___flmul@b+3,c
 39146  01487A                     i2l2237:
 39147  01487A  8E32               	bsf	i2___flmul@b+2,7,c
 39148  01487C  D008               	goto	i2l2238
 39149  01487E                     i2l2236:
 39150  01487E  0E00               	movlw	0
 39151  014880  6E30               	movwf	i2___flmul@b,c
 39152  014882  0E00               	movlw	0
 39153  014884  6E31               	movwf	i2___flmul@b+1,c
 39154  014886  0E00               	movlw	0
 39155  014888  6E32               	movwf	i2___flmul@b+2,c
 39156  01488A  0E00               	movlw	0
 39157  01488C  6E33               	movwf	i2___flmul@b+3,c
 39158  01488E                     i2l2238:
 39159  01488E  5037               	movf	i2___flmul@a+3,w,c
 39160  014890  0B80               	andlw	128
 39161  014892  1A3C               	xorwf	i2___flmul@sign,f,c
 39162  014894  5037               	movf	i2___flmul@a+3,w,c
 39163  014896  2437               	addwf	i2___flmul@a+3,w,c
 39164  014898  6E3D               	movwf	i2___flmul@aexp,c
 39165  01489A  BE36               	btfsc	i2___flmul@a+2,7,c
 39166  01489C  803D               	bsf	i2___flmul@aexp,0,c
 39167  01489E  503D               	movf	i2___flmul@aexp,w,c
 39168  0148A0  B4D8               	btfsc	status,2,c
 39169  0148A2  D00D               	goto	i2l2240
 39170  0148A4  283D               	incf	i2___flmul@aexp,w,c
 39171  0148A6  A4D8               	btfss	status,2,c
 39172  0148A8  D008               	goto	i2l2241
 39173  0148AA  0E00               	movlw	0
 39174  0148AC  6E34               	movwf	i2___flmul@a,c
 39175  0148AE  0E00               	movlw	0
 39176  0148B0  6E35               	movwf	i2___flmul@a+1,c
 39177  0148B2  0E00               	movlw	0
 39178  0148B4  6E36               	movwf	i2___flmul@a+2,c
 39179  0148B6  0E00               	movlw	0
 39180  0148B8  6E37               	movwf	i2___flmul@a+3,c
 39181  0148BA                     i2l2241:
 39182  0148BA  8E36               	bsf	i2___flmul@a+2,7,c
 39183  0148BC  D008               	goto	i2l2242
 39184  0148BE                     i2l2240:
 39185  0148BE  0E00               	movlw	0
 39186  0148C0  6E34               	movwf	i2___flmul@a,c
 39187  0148C2  0E00               	movlw	0
 39188  0148C4  6E35               	movwf	i2___flmul@a+1,c
 39189  0148C6  0E00               	movlw	0
 39190  0148C8  6E36               	movwf	i2___flmul@a+2,c
 39191  0148CA  0E00               	movlw	0
 39192  0148CC  6E37               	movwf	i2___flmul@a+3,c
 39193  0148CE                     i2l2242:
 39194  0148CE  503D               	movf	i2___flmul@aexp,w,c
 39195  0148D0  B4D8               	btfsc	status,2,c
 39196  0148D2  D003               	goto	i2u1367_40
 39197  0148D4  5042               	movf	i2___flmul@bexp,w,c
 39198  0148D6  A4D8               	btfss	status,2,c
 39199  0148D8  D009               	goto	i2l2243
 39200  0148DA                     i2u1367_40:
 39201  0148DA  0E00               	movlw	0
 39202  0148DC  6E30               	movwf	?i2___flmul,c
 39203  0148DE  0E00               	movlw	0
 39204  0148E0  6E31               	movwf	?i2___flmul+1,c
 39205  0148E2  0E00               	movlw	0
 39206  0148E4  6E32               	movwf	?i2___flmul+2,c
 39207  0148E6  0E00               	movlw	0
 39208  0148E8  6E33               	movwf	?i2___flmul+3,c
 39209  0148EA  0012               	return	
 39210  0148EC                     i2l2243:
 39211  0148EC  5036               	movf	i2___flmul@a+2,w,c
 39212  0148EE  0230               	mulwf	i2___flmul@b,c
 39213  0148F0  CFF3 F047          	movff	prodl,i2___flmul@temp
 39214  0148F4  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 39215  0148F8  5047               	movf	i2___flmul@temp,w,c
 39216  0148FA  6E3E               	movwf	i2___flmul@grs,c
 39217  0148FC  6A3F               	clrf	i2___flmul@grs+1,c
 39218  0148FE  6A40               	clrf	i2___flmul@grs+2,c
 39219  014900  6A41               	clrf	i2___flmul@grs+3,c
 39220  014902  5048               	movf	i2___flmul@temp+1,w,c
 39221  014904  6E43               	movwf	i2___flmul@prod,c
 39222  014906  6A44               	clrf	i2___flmul@prod+1,c
 39223  014908  6A45               	clrf	i2___flmul@prod+2,c
 39224  01490A  6A46               	clrf	i2___flmul@prod+3,c
 39225  01490C  5035               	movf	i2___flmul@a+1,w,c
 39226  01490E  0231               	mulwf	i2___flmul@b+1,c
 39227  014910  CFF3 F047          	movff	prodl,i2___flmul@temp
 39228  014914  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 39229  014918  5047               	movf	i2___flmul@temp,w,c
 39230  01491A  263E               	addwf	i2___flmul@grs,f,c
 39231  01491C  0E00               	movlw	0
 39232  01491E  223F               	addwfc	i2___flmul@grs+1,f,c
 39233  014920  2240               	addwfc	i2___flmul@grs+2,f,c
 39234  014922  2241               	addwfc	i2___flmul@grs+3,f,c
 39235  014924  5048               	movf	i2___flmul@temp+1,w,c
 39236  014926  2643               	addwf	i2___flmul@prod,f,c
 39237  014928  0E00               	movlw	0
 39238  01492A  2244               	addwfc	i2___flmul@prod+1,f,c
 39239  01492C  2245               	addwfc	i2___flmul@prod+2,f,c
 39240  01492E  2246               	addwfc	i2___flmul@prod+3,f,c
 39241  014930  5034               	movf	i2___flmul@a,w,c
 39242  014932  0232               	mulwf	i2___flmul@b+2,c
 39243  014934  CFF3 F047          	movff	prodl,i2___flmul@temp
 39244  014938  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 39245  01493C  5047               	movf	i2___flmul@temp,w,c
 39246  01493E  263E               	addwf	i2___flmul@grs,f,c
 39247  014940  0E00               	movlw	0
 39248  014942  223F               	addwfc	i2___flmul@grs+1,f,c
 39249  014944  2240               	addwfc	i2___flmul@grs+2,f,c
 39250  014946  2241               	addwfc	i2___flmul@grs+3,f,c
 39251  014948  5048               	movf	i2___flmul@temp+1,w,c
 39252  01494A  2643               	addwf	i2___flmul@prod,f,c
 39253  01494C  0E00               	movlw	0
 39254  01494E  2244               	addwfc	i2___flmul@prod+1,f,c
 39255  014950  2245               	addwfc	i2___flmul@prod+2,f,c
 39256  014952  2246               	addwfc	i2___flmul@prod+3,f,c
 39257  014954  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 39258  014958  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 39259  01495C  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 39260  014960  6A3E               	clrf	i2___flmul@grs,c
 39261  014962  5034               	movf	i2___flmul@a,w,c
 39262  014964  0231               	mulwf	i2___flmul@b+1,c
 39263  014966  CFF3 F047          	movff	prodl,i2___flmul@temp
 39264  01496A  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 39265  01496E  5047               	movf	i2___flmul@temp,w,c
 39266  014970  263E               	addwf	i2___flmul@grs,f,c
 39267  014972  5048               	movf	i2___flmul@temp+1,w,c
 39268  014974  223F               	addwfc	i2___flmul@grs+1,f,c
 39269  014976  0E00               	movlw	0
 39270  014978  2240               	addwfc	i2___flmul@grs+2,f,c
 39271  01497A  0E00               	movlw	0
 39272  01497C  2241               	addwfc	i2___flmul@grs+3,f,c
 39273  01497E  5035               	movf	i2___flmul@a+1,w,c
 39274  014980  0230               	mulwf	i2___flmul@b,c
 39275  014982  CFF3 F047          	movff	prodl,i2___flmul@temp
 39276  014986  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 39277  01498A  5047               	movf	i2___flmul@temp,w,c
 39278  01498C  263E               	addwf	i2___flmul@grs,f,c
 39279  01498E  5048               	movf	i2___flmul@temp+1,w,c
 39280  014990  223F               	addwfc	i2___flmul@grs+1,f,c
 39281  014992  0E00               	movlw	0
 39282  014994  2240               	addwfc	i2___flmul@grs+2,f,c
 39283  014996  0E00               	movlw	0
 39284  014998  2241               	addwfc	i2___flmul@grs+3,f,c
 39285  01499A  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 39286  01499E  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 39287  0149A2  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 39288  0149A6  6A3E               	clrf	i2___flmul@grs,c
 39289  0149A8  5034               	movf	i2___flmul@a,w,c
 39290  0149AA  0230               	mulwf	i2___flmul@b,c
 39291  0149AC  CFF3 F047          	movff	prodl,i2___flmul@temp
 39292  0149B0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 39293  0149B4  5047               	movf	i2___flmul@temp,w,c
 39294  0149B6  263E               	addwf	i2___flmul@grs,f,c
 39295  0149B8  5048               	movf	i2___flmul@temp+1,w,c
 39296  0149BA  223F               	addwfc	i2___flmul@grs+1,f,c
 39297  0149BC  0E00               	movlw	0
 39298  0149BE  2240               	addwfc	i2___flmul@grs+2,f,c
 39299  0149C0  0E00               	movlw	0
 39300  0149C2  2241               	addwfc	i2___flmul@grs+3,f,c
 39301  0149C4  5036               	movf	i2___flmul@a+2,w,c
 39302  0149C6  0231               	mulwf	i2___flmul@b+1,c
 39303  0149C8  CFF3 F047          	movff	prodl,i2___flmul@temp
 39304  0149CC  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 39305  0149D0  5047               	movf	i2___flmul@temp,w,c
 39306  0149D2  2643               	addwf	i2___flmul@prod,f,c
 39307  0149D4  5048               	movf	i2___flmul@temp+1,w,c
 39308  0149D6  2244               	addwfc	i2___flmul@prod+1,f,c
 39309  0149D8  0E00               	movlw	0
 39310  0149DA  2245               	addwfc	i2___flmul@prod+2,f,c
 39311  0149DC  0E00               	movlw	0
 39312  0149DE  2246               	addwfc	i2___flmul@prod+3,f,c
 39313  0149E0  5035               	movf	i2___flmul@a+1,w,c
 39314  0149E2  0232               	mulwf	i2___flmul@b+2,c
 39315  0149E4  CFF3 F047          	movff	prodl,i2___flmul@temp
 39316  0149E8  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 39317  0149EC  5047               	movf	i2___flmul@temp,w,c
 39318  0149EE  2643               	addwf	i2___flmul@prod,f,c
 39319  0149F0  5048               	movf	i2___flmul@temp+1,w,c
 39320  0149F2  2244               	addwfc	i2___flmul@prod+1,f,c
 39321  0149F4  0E00               	movlw	0
 39322  0149F6  2245               	addwfc	i2___flmul@prod+2,f,c
 39323  0149F8  0E00               	movlw	0
 39324  0149FA  2246               	addwfc	i2___flmul@prod+3,f,c
 39325  0149FC  5036               	movf	i2___flmul@a+2,w,c
 39326  0149FE  0232               	mulwf	i2___flmul@b+2,c
 39327  014A00  CFF3 F047          	movff	prodl,i2___flmul@temp
 39328  014A04  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 39329  014A08  5047               	movf	i2___flmul@temp,w,c
 39330  014A0A  6E38               	movwf	??i2___flmul& (0+255),c
 39331  014A0C  5048               	movf	i2___flmul@temp+1,w,c
 39332  014A0E  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 39333  014A10  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 39334  014A12  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 39335  014A14  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 39336  014A18  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 39337  014A1C  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 39338  014A20  6A38               	clrf	??i2___flmul,c
 39339  014A22  5038               	movf	??i2___flmul,w,c
 39340  014A24  2643               	addwf	i2___flmul@prod,f,c
 39341  014A26  5039               	movf	??i2___flmul+1,w,c
 39342  014A28  2244               	addwfc	i2___flmul@prod+1,f,c
 39343  014A2A  503A               	movf	??i2___flmul+2,w,c
 39344  014A2C  2245               	addwfc	i2___flmul@prod+2,f,c
 39345  014A2E  503B               	movf	??i2___flmul+3,w,c
 39346  014A30  2246               	addwfc	i2___flmul@prod+3,f,c
 39347  014A32  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 39348  014A36  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 39349  014A3A  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 39350  014A3E  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 39351  014A42  0E19               	movlw	25
 39352  014A44  D005               	goto	i2u1368_40
 39353  014A46                     i2u1368_45:
 39354  014A46  90D8               	bcf	status,0,c
 39355  014A48  323B               	rrcf	??i2___flmul+3,f,c
 39356  014A4A  323A               	rrcf	??i2___flmul+2,f,c
 39357  014A4C  3239               	rrcf	??i2___flmul+1,f,c
 39358  014A4E  3238               	rrcf	??i2___flmul,f,c
 39359  014A50                     i2u1368_40:
 39360  014A50  2EE8               	decfsz	wreg,f,c
 39361  014A52  D7F9               	goto	i2u1368_45
 39362  014A54  5038               	movf	??i2___flmul,w,c
 39363  014A56  2643               	addwf	i2___flmul@prod,f,c
 39364  014A58  5039               	movf	??i2___flmul+1,w,c
 39365  014A5A  2244               	addwfc	i2___flmul@prod+1,f,c
 39366  014A5C  503A               	movf	??i2___flmul+2,w,c
 39367  014A5E  2245               	addwfc	i2___flmul@prod+2,f,c
 39368  014A60  503B               	movf	??i2___flmul+3,w,c
 39369  014A62  2246               	addwfc	i2___flmul@prod+3,f,c
 39370  014A64  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 39371  014A68  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 39372  014A6C  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 39373  014A70  6A3E               	clrf	i2___flmul@grs,c
 39374  014A72  503D               	movf	i2___flmul@aexp,w,c
 39375  014A74  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 39376  014A78  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 39377  014A7A  2638               	addwf	??i2___flmul,f,c
 39378  014A7C  0E00               	movlw	0
 39379  014A7E  2239               	addwfc	??i2___flmul+1,f,c
 39380  014A80  0E82               	movlw	130
 39381  014A82  2438               	addwf	??i2___flmul,w,c
 39382  014A84  6E47               	movwf	i2___flmul@temp,c
 39383  014A86  0EFF               	movlw	255
 39384  014A88  2039               	addwfc	??i2___flmul+1,w,c
 39385  014A8A  6E48               	movwf	i2___flmul@temp+1,c
 39386  014A8C  D00F               	goto	i2l2247
 39387  014A8E  90D8               	bcf	status,0,c
 39388  014A90  3643               	rlcf	i2___flmul@prod,f,c
 39389  014A92  3644               	rlcf	i2___flmul@prod+1,f,c
 39390  014A94  3645               	rlcf	i2___flmul@prod+2,f,c
 39391  014A96  3646               	rlcf	i2___flmul@prod+3,f,c
 39392  014A98  BE41               	btfsc	i2___flmul@grs+3,7,c
 39393  014A9A  8043               	bsf	i2___flmul@prod,0,c
 39394  014A9C  90D8               	bcf	status,0,c
 39395  014A9E  363E               	rlcf	i2___flmul@grs,f,c
 39396  014AA0  363F               	rlcf	i2___flmul@grs+1,f,c
 39397  014AA2  3640               	rlcf	i2___flmul@grs+2,f,c
 39398  014AA4  3641               	rlcf	i2___flmul@grs+3,f,c
 39399  014AA6  0647               	decf	i2___flmul@temp,f,c
 39400  014AA8  A0D8               	btfss	status,0,c
 39401  014AAA  0648               	decf	i2___flmul@temp+1,f,c
 39402  014AAC                     i2l2247:
 39403  014AAC  AE45               	btfss	i2___flmul@prod+2,7,c
 39404  014AAE  D7EF               	goto	i2l2248
 39405  014AB0  0E00               	movlw	0
 39406  014AB2  6E3D               	movwf	i2___flmul@aexp,c
 39407  014AB4  AE41               	btfss	i2___flmul@grs+3,7,c
 39408  014AB6  D016               	goto	i2l2254
 39409  014AB8  0EFF               	movlw	255
 39410  014ABA  143E               	andwf	i2___flmul@grs,w,c
 39411  014ABC  6E38               	movwf	??i2___flmul& (0+255),c
 39412  014ABE  0EFF               	movlw	255
 39413  014AC0  143F               	andwf	i2___flmul@grs+1,w,c
 39414  014AC2  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 39415  014AC4  0EFF               	movlw	255
 39416  014AC6  1440               	andwf	i2___flmul@grs+2,w,c
 39417  014AC8  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 39418  014ACA  0E7F               	movlw	127
 39419  014ACC  1441               	andwf	i2___flmul@grs+3,w,c
 39420  014ACE  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 39421  014AD0  5038               	movf	??i2___flmul,w,c
 39422  014AD2  1039               	iorwf	??i2___flmul+1,w,c
 39423  014AD4  103A               	iorwf	??i2___flmul+2,w,c
 39424  014AD6  103B               	iorwf	??i2___flmul+3,w,c
 39425  014AD8  A4D8               	btfss	status,2,c
 39426  014ADA  D002               	goto	i2u1373_40
 39427  014ADC  A043               	btfss	i2___flmul@prod,0,c
 39428  014ADE  D002               	goto	i2l2254
 39429  014AE0                     i2u1373_40:
 39430  014AE0  0E01               	movlw	1
 39431  014AE2  6E3D               	movwf	i2___flmul@aexp,c
 39432  014AE4                     i2l2254:
 39433  014AE4  503D               	movf	i2___flmul@aexp,w,c
 39434  014AE6  B4D8               	btfsc	status,2,c
 39435  014AE8  D01F               	goto	i2l2256
 39436  014AEA  0E01               	movlw	1
 39437  014AEC  2643               	addwf	i2___flmul@prod,f,c
 39438  014AEE  0E00               	movlw	0
 39439  014AF0  2244               	addwfc	i2___flmul@prod+1,f,c
 39440  014AF2  2245               	addwfc	i2___flmul@prod+2,f,c
 39441  014AF4  2246               	addwfc	i2___flmul@prod+3,f,c
 39442  014AF6  A046               	btfss	i2___flmul@prod+3,0,c
 39443  014AF8  D017               	goto	i2l2256
 39444  014AFA  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 39445  014AFE  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 39446  014B02  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 39447  014B06  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 39448  014B0A  343B               	rlcf	??i2___flmul+3,w,c
 39449  014B0C  323B               	rrcf	??i2___flmul+3,f,c
 39450  014B0E  323A               	rrcf	??i2___flmul+2,f,c
 39451  014B10  3239               	rrcf	??i2___flmul+1,f,c
 39452  014B12  3238               	rrcf	??i2___flmul,f,c
 39453  014B14  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 39454  014B18  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 39455  014B1C  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 39456  014B20  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 39457  014B24  4A47               	infsnz	i2___flmul@temp,f,c
 39458  014B26  2A48               	incf	i2___flmul@temp+1,f,c
 39459  014B28                     i2l2256:
 39460  014B28  BE48               	btfsc	i2___flmul@temp+1,7,c
 39461  014B2A  D00D               	goto	i2l2257
 39462  014B2C  5048               	movf	i2___flmul@temp+1,w,c
 39463  014B2E  E103               	bnz	i2u1376_40
 39464  014B30  2847               	incf	i2___flmul@temp,w,c
 39465  014B32  A0D8               	btfss	status,0,c
 39466  014B34  D008               	goto	i2l2257
 39467  014B36                     i2u1376_40:
 39468  014B36  0E00               	movlw	0
 39469  014B38  6E43               	movwf	i2___flmul@prod,c
 39470  014B3A  0E00               	movlw	0
 39471  014B3C  6E44               	movwf	i2___flmul@prod+1,c
 39472  014B3E  0E80               	movlw	128
 39473  014B40  6E45               	movwf	i2___flmul@prod+2,c
 39474  014B42  0E7F               	movlw	127
 39475  014B44  D020               	goto	L21
 39476  014B46                     i2l2257:
 39477  014B46  BE48               	btfsc	i2___flmul@temp+1,7,c
 39478  014B48  D005               	goto	i2u1377_40
 39479  014B4A  5048               	movf	i2___flmul@temp+1,w,c
 39480  014B4C  E10E               	bnz	i2l2259
 39481  014B4E  0447               	decf	i2___flmul@temp,w,c
 39482  014B50  B0D8               	btfsc	status,0,c
 39483  014B52  D00B               	goto	i2l2259
 39484  014B54                     i2u1377_40:
 39485  014B54  0E00               	movlw	0
 39486  014B56  6E43               	movwf	i2___flmul@prod,c
 39487  014B58  0E00               	movlw	0
 39488  014B5A  6E44               	movwf	i2___flmul@prod+1,c
 39489  014B5C  0E00               	movlw	0
 39490  014B5E  6E45               	movwf	i2___flmul@prod+2,c
 39491  014B60  0E00               	movlw	0
 39492  014B62  6E46               	movwf	i2___flmul@prod+3,c
 39493  014B64  0E00               	movlw	0
 39494  014B66  6E3C               	movwf	i2___flmul@sign,c
 39495  014B68  D00F               	goto	i2l2260
 39496  014B6A                     i2l2259:
 39497  014B6A  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 39498  014B6E  0EFF               	movlw	255
 39499  014B70  1643               	andwf	i2___flmul@prod,f,c
 39500  014B72  0EFF               	movlw	255
 39501  014B74  1644               	andwf	i2___flmul@prod+1,f,c
 39502  014B76  0E7F               	movlw	127
 39503  014B78  1645               	andwf	i2___flmul@prod+2,f,c
 39504  014B7A  0E00               	movlw	0
 39505  014B7C  1646               	andwf	i2___flmul@prod+3,f,c
 39506  014B7E  B042               	btfsc	i2___flmul@bexp,0,c
 39507  014B80  8E45               	bsf	i2___flmul@prod+2,7,c
 39508  014B82  90D8               	bcf	status,0,c
 39509  014B84  3042               	rrcf	i2___flmul@bexp,w,c
 39510  014B86                     L21:
 39511  014B86  6E46               	movwf	i2___flmul@prod+3,c
 39512  014B88                     i2l2260:
 39513  014B88  503C               	movf	i2___flmul@sign,w,c
 39514  014B8A  1246               	iorwf	i2___flmul@prod+3,f,c
 39515  014B8C  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 39516  014B90  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 39517  014B94  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 39518  014B98  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 39519  014B9C  0012               	return	
 39520  014B9E                     __end_ofi2___flmul:
 39521                           	opt stack 0
 39522                           tosu	equ	0xFFF
 39523                           tosh	equ	0xFFE
 39524                           tosl	equ	0xFFD
 39525                           pclatu	equ	0xFFB
 39526                           pclath	equ	0xFFA
 39527                           tblptru	equ	0xFF8
 39528                           tblptrh	equ	0xFF7
 39529                           tblptrl	equ	0xFF6
 39530                           tablat	equ	0xFF5
 39531                           prodh	equ	0xFF4
 39532                           prodl	equ	0xFF3
 39533                           intcon	equ	0xFF2
 39534                           indf0	equ	0xFEF
 39535                           postinc0	equ	0xFEE
 39536                           fsr0h	equ	0xFEA
 39537                           fsr0l	equ	0xFE9
 39538                           wreg	equ	0xFE8
 39539                           indf1	equ	0xFE7
 39540                           postdec1	equ	0xFE5
 39541                           plusw1	equ	0xFE3
 39542                           fsr1h	equ	0xFE2
 39543                           fsr1l	equ	0xFE1
 39544                           bsr	equ	0xFE0
 39545                           indf2	equ	0xFDF
 39546                           postinc2	equ	0xFDE
 39547                           postdec2	equ	0xFDD
 39548                           plusw2	equ	0xFDB
 39549                           fsr2h	equ	0xFDA
 39550                           fsr2l	equ	0xFD9
 39551                           status	equ	0xFD8
 39552                           
 39553 ;; *************** function i2___fladd *****************
 39554 ;; Defined at:
 39555 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 39556 ;; Parameters:    Size  Location     Type
 39557 ;;  b               4   85[COMRAM] unsigned char 
 39558 ;;  a               4   89[COMRAM] unsigned char 
 39559 ;; Auto vars:     Size  Location     Type
 39560 ;;  __fladd         1   11[BANK0 ] unsigned char 
 39561 ;;  __fladd         1   10[BANK0 ] unsigned char 
 39562 ;;  __fladd         1    9[BANK0 ] unsigned char 
 39563 ;;  __fladd         1    8[BANK0 ] unsigned char 
 39564 ;; Return value:  Size  Location     Type
 39565 ;;                  4   85[COMRAM] unsigned char 
 39566 ;; Registers used:
 39567 ;;		wreg, status,2, status,0
 39568 ;; Tracked objects:
 39569 ;;		On entry : 0/0
 39570 ;;		On exit  : 0/0
 39571 ;;		Unchanged: 0/0
 39572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39573 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39574 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39575 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39576 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39577 ;;Total ram usage:       20 bytes
 39578 ;; Hardware stack levels used:    1
 39579 ;; This function calls:
 39580 ;;		Nothing
 39581 ;; This function is called by:
 39582 ;;		_peakToRMS
 39583 ;;		_ADCPostProcessingCallback
 39584 ;;		_acos
 39585 ;;		_asin
 39586 ;;		_atan
 39587 ;;		_eval_poly
 39588 ;;		_sin
 39589 ;;		_floor
 39590 ;;		i2_printf
 39591 ;;		i2___flsub
 39592 ;; This function uses a non-reentrant model
 39593 ;;
 39594                           
 39595                           	psect	text126
 39596  014EDC                     __ptext126:
 39597                           	opt stack 0
 39598  014EDC                     i2___fladd:
 39599                           	opt stack 15
 39600                           
 39601                           ;incstack = 0
 39602  014EDC  5059               	movf	i2___fladd@b+3,w,c
 39603  014EDE  0B80               	andlw	128
 39604  014EE0  0100               	movlb	0	; () banked
 39605  014EE2  6F68               	movwf	i2___fladd@signs& (0+255),b
 39606  014EE4  5059               	movf	i2___fladd@b+3,w,c
 39607  014EE6  2459               	addwf	i2___fladd@b+3,w,c
 39608  014EE8  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 39609                           
 39610                           ; BSR set to: 0
 39611  014EEA  BE58               	btfsc	i2___fladd@b+2,7,c
 39612                           
 39613                           ; BSR set to: 0
 39614  014EEC  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 39615                           
 39616                           ; BSR set to: 0
 39617                           
 39618                           ; BSR set to: 0
 39619  014EEE  516A               	movf	i2___fladd@bexp& (0+255),w,b
 39620  014EF0  B4D8               	btfsc	status,2,c
 39621  014EF2  D00D               	goto	i2l2145
 39622                           
 39623                           ; BSR set to: 0
 39624  014EF4  296A               	incf	i2___fladd@bexp& (0+255),w,b
 39625  014EF6  A4D8               	btfss	status,2,c
 39626  014EF8  D008               	goto	i2l2146
 39627                           
 39628                           ; BSR set to: 0
 39629  014EFA  0E00               	movlw	0
 39630  014EFC  6E56               	movwf	i2___fladd@b,c
 39631  014EFE  0E00               	movlw	0
 39632  014F00  6E57               	movwf	i2___fladd@b+1,c
 39633  014F02  0E00               	movlw	0
 39634  014F04  6E58               	movwf	i2___fladd@b+2,c
 39635  014F06  0E00               	movlw	0
 39636  014F08  6E59               	movwf	i2___fladd@b+3,c
 39637  014F0A                     i2l2146:
 39638                           
 39639                           ; BSR set to: 0
 39640                           
 39641                           ; BSR set to: 0
 39642  014F0A  8E58               	bsf	i2___fladd@b+2,7,c
 39643  014F0C  D006               	goto	L22
 39644  014F0E                     i2l2145:
 39645                           
 39646                           ; BSR set to: 0
 39647                           
 39648                           ; BSR set to: 0
 39649  014F0E  0E00               	movlw	0
 39650  014F10  6E56               	movwf	i2___fladd@b,c
 39651  014F12  0E00               	movlw	0
 39652  014F14  6E57               	movwf	i2___fladd@b+1,c
 39653  014F16  0E00               	movlw	0
 39654  014F18  6E58               	movwf	i2___fladd@b+2,c
 39655  014F1A                     L22:
 39656  014F1A  0E00               	movlw	0
 39657  014F1C  6E59               	movwf	i2___fladd@b+3,c
 39658                           
 39659                           ; BSR set to: 0
 39660                           
 39661                           ; BSR set to: 0
 39662  014F1E  505D               	movf	i2___fladd@a+3,w,c
 39663  014F20  0B80               	andlw	128
 39664  014F22  6F69               	movwf	i2___fladd@aexp& (0+255),b
 39665                           
 39666                           ; BSR set to: 0
 39667  014F24  5168               	movf	i2___fladd@signs& (0+255),w,b
 39668  014F26  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 39669  014F28  A4D8               	btfss	status,2,c
 39670                           
 39671                           ; BSR set to: 0
 39672  014F2A  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 39673                           
 39674                           ; BSR set to: 0
 39675                           
 39676                           ; BSR set to: 0
 39677  014F2C  505D               	movf	i2___fladd@a+3,w,c
 39678  014F2E  245D               	addwf	i2___fladd@a+3,w,c
 39679  014F30  6F69               	movwf	i2___fladd@aexp& (0+255),b
 39680                           
 39681                           ; BSR set to: 0
 39682  014F32  BE5C               	btfsc	i2___fladd@a+2,7,c
 39683                           
 39684                           ; BSR set to: 0
 39685  014F34  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 39686                           
 39687                           ; BSR set to: 0
 39688                           
 39689                           ; BSR set to: 0
 39690  014F36  5169               	movf	i2___fladd@aexp& (0+255),w,b
 39691  014F38  B4D8               	btfsc	status,2,c
 39692  014F3A  D00D               	goto	i2l2150
 39693                           
 39694                           ; BSR set to: 0
 39695  014F3C  2969               	incf	i2___fladd@aexp& (0+255),w,b
 39696  014F3E  A4D8               	btfss	status,2,c
 39697  014F40  D008               	goto	i2l2151
 39698                           
 39699                           ; BSR set to: 0
 39700  014F42  0E00               	movlw	0
 39701  014F44  6E5A               	movwf	i2___fladd@a,c
 39702  014F46  0E00               	movlw	0
 39703  014F48  6E5B               	movwf	i2___fladd@a+1,c
 39704  014F4A  0E00               	movlw	0
 39705  014F4C  6E5C               	movwf	i2___fladd@a+2,c
 39706  014F4E  0E00               	movlw	0
 39707  014F50  6E5D               	movwf	i2___fladd@a+3,c
 39708  014F52                     i2l2151:
 39709                           
 39710                           ; BSR set to: 0
 39711                           
 39712                           ; BSR set to: 0
 39713  014F52  8E5C               	bsf	i2___fladd@a+2,7,c
 39714  014F54  D006               	goto	L23
 39715  014F56                     i2l2150:
 39716                           
 39717                           ; BSR set to: 0
 39718                           
 39719                           ; BSR set to: 0
 39720  014F56  0E00               	movlw	0
 39721  014F58  6E5A               	movwf	i2___fladd@a,c
 39722  014F5A  0E00               	movlw	0
 39723  014F5C  6E5B               	movwf	i2___fladd@a+1,c
 39724  014F5E  0E00               	movlw	0
 39725  014F60  6E5C               	movwf	i2___fladd@a+2,c
 39726  014F62                     L23:
 39727  014F62  0E00               	movlw	0
 39728  014F64  6E5D               	movwf	i2___fladd@a+3,c
 39729                           
 39730                           ; BSR set to: 0
 39731                           
 39732                           ; BSR set to: 0
 39733  014F66  516A               	movf	i2___fladd@bexp& (0+255),w,b
 39734  014F68  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 39735  014F6A  B0D8               	btfsc	status,0,c
 39736  014F6C  D022               	goto	i2l2153
 39737                           
 39738                           ; BSR set to: 0
 39739  014F6E  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 39740  014F70  D002               	goto	i2l2154
 39741                           
 39742                           ; BSR set to: 0
 39743  014F72  0E80               	movlw	128
 39744  014F74  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 39745  014F76                     i2l2154:
 39746                           
 39747                           ; BSR set to: 0
 39748                           
 39749                           ; BSR set to: 0
 39750  014F76  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 39751                           
 39752                           ; BSR set to: 0
 39753  014F7A  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 39754                           
 39755                           ; BSR set to: 0
 39756  014F7E  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 39757                           
 39758                           ; BSR set to: 0
 39759  014F82  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 39760                           
 39761                           ; BSR set to: 0
 39762  014F86  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 39763                           
 39764                           ; BSR set to: 0
 39765  014F8A  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 39766                           
 39767                           ; BSR set to: 0
 39768  014F8E  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 39769                           
 39770                           ; BSR set to: 0
 39771  014F92  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 39772                           
 39773                           ; BSR set to: 0
 39774  014F96  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 39775                           
 39776                           ; BSR set to: 0
 39777  014F9A  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 39778                           
 39779                           ; BSR set to: 0
 39780  014F9E  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 39781                           
 39782                           ; BSR set to: 0
 39783  014FA2  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 39784                           
 39785                           ; BSR set to: 0
 39786  014FA6  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 39787                           
 39788                           ; BSR set to: 0
 39789  014FAA  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 39790                           
 39791                           ; BSR set to: 0
 39792  014FAE  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 39793  014FB2                     i2l2153:
 39794                           
 39795                           ; BSR set to: 0
 39796                           
 39797                           ; BSR set to: 0
 39798  014FB2  0E00               	movlw	0
 39799  014FB4  6F6B               	movwf	i2___fladd@grs& (0+255),b
 39800                           
 39801                           ; BSR set to: 0
 39802  014FB6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 39803  014FB8  6F60               	movwf	??i2___fladd& (0+255),b
 39804  014FBA  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 39805  014FBC  1F60               	comf	??i2___fladd& (0+255),f,b
 39806  014FBE  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 39807  014FC0  4B60               	infsnz	??i2___fladd& (0+255),f,b
 39808  014FC2  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 39809  014FC4  5169               	movf	i2___fladd@aexp& (0+255),w,b
 39810  014FC6  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 39811  014FC8  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 39812  014FCA  5160               	movf	??i2___fladd& (0+255),w,b
 39813  014FCC  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 39814  014FCE  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 39815  014FD0  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 39816  014FD2  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 39817  014FD4  D02C               	goto	i2l2157
 39818  014FD6  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 39819  014FD8  E104               	bnz	i2u1330_40
 39820  014FDA  0E1A               	movlw	26
 39821  014FDC  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 39822  014FDE  A0D8               	btfss	status,0,c
 39823  014FE0  D026               	goto	i2l2157
 39824  014FE2                     i2u1330_40:
 39825                           
 39826                           ; BSR set to: 0
 39827  014FE2  5056               	movf	i2___fladd@b,w,c
 39828  014FE4  1057               	iorwf	i2___fladd@b+1,w,c
 39829  014FE6  1058               	iorwf	i2___fladd@b+2,w,c
 39830  014FE8  1059               	iorwf	i2___fladd@b+3,w,c
 39831  014FEA  B4D8               	btfsc	status,2,c
 39832  014FEC  D002               	goto	i2u1331_40
 39833  014FEE  0E01               	movlw	1
 39834  014FF0  D001               	goto	i2u1332_40
 39835  014FF2                     i2u1331_40:
 39836  014FF2  0E00               	movlw	0
 39837  014FF4                     i2u1332_40:
 39838  014FF4  6F6B               	movwf	i2___fladd@grs& (0+255),b
 39839                           
 39840                           ; BSR set to: 0
 39841  014FF6  0E00               	movlw	0
 39842  014FF8  6E56               	movwf	i2___fladd@b,c
 39843  014FFA  0E00               	movlw	0
 39844  014FFC  6E57               	movwf	i2___fladd@b+1,c
 39845  014FFE  0E00               	movlw	0
 39846  015000  6E58               	movwf	i2___fladd@b+2,c
 39847  015002  0E00               	movlw	0
 39848  015004  6E59               	movwf	i2___fladd@b+3,c
 39849                           
 39850                           ; BSR set to: 0
 39851  015006  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 39852  01500A  D015               	goto	i2u1335_40
 39853  01500C                     i2l2158:
 39854                           
 39855                           ; BSR set to: 0
 39856  01500C  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 39857  01500E  D005               	goto	i2l2159
 39858                           
 39859                           ; BSR set to: 0
 39860  015010  90D8               	bcf	status,0,c
 39861  015012  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 39862  015014  0901               	iorlw	1
 39863  015016  6F6B               	movwf	i2___fladd@grs& (0+255),b
 39864  015018  D002               	goto	i2l2160
 39865  01501A                     i2l2159:
 39866                           
 39867                           ; BSR set to: 0
 39868                           
 39869                           ; BSR set to: 0
 39870  01501A  90D8               	bcf	status,0,c
 39871  01501C  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 39872  01501E                     i2l2160:
 39873                           
 39874                           ; BSR set to: 0
 39875                           
 39876                           ; BSR set to: 0
 39877  01501E  B056               	btfsc	i2___fladd@b,0,c
 39878                           
 39879                           ; BSR set to: 0
 39880  015020  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 39881                           
 39882                           ; BSR set to: 0
 39883                           
 39884                           ; BSR set to: 0
 39885  015022  3459               	rlcf	i2___fladd@b+3,w,c
 39886  015024  3259               	rrcf	i2___fladd@b+3,f,c
 39887  015026  3258               	rrcf	i2___fladd@b+2,f,c
 39888  015028  3257               	rrcf	i2___fladd@b+1,f,c
 39889  01502A  3256               	rrcf	i2___fladd@b,f,c
 39890                           
 39891                           ; BSR set to: 0
 39892  01502C  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 39893  01502E                     i2l2157:
 39894                           
 39895                           ; BSR set to: 0
 39896  01502E  5169               	movf	i2___fladd@aexp& (0+255),w,b
 39897  015030  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 39898  015032  A0D8               	btfss	status,0,c
 39899  015034  D7EB               	goto	i2l2158
 39900  015036                     i2u1335_40:
 39901                           
 39902                           ; BSR set to: 0
 39903                           
 39904                           ; BSR set to: 0
 39905  015036  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 39906  015038  D029               	goto	i2l2163
 39907                           
 39908                           ; BSR set to: 0
 39909  01503A  516A               	movf	i2___fladd@bexp& (0+255),w,b
 39910  01503C  A4D8               	btfss	status,2,c
 39911  01503E  D009               	goto	i2l2164
 39912                           
 39913                           ; BSR set to: 0
 39914  015040  0E00               	movlw	0
 39915  015042  6E56               	movwf	?i2___fladd,c
 39916  015044  0E00               	movlw	0
 39917  015046  6E57               	movwf	?i2___fladd+1,c
 39918  015048  0E00               	movlw	0
 39919  01504A  6E58               	movwf	?i2___fladd+2,c
 39920  01504C  0E00               	movlw	0
 39921  01504E  6E59               	movwf	?i2___fladd+3,c
 39922                           
 39923                           ; BSR set to: 0
 39924  015050  0012               	return	
 39925  015052                     i2l2164:
 39926                           
 39927                           ; BSR set to: 0
 39928                           
 39929                           ; BSR set to: 0
 39930  015052  505A               	movf	i2___fladd@a,w,c
 39931  015054  2656               	addwf	i2___fladd@b,f,c
 39932  015056  505B               	movf	i2___fladd@a+1,w,c
 39933  015058  2257               	addwfc	i2___fladd@b+1,f,c
 39934  01505A  505C               	movf	i2___fladd@a+2,w,c
 39935  01505C  2258               	addwfc	i2___fladd@b+2,f,c
 39936  01505E  505D               	movf	i2___fladd@a+3,w,c
 39937  015060  2259               	addwfc	i2___fladd@b+3,f,c
 39938                           
 39939                           ; BSR set to: 0
 39940  015062  A059               	btfss	i2___fladd@b+3,0,c
 39941  015064  D083               	goto	i2u1348_40
 39942                           
 39943                           ; BSR set to: 0
 39944  015066  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 39945  015068  D006               	goto	i2l2167
 39946                           
 39947                           ; BSR set to: 0
 39948  01506A  90D8               	bcf	status,0,c
 39949  01506C  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 39950  01506E  516B               	movf	i2___fladd@grs& (0+255),w,b
 39951  015070  0901               	iorlw	1
 39952  015072  6F6B               	movwf	i2___fladd@grs& (0+255),b
 39953  015074  D002               	goto	i2l2168
 39954  015076                     i2l2167:
 39955                           
 39956                           ; BSR set to: 0
 39957                           
 39958                           ; BSR set to: 0
 39959  015076  90D8               	bcf	status,0,c
 39960  015078  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 39961  01507A                     i2l2168:
 39962                           
 39963                           ; BSR set to: 0
 39964                           
 39965                           ; BSR set to: 0
 39966  01507A  B056               	btfsc	i2___fladd@b,0,c
 39967                           
 39968                           ; BSR set to: 0
 39969  01507C  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 39970                           
 39971                           ; BSR set to: 0
 39972                           
 39973                           ; BSR set to: 0
 39974  01507E  3459               	rlcf	i2___fladd@b+3,w,c
 39975  015080  3259               	rrcf	i2___fladd@b+3,f,c
 39976  015082  3258               	rrcf	i2___fladd@b+2,f,c
 39977  015084  3257               	rrcf	i2___fladd@b+1,f,c
 39978  015086  3256               	rrcf	i2___fladd@b,f,c
 39979                           
 39980                           ; BSR set to: 0
 39981  015088  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 39982                           
 39983                           ; BSR set to: 0
 39984  01508A  D070               	goto	i2u1348_40
 39985  01508C                     i2l2163:
 39986                           
 39987                           ; BSR set to: 0
 39988                           
 39989                           ; BSR set to: 0
 39990  01508C  505A               	movf	i2___fladd@a,w,c
 39991  01508E  5C56               	subwf	i2___fladd@b,w,c
 39992  015090  505B               	movf	i2___fladd@a+1,w,c
 39993  015092  5857               	subwfb	i2___fladd@b+1,w,c
 39994  015094  505C               	movf	i2___fladd@a+2,w,c
 39995  015096  5858               	subwfb	i2___fladd@b+2,w,c
 39996  015098  5059               	movf	i2___fladd@b+3,w,c
 39997  01509A  0A80               	xorlw	128
 39998  01509C  6F60               	movwf	??i2___fladd& (0+255),b
 39999  01509E  505D               	movf	i2___fladd@a+3,w,c
 40000  0150A0  0A80               	xorlw	128
 40001  0150A2  5960               	subwfb	??i2___fladd& (0+255),w,b
 40002  0150A4  B0D8               	btfsc	status,0,c
 40003  0150A6  D036               	goto	i2l2171
 40004                           
 40005                           ; BSR set to: 0
 40006  0150A8  C056  F060         	movff	i2___fladd@b,??i2___fladd
 40007  0150AC  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 40008  0150B0  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 40009  0150B4  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 40010  0150B8  1F60               	comf	??i2___fladd& (0+255),f,b
 40011  0150BA  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 40012  0150BC  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 40013  0150BE  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 40014  0150C0  2B60               	incf	??i2___fladd& (0+255),f,b
 40015  0150C2  0E00               	movlw	0
 40016  0150C4  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 40017  0150C6  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 40018  0150C8  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 40019  0150CA  505A               	movf	i2___fladd@a,w,c
 40020  0150CC  2560               	addwf	??i2___fladd& (0+255),w,b
 40021  0150CE  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 40022  0150D0  505B               	movf	i2___fladd@a+1,w,c
 40023  0150D2  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 40024  0150D4  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 40025  0150D6  505C               	movf	i2___fladd@a+2,w,c
 40026  0150D8  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 40027  0150DA  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 40028  0150DC  505D               	movf	i2___fladd@a+3,w,c
 40029  0150DE  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 40030  0150E0  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 40031  0150E2  0EFF               	movlw	255
 40032  0150E4  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 40033  0150E6  6E56               	movwf	i2___fladd@b,c
 40034  0150E8  0EFF               	movlw	255
 40035  0150EA  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 40036  0150EC  6E57               	movwf	i2___fladd@b+1,c
 40037  0150EE  0EFF               	movlw	255
 40038  0150F0  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 40039  0150F2  6E58               	movwf	i2___fladd@b+2,c
 40040  0150F4  0EFF               	movlw	255
 40041  0150F6  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 40042  0150F8  6E59               	movwf	i2___fladd@b+3,c
 40043  0150FA  0E80               	movlw	128
 40044  0150FC  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 40045                           
 40046                           ; BSR set to: 0
 40047  0150FE  6D6B               	negf	i2___fladd@grs& (0+255),b
 40048                           
 40049                           ; BSR set to: 0
 40050  015100  516B               	movf	i2___fladd@grs& (0+255),w,b
 40051  015102  A4D8               	btfss	status,2,c
 40052  015104  D00F               	goto	i2l2173
 40053                           
 40054                           ; BSR set to: 0
 40055  015106  0E01               	movlw	1
 40056  015108  2656               	addwf	i2___fladd@b,f,c
 40057  01510A  0E00               	movlw	0
 40058  01510C  2257               	addwfc	i2___fladd@b+1,f,c
 40059  01510E  2258               	addwfc	i2___fladd@b+2,f,c
 40060  015110  2259               	addwfc	i2___fladd@b+3,f,c
 40061                           
 40062                           ; BSR set to: 0
 40063  015112  D008               	goto	i2l2173
 40064  015114                     i2l2171:
 40065                           
 40066                           ; BSR set to: 0
 40067                           
 40068                           ; BSR set to: 0
 40069  015114  505A               	movf	i2___fladd@a,w,c
 40070  015116  5E56               	subwf	i2___fladd@b,f,c
 40071  015118  505B               	movf	i2___fladd@a+1,w,c
 40072  01511A  5A57               	subwfb	i2___fladd@b+1,f,c
 40073  01511C  505C               	movf	i2___fladd@a+2,w,c
 40074  01511E  5A58               	subwfb	i2___fladd@b+2,f,c
 40075  015120  505D               	movf	i2___fladd@a+3,w,c
 40076  015122  5A59               	subwfb	i2___fladd@b+3,f,c
 40077  015124                     i2l2173:
 40078                           
 40079                           ; BSR set to: 0
 40080  015124  5056               	movf	i2___fladd@b,w,c
 40081  015126  1057               	iorwf	i2___fladd@b+1,w,c
 40082  015128  1058               	iorwf	i2___fladd@b+2,w,c
 40083  01512A  1059               	iorwf	i2___fladd@b+3,w,c
 40084  01512C  A4D8               	btfss	status,2,c
 40085  01512E  D01C               	goto	i2l2180
 40086                           
 40087                           ; BSR set to: 0
 40088  015130  516B               	movf	i2___fladd@grs& (0+255),w,b
 40089  015132  A4D8               	btfss	status,2,c
 40090  015134  D019               	goto	i2l2180
 40091                           
 40092                           ; BSR set to: 0
 40093  015136  0E00               	movlw	0
 40094  015138  6E56               	movwf	?i2___fladd,c
 40095  01513A  0E00               	movlw	0
 40096  01513C  6E57               	movwf	?i2___fladd+1,c
 40097  01513E  0E00               	movlw	0
 40098  015140  6E58               	movwf	?i2___fladd+2,c
 40099  015142  0E00               	movlw	0
 40100  015144  6E59               	movwf	?i2___fladd+3,c
 40101                           
 40102                           ; BSR set to: 0
 40103  015146  0012               	return	
 40104  015148                     
 40105                           ; BSR set to: 0
 40106                           
 40107                           ; BSR set to: 0
 40108  015148  90D8               	bcf	status,0,c
 40109  01514A  3656               	rlcf	i2___fladd@b,f,c
 40110  01514C  3657               	rlcf	i2___fladd@b+1,f,c
 40111  01514E  3658               	rlcf	i2___fladd@b+2,f,c
 40112  015150  3659               	rlcf	i2___fladd@b+3,f,c
 40113                           
 40114                           ; BSR set to: 0
 40115  015152  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 40116                           
 40117                           ; BSR set to: 0
 40118  015154  8056               	bsf	i2___fladd@b,0,c
 40119                           
 40120                           ; BSR set to: 0
 40121                           
 40122                           ; BSR set to: 0
 40123  015156  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 40124  015158  D002               	goto	i2l2178
 40125                           
 40126                           ; BSR set to: 0
 40127  01515A  80D8               	bsf	status,0,c
 40128  01515C  D001               	goto	L24
 40129  01515E                     i2l2178:
 40130                           
 40131                           ; BSR set to: 0
 40132                           
 40133                           ; BSR set to: 0
 40134  01515E  90D8               	bcf	status,0,c
 40135  015160                     L24:
 40136  015160  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 40137                           
 40138                           ; BSR set to: 0
 40139                           
 40140                           ; BSR set to: 0
 40141  015162  516A               	movf	i2___fladd@bexp& (0+255),w,b
 40142  015164  A4D8               	btfss	status,2,c
 40143                           
 40144                           ; BSR set to: 0
 40145  015166  076A               	decf	i2___fladd@bexp& (0+255),f,b
 40146  015168                     i2l2180:
 40147                           
 40148                           ; BSR set to: 0
 40149                           
 40150                           ; BSR set to: 0
 40151                           
 40152                           ; BSR set to: 0
 40153  015168  AE58               	btfss	i2___fladd@b+2,7,c
 40154  01516A  D7EE               	goto	i2l2176
 40155  01516C                     i2u1348_40:
 40156                           
 40157                           ; BSR set to: 0
 40158                           
 40159                           ; BSR set to: 0
 40160                           
 40161                           ; BSR set to: 0
 40162  01516C  0E00               	movlw	0
 40163  01516E  6F69               	movwf	i2___fladd@aexp& (0+255),b
 40164                           
 40165                           ; BSR set to: 0
 40166  015170  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 40167  015172  D00A               	goto	i2l2185
 40168                           
 40169                           ; BSR set to: 0
 40170  015174  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 40171  015178  0E7F               	movlw	127
 40172  01517A  1760               	andwf	??i2___fladd& (0+255),f,b
 40173  01517C  A4D8               	btfss	status,2,c
 40174  01517E  D002               	goto	i2u1351_40
 40175                           
 40176                           ; BSR set to: 0
 40177                           
 40178                           ; BSR set to: 0
 40179  015180  A056               	btfss	i2___fladd@b,0,c
 40180  015182  D002               	goto	i2l2185
 40181  015184                     i2u1351_40:
 40182                           
 40183                           ; BSR set to: 0
 40184  015184  0E01               	movlw	1
 40185  015186  6F69               	movwf	i2___fladd@aexp& (0+255),b
 40186  015188                     i2l2185:
 40187                           
 40188                           ; BSR set to: 0
 40189                           
 40190                           ; BSR set to: 0
 40191                           
 40192                           ; BSR set to: 0
 40193  015188  5169               	movf	i2___fladd@aexp& (0+255),w,b
 40194  01518A  B4D8               	btfsc	status,2,c
 40195  01518C  D020               	goto	i2l2188
 40196                           
 40197                           ; BSR set to: 0
 40198  01518E  0E01               	movlw	1
 40199  015190  2656               	addwf	i2___fladd@b,f,c
 40200  015192  0E00               	movlw	0
 40201  015194  2257               	addwfc	i2___fladd@b+1,f,c
 40202  015196  2258               	addwfc	i2___fladd@b+2,f,c
 40203  015198  2259               	addwfc	i2___fladd@b+3,f,c
 40204                           
 40205                           ; BSR set to: 0
 40206  01519A  A059               	btfss	i2___fladd@b+3,0,c
 40207  01519C  D018               	goto	i2l2188
 40208                           
 40209                           ; BSR set to: 0
 40210  01519E  C056  F060         	movff	i2___fladd@b,??i2___fladd
 40211  0151A2  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 40212  0151A6  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 40213  0151AA  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 40214  0151AE  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 40215  0151B0  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 40216  0151B2  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 40217  0151B4  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 40218  0151B6  3360               	rrcf	??i2___fladd& (0+255),f,b
 40219  0151B8  C060  F056         	movff	??i2___fladd,i2___fladd@b
 40220  0151BC  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 40221  0151C0  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 40222  0151C4  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 40223  0151C8  296A               	incf	i2___fladd@bexp& (0+255),w,b
 40224  0151CA  A4D8               	btfss	status,2,c
 40225                           
 40226                           ; BSR set to: 0
 40227  0151CC  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 40228  0151CE                     i2l2188:
 40229                           
 40230                           ; BSR set to: 0
 40231                           
 40232                           ; BSR set to: 0
 40233                           
 40234                           ; BSR set to: 0
 40235                           
 40236                           ; BSR set to: 0
 40237  0151CE  296A               	incf	i2___fladd@bexp& (0+255),w,b
 40238  0151D0  B4D8               	btfsc	status,2,c
 40239  0151D2  D003               	goto	i2u1356_40
 40240                           
 40241                           ; BSR set to: 0
 40242  0151D4  516A               	movf	i2___fladd@bexp& (0+255),w,b
 40243  0151D6  A4D8               	btfss	status,2,c
 40244  0151D8  D00D               	goto	i2l2192
 40245  0151DA                     i2u1356_40:
 40246                           
 40247                           ; BSR set to: 0
 40248                           
 40249                           ; BSR set to: 0
 40250  0151DA  0E00               	movlw	0
 40251  0151DC  6E56               	movwf	i2___fladd@b,c
 40252  0151DE  0E00               	movlw	0
 40253  0151E0  6E57               	movwf	i2___fladd@b+1,c
 40254  0151E2  0E00               	movlw	0
 40255  0151E4  6E58               	movwf	i2___fladd@b+2,c
 40256  0151E6  0E00               	movlw	0
 40257  0151E8  6E59               	movwf	i2___fladd@b+3,c
 40258  0151EA  516A               	movf	i2___fladd@bexp& (0+255),w,b
 40259  0151EC  A4D8               	btfss	status,2,c
 40260  0151EE  D002               	goto	i2l2192
 40261                           
 40262                           ; BSR set to: 0
 40263  0151F0  0E00               	movlw	0
 40264  0151F2  6F68               	movwf	i2___fladd@signs& (0+255),b
 40265  0151F4                     i2l2192:
 40266                           
 40267                           ; BSR set to: 0
 40268                           
 40269                           ; BSR set to: 0
 40270                           
 40271                           ; BSR set to: 0
 40272  0151F4  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 40273  0151F6  D002               	goto	i2l2193
 40274                           
 40275                           ; BSR set to: 0
 40276  0151F8  8E58               	bsf	i2___fladd@b+2,7,c
 40277  0151FA  D001               	goto	i2l2194
 40278  0151FC                     i2l2193:
 40279                           
 40280                           ; BSR set to: 0
 40281                           
 40282                           ; BSR set to: 0
 40283  0151FC  9E58               	bcf	i2___fladd@b+2,7,c
 40284  0151FE                     i2l2194:
 40285                           
 40286                           ; BSR set to: 0
 40287                           
 40288                           ; BSR set to: 0
 40289  0151FE  90D8               	bcf	status,0,c
 40290  015200  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 40291  015202  6E59               	movwf	i2___fladd@b+3,c
 40292                           
 40293                           ; BSR set to: 0
 40294  015204  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 40295                           
 40296                           ; BSR set to: 0
 40297  015206  8E59               	bsf	i2___fladd@b+3,7,c
 40298                           
 40299                           ; BSR set to: 0
 40300                           
 40301                           ; BSR set to: 0
 40302  015208  C056  F056         	movff	i2___fladd@b,?i2___fladd
 40303  01520C  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 40304  015210  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 40305  015214  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 40306  015218  0012               	return	
 40307  01521A                     __end_ofi2___fladd:
 40308                           	opt stack 0
 40309                           tosu	equ	0xFFF
 40310                           tosh	equ	0xFFE
 40311                           tosl	equ	0xFFD
 40312                           pclatu	equ	0xFFB
 40313                           pclath	equ	0xFFA
 40314                           tblptru	equ	0xFF8
 40315                           tblptrh	equ	0xFF7
 40316                           tblptrl	equ	0xFF6
 40317                           tablat	equ	0xFF5
 40318                           prodh	equ	0xFF4
 40319                           prodl	equ	0xFF3
 40320                           intcon	equ	0xFF2
 40321                           indf0	equ	0xFEF
 40322                           postinc0	equ	0xFEE
 40323                           fsr0h	equ	0xFEA
 40324                           fsr0l	equ	0xFE9
 40325                           wreg	equ	0xFE8
 40326                           indf1	equ	0xFE7
 40327                           postdec1	equ	0xFE5
 40328                           plusw1	equ	0xFE3
 40329                           fsr1h	equ	0xFE2
 40330                           fsr1l	equ	0xFE1
 40331                           bsr	equ	0xFE0
 40332                           indf2	equ	0xFDF
 40333                           postinc2	equ	0xFDE
 40334                           postdec2	equ	0xFDD
 40335                           plusw2	equ	0xFDB
 40336                           fsr2h	equ	0xFDA
 40337                           fsr2l	equ	0xFD9
 40338                           status	equ	0xFD8
 40339                           
 40340 ;; *************** function _abs *****************
 40341 ;; Defined at:
 40342 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 40343 ;; Parameters:    Size  Location     Type
 40344 ;;  a               2   22[BANK0 ] int 
 40345 ;; Auto vars:     Size  Location     Type
 40346 ;;		None
 40347 ;; Return value:  Size  Location     Type
 40348 ;;                  2   22[BANK0 ] int 
 40349 ;; Registers used:
 40350 ;;		wreg, status,2, status,0
 40351 ;; Tracked objects:
 40352 ;;		On entry : 0/0
 40353 ;;		On exit  : 0/0
 40354 ;;		Unchanged: 0/0
 40355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40358 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40359 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40360 ;;Total ram usage:        4 bytes
 40361 ;; Hardware stack levels used:    1
 40362 ;; This function calls:
 40363 ;;		Nothing
 40364 ;; This function is called by:
 40365 ;;		_ADCPostProcessingCallback
 40366 ;; This function uses a non-reentrant model
 40367 ;;
 40368                           
 40369                           	psect	text127
 40370  018F8A                     __ptext127:
 40371                           	opt stack 0
 40372  018F8A                     _abs:
 40373                           	opt stack 16
 40374                           
 40375                           ; BSR set to: 0
 40376                           ;incstack = 0
 40377  018F8A  0100               	movlb	0	; () banked
 40378  018F8C  AF77               	btfss	(abs@a+1)& (0+255),7,b
 40379  018F8E  D00D               	goto	i2l1640
 40380                           
 40381                           ; BSR set to: 0
 40382  018F90  C076  F078         	movff	abs@a,??_abs
 40383  018F94  C077  F079         	movff	abs@a+1,??_abs+1
 40384  018F98  1F78               	comf	??_abs& (0+255),f,b
 40385  018F9A  1F79               	comf	(??_abs+1)& (0+255),f,b
 40386  018F9C  4B78               	infsnz	??_abs& (0+255),f,b
 40387  018F9E  2B79               	incf	(??_abs+1)& (0+255),f,b
 40388  018FA0  C078  F076         	movff	??_abs,?_abs
 40389  018FA4  C079  F077         	movff	??_abs+1,?_abs+1
 40390  018FA8  0012               	return	
 40391  018FAA                     i2l1640:
 40392                           
 40393                           ; BSR set to: 0
 40394  018FAA  C076  F076         	movff	abs@a,?_abs
 40395  018FAE  C077  F077         	movff	abs@a+1,?_abs+1
 40396                           
 40397                           ; BSR set to: 0
 40398  018FB2  0012               	return		;funcret
 40399  018FB4                     __end_of_abs:
 40400                           	opt stack 0
 40401                           tosu	equ	0xFFF
 40402                           tosh	equ	0xFFE
 40403                           tosl	equ	0xFFD
 40404                           pclatu	equ	0xFFB
 40405                           pclath	equ	0xFFA
 40406                           tblptru	equ	0xFF8
 40407                           tblptrh	equ	0xFF7
 40408                           tblptrl	equ	0xFF6
 40409                           tablat	equ	0xFF5
 40410                           prodh	equ	0xFF4
 40411                           prodl	equ	0xFF3
 40412                           intcon	equ	0xFF2
 40413                           indf0	equ	0xFEF
 40414                           postinc0	equ	0xFEE
 40415                           fsr0h	equ	0xFEA
 40416                           fsr0l	equ	0xFE9
 40417                           wreg	equ	0xFE8
 40418                           indf1	equ	0xFE7
 40419                           postdec1	equ	0xFE5
 40420                           plusw1	equ	0xFE3
 40421                           fsr1h	equ	0xFE2
 40422                           fsr1l	equ	0xFE1
 40423                           bsr	equ	0xFE0
 40424                           indf2	equ	0xFDF
 40425                           postinc2	equ	0xFDE
 40426                           postdec2	equ	0xFDD
 40427                           plusw2	equ	0xFDB
 40428                           fsr2h	equ	0xFDA
 40429                           fsr2l	equ	0xFD9
 40430                           status	equ	0xFD8
 40431                           
 40432 ;; *************** function _ADCC_StopConversion *****************
 40433 ;; Defined at:
 40434 ;;		line 162 in file "mcc_generated_files/adcc.c"
 40435 ;; Parameters:    Size  Location     Type
 40436 ;;		None
 40437 ;; Auto vars:     Size  Location     Type
 40438 ;;		None
 40439 ;; Return value:  Size  Location     Type
 40440 ;;                  1    wreg      void 
 40441 ;; Registers used:
 40442 ;;		None
 40443 ;; Tracked objects:
 40444 ;;		On entry : 0/0
 40445 ;;		On exit  : 0/0
 40446 ;;		Unchanged: 0/0
 40447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40452 ;;Total ram usage:        0 bytes
 40453 ;; Hardware stack levels used:    1
 40454 ;; This function calls:
 40455 ;;		Nothing
 40456 ;; This function is called by:
 40457 ;;		_ADCPostProcessingCallback
 40458 ;; This function uses a non-reentrant model
 40459 ;;
 40460                           
 40461                           	psect	text128
 40462  019300                     __ptext128:
 40463                           	opt stack 0
 40464  019300                     _ADCC_StopConversion:
 40465                           	opt stack 16
 40466                           
 40467                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 40468                           
 40469                           ; BSR set to: 0
 40470                           ;incstack = 0
 40471  019300  9060               	bcf	3936,0,c	;volatile
 40472  019302  0012               	return		;funcret
 40473  019304                     __end_of_ADCC_StopConversion:
 40474                           	opt stack 0
 40475                           tosu	equ	0xFFF
 40476                           tosh	equ	0xFFE
 40477                           tosl	equ	0xFFD
 40478                           pclatu	equ	0xFFB
 40479                           pclath	equ	0xFFA
 40480                           tblptru	equ	0xFF8
 40481                           tblptrh	equ	0xFF7
 40482                           tblptrl	equ	0xFF6
 40483                           tablat	equ	0xFF5
 40484                           prodh	equ	0xFF4
 40485                           prodl	equ	0xFF3
 40486                           intcon	equ	0xFF2
 40487                           indf0	equ	0xFEF
 40488                           postinc0	equ	0xFEE
 40489                           fsr0h	equ	0xFEA
 40490                           fsr0l	equ	0xFE9
 40491                           wreg	equ	0xFE8
 40492                           indf1	equ	0xFE7
 40493                           postdec1	equ	0xFE5
 40494                           plusw1	equ	0xFE3
 40495                           fsr1h	equ	0xFE2
 40496                           fsr1l	equ	0xFE1
 40497                           bsr	equ	0xFE0
 40498                           indf2	equ	0xFDF
 40499                           postinc2	equ	0xFDE
 40500                           postdec2	equ	0xFDD
 40501                           plusw2	equ	0xFDB
 40502                           fsr2h	equ	0xFDA
 40503                           fsr2l	equ	0xFD9
 40504                           status	equ	0xFD8
 40505                           
 40506 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 40507 ;; Defined at:
 40508 ;;		line 216 in file "mcc_generated_files/adcc.c"
 40509 ;; Parameters:    Size  Location     Type
 40510 ;;		None
 40511 ;; Auto vars:     Size  Location     Type
 40512 ;;		None
 40513 ;; Return value:  Size  Location     Type
 40514 ;;                  1    wreg      unsigned char 
 40515 ;; Registers used:
 40516 ;;		wreg
 40517 ;; Tracked objects:
 40518 ;;		On entry : 0/0
 40519 ;;		On exit  : 0/0
 40520 ;;		Unchanged: 0/0
 40521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40526 ;;Total ram usage:        0 bytes
 40527 ;; Hardware stack levels used:    1
 40528 ;; This function calls:
 40529 ;;		Nothing
 40530 ;; This function is called by:
 40531 ;;		_ADCPostProcessingCallback
 40532 ;; This function uses a non-reentrant model
 40533 ;;
 40534                           
 40535                           	psect	text129
 40536  0192BA                     __ptext129:
 40537                           	opt stack 0
 40538  0192BA                     _ADCC_HasAccumulatorOverflowed:
 40539                           	opt stack 16
 40540                           
 40541                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 40542                           
 40543                           ;incstack = 0
 40544  0192BA  AE65               	btfss	3941,7,c	;volatile
 40545  0192BC  D002               	goto	i2u1692_40
 40546  0192BE  0E01               	movlw	1
 40547  0192C0  0012               	return	
 40548  0192C2                     i2u1692_40:
 40549  0192C2  0E00               	movlw	0
 40550  0192C4  0012               	return	
 40551  0192C6                     __end_of_ADCC_HasAccumulatorOverflowed:
 40552                           	opt stack 0
 40553                           tosu	equ	0xFFF
 40554                           tosh	equ	0xFFE
 40555                           tosl	equ	0xFFD
 40556                           pclatu	equ	0xFFB
 40557                           pclath	equ	0xFFA
 40558                           tblptru	equ	0xFF8
 40559                           tblptrh	equ	0xFF7
 40560                           tblptrl	equ	0xFF6
 40561                           tablat	equ	0xFF5
 40562                           prodh	equ	0xFF4
 40563                           prodl	equ	0xFF3
 40564                           intcon	equ	0xFF2
 40565                           indf0	equ	0xFEF
 40566                           postinc0	equ	0xFEE
 40567                           fsr0h	equ	0xFEA
 40568                           fsr0l	equ	0xFE9
 40569                           wreg	equ	0xFE8
 40570                           indf1	equ	0xFE7
 40571                           postdec1	equ	0xFE5
 40572                           plusw1	equ	0xFE3
 40573                           fsr1h	equ	0xFE2
 40574                           fsr1l	equ	0xFE1
 40575                           bsr	equ	0xFE0
 40576                           indf2	equ	0xFDF
 40577                           postinc2	equ	0xFDE
 40578                           postdec2	equ	0xFDD
 40579                           plusw2	equ	0xFDB
 40580                           fsr2h	equ	0xFDA
 40581                           fsr2l	equ	0xFD9
 40582                           status	equ	0xFD8
 40583                           
 40584 ;; *************** function _ADCC_GetFilterValue *****************
 40585 ;; Defined at:
 40586 ;;		line 222 in file "mcc_generated_files/adcc.c"
 40587 ;; Parameters:    Size  Location     Type
 40588 ;;		None
 40589 ;; Auto vars:     Size  Location     Type
 40590 ;;		None
 40591 ;; Return value:  Size  Location     Type
 40592 ;;                  2    0[COMRAM] unsigned int 
 40593 ;; Registers used:
 40594 ;;		wreg, status,2, status,0
 40595 ;; Tracked objects:
 40596 ;;		On entry : 0/0
 40597 ;;		On exit  : 0/0
 40598 ;;		Unchanged: 0/0
 40599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40604 ;;Total ram usage:        4 bytes
 40605 ;; Hardware stack levels used:    1
 40606 ;; This function calls:
 40607 ;;		Nothing
 40608 ;; This function is called by:
 40609 ;;		_ADCPostProcessingCallback
 40610 ;; This function uses a non-reentrant model
 40611 ;;
 40612                           
 40613                           	psect	text130
 40614  0191BE                     __ptext130:
 40615                           	opt stack 0
 40616  0191BE                     _ADCC_GetFilterValue:
 40617                           	opt stack 16
 40618                           
 40619                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 40620                           
 40621                           ;incstack = 0
 40622  0191BE  5073               	movf	3955,w,c	;volatile
 40623  0191C0  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 40624  0191C2  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 40625  0191C4  5072               	movf	3954,w,c	;volatile
 40626  0191C6  2403               	addwf	??_ADCC_GetFilterValue,w,c
 40627  0191C8  6E01               	movwf	?_ADCC_GetFilterValue,c
 40628  0191CA  0E00               	movlw	0
 40629  0191CC  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 40630  0191CE  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 40631  0191D0  0012               	return	
 40632  0191D2                     __end_of_ADCC_GetFilterValue:
 40633                           	opt stack 0
 40634                           tosu	equ	0xFFF
 40635                           tosh	equ	0xFFE
 40636                           tosl	equ	0xFFD
 40637                           pclatu	equ	0xFFB
 40638                           pclath	equ	0xFFA
 40639                           tblptru	equ	0xFF8
 40640                           tblptrh	equ	0xFF7
 40641                           tblptrl	equ	0xFF6
 40642                           tablat	equ	0xFF5
 40643                           prodh	equ	0xFF4
 40644                           prodl	equ	0xFF3
 40645                           intcon	equ	0xFF2
 40646                           indf0	equ	0xFEF
 40647                           postinc0	equ	0xFEE
 40648                           fsr0h	equ	0xFEA
 40649                           fsr0l	equ	0xFE9
 40650                           wreg	equ	0xFE8
 40651                           indf1	equ	0xFE7
 40652                           postdec1	equ	0xFE5
 40653                           plusw1	equ	0xFE3
 40654                           fsr1h	equ	0xFE2
 40655                           fsr1l	equ	0xFE1
 40656                           bsr	equ	0xFE0
 40657                           indf2	equ	0xFDF
 40658                           postinc2	equ	0xFDE
 40659                           postdec2	equ	0xFDD
 40660                           plusw2	equ	0xFDB
 40661                           fsr2h	equ	0xFDA
 40662                           fsr2l	equ	0xFD9
 40663                           status	equ	0xFD8
 40664                           
 40665 ;; *************** function _ADCC_GetConversionResult *****************
 40666 ;; Defined at:
 40667 ;;		line 130 in file "mcc_generated_files/adcc.c"
 40668 ;; Parameters:    Size  Location     Type
 40669 ;;		None
 40670 ;; Auto vars:     Size  Location     Type
 40671 ;;		None
 40672 ;; Return value:  Size  Location     Type
 40673 ;;                  2    0[COMRAM] unsigned int 
 40674 ;; Registers used:
 40675 ;;		wreg, status,2, status,0
 40676 ;; Tracked objects:
 40677 ;;		On entry : 0/0
 40678 ;;		On exit  : 0/0
 40679 ;;		Unchanged: 0/0
 40680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40684 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40685 ;;Total ram usage:        4 bytes
 40686 ;; Hardware stack levels used:    1
 40687 ;; This function calls:
 40688 ;;		Nothing
 40689 ;; This function is called by:
 40690 ;;		_ADCPostProcessingCallback
 40691 ;; This function uses a non-reentrant model
 40692 ;;
 40693                           
 40694                           	psect	text131
 40695  0191D2                     __ptext131:
 40696                           	opt stack 0
 40697  0191D2                     _ADCC_GetConversionResult:
 40698                           	opt stack 16
 40699                           
 40700                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 40701                           
 40702                           ;incstack = 0
 40703  0191D2  5064               	movf	3940,w,c	;volatile
 40704  0191D4  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 40705  0191D6  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 40706  0191D8  5063               	movf	3939,w,c	;volatile
 40707  0191DA  2403               	addwf	??_ADCC_GetConversionResult,w,c
 40708  0191DC  6E01               	movwf	?_ADCC_GetConversionResult,c
 40709  0191DE  0E00               	movlw	0
 40710  0191E0  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 40711  0191E2  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 40712  0191E4  0012               	return	
 40713  0191E6                     __end_of_ADCC_GetConversionResult:
 40714                           	opt stack 0
 40715                           tosu	equ	0xFFF
 40716                           tosh	equ	0xFFE
 40717                           tosl	equ	0xFFD
 40718                           pclatu	equ	0xFFB
 40719                           pclath	equ	0xFFA
 40720                           tblptru	equ	0xFF8
 40721                           tblptrh	equ	0xFF7
 40722                           tblptrl	equ	0xFF6
 40723                           tablat	equ	0xFF5
 40724                           prodh	equ	0xFF4
 40725                           prodl	equ	0xFF3
 40726                           intcon	equ	0xFF2
 40727                           indf0	equ	0xFEF
 40728                           postinc0	equ	0xFEE
 40729                           fsr0h	equ	0xFEA
 40730                           fsr0l	equ	0xFE9
 40731                           wreg	equ	0xFE8
 40732                           indf1	equ	0xFE7
 40733                           postdec1	equ	0xFE5
 40734                           plusw1	equ	0xFE3
 40735                           fsr1h	equ	0xFE2
 40736                           fsr1l	equ	0xFE1
 40737                           bsr	equ	0xFE0
 40738                           indf2	equ	0xFDF
 40739                           postinc2	equ	0xFDE
 40740                           postdec2	equ	0xFDD
 40741                           plusw2	equ	0xFDB
 40742                           fsr2h	equ	0xFDA
 40743                           fsr2l	equ	0xFD9
 40744                           status	equ	0xFD8
 40745                           tosu	equ	0xFFF
 40746                           tosh	equ	0xFFE
 40747                           tosl	equ	0xFFD
 40748                           pclatu	equ	0xFFB
 40749                           pclath	equ	0xFFA
 40750                           tblptru	equ	0xFF8
 40751                           tblptrh	equ	0xFF7
 40752                           tblptrl	equ	0xFF6
 40753                           tablat	equ	0xFF5
 40754                           prodh	equ	0xFF4
 40755                           prodl	equ	0xFF3
 40756                           intcon	equ	0xFF2
 40757                           indf0	equ	0xFEF
 40758                           postinc0	equ	0xFEE
 40759                           fsr0h	equ	0xFEA
 40760                           fsr0l	equ	0xFE9
 40761                           wreg	equ	0xFE8
 40762                           indf1	equ	0xFE7
 40763                           postdec1	equ	0xFE5
 40764                           plusw1	equ	0xFE3
 40765                           fsr1h	equ	0xFE2
 40766                           fsr1l	equ	0xFE1
 40767                           bsr	equ	0xFE0
 40768                           indf2	equ	0xFDF
 40769                           postinc2	equ	0xFDE
 40770                           postdec2	equ	0xFDD
 40771                           plusw2	equ	0xFDB
 40772                           fsr2h	equ	0xFDA
 40773                           fsr2l	equ	0xFD9
 40774                           status	equ	0xFD8
 40775                           
 40776                           	psect	text132
 40777  000000                     __ptext132:
 40778                           	opt stack 0
 40779                           tosu	equ	0xFFF
 40780                           tosh	equ	0xFFE
 40781                           tosl	equ	0xFFD
 40782                           pclatu	equ	0xFFB
 40783                           pclath	equ	0xFFA
 40784                           tblptru	equ	0xFF8
 40785                           tblptrh	equ	0xFF7
 40786                           tblptrl	equ	0xFF6
 40787                           tablat	equ	0xFF5
 40788                           prodh	equ	0xFF4
 40789                           prodl	equ	0xFF3
 40790                           intcon	equ	0xFF2
 40791                           indf0	equ	0xFEF
 40792                           postinc0	equ	0xFEE
 40793                           fsr0h	equ	0xFEA
 40794                           fsr0l	equ	0xFE9
 40795                           wreg	equ	0xFE8
 40796                           indf1	equ	0xFE7
 40797                           postdec1	equ	0xFE5
 40798                           plusw1	equ	0xFE3
 40799                           fsr1h	equ	0xFE2
 40800                           fsr1l	equ	0xFE1
 40801                           bsr	equ	0xFE0
 40802                           indf2	equ	0xFDF
 40803                           postinc2	equ	0xFDE
 40804                           postdec2	equ	0xFDD
 40805                           plusw2	equ	0xFDB
 40806                           fsr2h	equ	0xFDA
 40807                           fsr2l	equ	0xFD9
 40808                           status	equ	0xFD8
 40809                           
 40810                           	psect	rparam
 40811  0000                     tosu	equ	0xFFF
 40812                           tosh	equ	0xFFE
 40813                           tosl	equ	0xFFD
 40814                           pclatu	equ	0xFFB
 40815                           pclath	equ	0xFFA
 40816                           tblptru	equ	0xFF8
 40817                           tblptrh	equ	0xFF7
 40818                           tblptrl	equ	0xFF6
 40819                           tablat	equ	0xFF5
 40820                           prodh	equ	0xFF4
 40821                           prodl	equ	0xFF3
 40822                           intcon	equ	0xFF2
 40823                           indf0	equ	0xFEF
 40824                           postinc0	equ	0xFEE
 40825                           fsr0h	equ	0xFEA
 40826                           fsr0l	equ	0xFE9
 40827                           wreg	equ	0xFE8
 40828                           indf1	equ	0xFE7
 40829                           postdec1	equ	0xFE5
 40830                           plusw1	equ	0xFE3
 40831                           fsr1h	equ	0xFE2
 40832                           fsr1l	equ	0xFE1
 40833                           bsr	equ	0xFE0
 40834                           indf2	equ	0xFDF
 40835                           postinc2	equ	0xFDE
 40836                           postdec2	equ	0xFDD
 40837                           plusw2	equ	0xFDB
 40838                           fsr2h	equ	0xFDA
 40839                           fsr2l	equ	0xFD9
 40840                           status	equ	0xFD8
 40841                           
 40842                           	psect	temp
 40843  00005F                     btemp:
 40844                           	opt stack 0
 40845  00005F                     	ds	1
 40846  0000                     int$flags	set	btemp
 40847  0000                     wtemp6	set	btemp+1
 40848                           tosu	equ	0xFFF
 40849                           tosh	equ	0xFFE
 40850                           tosl	equ	0xFFD
 40851                           pclatu	equ	0xFFB
 40852                           pclath	equ	0xFFA
 40853                           tblptru	equ	0xFF8
 40854                           tblptrh	equ	0xFF7
 40855                           tblptrl	equ	0xFF6
 40856                           tablat	equ	0xFF5
 40857                           prodh	equ	0xFF4
 40858                           prodl	equ	0xFF3
 40859                           intcon	equ	0xFF2
 40860                           indf0	equ	0xFEF
 40861                           postinc0	equ	0xFEE
 40862                           fsr0h	equ	0xFEA
 40863                           fsr0l	equ	0xFE9
 40864                           wreg	equ	0xFE8
 40865                           indf1	equ	0xFE7
 40866                           postdec1	equ	0xFE5
 40867                           plusw1	equ	0xFE3
 40868                           fsr1h	equ	0xFE2
 40869                           fsr1l	equ	0xFE1
 40870                           bsr	equ	0xFE0
 40871                           indf2	equ	0xFDF
 40872                           postinc2	equ	0xFDE
 40873                           postdec2	equ	0xFDD
 40874                           plusw2	equ	0xFDB
 40875                           fsr2h	equ	0xFDA
 40876                           fsr2l	equ	0xFD9
 40877                           status	equ	0xFD8


Data Sizes:
    Strings     6944
    Constant    268
    Data        43
    BSS         370
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    187     233
    BANK2           256     83     248
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_109(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_109(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_142(CODE[5]), STR_140(CODE[29]), STR_138(CODE[34]), STR_136(CODE[33]), 
		 -> STR_134(CODE[29]), STR_132(CODE[17]), STR_130(CODE[17]), STR_128(CODE[14]), 
		 -> STR_126(CODE[19]), STR_124(CODE[20]), STR_122(CODE[11]), STR_120(CODE[17]), 
		 -> STR_118(CODE[14]), STR_116(CODE[16]), STR_107(CODE[13]), STR_103(CODE[17]), 
		 -> STR_100(CODE[14]), STR_98(CODE[12]), STR_96(CODE[16]), STR_94(CODE[15]), 
		 -> STR_92(CODE[15]), STR_90(CODE[21]), STR_88(CODE[21]), STR_86(CODE[26]), 
		 -> STR_84(CODE[14]), STR_82(CODE[13]), STR_80(CODE[18]), STR_78(CODE[15]), 
		 -> STR_76(CODE[16]), STR_73(CODE[17]), STR_71(CODE[16]), STR_60(CODE[11]), 
		 -> STR_57(CODE[10]), STR_55(CODE[13]), STR_53(CODE[11]), STR_50(CODE[4]), 
		 -> STR_49(CODE[6]), STR_47(CODE[16]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_162(CODE[7]), printf@c(BANK1[1]), STR_161(CODE[16]), STR_160(CODE[22]), 
		 -> STR_159(CODE[21]), STR_158(CODE[27]), STR_157(CODE[41]), STR_156(CODE[32]), 
		 -> STR_155(CODE[19]), STR_154(CODE[16]), STR_153(CODE[15]), STR_152(CODE[16]), 
		 -> STR_151(CODE[10]), STR_150(CODE[13]), STR_149(CODE[12]), ringBufferLUT@channel_name(BANK2[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 922
		 -> STR_148(CODE[30]), STR_147(CODE[46]), STR_146(CODE[39]), STR_145(CODE[62]), 
		 -> STR_144(CODE[55]), STR_143(CODE[433]), STR_141(CODE[492]), STR_139(CODE[605]), 
		 -> STR_137(CODE[720]), STR_135(CODE[922]), STR_133(CODE[33]), STR_131(CODE[52]), 
		 -> STR_129(CODE[45]), STR_127(CODE[51]), STR_125(CODE[52]), STR_123(CODE[46]), 
		 -> STR_121(CODE[51]), STR_119(CODE[53]), STR_117(CODE[58]), STR_115(CODE[71]), 
		 -> STR_114(CODE[63]), STR_113(CODE[37]), STR_112(CODE[46]), STR_111(CODE[102]), 
		 -> STR_110(CODE[86]), STR_108(CODE[25]), STR_106(CODE[42]), STR_105(CODE[53]), 
		 -> STR_104(CODE[31]), STR_102(CODE[29]), STR_101(CODE[28]), STR_99(CODE[42]), 
		 -> STR_97(CODE[41]), STR_95(CODE[40]), STR_93(CODE[56]), STR_91(CODE[34]), 
		 -> STR_89(CODE[34]), STR_87(CODE[32]), STR_85(CODE[37]), STR_83(CODE[58]), 
		 -> STR_81(CODE[36]), STR_79(CODE[36]), STR_77(CODE[37]), STR_75(CODE[45]), 
		 -> STR_74(CODE[66]), STR_72(CODE[21]), STR_70(CODE[24]), STR_69(CODE[48]), 
		 -> STR_59(CODE[54]), STR_58(CODE[64]), STR_56(CODE[59]), STR_54(CODE[85]), 
		 -> STR_52(CODE[47]), STR_51(CODE[17]), STR_48(CODE[52]), STR_46(CODE[4]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), STR_40(CODE[3]), 
		 -> terminal_textAttributes@output_buff(BANK2[15]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), 
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_160(CODE[22]), STR_159(CODE[21]), STR_158(CODE[27]), STR_157(CODE[41]), 
		 -> STR_156(CODE[32]), STR_155(CODE[19]), STR_154(CODE[16]), STR_153(CODE[15]), 
		 -> STR_152(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_151(CODE[10]), STR_150(CODE[13]), STR_149(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_151(CODE[10]), STR_150(CODE[13]), STR_149(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_151(CODE[10]), STR_150(CODE[13]), STR_149(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_161(CODE[16]), STR_160(CODE[22]), STR_159(CODE[21]), STR_158(CODE[27]), 
		 -> STR_157(CODE[41]), STR_156(CODE[32]), STR_155(CODE[19]), STR_154(CODE[16]), 
		 -> STR_153(CODE[15]), STR_152(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _saveMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _readMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  888869
                                             81 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
                  _readMaxFromEEPROM
                    _saveMaxToEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0  106230
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  535866
                                            184 BANK1      3     3      0
                                             75 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       63    61      2  534675
                                            180 BANK1      4     2      2
                                             16 BANK2     59    59      0
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  128411
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  128411
                                            178 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     741
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    7213
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0  106230
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    2624
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     722
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     736
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     468
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2188
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4   10170
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2    1328
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0    1208
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0    1208
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     374
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2    1143
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4    1143
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     537
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2     110
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2892
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    5576
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      75
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0  106230
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10  106230
                                            130 BANK1     48    38     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   19276
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     165
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0     110
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     185
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   18781
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   11764
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    3047
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    3335
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6    1133
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8    1133
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1808
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1953
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1427
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1457
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1272
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   10022
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    9226
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1343
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _saveMaxToEEPROM                                      0     0      0    8301
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    3879
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     478
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    4422
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _readMaxFromEEPROM                                    0     0      0    2147
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    2147
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     234
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     271
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _HLVD_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     271
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      31
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _HLVD_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  196383
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   40465
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   40465
                                             40 BANK0     40    38      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7609
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7330
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0  155678
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  155678
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8   99862
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   47417
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   42313
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1493
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   25639
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   40118
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   37270
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4509
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    2535
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    7999
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     478
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10340
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4772
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4234
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     363
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _readMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _HLVD_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fltol
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C0      12       75.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     53      F8      10       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BB      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     39B       8        0.0%
DATA                 0      0     39B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 06 20:45:59 2018

                           ??i2_TMR7_StopTimer 0001                 ringBufferLUT@max_voltage_print 02B2  
                     getDeviceIDString@strings 0128                                   ___fldiv@aexp 0155  
                                 ___fldiv@bexp 0154                   __end_of_readDoubleFromEEPROM 88D0  
             __end_of_TMR5_SetInterruptHandler 9282                                   ___fldiv@sign 0149  
                                  __CFG_CP$OFF 000000                                             l57 9154  
                                 ___awdiv@sign 0122                         __end_of_FVR_Initialize 92D8  
                                           bsr 000FE0                            ___wmul@multiplicand 0119  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback 8CDA                                            l381 8B48  
                                          l382 8B44                                            l391 8A7C  
                                          l392 8AA2                                            l384 8B72  
                                          l393 8AA0                                            l388 8A66  
                                          l389 8A62                                            l789 8D04  
                                          l981 6624                                            l982 668A  
                                          l983 66F0                                            l984 6756  
                                          l985 67BC                                   __CFG_CPD$OFF 000000  
                                          _PR6 000FB0                                    i2___fladd@a 005A  
                                  i2___fladd@b 0056                                            _Ipk 00F6  
                                          _Vpk 0220                                            _abs 8F8A  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString 87C6                                            _sin 551E  
                   currentMeasuredToPeak@Angle 009D                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 6DF8                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0034  
                                  i2___flmul@b 0030                                    i2___flsub@a 0084  
                                  i2___flsub@b 0080                               ??_TMR7_StopTimer 0117  
                                 ___flmul@aexp 0163                                   ___flmul@bexp 0164  
                                 ___flmul@sign 0162                                   ___flmul@temp 016D  
                                 ___flmul@prod 0169                                   __CFG_LVP$OFF 000000  
                                 __CFG_ZCD$OFF 000000                                   ___fltol@exp1 0181  
                                         l1110 41E8                                           l1111 4200  
                                         l1120 42EA                                           l1112 4218  
                                         l1121 4302                                           l1113 4230  
                                         l1130 43F8                                           l1122 431A  
                                         l1106 4260                                           l1114 4248  
                                         l1131 4410                                           l1115 437A  
                                         l1123 4332                                           l1107 41B8  
                                         ?_abs 0076                                           l1132 4428  
                                         l1124 434A                                           l1116 42A2  
                                         l1108 428A                                           l1300 082E  
                                         l1133 4440                                           l1117 43B0  
                                         l1125 4362                                           l1109 41D0  
                                         l2022 90DC                                           l1126 44A0  
                                         l1134 4458                                           l1118 42BA  
                                         l1302 0876                                           l1038 8046  
                                         l1135 4470                                           l1127 43C8  
                                         l1119 42D2                                           l1311 094E  
                                         l1128 44D6                                           l1136 4488  
                                         l1304 08E0                                           l1080 7440  
                                         l1129 43E0                                           l1305 08BC  
                                         l1410 89C0                                           l2202 5DD8  
                                         l1330 0DE0                                           l1314 09BA  
                                         l1242 003E                                           l1082 74AC  
                                         l2211 5E86                                           l2203 5DD4  
                                         l1083 747E                                           l2052 825A  
                                         l1500 16F4                                           l2220 5F4A  
                                         l2212 5F34                                           l1340 1136  
                                         l1332 0E60                                           l1324 0C8E  
                                         l1316 0C3C                                           l1308 0972  
                                         l1260 0408                                           l1252 01A0  
                                         l1244 007A                                           l1413 888E  
                                         l2053 8268                                           l2213 5EE4  
                                         l2301 8DDC                                           l1317 09F4  
                                         l1309 0928                                           l1261 03E4  
                                         l1077 7420                                           l1414 88BE  
                                         l2150 4C18                                           l2062 86E0  
                                         l1510 18D6                                           l1502 1762  
                                         l2230 6032                                           l2214 5F0C  
                                         l2206 5E18                                           l2302 8DD2  
                                         l1342 1178                                           l1334 0EE0  
                                         l1326 0CE0                                           l1262 0398  
                                         l1270 0368                                           l1254 0204  
                                         l1246 00CC                                           l2151 4C14  
                                         l2063 86EE                                           l1503 17E2  
                                         l2231 603E                                           l2207 5E14  
                                         l1319 0AB0                                           l1271 0380  
                                         l1263 02D8                                           l1079 745E  
                                         l2160 4CE0                                           l2048 8226  
                                         l2240 456E                                           l1520 1A26  
                                         l2232 6040                                           l2216 5F32  
                                         l1344 11BA                                           l1336 0F60  
                                         l1328 0D60                                           l1280 0516  
                                         l1264 03C8                                           l1256 02A0  
                                         l1248 013A                                           l2153 4C74  
                                         l2145 4BD0                                           l2049 821A  
                                         l2241 456A                                           l1441 5D50  
                                         l1521 1A40                                           l1505 1810  
                                         l2209 5E5E                                           l1265 02F0  
                                         l1257 025A                                           l2154 4C38  
                                         l2146 4BCC                                           l2058 86B8  
                                         l2242 457E                                           l1506 185A  
                                         l2226 5FA0                                           l2330 80E6  
                                         l2314 863A                                           l1346 11FC  
                                         l1338 0FE0                                           l1290 06B0  
                                         l1282 0568                                           l1274 0458  
                                         l1266 0308                                           l2171 4DD6  
                                         l2163 4D4E                                           l2059 86AC  
                                         l2243 459C                                           l1451 3CE2  
                                         l1507 193C                                           l2219 5F68  
                                         l1371 8784                                           l2307 8836  
                                         l2331 8122                                           l2315 866A  
                                         l1267 0320                                           l1380 88D8  
                                         l2180 4E2A                                           l2164 4D14  
                                         l2340 6D14                                           l2260 4838  
                                         l2236 452E                                           l1444 3AC8  
                                         l1540 1BA6                                           l1532 1B4C  
                                         l1524 1A6E                                           l1516 19B4  
                                         l2228 5FE4                                           l1372 878E  
                                         l2308 8830                                           l1348 123E  
                                         l1292 0702                                           l1284 05BA  
                                         l1276 04C4                                           l1268 0338  
                                         l2173 4DE6                                           l2157 4CF0  
                                         l2237 452A                                           l1445 39D0  
                                         l1541 1CF0                                           l1533 1AB8  
                                         l1525 1A60                                           l2229 6008  
                                         l2317 8686                                           l1277 04A0  
                                         l1269 0350                                           l1390 8900  
                                         l1382 88E0                                           l2158 4CCE  
                                         l2342 6D26                                           l2254 4794  
                                         l2238 453E                                           l1438 5C60  
                                         l1542 1C08                                           l2318 8676  
                                         l1294 0754                                           l1286 060C  
                                         l2167 4D38                                           l2159 4CDC  
                                         l2343 6D1A                                           l2247 475C  
                                         l1551 1E26                                           l1535 1B66  
                                         l1471 1624                                           l1455 130C  
                                         l1367 8798                                           l1392 8908  
                                         l1384 88E8                                           l2192 4EB6  
                                         l2176 4E0A                                           l2168 4D3C  
                                         l2256 47D8                                           l2248 473E  
                                         l1448 3A96                                           l1552 1DA2  
                                         l1544 1D0A                                           l1536 1B58  
                                         l1528 1A8E                                           l1480 14F4  
                                         l1464 1396                                           l1456 131E  
                                         l1368 877A                                           l1296 07A6  
                                         l1288 065E                                           l2193 4EBE  
                                         l2185 4E4A                                           l2353 6DB4  
                                         l2345 6D64                                           l2257 47F6  
                                         l1449 3C1C                                           l1545 1CFC  
                                         l1529 1A80                                           l1481 151C  
                                         l1801 7CD8                                           l2329 814E  
                                         l1386 88F0                                           l2194 4EC0  
                                         l2178 4E20                                           l2354 6DE6  
                                         l2346 6D4C                                           l2338 6CE6  
                                         l1570 1EF0                                           l1562 1E58  
                                         l1538 1B8A                                           l1490 159E  
                                         l1482 152C                                           l1474 14EC  
                                         l1466 14DE                                           l1458 133A  
                                         l1802 7C9A                                           l1298 07EA  
                                         l2339 6CF6                                           l2259 481A  
                                         l1571 1F28                                           l1547 1D64  
                                         l1539 1B8E                                           l1475 1692  
                                         l1483 1526                                           l1467 14B2  
                                         l1459 1332                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l1388 88F8                                           l2188 4E90  
                                         l2348 6D96                                           l1572 1F0E  
                                         l1564 1E78                                           l1492 15E4  
                                         l1468 145E                                           l1804 7D0C  
                                         l2284 8A20                                           l2349 6D8A  
                                         l1821 81D4                                           l1581 207C  
                                         l1565 1E9A                                           l1557 1E3C  
                                         l1549 1D88                                           l1493 15B8  
                                         l2293 892E                                           l2285 8A1A  
                                         l1822 81DE                                           l1814 8186  
                                         l1830 84AE                                           l1558 1DE4  
                                         l1486 157E                                           l1478 14F0  
                                         l2294 8924                                           l2390 80C0  
                                         l1823 81EC                                           l1815 8196  
                                         l1831 84A6                                           l1583 205E  
                                         l1567 1EBC                                           l1495 15F8  
                                         l1487 1594                                           l1399 8EF4  
                                         l2383 8DAC                                           l2287 8A3A  
                                         l1584 1F62                                           l1568 1EC4  
                                         l1496 160C                                           l2288 8A30  
                                         l1913 7B32                                           l1905 7AA2  
                                         l1817 81B4                                           l1569 1EE8  
                                         l1497 161E                                           l1489 15A4  
                                         l1914 7B26                                           l1818 81AC  
                                         l1834 84C6                                           l1586 2076  
                                         l1498 1D14                                           l1907 7B0E  
                                         l1835 84D0                                           l1827 848C  
                                         l1587 1FE6                                           l1499 16A6  
                                         l1916 7B4E                                           l1908 7AFE  
                                         l1860 71EC                                           l1836 84DE  
                                         l1828 8498                                           l2388 80C8  
                                         l1861 722E                                           l2389 8056  
                                         l1870 72C0                                           l1862 725E  
                         _ADCC_StartConversion 92AC                                           l1871 72B4  
                                         l1864 729C                                           l1865 728C  
                                         l1882 8F1C                                           l1858 71CE  
                                         l1962 6F76                                           l1875 755A  
                                         l1795 7C46                                           l1876 758E  
                                         l1964 6FA2                                           l1796 7C40  
                                         l1877 75CC                                           l1965 6FDC  
                                         l1878 760A                                           l1974 7064  
                                         l1966 7004                                           l1798 7C88  
                                         l1975 7058                                           l1968 7040  
                                         l1969 7030                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC5  
                                         STR_2 FFB0                                           STR_3 FFB9  
                                         STR_4 F143                                           STR_6 FFB0  
                                         STR_7 FFB9                                           STR_9 FFBD  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 019D                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                          _writeDoubleToEEPROM 8972                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                         _Irms 01C3                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 8A5C                ??_ADCC_HasAccumulatorOverflowed 0001  
                                         _Vrms 01BF                                           abs@a 0076  
                                         _acos 8558                                           _fabs 8D54  
               ringBufferLUT@max_current_print 02AA                                           _atan 6A6E  
                                         _asin 521A                                           _atoi 7C3E  
                                         _main 7FC4                                           _line 0240  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                 __size_of_ADCC_ClearAccumulator 0006  
                                         _sqrt 5818                                   i2___flneg@f1 002C  
                __end_of_ADCC_ClearAccumulator 92FA                                           sin@f 0088  
                                         sin@y 008C                                           prodh 000FF4  
                                         prodl 000FF3                                           start 010A  
                              _timer5ReloadVal 01DB                                   i2___fltol@f1 006C  
                              ___fldiv@new_exp 014E                                __end_ofi2_scale 4194  
                 __end_of_EUSART2_Transmit_ISR 8E34                                __end_ofi2_putch 92D0  
                                __CFG_CSWEN$ON 000000                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                readDoubleFromEEPROM@output_data 011D  
                     __size_ofi2_EUSART2_Write 004A                                          ??_abs 0078  
                    __size_of_DATAEE_WriteByte 003E                                _timer7ReloadVal 01DD  
                                        ??_sin 005E                           ?_writeDoubleToEEPROM 011B  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0124  
                             __end_of_HLVD_ISR 92E8                 __size_of_OSCILLATOR_Initialize 001C  
                __end_of_OSCILLATOR_Initialize 915A                       ?_terminal_textAttributes 01B2  
                            ??_TMR7_WriteTimer 0102                                          l20060 87B2  
                                        l20062 87BC                                          l19018 8676  
                                        ?_acos 00A9                                          ?_fabs 0030  
                                        l17830 7642                                          l19342 7CD4  
                                        l19158 8056                                          l19192 898C  
                                        l18902 1DA6                                          l19470 6032  
                                        l19710 0A60                                          l18824 1A80  
                                        l19712 0AB0                                          l19704 0A2A  
                                        l19544 024A                                          l18842 1B58  
                                        l18818 1A60                                          l19554 029A  
                                        l18916 1DE8                                          l18772 18A8  
                                        l18764 185A                                          l18692 159E  
                                ___fltol@sign1 0180                                          l18792 19B8  
                                        l18696 15B8                                          l19906 7436  
                                        l18990 205E                                          l19694 09E4  
                                        ?_atan 007C                                          l19896 7410  
                                        ?_asin 0091                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 011D                                __end_of___fladd 4EDC  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                              __end_of___fldiv 605C                                          _ADREF 000F58  
                              __end_of___awdiv 81F6                                __end_of___flneg 8F2E  
                                        _ADPRE 000F5E                                          STR_10 FFC1  
                                        STR_11 FFF6                                          STR_12 FFCA  
                                        STR_20 FFC9                                          STR_13 FCDE  
                                        STR_21 FFCC                                          STR_30 FF42  
                                        STR_14 FFDF                                          STR_22 FFD2  
                                        STR_15 FFE5                                          STR_23 FFD8  
                                        STR_31 FFCF                                          STR_40 EB46  
                                        STR_16 FFF1                                          STR_24 FFDE  
                                        STR_32 FFD5                                          STR_41 FE01  
                                        STR_17 FFF9                                          STR_25 FFE4  
                                        STR_33 FFDB                                          STR_18 FFCA  
                                        STR_42 FFB0                                          STR_26 FFEA  
                                        STR_34 FFE1                                          STR_50 FFB5  
                                        STR_43 FFB9                                          STR_19 FFFB  
                                        STR_27 FFF0                                          STR_35 FFE7  
                                        STR_51 FD91                                          STR_28 FFF0  
                                        STR_36 FFED                                          STR_44 FFA0  
                                        STR_60 FF67                                          STR_52 F7FE  
                              __end_of___awmod 84E8                                          STR_29 FFFB  
                                        STR_45 FFB0                                          STR_37 FFF3  
                                        STR_61 FFA6                                          STR_53 FF51  
                                        STR_38 FFF3                                          STR_46 FFB9  
                                        STR_62 FF94                                          STR_70 FC9C  
                                        STR_54 F373                                          STR_39 FFFD  
                                        STR_63 FF8D                                          STR_55 FF12  
                                        STR_71 FE57                                          STR_47 FE37  
                                        STR_64 FEE9                                          STR_80 FD6E  
                                        STR_72 FCF5                                          STR_48 F6CC  
                                        STR_56 F50E                                          _ADRPT 000F66  
                                        STR_49 FF9A                                          STR_57 FF72  
                                        STR_65 FEF7                                          STR_73 FDC4  
                                        STR_81 FA75                                          STR_82 FF1F  
                                        STR_66 FEA3                                          STR_90 FD0A  
                                        STR_58 F451                                          STR_74 F40F  
                                        STR_67 FCCA                                          STR_91 FADF  
                                        STR_75 F8E4                                          STR_59 F62C  
                                        STR_83 F583                                          STR_68 FF7C  
                                        STR_84 FEB1                                          STR_92 FE85  
                                        STR_76 FE17                                          STR_77 FA2B  
                                        STR_85 FA06                                          STR_69 F7CE  
                                        STR_93 F5BD                                          STR_94 FE94  
                                        STR_78 FE76                                          STR_86 FC50  
                                        STR_87 FB65                                          STR_79 FA99  
                                        STR_95 F9B7                                          STR_96 FE47  
                                        STR_88 FD1F                                __end_of___flmul 484E  
                                        STR_89 FABD                                          STR_97 F98E  
                                        STR_98 FF45                                          STR_99 F911  
                              __end_of___flsub 8BCC                                __end_of___fltol 7B60  
                              __end_of___lldiv 827A                                          ?_sqrt 006C  
                   __size_of_readMaxFromEEPROM 010A                                ___awdiv@divisor 011F  
                              __end_of___llmod 8700                                          u24010 4790  
                                        u24100 81B8                                          _T5CLK 000FC6  
                                        u24040 47E6                                          u24050 4804  
                                        u25100 19F6                                          u25020 1820  
                                        u24301 6F86                                          u25030 186C  
                                        u23600 4CB6                                          u24160 84B2  
                                        u25200 1B84                                          _T5CON 000FC3  
                                        u26010 5F9C                                          u25060 18A8  
                                        u23630 4CF8                                          u24510 7AC0  
                                        u24430 72C6                                          _T7CLK 000F33  
                                        u24360 706A                                          u25160 1A9C  
                                        u26040 5FF2                                          _T6CON 000FB1  
                                        u24281 6F5A                                          u24610 86BC  
                                        u26050 6016                                          u26130 010A  
                                        u24515 7AB6                                          u23580 4CA4  
                                        u23590 4CB4                                          u24550 7B38  
                                        u25190 1B74                                 __CFG_DEBUG$OFF 000000  
                                        u27007 7FD8                                          u23840 4E9C  
                                        u23760 4E2E                                          u24800 1446  
                                        _T7CON 000F30                                          u25450 1F30  
                                        u25610 8088                                          u24580 822A  
                                        u25460 1F46                                          u24820 1496  
                                        u24740 135C                                          u25700 8966  
                                        u26180 029A                                          u23790 4E46  
                                        u23950 458A                                          u24830 14D4  
                                        u24750 1384                                          u24807 143C  
                                        u23960 4700                                          u25480 208E  
                                        u24920 15DA                                          u25721 8770  
                                        u24690 6DA0                                          u25490 20BE  
                                        u24770 13E0                                          u26450 0A2A  
                                        u24827 148C                                          u24747 1352  
                                        u24940 1654                                          u24860 155A  
                                        u24780 141C                                          u25580 8858  
                                        u26460 0A52                                          _T6HLT 000FB2  
                                        u23965 46F6                                          u24837 14CA  
                                        u24757 137A                                          u24870 1560  
                                        u24790 1424                                          u26470 0A60  
                                        u25575 8D14                                          u24927 15D0  
                                        u25735 8D44                                          u25680 88BE  
                                        u25576 8D16                                          u25497 20B4  
                                        u24777 13D6                     _ADCC_ADTI_InterruptHandler 022E  
                                        u25770 8166                                          u24947 164A  
                                        u24867 1550                                          u24787 1412  
                                        u25587 884E                                          u26770 7436  
                                        i1l223 007C                                          i1l225 009C  
                                        i1l403 8E2E                                          i1l227 00A8  
                                        i1l404 8E2A                                          i1l229 00B2  
                                        i2l212 7D80                                          i2l214 7D8C  
                                        i2l216 7D96                                          i1l640 906A  
                                        i2l410 7E12                                          i2l411 7E34  
                                        i2l414 7E38                                          i2l416 7E88  
                                        i2l409 7DEE                                          _T6TMR 000FAF  
                                        i2l391 8B10                                          i2l392 8B36  
                                        i2l393 8B34                                          i2l714 916C  
                                        _T6RST 000FB4                                          i2l388 8AFA  
                                        i2l389 8AF6                                          i1l993 8CD6  
                              ___awdiv@counter 0121                                          i2l997 3840  
                                        i2l998 2E9C                                          i2l999 2F26  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 72D8  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a E4BB                             __end_ofsin@coeff_b E4DF  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 01C7  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  i2___fladd@grs 006B  
                                __CFG_WRT5$OFF 000000                                  __CFG_WRT6$OFF 000000  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR 8E9C                               __end_of_TMR6_ISR 9004  
                             __end_of_TMR7_ISR 8E68                                _DATAEE_ReadByte 9190  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                    ??_terminal_ringBufferPull 01B8                                __end_of_dpowers E463  
                                        acos@x 00A9                                          fabs@d 0030  
                                   i2scale@scl 0051                                          _floor 7766  
          writeDoubleToEEPROM@starting_address 011F                                          _frexp 83FC  
                                        _errno 023A                          ?_ADCC_StartConversion 0001  
                                        _scale 3870                                __end_of_isdigit 90E4  
                                        atan@f 007C                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch 924A                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 7766                                          sin@x2 0094  
                                        tablat 000FF5          __end_of_max_POS3P3_ADC_Result_address E48B  
                _max_POS3P3_ADC_Result_address E489                               __end_ofi2___wmul 909E  
                                        plusw1 000FE3                                          plusw2 000FDB  
                               ??_EUSART2_Read 0117                   __size_of_ADCC_GetFilterValue 0014  
                                        sqrt@a 006C                                          sqrt@i 0075  
                                        sqrt@p 007A                                          status 000FD8  
                                        wtemp6 0060                                  i2___flmul@grs 003E  
                              __end_of_strncmp 80E4                                __end_of_strncpy 8698  
                             __end_ofi2_fround 65BE                 ?_INTERRUPT_InterruptManagerLow 0001  
                  ringBufferLUT@max_temp_print 02BA                             __size_ofi2___fladd 033E  
                           __size_ofi2___fldiv 02B4                             __size_ofi2___awdiv 0084  
                           __size_ofi2___flneg 002E                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0129                             __size_ofi2___flmul 0350  
                                i2printf@width 00AB                             __size_ofi2___flsub 0048  
                           __size_ofi2___fltol 00DE                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf 2E90                       __size_of_HLVD_Initialize 0010  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 9290  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 9282  
                              _TMR5_Initialize 8AA8                                __initialization 7F32  
                            i2___lldiv@divisor 0005                                   __end_of_acos 85C6  
                                 __end_of_fabs 8D90                                   __end_of_atan 6CA4  
                                 __end_of_asin 551E                                   __end_of_atoi 7D16  
                                 __end_of_main 8054                              i2___lldiv@counter 000D  
                             _max_Irms_address E48D                                   __end_of_sqrt 5AE0  
                                   i2printf@ap 0099                                     i2printf@cp 0095  
                        ??_writeDoubleToEEPROM 0121                          __end_of_ringBufferLUT 12FE  
                               __CFG_SCANE$OFF 000000                          _max_POS3P3_ADC_Result 020C  
                      FLASH_ReadByte@flashAddr 0117                             __size_ofi2_isdigit 001E  
                         __size_of_getDeviceID 0020                                         ??_acos 005E  
                                       ??_fabs 0034                                         ??_atan 005E  
                                       ??_asin 005E                                         ??_atoi 011F  
                                       ??_main 02D1                       _TMR5_SetInterruptHandler 9274  
                                       ??_sqrt 0070                                _saveMaxToEEPROM 65BE  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 0060  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0005  
                       getUserID@initialOffset 0125                                _TMR6_Initialize 8E9C  
                           _TRIAC_Firing_Angle 00F2                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 8630  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01E1                                         ?_floor 0076  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 016F  
                                       STR_100 FEBF                                         _ADLTHL 000F6A  
                                       STR_101 FC19                                         STR_102 FBC2  
                                       STR_110 F31D                                         STR_103 FDA2  
                                       STR_111 F2B7                                         STR_120 FDD5  
                                       STR_104 FB85                                         STR_112 F85B  
                                       STR_113 FA50                                         STR_121 F768  
                                       STR_105 F662                                         STR_122 FF5C  
                                       STR_130 FDB3                                         STR_106 F93B  
                                       STR_114 F491                                         _ADRESH 000F64  
                                       STR_107 FF2C                                         STR_123 F889  
                                       STR_131 F734                                         STR_115 F3C8  
                                       STR_116 FE27                                         STR_132 FDE6  
                                       STR_124 FD34                                         STR_108 FC6A  
                                       STR_140 FBFC                                         STR_109 FC83  
                                       STR_133 FB23                                         STR_125 F700  
                                       STR_117 F549                                         STR_141 EDA6  
                                       STR_142 FFAB                                         STR_118 FECD  
                                       STR_126 FD5B                                         STR_134 FBDF  
                                       _ADRESL 000F63                                         STR_150 FF05  
                                       STR_127 F79B                                         STR_119 F697  
                                       STR_143 EF92                                         STR_135 E4DF  
                                       STR_151 FF7C                                         STR_128 FEDB  
                                       STR_136 FB44                                         STR_144 F5F5  
                                       STR_160 FCB4                                         STR_152 FDF7  
                                       STR_161 FDF7                                         STR_129 F8B7  
                                       STR_145 F4D0                                         STR_137 E879  
                                       STR_153 FE67                                         STR_162 FF86  
                                       STR_138 FB01                                         STR_146 F9DF  
                                       STR_154 FE07                                         STR_163 FD80  
                                       STR_147 F82D                                         STR_139 EB49  
                                       STR_155 FD48                                         STR_148 FBA4  
                                       STR_156 F96E                                         STR_149 FF39  
                                       STR_157 F965                                         STR_158 FC35  
                                       STR_159 FCE0                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                         _readDoubleFromEEPROM 887E                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1012 3106  
                                       i2l1004 2F2E                                         i2l1013 33FC  
                                       i2l1005 3038                                         i2l1030 3832  
                                       i2l1022 3562                                         i2l1014 334A  
                                       i2l1023 3644                                         i2l1015 3262  
                                       i2l1008 3040                                         i2l1017 33A2  
                                       i2l1009 30FE                                         i2l1026 364C  
                                       i2l1027 382A                                         i2l1019 355A  
                                       i2l2022 911A                                         i2l2202 608C  
                                       i2l2211 613A                                         i2l2203 6088  
                                       i2l2220 61FE                                         i2l2212 61E8  
                                       i2l2140 5806                                         i2l2052 8360  
                                       i2l1500 24BE                                         i2l2213 6198  
                                       i2l2053 836E                                         i2l2150 4F56  
                                       i2l2230 62E6                                         i2l2214 61C0  
                                       i2l2206 60CC                                         i2l2062 8746  
                                       i2l1510 269E                                         i2l1502 252A  
                                       i2l2151 4F52                                         i2l2231 62F2  
                                       i2l2207 60C8                                         i2l2063 8754  
                                       i2l1503 25A8                                         i2l2160 501E  
                                       i2l2240 48BE                                         i2l2232 62F4  
                                       i2l2216 61E6                                         i2l2048 832C  
                                       i2l1520 27F0                                         i2l2153 4FB2  
                                       i2l2145 4F0E                                         i2l2241 48BA  
                                       i2l2209 6112                                         i2l2137 5552  
                                       i2l2049 8320                                         i2l1441 656A  
                                       i2l1521 280A                                         i2l1505 25D6  
                                       i2l2154 4F76                                         i2l2146 4F0A  
                                       i2l2242 48CE                                         i2l2226 6254  
                                       i2l2138 5670                                         i2l2058 871E  
                                       i2l1506 2622                                         i2l2171 5114  
                                       i2l2163 508C                                         i2l2243 48EC  
                                       i2l2219 621C                                         i2l2139 56E0  
                                       i2l2059 8712                                         i2l1451 4164  
                                       i2l1507 2706                                         i2l2180 5168  
                                       i2l2164 5052                                         i2l2260 4B88  
                                       i2l2236 487E                                         i2l2340 6E64  
                                       i2l2228 6298                                         i2l1444 3F58  
                                       i2l1540 296E                                         i2l1532 2914  
                                       i2l1524 2838                                         i2l1516 277E  
                                       i2l2173 5124                                         i2l2157 502E  
                                       i2l2237 487A                                         i2l2229 62BC  
                                       i2l1445 3E68                                         i2l1541 2AB6  
                                       i2l1533 2882                                         i2l1525 282A  
                                       i2l2158 500C                                         i2l2254 4AE4  
                                       i2l2238 488E                                         i2l2342 6E76  
                                       i2l2270 5884                                         i2l1438 6482  
                                       i2l1542 29D0                                         i2l2167 5076  
                                       i2l2159 501A                                         i2l2247 4AAC  
                                       i2l2343 6E6A                                         i2l1551 2BEC  
                                       i2l1535 292E                                         i2l1471 23EE  
                                       i2l1455 20DA                                         i2l1640 8FAA  
                                       i2l2192 51F4                                         i2l2176 5148  
                                       i2l2168 507A                                         i2l2256 4B28  
                                       i2l2248 4A8E                                         i2l2360 779E  
                                       i2l2280 5AA6                                         i2l2272 58BE  
                                       i2l1448 3F28                                         i2l1552 2B68  
                                       i2l1544 2AD0                                         i2l1536 2920  
                                       i2l1528 2858                                         i2l1480 22BE  
                                       i2l1464 2164                                         i2l1456 20EC  
                                       i2l2193 51FC                                         i2l2185 5188  
                                       i2l2257 4B46                                         i2l2353 6F04  
                                       i2l2345 6EB4                                         i2l2273 58EA  
                                       i2l1449 40A4                                         i2l1545 2AC2  
                                       i2l1529 284A                                         i2l1481 22E6  
                                       i2l2194 51FE                                         i2l2178 515E  
                                       i2l2354 6F36                                         i2l2346 6E9C  
                                       i2l2338 6E36                                         i2l2362 77CE  
                                       i2l2274 5948                                         i2l1570 2CB6  
                                       i2l1562 2C1E                                         i2l1538 2952  
                                       i2l1490 2368                                         i2l1482 22F6  
                                       i2l1474 22B6                                         i2l1466 22A8  
                                       i2l1458 2108                                         i2l2259 4B6A  
                                       i2l2339 6E46                                         i2l2363 7866  
                                       i2l2275 59F2                                         i2l2267 585A  
                                       i2l1571 2CEE                                         i2l1547 2B2A  
                                       i2l1539 2956                                         i2l1475 245C  
                                       i2l1483 22F0                                         i2l1467 227C  
                                       i2l1459 2100                                         i2l2188 51CE  
                                       i2l2348 6EE6                                         i2l2276 594E  
                                       i2l1740 539C                                         i2l1572 2CD4  
                                       i2l1564 2C3E                                         i2l1492 23AE  
                                       i2l1468 222A                                         i2l2349 6EDA  
                                       i2l2277 5994                                         i2l2269 586A  
                                       i2l1741 547C                                         i2l1821 82DC  
                                       i2l1581 2E40                                         i2l1565 2C60  
                                       i2l1557 2C02                                         i2l1549 2B4E  
                                       i2l1493 2382                                         i2l2278 59BC  
                                       i2l1822 82E6                                         i2l1814 828E  
                                       i2l1830 851E                                         i2l1558 2BAA  
                                       i2l1486 2348                                         i2l1478 22BA  
                                       i2l2359 77B0                                         i2l1823 82F4  
                                       i2l1815 829E                                         i2l1831 8516  
                                       i2l1583 2E22                                         i2l1567 2C82  
                                       i2l1495 23C2                                         i2l1487 235E  
                                       i2l2368 841A                                         i2l1760 6C66  
                                       i2l1584 2D28                                         i2l1568 2C8A  
                                       i2l1496 23D6                                         i2l1913 7C10  
                                       i2l1905 7B80                                         i2l1817 82BC  
                                       i2l1569 2CAE                                         i2l1497 23E8  
                                       i2l1489 236E                                         i2l1914 7C04  
                                       i2l1762 6C7E                                         i2l1738 5274  
                                       i2l1818 82B4                                         i2l1834 8536  
                                       i2l1586 2E3A                                         i2l1498 2ADA  
                                       i2l1907 7BEC                                         i2l1835 8540  
                                       i2l1827 84FC                                         i2l1587 2DAA  
                                       i2l1499 2470                                         i2l1916 7C2C  
                                       i2l1908 7BDC                                         i2l1860 7314  
                                       i2l1836 854E                                         i2l1828 8508  
                                       i2l1757 6AB2                                         i2l1861 7356  
                                       i2l1854 8D7E                                         i2l1870 73E8  
                                       i2l1862 7386                                         i2l1759 6B1E  
                                       i2l1871 73DC                                         i2l1848 7A66  
                                       i2l1864 73C4                                         i2l1849 79CE  
                                       i2l1865 73B4                                         i2l1882 8F78  
                                       i2l1858 72F6                                         i2l1962 70A8  
                                       i2l1875 767A                                         i2l1876 76AE  
                                       i2l1964 70D4                                         i2l1877 76EC  
                                       i2l1965 710E                                         i2l1878 772A  
                                       i2l1974 7196                                         i2l1966 7136  
                                       i2l1975 718A                                         i2l1968 7172  
                                       i2l1969 7162                                         _RG7PPS 000E89  
                                       _TABLAT 000FF5                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                      ??i2_scale 004D  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                               __end_of___xxtofl 6DF8  
        __end_of_ADCC_DischargeSampleCapacitor 92E0         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor 92D8                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A          __end_of_ADCC_HasAccumulatorOverflowed 92C6  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed 92BA  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize 89C2  
                                 i2_scale$4185 004D                               __end_of__powers_ E407  
              __end_of_terminal_ringBufferPull 7524                                         ___flge 7524  
                            _ADCC_ThresholdISR 9004                                      ??___fladd 0131  
                                       ___wmul 8FB4                                      ??___fldiv 0145  
                                    ??___awdiv 0121                                      ??___flneg 0129  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___flmul 015E                                      ??___flsub 0145  
                                    ??___fltol 017C                                      ??___lldiv 011F  
                                    ??___llmod 012C                             ?_ADCC_ThresholdISR 0001  
                     ??_terminal_setCursorHome 01B2                                         _fround 5AE0  
                                       clear_0 7F8A                                         clear_1 7F96  
                                       clear_2 7FA2                           _eusart2RxStringReady 07D8  
                             ___awdiv@quotient 0123                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0119  
                               i2___fldiv@sign 001F                                ___awmod@counter 011B  
                                       _printf 12FE                                         _strcat 8A10  
                                       _strchr 8D90                        __end_of_DATAEE_ReadByte 91AA  
                                       _strcmp 8922                                         _strcpy 8DC8  
                                       _strlen 8826                                 i2___awdiv@sign 000C  
                                       _strstr 80E4                                         floor@i 007A  
                                       floor@x 0076                   getCauseOfResetString@strings 02D3  
                             _background_color 023D                                _ADCC_Initialize 87C6  
                            ??i2_EUSART2_Write 0001                      _ADCPostProcessingCallback 2E90  
                               _PMD_Initialize 9122                        FLASH_ReadWord@flashAddr 011B  
                            __end_ofi2___fladd 521A                                      ??_isdigit 0117  
                            __end_ofi2___fldiv 6310                              __end_ofi2___awdiv 82FE  
                            __end_ofi2___flneg 8F8A                              __end_ofi2___awmod 8558  
                            __end_ofi2___flmul 4B9E                              __end_ofi2___flsub 8C14  
                            __end_ofi2___fltol 7C3E                              __end_ofi2___lldiv 8380  
                                       sin@sgn 0098                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod 8766                                   __mediumconst E3D2  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                            _ADCC_StopConversion 9300  
                         _EUSART2_Transmit_ISR 8DFE                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                ??_EUSART2_Write 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
 ADCC_SetADTIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 00B5                          ?_readDoubleFromEEPROM 0119  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 01B2                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                                 i2___flmul@prod 0043  
                __size_of_INTERRUPT_Initialize 0014                                _eusart2RxBuffer 0380  
                                   ___flge@ff1 0117                                     ___flge@ff2 011B  
                      __end_of_TMR5_Initialize 8AF2                                   ___xxtofl@arg 0121  
                            __end_ofi2_isdigit 9122                                   ___xxtofl@exp 0120  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize 8F2E                                   ___xxtofl@val 0117  
         __end_of_TMR7_DefaultInterruptHandler 9306          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 9304                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 7FBA  
                               i2___fltol@exp1 0075                                     ___flneg@f1 0125  
                                    ?_HLVD_ISR 0001                                 i2printf@tmpval 009B  
                           ?_SYSTEM_Initialize 0001                                   eval_poly@res 0078  
                                ___rparam_used 000001                                     ___fltol@f1 0178  
                              _TMR5_WriteTimer 915A                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                    __end_of_ADCC_ThresholdISR 902C                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 02CB                            __size_ofi2___xxtofl 0150  
                   __end_of_getMajorRevisionID 8D54                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01B2  
                                 __pidataBANK0 92E8                                   __pidataBANK1 930C  
                                 __pidataBANK2 909E                        __end_of_saveMaxToEEPROM 6824  
                          ??_SYSTEM_Initialize 011C                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                             _DATAEE_WriteByte 8CDA                                  __end_of_floor 7878  
                                __end_of_frexp 8476                                  __end_of_scale 3D14  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 9258  
                            ??_HLVD_Initialize 0117                                    i2printf@idx 0094  
                     ??_terminal_clearTerminal 01B2                                    i2printf@len 0097  
                                  i2printf@exp 009F                                    i2printf@val 00A1  
                      __end_of_TMR6_Initialize 8ECE                       __size_of_getCauseOfReset 0052  
                       __end_of_PMD_Initialize 913E                          _getCauseOfResetString 8ECE  
                                    ?i2___flge 0034                           __end_of_EUSART2_Read 8B84  
                                    ?i2___wmul 0001                                  i2__tdiv_to_l_ 707C  
                                   __div_to_l_ 71AE                      __size_ofi2_TMR7_StopTimer 0006  
                           __size_of_getUserID 0044                                      ?i2_fround 0049  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                                    ?i2_printf 0088                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0124                                        ??_floor 005E  
                              __div_to_l_@cntr 0123                                        ??_frexp 0007  
                                      ??_scale 0173                      __end_of_SYSTEM_Initialize 8F5C  
                              __div_to_l_@quot 011F                                        ??_putch 0118  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00FA                                  _eusart2TxHead 01E3  
                                   __pbssBANK0 00F6                                     __pbssBANK1 01BB  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01E0                                  _eusart2TxTail 01E2  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 8A10  
                           __size_of_peakToRMS 024A                                     ??_HLVD_ISR 0100  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011B                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 9052                          ??_ADCC_StopConversion 0001  
                             ??_FVR_Initialize 0117                                 _peakToRMS$4170 00C1  
                               _peakToRMS$4171 00B9                                 _peakToRMS$4172 00BD  
                        ringBufferLUT@arg_buff 02C2                                    _Irms_offset 02EB  
                                      ?___flge 0117                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_2424 02CD                                        ?___wmul 0117  
                        _currentMeasuredToPeak 8380                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 9274                        __end_of_ADCC_Initialize 8826  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                 ringBufferLUT@max_Power_print 02AE                                        ?_fround 016F  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
         __end_of_ADCC_SetADTIInterruptHandler 92AC          __size_of_ADCC_SetADTIInterruptHandler 000E  
                 _ADCC_SetADTIInterruptHandler 929E                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0182                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue 91BE                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___flge 003C                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strcpy 0117                                        ?_strlen 0117  
                               _FLASH_ReadByte 9176            ringBufferLUT@max_voltage_print_2750 02B6  
          ringBufferLUT@max_voltage_print_2756 02BE                                        ?_strstr 0126  
                             ?_DATAEE_ReadByte 0117                                     ??i2___wmul 0005  
                               _FLASH_ReadWord 8C58                                        i2l12202 62E6  
                                      i2l11274 7762                                        u1750_41 708C  
                                      i2l15012 2920                                        u1752_41 70B8  
                                      i2l15160 2E22                                        i2l15072 2B6C  
                                      i2l15086 2BAE                                        i2l14942 2670  
                                      i2l14934 2622                                        i2l14862 2368  
                                      i2l14962 2782                                        i2l14866 2382  
                                      i2l14994 284A                                        i2l14988 282A  
              writeDoubleToEEPROM@input_double 011B                                      ?___xxtofl 0117  
                                      _SP2BRGH 000EF4                                     ??i2_fround 004D  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 7E90  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                     ??i2_printf 008A  
                                      _NVMADRH 000F75                                        _NVMADRL 000F74  
                                      _OSCTUNE 000E48                                        _NVMCON2 000F78  
                       ??_readDoubleFromEEPROM 011D                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE            __end_of_max_Temp_ADC_Result_address E487  
                  _max_Temp_ADC_Result_address E485                       _acquisitionTimerCallback 91F8  
                     __end_of_max_Irms_address E48F                        __end_of_TMR5_WriteTimer 9176  
             __size_of_terminal_textAttributes 0368                                        i2_scale 3D14  
                             ?_TMR5_Initialize 0001                           DATAEE_WriteByte@bAdd 0117  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch 92C6  
                              i2___fladd@signs 0068           __end_of_terminal_textAttributesReset 91F8  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 91E6  
                            __end_of__npowers_ E43B                                        __Hparam 0000  
                   __size_of_ADCC_ThresholdISR 0028             __end_of_max_FVR_ADC_Result_address E485  
                   _max_FVR_ADC_Result_address E483                                     _scale$3982 0173  
                                      __Lparam 0000                              __end_of_getUserID 8C58  
                        _ADCC_ClearAccumulator 92F4                     ??_TMR5_SetInterruptHandler 011A  
                               _adc_error_flag 02F0                                __size_of___flge 0122  
                                      ___fladd 4B9E                                        ___fldiv 5DA6  
                                      ___awdiv 8170                                        ___flneg 8EFE  
                             ?_saveMaxToEEPROM 0001                                        ___awmod 8476  
                                      ___flmul 44FC                                        ___flsub 8B84  
                                      ___fltol 7A82                                        ___lldiv 81F6  
                              __size_of___wmul 0028                                        ___llmod 8698  
                       __end_of_FLASH_ReadByte 9190                         ?_getCauseOfResetString 0117  
                       __end_of_FLASH_ReadWord 8C9A                                        __pcinit 7F32  
                            __end_of_eval_poly 7A82                                __size_of_fround 02C6  
                             ?_TMR6_Initialize 0001                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                        __ptext0 7FC4  
               readDoubleFromEEPROM@byte_index 0121                                        __ptext1 920A  
                                      __ptext2 7400                                        __ptext3 0000  
                                      __ptext4 91E6                                        __ptext5 4194  
                                      __ptext6 8630                                        __ptext7 8A10  
                                      __ptext8 921A                                        __ptext9 80E4  
                            __end_of_peakToRMS 6A6E                                __size_of_printf 0DCE  
                currentMeasuredToPeak@Measured 0099                     ringBufferLUT@angle_degrees 02A6  
                ?_ADCC_SetADTIInterruptHandler 0117                                __size_of_strcat 004C  
                              __size_of_strchr 0038                                  i2_fround$4183 0051  
                                i2_fround$4184 004D                                __size_of_strcmp 0050  
                              __size_of_strcpy 0036                                __size_of_strlen 0058  
                            __end_of_hexpowers E483                         getCauseOfResetString@r 0119  
                                  ?__div_to_l_ 0117                                __size_of_strstr 008C  
                                      _dpowers E43B                          _OSCILLATOR_Initialize 913E  
                       ??_EUSART2_Transmit_ISR 0100                                   __size_of_abs 002A  
                                 i2fround@prec 0055                                        _isdigit 90C2  
                              atan@val_squared 0089                                   __size_of_sin 02FA  
                                 ??i2___xxtofl 0009                                     ??___xxtofl 011B  
                             ___awmod@dividend 0117                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 008D                                      _T5CONbits 000FC3  
                            ??_getCauseOfReset 0117              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 0095                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 02C7                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002E                          i2EUSART2_Write@txData 0001  
                                      _strncmp 8054                                 __pintcode_body 7D16  
                                      _strncpy 8630                           end_of_initialization 7FBA  
                      __end_of_TMR7_WriteTimer 9078                        getDeviceIDString@F17550 02E5  
                       _terminal_setCursorHome 920A                          ??_ADCC_GetFilterValue 0003  
                                    _PCON0bits 000FD7                               ?_TMR7_Initialize 0001  
                                    i1u1117_20 8CA6                           _max_POS12_ADC_Result 0208  
                                    i1u1118_28 8CAA                                        int_func 7D16  
                          i2___wmul@multiplier 0001                                      _T6RSTbits 000FB4  
                      __size_of_TMR7_StopTimer 0006                                      i2u1330_40 4FE2  
                                    i2u1331_40 4FF2                                 i2___xxtofl@arg 000F  
                                    i1u2667_28 8FF0                                      i2u1332_40 4FF4  
                                    i1u2692_28 0086                                      i1u2669_28 8E54  
                                    i2u1351_40 5184                                      i2u1335_40 5036  
                               i2___xxtofl@exp 000E                                      i2u1520_40 6AE0  
                               i2___xxtofl@val 0005                                      i2u1356_40 51DA  
                                    i2u1348_40 516C                                      i2u1373_40 4AE0  
                                    i2u1367_40 48DA                                      i2u1519_40 6ADE  
                                    i2u1376_40 4B36                                      i2u1368_40 4A50  
                                    i2u1560_40 7C16                                      i2u1480_40 62CA  
                                    i2u1368_45 4A46                                      i2u1377_40 4B54  
                                    i2u1554_40 8442                                      i2u1554_48 8444  
                                    i2u1556_40 7B9E                                      i2u1660_40 77BC  
                                    i2u1476_40 6250                                      i2u1556_45 7B94  
                                    i2u1479_40 62A6                                      i2u1911_40 2CF6  
                                    i2u1568_40 6EF0                                      i2u1912_40 2D0C  
                                    i2u1840_40 212A                                      i2u1840_47 2120  
                                    i2u1841_40 2152                                      i2u1841_47 2148  
                                    i2u1666_40 566C                                      i2u1762_40 8330  
                                    i2u1914_40 2E52                                      i2u1667_40 566E  
                                    i2u1771_40 2F18                                      i2u1683_40 82C0  
                                    i2u1915_40 2E82                                      i2u1843_40 21AC  
                                    i2u1915_47 2E78                                      i2u1843_47 21A2  
                                    i2u1692_40 92C2                                      i2u1860_40 241E  
                                    i2u1852_40 2324                                      i2u1844_40 21E8  
                                    i2u1860_47 2414                                      i2u1852_47 231A  
                                    i2u1844_47 21DE                                      i2u1781_40 354C  
                                    i2u1765_40 8722                                      i2u1749_40 73EE  
                                    i2u1853_40 232A                                      i2u1845_40 21F0  
                                    i2u1774_40 302A                                      i2u1758_40 719C  
                                    i2u1846_40 2212                                      i2u1846_47 2208  
                                    i2u1783_40 3636                                      i2u1776_40 30F0  
                                    i2u1872_40 2670                                      i2u1848_40 2260  
                                    i2u1928_40 7E28                                      i2u2663_48 8E88  
                                    i2u1848_47 2256                                      i2u1785_40 381C  
                                    i2u1689_40 8522                                      i2u1849_40 229E  
                                    i2u1849_47 2294                                      i2u2665_48 9018  
                                    i2u1882_40 2866                                      i2u1858_40 23A4  
                              ___lldiv@divisor 011B                                      i2u1858_47 239A  
                                    i2u1876_40 27C0                                      i2u1868_40 25E8  
                                    i2u2683_48 7D6A                                      i2u1885_40 293C  
                                    i2u1869_40 2634                    __end_of_writeDoubleToEEPROM 89C2  
                                    i2u1886_40 294C                                ___lldiv@counter 011F  
                           _EUSART2_Initialize 85C6                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0099                    getDeviceIDString@inputDevID 0124  
                              i2_EUSART2_Write 8AF2                                  ??_getDeviceID 0124  
                                      printf@c 01B1                                        printf@f 0182  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 6F48  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
                             ?_ADCC_Initialize 0001                 _ADCPostProcessingCallback$4173 00D6  
               _ADCPostProcessingCallback$4174 00DA                 _ADCPostProcessingCallback$4175 00C9  
               _ADCPostProcessingCallback$4176 00CD                 _ADCPostProcessingCallback$4177 00D1  
                                      sqrt@grs 007B                                        sqrt@exp 007F  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                   _HLVDCON0bits 000EC2  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 02CF  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler 9266                          _TMR5_InterruptHandler 0228  
                             i2_TMR7_StopTimer 92FA                       ?_terminal_ringBufferPull 0001  
                                  ___fladd@grs 013C                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 011F                                    ___fldiv@grs 0150  
                                  ___fldiv@rem 014A                                i2___fltol@sign1 0074  
                                    i2___fladd 4EDC                                      i2___fldiv 605C  
                                    i2___awdiv 827A                                      i2___flneg 8F5C  
                                    i2___awmod 84E8                               __CFG_FEXTOSC$ECH 000000  
                                    i2___flmul 484E                                      i2___flsub 8BCC  
                                    i2___fltol 7B60                                      i2___lldiv 82FE  
                                    i2___llmod 8700                       __end_of_DATAEE_WriteByte 8D18  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 922A                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 12FE                                    ___flmul@grs 0165  
                                  printf@width 01AD                                   _EUSART2_Read 8B3C  
                           i2___llmod@dividend 000E                                _HLVD_Initialize 923A  
                           i2___awdiv@dividend 0007                         ?_ADCC_ClearAccumulator 0001  
                                    i2_isdigit 9104                            __size_of__div_to_l_ 012A  
                            __size_of_HLVD_ISR 0008                             _max_FVR_ADC_Result 0200  
                                    _Avg_Power 01BB                   __end_of_INTERRUPT_Initialize 91BE  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___flge 7646                  __end_of_terminal_printNewline 922A  
                               __end_of___wmul 8FDC                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07D8  
                          __end_of_getDeviceID 9104                                 __end_of_fround 5DA6  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 007E                               i2___wmul@product 0005  
                               __end_of_printf 20CC                                  i2_printf$4186 0090  
                           _getMajorRevisionID 8D18                                 __end_of_strcat 8A5C  
                               __end_of_strchr 8DC8                                 __end_of_strcmp 8972  
                                 i2printf@flag 00A9                                 __end_of_strcpy 8DFE  
                               __end_of_strlen 887E                                   i2printf@fval 00A5  
                               __end_of_strstr 8170                                   i2printf@prec 00AD  
                            __size_ofi2___flge 0120                            start_initialization 7F32  
                                   eval_poly@d 0070                                     eval_poly@n 0072  
                                   eval_poly@x 006C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 930A  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 9308  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 707C  
                                  __end_of_abs 8FB4                                    __end_of_sin 5818  
                                    i2printf@c 00AF                                      i2printf@f 0088  
                      _terminal_textAttributes 4194                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0080                                     ?i2___fltol 006C  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                              __size_ofi2_printf 0DC4  
                        __end_of_EUSART2_Write 8AA8                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 0281  
                      __end_ofi2_EUSART2_Write 8B3C                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                            DATAEE_ReadByte@bAdd 0117  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 01E4  
                             __CFG_LPBOREN$OFF 000000                                       ??___flge 011F  
                             ??_PMD_Initialize 0117                                       ??___wmul 011B  
              __size_of_heartbeatTimerCallback 0040                           ??_getMajorRevisionID 0122  
                                  __pdataBANK0 00F0                                    __pdataBANK1 01E8  
                                  __pdataBANK2 02D3                                       ??_fround 0173  
                                _ringBufferLUT 0000                 ??_terminal_textAttributesReset 01B4  
                                     ??_printf 018C              getCauseOfReset@return_reset_cause 0117  
         readDoubleFromEEPROM@starting_address 0119                              _POS3P3_ADC_Result 01D3  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strcpy 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 00B1                     __end_of_getMinorRevisionID 9052  
                                     ??_strstr 012A                                      ___fladd@a 012D  
                                    ___fladd@b 0129                                      _Vpk_const 02EF  
                                   fround@prec 017B                                 _eusart2RxCount 01DF  
                                ?i2__div_to_l_ 0001                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$4178 00AD  
                                    ___flmul@a 015A                                      ___flmul@b 0156  
                                    ___flsub@a 0141                                      ___flsub@b 013D  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 0280                              __size_of___xxtofl 0154  
                                 _isdigit$3264 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize 924A                            EUSART2_Write@txData 0117  
                                 _load_on_time 0218                    __end_of_ADCC_StopConversion 9304  
                                     ?i2_scale 0049                ??_EUSART2_SetRxInterruptHandler 011A  
                                    _asin$4180 009D                                      _asin$4181 0099  
                                    _asin$4179 00A5                                       ?i2_putch 0001  
                                   sin@coeff_a E4A7                                     sin@coeff_b E4CF  
                               _TMR7_StopTimer 92EE                          _TMR6_InterruptHandler 0231  
                                    __pnvBANK2 02F7                    getMinorRevisionID@REVID_RAW 0122  
                       _PIN_MANAGER_Initialize 7E90                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 90E4  
                                __pmediumconst E3D2                                       ?___fladd 0129  
                                     ?___fldiv 013D                                       ?___awdiv 011D  
                                    __ptext100 72D8                                      __ptext101 9078  
                                    __ptext110 521A                                      __ptext102 8700  
                                     ?___flneg 0125                                      __ptext111 5818  
                                    __ptext103 82FE                                      __ptext120 6DF8  
                                    __ptext112 6A6E                                      __ptext104 9004  
                                    __ptext121 7B60                                      __ptext113 8D54  
                                    __ptext105 930A                                      __ptext130 91BE  
                                    __ptext122 7646                                      __ptext114 8380  
                                    __ptext106 2E90                                      __ptext131 91D2  
                                    __ptext123 83FC                                      __ptext115 551E  
                                    __ptext107 92FA                                      __ptext132 0000  
                                    __ptext124 7982                                      __ptext116 8BCC  
                                    __ptext108 6824                                      __ptext125 484E  
                                    __ptext117 8F5C                                      __ptext109 8558  
                                    __ptext126 4EDC                                      __ptext118 605C  
                                    __ptext127 8F8A                                      __ptext119 7766  
                                    __ptext128 9300                                      __ptext129 92BA  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 0178  
             __end_of_TMR7_SetInterruptHandler 9266                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ E407  
                              _getCauseOfReset 88D0                                 ?_ringBufferLUT 01B4  
                                    _getUserID 8C14              _EUSART2_TxDefaultInterruptHandler 0237  
                                  __pintcodelo 0018                           _VCC_overvoltage_flag 02F2  
                                  __tdiv_to_l_ 6F48                                 ??i2__div_to_l_ 0009  
                                 ??__div_to_l_ 011F                               _POS12_ADC_Result 01CF  
                                     _BAUD2CON 000EF7                                       ?_isdigit 0001  
                                  _dev_on_time 021C                                      _eval_poly 7982  
                    ??_terminal_textAttributes 01B4                                      _max_Power 0210  
                                    _attribute 023F                                      _peakToRMS 6824  
                             __CFG_WDTE$NSLEEP 000000                        ?_terminal_setCursorHome 0001  
                                    _hexpowers E463                         _heartbeatTimerCallback 8C9A  
                               _dimming_period 00F0                                    ??i2___fladd 0060  
                                  ??i2___fldiv 001B                                    ??i2___awdiv 000B  
                                  ??i2___flneg 0030                                    ??i2___awmod 0005  
                                  ??i2___flmul 0038                                 __size_of_floor 0112  
                                  ??i2___flsub 005E                                    ??i2___fltol 0070  
                               __size_of_frexp 007A                                    ??i2___lldiv 0009  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                     __size_of_DATAEE_ReadByte 001A                                       ?_strncmp 011D  
                                     ?_strncpy 0117                  __size_of_readDoubleFromEEPROM 0052  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 91AA  
                       __end_of_TMR7_StopTimer 92F4                                       _T6CLKCON 000FB3  
       terminal_textAttributes@input_attribute 01B3                                       _HLVDCON0 000EC2  
                                     _HLVDCON1 000EC3                   __size_of_EUSART2_Receive_ISR 00AE  
                               ___wmul@product 011B                      currentMeasuredToPeak@Peak 00A1  
                             ?i2_EUSART2_Write 0001                                       _HLVD_ISR 92E0  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0088                                       _IPR1bits 000E20  
                                     _IPR2bits 000E21                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                       __end_ofi2_TMR7_StopTimer 9300  
                                     _PIE2bits 000E2B                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                          _max_Temp_ADC_Result 0204                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 72D8                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 004A                              i2___fldiv@new_exp 0024  
                                     _TMR5_ISR 8E68                                       _TMR6_ISR 8FDC  
                                     _TMR7_ISR 8E34                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                     ?_getUserID 0122  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                       i2___flge 7646  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0117  
                                     i2___wmul 9078                        __size_of_FVR_Initialize 0008  
                                   printf@flag 01AB                                     printf@fval 01A3  
                                   printf@prec 01AF                       __size_of_saveMaxToEEPROM 0266  
                                   ?_eval_poly 006C                 __end_of_terminal_setCursorHome 921A  
                            i2___awdiv@divisor 0009                                       i2_fround 6310  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 00B1  
                writeDoubleToEEPROM@byte_index 0125                              i2___awdiv@counter 000B  
                  __end_of_ADCC_GetFilterValue 91D2                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                          DATAEE_WriteByte@bData 0119  
                                     i2_printf 20CC                            __end_ofatan@coeff_a E4A7  
                          __end_ofatan@coeff_b E4CF                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                              _max_Power_address E48B  
                                    copy_data0 7F46                                      copy_data1 7F78  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 023C                             i2___awmod@dividend 0001  
                              ?_TMR7_StopTimer 0001                              ?_DATAEE_WriteByte 0117  
                      ??_ADCC_ClearAccumulator 0100               __size_of_terminal_ringBufferPull 0124  
                             __size_ofi2_scale 0480                 ??_TMR5_DefaultInterruptHandler 0001  
                           ??_DATAEE_WriteByte 011A                                   _next_channel 01E8  
                             __size_ofi2_putch 000A                                      frexp@eptr 0005  
                      __end_of_getCauseOfReset 8922                __end_of_terminal_textAttributes 44FC  
                writeDoubleToEEPROM@input_data 0121                                     _ADSTATbits 000F65  
 ADCPostProcessingCallback@current_adc_channel 00D5                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 91E6           __end_of_max_POS12_ADC_Result_address E489  
                 _max_POS12_ADC_Result_address E487                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 929E         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 9290                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01B6  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 023E  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00DE                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0068  
                 __size_of_writeDoubleToEEPROM 0050                                    _load_enable 02F1  
             __end_of_acquisitionTimerCallback 920A                                    _fround$3980 0177  
                                  _fround$3981 0173                          __end_ofi2__tdiv_to_l_ 71AE  
                     _TMR7_SetInterruptHandler 9258                          _TMR7_InterruptHandler 022B  
                           _ADC_Result_Scaling 0224        terminal_textAttributes@foreground_color 0280  
                                     ___xxtofl 6CA4                       __size_of_ADCC_Initialize 0060  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 923A                               __size_of_isdigit 0022  
                    __end_of_max_Power_address E48D                                       __ptext10 8054  
                                     __ptext11 8826                                       __ptext20 8C58  
                                     __ptext12 8D90                                       __ptext21 9176  
                                     __ptext13 8DC8                                       __ptext30 924A  
                                     __ptext22 8ECE                                       __ptext14 8922  
                                     __ptext31 8A5C                                       __ptext23 7C3E  
                                     __ptext15 8C14                                       __ptext40 8FB4  
                                     __ptext32 90C2                                       __ptext24 5DA6  
                                     __ptext16 902C                                       __ptext41 8698  
                                     __ptext33 5AE0                                       __ptext25 92EE  
                                     __ptext17 8D18                                       __ptext50 7524  
                                     __ptext42 81F6                                       __ptext34 44FC  
                                     __ptext26 8B3C                                       __ptext18 8766  
                                     __ptext51 7878                                       __ptext43 7A82  
                                     __ptext35 8476                                       __ptext27 922A  
                                     __ptext19 90E4                                       __ptext60 8AA8  
                                     __ptext52 887E                                       __ptext44 8B84  
                                     __ptext36 8170                                       __ptext28 12FE  
                                     __ptext61 9274                                       __ptext53 9190  
                                     __ptext45 4B9E                                       __ptext37 6F48  
                                     __ptext29 3870                                       __ptext70 9290  
                                     __ptext62 9122                                       __ptext54 88D0  
                                     __ptext46 8EFE                                       __ptext38 71AE  
                                     __ptext71 87C6                                       __ptext63 7E90  
                                     __ptext55 8F2E                                       __ptext47 65BE  
                                     __ptext39 6CA4                                       __ptext80 9052  
                                     __ptext72 929E                                       __ptext64 913E  
                                     __ptext56 89C2                                       __ptext48 8972  
                                     __ptext81 8FDC                                       __ptext65 91AA  
                                     __ptext57 9258                                       __ptext49 8CDA  
                                     __ptext90 7DE2                                       __ptext82 9306  
                                     __ptext74 8E34                                       __ptext66 923A  
                                     __ptext58 8E9C                                       __ptext91 20CC  
                                     __ptext83 8C9A                                       __ptext75 9304  
                                     __ptext67 92D0                                       __ptext59 9266  
                                     __ptext92 3D14                                       __ptext84 92E0  
                                     __ptext76 91F8                                       __ptext68 85C6  
                                     __ptext93 92C6                                       __ptext85 8DFE  
                                     __ptext77 92AC                                       __ptext69 9282  
                                     __ptext94 8AF2                                       __ptext78 92D8  
                                     __ptext95 9104                                       __ptext87 8E68  
                                     __ptext79 92F4                                       __ptext96 6310  
                                     __ptext88 915A                                       __ptext97 84E8  
                                     __ptext89 9308                                       __ptext98 827A  
                                     __ptext99 707C                                       _sin$4182 0090  
                                     __powers_ E3D3                            ringBufferLUT@userID 02C9  
                              _Temp_ADC_Offset 02F3                    DATAEE_WriteByte@GIEBitValue 011A  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 006A                                     strcpy@from 0119  
                                     _max_Irms 0214                                 i2_isdigit$3264 0002  
                              _Temp_ADC_Result 01CB                                  __size_of_acos 006E  
                                __size_of_fabs 003C                                  __size_of_atan 0236  
                                __size_of_asin 0304                                  __size_of_atoi 00D8  
                                __size_of_main 0090                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 02C8             __size_of_ADCPostProcessingCallback 09E0  
                         __end_ofi2__div_to_l_ 7400                                     strncmp@len 0121  
                   ?_ADCPostProcessingCallback 0001                              ??_DATAEE_ReadByte 0119  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                       __size_of_TMR5_WriteTimer 001C  
                    ringBufferLUT@channel_name 0290                                     _RC2STAbits 000EF5  
                 __end_of_ADCC_StartConversion 92BA                                       int$flags 005F  
                                     atoi@sign 0121                                    ??_getUserID 0124  
                                    printf@idx 0196                                      printf@len 0199  
                                    printf@exp 01A1                                      printf@val 01A7  
                                  atan@coeff_a E48F                                    atan@coeff_b E4BB  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline 921A  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0074  
                            _readMaxFromEEPROM 7878                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                           ?_readMaxFromEEPROM 0001                                       scale@scl 0177  
                                    sqrt@tfrac 0076           __end_of_TMR6_DefaultInterruptHandler 9308  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 9306  
                            ??_saveMaxToEEPROM 0127           __end_of_ADCC_DefaultInterruptHandler 930C  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 930A  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID 902C                               __tdiv_to_l_@quot 0120  
                              i2___xxtofl@sign 000D                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 02C5  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                            ??_readMaxFromEEPROM 0123  
                            __CFG_CLKOUTEN$OFF 000000                                    _reset_cause 02F7  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 01D7  
            __end_of_ADCPostProcessingCallback 3870                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                   ?_getDeviceID 0122  
                                     printf@ap 019B                                       printf@cp 0197  
               __size_of_getCauseOfResetString 0030                  __end_of_getCauseOfResetString 8EFE  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult 91D2  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 004C                            _EUSART2_Receive_ISR 7DE2  
                                     sqrt@frac 0085         __end_of_INTERRUPT_InterruptManagerHigh 7DE2  
      __size_of_INTERRUPT_InterruptManagerHigh 7DDA                 _INTERRUPT_InterruptManagerHigh 0008  
                                     sqrt@sign 0074                    getMajorRevisionID@REVID_RAW 0125  
                                     sqrt@root 0081                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 92D0                                    _printf$3983 0192  
                    __end_of_readMaxFromEEPROM 7982                                       strcat@cp 011B  
                                     strcat@to 0117                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0117                                       strcmp@s2 0119  
                            ringBufferLUT@line 01B4                               ___lldiv@quotient 0120  
                                     strcpy@cp 011B                                       strlen@cp 011B  
                                     strcpy@to 0117                           ??_getMinorRevisionID 0122  
                            _getDeviceIDString 8766                                       strstr@s1 0126  
                                     strstr@s2 0128                                     _TX2STAbits 000EF6  
                                ___fladd@signs 0139                             ?_getDeviceIDString 0124  
        __end_of_INTERRUPT_InterruptManagerLow 010A         __size_of_INTERRUPT_InterruptManagerLow 00F2  
                _INTERRUPT_InterruptManagerLow 0018                 ??_ADCC_SetADTIInterruptHandler 011A  
               __end_of_PIN_MANAGER_Initialize 7F32                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 7400                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                          ??_getDeviceIDString 0126                              ?i2_TMR7_StopTimer 0001  
            _EUSART2_RxDefaultInterruptHandler 0234                 __size_of_currentMeasuredToPeak 007C  
                __end_of_currentMeasuredToPeak 83FC                   __size_of_ADCC_StopConversion 0004  
