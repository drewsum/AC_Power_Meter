

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 08 10:37:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   113                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1,group=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1,group=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   172                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   173  0000                     
   174                           ; Version 1.45 (B)
   175                           ; Generated 30/01/2018 GMT
   176                           ; 
   177                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   178                           ; All rights reserved.
   179                           ; 
   180                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   181                           ; 
   182                           ; Redistribution and use in source and binary forms, with or without modification, are
   183                           ; permitted provided that the following conditions are met:
   184                           ; 
   185                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   186                           ;        conditions and the following disclaimer.
   187                           ; 
   188                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   189                           ;        of conditions and the following disclaimer in the documentation and/or other
   190                           ;        materials provided with the distribution.
   191                           ; 
   192                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   193                           ;        software without specific prior written permission.
   194                           ; 
   195                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   196                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   197                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   198                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   199                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   200                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   201                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   202                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   203                           ; 
   204                           ; 
   205                           ; Code-generator required, PIC18LF67K40 Definitions
   206                           ; 
   207                           ; SFR Addresses
   208  0000                     
   209                           	psect	idataBANK0
   210  0196BC                     __pidataBANK0:
   211                           	opt stack 0
   212                           
   213                           ;initializer for _dimming_period
   214  0196BC  7FEE               	dw	32750
   215                           
   216                           ;initializer for _TRIAC_Firing_Angle
   217                           ;main.c: 72: volatile double FVR_ADC_Result;
   218                           ;main.c: 73: volatile double AVSS_ADC_Result;
   219                           ;main.c: 74: volatile double ADC_Result_Scaling;
   220                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   221                           ;main.c: 76: volatile double POS12_ADC_Result;
   222                           ;main.c: 77: volatile double Temp_ADC_Result;
   223                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   224                           ;main.c: 79: double Vpk_const = 169.7056274847714;
   225                           ;main.c: 80: volatile double Vpk;
   226                           ;main.c: 81: volatile double Ipk;
   227                           ;main.c: 82: volatile double Imeas;
   228                           ;main.c: 83: double Irms_offset = -0.113;
   229  0196BE  0000               	dw	0
   230  0196C0  42B4               	dw	17076
   231                           
   232                           	psect	idataBANK1
   233  0196EE                     __pidataBANK1:
   234                           	opt stack 0
   235                           
   236                           ;initializer for _next_channel
   237  0196EE  3C                 	db	60
   238                           
   239                           	psect	idataBANK2
   240  0193FA                     __pidataBANK2:
   241                           	opt stack 0
   242                           
   243                           ;initializer for getCauseOfResetString@strings
   244  0193FA  DD                 	db	low STR_156
   245  0193FB  FD                 	db	high STR_156
   246  0193FC  5D                 	db	low STR_157
   247  0193FD  FE                 	db	high STR_157
   248  0193FE  ED                 	db	low STR_158
   249  0193FF  FD                 	db	high STR_158
   250  019400  2E                 	db	low STR_159
   251  019401  FD                 	db	high STR_159
   252  019402  75                 	db	low (STR_161+9)
   253  019403  F9                 	db	high (STR_161+9)
   254  019404  6C                 	db	low STR_161
   255  019405  F9                 	db	high STR_161
   256  019406  1B                 	db	low STR_162
   257  019407  FC                 	db	high STR_162
   258  019408  C6                 	db	low STR_163
   259  019409  FC                 	db	high STR_163
   260  01940A  9A                 	db	low STR_164
   261  01940B  FC                 	db	high STR_164
   262                           
   263                           ;initializer for getDeviceIDString@F17550
   264  01940C  2F                 	db	low STR_153
   265  01940D  FF                 	db	high STR_153
   266  01940E  FB                 	db	low STR_154
   267  01940F  FE                 	db	high STR_154
   268  019410  72                 	db	low STR_68
   269  019411  FF                 	db	high STR_68
   270                           
   271                           ;initializer for _Irms_offset
   272  019412  6C8B               	dw	27787
   273  019414  BDE7               	dw	48615
   274                           
   275                           ;initializer for _Vpk_const
   276                           ;main.c: 72: volatile double FVR_ADC_Result;
   277                           ;main.c: 73: volatile double AVSS_ADC_Result;
   278                           ;main.c: 74: volatile double ADC_Result_Scaling;
   279                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   280                           ;main.c: 76: volatile double POS12_ADC_Result;
   281                           ;main.c: 77: volatile double Temp_ADC_Result;
   282                           ;main.c: 78: volatile double Temp_ADC_Offset = 631.993725;
   283  019416  B4A4               	dw	46244
   284  019418  4329               	dw	17193
   285                           
   286                           ;initializer for _Temp_ADC_Offset
   287                           ;main.c: 72: volatile double FVR_ADC_Result;
   288                           ;main.c: 73: volatile double AVSS_ADC_Result;
   289                           ;main.c: 74: volatile double ADC_Result_Scaling;
   290                           ;main.c: 75: volatile double POS3P3_ADC_Result;
   291                           ;main.c: 76: volatile double POS12_ADC_Result;
   292                           ;main.c: 77: volatile double Temp_ADC_Result;
   293  01941A  FF99               	dw	65433
   294  01941C  441D               	dw	17437
   295                           
   296                           	psect	mediumconst
   297  00D740                     __pmediumconst:
   298                           	opt stack 0
   299  00D740  00                 	db	0
   300  00D741                     __powers_:
   301                           	opt stack 0
   302  00D741  0000               	dw	0
   303  00D743  3F80               	dw	16256
   304  00D745  0000               	dw	0
   305  00D747  4120               	dw	16672
   306  00D749  0000               	dw	0
   307  00D74B  42C8               	dw	17096
   308  00D74D  0000               	dw	0
   309  00D74F  447A               	dw	17530
   310  00D751  4000               	dw	16384
   311  00D753  461C               	dw	17948
   312  00D755  5000               	dw	20480
   313  00D757  47C3               	dw	18371
   314  00D759  2400               	dw	9216
   315  00D75B  4974               	dw	18804
   316  00D75D  9680               	dw	38528
   317  00D75F  4B18               	dw	19224
   318  00D761  BC20               	dw	48160
   319  00D763  4CBE               	dw	19646
   320  00D765  6B28               	dw	27432
   321  00D767  4E6E               	dw	20078
   322  00D769  02F9               	dw	761
   323  00D76B  5015               	dw	20501
   324  00D76D  78EC               	dw	30956
   325  00D76F  60AD               	dw	24749
   326  00D771  F2CA               	dw	62154
   327  00D773  7149               	dw	29001
   328  00D775                     __end_of__powers_:
   329                           	opt stack 0
   330  00D775                     __npowers_:
   331                           	opt stack 0
   332  00D775  0000               	dw	0
   333  00D777  3F80               	dw	16256
   334  00D779  CCCD               	dw	52429
   335  00D77B  3DCC               	dw	15820
   336  00D77D  D70A               	dw	55050
   337  00D77F  3C23               	dw	15395
   338  00D781  126F               	dw	4719
   339  00D783  3A83               	dw	14979
   340  00D785  B717               	dw	46871
   341  00D787  38D1               	dw	14545
   342  00D789  C5AC               	dw	50604
   343  00D78B  3727               	dw	14119
   344  00D78D  37BD               	dw	14269
   345  00D78F  3586               	dw	13702
   346  00D791  BF95               	dw	49045
   347  00D793  33D6               	dw	13270
   348  00D795  CC77               	dw	52343
   349  00D797  322B               	dw	12843
   350  00D799  705F               	dw	28767
   351  00D79B  3089               	dw	12425
   352  00D79D  E6FF               	dw	59135
   353  00D79F  2EDB               	dw	11995
   354  00D7A1  E508               	dw	58632
   355  00D7A3  1E3C               	dw	7740
   356  00D7A5  4260               	dw	16992
   357  00D7A7  0DA2               	dw	3490
   358  00D7A9                     __end_of__npowers_:
   359                           	opt stack 0
   360  00D7A9                     _dpowers:
   361                           	opt stack 0
   362  00D7A9  0001               	dw	1
   363  00D7AB  0000               	dw	0
   364  00D7AD  000A               	dw	10
   365  00D7AF  0000               	dw	0
   366  00D7B1  0064               	dw	100
   367  00D7B3  0000               	dw	0
   368  00D7B5  03E8               	dw	1000
   369  00D7B7  0000               	dw	0
   370  00D7B9  2710               	dw	10000
   371  00D7BB  0000               	dw	0
   372  00D7BD  86A0               	dw	34464
   373  00D7BF  0001               	dw	1
   374  00D7C1  4240               	dw	16960
   375  00D7C3  000F               	dw	15
   376  00D7C5  9680               	dw	38528
   377  00D7C7  0098               	dw	152
   378  00D7C9  E100               	dw	57600
   379  00D7CB  05F5               	dw	1525
   380  00D7CD  CA00               	dw	51712
   381  00D7CF  3B9A               	dw	15258
   382  00D7D1                     __end_of_dpowers:
   383                           	opt stack 0
   384  00D7D1                     _hexpowers:
   385                           	opt stack 0
   386  00D7D1  0001               	dw	1
   387  00D7D3  0000               	dw	0
   388  00D7D5  0010               	dw	16
   389  00D7D7  0000               	dw	0
   390  00D7D9  0100               	dw	256
   391  00D7DB  0000               	dw	0
   392  00D7DD  1000               	dw	4096
   393  00D7DF  0000               	dw	0
   394  00D7E1  0000               	dw	0
   395  00D7E3  0001               	dw	1
   396  00D7E5  0000               	dw	0
   397  00D7E7  0010               	dw	16
   398  00D7E9  0000               	dw	0
   399  00D7EB  0100               	dw	256
   400  00D7ED  0000               	dw	0
   401  00D7EF  1000               	dw	4096
   402  00D7F1                     __end_of_hexpowers:
   403                           	opt stack 0
   404  00D7F1                     _max_FVR_ADC_Result_address:
   405                           	opt stack 0
   406  00D7F1  0014               	dw	20
   407  00D7F3                     __end_of_max_FVR_ADC_Result_address:
   408                           	opt stack 0
   409  00D7F3                     _max_Temp_ADC_Result_address:
   410                           	opt stack 0
   411  00D7F3  0010               	dw	16
   412  00D7F5                     __end_of_max_Temp_ADC_Result_address:
   413                           	opt stack 0
   414  00D7F5                     _max_POS12_ADC_Result_address:
   415                           	opt stack 0
   416  00D7F5  000C               	dw	12
   417  00D7F7                     __end_of_max_POS12_ADC_Result_address:
   418                           	opt stack 0
   419  00D7F7                     _max_POS3P3_ADC_Result_address:
   420                           	opt stack 0
   421  00D7F7  0008               	dw	8
   422  00D7F9                     __end_of_max_POS3P3_ADC_Result_address:
   423                           	opt stack 0
   424  00D7F9                     _max_Power_address:
   425                           	opt stack 0
   426  00D7F9  0004               	dw	4
   427  00D7FB                     __end_of_max_Power_address:
   428                           	opt stack 0
   429  00D7FB                     _max_Irms_address:
   430                           	opt stack 0
   431  00D7FB  0000               	dw	0
   432  00D7FD                     __end_of_max_Irms_address:
   433                           	opt stack 0
   434  00D7FD                     _Total_Energy_address:
   435                           	opt stack 0
   436  00D7FD  0018               	dw	24
   437  00D7FF                     __end_of_Total_Energy_address:
   438                           	opt stack 0
   439  00D7FF                     atan@coeff_a:
   440                           	opt stack 0
   441  00D7FF  3C06               	dw	15366
   442  00D801  4204               	dw	16900
   443  00D803  9F7D               	dw	40829
   444  00D805  426A               	dw	17002
   445  00D807  905C               	dw	36956
   446  00D809  4201               	dw	16897
   447  00D80B  4D60               	dw	19808
   448  00D80D  40BB               	dw	16571
   449  00D80F  EC51               	dw	60497
   450  00D811  3E47               	dw	15943
   451  00D813  8DDE               	dw	36318
   452  00D815  BB1F               	dw	47903
   453  00D817                     __end_ofatan@coeff_a:
   454                           	opt stack 0
   455  00D817                     sin@coeff_a:
   456                           	opt stack 0
   457  00D817  F3EC               	dw	62444
   458  00D819  484A               	dw	18506
   459  00D81B  9535               	dw	38197
   460  00D81D  C795               	dw	51093
   461  00D81F  C117               	dw	49431
   462  00D821  45DC               	dw	17884
   463  00D823  DBFD               	dw	56317
   464  00D825  C36D               	dw	50029
   465  00D827  B372               	dw	45938
   466  00D829  4033               	dw	16435
   467  00D82B                     __end_ofsin@coeff_a:
   468                           	opt stack 0
   469  00D82B                     atan@coeff_b:
   470                           	opt stack 0
   471  00D82B  3C06               	dw	15366
   472  00D82D  4204               	dw	16900
   473  00D82F  59C0               	dw	22976
   474  00D831  428B               	dw	17035
   475  00D833  0474               	dw	1140
   476  00D835  4244               	dw	16964
   477  00D837  9BF9               	dw	39929
   478  00D839  414F               	dw	16719
   479  00D83B  0000               	dw	0
   480  00D83D  3F80               	dw	16256
   481  00D83F                     __end_ofatan@coeff_b:
   482                           	opt stack 0
   483  00D83F                     sin@coeff_b:
   484                           	opt stack 0
   485  00D83F  342B               	dw	13355
   486  00D841  4801               	dw	18433
   487  00D843  9D7F               	dw	40319
   488  00D845  45B0               	dw	17840
   489  00D847  FFE7               	dw	65511
   490  00D849  42D9               	dw	17113
   491  00D84B  0000               	dw	0
   492  00D84D  3F80               	dw	16256
   493  00D84F                     __end_ofsin@coeff_b:
   494                           	opt stack 0
   495  00D84F                     STR_145:
   496  00D84F  4C                 	db	76	;'L'
   497  00D850  69                 	db	105	;'i'
   498  00D851  73                 	db	115	;'s'
   499  00D852  74                 	db	116	;'t'
   500  00D853  20                 	db	32
   501  00D854  6F                 	db	111	;'o'
   502  00D855  66                 	db	102	;'f'
   503  00D856  20                 	db	32
   504  00D857  61                 	db	97	;'a'
   505  00D858  6C                 	db	108	;'l'
   506  00D859  6C                 	db	108	;'l'
   507  00D85A  20                 	db	32
   508  00D85B  73                 	db	115	;'s'
   509  00D85C  75                 	db	117	;'u'
   510  00D85D  70                 	db	112	;'p'
   511  00D85E  70                 	db	112	;'p'
   512  00D85F  6F                 	db	111	;'o'
   513  00D860  72                 	db	114	;'r'
   514  00D861  74                 	db	116	;'t'
   515  00D862  65                 	db	101	;'e'
   516  00D863  64                 	db	100	;'d'
   517  00D864  20                 	db	32
   518  00D865  63                 	db	99	;'c'
   519  00D866  6F                 	db	111	;'o'
   520  00D867  6D                 	db	109	;'m'
   521  00D868  6D                 	db	109	;'m'
   522  00D869  61                 	db	97	;'a'
   523  00D86A  6E                 	db	110	;'n'
   524  00D86B  64                 	db	100	;'d'
   525  00D86C  73                 	db	115	;'s'
   526  00D86D  3A                 	db	58	;':'
   527  00D86E  0A                 	db	10
   528  00D86F  0D                 	db	13
   529  00D870  44                 	db	68	;'D'
   530  00D871  65                 	db	101	;'e'
   531  00D872  76                 	db	118	;'v'
   532  00D873  69                 	db	105	;'i'
   533  00D874  63                 	db	99	;'c'
   534  00D875  65                 	db	101	;'e'
   535  00D876  20                 	db	32
   536  00D877  43                 	db	67	;'C'
   537  00D878  6F                 	db	111	;'o'
   538  00D879  6E                 	db	110	;'n'
   539  00D87A  74                 	db	116	;'t'
   540  00D87B  72                 	db	114	;'r'
   541  00D87C  6F                 	db	111	;'o'
   542  00D87D  6C                 	db	108	;'l'
   543  00D87E  20                 	db	32
   544  00D87F  43                 	db	67	;'C'
   545  00D880  6F                 	db	111	;'o'
   546  00D881  6D                 	db	109	;'m'
   547  00D882  6D                 	db	109	;'m'
   548  00D883  61                 	db	97	;'a'
   549  00D884  6E                 	db	110	;'n'
   550  00D885  64                 	db	100	;'d'
   551  00D886  73                 	db	115	;'s'
   552  00D887  3A                 	db	58	;':'
   553  00D888  20                 	db	32
   554  00D889  43                 	db	67	;'C'
   555  00D88A  6F                 	db	111	;'o'
   556  00D88B  6D                 	db	109	;'m'
   557  00D88C  6D                 	db	109	;'m'
   558  00D88D  61                 	db	97	;'a'
   559  00D88E  6E                 	db	110	;'n'
   560  00D88F  64                 	db	100	;'d'
   561  00D890  73                 	db	115	;'s'
   562  00D891  20                 	db	32
   563  00D892  74                 	db	116	;'t'
   564  00D893  6F                 	db	111	;'o'
   565  00D894  20                 	db	32
   566  00D895  76                 	db	118	;'v'
   567  00D896  69                 	db	105	;'i'
   568  00D897  65                 	db	101	;'e'
   569  00D898  77                 	db	119	;'w'
   570  00D899  20                 	db	32
   571  00D89A  61                 	db	97	;'a'
   572  00D89B  6E                 	db	110	;'n'
   573  00D89C  64                 	db	100	;'d'
   574  00D89D  20                 	db	32
   575  00D89E  63                 	db	99	;'c'
   576  00D89F  6F                 	db	111	;'o'
   577  00D8A0  6E                 	db	110	;'n'
   578  00D8A1  74                 	db	116	;'t'
   579  00D8A2  72                 	db	114	;'r'
   580  00D8A3  6F                 	db	111	;'o'
   581  00D8A4  6C                 	db	108	;'l'
   582  00D8A5  20                 	db	32
   583  00D8A6  6C                 	db	108	;'l'
   584  00D8A7  6F                 	db	111	;'o'
   585  00D8A8  77                 	db	119	;'w'
   586  00D8A9  20                 	db	32
   587  00D8AA  6C                 	db	108	;'l'
   588  00D8AB  65                 	db	101	;'e'
   589  00D8AC  76                 	db	118	;'v'
   590  00D8AD  65                 	db	101	;'e'
   591  00D8AE  6C                 	db	108	;'l'
   592  00D8AF  20                 	db	32
   593  00D8B0  73                 	db	115	;'s'
   594  00D8B1  79                 	db	121	;'y'
   595  00D8B2  73                 	db	115	;'s'
   596  00D8B3  74                 	db	116	;'t'
   597  00D8B4  65                 	db	101	;'e'
   598  00D8B5  6D                 	db	109	;'m'
   599  00D8B6  20                 	db	32
   600  00D8B7  66                 	db	102	;'f'
   601  00D8B8  75                 	db	117	;'u'
   602  00D8B9  6E                 	db	110	;'n'
   603  00D8BA  63                 	db	99	;'c'
   604  00D8BB  74                 	db	116	;'t'
   605  00D8BC  69                 	db	105	;'i'
   606  00D8BD  6F                 	db	111	;'o'
   607  00D8BE  6E                 	db	110	;'n'
   608  00D8BF  61                 	db	97	;'a'
   609  00D8C0  6C                 	db	108	;'l'
   610  00D8C1  69                 	db	105	;'i'
   611  00D8C2  74                 	db	116	;'t'
   612  00D8C3  79                 	db	121	;'y'
   613  00D8C4  0A                 	db	10
   614  00D8C5  0D                 	db	13
   615  00D8C6  20                 	db	32
   616  00D8C7  20                 	db	32
   617  00D8C8  20                 	db	32
   618  00D8C9  52                 	db	82	;'R'
   619  00D8CA  65                 	db	101	;'e'
   620  00D8CB  73                 	db	115	;'s'
   621  00D8CC  65                 	db	101	;'e'
   622  00D8CD  74                 	db	116	;'t'
   623  00D8CE  3A                 	db	58	;':'
   624  00D8CF  20                 	db	32
   625  00D8D0  43                 	db	67	;'C'
   626  00D8D1  6C                 	db	108	;'l'
   627  00D8D2  65                 	db	101	;'e'
   628  00D8D3  61                 	db	97	;'a'
   629  00D8D4  72                 	db	114	;'r'
   630  00D8D5  73                 	db	115	;'s'
   631  00D8D6  20                 	db	32
   632  00D8D7  74                 	db	116	;'t'
   633  00D8D8  68                 	db	104	;'h'
   634  00D8D9  65                 	db	101	;'e'
   635  00D8DA  20                 	db	32
   636  00D8DB  74                 	db	116	;'t'
   637  00D8DC  65                 	db	101	;'e'
   638  00D8DD  72                 	db	114	;'r'
   639  00D8DE  6D                 	db	109	;'m'
   640  00D8DF  69                 	db	105	;'i'
   641  00D8E0  6E                 	db	110	;'n'
   642  00D8E1  61                 	db	97	;'a'
   643  00D8E2  6C                 	db	108	;'l'
   644  00D8E3  20                 	db	32
   645  00D8E4  61                 	db	97	;'a'
   646  00D8E5  6E                 	db	110	;'n'
   647  00D8E6  64                 	db	100	;'d'
   648  00D8E7  20                 	db	32
   649  00D8E8  72                 	db	114	;'r'
   650  00D8E9  65                 	db	101	;'e'
   651  00D8EA  73                 	db	115	;'s'
   652  00D8EB  65                 	db	101	;'e'
   653  00D8EC  74                 	db	116	;'t'
   654  00D8ED  73                 	db	115	;'s'
   655  00D8EE  20                 	db	32
   656  00D8EF  74                 	db	116	;'t'
   657  00D8F0  68                 	db	104	;'h'
   658  00D8F1  65                 	db	101	;'e'
   659  00D8F2  20                 	db	32
   660  00D8F3  6D                 	db	109	;'m'
   661  00D8F4  69                 	db	105	;'i'
   662  00D8F5  63                 	db	99	;'c'
   663  00D8F6  72                 	db	114	;'r'
   664  00D8F7  6F                 	db	111	;'o'
   665  00D8F8  0A                 	db	10
   666  00D8F9  0D                 	db	13
   667  00D8FA  20                 	db	32
   668  00D8FB  20                 	db	32
   669  00D8FC  20                 	db	32
   670  00D8FD  43                 	db	67	;'C'
   671  00D8FE  6C                 	db	108	;'l'
   672  00D8FF  65                 	db	101	;'e'
   673  00D900  61                 	db	97	;'a'
   674  00D901  72                 	db	114	;'r'
   675  00D902  3A                 	db	58	;':'
   676  00D903  20                 	db	32
   677  00D904  43                 	db	67	;'C'
   678  00D905  6C                 	db	108	;'l'
   679  00D906  65                 	db	101	;'e'
   680  00D907  61                 	db	97	;'a'
   681  00D908  72                 	db	114	;'r'
   682  00D909  73                 	db	115	;'s'
   683  00D90A  20                 	db	32
   684  00D90B  74                 	db	116	;'t'
   685  00D90C  68                 	db	104	;'h'
   686  00D90D  65                 	db	101	;'e'
   687  00D90E  20                 	db	32
   688  00D90F  74                 	db	116	;'t'
   689  00D910  65                 	db	101	;'e'
   690  00D911  72                 	db	114	;'r'
   691  00D912  6D                 	db	109	;'m'
   692  00D913  69                 	db	105	;'i'
   693  00D914  6E                 	db	110	;'n'
   694  00D915  61                 	db	97	;'a'
   695  00D916  6C                 	db	108	;'l'
   696  00D917  20                 	db	32
   697  00D918  62                 	db	98	;'b'
   698  00D919  75                 	db	117	;'u'
   699  00D91A  74                 	db	116	;'t'
   700  00D91B  20                 	db	32
   701  00D91C  64                 	db	100	;'d'
   702  00D91D  6F                 	db	111	;'o'
   703  00D91E  65                 	db	101	;'e'
   704  00D91F  73                 	db	115	;'s'
   705  00D920  6E                 	db	110	;'n'
   706  00D921  27                 	db	39
   707  00D922  74                 	db	116	;'t'
   708  00D923  20                 	db	32
   709  00D924  72                 	db	114	;'r'
   710  00D925  65                 	db	101	;'e'
   711  00D926  73                 	db	115	;'s'
   712  00D927  65                 	db	101	;'e'
   713  00D928  74                 	db	116	;'t'
   714  00D929  20                 	db	32
   715  00D92A  74                 	db	116	;'t'
   716  00D92B  68                 	db	104	;'h'
   717  00D92C  65                 	db	101	;'e'
   718  00D92D  20                 	db	32
   719  00D92E  6D                 	db	109	;'m'
   720  00D92F  69                 	db	105	;'i'
   721  00D930  63                 	db	99	;'c'
   722  00D931  72                 	db	114	;'r'
   723  00D932  6F                 	db	111	;'o'
   724  00D933  0A                 	db	10
   725  00D934  0D                 	db	13
   726  00D935  20                 	db	32
   727  00D936  20                 	db	32
   728  00D937  20                 	db	32
   729  00D938  43                 	db	67	;'C'
   730  00D939  61                 	db	97	;'a'
   731  00D93A  75                 	db	117	;'u'
   732  00D93B  73                 	db	115	;'s'
   733  00D93C  65                 	db	101	;'e'
   734  00D93D  20                 	db	32
   735  00D93E  6F                 	db	111	;'o'
   736  00D93F  66                 	db	102	;'f'
   737  00D940  20                 	db	32
   738  00D941  52                 	db	82	;'R'
   739  00D942  65                 	db	101	;'e'
   740  00D943  73                 	db	115	;'s'
   741  00D944  65                 	db	101	;'e'
   742  00D945  74                 	db	116	;'t'
   743  00D946  3F                 	db	63	;'?'
   744  00D947  3A                 	db	58	;':'
   745  00D948  20                 	db	32
   746  00D949  52                 	db	82	;'R'
   747  00D94A  65                 	db	101	;'e'
   748  00D94B  74                 	db	116	;'t'
   749  00D94C  75                 	db	117	;'u'
   750  00D94D  72                 	db	114	;'r'
   751  00D94E  6E                 	db	110	;'n'
   752  00D94F  73                 	db	115	;'s'
   753  00D950  20                 	db	32
   754  00D951  74                 	db	116	;'t'
   755  00D952  68                 	db	104	;'h'
   756  00D953  65                 	db	101	;'e'
   757  00D954  20                 	db	32
   758  00D955  63                 	db	99	;'c'
   759  00D956  61                 	db	97	;'a'
   760  00D957  75                 	db	117	;'u'
   761  00D958  73                 	db	115	;'s'
   762  00D959  65                 	db	101	;'e'
   763  00D95A  20                 	db	32
   764  00D95B  6F                 	db	111	;'o'
   765  00D95C  66                 	db	102	;'f'
   766  00D95D  20                 	db	32
   767  00D95E  74                 	db	116	;'t'
   768  00D95F  68                 	db	104	;'h'
   769  00D960  65                 	db	101	;'e'
   770  00D961  20                 	db	32
   771  00D962  6D                 	db	109	;'m'
   772  00D963  6F                 	db	111	;'o'
   773  00D964  73                 	db	115	;'s'
   774  00D965  74                 	db	116	;'t'
   775  00D966  20                 	db	32
   776  00D967  72                 	db	114	;'r'
   777  00D968  65                 	db	101	;'e'
   778  00D969  63                 	db	99	;'c'
   779  00D96A  65                 	db	101	;'e'
   780  00D96B  6E                 	db	110	;'n'
   781  00D96C  74                 	db	116	;'t'
   782  00D96D  20                 	db	32
   783  00D96E  64                 	db	100	;'d'
   784  00D96F  65                 	db	101	;'e'
   785  00D970  76                 	db	118	;'v'
   786  00D971  69                 	db	105	;'i'
   787  00D972  63                 	db	99	;'c'
   788  00D973  65                 	db	101	;'e'
   789  00D974  20                 	db	32
   790  00D975  72                 	db	114	;'r'
   791  00D976  65                 	db	101	;'e'
   792  00D977  73                 	db	115	;'s'
   793  00D978  65                 	db	101	;'e'
   794  00D979  74                 	db	116	;'t'
   795  00D97A  0A                 	db	10
   796  00D97B  0D                 	db	13
   797  00D97C  20                 	db	32
   798  00D97D  20                 	db	32
   799  00D97E  20                 	db	32
   800  00D97F  2A                 	db	42
   801  00D980  49                 	db	73	;'I'
   802  00D981  44                 	db	68	;'D'
   803  00D982  4E                 	db	78	;'N'
   804  00D983  3F                 	db	63	;'?'
   805  00D984  3A                 	db	58	;':'
   806  00D985  20                 	db	32
   807  00D986  52                 	db	82	;'R'
   808  00D987  65                 	db	101	;'e'
   809  00D988  74                 	db	116	;'t'
   810  00D989  75                 	db	117	;'u'
   811  00D98A  72                 	db	114	;'r'
   812  00D98B  6E                 	db	110	;'n'
   813  00D98C  73                 	db	115	;'s'
   814  00D98D  20                 	db	32
   815  00D98E  64                 	db	100	;'d'
   816  00D98F  65                 	db	101	;'e'
   817  00D990  76                 	db	118	;'v'
   818  00D991  69                 	db	105	;'i'
   819  00D992  63                 	db	99	;'c'
   820  00D993  65                 	db	101	;'e'
   821  00D994  20                 	db	32
   822  00D995  69                 	db	105	;'i'
   823  00D996  64                 	db	100	;'d'
   824  00D997  65                 	db	101	;'e'
   825  00D998  6E                 	db	110	;'n'
   826  00D999  74                 	db	116	;'t'
   827  00D99A  69                 	db	105	;'i'
   828  00D99B  66                 	db	102	;'f'
   829  00D99C  69                 	db	105	;'i'
   830  00D99D  63                 	db	99	;'c'
   831  00D99E  61                 	db	97	;'a'
   832  00D99F  74                 	db	116	;'t'
   833  00D9A0  69                 	db	105	;'i'
   834  00D9A1  6F                 	db	111	;'o'
   835  00D9A2  6E                 	db	110	;'n'
   836  00D9A3  20                 	db	32
   837  00D9A4  73                 	db	115	;'s'
   838  00D9A5  74                 	db	116	;'t'
   839  00D9A6  72                 	db	114	;'r'
   840  00D9A7  69                 	db	105	;'i'
   841  00D9A8  6E                 	db	110	;'n'
   842  00D9A9  67                 	db	103	;'g'
   843  00D9AA  0A                 	db	10
   844  00D9AB  0D                 	db	13
   845  00D9AC  20                 	db	32
   846  00D9AD  20                 	db	32
   847  00D9AE  20                 	db	32
   848  00D9AF  44                 	db	68	;'D'
   849  00D9B0  65                 	db	101	;'e'
   850  00D9B1  76                 	db	118	;'v'
   851  00D9B2  69                 	db	105	;'i'
   852  00D9B3  63                 	db	99	;'c'
   853  00D9B4  65                 	db	101	;'e'
   854  00D9B5  20                 	db	32
   855  00D9B6  4F                 	db	79	;'O'
   856  00D9B7  6E                 	db	110	;'n'
   857  00D9B8  20                 	db	32
   858  00D9B9  54                 	db	84	;'T'
   859  00D9BA  69                 	db	105	;'i'
   860  00D9BB  6D                 	db	109	;'m'
   861  00D9BC  65                 	db	101	;'e'
   862  00D9BD  3F                 	db	63	;'?'
   863  00D9BE  3A                 	db	58	;':'
   864  00D9BF  20                 	db	32
   865  00D9C0  52                 	db	82	;'R'
   866  00D9C1  65                 	db	101	;'e'
   867  00D9C2  74                 	db	116	;'t'
   868  00D9C3  75                 	db	117	;'u'
   869  00D9C4  72                 	db	114	;'r'
   870  00D9C5  6E                 	db	110	;'n'
   871  00D9C6  73                 	db	115	;'s'
   872  00D9C7  20                 	db	32
   873  00D9C8  64                 	db	100	;'d'
   874  00D9C9  65                 	db	101	;'e'
   875  00D9CA  76                 	db	118	;'v'
   876  00D9CB  69                 	db	105	;'i'
   877  00D9CC  63                 	db	99	;'c'
   878  00D9CD  65                 	db	101	;'e'
   879  00D9CE  20                 	db	32
   880  00D9CF  6F                 	db	111	;'o'
   881  00D9D0  6E                 	db	110	;'n'
   882  00D9D1  20                 	db	32
   883  00D9D2  74                 	db	116	;'t'
   884  00D9D3  69                 	db	105	;'i'
   885  00D9D4  6D                 	db	109	;'m'
   886  00D9D5  65                 	db	101	;'e'
   887  00D9D6  20                 	db	32
   888  00D9D7  73                 	db	115	;'s'
   889  00D9D8  69                 	db	105	;'i'
   890  00D9D9  6E                 	db	110	;'n'
   891  00D9DA  63                 	db	99	;'c'
   892  00D9DB  65                 	db	101	;'e'
   893  00D9DC  20                 	db	32
   894  00D9DD  6C                 	db	108	;'l'
   895  00D9DE  61                 	db	97	;'a'
   896  00D9DF  73                 	db	115	;'s'
   897  00D9E0  74                 	db	116	;'t'
   898  00D9E1  20                 	db	32
   899  00D9E2  64                 	db	100	;'d'
   900  00D9E3  65                 	db	101	;'e'
   901  00D9E4  76                 	db	118	;'v'
   902  00D9E5  69                 	db	105	;'i'
   903  00D9E6  63                 	db	99	;'c'
   904  00D9E7  65                 	db	101	;'e'
   905  00D9E8  20                 	db	32
   906  00D9E9  72                 	db	114	;'r'
   907  00D9EA  65                 	db	101	;'e'
   908  00D9EB  73                 	db	115	;'s'
   909  00D9EC  65                 	db	101	;'e'
   910  00D9ED  74                 	db	116	;'t'
   911  00D9EE  0A                 	db	10
   912  00D9EF  0D                 	db	13
   913  00D9F0  20                 	db	32
   914  00D9F1  20                 	db	32
   915  00D9F2  20                 	db	32
   916  00D9F3  44                 	db	68	;'D'
   917  00D9F4  65                 	db	101	;'e'
   918  00D9F5  76                 	db	118	;'v'
   919  00D9F6  69                 	db	105	;'i'
   920  00D9F7  63                 	db	99	;'c'
   921  00D9F8  65                 	db	101	;'e'
   922  00D9F9  20                 	db	32
   923  00D9FA  49                 	db	73	;'I'
   924  00D9FB  44                 	db	68	;'D'
   925  00D9FC  3F                 	db	63	;'?'
   926  00D9FD  3A                 	db	58	;':'
   927  00D9FE  20                 	db	32
   928  00D9FF  52                 	db	82	;'R'
   929  00DA00  65                 	db	101	;'e'
   930  00DA01  74                 	db	116	;'t'
   931  00DA02  75                 	db	117	;'u'
   932  00DA03  72                 	db	114	;'r'
   933  00DA04  6E                 	db	110	;'n'
   934  00DA05  73                 	db	115	;'s'
   935  00DA06  20                 	db	32
   936  00DA07  64                 	db	100	;'d'
   937  00DA08  65                 	db	101	;'e'
   938  00DA09  76                 	db	118	;'v'
   939  00DA0A  69                 	db	105	;'i'
   940  00DA0B  63                 	db	99	;'c'
   941  00DA0C  65                 	db	101	;'e'
   942  00DA0D  20                 	db	32
   943  00DA0E  49                 	db	73	;'I'
   944  00DA0F  44                 	db	68	;'D'
   945  00DA10  20                 	db	32
   946  00DA11  61                 	db	97	;'a'
   947  00DA12  73                 	db	115	;'s'
   948  00DA13  20                 	db	32
   949  00DA14  70                 	db	112	;'p'
   950  00DA15  72                 	db	114	;'r'
   951  00DA16  65                 	db	101	;'e'
   952  00DA17  2D                 	db	45
   953  00DA18  70                 	db	112	;'p'
   954  00DA19  72                 	db	114	;'r'
   955  00DA1A  6F                 	db	111	;'o'
   956  00DA1B  67                 	db	103	;'g'
   957  00DA1C  72                 	db	114	;'r'
   958  00DA1D  61                 	db	97	;'a'
   959  00DA1E  6D                 	db	109	;'m'
   960  00DA1F  6D                 	db	109	;'m'
   961  00DA20  65                 	db	101	;'e'
   962  00DA21  64                 	db	100	;'d'
   963  00DA22  20                 	db	32
   964  00DA23  69                 	db	105	;'i'
   965  00DA24  6E                 	db	110	;'n'
   966  00DA25  20                 	db	32
   967  00DA26  66                 	db	102	;'f'
   968  00DA27  6C                 	db	108	;'l'
   969  00DA28  61                 	db	97	;'a'
   970  00DA29  73                 	db	115	;'s'
   971  00DA2A  68                 	db	104	;'h'
   972  00DA2B  20                 	db	32
   973  00DA2C  6D                 	db	109	;'m'
   974  00DA2D  65                 	db	101	;'e'
   975  00DA2E  6D                 	db	109	;'m'
   976  00DA2F  6F                 	db	111	;'o'
   977  00DA30  72                 	db	114	;'r'
   978  00DA31  79                 	db	121	;'y'
   979  00DA32  0A                 	db	10
   980  00DA33  0D                 	db	13
   981  00DA34  20                 	db	32
   982  00DA35  20                 	db	32
   983  00DA36  20                 	db	32
   984  00DA37  52                 	db	82	;'R'
   985  00DA38  65                 	db	101	;'e'
   986  00DA39  76                 	db	118	;'v'
   987  00DA3A  69                 	db	105	;'i'
   988  00DA3B  73                 	db	115	;'s'
   989  00DA3C  69                 	db	105	;'i'
   990  00DA3D  6F                 	db	111	;'o'
   991  00DA3E  6E                 	db	110	;'n'
   992  00DA3F  20                 	db	32
   993  00DA40  49                 	db	73	;'I'
   994  00DA41  44                 	db	68	;'D'
   995  00DA42  3F                 	db	63	;'?'
   996  00DA43  3A                 	db	58	;':'
   997  00DA44  20                 	db	32
   998  00DA45  52                 	db	82	;'R'
   999  00DA46  65                 	db	101	;'e'
  1000  00DA47  74                 	db	116	;'t'
  1001  00DA48  75                 	db	117	;'u'
  1002  00DA49  72                 	db	114	;'r'
  1003  00DA4A  6E                 	db	110	;'n'
  1004  00DA4B  73                 	db	115	;'s'
  1005  00DA4C  20                 	db	32
  1006  00DA4D  64                 	db	100	;'d'
  1007  00DA4E  65                 	db	101	;'e'
  1008  00DA4F  76                 	db	118	;'v'
  1009  00DA50  69                 	db	105	;'i'
  1010  00DA51  63                 	db	99	;'c'
  1011  00DA52  65                 	db	101	;'e'
  1012  00DA53  20                 	db	32
  1013  00DA54  73                 	db	115	;'s'
  1014  00DA55  69                 	db	105	;'i'
  1015  00DA56  6C                 	db	108	;'l'
  1016  00DA57  69                 	db	105	;'i'
  1017  00DA58  63                 	db	99	;'c'
  1018  00DA59  6F                 	db	111	;'o'
  1019  00DA5A  6E                 	db	110	;'n'
  1020  00DA5B  20                 	db	32
  1021  00DA5C  72                 	db	114	;'r'
  1022  00DA5D  65                 	db	101	;'e'
  1023  00DA5E  76                 	db	118	;'v'
  1024  00DA5F  69                 	db	105	;'i'
  1025  00DA60  73                 	db	115	;'s'
  1026  00DA61  69                 	db	105	;'i'
  1027  00DA62  6F                 	db	111	;'o'
  1028  00DA63  6E                 	db	110	;'n'
  1029  00DA64  20                 	db	32
  1030  00DA65  49                 	db	73	;'I'
  1031  00DA66  44                 	db	68	;'D'
  1032  00DA67  20                 	db	32
  1033  00DA68  61                 	db	97	;'a'
  1034  00DA69  73                 	db	115	;'s'
  1035  00DA6A  20                 	db	32
  1036  00DA6B  70                 	db	112	;'p'
  1037  00DA6C  72                 	db	114	;'r'
  1038  00DA6D  65                 	db	101	;'e'
  1039  00DA6E  2D                 	db	45
  1040  00DA6F  70                 	db	112	;'p'
  1041  00DA70  72                 	db	114	;'r'
  1042  00DA71  6F                 	db	111	;'o'
  1043  00DA72  67                 	db	103	;'g'
  1044  00DA73  72                 	db	114	;'r'
  1045  00DA74  61                 	db	97	;'a'
  1046  00DA75  6D                 	db	109	;'m'
  1047  00DA76  6D                 	db	109	;'m'
  1048  00DA77  65                 	db	101	;'e'
  1049  00DA78  64                 	db	100	;'d'
  1050  00DA79  20                 	db	32
  1051  00DA7A  69                 	db	105	;'i'
  1052  00DA7B  6E                 	db	110	;'n'
  1053  00DA7C  20                 	db	32
  1054  00DA7D  66                 	db	102	;'f'
  1055  00DA7E  6C                 	db	108	;'l'
  1056  00DA7F  61                 	db	97	;'a'
  1057  00DA80  73                 	db	115	;'s'
  1058  00DA81  68                 	db	104	;'h'
  1059  00DA82  20                 	db	32
  1060  00DA83  6D                 	db	109	;'m'
  1061  00DA84  65                 	db	101	;'e'
  1062  00DA85  6D                 	db	109	;'m'
  1063  00DA86  6F                 	db	111	;'o'
  1064  00DA87  72                 	db	114	;'r'
  1065  00DA88  79                 	db	121	;'y'
  1066  00DA89  0A                 	db	10
  1067  00DA8A  0D                 	db	13
  1068  00DA8B  20                 	db	32
  1069  00DA8C  20                 	db	32
  1070  00DA8D  20                 	db	32
  1071  00DA8E  55                 	db	85	;'U'
  1072  00DA8F  73                 	db	115	;'s'
  1073  00DA90  65                 	db	101	;'e'
  1074  00DA91  72                 	db	114	;'r'
  1075  00DA92  20                 	db	32
  1076  00DA93  49                 	db	73	;'I'
  1077  00DA94  44                 	db	68	;'D'
  1078  00DA95  73                 	db	115	;'s'
  1079  00DA96  3F                 	db	63	;'?'
  1080  00DA97  3A                 	db	58	;':'
  1081  00DA98  20                 	db	32
  1082  00DA99  52                 	db	82	;'R'
  1083  00DA9A  65                 	db	101	;'e'
  1084  00DA9B  74                 	db	116	;'t'
  1085  00DA9C  75                 	db	117	;'u'
  1086  00DA9D  72                 	db	114	;'r'
  1087  00DA9E  6E                 	db	110	;'n'
  1088  00DA9F  73                 	db	115	;'s'
  1089  00DAA0  20                 	db	32
  1090  00DAA1  61                 	db	97	;'a'
  1091  00DAA2  20                 	db	32
  1092  00DAA3  6C                 	db	108	;'l'
  1093  00DAA4  69                 	db	105	;'i'
  1094  00DAA5  73                 	db	115	;'s'
  1095  00DAA6  74                 	db	116	;'t'
  1096  00DAA7  20                 	db	32
  1097  00DAA8  6F                 	db	111	;'o'
  1098  00DAA9  66                 	db	102	;'f'
  1099  00DAAA  20                 	db	32
  1100  00DAAB  75                 	db	117	;'u'
  1101  00DAAC  73                 	db	115	;'s'
  1102  00DAAD  65                 	db	101	;'e'
  1103  00DAAE  72                 	db	114	;'r'
  1104  00DAAF  20                 	db	32
  1105  00DAB0  49                 	db	73	;'I'
  1106  00DAB1  44                 	db	68	;'D'
  1107  00DAB2  73                 	db	115	;'s'
  1108  00DAB3  20                 	db	32
  1109  00DAB4  28                 	db	40
  1110  00DAB5  64                 	db	100	;'d'
  1111  00DAB6  69                 	db	105	;'i'
  1112  00DAB7  73                 	db	115	;'s'
  1113  00DAB8  70                 	db	112	;'p'
  1114  00DAB9  6C                 	db	108	;'l'
  1115  00DABA  61                 	db	97	;'a'
  1116  00DABB  79                 	db	121	;'y'
  1117  00DABC  65                 	db	101	;'e'
  1118  00DABD  64                 	db	100	;'d'
  1119  00DABE  20                 	db	32
  1120  00DABF  69                 	db	105	;'i'
  1121  00DAC0  6E                 	db	110	;'n'
  1122  00DAC1  20                 	db	32
  1123  00DAC2  68                 	db	104	;'h'
  1124  00DAC3  65                 	db	101	;'e'
  1125  00DAC4  78                 	db	120	;'x'
  1126  00DAC5  29                 	db	41
  1127  00DAC6  20                 	db	32
  1128  00DAC7  61                 	db	97	;'a'
  1129  00DAC8  73                 	db	115	;'s'
  1130  00DAC9  20                 	db	32
  1131  00DACA  73                 	db	115	;'s'
  1132  00DACB  74                 	db	116	;'t'
  1133  00DACC  6F                 	db	111	;'o'
  1134  00DACD  72                 	db	114	;'r'
  1135  00DACE  65                 	db	101	;'e'
  1136  00DACF  64                 	db	100	;'d'
  1137  00DAD0  20                 	db	32
  1138  00DAD1  69                 	db	105	;'i'
  1139  00DAD2  6E                 	db	110	;'n'
  1140  00DAD3  20                 	db	32
  1141  00DAD4  66                 	db	102	;'f'
  1142  00DAD5  6C                 	db	108	;'l'
  1143  00DAD6  61                 	db	97	;'a'
  1144  00DAD7  73                 	db	115	;'s'
  1145  00DAD8  68                 	db	104	;'h'
  1146  00DAD9  20                 	db	32
  1147  00DADA  6D                 	db	109	;'m'
  1148  00DADB  65                 	db	101	;'e'
  1149  00DADC  6D                 	db	109	;'m'
  1150  00DADD  6F                 	db	111	;'o'
  1151  00DADE  72                 	db	114	;'r'
  1152  00DADF  79                 	db	121	;'y'
  1153  00DAE0  0A                 	db	10
  1154  00DAE1  0D                 	db	13
  1155  00DAE2  20                 	db	32
  1156  00DAE3  20                 	db	32
  1157  00DAE4  20                 	db	32
  1158  00DAE5  41                 	db	65	;'A'
  1159  00DAE6  44                 	db	68	;'D'
  1160  00DAE7  43                 	db	67	;'C'
  1161  00DAE8  20                 	db	32
  1162  00DAE9  45                 	db	69	;'E'
  1163  00DAEA  72                 	db	114	;'r'
  1164  00DAEB  72                 	db	114	;'r'
  1165  00DAEC  6F                 	db	111	;'o'
  1166  00DAED  72                 	db	114	;'r'
  1167  00DAEE  3F                 	db	63	;'?'
  1168  00DAEF  3A                 	db	58	;':'
  1169  00DAF0  20                 	db	32
  1170  00DAF1  52                 	db	82	;'R'
  1171  00DAF2  65                 	db	101	;'e'
  1172  00DAF3  74                 	db	116	;'t'
  1173  00DAF4  75                 	db	117	;'u'
  1174  00DAF5  72                 	db	114	;'r'
  1175  00DAF6  6E                 	db	110	;'n'
  1176  00DAF7  73                 	db	115	;'s'
  1177  00DAF8  20                 	db	32
  1178  00DAF9  74                 	db	116	;'t'
  1179  00DAFA  68                 	db	104	;'h'
  1180  00DAFB  65                 	db	101	;'e'
  1181  00DAFC  20                 	db	32
  1182  00DAFD  63                 	db	99	;'c'
  1183  00DAFE  61                 	db	97	;'a'
  1184  00DAFF  75                 	db	117	;'u'
  1185  00DB00  73                 	db	115	;'s'
  1186  00DB01  65                 	db	101	;'e'
  1187  00DB02  20                 	db	32
  1188  00DB03  6F                 	db	111	;'o'
  1189  00DB04  66                 	db	102	;'f'
  1190  00DB05  20                 	db	32
  1191  00DB06  61                 	db	97	;'a'
  1192  00DB07  6E                 	db	110	;'n'
  1193  00DB08  20                 	db	32
  1194  00DB09  41                 	db	65	;'A'
  1195  00DB0A  44                 	db	68	;'D'
  1196  00DB0B  43                 	db	67	;'C'
  1197  00DB0C  20                 	db	32
  1198  00DB0D  65                 	db	101	;'e'
  1199  00DB0E  72                 	db	114	;'r'
  1200  00DB0F  72                 	db	114	;'r'
  1201  00DB10  6F                 	db	111	;'o'
  1202  00DB11  72                 	db	114	;'r'
  1203  00DB12  20                 	db	32
  1204  00DB13  69                 	db	105	;'i'
  1205  00DB14  66                 	db	102	;'f'
  1206  00DB15  20                 	db	32
  1207  00DB16  61                 	db	97	;'a'
  1208  00DB17  6E                 	db	110	;'n'
  1209  00DB18  20                 	db	32
  1210  00DB19  65                 	db	101	;'e'
  1211  00DB1A  72                 	db	114	;'r'
  1212  00DB1B  72                 	db	114	;'r'
  1213  00DB1C  6F                 	db	111	;'o'
  1214  00DB1D  72                 	db	114	;'r'
  1215  00DB1E  20                 	db	32
  1216  00DB1F  6F                 	db	111	;'o'
  1217  00DB20  63                 	db	99	;'c'
  1218  00DB21  63                 	db	99	;'c'
  1219  00DB22  75                 	db	117	;'u'
  1220  00DB23  72                 	db	114	;'r'
  1221  00DB24  72                 	db	114	;'r'
  1222  00DB25  65                 	db	101	;'e'
  1223  00DB26  64                 	db	100	;'d'
  1224  00DB27  0A                 	db	10
  1225  00DB28  0D                 	db	13
  1226  00DB29  20                 	db	32
  1227  00DB2A  20                 	db	32
  1228  00DB2B  20                 	db	32
  1229  00DB2C  43                 	db	67	;'C'
  1230  00DB2D  6C                 	db	108	;'l'
  1231  00DB2E  65                 	db	101	;'e'
  1232  00DB2F  61                 	db	97	;'a'
  1233  00DB30  72                 	db	114	;'r'
  1234  00DB31  20                 	db	32
  1235  00DB32  41                 	db	65	;'A'
  1236  00DB33  44                 	db	68	;'D'
  1237  00DB34  43                 	db	67	;'C'
  1238  00DB35  20                 	db	32
  1239  00DB36  45                 	db	69	;'E'
  1240  00DB37  72                 	db	114	;'r'
  1241  00DB38  72                 	db	114	;'r'
  1242  00DB39  6F                 	db	111	;'o'
  1243  00DB3A  72                 	db	114	;'r'
  1244  00DB3B  3A                 	db	58	;':'
  1245  00DB3C  20                 	db	32
  1246  00DB3D  43                 	db	67	;'C'
  1247  00DB3E  6C                 	db	108	;'l'
  1248  00DB3F  65                 	db	101	;'e'
  1249  00DB40  61                 	db	97	;'a'
  1250  00DB41  72                 	db	114	;'r'
  1251  00DB42  73                 	db	115	;'s'
  1252  00DB43  20                 	db	32
  1253  00DB44  74                 	db	116	;'t'
  1254  00DB45  68                 	db	104	;'h'
  1255  00DB46  65                 	db	101	;'e'
  1256  00DB47  20                 	db	32
  1257  00DB48  41                 	db	65	;'A'
  1258  00DB49  44                 	db	68	;'D'
  1259  00DB4A  43                 	db	67	;'C'
  1260  00DB4B  20                 	db	32
  1261  00DB4C  65                 	db	101	;'e'
  1262  00DB4D  72                 	db	114	;'r'
  1263  00DB4E  72                 	db	114	;'r'
  1264  00DB4F  6F                 	db	111	;'o'
  1265  00DB50  72                 	db	114	;'r'
  1266  00DB51  20                 	db	32
  1267  00DB52  61                 	db	97	;'a'
  1268  00DB53  6E                 	db	110	;'n'
  1269  00DB54  64                 	db	100	;'d'
  1270  00DB55  20                 	db	32
  1271  00DB56  72                 	db	114	;'r'
  1272  00DB57  65                 	db	101	;'e'
  1273  00DB58  73                 	db	115	;'s'
  1274  00DB59  75                 	db	117	;'u'
  1275  00DB5A  6D                 	db	109	;'m'
  1276  00DB5B  65                 	db	101	;'e'
  1277  00DB5C  73                 	db	115	;'s'
  1278  00DB5D  20                 	db	32
  1279  00DB5E  41                 	db	65	;'A'
  1280  00DB5F  44                 	db	68	;'D'
  1281  00DB60  43                 	db	67	;'C'
  1282  00DB61  20                 	db	32
  1283  00DB62  63                 	db	99	;'c'
  1284  00DB63  6F                 	db	111	;'o'
  1285  00DB64  6E                 	db	110	;'n'
  1286  00DB65  76                 	db	118	;'v'
  1287  00DB66  65                 	db	101	;'e'
  1288  00DB67  72                 	db	114	;'r'
  1289  00DB68  73                 	db	115	;'s'
  1290  00DB69  69                 	db	105	;'i'
  1291  00DB6A  6F                 	db	111	;'o'
  1292  00DB6B  6E                 	db	110	;'n'
  1293  00DB6C  73                 	db	115	;'s'
  1294  00DB6D  0A                 	db	10
  1295  00DB6E  0D                 	db	13
  1296  00DB6F  20                 	db	32
  1297  00DB70  20                 	db	32
  1298  00DB71  20                 	db	32
  1299  00DB72  56                 	db	86	;'V'
  1300  00DB73  43                 	db	67	;'C'
  1301  00DB74  43                 	db	67	;'C'
  1302  00DB75  20                 	db	32
  1303  00DB76  4F                 	db	79	;'O'
  1304  00DB77  76                 	db	118	;'v'
  1305  00DB78  65                 	db	101	;'e'
  1306  00DB79  72                 	db	114	;'r'
  1307  00DB7A  76                 	db	118	;'v'
  1308  00DB7B  6F                 	db	111	;'o'
  1309  00DB7C  6C                 	db	108	;'l'
  1310  00DB7D  74                 	db	116	;'t'
  1311  00DB7E  61                 	db	97	;'a'
  1312  00DB7F  67                 	db	103	;'g'
  1313  00DB80  65                 	db	101	;'e'
  1314  00DB81  3F                 	db	63	;'?'
  1315  00DB82  3A                 	db	58	;':'
  1316  00DB83  20                 	db	32
  1317  00DB84  53                 	db	83	;'S'
  1318  00DB85  74                 	db	116	;'t'
  1319  00DB86  61                 	db	97	;'a'
  1320  00DB87  74                 	db	116	;'t'
  1321  00DB88  65                 	db	101	;'e'
  1322  00DB89  73                 	db	115	;'s'
  1323  00DB8A  20                 	db	32
  1324  00DB8B  69                 	db	105	;'i'
  1325  00DB8C  66                 	db	102	;'f'
  1326  00DB8D  20                 	db	32
  1327  00DB8E  61                 	db	97	;'a'
  1328  00DB8F  20                 	db	32
  1329  00DB90  56                 	db	86	;'V'
  1330  00DB91  43                 	db	67	;'C'
  1331  00DB92  43                 	db	67	;'C'
  1332  00DB93  20                 	db	32
  1333  00DB94  6F                 	db	111	;'o'
  1334  00DB95  76                 	db	118	;'v'
  1335  00DB96  65                 	db	101	;'e'
  1336  00DB97  72                 	db	114	;'r'
  1337  00DB98  76                 	db	118	;'v'
  1338  00DB99  6F                 	db	111	;'o'
  1339  00DB9A  6C                 	db	108	;'l'
  1340  00DB9B  74                 	db	116	;'t'
  1341  00DB9C  61                 	db	97	;'a'
  1342  00DB9D  67                 	db	103	;'g'
  1343  00DB9E  65                 	db	101	;'e'
  1344  00DB9F  20                 	db	32
  1345  00DBA0  63                 	db	99	;'c'
  1346  00DBA1  6F                 	db	111	;'o'
  1347  00DBA2  6E                 	db	110	;'n'
  1348  00DBA3  64                 	db	100	;'d'
  1349  00DBA4  69                 	db	105	;'i'
  1350  00DBA5  74                 	db	116	;'t'
  1351  00DBA6  69                 	db	105	;'i'
  1352  00DBA7  6F                 	db	111	;'o'
  1353  00DBA8  6E                 	db	110	;'n'
  1354  00DBA9  20                 	db	32
  1355  00DBAA  68                 	db	104	;'h'
  1356  00DBAB  61                 	db	97	;'a'
  1357  00DBAC  73                 	db	115	;'s'
  1358  00DBAD  20                 	db	32
  1359  00DBAE  6F                 	db	111	;'o'
  1360  00DBAF  63                 	db	99	;'c'
  1361  00DBB0  63                 	db	99	;'c'
  1362  00DBB1  75                 	db	117	;'u'
  1363  00DBB2  72                 	db	114	;'r'
  1364  00DBB3  72                 	db	114	;'r'
  1365  00DBB4  65                 	db	101	;'e'
  1366  00DBB5  64                 	db	100	;'d'
  1367  00DBB6  20                 	db	32
  1368  00DBB7  6F                 	db	111	;'o'
  1369  00DBB8  72                 	db	114	;'r'
  1370  00DBB9  20                 	db	32
  1371  00DBBA  6E                 	db	110	;'n'
  1372  00DBBB  6F                 	db	111	;'o'
  1373  00DBBC  74                 	db	116	;'t'
  1374  00DBBD  0A                 	db	10
  1375  00DBBE  0D                 	db	13
  1376  00DBBF  20                 	db	32
  1377  00DBC0  20                 	db	32
  1378  00DBC1  20                 	db	32
  1379  00DBC2  43                 	db	67	;'C'
  1380  00DBC3  6C                 	db	108	;'l'
  1381  00DBC4  65                 	db	101	;'e'
  1382  00DBC5  61                 	db	97	;'a'
  1383  00DBC6  72                 	db	114	;'r'
  1384  00DBC7  20                 	db	32
  1385  00DBC8  4D                 	db	77	;'M'
  1386  00DBC9  61                 	db	97	;'a'
  1387  00DBCA  78                 	db	120	;'x'
  1388  00DBCB  20                 	db	32
  1389  00DBCC  56                 	db	86	;'V'
  1390  00DBCD  61                 	db	97	;'a'
  1391  00DBCE  6C                 	db	108	;'l'
  1392  00DBCF  75                 	db	117	;'u'
  1393  00DBD0  65                 	db	101	;'e'
  1394  00DBD1  73                 	db	115	;'s'
  1395  00DBD2  3A                 	db	58	;':'
  1396  00DBD3  20                 	db	32
  1397  00DBD4  45                 	db	69	;'E'
  1398  00DBD5  72                 	db	114	;'r'
  1399  00DBD6  61                 	db	97	;'a'
  1400  00DBD7  73                 	db	115	;'s'
  1401  00DBD8  65                 	db	101	;'e'
  1402  00DBD9  73                 	db	115	;'s'
  1403  00DBDA  20                 	db	32
  1404  00DBDB  6D                 	db	109	;'m'
  1405  00DBDC  61                 	db	97	;'a'
  1406  00DBDD  78                 	db	120	;'x'
  1407  00DBDE  69                 	db	105	;'i'
  1408  00DBDF  6D                 	db	109	;'m'
  1409  00DBE0  75                 	db	117	;'u'
  1410  00DBE1  6D                 	db	109	;'m'
  1411  00DBE2  20                 	db	32
  1412  00DBE3  72                 	db	114	;'r'
  1413  00DBE4  65                 	db	101	;'e'
  1414  00DBE5  63                 	db	99	;'c'
  1415  00DBE6  6F                 	db	111	;'o'
  1416  00DBE7  72                 	db	114	;'r'
  1417  00DBE8  64                 	db	100	;'d'
  1418  00DBE9  65                 	db	101	;'e'
  1419  00DBEA  64                 	db	100	;'d'
  1420  00DBEB  20                 	db	32
  1421  00DBEC  76                 	db	118	;'v'
  1422  00DBED  61                 	db	97	;'a'
  1423  00DBEE  6C                 	db	108	;'l'
  1424  00DBEF  75                 	db	117	;'u'
  1425  00DBF0  65                 	db	101	;'e'
  1426  00DBF1  73                 	db	115	;'s'
  1427  00DBF2  20                 	db	32
  1428  00DBF3  66                 	db	102	;'f'
  1429  00DBF4  72                 	db	114	;'r'
  1430  00DBF5  6F                 	db	111	;'o'
  1431  00DBF6  6D                 	db	109	;'m'
  1432  00DBF7  20                 	db	32
  1433  00DBF8  45                 	db	69	;'E'
  1434  00DBF9  45                 	db	69	;'E'
  1435  00DBFA  50                 	db	80	;'P'
  1436  00DBFB  52                 	db	82	;'R'
  1437  00DBFC  4F                 	db	79	;'O'
  1438  00DBFD  4D                 	db	77	;'M'
  1439  00DBFE  0A                 	db	10
  1440  00DBFF  0D                 	db	13
  1441  00DC00  20                 	db	32
  1442  00DC01  20                 	db	32
  1443  00DC02  20                 	db	32
  1444  00DC03  48                 	db	72	;'H'
  1445  00DC04  65                 	db	101	;'e'
  1446  00DC05  6C                 	db	108	;'l'
  1447  00DC06  70                 	db	112	;'p'
  1448  00DC07  3A                 	db	58	;':'
  1449  00DC08  20                 	db	32
  1450  00DC09  54                 	db	84	;'T'
  1451  00DC0A  68                 	db	104	;'h'
  1452  00DC0B  69                 	db	105	;'i'
  1453  00DC0C  73                 	db	115	;'s'
  1454  00DC0D  20                 	db	32
  1455  00DC0E  6D                 	db	109	;'m'
  1456  00DC0F  65                 	db	101	;'e'
  1457  00DC10  73                 	db	115	;'s'
  1458  00DC11  73                 	db	115	;'s'
  1459  00DC12  61                 	db	97	;'a'
  1460  00DC13  67                 	db	103	;'g'
  1461  00DC14  65                 	db	101	;'e'
  1462  00DC15  2C                 	db	44
  1463  00DC16  20                 	db	32
  1464  00DC17  6C                 	db	108	;'l'
  1465  00DC18  69                 	db	105	;'i'
  1466  00DC19  73                 	db	115	;'s'
  1467  00DC1A  74                 	db	116	;'t'
  1468  00DC1B  73                 	db	115	;'s'
  1469  00DC1C  20                 	db	32
  1470  00DC1D  73                 	db	115	;'s'
  1471  00DC1E  75                 	db	117	;'u'
  1472  00DC1F  70                 	db	112	;'p'
  1473  00DC20  70                 	db	112	;'p'
  1474  00DC21  6F                 	db	111	;'o'
  1475  00DC22  72                 	db	114	;'r'
  1476  00DC23  74                 	db	116	;'t'
  1477  00DC24  65                 	db	101	;'e'
  1478  00DC25  64                 	db	100	;'d'
  1479  00DC26  20                 	db	32
  1480  00DC27  63                 	db	99	;'c'
  1481  00DC28  6F                 	db	111	;'o'
  1482  00DC29  6D                 	db	109	;'m'
  1483  00DC2A  6D                 	db	109	;'m'
  1484  00DC2B  61                 	db	97	;'a'
  1485  00DC2C  6E                 	db	110	;'n'
  1486  00DC2D  64                 	db	100	;'d'
  1487  00DC2E  73                 	db	115	;'s'
  1488  00DC2F  0A                 	db	10
  1489  00DC30  0D                 	db	13
  1490  00DC31  0A                 	db	10
  1491  00DC32  0D                 	db	13
  1492  00DC33  44                 	db	68	;'D'
  1493  00DC34  65                 	db	101	;'e'
  1494  00DC35  76                 	db	118	;'v'
  1495  00DC36  69                 	db	105	;'i'
  1496  00DC37  63                 	db	99	;'c'
  1497  00DC38  65                 	db	101	;'e'
  1498  00DC39  20                 	db	32
  1499  00DC3A  4D                 	db	77	;'M'
  1500  00DC3B  65                 	db	101	;'e'
  1501  00DC3C  61                 	db	97	;'a'
  1502  00DC3D  73                 	db	115	;'s'
  1503  00DC3E  75                 	db	117	;'u'
  1504  00DC3F  72                 	db	114	;'r'
  1505  00DC40  65                 	db	101	;'e'
  1506  00DC41  6D                 	db	109	;'m'
  1507  00DC42  65                 	db	101	;'e'
  1508  00DC43  6E                 	db	110	;'n'
  1509  00DC44  74                 	db	116	;'t'
  1510  00DC45  20                 	db	32
  1511  00DC46  43                 	db	67	;'C'
  1512  00DC47  6F                 	db	111	;'o'
  1513  00DC48  6D                 	db	109	;'m'
  1514  00DC49  6D                 	db	109	;'m'
  1515  00DC4A  61                 	db	97	;'a'
  1516  00DC4B  6E                 	db	110	;'n'
  1517  00DC4C  64                 	db	100	;'d'
  1518  00DC4D  73                 	db	115	;'s'
  1519  00DC4E  3A                 	db	58	;':'
  1520  00DC4F  20                 	db	32
  1521  00DC50  56                 	db	86	;'V'
  1522  00DC51  69                 	db	105	;'i'
  1523  00DC52  65                 	db	101	;'e'
  1524  00DC53  77                 	db	119	;'w'
  1525  00DC54  20                 	db	32
  1526  00DC55  6C                 	db	108	;'l'
  1527  00DC56  6F                 	db	111	;'o'
  1528  00DC57  77                 	db	119	;'w'
  1529  00DC58  20                 	db	32
  1530  00DC59  6C                 	db	108	;'l'
  1531  00DC5A  65                 	db	101	;'e'
  1532  00DC5B  76                 	db	118	;'v'
  1533  00DC5C  65                 	db	101	;'e'
  1534  00DC5D  6C                 	db	108	;'l'
  1535  00DC5E  20                 	db	32
  1536  00DC5F  73                 	db	115	;'s'
  1537  00DC60  79                 	db	121	;'y'
  1538  00DC61  73                 	db	115	;'s'
  1539  00DC62  74                 	db	116	;'t'
  1540  00DC63  65                 	db	101	;'e'
  1541  00DC64  6D                 	db	109	;'m'
  1542  00DC65  20                 	db	32
  1543  00DC66  6D                 	db	109	;'m'
  1544  00DC67  65                 	db	101	;'e'
  1545  00DC68  61                 	db	97	;'a'
  1546  00DC69  73                 	db	115	;'s'
  1547  00DC6A  75                 	db	117	;'u'
  1548  00DC6B  72                 	db	114	;'r'
  1549  00DC6C  65                 	db	101	;'e'
  1550  00DC6D  6D                 	db	109	;'m'
  1551  00DC6E  65                 	db	101	;'e'
  1552  00DC6F  6E                 	db	110	;'n'
  1553  00DC70  74                 	db	116	;'t'
  1554  00DC71  73                 	db	115	;'s'
  1555  00DC72  0A                 	db	10
  1556  00DC73  0D                 	db	13
  1557  00DC74  20                 	db	32
  1558  00DC75  20                 	db	32
  1559  00DC76  20                 	db	32
  1560  00DC77  4D                 	db	77	;'M'
  1561  00DC78  65                 	db	101	;'e'
  1562  00DC79  61                 	db	97	;'a'
  1563  00DC7A  73                 	db	115	;'s'
  1564  00DC7B  75                 	db	117	;'u'
  1565  00DC7C  72                 	db	114	;'r'
  1566  00DC7D  65                 	db	101	;'e'
  1567  00DC7E  20                 	db	32
  1568  00DC7F  50                 	db	80	;'P'
  1569  00DC80  4F                 	db	79	;'O'
  1570  00DC81  53                 	db	83	;'S'
  1571  00DC82  33                 	db	51	;'3'
  1572  00DC83  50                 	db	80	;'P'
  1573  00DC84  33                 	db	51	;'3'
  1574  00DC85  3F                 	db	63	;'?'
  1575  00DC86  3A                 	db	58	;':'
  1576  00DC87  20                 	db	32
  1577  00DC88  52                 	db	82	;'R'
  1578  00DC89  65                 	db	101	;'e'
  1579  00DC8A  74                 	db	116	;'t'
  1580  00DC8B  75                 	db	117	;'u'
  1581  00DC8C  72                 	db	114	;'r'
  1582  00DC8D  6E                 	db	110	;'n'
  1583  00DC8E  73                 	db	115	;'s'
  1584  00DC8F  20                 	db	32
  1585  00DC90  2B                 	db	43
  1586  00DC91  33                 	db	51	;'3'
  1587  00DC92  2E                 	db	46
  1588  00DC93  33                 	db	51	;'3'
  1589  00DC94  56                 	db	86	;'V'
  1590  00DC95  20                 	db	32
  1591  00DC96  41                 	db	65	;'A'
  1592  00DC97  44                 	db	68	;'D'
  1593  00DC98  43                 	db	67	;'C'
  1594  00DC99  20                 	db	32
  1595  00DC9A  43                 	db	67	;'C'
  1596  00DC9B  6F                 	db	111	;'o'
  1597  00DC9C  6E                 	db	110	;'n'
  1598  00DC9D  76                 	db	118	;'v'
  1599  00DC9E  65                 	db	101	;'e'
  1600  00DC9F  72                 	db	114	;'r'
  1601  00DCA0  73                 	db	115	;'s'
  1602  00DCA1  69                 	db	105	;'i'
  1603  00DCA2  6F                 	db	111	;'o'
  1604  00DCA3  6E                 	db	110	;'n'
  1605  00DCA4  20                 	db	32
  1606  00DCA5  69                 	db	105	;'i'
  1607  00DCA6  6E                 	db	110	;'n'
  1608  00DCA7  20                 	db	32
  1609  00DCA8  76                 	db	118	;'v'
  1610  00DCA9  6F                 	db	111	;'o'
  1611  00DCAA  6C                 	db	108	;'l'
  1612  00DCAB  74                 	db	116	;'t'
  1613  00DCAC  73                 	db	115	;'s'
  1614  00DCAD  0A                 	db	10
  1615  00DCAE  0D                 	db	13
  1616  00DCAF  20                 	db	32
  1617  00DCB0  20                 	db	32
  1618  00DCB1  20                 	db	32
  1619  00DCB2  4D                 	db	77	;'M'
  1620  00DCB3  65                 	db	101	;'e'
  1621  00DCB4  61                 	db	97	;'a'
  1622  00DCB5  73                 	db	115	;'s'
  1623  00DCB6  75                 	db	117	;'u'
  1624  00DCB7  72                 	db	114	;'r'
  1625  00DCB8  65                 	db	101	;'e'
  1626  00DCB9  20                 	db	32
  1627  00DCBA  50                 	db	80	;'P'
  1628  00DCBB  4F                 	db	79	;'O'
  1629  00DCBC  53                 	db	83	;'S'
  1630  00DCBD  31                 	db	49	;'1'
  1631  00DCBE  32                 	db	50	;'2'
  1632  00DCBF  3F                 	db	63	;'?'
  1633  00DCC0  3A                 	db	58	;':'
  1634  00DCC1  20                 	db	32
  1635  00DCC2  52                 	db	82	;'R'
  1636  00DCC3  65                 	db	101	;'e'
  1637  00DCC4  74                 	db	116	;'t'
  1638  00DCC5  75                 	db	117	;'u'
  1639  00DCC6  72                 	db	114	;'r'
  1640  00DCC7  6E                 	db	110	;'n'
  1641  00DCC8  73                 	db	115	;'s'
  1642  00DCC9  20                 	db	32
  1643  00DCCA  2B                 	db	43
  1644  00DCCB  31                 	db	49	;'1'
  1645  00DCCC  32                 	db	50	;'2'
  1646  00DCCD  56                 	db	86	;'V'
  1647  00DCCE  20                 	db	32
  1648  00DCCF  41                 	db	65	;'A'
  1649  00DCD0  44                 	db	68	;'D'
  1650  00DCD1  43                 	db	67	;'C'
  1651  00DCD2  20                 	db	32
  1652  00DCD3  43                 	db	67	;'C'
  1653  00DCD4  6F                 	db	111	;'o'
  1654  00DCD5  6E                 	db	110	;'n'
  1655  00DCD6  76                 	db	118	;'v'
  1656  00DCD7  65                 	db	101	;'e'
  1657  00DCD8  72                 	db	114	;'r'
  1658  00DCD9  73                 	db	115	;'s'
  1659  00DCDA  69                 	db	105	;'i'
  1660  00DCDB  6F                 	db	111	;'o'
  1661  00DCDC  6E                 	db	110	;'n'
  1662  00DCDD  20                 	db	32
  1663  00DCDE  69                 	db	105	;'i'
  1664  00DCDF  6E                 	db	110	;'n'
  1665  00DCE0  20                 	db	32
  1666  00DCE1  76                 	db	118	;'v'
  1667  00DCE2  6F                 	db	111	;'o'
  1668  00DCE3  6C                 	db	108	;'l'
  1669  00DCE4  74                 	db	116	;'t'
  1670  00DCE5  73                 	db	115	;'s'
  1671  00DCE6  0A                 	db	10
  1672  00DCE7  0D                 	db	13
  1673  00DCE8  20                 	db	32
  1674  00DCE9  20                 	db	32
  1675  00DCEA  20                 	db	32
  1676  00DCEB  4D                 	db	77	;'M'
  1677  00DCEC  65                 	db	101	;'e'
  1678  00DCED  61                 	db	97	;'a'
  1679  00DCEE  73                 	db	115	;'s'
  1680  00DCEF  75                 	db	117	;'u'
  1681  00DCF0  72                 	db	114	;'r'
  1682  00DCF1  65                 	db	101	;'e'
  1683  00DCF2  20                 	db	32
  1684  00DCF3  44                 	db	68	;'D'
  1685  00DCF4  69                 	db	105	;'i'
  1686  00DCF5  65                 	db	101	;'e'
  1687  00DCF6  20                 	db	32
  1688  00DCF7  54                 	db	84	;'T'
  1689  00DCF8  65                 	db	101	;'e'
  1690  00DCF9  6D                 	db	109	;'m'
  1691  00DCFA  70                 	db	112	;'p'
  1692  00DCFB  3F                 	db	63	;'?'
  1693  00DCFC  3A                 	db	58	;':'
  1694  00DCFD  20                 	db	32
  1695  00DCFE  52                 	db	82	;'R'
  1696  00DCFF  65                 	db	101	;'e'
  1697  00DD00  74                 	db	116	;'t'
  1698  00DD01  75                 	db	117	;'u'
  1699  00DD02  72                 	db	114	;'r'
  1700  00DD03  6E                 	db	110	;'n'
  1701  00DD04  73                 	db	115	;'s'
  1702  00DD05  20                 	db	32
  1703  00DD06  74                 	db	116	;'t'
  1704  00DD07  68                 	db	104	;'h'
  1705  00DD08  65                 	db	101	;'e'
  1706  00DD09  20                 	db	32
  1707  00DD0A  6D                 	db	109	;'m'
  1708  00DD0B  69                 	db	105	;'i'
  1709  00DD0C  63                 	db	99	;'c'
  1710  00DD0D  72                 	db	114	;'r'
  1711  00DD0E  6F                 	db	111	;'o'
  1712  00DD0F  63                 	db	99	;'c'
  1713  00DD10  6F                 	db	111	;'o'
  1714  00DD11  6E                 	db	110	;'n'
  1715  00DD12  74                 	db	116	;'t'
  1716  00DD13  72                 	db	114	;'r'
  1717  00DD14  6F                 	db	111	;'o'
  1718  00DD15  6C                 	db	108	;'l'
  1719  00DD16  6C                 	db	108	;'l'
  1720  00DD17  65                 	db	101	;'e'
  1721  00DD18  72                 	db	114	;'r'
  1722  00DD19  20                 	db	32
  1723  00DD1A  64                 	db	100	;'d'
  1724  00DD1B  69                 	db	105	;'i'
  1725  00DD1C  65                 	db	101	;'e'
  1726  00DD1D  20                 	db	32
  1727  00DD1E  74                 	db	116	;'t'
  1728  00DD1F  65                 	db	101	;'e'
  1729  00DD20  6D                 	db	109	;'m'
  1730  00DD21  70                 	db	112	;'p'
  1731  00DD22  65                 	db	101	;'e'
  1732  00DD23  72                 	db	114	;'r'
  1733  00DD24  61                 	db	97	;'a'
  1734  00DD25  74                 	db	116	;'t'
  1735  00DD26  75                 	db	117	;'u'
  1736  00DD27  72                 	db	114	;'r'
  1737  00DD28  65                 	db	101	;'e'
  1738  00DD29  20                 	db	32
  1739  00DD2A  69                 	db	105	;'i'
  1740  00DD2B  6E                 	db	110	;'n'
  1741  00DD2C  20                 	db	32
  1742  00DD2D  64                 	db	100	;'d'
  1743  00DD2E  65                 	db	101	;'e'
  1744  00DD2F  67                 	db	103	;'g'
  1745  00DD30  72                 	db	114	;'r'
  1746  00DD31  65                 	db	101	;'e'
  1747  00DD32  65                 	db	101	;'e'
  1748  00DD33  73                 	db	115	;'s'
  1749  00DD34  20                 	db	32
  1750  00DD35  43                 	db	67	;'C'
  1751  00DD36  0A                 	db	10
  1752  00DD37  0D                 	db	13
  1753  00DD38  20                 	db	32
  1754  00DD39  20                 	db	32
  1755  00DD3A  20                 	db	32
  1756  00DD3B  4D                 	db	77	;'M'
  1757  00DD3C  65                 	db	101	;'e'
  1758  00DD3D  61                 	db	97	;'a'
  1759  00DD3E  73                 	db	115	;'s'
  1760  00DD3F  75                 	db	117	;'u'
  1761  00DD40  72                 	db	114	;'r'
  1762  00DD41  65                 	db	101	;'e'
  1763  00DD42  20                 	db	32
  1764  00DD43  46                 	db	70	;'F'
  1765  00DD44  56                 	db	86	;'V'
  1766  00DD45  52                 	db	82	;'R'
  1767  00DD46  3F                 	db	63	;'?'
  1768  00DD47  3A                 	db	58	;':'
  1769  00DD48  20                 	db	32
  1770  00DD49  52                 	db	82	;'R'
  1771  00DD4A  65                 	db	101	;'e'
  1772  00DD4B  74                 	db	116	;'t'
  1773  00DD4C  75                 	db	117	;'u'
  1774  00DD4D  72                 	db	114	;'r'
  1775  00DD4E  6E                 	db	110	;'n'
  1776  00DD4F  73                 	db	115	;'s'
  1777  00DD50  20                 	db	32
  1778  00DD51  74                 	db	116	;'t'
  1779  00DD52  68                 	db	104	;'h'
  1780  00DD53  65                 	db	101	;'e'
  1781  00DD54  20                 	db	32
  1782  00DD55  69                 	db	105	;'i'
  1783  00DD56  6E                 	db	110	;'n'
  1784  00DD57  74                 	db	116	;'t'
  1785  00DD58  65                 	db	101	;'e'
  1786  00DD59  72                 	db	114	;'r'
  1787  00DD5A  6E                 	db	110	;'n'
  1788  00DD5B  61                 	db	97	;'a'
  1789  00DD5C  6C                 	db	108	;'l'
  1790  00DD5D  20                 	db	32
  1791  00DD5E  66                 	db	102	;'f'
  1792  00DD5F  69                 	db	105	;'i'
  1793  00DD60  78                 	db	120	;'x'
  1794  00DD61  65                 	db	101	;'e'
  1795  00DD62  64                 	db	100	;'d'
  1796  00DD63  20                 	db	32
  1797  00DD64  76                 	db	118	;'v'
  1798  00DD65  6F                 	db	111	;'o'
  1799  00DD66  6C                 	db	108	;'l'
  1800  00DD67  74                 	db	116	;'t'
  1801  00DD68  61                 	db	97	;'a'
  1802  00DD69  67                 	db	103	;'g'
  1803  00DD6A  65                 	db	101	;'e'
  1804  00DD6B  20                 	db	32
  1805  00DD6C  72                 	db	114	;'r'
  1806  00DD6D  65                 	db	101	;'e'
  1807  00DD6E  66                 	db	102	;'f'
  1808  00DD6F  65                 	db	101	;'e'
  1809  00DD70  72                 	db	114	;'r'
  1810  00DD71  65                 	db	101	;'e'
  1811  00DD72  6E                 	db	110	;'n'
  1812  00DD73  63                 	db	99	;'c'
  1813  00DD74  65                 	db	101	;'e'
  1814  00DD75  20                 	db	32
  1815  00DD76  62                 	db	98	;'b'
  1816  00DD77  75                 	db	117	;'u'
  1817  00DD78  66                 	db	102	;'f'
  1818  00DD79  66                 	db	102	;'f'
  1819  00DD7A  65                 	db	101	;'e'
  1820  00DD7B  72                 	db	114	;'r'
  1821  00DD7C  20                 	db	32
  1822  00DD7D  31                 	db	49	;'1'
  1823  00DD7E  20                 	db	32
  1824  00DD7F  6F                 	db	111	;'o'
  1825  00DD80  75                 	db	117	;'u'
  1826  00DD81  74                 	db	116	;'t'
  1827  00DD82  70                 	db	112	;'p'
  1828  00DD83  75                 	db	117	;'u'
  1829  00DD84  74                 	db	116	;'t'
  1830  00DD85  20                 	db	32
  1831  00DD86  69                 	db	105	;'i'
  1832  00DD87  6E                 	db	110	;'n'
  1833  00DD88  20                 	db	32
  1834  00DD89  76                 	db	118	;'v'
  1835  00DD8A  6F                 	db	111	;'o'
  1836  00DD8B  6C                 	db	108	;'l'
  1837  00DD8C  74                 	db	116	;'t'
  1838  00DD8D  73                 	db	115	;'s'
  1839  00DD8E  0A                 	db	10
  1840  00DD8F  0D                 	db	13
  1841  00DD90  20                 	db	32
  1842  00DD91  20                 	db	32
  1843  00DD92  20                 	db	32
  1844  00DD93  4D                 	db	77	;'M'
  1845  00DD94  65                 	db	101	;'e'
  1846  00DD95  61                 	db	97	;'a'
  1847  00DD96  73                 	db	115	;'s'
  1848  00DD97  75                 	db	117	;'u'
  1849  00DD98  72                 	db	114	;'r'
  1850  00DD99  65                 	db	101	;'e'
  1851  00DD9A  20                 	db	32
  1852  00DD9B  41                 	db	65	;'A'
  1853  00DD9C  56                 	db	86	;'V'
  1854  00DD9D  53                 	db	83	;'S'
  1855  00DD9E  53                 	db	83	;'S'
  1856  00DD9F  3F                 	db	63	;'?'
  1857  00DDA0  3A                 	db	58	;':'
  1858  00DDA1  20                 	db	32
  1859  00DDA2  52                 	db	82	;'R'
  1860  00DDA3  65                 	db	101	;'e'
  1861  00DDA4  74                 	db	116	;'t'
  1862  00DDA5  75                 	db	117	;'u'
  1863  00DDA6  72                 	db	114	;'r'
  1864  00DDA7  6E                 	db	110	;'n'
  1865  00DDA8  73                 	db	115	;'s'
  1866  00DDA9  20                 	db	32
  1867  00DDAA  74                 	db	116	;'t'
  1868  00DDAB  68                 	db	104	;'h'
  1869  00DDAC  65                 	db	101	;'e'
  1870  00DDAD  20                 	db	32
  1871  00DDAE  6D                 	db	109	;'m'
  1872  00DDAF  65                 	db	101	;'e'
  1873  00DDB0  61                 	db	97	;'a'
  1874  00DDB1  73                 	db	115	;'s'
  1875  00DDB2  75                 	db	117	;'u'
  1876  00DDB3  72                 	db	114	;'r'
  1877  00DDB4  65                 	db	101	;'e'
  1878  00DDB5  64                 	db	100	;'d'
  1879  00DDB6  20                 	db	32
  1880  00DDB7  76                 	db	118	;'v'
  1881  00DDB8  61                 	db	97	;'a'
  1882  00DDB9  6C                 	db	108	;'l'
  1883  00DDBA  75                 	db	117	;'u'
  1884  00DDBB  65                 	db	101	;'e'
  1885  00DDBC  20                 	db	32
  1886  00DDBD  6F                 	db	111	;'o'
  1887  00DDBE  66                 	db	102	;'f'
  1888  00DDBF  20                 	db	32
  1889  00DDC0  41                 	db	65	;'A'
  1890  00DDC1  6E                 	db	110	;'n'
  1891  00DDC2  61                 	db	97	;'a'
  1892  00DDC3  6C                 	db	108	;'l'
  1893  00DDC4  6F                 	db	111	;'o'
  1894  00DDC5  67                 	db	103	;'g'
  1895  00DDC6  20                 	db	32
  1896  00DDC7  56                 	db	86	;'V'
  1897  00DDC8  53                 	db	83	;'S'
  1898  00DDC9  53                 	db	83	;'S'
  1899  00DDCA  20                 	db	32
  1900  00DDCB  69                 	db	105	;'i'
  1901  00DDCC  6E                 	db	110	;'n'
  1902  00DDCD  20                 	db	32
  1903  00DDCE  76                 	db	118	;'v'
  1904  00DDCF  6F                 	db	111	;'o'
  1905  00DDD0  6C                 	db	108	;'l'
  1906  00DDD1  74                 	db	116	;'t'
  1907  00DDD2  73                 	db	115	;'s'
  1908  00DDD3  0A                 	db	10
  1909  00DDD4  0D                 	db	13
  1910  00DDD5  20                 	db	32
  1911  00DDD6  20                 	db	32
  1912  00DDD7  20                 	db	32
  1913  00DDD8  4D                 	db	77	;'M'
  1914  00DDD9  61                 	db	97	;'a'
  1915  00DDDA  78                 	db	120	;'x'
  1916  00DDDB  20                 	db	32
  1917  00DDDC  50                 	db	80	;'P'
  1918  00DDDD  4F                 	db	79	;'O'
  1919  00DDDE  53                 	db	83	;'S'
  1920  00DDDF  33                 	db	51	;'3'
  1921  00DDE0  50                 	db	80	;'P'
  1922  00DDE1  33                 	db	51	;'3'
  1923  00DDE2  20                 	db	32
  1924  00DDE3  56                 	db	86	;'V'
  1925  00DDE4  6F                 	db	111	;'o'
  1926  00DDE5  6C                 	db	108	;'l'
  1927  00DDE6  74                 	db	116	;'t'
  1928  00DDE7  61                 	db	97	;'a'
  1929  00DDE8  67                 	db	103	;'g'
  1930  00DDE9  65                 	db	101	;'e'
  1931  00DDEA  3F                 	db	63	;'?'
  1932  00DDEB  3A                 	db	58	;':'
  1933  00DDEC  20                 	db	32
  1934  00DDED  52                 	db	82	;'R'
  1935  00DDEE  65                 	db	101	;'e'
  1936  00DDEF  74                 	db	116	;'t'
  1937  00DDF0  75                 	db	117	;'u'
  1938  00DDF1  72                 	db	114	;'r'
  1939  00DDF2  6E                 	db	110	;'n'
  1940  00DDF3  73                 	db	115	;'s'
  1941  00DDF4  20                 	db	32
  1942  00DDF5  74                 	db	116	;'t'
  1943  00DDF6  68                 	db	104	;'h'
  1944  00DDF7  65                 	db	101	;'e'
  1945  00DDF8  20                 	db	32
  1946  00DDF9  6D                 	db	109	;'m'
  1947  00DDFA  61                 	db	97	;'a'
  1948  00DDFB  78                 	db	120	;'x'
  1949  00DDFC  69                 	db	105	;'i'
  1950  00DDFD  6D                 	db	109	;'m'
  1951  00DDFE  75                 	db	117	;'u'
  1952  00DDFF  6D                 	db	109	;'m'
  1953  00DE00  20                 	db	32
  1954  00DE01  72                 	db	114	;'r'
  1955  00DE02  65                 	db	101	;'e'
  1956  00DE03  63                 	db	99	;'c'
  1957  00DE04  6F                 	db	111	;'o'
  1958  00DE05  72                 	db	114	;'r'
  1959  00DE06  64                 	db	100	;'d'
  1960  00DE07  65                 	db	101	;'e'
  1961  00DE08  64                 	db	100	;'d'
  1962  00DE09  20                 	db	32
  1963  00DE0A  2B                 	db	43
  1964  00DE0B  33                 	db	51	;'3'
  1965  00DE0C  2E                 	db	46
  1966  00DE0D  33                 	db	51	;'3'
  1967  00DE0E  56                 	db	86	;'V'
  1968  00DE0F  20                 	db	32
  1969  00DE10  52                 	db	82	;'R'
  1970  00DE11  61                 	db	97	;'a'
  1971  00DE12  69                 	db	105	;'i'
  1972  00DE13  6C                 	db	108	;'l'
  1973  00DE14  20                 	db	32
  1974  00DE15  56                 	db	86	;'V'
  1975  00DE16  6F                 	db	111	;'o'
  1976  00DE17  6C                 	db	108	;'l'
  1977  00DE18  74                 	db	116	;'t'
  1978  00DE19  61                 	db	97	;'a'
  1979  00DE1A  67                 	db	103	;'g'
  1980  00DE1B  65                 	db	101	;'e'
  1981  00DE1C  20                 	db	32
  1982  00DE1D  6D                 	db	109	;'m'
  1983  00DE1E  65                 	db	101	;'e'
  1984  00DE1F  61                 	db	97	;'a'
  1985  00DE20  73                 	db	115	;'s'
  1986  00DE21  75                 	db	117	;'u'
  1987  00DE22  72                 	db	114	;'r'
  1988  00DE23  65                 	db	101	;'e'
  1989  00DE24  64                 	db	100	;'d'
  1990  00DE25  0A                 	db	10
  1991  00DE26  0D                 	db	13
  1992  00DE27  20                 	db	32
  1993  00DE28  20                 	db	32
  1994  00DE29  20                 	db	32
  1995  00DE2A  4D                 	db	77	;'M'
  1996  00DE2B  61                 	db	97	;'a'
  1997  00DE2C  78                 	db	120	;'x'
  1998  00DE2D  20                 	db	32
  1999  00DE2E  50                 	db	80	;'P'
  2000  00DE2F  4F                 	db	79	;'O'
  2001  00DE30  53                 	db	83	;'S'
  2002  00DE31  31                 	db	49	;'1'
  2003  00DE32  32                 	db	50	;'2'
  2004  00DE33  20                 	db	32
  2005  00DE34  56                 	db	86	;'V'
  2006  00DE35  6F                 	db	111	;'o'
  2007  00DE36  6C                 	db	108	;'l'
  2008  00DE37  74                 	db	116	;'t'
  2009  00DE38  61                 	db	97	;'a'
  2010  00DE39  67                 	db	103	;'g'
  2011  00DE3A  65                 	db	101	;'e'
  2012  00DE3B  3F                 	db	63	;'?'
  2013  00DE3C  3A                 	db	58	;':'
  2014  00DE3D  20                 	db	32
  2015  00DE3E  52                 	db	82	;'R'
  2016  00DE3F  65                 	db	101	;'e'
  2017  00DE40  74                 	db	116	;'t'
  2018  00DE41  75                 	db	117	;'u'
  2019  00DE42  72                 	db	114	;'r'
  2020  00DE43  6E                 	db	110	;'n'
  2021  00DE44  73                 	db	115	;'s'
  2022  00DE45  20                 	db	32
  2023  00DE46  74                 	db	116	;'t'
  2024  00DE47  68                 	db	104	;'h'
  2025  00DE48  65                 	db	101	;'e'
  2026  00DE49  20                 	db	32
  2027  00DE4A  6D                 	db	109	;'m'
  2028  00DE4B  61                 	db	97	;'a'
  2029  00DE4C  78                 	db	120	;'x'
  2030  00DE4D  69                 	db	105	;'i'
  2031  00DE4E  6D                 	db	109	;'m'
  2032  00DE4F  75                 	db	117	;'u'
  2033  00DE50  6D                 	db	109	;'m'
  2034  00DE51  20                 	db	32
  2035  00DE52  72                 	db	114	;'r'
  2036  00DE53  65                 	db	101	;'e'
  2037  00DE54  63                 	db	99	;'c'
  2038  00DE55  6F                 	db	111	;'o'
  2039  00DE56  72                 	db	114	;'r'
  2040  00DE57  64                 	db	100	;'d'
  2041  00DE58  65                 	db	101	;'e'
  2042  00DE59  64                 	db	100	;'d'
  2043  00DE5A  20                 	db	32
  2044  00DE5B  2B                 	db	43
  2045  00DE5C  31                 	db	49	;'1'
  2046  00DE5D  32                 	db	50	;'2'
  2047  00DE5E  56                 	db	86	;'V'
  2048  00DE5F  20                 	db	32
  2049  00DE60  52                 	db	82	;'R'
  2050  00DE61  61                 	db	97	;'a'
  2051  00DE62  69                 	db	105	;'i'
  2052  00DE63  6C                 	db	108	;'l'
  2053  00DE64  20                 	db	32
  2054  00DE65  56                 	db	86	;'V'
  2055  00DE66  6F                 	db	111	;'o'
  2056  00DE67  6C                 	db	108	;'l'
  2057  00DE68  74                 	db	116	;'t'
  2058  00DE69  61                 	db	97	;'a'
  2059  00DE6A  67                 	db	103	;'g'
  2060  00DE6B  65                 	db	101	;'e'
  2061  00DE6C  20                 	db	32
  2062  00DE6D  6D                 	db	109	;'m'
  2063  00DE6E  65                 	db	101	;'e'
  2064  00DE6F  61                 	db	97	;'a'
  2065  00DE70  73                 	db	115	;'s'
  2066  00DE71  75                 	db	117	;'u'
  2067  00DE72  72                 	db	114	;'r'
  2068  00DE73  65                 	db	101	;'e'
  2069  00DE74  64                 	db	100	;'d'
  2070  00DE75  0A                 	db	10
  2071  00DE76  0D                 	db	13
  2072  00DE77  20                 	db	32
  2073  00DE78  20                 	db	32
  2074  00DE79  20                 	db	32
  2075  00DE7A  4D                 	db	77	;'M'
  2076  00DE7B  61                 	db	97	;'a'
  2077  00DE7C  78                 	db	120	;'x'
  2078  00DE7D  20                 	db	32
  2079  00DE7E  44                 	db	68	;'D'
  2080  00DE7F  69                 	db	105	;'i'
  2081  00DE80  65                 	db	101	;'e'
  2082  00DE81  20                 	db	32
  2083  00DE82  54                 	db	84	;'T'
  2084  00DE83  65                 	db	101	;'e'
  2085  00DE84  6D                 	db	109	;'m'
  2086  00DE85  70                 	db	112	;'p'
  2087  00DE86  3F                 	db	63	;'?'
  2088  00DE87  3A                 	db	58	;':'
  2089  00DE88  20                 	db	32
  2090  00DE89  52                 	db	82	;'R'
  2091  00DE8A  65                 	db	101	;'e'
  2092  00DE8B  74                 	db	116	;'t'
  2093  00DE8C  75                 	db	117	;'u'
  2094  00DE8D  72                 	db	114	;'r'
  2095  00DE8E  6E                 	db	110	;'n'
  2096  00DE8F  73                 	db	115	;'s'
  2097  00DE90  20                 	db	32
  2098  00DE91  74                 	db	116	;'t'
  2099  00DE92  68                 	db	104	;'h'
  2100  00DE93  65                 	db	101	;'e'
  2101  00DE94  20                 	db	32
  2102  00DE95  6D                 	db	109	;'m'
  2103  00DE96  61                 	db	97	;'a'
  2104  00DE97  78                 	db	120	;'x'
  2105  00DE98  69                 	db	105	;'i'
  2106  00DE99  6D                 	db	109	;'m'
  2107  00DE9A  75                 	db	117	;'u'
  2108  00DE9B  6D                 	db	109	;'m'
  2109  00DE9C  20                 	db	32
  2110  00DE9D  72                 	db	114	;'r'
  2111  00DE9E  65                 	db	101	;'e'
  2112  00DE9F  63                 	db	99	;'c'
  2113  00DEA0  6F                 	db	111	;'o'
  2114  00DEA1  72                 	db	114	;'r'
  2115  00DEA2  64                 	db	100	;'d'
  2116  00DEA3  65                 	db	101	;'e'
  2117  00DEA4  64                 	db	100	;'d'
  2118  00DEA5  20                 	db	32
  2119  00DEA6  64                 	db	100	;'d'
  2120  00DEA7  69                 	db	105	;'i'
  2121  00DEA8  65                 	db	101	;'e'
  2122  00DEA9  20                 	db	32
  2123  00DEAA  74                 	db	116	;'t'
  2124  00DEAB  65                 	db	101	;'e'
  2125  00DEAC  6D                 	db	109	;'m'
  2126  00DEAD  70                 	db	112	;'p'
  2127  00DEAE  65                 	db	101	;'e'
  2128  00DEAF  72                 	db	114	;'r'
  2129  00DEB0  61                 	db	97	;'a'
  2130  00DEB1  74                 	db	116	;'t'
  2131  00DEB2  75                 	db	117	;'u'
  2132  00DEB3  72                 	db	114	;'r'
  2133  00DEB4  65                 	db	101	;'e'
  2134  00DEB5  20                 	db	32
  2135  00DEB6  6D                 	db	109	;'m'
  2136  00DEB7  65                 	db	101	;'e'
  2137  00DEB8  61                 	db	97	;'a'
  2138  00DEB9  73                 	db	115	;'s'
  2139  00DEBA  75                 	db	117	;'u'
  2140  00DEBB  72                 	db	114	;'r'
  2141  00DEBC  65                 	db	101	;'e'
  2142  00DEBD  64                 	db	100	;'d'
  2143  00DEBE  0A                 	db	10
  2144  00DEBF  0D                 	db	13
  2145  00DEC0  20                 	db	32
  2146  00DEC1  20                 	db	32
  2147  00DEC2  20                 	db	32
  2148  00DEC3  4D                 	db	77	;'M'
  2149  00DEC4  61                 	db	97	;'a'
  2150  00DEC5  78                 	db	120	;'x'
  2151  00DEC6  20                 	db	32
  2152  00DEC7  46                 	db	70	;'F'
  2153  00DEC8  56                 	db	86	;'V'
  2154  00DEC9  52                 	db	82	;'R'
  2155  00DECA  20                 	db	32
  2156  00DECB  56                 	db	86	;'V'
  2157  00DECC  6F                 	db	111	;'o'
  2158  00DECD  6C                 	db	108	;'l'
  2159  00DECE  74                 	db	116	;'t'
  2160  00DECF  61                 	db	97	;'a'
  2161  00DED0  67                 	db	103	;'g'
  2162  00DED1  65                 	db	101	;'e'
  2163  00DED2  3F                 	db	63	;'?'
  2164  00DED3  3A                 	db	58	;':'
  2165  00DED4  20                 	db	32
  2166  00DED5  52                 	db	82	;'R'
  2167  00DED6  65                 	db	101	;'e'
  2168  00DED7  74                 	db	116	;'t'
  2169  00DED8  75                 	db	117	;'u'
  2170  00DED9  72                 	db	114	;'r'
  2171  00DEDA  6E                 	db	110	;'n'
  2172  00DEDB  73                 	db	115	;'s'
  2173  00DEDC  20                 	db	32
  2174  00DEDD  74                 	db	116	;'t'
  2175  00DEDE  68                 	db	104	;'h'
  2176  00DEDF  65                 	db	101	;'e'
  2177  00DEE0  20                 	db	32
  2178  00DEE1  6D                 	db	109	;'m'
  2179  00DEE2  61                 	db	97	;'a'
  2180  00DEE3  78                 	db	120	;'x'
  2181  00DEE4  69                 	db	105	;'i'
  2182  00DEE5  6D                 	db	109	;'m'
  2183  00DEE6  75                 	db	117	;'u'
  2184  00DEE7  6D                 	db	109	;'m'
  2185  00DEE8  20                 	db	32
  2186  00DEE9  72                 	db	114	;'r'
  2187  00DEEA  65                 	db	101	;'e'
  2188  00DEEB  63                 	db	99	;'c'
  2189  00DEEC  6F                 	db	111	;'o'
  2190  00DEED  72                 	db	114	;'r'
  2191  00DEEE  64                 	db	100	;'d'
  2192  00DEEF  65                 	db	101	;'e'
  2193  00DEF0  64                 	db	100	;'d'
  2194  00DEF1  20                 	db	32
  2195  00DEF2  46                 	db	70	;'F'
  2196  00DEF3  56                 	db	86	;'V'
  2197  00DEF4  52                 	db	82	;'R'
  2198  00DEF5  20                 	db	32
  2199  00DEF6  42                 	db	66	;'B'
  2200  00DEF7  75                 	db	117	;'u'
  2201  00DEF8  66                 	db	102	;'f'
  2202  00DEF9  66                 	db	102	;'f'
  2203  00DEFA  65                 	db	101	;'e'
  2204  00DEFB  72                 	db	114	;'r'
  2205  00DEFC  20                 	db	32
  2206  00DEFD  31                 	db	49	;'1'
  2207  00DEFE  20                 	db	32
  2208  00DEFF  56                 	db	86	;'V'
  2209  00DF00  6F                 	db	111	;'o'
  2210  00DF01  6C                 	db	108	;'l'
  2211  00DF02  74                 	db	116	;'t'
  2212  00DF03  61                 	db	97	;'a'
  2213  00DF04  67                 	db	103	;'g'
  2214  00DF05  65                 	db	101	;'e'
  2215  00DF06  20                 	db	32
  2216  00DF07  6D                 	db	109	;'m'
  2217  00DF08  65                 	db	101	;'e'
  2218  00DF09  61                 	db	97	;'a'
  2219  00DF0A  73                 	db	115	;'s'
  2220  00DF0B  75                 	db	117	;'u'
  2221  00DF0C  72                 	db	114	;'r'
  2222  00DF0D  65                 	db	101	;'e'
  2223  00DF0E  64                 	db	100	;'d'
  2224  00DF0F  0A                 	db	10
  2225  00DF10  0D                 	db	13
  2226  00DF11  0A                 	db	10
  2227  00DF12  0D                 	db	13
  2228  00DF13  50                 	db	80	;'P'
  2229  00DF14  72                 	db	114	;'r'
  2230  00DF15  69                 	db	105	;'i'
  2231  00DF16  6D                 	db	109	;'m'
  2232  00DF17  61                 	db	97	;'a'
  2233  00DF18  72                 	db	114	;'r'
  2234  00DF19  79                 	db	121	;'y'
  2235  00DF1A  20                 	db	32
  2236  00DF1B  4D                 	db	77	;'M'
  2237  00DF1C  65                 	db	101	;'e'
  2238  00DF1D  61                 	db	97	;'a'
  2239  00DF1E  73                 	db	115	;'s'
  2240  00DF1F  75                 	db	117	;'u'
  2241  00DF20  72                 	db	114	;'r'
  2242  00DF21  65                 	db	101	;'e'
  2243  00DF22  6D                 	db	109	;'m'
  2244  00DF23  65                 	db	101	;'e'
  2245  00DF24  6E                 	db	110	;'n'
  2246  00DF25  74                 	db	116	;'t'
  2247  00DF26  20                 	db	32
  2248  00DF27  43                 	db	67	;'C'
  2249  00DF28  6F                 	db	111	;'o'
  2250  00DF29  6D                 	db	109	;'m'
  2251  00DF2A  6D                 	db	109	;'m'
  2252  00DF2B  61                 	db	97	;'a'
  2253  00DF2C  6E                 	db	110	;'n'
  2254  00DF2D  64                 	db	100	;'d'
  2255  00DF2E  73                 	db	115	;'s'
  2256  00DF2F  3A                 	db	58	;':'
  2257  00DF30  20                 	db	32
  2258  00DF31  56                 	db	86	;'V'
  2259  00DF32  69                 	db	105	;'i'
  2260  00DF33  65                 	db	101	;'e'
  2261  00DF34  77                 	db	119	;'w'
  2262  00DF35  20                 	db	32
  2263  00DF36  68                 	db	104	;'h'
  2264  00DF37  69                 	db	105	;'i'
  2265  00DF38  67                 	db	103	;'g'
  2266  00DF39  68                 	db	104	;'h'
  2267  00DF3A  20                 	db	32
  2268  00DF3B  6C                 	db	108	;'l'
  2269  00DF3C  65                 	db	101	;'e'
  2270  00DF3D  76                 	db	118	;'v'
  2271  00DF3E  65                 	db	101	;'e'
  2272  00DF3F  6C                 	db	108	;'l'
  2273  00DF40  20                 	db	32
  2274  00DF41  6F                 	db	111	;'o'
  2275  00DF42  75                 	db	117	;'u'
  2276  00DF43  74                 	db	116	;'t'
  2277  00DF44  70                 	db	112	;'p'
  2278  00DF45  75                 	db	117	;'u'
  2279  00DF46  74                 	db	116	;'t'
  2280  00DF47  20                 	db	32
  2281  00DF48  6D                 	db	109	;'m'
  2282  00DF49  65                 	db	101	;'e'
  2283  00DF4A  61                 	db	97	;'a'
  2284  00DF4B  73                 	db	115	;'s'
  2285  00DF4C  75                 	db	117	;'u'
  2286  00DF4D  72                 	db	114	;'r'
  2287  00DF4E  65                 	db	101	;'e'
  2288  00DF4F  6D                 	db	109	;'m'
  2289  00DF50  65                 	db	101	;'e'
  2290  00DF51  6E                 	db	110	;'n'
  2291  00DF52  74                 	db	116	;'t'
  2292  00DF53  73                 	db	115	;'s'
  2293  00DF54  20                 	db	32
  2294  00DF55  61                 	db	97	;'a'
  2295  00DF56  6E                 	db	110	;'n'
  2296  00DF57  64                 	db	100	;'d'
  2297  00DF58  20                 	db	32
  2298  00DF59  63                 	db	99	;'c'
  2299  00DF5A  61                 	db	97	;'a'
  2300  00DF5B  6C                 	db	108	;'l'
  2301  00DF5C  63                 	db	99	;'c'
  2302  00DF5D  75                 	db	117	;'u'
  2303  00DF5E  6C                 	db	108	;'l'
  2304  00DF5F  61                 	db	97	;'a'
  2305  00DF60  74                 	db	116	;'t'
  2306  00DF61  69                 	db	105	;'i'
  2307  00DF62  6F                 	db	111	;'o'
  2308  00DF63  6E                 	db	110	;'n'
  2309  00DF64  73                 	db	115	;'s'
  2310  00DF65  0A                 	db	10
  2311  00DF66  0D                 	db	13
  2312  00DF67  20                 	db	32
  2313  00DF68  20                 	db	32
  2314  00DF69  20                 	db	32
  2315  00DF6A  4D                 	db	77	;'M'
  2316  00DF6B  65                 	db	101	;'e'
  2317  00DF6C  61                 	db	97	;'a'
  2318  00DF6D  73                 	db	115	;'s'
  2319  00DF6E  75                 	db	117	;'u'
  2320  00DF6F  72                 	db	114	;'r'
  2321  00DF70  65                 	db	101	;'e'
  2322  00DF71  20                 	db	32
  2323  00DF72  44                 	db	68	;'D'
  2324  00DF73  65                 	db	101	;'e'
  2325  00DF74  74                 	db	116	;'t'
  2326  00DF75  65                 	db	101	;'e'
  2327  00DF76  63                 	db	99	;'c'
  2328  00DF77  74                 	db	116	;'t'
  2329  00DF78  65                 	db	101	;'e'
  2330  00DF79  64                 	db	100	;'d'
  2331  00DF7A  20                 	db	32
  2332  00DF7B  43                 	db	67	;'C'
  2333  00DF7C  75                 	db	117	;'u'
  2334  00DF7D  72                 	db	114	;'r'
  2335  00DF7E  72                 	db	114	;'r'
  2336  00DF7F  65                 	db	101	;'e'
  2337  00DF80  6E                 	db	110	;'n'
  2338  00DF81  74                 	db	116	;'t'
  2339  00DF82  3F                 	db	63	;'?'
  2340  00DF83  3A                 	db	58	;':'
  2341  00DF84  20                 	db	32
  2342  00DF85  52                 	db	82	;'R'
  2343  00DF86  65                 	db	101	;'e'
  2344  00DF87  74                 	db	116	;'t'
  2345  00DF88  75                 	db	117	;'u'
  2346  00DF89  72                 	db	114	;'r'
  2347  00DF8A  6E                 	db	110	;'n'
  2348  00DF8B  73                 	db	115	;'s'
  2349  00DF8C  20                 	db	32
  2350  00DF8D  6D                 	db	109	;'m'
  2351  00DF8E  65                 	db	101	;'e'
  2352  00DF8F  61                 	db	97	;'a'
  2353  00DF90  73                 	db	115	;'s'
  2354  00DF91  75                 	db	117	;'u'
  2355  00DF92  72                 	db	114	;'r'
  2356  00DF93  65                 	db	101	;'e'
  2357  00DF94  64                 	db	100	;'d'
  2358  00DF95  20                 	db	32
  2359  00DF96  6F                 	db	111	;'o'
  2360  00DF97  75                 	db	117	;'u'
  2361  00DF98  74                 	db	116	;'t'
  2362  00DF99  70                 	db	112	;'p'
  2363  00DF9A  75                 	db	117	;'u'
  2364  00DF9B  74                 	db	116	;'t'
  2365  00DF9C  20                 	db	32
  2366  00DF9D  63                 	db	99	;'c'
  2367  00DF9E  75                 	db	117	;'u'
  2368  00DF9F  72                 	db	114	;'r'
  2369  00DFA0  72                 	db	114	;'r'
  2370  00DFA1  65                 	db	101	;'e'
  2371  00DFA2  6E                 	db	110	;'n'
  2372  00DFA3  74                 	db	116	;'t'
  2373  00DFA4  20                 	db	32
  2374  00DFA5  69                 	db	105	;'i'
  2375  00DFA6  6E                 	db	110	;'n'
  2376  00DFA7  20                 	db	32
  2377  00DFA8  61                 	db	97	;'a'
  2378  00DFA9  6D                 	db	109	;'m'
  2379  00DFAA  70                 	db	112	;'p'
  2380  00DFAB  73                 	db	115	;'s'
  2381  00DFAC  20                 	db	32
  2382  00DFAD  61                 	db	97	;'a'
  2383  00DFAE  73                 	db	115	;'s'
  2384  00DFAF  20                 	db	32
  2385  00DFB0  73                 	db	115	;'s'
  2386  00DFB1  65                 	db	101	;'e'
  2387  00DFB2  65                 	db	101	;'e'
  2388  00DFB3  6E                 	db	110	;'n'
  2389  00DFB4  20                 	db	32
  2390  00DFB5  62                 	db	98	;'b'
  2391  00DFB6  79                 	db	121	;'y'
  2392  00DFB7  20                 	db	32
  2393  00DFB8  41                 	db	65	;'A'
  2394  00DFB9  44                 	db	68	;'D'
  2395  00DFBA  43                 	db	67	;'C'
  2396  00DFBB  0A                 	db	10
  2397  00DFBC  0D                 	db	13
  2398  00DFBD  20                 	db	32
  2399  00DFBE  20                 	db	32
  2400  00DFBF  20                 	db	32
  2401  00DFC0  4D                 	db	77	;'M'
  2402  00DFC1  65                 	db	101	;'e'
  2403  00DFC2  61                 	db	97	;'a'
  2404  00DFC3  73                 	db	115	;'s'
  2405  00DFC4  75                 	db	117	;'u'
  2406  00DFC5  72                 	db	114	;'r'
  2407  00DFC6  65                 	db	101	;'e'
  2408  00DFC7  20                 	db	32
  2409  00DFC8  52                 	db	82	;'R'
  2410  00DFC9  4D                 	db	77	;'M'
  2411  00DFCA  53                 	db	83	;'S'
  2412  00DFCB  20                 	db	32
  2413  00DFCC  43                 	db	67	;'C'
  2414  00DFCD  75                 	db	117	;'u'
  2415  00DFCE  72                 	db	114	;'r'
  2416  00DFCF  72                 	db	114	;'r'
  2417  00DFD0  65                 	db	101	;'e'
  2418  00DFD1  6E                 	db	110	;'n'
  2419  00DFD2  74                 	db	116	;'t'
  2420  00DFD3  3F                 	db	63	;'?'
  2421  00DFD4  3A                 	db	58	;':'
  2422  00DFD5  20                 	db	32
  2423  00DFD6  52                 	db	82	;'R'
  2424  00DFD7  65                 	db	101	;'e'
  2425  00DFD8  74                 	db	116	;'t'
  2426  00DFD9  75                 	db	117	;'u'
  2427  00DFDA  72                 	db	114	;'r'
  2428  00DFDB  6E                 	db	110	;'n'
  2429  00DFDC  73                 	db	115	;'s'
  2430  00DFDD  20                 	db	32
  2431  00DFDE  74                 	db	116	;'t'
  2432  00DFDF  68                 	db	104	;'h'
  2433  00DFE0  65                 	db	101	;'e'
  2434  00DFE1  20                 	db	32
  2435  00DFE2  63                 	db	99	;'c'
  2436  00DFE3  61                 	db	97	;'a'
  2437  00DFE4  6C                 	db	108	;'l'
  2438  00DFE5  63                 	db	99	;'c'
  2439  00DFE6  75                 	db	117	;'u'
  2440  00DFE7  6C                 	db	108	;'l'
  2441  00DFE8  61                 	db	97	;'a'
  2442  00DFE9  74                 	db	116	;'t'
  2443  00DFEA  65                 	db	101	;'e'
  2444  00DFEB  64                 	db	100	;'d'
  2445  00DFEC  20                 	db	32
  2446  00DFED  52                 	db	82	;'R'
  2447  00DFEE  4D                 	db	77	;'M'
  2448  00DFEF  53                 	db	83	;'S'
  2449  00DFF0  20                 	db	32
  2450  00DFF1  6F                 	db	111	;'o'
  2451  00DFF2  75                 	db	117	;'u'
  2452  00DFF3  74                 	db	116	;'t'
  2453  00DFF4  70                 	db	112	;'p'
  2454  00DFF5  75                 	db	117	;'u'
  2455  00DFF6  74                 	db	116	;'t'
  2456  00DFF7  20                 	db	32
  2457  00DFF8  63                 	db	99	;'c'
  2458  00DFF9  75                 	db	117	;'u'
  2459  00DFFA  72                 	db	114	;'r'
  2460  00DFFB  72                 	db	114	;'r'
  2461  00DFFC  65                 	db	101	;'e'
  2462  00DFFD  6E                 	db	110	;'n'
  2463  00DFFE  74                 	db	116	;'t'
  2464  00DFFF  20                 	db	32
  2465  00E000  66                 	db	102	;'f'
  2466  00E001  72                 	db	114	;'r'
  2467  00E002  6F                 	db	111	;'o'
  2468  00E003  6D                 	db	109	;'m'
  2469  00E004  20                 	db	32
  2470  00E005  6D                 	db	109	;'m'
  2471  00E006  65                 	db	101	;'e'
  2472  00E007  61                 	db	97	;'a'
  2473  00E008  73                 	db	115	;'s'
  2474  00E009  75                 	db	117	;'u'
  2475  00E00A  72                 	db	114	;'r'
  2476  00E00B  65                 	db	101	;'e'
  2477  00E00C  6D                 	db	109	;'m'
  2478  00E00D  65                 	db	101	;'e'
  2479  00E00E  6E                 	db	110	;'n'
  2480  00E00F  74                 	db	116	;'t'
  2481  00E010  73                 	db	115	;'s'
  2482  00E011  20                 	db	32
  2483  00E012  61                 	db	97	;'a'
  2484  00E013  6E                 	db	110	;'n'
  2485  00E014  64                 	db	100	;'d'
  2486  00E015  20                 	db	32
  2487  00E016  54                 	db	84	;'T'
  2488  00E017  52                 	db	82	;'R'
  2489  00E018  49                 	db	73	;'I'
  2490  00E019  41                 	db	65	;'A'
  2491  00E01A  43                 	db	67	;'C'
  2492  00E01B  20                 	db	32
  2493  00E01C  66                 	db	102	;'f'
  2494  00E01D  69                 	db	105	;'i'
  2495  00E01E  72                 	db	114	;'r'
  2496  00E01F  69                 	db	105	;'i'
  2497  00E020  6E                 	db	110	;'n'
  2498  00E021  67                 	db	103	;'g'
  2499  00E022  20                 	db	32
  2500  00E023  61                 	db	97	;'a'
  2501  00E024  6E                 	db	110	;'n'
  2502  00E025  67                 	db	103	;'g'
  2503  00E026  6C                 	db	108	;'l'
  2504  00E027  65                 	db	101	;'e'
  2505  00E028  0A                 	db	10
  2506  00E029  0D                 	db	13
  2507  00E02A  20                 	db	32
  2508  00E02B  20                 	db	32
  2509  00E02C  20                 	db	32
  2510  00E02D  4D                 	db	77	;'M'
  2511  00E02E  65                 	db	101	;'e'
  2512  00E02F  61                 	db	97	;'a'
  2513  00E030  73                 	db	115	;'s'
  2514  00E031  75                 	db	117	;'u'
  2515  00E032  72                 	db	114	;'r'
  2516  00E033  65                 	db	101	;'e'
  2517  00E034  20                 	db	32
  2518  00E035  52                 	db	82	;'R'
  2519  00E036  4D                 	db	77	;'M'
  2520  00E037  53                 	db	83	;'S'
  2521  00E038  20                 	db	32
  2522  00E039  56                 	db	86	;'V'
  2523  00E03A  6F                 	db	111	;'o'
  2524  00E03B  6C                 	db	108	;'l'
  2525  00E03C  74                 	db	116	;'t'
  2526  00E03D  61                 	db	97	;'a'
  2527  00E03E  67                 	db	103	;'g'
  2528  00E03F  65                 	db	101	;'e'
  2529  00E040  3F                 	db	63	;'?'
  2530  00E041  3A                 	db	58	;':'
  2531  00E042  20                 	db	32
  2532  00E043  52                 	db	82	;'R'
  2533  00E044  65                 	db	101	;'e'
  2534  00E045  74                 	db	116	;'t'
  2535  00E046  75                 	db	117	;'u'
  2536  00E047  72                 	db	114	;'r'
  2537  00E048  6E                 	db	110	;'n'
  2538  00E049  73                 	db	115	;'s'
  2539  00E04A  20                 	db	32
  2540  00E04B  74                 	db	116	;'t'
  2541  00E04C  68                 	db	104	;'h'
  2542  00E04D  65                 	db	101	;'e'
  2543  00E04E  20                 	db	32
  2544  00E04F  63                 	db	99	;'c'
  2545  00E050  61                 	db	97	;'a'
  2546  00E051  6C                 	db	108	;'l'
  2547  00E052  63                 	db	99	;'c'
  2548  00E053  75                 	db	117	;'u'
  2549  00E054  6C                 	db	108	;'l'
  2550  00E055  61                 	db	97	;'a'
  2551  00E056  74                 	db	116	;'t'
  2552  00E057  65                 	db	101	;'e'
  2553  00E058  64                 	db	100	;'d'
  2554  00E059  20                 	db	32
  2555  00E05A  52                 	db	82	;'R'
  2556  00E05B  4D                 	db	77	;'M'
  2557  00E05C  53                 	db	83	;'S'
  2558  00E05D  20                 	db	32
  2559  00E05E  6F                 	db	111	;'o'
  2560  00E05F  75                 	db	117	;'u'
  2561  00E060  74                 	db	116	;'t'
  2562  00E061  70                 	db	112	;'p'
  2563  00E062  75                 	db	117	;'u'
  2564  00E063  74                 	db	116	;'t'
  2565  00E064  20                 	db	32
  2566  00E065  76                 	db	118	;'v'
  2567  00E066  6F                 	db	111	;'o'
  2568  00E067  6C                 	db	108	;'l'
  2569  00E068  74                 	db	116	;'t'
  2570  00E069  61                 	db	97	;'a'
  2571  00E06A  67                 	db	103	;'g'
  2572  00E06B  65                 	db	101	;'e'
  2573  00E06C  20                 	db	32
  2574  00E06D  66                 	db	102	;'f'
  2575  00E06E  72                 	db	114	;'r'
  2576  00E06F  6F                 	db	111	;'o'
  2577  00E070  6D                 	db	109	;'m'
  2578  00E071  20                 	db	32
  2579  00E072  54                 	db	84	;'T'
  2580  00E073  52                 	db	82	;'R'
  2581  00E074  49                 	db	73	;'I'
  2582  00E075  41                 	db	65	;'A'
  2583  00E076  43                 	db	67	;'C'
  2584  00E077  20                 	db	32
  2585  00E078  66                 	db	102	;'f'
  2586  00E079  69                 	db	105	;'i'
  2587  00E07A  72                 	db	114	;'r'
  2588  00E07B  69                 	db	105	;'i'
  2589  00E07C  6E                 	db	110	;'n'
  2590  00E07D  67                 	db	103	;'g'
  2591  00E07E  20                 	db	32
  2592  00E07F  61                 	db	97	;'a'
  2593  00E080  6E                 	db	110	;'n'
  2594  00E081  67                 	db	103	;'g'
  2595  00E082  6C                 	db	108	;'l'
  2596  00E083  65                 	db	101	;'e'
  2597  00E084  0A                 	db	10
  2598  00E085  0D                 	db	13
  2599  00E086  20                 	db	32
  2600  00E087  20                 	db	32
  2601  00E088  20                 	db	32
  2602  00E089  4D                 	db	77	;'M'
  2603  00E08A  65                 	db	101	;'e'
  2604  00E08B  61                 	db	97	;'a'
  2605  00E08C  73                 	db	115	;'s'
  2606  00E08D  75                 	db	117	;'u'
  2607  00E08E  72                 	db	114	;'r'
  2608  00E08F  65                 	db	101	;'e'
  2609  00E090  20                 	db	32
  2610  00E091  50                 	db	80	;'P'
  2611  00E092  6F                 	db	111	;'o'
  2612  00E093  77                 	db	119	;'w'
  2613  00E094  65                 	db	101	;'e'
  2614  00E095  72                 	db	114	;'r'
  2615  00E096  3F                 	db	63	;'?'
  2616  00E097  3A                 	db	58	;':'
  2617  00E098  20                 	db	32
  2618  00E099  52                 	db	82	;'R'
  2619  00E09A  65                 	db	101	;'e'
  2620  00E09B  74                 	db	116	;'t'
  2621  00E09C  75                 	db	117	;'u'
  2622  00E09D  72                 	db	114	;'r'
  2623  00E09E  6E                 	db	110	;'n'
  2624  00E09F  73                 	db	115	;'s'
  2625  00E0A0  20                 	db	32
  2626  00E0A1  74                 	db	116	;'t'
  2627  00E0A2  68                 	db	104	;'h'
  2628  00E0A3  65                 	db	101	;'e'
  2629  00E0A4  20                 	db	32
  2630  00E0A5  63                 	db	99	;'c'
  2631  00E0A6  61                 	db	97	;'a'
  2632  00E0A7  6C                 	db	108	;'l'
  2633  00E0A8  63                 	db	99	;'c'
  2634  00E0A9  75                 	db	117	;'u'
  2635  00E0AA  6C                 	db	108	;'l'
  2636  00E0AB  61                 	db	97	;'a'
  2637  00E0AC  74                 	db	116	;'t'
  2638  00E0AD  65                 	db	101	;'e'
  2639  00E0AE  64                 	db	100	;'d'
  2640  00E0AF  20                 	db	32
  2641  00E0B0  6F                 	db	111	;'o'
  2642  00E0B1  75                 	db	117	;'u'
  2643  00E0B2  74                 	db	116	;'t'
  2644  00E0B3  70                 	db	112	;'p'
  2645  00E0B4  75                 	db	117	;'u'
  2646  00E0B5  74                 	db	116	;'t'
  2647  00E0B6  20                 	db	32
  2648  00E0B7  70                 	db	112	;'p'
  2649  00E0B8  6F                 	db	111	;'o'
  2650  00E0B9  77                 	db	119	;'w'
  2651  00E0BA  65                 	db	101	;'e'
  2652  00E0BB  72                 	db	114	;'r'
  2653  00E0BC  20                 	db	32
  2654  00E0BD  69                 	db	105	;'i'
  2655  00E0BE  6E                 	db	110	;'n'
  2656  00E0BF  20                 	db	32
  2657  00E0C0  57                 	db	87	;'W'
  2658  00E0C1  61                 	db	97	;'a'
  2659  00E0C2  74                 	db	116	;'t'
  2660  00E0C3  74                 	db	116	;'t'
  2661  00E0C4  73                 	db	115	;'s'
  2662  00E0C5  0A                 	db	10
  2663  00E0C6  0D                 	db	13
  2664  00E0C7  20                 	db	32
  2665  00E0C8  20                 	db	32
  2666  00E0C9  20                 	db	32
  2667  00E0CA  4D                 	db	77	;'M'
  2668  00E0CB  65                 	db	101	;'e'
  2669  00E0CC  61                 	db	97	;'a'
  2670  00E0CD  73                 	db	115	;'s'
  2671  00E0CE  75                 	db	117	;'u'
  2672  00E0CF  72                 	db	114	;'r'
  2673  00E0D0  65                 	db	101	;'e'
  2674  00E0D1  20                 	db	32
  2675  00E0D2  45                 	db	69	;'E'
  2676  00E0D3  6E                 	db	110	;'n'
  2677  00E0D4  65                 	db	101	;'e'
  2678  00E0D5  72                 	db	114	;'r'
  2679  00E0D6  67                 	db	103	;'g'
  2680  00E0D7  79                 	db	121	;'y'
  2681  00E0D8  3F                 	db	63	;'?'
  2682  00E0D9  3A                 	db	58	;':'
  2683  00E0DA  20                 	db	32
  2684  00E0DB  52                 	db	82	;'R'
  2685  00E0DC  65                 	db	101	;'e'
  2686  00E0DD  74                 	db	116	;'t'
  2687  00E0DE  75                 	db	117	;'u'
  2688  00E0DF  72                 	db	114	;'r'
  2689  00E0E0  6E                 	db	110	;'n'
  2690  00E0E1  73                 	db	115	;'s'
  2691  00E0E2  20                 	db	32
  2692  00E0E3  6D                 	db	109	;'m'
  2693  00E0E4  65                 	db	101	;'e'
  2694  00E0E5  61                 	db	97	;'a'
  2695  00E0E6  73                 	db	115	;'s'
  2696  00E0E7  75                 	db	117	;'u'
  2697  00E0E8  72                 	db	114	;'r'
  2698  00E0E9  65                 	db	101	;'e'
  2699  00E0EA  64                 	db	100	;'d'
  2700  00E0EB  20                 	db	32
  2701  00E0EC  65                 	db	101	;'e'
  2702  00E0ED  6E                 	db	110	;'n'
  2703  00E0EE  65                 	db	101	;'e'
  2704  00E0EF  72                 	db	114	;'r'
  2705  00E0F0  67                 	db	103	;'g'
  2706  00E0F1  79                 	db	121	;'y'
  2707  00E0F2  20                 	db	32
  2708  00E0F3  73                 	db	115	;'s'
  2709  00E0F4  69                 	db	105	;'i'
  2710  00E0F5  6E                 	db	110	;'n'
  2711  00E0F6  63                 	db	99	;'c'
  2712  00E0F7  65                 	db	101	;'e'
  2713  00E0F8  20                 	db	32
  2714  00E0F9  6D                 	db	109	;'m'
  2715  00E0FA  65                 	db	101	;'e'
  2716  00E0FB  61                 	db	97	;'a'
  2717  00E0FC  73                 	db	115	;'s'
  2718  00E0FD  75                 	db	117	;'u'
  2719  00E0FE  72                 	db	114	;'r'
  2720  00E0FF  65                 	db	101	;'e'
  2721  00E100  6D                 	db	109	;'m'
  2722  00E101  65                 	db	101	;'e'
  2723  00E102  6E                 	db	110	;'n'
  2724  00E103  74                 	db	116	;'t'
  2725  00E104  20                 	db	32
  2726  00E105  72                 	db	114	;'r'
  2727  00E106  65                 	db	101	;'e'
  2728  00E107  73                 	db	115	;'s'
  2729  00E108  65                 	db	101	;'e'
  2730  00E109  74                 	db	116	;'t'
  2731  00E10A  20                 	db	32
  2732  00E10B  69                 	db	105	;'i'
  2733  00E10C  6E                 	db	110	;'n'
  2734  00E10D  20                 	db	32
  2735  00E10E  57                 	db	87	;'W'
  2736  00E10F  61                 	db	97	;'a'
  2737  00E110  74                 	db	116	;'t'
  2738  00E111  74                 	db	116	;'t'
  2739  00E112  20                 	db	32
  2740  00E113  48                 	db	72	;'H'
  2741  00E114  6F                 	db	111	;'o'
  2742  00E115  75                 	db	117	;'u'
  2743  00E116  72                 	db	114	;'r'
  2744  00E117  73                 	db	115	;'s'
  2745  00E118  0A                 	db	10
  2746  00E119  0D                 	db	13
  2747  00E11A  20                 	db	32
  2748  00E11B  20                 	db	32
  2749  00E11C  20                 	db	32
  2750  00E11D  4C                 	db	76	;'L'
  2751  00E11E  6F                 	db	111	;'o'
  2752  00E11F  61                 	db	97	;'a'
  2753  00E120  64                 	db	100	;'d'
  2754  00E121  20                 	db	32
  2755  00E122  4F                 	db	79	;'O'
  2756  00E123  6E                 	db	110	;'n'
  2757  00E124  20                 	db	32
  2758  00E125  54                 	db	84	;'T'
  2759  00E126  69                 	db	105	;'i'
  2760  00E127  6D                 	db	109	;'m'
  2761  00E128  65                 	db	101	;'e'
  2762  00E129  3F                 	db	63	;'?'
  2763  00E12A  3A                 	db	58	;':'
  2764  00E12B  20                 	db	32
  2765  00E12C  52                 	db	82	;'R'
  2766  00E12D  65                 	db	101	;'e'
  2767  00E12E  74                 	db	116	;'t'
  2768  00E12F  75                 	db	117	;'u'
  2769  00E130  72                 	db	114	;'r'
  2770  00E131  6E                 	db	110	;'n'
  2771  00E132  73                 	db	115	;'s'
  2772  00E133  20                 	db	32
  2773  00E134  6C                 	db	108	;'l'
  2774  00E135  6F                 	db	111	;'o'
  2775  00E136  61                 	db	97	;'a'
  2776  00E137  64                 	db	100	;'d'
  2777  00E138  20                 	db	32
  2778  00E139  6F                 	db	111	;'o'
  2779  00E13A  6E                 	db	110	;'n'
  2780  00E13B  20                 	db	32
  2781  00E13C  74                 	db	116	;'t'
  2782  00E13D  69                 	db	105	;'i'
  2783  00E13E  6D                 	db	109	;'m'
  2784  00E13F  65                 	db	101	;'e'
  2785  00E140  20                 	db	32
  2786  00E141  73                 	db	115	;'s'
  2787  00E142  69                 	db	105	;'i'
  2788  00E143  6E                 	db	110	;'n'
  2789  00E144  63                 	db	99	;'c'
  2790  00E145  65                 	db	101	;'e'
  2791  00E146  20                 	db	32
  2792  00E147  6C                 	db	108	;'l'
  2793  00E148  61                 	db	97	;'a'
  2794  00E149  73                 	db	115	;'s'
  2795  00E14A  74                 	db	116	;'t'
  2796  00E14B  20                 	db	32
  2797  00E14C  64                 	db	100	;'d'
  2798  00E14D  65                 	db	101	;'e'
  2799  00E14E  76                 	db	118	;'v'
  2800  00E14F  69                 	db	105	;'i'
  2801  00E150  63                 	db	99	;'c'
  2802  00E151  65                 	db	101	;'e'
  2803  00E152  20                 	db	32
  2804  00E153  72                 	db	114	;'r'
  2805  00E154  65                 	db	101	;'e'
  2806  00E155  73                 	db	115	;'s'
  2807  00E156  65                 	db	101	;'e'
  2808  00E157  74                 	db	116	;'t'
  2809  00E158  20                 	db	32
  2810  00E159  69                 	db	105	;'i'
  2811  00E15A  6E                 	db	110	;'n'
  2812  00E15B  20                 	db	32
  2813  00E15C  73                 	db	115	;'s'
  2814  00E15D  65                 	db	101	;'e'
  2815  00E15E  63                 	db	99	;'c'
  2816  00E15F  6F                 	db	111	;'o'
  2817  00E160  6E                 	db	110	;'n'
  2818  00E161  64                 	db	100	;'d'
  2819  00E162  73                 	db	115	;'s'
  2820  00E163  0A                 	db	10
  2821  00E164  0D                 	db	13
  2822  00E165  20                 	db	32
  2823  00E166  20                 	db	32
  2824  00E167  20                 	db	32
  2825  00E168  4D                 	db	77	;'M'
  2826  00E169  61                 	db	97	;'a'
  2827  00E16A  78                 	db	120	;'x'
  2828  00E16B  20                 	db	32
  2829  00E16C  52                 	db	82	;'R'
  2830  00E16D  4D                 	db	77	;'M'
  2831  00E16E  53                 	db	83	;'S'
  2832  00E16F  20                 	db	32
  2833  00E170  43                 	db	67	;'C'
  2834  00E171  75                 	db	117	;'u'
  2835  00E172  72                 	db	114	;'r'
  2836  00E173  72                 	db	114	;'r'
  2837  00E174  65                 	db	101	;'e'
  2838  00E175  6E                 	db	110	;'n'
  2839  00E176  74                 	db	116	;'t'
  2840  00E177  3F                 	db	63	;'?'
  2841  00E178  3A                 	db	58	;':'
  2842  00E179  20                 	db	32
  2843  00E17A  50                 	db	80	;'P'
  2844  00E17B  72                 	db	114	;'r'
  2845  00E17C  69                 	db	105	;'i'
  2846  00E17D  6E                 	db	110	;'n'
  2847  00E17E  74                 	db	116	;'t'
  2848  00E17F  73                 	db	115	;'s'
  2849  00E180  20                 	db	32
  2850  00E181  74                 	db	116	;'t'
  2851  00E182  68                 	db	104	;'h'
  2852  00E183  65                 	db	101	;'e'
  2853  00E184  20                 	db	32
  2854  00E185  6D                 	db	109	;'m'
  2855  00E186  61                 	db	97	;'a'
  2856  00E187  78                 	db	120	;'x'
  2857  00E188  69                 	db	105	;'i'
  2858  00E189  6D                 	db	109	;'m'
  2859  00E18A  75                 	db	117	;'u'
  2860  00E18B  6D                 	db	109	;'m'
  2861  00E18C  20                 	db	32
  2862  00E18D  72                 	db	114	;'r'
  2863  00E18E  65                 	db	101	;'e'
  2864  00E18F  63                 	db	99	;'c'
  2865  00E190  6F                 	db	111	;'o'
  2866  00E191  72                 	db	114	;'r'
  2867  00E192  64                 	db	100	;'d'
  2868  00E193  65                 	db	101	;'e'
  2869  00E194  64                 	db	100	;'d'
  2870  00E195  20                 	db	32
  2871  00E196  52                 	db	82	;'R'
  2872  00E197  4D                 	db	77	;'M'
  2873  00E198  53                 	db	83	;'S'
  2874  00E199  20                 	db	32
  2875  00E19A  6F                 	db	111	;'o'
  2876  00E19B  75                 	db	117	;'u'
  2877  00E19C  74                 	db	116	;'t'
  2878  00E19D  70                 	db	112	;'p'
  2879  00E19E  75                 	db	117	;'u'
  2880  00E19F  74                 	db	116	;'t'
  2881  00E1A0  20                 	db	32
  2882  00E1A1  63                 	db	99	;'c'
  2883  00E1A2  75                 	db	117	;'u'
  2884  00E1A3  72                 	db	114	;'r'
  2885  00E1A4  72                 	db	114	;'r'
  2886  00E1A5  65                 	db	101	;'e'
  2887  00E1A6  6E                 	db	110	;'n'
  2888  00E1A7  74                 	db	116	;'t'
  2889  00E1A8  0A                 	db	10
  2890  00E1A9  0D                 	db	13
  2891  00E1AA  20                 	db	32
  2892  00E1AB  20                 	db	32
  2893  00E1AC  20                 	db	32
  2894  00E1AD  4D                 	db	77	;'M'
  2895  00E1AE  61                 	db	97	;'a'
  2896  00E1AF  78                 	db	120	;'x'
  2897  00E1B0  20                 	db	32
  2898  00E1B1  50                 	db	80	;'P'
  2899  00E1B2  6F                 	db	111	;'o'
  2900  00E1B3  77                 	db	119	;'w'
  2901  00E1B4  65                 	db	101	;'e'
  2902  00E1B5  72                 	db	114	;'r'
  2903  00E1B6  3F                 	db	63	;'?'
  2904  00E1B7  3A                 	db	58	;':'
  2905  00E1B8  20                 	db	32
  2906  00E1B9  50                 	db	80	;'P'
  2907  00E1BA  72                 	db	114	;'r'
  2908  00E1BB  69                 	db	105	;'i'
  2909  00E1BC  6E                 	db	110	;'n'
  2910  00E1BD  74                 	db	116	;'t'
  2911  00E1BE  73                 	db	115	;'s'
  2912  00E1BF  20                 	db	32
  2913  00E1C0  74                 	db	116	;'t'
  2914  00E1C1  68                 	db	104	;'h'
  2915  00E1C2  65                 	db	101	;'e'
  2916  00E1C3  20                 	db	32
  2917  00E1C4  6D                 	db	109	;'m'
  2918  00E1C5  61                 	db	97	;'a'
  2919  00E1C6  78                 	db	120	;'x'
  2920  00E1C7  69                 	db	105	;'i'
  2921  00E1C8  6D                 	db	109	;'m'
  2922  00E1C9  75                 	db	117	;'u'
  2923  00E1CA  6D                 	db	109	;'m'
  2924  00E1CB  20                 	db	32
  2925  00E1CC  72                 	db	114	;'r'
  2926  00E1CD  65                 	db	101	;'e'
  2927  00E1CE  63                 	db	99	;'c'
  2928  00E1CF  6F                 	db	111	;'o'
  2929  00E1D0  72                 	db	114	;'r'
  2930  00E1D1  64                 	db	100	;'d'
  2931  00E1D2  65                 	db	101	;'e'
  2932  00E1D3  64                 	db	100	;'d'
  2933  00E1D4  20                 	db	32
  2934  00E1D5  6F                 	db	111	;'o'
  2935  00E1D6  75                 	db	117	;'u'
  2936  00E1D7  74                 	db	116	;'t'
  2937  00E1D8  70                 	db	112	;'p'
  2938  00E1D9  75                 	db	117	;'u'
  2939  00E1DA  74                 	db	116	;'t'
  2940  00E1DB  20                 	db	32
  2941  00E1DC  70                 	db	112	;'p'
  2942  00E1DD  6F                 	db	111	;'o'
  2943  00E1DE  77                 	db	119	;'w'
  2944  00E1DF  65                 	db	101	;'e'
  2945  00E1E0  72                 	db	114	;'r'
  2946  00E1E1  0A                 	db	10
  2947  00E1E2  0D                 	db	13
  2948  00E1E3  0A                 	db	10
  2949  00E1E4  0D                 	db	13
  2950  00E1E5  4F                 	db	79	;'O'
  2951  00E1E6  75                 	db	117	;'u'
  2952  00E1E7  74                 	db	116	;'t'
  2953  00E1E8  70                 	db	112	;'p'
  2954  00E1E9  75                 	db	117	;'u'
  2955  00E1EA  74                 	db	116	;'t'
  2956  00E1EB  20                 	db	32
  2957  00E1EC  43                 	db	67	;'C'
  2958  00E1ED  6F                 	db	111	;'o'
  2959  00E1EE  6E                 	db	110	;'n'
  2960  00E1EF  74                 	db	116	;'t'
  2961  00E1F0  72                 	db	114	;'r'
  2962  00E1F1  6F                 	db	111	;'o'
  2963  00E1F2  6C                 	db	108	;'l'
  2964  00E1F3  20                 	db	32
  2965  00E1F4  43                 	db	67	;'C'
  2966  00E1F5  6F                 	db	111	;'o'
  2967  00E1F6  6D                 	db	109	;'m'
  2968  00E1F7  6D                 	db	109	;'m'
  2969  00E1F8  61                 	db	97	;'a'
  2970  00E1F9  6E                 	db	110	;'n'
  2971  00E1FA  64                 	db	100	;'d'
  2972  00E1FB  73                 	db	115	;'s'
  2973  00E1FC  3A                 	db	58	;':'
  2974  00E1FD  20                 	db	32
  2975  00E1FE  43                 	db	67	;'C'
  2976  00E1FF  6F                 	db	111	;'o'
  2977  00E200  6E                 	db	110	;'n'
  2978  00E201  74                 	db	116	;'t'
  2979  00E202  72                 	db	114	;'r'
  2980  00E203  6F                 	db	111	;'o'
  2981  00E204  6C                 	db	108	;'l'
  2982  00E205  20                 	db	32
  2983  00E206  74                 	db	116	;'t'
  2984  00E207  68                 	db	104	;'h'
  2985  00E208  65                 	db	101	;'e'
  2986  00E209  20                 	db	32
  2987  00E20A  6F                 	db	111	;'o'
  2988  00E20B  75                 	db	117	;'u'
  2989  00E20C  74                 	db	116	;'t'
  2990  00E20D  70                 	db	112	;'p'
  2991  00E20E  75                 	db	117	;'u'
  2992  00E20F  74                 	db	116	;'t'
  2993  00E210  20                 	db	32
  2994  00E211  73                 	db	115	;'s'
  2995  00E212  74                 	db	116	;'t'
  2996  00E213  61                 	db	97	;'a'
  2997  00E214  74                 	db	116	;'t'
  2998  00E215  65                 	db	101	;'e'
  2999  00E216  20                 	db	32
  3000  00E217  61                 	db	97	;'a'
  3001  00E218  6E                 	db	110	;'n'
  3002  00E219  64                 	db	100	;'d'
  3003  00E21A  20                 	db	32
  3004  00E21B  64                 	db	100	;'d'
  3005  00E21C  69                 	db	105	;'i'
  3006  00E21D  6D                 	db	109	;'m'
  3007  00E21E  6D                 	db	109	;'m'
  3008  00E21F  69                 	db	105	;'i'
  3009  00E220  6E                 	db	110	;'n'
  3010  00E221  67                 	db	103	;'g'
  3011  00E222  20                 	db	32
  3012  00E223  66                 	db	102	;'f'
  3013  00E224  65                 	db	101	;'e'
  3014  00E225  61                 	db	97	;'a'
  3015  00E226  74                 	db	116	;'t'
  3016  00E227  75                 	db	117	;'u'
  3017  00E228  72                 	db	114	;'r'
  3018  00E229  65                 	db	101	;'e'
  3019  00E22A  73                 	db	115	;'s'
  3020  00E22B  0A                 	db	10
  3021  00E22C  0D                 	db	13
  3022  00E22D  20                 	db	32
  3023  00E22E  20                 	db	32
  3024  00E22F  20                 	db	32
  3025  00E230  45                 	db	69	;'E'
  3026  00E231  6E                 	db	110	;'n'
  3027  00E232  61                 	db	97	;'a'
  3028  00E233  62                 	db	98	;'b'
  3029  00E234  6C                 	db	108	;'l'
  3030  00E235  65                 	db	101	;'e'
  3031  00E236  20                 	db	32
  3032  00E237  44                 	db	68	;'D'
  3033  00E238  69                 	db	105	;'i'
  3034  00E239  6D                 	db	109	;'m'
  3035  00E23A  6D                 	db	109	;'m'
  3036  00E23B  69                 	db	105	;'i'
  3037  00E23C  6E                 	db	110	;'n'
  3038  00E23D  67                 	db	103	;'g'
  3039  00E23E  3A                 	db	58	;':'
  3040  00E23F  20                 	db	32
  3041  00E240  45                 	db	69	;'E'
  3042  00E241  6E                 	db	110	;'n'
  3043  00E242  61                 	db	97	;'a'
  3044  00E243  62                 	db	98	;'b'
  3045  00E244  6C                 	db	108	;'l'
  3046  00E245  65                 	db	101	;'e'
  3047  00E246  20                 	db	32
  3048  00E247  54                 	db	84	;'T'
  3049  00E248  52                 	db	82	;'R'
  3050  00E249  49                 	db	73	;'I'
  3051  00E24A  41                 	db	65	;'A'
  3052  00E24B  43                 	db	67	;'C'
  3053  00E24C  20                 	db	32
  3054  00E24D  6F                 	db	111	;'o'
  3055  00E24E  75                 	db	117	;'u'
  3056  00E24F  74                 	db	116	;'t'
  3057  00E250  70                 	db	112	;'p'
  3058  00E251  75                 	db	117	;'u'
  3059  00E252  74                 	db	116	;'t'
  3060  00E253  20                 	db	32
  3061  00E254  64                 	db	100	;'d'
  3062  00E255  69                 	db	105	;'i'
  3063  00E256  6D                 	db	109	;'m'
  3064  00E257  6D                 	db	109	;'m'
  3065  00E258  69                 	db	105	;'i'
  3066  00E259  6E                 	db	110	;'n'
  3067  00E25A  67                 	db	103	;'g'
  3068  00E25B  0A                 	db	10
  3069  00E25C  0D                 	db	13
  3070  00E25D  20                 	db	32
  3071  00E25E  20                 	db	32
  3072  00E25F  20                 	db	32
  3073  00E260  44                 	db	68	;'D'
  3074  00E261  69                 	db	105	;'i'
  3075  00E262  73                 	db	115	;'s'
  3076  00E263  61                 	db	97	;'a'
  3077  00E264  62                 	db	98	;'b'
  3078  00E265  6C                 	db	108	;'l'
  3079  00E266  65                 	db	101	;'e'
  3080  00E267  20                 	db	32
  3081  00E268  44                 	db	68	;'D'
  3082  00E269  69                 	db	105	;'i'
  3083  00E26A  6D                 	db	109	;'m'
  3084  00E26B  6D                 	db	109	;'m'
  3085  00E26C  69                 	db	105	;'i'
  3086  00E26D  6E                 	db	110	;'n'
  3087  00E26E  67                 	db	103	;'g'
  3088  00E26F  3A                 	db	58	;':'
  3089  00E270  20                 	db	32
  3090  00E271  44                 	db	68	;'D'
  3091  00E272  69                 	db	105	;'i'
  3092  00E273  73                 	db	115	;'s'
  3093  00E274  61                 	db	97	;'a'
  3094  00E275  62                 	db	98	;'b'
  3095  00E276  6C                 	db	108	;'l'
  3096  00E277  65                 	db	101	;'e'
  3097  00E278  20                 	db	32
  3098  00E279  54                 	db	84	;'T'
  3099  00E27A  52                 	db	82	;'R'
  3100  00E27B  49                 	db	73	;'I'
  3101  00E27C  41                 	db	65	;'A'
  3102  00E27D  43                 	db	67	;'C'
  3103  00E27E  20                 	db	32
  3104  00E27F  6F                 	db	111	;'o'
  3105  00E280  75                 	db	117	;'u'
  3106  00E281  74                 	db	116	;'t'
  3107  00E282  70                 	db	112	;'p'
  3108  00E283  75                 	db	117	;'u'
  3109  00E284  74                 	db	116	;'t'
  3110  00E285  20                 	db	32
  3111  00E286  64                 	db	100	;'d'
  3112  00E287  69                 	db	105	;'i'
  3113  00E288  6D                 	db	109	;'m'
  3114  00E289  6D                 	db	109	;'m'
  3115  00E28A  69                 	db	105	;'i'
  3116  00E28B  6E                 	db	110	;'n'
  3117  00E28C  67                 	db	103	;'g'
  3118  00E28D  0A                 	db	10
  3119  00E28E  0D                 	db	13
  3120  00E28F  20                 	db	32
  3121  00E290  20                 	db	32
  3122  00E291  20                 	db	32
  3123  00E292  45                 	db	69	;'E'
  3124  00E293  6E                 	db	110	;'n'
  3125  00E294  61                 	db	97	;'a'
  3126  00E295  62                 	db	98	;'b'
  3127  00E296  6C                 	db	108	;'l'
  3128  00E297  65                 	db	101	;'e'
  3129  00E298  20                 	db	32
  3130  00E299  4C                 	db	76	;'L'
  3131  00E29A  6F                 	db	111	;'o'
  3132  00E29B  61                 	db	97	;'a'
  3133  00E29C  64                 	db	100	;'d'
  3134  00E29D  3A                 	db	58	;':'
  3135  00E29E  20                 	db	32
  3136  00E29F  45                 	db	69	;'E'
  3137  00E2A0  6E                 	db	110	;'n'
  3138  00E2A1  61                 	db	97	;'a'
  3139  00E2A2  62                 	db	98	;'b'
  3140  00E2A3  6C                 	db	108	;'l'
  3141  00E2A4  65                 	db	101	;'e'
  3142  00E2A5  73                 	db	115	;'s'
  3143  00E2A6  20                 	db	32
  3144  00E2A7  74                 	db	116	;'t'
  3145  00E2A8  68                 	db	104	;'h'
  3146  00E2A9  65                 	db	101	;'e'
  3147  00E2AA  20                 	db	32
  3148  00E2AB  6F                 	db	111	;'o'
  3149  00E2AC  75                 	db	117	;'u'
  3150  00E2AD  74                 	db	116	;'t'
  3151  00E2AE  70                 	db	112	;'p'
  3152  00E2AF  75                 	db	117	;'u'
  3153  00E2B0  74                 	db	116	;'t'
  3154  00E2B1  20                 	db	32
  3155  00E2B2  54                 	db	84	;'T'
  3156  00E2B3  52                 	db	82	;'R'
  3157  00E2B4  49                 	db	73	;'I'
  3158  00E2B5  41                 	db	65	;'A'
  3159  00E2B6  43                 	db	67	;'C'
  3160  00E2B7  20                 	db	32
  3161  00E2B8  77                 	db	119	;'w'
  3162  00E2B9  69                 	db	105	;'i'
  3163  00E2BA  74                 	db	116	;'t'
  3164  00E2BB  68                 	db	104	;'h'
  3165  00E2BC  20                 	db	32
  3166  00E2BD  64                 	db	100	;'d'
  3167  00E2BE  69                 	db	105	;'i'
  3168  00E2BF  6D                 	db	109	;'m'
  3169  00E2C0  6D                 	db	109	;'m'
  3170  00E2C1  69                 	db	105	;'i'
  3171  00E2C2  6E                 	db	110	;'n'
  3172  00E2C3  67                 	db	103	;'g'
  3173  00E2C4  20                 	db	32
  3174  00E2C5  64                 	db	100	;'d'
  3175  00E2C6  69                 	db	105	;'i'
  3176  00E2C7  73                 	db	115	;'s'
  3177  00E2C8  61                 	db	97	;'a'
  3178  00E2C9  62                 	db	98	;'b'
  3179  00E2CA  6C                 	db	108	;'l'
  3180  00E2CB  65                 	db	101	;'e'
  3181  00E2CC  64                 	db	100	;'d'
  3182  00E2CD  0A                 	db	10
  3183  00E2CE  0D                 	db	13
  3184  00E2CF  20                 	db	32
  3185  00E2D0  20                 	db	32
  3186  00E2D1  20                 	db	32
  3187  00E2D2  44                 	db	68	;'D'
  3188  00E2D3  69                 	db	105	;'i'
  3189  00E2D4  73                 	db	115	;'s'
  3190  00E2D5  61                 	db	97	;'a'
  3191  00E2D6  62                 	db	98	;'b'
  3192  00E2D7  6C                 	db	108	;'l'
  3193  00E2D8  65                 	db	101	;'e'
  3194  00E2D9  20                 	db	32
  3195  00E2DA  4C                 	db	76	;'L'
  3196  00E2DB  6F                 	db	111	;'o'
  3197  00E2DC  61                 	db	97	;'a'
  3198  00E2DD  64                 	db	100	;'d'
  3199  00E2DE  3A                 	db	58	;':'
  3200  00E2DF  20                 	db	32
  3201  00E2E0  44                 	db	68	;'D'
  3202  00E2E1  69                 	db	105	;'i'
  3203  00E2E2  73                 	db	115	;'s'
  3204  00E2E3  61                 	db	97	;'a'
  3205  00E2E4  62                 	db	98	;'b'
  3206  00E2E5  6C                 	db	108	;'l'
  3207  00E2E6  65                 	db	101	;'e'
  3208  00E2E7  73                 	db	115	;'s'
  3209  00E2E8  20                 	db	32
  3210  00E2E9  74                 	db	116	;'t'
  3211  00E2EA  68                 	db	104	;'h'
  3212  00E2EB  65                 	db	101	;'e'
  3213  00E2EC  20                 	db	32
  3214  00E2ED  6F                 	db	111	;'o'
  3215  00E2EE  75                 	db	117	;'u'
  3216  00E2EF  74                 	db	116	;'t'
  3217  00E2F0  70                 	db	112	;'p'
  3218  00E2F1  75                 	db	117	;'u'
  3219  00E2F2  74                 	db	116	;'t'
  3220  00E2F3  20                 	db	32
  3221  00E2F4  54                 	db	84	;'T'
  3222  00E2F5  52                 	db	82	;'R'
  3223  00E2F6  49                 	db	73	;'I'
  3224  00E2F7  41                 	db	65	;'A'
  3225  00E2F8  43                 	db	67	;'C'
  3226  00E2F9  20                 	db	32
  3227  00E2FA  63                 	db	99	;'c'
  3228  00E2FB  6F                 	db	111	;'o'
  3229  00E2FC  6D                 	db	109	;'m'
  3230  00E2FD  70                 	db	112	;'p'
  3231  00E2FE  6C                 	db	108	;'l'
  3232  00E2FF  65                 	db	101	;'e'
  3233  00E300  74                 	db	116	;'t'
  3234  00E301  65                 	db	101	;'e'
  3235  00E302  6C                 	db	108	;'l'
  3236  00E303  79                 	db	121	;'y'
  3237  00E304  0A                 	db	10
  3238  00E305  0D                 	db	13
  3239  00E306  20                 	db	32
  3240  00E307  20                 	db	32
  3241  00E308  20                 	db	32
  3242  00E309  4C                 	db	76	;'L'
  3243  00E30A  6F                 	db	111	;'o'
  3244  00E30B  61                 	db	97	;'a'
  3245  00E30C  64                 	db	100	;'d'
  3246  00E30D  20                 	db	32
  3247  00E30E  45                 	db	69	;'E'
  3248  00E30F  6E                 	db	110	;'n'
  3249  00E310  61                 	db	97	;'a'
  3250  00E311  62                 	db	98	;'b'
  3251  00E312  6C                 	db	108	;'l'
  3252  00E313  65                 	db	101	;'e'
  3253  00E314  64                 	db	100	;'d'
  3254  00E315  3F                 	db	63	;'?'
  3255  00E316  3A                 	db	58	;':'
  3256  00E317  20                 	db	32
  3257  00E318  52                 	db	82	;'R'
  3258  00E319  65                 	db	101	;'e'
  3259  00E31A  74                 	db	116	;'t'
  3260  00E31B  75                 	db	117	;'u'
  3261  00E31C  72                 	db	114	;'r'
  3262  00E31D  6E                 	db	110	;'n'
  3263  00E31E  73                 	db	115	;'s'
  3264  00E31F  20                 	db	32
  3265  00E320  69                 	db	105	;'i'
  3266  00E321  66                 	db	102	;'f'
  3267  00E322  20                 	db	32
  3268  00E323  74                 	db	116	;'t'
  3269  00E324  68                 	db	104	;'h'
  3270  00E325  65                 	db	101	;'e'
  3271  00E326  20                 	db	32
  3272  00E327  6F                 	db	111	;'o'
  3273  00E328  75                 	db	117	;'u'
  3274  00E329  74                 	db	116	;'t'
  3275  00E32A  70                 	db	112	;'p'
  3276  00E32B  75                 	db	117	;'u'
  3277  00E32C  74                 	db	116	;'t'
  3278  00E32D  20                 	db	32
  3279  00E32E  6C                 	db	108	;'l'
  3280  00E32F  6F                 	db	111	;'o'
  3281  00E330  61                 	db	97	;'a'
  3282  00E331  64                 	db	100	;'d'
  3283  00E332  20                 	db	32
  3284  00E333  69                 	db	105	;'i'
  3285  00E334  73                 	db	115	;'s'
  3286  00E335  20                 	db	32
  3287  00E336  65                 	db	101	;'e'
  3288  00E337  6E                 	db	110	;'n'
  3289  00E338  61                 	db	97	;'a'
  3290  00E339  62                 	db	98	;'b'
  3291  00E33A  6C                 	db	108	;'l'
  3292  00E33B  65                 	db	101	;'e'
  3293  00E33C  64                 	db	100	;'d'
  3294  00E33D  20                 	db	32
  3295  00E33E  6F                 	db	111	;'o'
  3296  00E33F  72                 	db	114	;'r'
  3297  00E340  20                 	db	32
  3298  00E341  64                 	db	100	;'d'
  3299  00E342  69                 	db	105	;'i'
  3300  00E343  73                 	db	115	;'s'
  3301  00E344  61                 	db	97	;'a'
  3302  00E345  62                 	db	98	;'b'
  3303  00E346  6C                 	db	108	;'l'
  3304  00E347  65                 	db	101	;'e'
  3305  00E348  64                 	db	100	;'d'
  3306  00E349  0A                 	db	10
  3307  00E34A  0D                 	db	13
  3308  00E34B  20                 	db	32
  3309  00E34C  20                 	db	32
  3310  00E34D  20                 	db	32
  3311  00E34E  44                 	db	68	;'D'
  3312  00E34F  69                 	db	105	;'i'
  3313  00E350  6D                 	db	109	;'m'
  3314  00E351  6D                 	db	109	;'m'
  3315  00E352  69                 	db	105	;'i'
  3316  00E353  6E                 	db	110	;'n'
  3317  00E354  67                 	db	103	;'g'
  3318  00E355  20                 	db	32
  3319  00E356  45                 	db	69	;'E'
  3320  00E357  6E                 	db	110	;'n'
  3321  00E358  61                 	db	97	;'a'
  3322  00E359  62                 	db	98	;'b'
  3323  00E35A  6C                 	db	108	;'l'
  3324  00E35B  65                 	db	101	;'e'
  3325  00E35C  64                 	db	100	;'d'
  3326  00E35D  3F                 	db	63	;'?'
  3327  00E35E  3A                 	db	58	;':'
  3328  00E35F  20                 	db	32
  3329  00E360  52                 	db	82	;'R'
  3330  00E361  65                 	db	101	;'e'
  3331  00E362  74                 	db	116	;'t'
  3332  00E363  75                 	db	117	;'u'
  3333  00E364  72                 	db	114	;'r'
  3334  00E365  6E                 	db	110	;'n'
  3335  00E366  73                 	db	115	;'s'
  3336  00E367  20                 	db	32
  3337  00E368  69                 	db	105	;'i'
  3338  00E369  66                 	db	102	;'f'
  3339  00E36A  20                 	db	32
  3340  00E36B  64                 	db	100	;'d'
  3341  00E36C  69                 	db	105	;'i'
  3342  00E36D  6D                 	db	109	;'m'
  3343  00E36E  6D                 	db	109	;'m'
  3344  00E36F  69                 	db	105	;'i'
  3345  00E370  6E                 	db	110	;'n'
  3346  00E371  67                 	db	103	;'g'
  3347  00E372  20                 	db	32
  3348  00E373  6F                 	db	111	;'o'
  3349  00E374  66                 	db	102	;'f'
  3350  00E375  20                 	db	32
  3351  00E376  74                 	db	116	;'t'
  3352  00E377  68                 	db	104	;'h'
  3353  00E378  65                 	db	101	;'e'
  3354  00E379  20                 	db	32
  3355  00E37A  6F                 	db	111	;'o'
  3356  00E37B  75                 	db	117	;'u'
  3357  00E37C  74                 	db	116	;'t'
  3358  00E37D  70                 	db	112	;'p'
  3359  00E37E  75                 	db	117	;'u'
  3360  00E37F  74                 	db	116	;'t'
  3361  00E380  20                 	db	32
  3362  00E381  6C                 	db	108	;'l'
  3363  00E382  6F                 	db	111	;'o'
  3364  00E383  61                 	db	97	;'a'
  3365  00E384  64                 	db	100	;'d'
  3366  00E385  20                 	db	32
  3367  00E386  69                 	db	105	;'i'
  3368  00E387  73                 	db	115	;'s'
  3369  00E388  20                 	db	32
  3370  00E389  65                 	db	101	;'e'
  3371  00E38A  6E                 	db	110	;'n'
  3372  00E38B  61                 	db	97	;'a'
  3373  00E38C  62                 	db	98	;'b'
  3374  00E38D  6C                 	db	108	;'l'
  3375  00E38E  65                 	db	101	;'e'
  3376  00E38F  64                 	db	100	;'d'
  3377  00E390  20                 	db	32
  3378  00E391  6F                 	db	111	;'o'
  3379  00E392  72                 	db	114	;'r'
  3380  00E393  20                 	db	32
  3381  00E394  6E                 	db	110	;'n'
  3382  00E395  6F                 	db	111	;'o'
  3383  00E396  74                 	db	116	;'t'
  3384  00E397  0A                 	db	10
  3385  00E398  0D                 	db	13
  3386  00E399  20                 	db	32
  3387  00E39A  20                 	db	32
  3388  00E39B  20                 	db	32
  3389  00E39C  53                 	db	83	;'S'
  3390  00E39D  65                 	db	101	;'e'
  3391  00E39E  74                 	db	116	;'t'
  3392  00E39F  20                 	db	32
  3393  00E3A0  44                 	db	68	;'D'
  3394  00E3A1  69                 	db	105	;'i'
  3395  00E3A2  6D                 	db	109	;'m'
  3396  00E3A3  6D                 	db	109	;'m'
  3397  00E3A4  69                 	db	105	;'i'
  3398  00E3A5  6E                 	db	110	;'n'
  3399  00E3A6  67                 	db	103	;'g'
  3400  00E3A7  20                 	db	32
  3401  00E3A8  50                 	db	80	;'P'
  3402  00E3A9  65                 	db	101	;'e'
  3403  00E3AA  72                 	db	114	;'r'
  3404  00E3AB  63                 	db	99	;'c'
  3405  00E3AC  65                 	db	101	;'e'
  3406  00E3AD  6E                 	db	110	;'n'
  3407  00E3AE  74                 	db	116	;'t'
  3408  00E3AF  61                 	db	97	;'a'
  3409  00E3B0  67                 	db	103	;'g'
  3410  00E3B1  65                 	db	101	;'e'
  3411  00E3B2  3A                 	db	58	;':'
  3412  00E3B3  20                 	db	32
  3413  00E3B4  3C                 	db	60	;'<'
  3414  00E3B5  78                 	db	120	;'x'
  3415  00E3B6  3E                 	db	62	;'>'
  3416  00E3B7  3A                 	db	58	;':'
  3417  00E3B8  20                 	db	32
  3418  00E3B9  53                 	db	83	;'S'
  3419  00E3BA  65                 	db	101	;'e'
  3420  00E3BB  74                 	db	116	;'t'
  3421  00E3BC  73                 	db	115	;'s'
  3422  00E3BD  20                 	db	32
  3423  00E3BE  74                 	db	116	;'t'
  3424  00E3BF  68                 	db	104	;'h'
  3425  00E3C0  65                 	db	101	;'e'
  3426  00E3C1  20                 	db	32
  3427  00E3C2  6F                 	db	111	;'o'
  3428  00E3C3  75                 	db	117	;'u'
  3429  00E3C4  74                 	db	116	;'t'
  3430  00E3C5  70                 	db	112	;'p'
  3431  00E3C6  75                 	db	117	;'u'
  3432  00E3C7  74                 	db	116	;'t'
  3433  00E3C8  20                 	db	32
  3434  00E3C9  64                 	db	100	;'d'
  3435  00E3CA  69                 	db	105	;'i'
  3436  00E3CB  6D                 	db	109	;'m'
  3437  00E3CC  6D                 	db	109	;'m'
  3438  00E3CD  69                 	db	105	;'i'
  3439  00E3CE  6E                 	db	110	;'n'
  3440  00E3CF  67                 	db	103	;'g'
  3441  00E3D0  20                 	db	32
  3442  00E3D1  70                 	db	112	;'p'
  3443  00E3D2  65                 	db	101	;'e'
  3444  00E3D3  72                 	db	114	;'r'
  3445  00E3D4  63                 	db	99	;'c'
  3446  00E3D5  65                 	db	101	;'e'
  3447  00E3D6  6E                 	db	110	;'n'
  3448  00E3D7  74                 	db	116	;'t'
  3449  00E3D8  61                 	db	97	;'a'
  3450  00E3D9  67                 	db	103	;'g'
  3451  00E3DA  65                 	db	101	;'e'
  3452  00E3DB  20                 	db	32
  3453  00E3DC  61                 	db	97	;'a'
  3454  00E3DD  73                 	db	115	;'s'
  3455  00E3DE  20                 	db	32
  3456  00E3DF  78                 	db	120	;'x'
  3457  00E3E0  20                 	db	32
  3458  00E3E1  70                 	db	112	;'p'
  3459  00E3E2  65                 	db	101	;'e'
  3460  00E3E3  72                 	db	114	;'r'
  3461  00E3E4  63                 	db	99	;'c'
  3462  00E3E5  65                 	db	101	;'e'
  3463  00E3E6  6E                 	db	110	;'n'
  3464  00E3E7  74                 	db	116	;'t'
  3465  00E3E8  0A                 	db	10
  3466  00E3E9  0D                 	db	13
  3467  00E3EA  0A                 	db	10
  3468  00E3EB  0D                 	db	13
  3469  00E3EC  00                 	db	0
  3470  00E3ED                     STR_137:
  3471  00E3ED  4C                 	db	76	;'L'
  3472  00E3EE  69                 	db	105	;'i'
  3473  00E3EF  73                 	db	115	;'s'
  3474  00E3F0  74                 	db	116	;'t'
  3475  00E3F1  20                 	db	32
  3476  00E3F2  6F                 	db	111	;'o'
  3477  00E3F3  66                 	db	102	;'f'
  3478  00E3F4  20                 	db	32
  3479  00E3F5  73                 	db	115	;'s'
  3480  00E3F6  75                 	db	117	;'u'
  3481  00E3F7  70                 	db	112	;'p'
  3482  00E3F8  70                 	db	112	;'p'
  3483  00E3F9  6F                 	db	111	;'o'
  3484  00E3FA  72                 	db	114	;'r'
  3485  00E3FB  74                 	db	116	;'t'
  3486  00E3FC  65                 	db	101	;'e'
  3487  00E3FD  64                 	db	100	;'d'
  3488  00E3FE  20                 	db	32
  3489  00E3FF  44                 	db	68	;'D'
  3490  00E400  65                 	db	101	;'e'
  3491  00E401  76                 	db	118	;'v'
  3492  00E402  69                 	db	105	;'i'
  3493  00E403  63                 	db	99	;'c'
  3494  00E404  65                 	db	101	;'e'
  3495  00E405  20                 	db	32
  3496  00E406  43                 	db	67	;'C'
  3497  00E407  6F                 	db	111	;'o'
  3498  00E408  6E                 	db	110	;'n'
  3499  00E409  74                 	db	116	;'t'
  3500  00E40A  72                 	db	114	;'r'
  3501  00E40B  6F                 	db	111	;'o'
  3502  00E40C  6C                 	db	108	;'l'
  3503  00E40D  20                 	db	32
  3504  00E40E  43                 	db	67	;'C'
  3505  00E40F  6F                 	db	111	;'o'
  3506  00E410  6D                 	db	109	;'m'
  3507  00E411  6D                 	db	109	;'m'
  3508  00E412  61                 	db	97	;'a'
  3509  00E413  6E                 	db	110	;'n'
  3510  00E414  64                 	db	100	;'d'
  3511  00E415  73                 	db	115	;'s'
  3512  00E416  3A                 	db	58	;':'
  3513  00E417  0A                 	db	10
  3514  00E418  0D                 	db	13
  3515  00E419  20                 	db	32
  3516  00E41A  20                 	db	32
  3517  00E41B  20                 	db	32
  3518  00E41C  52                 	db	82	;'R'
  3519  00E41D  65                 	db	101	;'e'
  3520  00E41E  73                 	db	115	;'s'
  3521  00E41F  65                 	db	101	;'e'
  3522  00E420  74                 	db	116	;'t'
  3523  00E421  3A                 	db	58	;':'
  3524  00E422  20                 	db	32
  3525  00E423  43                 	db	67	;'C'
  3526  00E424  6C                 	db	108	;'l'
  3527  00E425  65                 	db	101	;'e'
  3528  00E426  61                 	db	97	;'a'
  3529  00E427  72                 	db	114	;'r'
  3530  00E428  73                 	db	115	;'s'
  3531  00E429  20                 	db	32
  3532  00E42A  74                 	db	116	;'t'
  3533  00E42B  68                 	db	104	;'h'
  3534  00E42C  65                 	db	101	;'e'
  3535  00E42D  20                 	db	32
  3536  00E42E  74                 	db	116	;'t'
  3537  00E42F  65                 	db	101	;'e'
  3538  00E430  72                 	db	114	;'r'
  3539  00E431  6D                 	db	109	;'m'
  3540  00E432  69                 	db	105	;'i'
  3541  00E433  6E                 	db	110	;'n'
  3542  00E434  61                 	db	97	;'a'
  3543  00E435  6C                 	db	108	;'l'
  3544  00E436  20                 	db	32
  3545  00E437  61                 	db	97	;'a'
  3546  00E438  6E                 	db	110	;'n'
  3547  00E439  64                 	db	100	;'d'
  3548  00E43A  20                 	db	32
  3549  00E43B  72                 	db	114	;'r'
  3550  00E43C  65                 	db	101	;'e'
  3551  00E43D  73                 	db	115	;'s'
  3552  00E43E  65                 	db	101	;'e'
  3553  00E43F  74                 	db	116	;'t'
  3554  00E440  73                 	db	115	;'s'
  3555  00E441  20                 	db	32
  3556  00E442  74                 	db	116	;'t'
  3557  00E443  68                 	db	104	;'h'
  3558  00E444  65                 	db	101	;'e'
  3559  00E445  20                 	db	32
  3560  00E446  6D                 	db	109	;'m'
  3561  00E447  69                 	db	105	;'i'
  3562  00E448  63                 	db	99	;'c'
  3563  00E449  72                 	db	114	;'r'
  3564  00E44A  6F                 	db	111	;'o'
  3565  00E44B  0A                 	db	10
  3566  00E44C  0D                 	db	13
  3567  00E44D  20                 	db	32
  3568  00E44E  20                 	db	32
  3569  00E44F  20                 	db	32
  3570  00E450  43                 	db	67	;'C'
  3571  00E451  6C                 	db	108	;'l'
  3572  00E452  65                 	db	101	;'e'
  3573  00E453  61                 	db	97	;'a'
  3574  00E454  72                 	db	114	;'r'
  3575  00E455  3A                 	db	58	;':'
  3576  00E456  20                 	db	32
  3577  00E457  43                 	db	67	;'C'
  3578  00E458  6C                 	db	108	;'l'
  3579  00E459  65                 	db	101	;'e'
  3580  00E45A  61                 	db	97	;'a'
  3581  00E45B  72                 	db	114	;'r'
  3582  00E45C  73                 	db	115	;'s'
  3583  00E45D  20                 	db	32
  3584  00E45E  74                 	db	116	;'t'
  3585  00E45F  68                 	db	104	;'h'
  3586  00E460  65                 	db	101	;'e'
  3587  00E461  20                 	db	32
  3588  00E462  74                 	db	116	;'t'
  3589  00E463  65                 	db	101	;'e'
  3590  00E464  72                 	db	114	;'r'
  3591  00E465  6D                 	db	109	;'m'
  3592  00E466  69                 	db	105	;'i'
  3593  00E467  6E                 	db	110	;'n'
  3594  00E468  61                 	db	97	;'a'
  3595  00E469  6C                 	db	108	;'l'
  3596  00E46A  20                 	db	32
  3597  00E46B  62                 	db	98	;'b'
  3598  00E46C  75                 	db	117	;'u'
  3599  00E46D  74                 	db	116	;'t'
  3600  00E46E  20                 	db	32
  3601  00E46F  64                 	db	100	;'d'
  3602  00E470  6F                 	db	111	;'o'
  3603  00E471  65                 	db	101	;'e'
  3604  00E472  73                 	db	115	;'s'
  3605  00E473  6E                 	db	110	;'n'
  3606  00E474  27                 	db	39
  3607  00E475  74                 	db	116	;'t'
  3608  00E476  20                 	db	32
  3609  00E477  72                 	db	114	;'r'
  3610  00E478  65                 	db	101	;'e'
  3611  00E479  73                 	db	115	;'s'
  3612  00E47A  65                 	db	101	;'e'
  3613  00E47B  74                 	db	116	;'t'
  3614  00E47C  20                 	db	32
  3615  00E47D  74                 	db	116	;'t'
  3616  00E47E  68                 	db	104	;'h'
  3617  00E47F  65                 	db	101	;'e'
  3618  00E480  20                 	db	32
  3619  00E481  6D                 	db	109	;'m'
  3620  00E482  69                 	db	105	;'i'
  3621  00E483  63                 	db	99	;'c'
  3622  00E484  72                 	db	114	;'r'
  3623  00E485  6F                 	db	111	;'o'
  3624  00E486  0A                 	db	10
  3625  00E487  0D                 	db	13
  3626  00E488  20                 	db	32
  3627  00E489  20                 	db	32
  3628  00E48A  20                 	db	32
  3629  00E48B  43                 	db	67	;'C'
  3630  00E48C  61                 	db	97	;'a'
  3631  00E48D  75                 	db	117	;'u'
  3632  00E48E  73                 	db	115	;'s'
  3633  00E48F  65                 	db	101	;'e'
  3634  00E490  20                 	db	32
  3635  00E491  6F                 	db	111	;'o'
  3636  00E492  66                 	db	102	;'f'
  3637  00E493  20                 	db	32
  3638  00E494  52                 	db	82	;'R'
  3639  00E495  65                 	db	101	;'e'
  3640  00E496  73                 	db	115	;'s'
  3641  00E497  65                 	db	101	;'e'
  3642  00E498  74                 	db	116	;'t'
  3643  00E499  3F                 	db	63	;'?'
  3644  00E49A  3A                 	db	58	;':'
  3645  00E49B  20                 	db	32
  3646  00E49C  52                 	db	82	;'R'
  3647  00E49D  65                 	db	101	;'e'
  3648  00E49E  74                 	db	116	;'t'
  3649  00E49F  75                 	db	117	;'u'
  3650  00E4A0  72                 	db	114	;'r'
  3651  00E4A1  6E                 	db	110	;'n'
  3652  00E4A2  73                 	db	115	;'s'
  3653  00E4A3  20                 	db	32
  3654  00E4A4  74                 	db	116	;'t'
  3655  00E4A5  68                 	db	104	;'h'
  3656  00E4A6  65                 	db	101	;'e'
  3657  00E4A7  20                 	db	32
  3658  00E4A8  63                 	db	99	;'c'
  3659  00E4A9  61                 	db	97	;'a'
  3660  00E4AA  75                 	db	117	;'u'
  3661  00E4AB  73                 	db	115	;'s'
  3662  00E4AC  65                 	db	101	;'e'
  3663  00E4AD  20                 	db	32
  3664  00E4AE  6F                 	db	111	;'o'
  3665  00E4AF  66                 	db	102	;'f'
  3666  00E4B0  20                 	db	32
  3667  00E4B1  74                 	db	116	;'t'
  3668  00E4B2  68                 	db	104	;'h'
  3669  00E4B3  65                 	db	101	;'e'
  3670  00E4B4  20                 	db	32
  3671  00E4B5  6D                 	db	109	;'m'
  3672  00E4B6  6F                 	db	111	;'o'
  3673  00E4B7  73                 	db	115	;'s'
  3674  00E4B8  74                 	db	116	;'t'
  3675  00E4B9  20                 	db	32
  3676  00E4BA  72                 	db	114	;'r'
  3677  00E4BB  65                 	db	101	;'e'
  3678  00E4BC  63                 	db	99	;'c'
  3679  00E4BD  65                 	db	101	;'e'
  3680  00E4BE  6E                 	db	110	;'n'
  3681  00E4BF  74                 	db	116	;'t'
  3682  00E4C0  20                 	db	32
  3683  00E4C1  64                 	db	100	;'d'
  3684  00E4C2  65                 	db	101	;'e'
  3685  00E4C3  76                 	db	118	;'v'
  3686  00E4C4  69                 	db	105	;'i'
  3687  00E4C5  63                 	db	99	;'c'
  3688  00E4C6  65                 	db	101	;'e'
  3689  00E4C7  20                 	db	32
  3690  00E4C8  72                 	db	114	;'r'
  3691  00E4C9  65                 	db	101	;'e'
  3692  00E4CA  73                 	db	115	;'s'
  3693  00E4CB  65                 	db	101	;'e'
  3694  00E4CC  74                 	db	116	;'t'
  3695  00E4CD  0A                 	db	10
  3696  00E4CE  0D                 	db	13
  3697  00E4CF  20                 	db	32
  3698  00E4D0  20                 	db	32
  3699  00E4D1  20                 	db	32
  3700  00E4D2  2A                 	db	42
  3701  00E4D3  49                 	db	73	;'I'
  3702  00E4D4  44                 	db	68	;'D'
  3703  00E4D5  4E                 	db	78	;'N'
  3704  00E4D6  3F                 	db	63	;'?'
  3705  00E4D7  3A                 	db	58	;':'
  3706  00E4D8  20                 	db	32
  3707  00E4D9  52                 	db	82	;'R'
  3708  00E4DA  65                 	db	101	;'e'
  3709  00E4DB  74                 	db	116	;'t'
  3710  00E4DC  75                 	db	117	;'u'
  3711  00E4DD  72                 	db	114	;'r'
  3712  00E4DE  6E                 	db	110	;'n'
  3713  00E4DF  73                 	db	115	;'s'
  3714  00E4E0  20                 	db	32
  3715  00E4E1  64                 	db	100	;'d'
  3716  00E4E2  65                 	db	101	;'e'
  3717  00E4E3  76                 	db	118	;'v'
  3718  00E4E4  69                 	db	105	;'i'
  3719  00E4E5  63                 	db	99	;'c'
  3720  00E4E6  65                 	db	101	;'e'
  3721  00E4E7  20                 	db	32
  3722  00E4E8  69                 	db	105	;'i'
  3723  00E4E9  64                 	db	100	;'d'
  3724  00E4EA  65                 	db	101	;'e'
  3725  00E4EB  6E                 	db	110	;'n'
  3726  00E4EC  74                 	db	116	;'t'
  3727  00E4ED  69                 	db	105	;'i'
  3728  00E4EE  66                 	db	102	;'f'
  3729  00E4EF  69                 	db	105	;'i'
  3730  00E4F0  63                 	db	99	;'c'
  3731  00E4F1  61                 	db	97	;'a'
  3732  00E4F2  74                 	db	116	;'t'
  3733  00E4F3  69                 	db	105	;'i'
  3734  00E4F4  6F                 	db	111	;'o'
  3735  00E4F5  6E                 	db	110	;'n'
  3736  00E4F6  20                 	db	32
  3737  00E4F7  73                 	db	115	;'s'
  3738  00E4F8  74                 	db	116	;'t'
  3739  00E4F9  72                 	db	114	;'r'
  3740  00E4FA  69                 	db	105	;'i'
  3741  00E4FB  6E                 	db	110	;'n'
  3742  00E4FC  67                 	db	103	;'g'
  3743  00E4FD  0A                 	db	10
  3744  00E4FE  0D                 	db	13
  3745  00E4FF  20                 	db	32
  3746  00E500  20                 	db	32
  3747  00E501  20                 	db	32
  3748  00E502  44                 	db	68	;'D'
  3749  00E503  65                 	db	101	;'e'
  3750  00E504  76                 	db	118	;'v'
  3751  00E505  69                 	db	105	;'i'
  3752  00E506  63                 	db	99	;'c'
  3753  00E507  65                 	db	101	;'e'
  3754  00E508  20                 	db	32
  3755  00E509  4F                 	db	79	;'O'
  3756  00E50A  6E                 	db	110	;'n'
  3757  00E50B  20                 	db	32
  3758  00E50C  54                 	db	84	;'T'
  3759  00E50D  69                 	db	105	;'i'
  3760  00E50E  6D                 	db	109	;'m'
  3761  00E50F  65                 	db	101	;'e'
  3762  00E510  3F                 	db	63	;'?'
  3763  00E511  3A                 	db	58	;':'
  3764  00E512  20                 	db	32
  3765  00E513  52                 	db	82	;'R'
  3766  00E514  65                 	db	101	;'e'
  3767  00E515  74                 	db	116	;'t'
  3768  00E516  75                 	db	117	;'u'
  3769  00E517  72                 	db	114	;'r'
  3770  00E518  6E                 	db	110	;'n'
  3771  00E519  73                 	db	115	;'s'
  3772  00E51A  20                 	db	32
  3773  00E51B  64                 	db	100	;'d'
  3774  00E51C  65                 	db	101	;'e'
  3775  00E51D  76                 	db	118	;'v'
  3776  00E51E  69                 	db	105	;'i'
  3777  00E51F  63                 	db	99	;'c'
  3778  00E520  65                 	db	101	;'e'
  3779  00E521  20                 	db	32
  3780  00E522  6F                 	db	111	;'o'
  3781  00E523  6E                 	db	110	;'n'
  3782  00E524  20                 	db	32
  3783  00E525  74                 	db	116	;'t'
  3784  00E526  69                 	db	105	;'i'
  3785  00E527  6D                 	db	109	;'m'
  3786  00E528  65                 	db	101	;'e'
  3787  00E529  20                 	db	32
  3788  00E52A  73                 	db	115	;'s'
  3789  00E52B  69                 	db	105	;'i'
  3790  00E52C  6E                 	db	110	;'n'
  3791  00E52D  63                 	db	99	;'c'
  3792  00E52E  65                 	db	101	;'e'
  3793  00E52F  20                 	db	32
  3794  00E530  6C                 	db	108	;'l'
  3795  00E531  61                 	db	97	;'a'
  3796  00E532  73                 	db	115	;'s'
  3797  00E533  74                 	db	116	;'t'
  3798  00E534  20                 	db	32
  3799  00E535  64                 	db	100	;'d'
  3800  00E536  65                 	db	101	;'e'
  3801  00E537  76                 	db	118	;'v'
  3802  00E538  69                 	db	105	;'i'
  3803  00E539  63                 	db	99	;'c'
  3804  00E53A  65                 	db	101	;'e'
  3805  00E53B  20                 	db	32
  3806  00E53C  72                 	db	114	;'r'
  3807  00E53D  65                 	db	101	;'e'
  3808  00E53E  73                 	db	115	;'s'
  3809  00E53F  65                 	db	101	;'e'
  3810  00E540  74                 	db	116	;'t'
  3811  00E541  0A                 	db	10
  3812  00E542  0D                 	db	13
  3813  00E543  20                 	db	32
  3814  00E544  20                 	db	32
  3815  00E545  20                 	db	32
  3816  00E546  44                 	db	68	;'D'
  3817  00E547  65                 	db	101	;'e'
  3818  00E548  76                 	db	118	;'v'
  3819  00E549  69                 	db	105	;'i'
  3820  00E54A  63                 	db	99	;'c'
  3821  00E54B  65                 	db	101	;'e'
  3822  00E54C  20                 	db	32
  3823  00E54D  49                 	db	73	;'I'
  3824  00E54E  44                 	db	68	;'D'
  3825  00E54F  3F                 	db	63	;'?'
  3826  00E550  3A                 	db	58	;':'
  3827  00E551  20                 	db	32
  3828  00E552  52                 	db	82	;'R'
  3829  00E553  65                 	db	101	;'e'
  3830  00E554  74                 	db	116	;'t'
  3831  00E555  75                 	db	117	;'u'
  3832  00E556  72                 	db	114	;'r'
  3833  00E557  6E                 	db	110	;'n'
  3834  00E558  73                 	db	115	;'s'
  3835  00E559  20                 	db	32
  3836  00E55A  64                 	db	100	;'d'
  3837  00E55B  65                 	db	101	;'e'
  3838  00E55C  76                 	db	118	;'v'
  3839  00E55D  69                 	db	105	;'i'
  3840  00E55E  63                 	db	99	;'c'
  3841  00E55F  65                 	db	101	;'e'
  3842  00E560  20                 	db	32
  3843  00E561  49                 	db	73	;'I'
  3844  00E562  44                 	db	68	;'D'
  3845  00E563  20                 	db	32
  3846  00E564  61                 	db	97	;'a'
  3847  00E565  73                 	db	115	;'s'
  3848  00E566  20                 	db	32
  3849  00E567  70                 	db	112	;'p'
  3850  00E568  72                 	db	114	;'r'
  3851  00E569  65                 	db	101	;'e'
  3852  00E56A  2D                 	db	45
  3853  00E56B  70                 	db	112	;'p'
  3854  00E56C  72                 	db	114	;'r'
  3855  00E56D  6F                 	db	111	;'o'
  3856  00E56E  67                 	db	103	;'g'
  3857  00E56F  72                 	db	114	;'r'
  3858  00E570  61                 	db	97	;'a'
  3859  00E571  6D                 	db	109	;'m'
  3860  00E572  6D                 	db	109	;'m'
  3861  00E573  65                 	db	101	;'e'
  3862  00E574  64                 	db	100	;'d'
  3863  00E575  20                 	db	32
  3864  00E576  69                 	db	105	;'i'
  3865  00E577  6E                 	db	110	;'n'
  3866  00E578  20                 	db	32
  3867  00E579  66                 	db	102	;'f'
  3868  00E57A  6C                 	db	108	;'l'
  3869  00E57B  61                 	db	97	;'a'
  3870  00E57C  73                 	db	115	;'s'
  3871  00E57D  68                 	db	104	;'h'
  3872  00E57E  20                 	db	32
  3873  00E57F  6D                 	db	109	;'m'
  3874  00E580  65                 	db	101	;'e'
  3875  00E581  6D                 	db	109	;'m'
  3876  00E582  6F                 	db	111	;'o'
  3877  00E583  72                 	db	114	;'r'
  3878  00E584  79                 	db	121	;'y'
  3879  00E585  0A                 	db	10
  3880  00E586  0D                 	db	13
  3881  00E587  20                 	db	32
  3882  00E588  20                 	db	32
  3883  00E589  20                 	db	32
  3884  00E58A  52                 	db	82	;'R'
  3885  00E58B  65                 	db	101	;'e'
  3886  00E58C  76                 	db	118	;'v'
  3887  00E58D  69                 	db	105	;'i'
  3888  00E58E  73                 	db	115	;'s'
  3889  00E58F  69                 	db	105	;'i'
  3890  00E590  6F                 	db	111	;'o'
  3891  00E591  6E                 	db	110	;'n'
  3892  00E592  20                 	db	32
  3893  00E593  49                 	db	73	;'I'
  3894  00E594  44                 	db	68	;'D'
  3895  00E595  3F                 	db	63	;'?'
  3896  00E596  3A                 	db	58	;':'
  3897  00E597  20                 	db	32
  3898  00E598  52                 	db	82	;'R'
  3899  00E599  65                 	db	101	;'e'
  3900  00E59A  74                 	db	116	;'t'
  3901  00E59B  75                 	db	117	;'u'
  3902  00E59C  72                 	db	114	;'r'
  3903  00E59D  6E                 	db	110	;'n'
  3904  00E59E  73                 	db	115	;'s'
  3905  00E59F  20                 	db	32
  3906  00E5A0  64                 	db	100	;'d'
  3907  00E5A1  65                 	db	101	;'e'
  3908  00E5A2  76                 	db	118	;'v'
  3909  00E5A3  69                 	db	105	;'i'
  3910  00E5A4  63                 	db	99	;'c'
  3911  00E5A5  65                 	db	101	;'e'
  3912  00E5A6  20                 	db	32
  3913  00E5A7  73                 	db	115	;'s'
  3914  00E5A8  69                 	db	105	;'i'
  3915  00E5A9  6C                 	db	108	;'l'
  3916  00E5AA  69                 	db	105	;'i'
  3917  00E5AB  63                 	db	99	;'c'
  3918  00E5AC  6F                 	db	111	;'o'
  3919  00E5AD  6E                 	db	110	;'n'
  3920  00E5AE  20                 	db	32
  3921  00E5AF  72                 	db	114	;'r'
  3922  00E5B0  65                 	db	101	;'e'
  3923  00E5B1  76                 	db	118	;'v'
  3924  00E5B2  69                 	db	105	;'i'
  3925  00E5B3  73                 	db	115	;'s'
  3926  00E5B4  69                 	db	105	;'i'
  3927  00E5B5  6F                 	db	111	;'o'
  3928  00E5B6  6E                 	db	110	;'n'
  3929  00E5B7  20                 	db	32
  3930  00E5B8  49                 	db	73	;'I'
  3931  00E5B9  44                 	db	68	;'D'
  3932  00E5BA  20                 	db	32
  3933  00E5BB  61                 	db	97	;'a'
  3934  00E5BC  73                 	db	115	;'s'
  3935  00E5BD  20                 	db	32
  3936  00E5BE  70                 	db	112	;'p'
  3937  00E5BF  72                 	db	114	;'r'
  3938  00E5C0  65                 	db	101	;'e'
  3939  00E5C1  2D                 	db	45
  3940  00E5C2  70                 	db	112	;'p'
  3941  00E5C3  72                 	db	114	;'r'
  3942  00E5C4  6F                 	db	111	;'o'
  3943  00E5C5  67                 	db	103	;'g'
  3944  00E5C6  72                 	db	114	;'r'
  3945  00E5C7  61                 	db	97	;'a'
  3946  00E5C8  6D                 	db	109	;'m'
  3947  00E5C9  6D                 	db	109	;'m'
  3948  00E5CA  65                 	db	101	;'e'
  3949  00E5CB  64                 	db	100	;'d'
  3950  00E5CC  20                 	db	32
  3951  00E5CD  69                 	db	105	;'i'
  3952  00E5CE  6E                 	db	110	;'n'
  3953  00E5CF  20                 	db	32
  3954  00E5D0  66                 	db	102	;'f'
  3955  00E5D1  6C                 	db	108	;'l'
  3956  00E5D2  61                 	db	97	;'a'
  3957  00E5D3  73                 	db	115	;'s'
  3958  00E5D4  68                 	db	104	;'h'
  3959  00E5D5  20                 	db	32
  3960  00E5D6  6D                 	db	109	;'m'
  3961  00E5D7  65                 	db	101	;'e'
  3962  00E5D8  6D                 	db	109	;'m'
  3963  00E5D9  6F                 	db	111	;'o'
  3964  00E5DA  72                 	db	114	;'r'
  3965  00E5DB  79                 	db	121	;'y'
  3966  00E5DC  0A                 	db	10
  3967  00E5DD  0D                 	db	13
  3968  00E5DE  20                 	db	32
  3969  00E5DF  20                 	db	32
  3970  00E5E0  20                 	db	32
  3971  00E5E1  55                 	db	85	;'U'
  3972  00E5E2  73                 	db	115	;'s'
  3973  00E5E3  65                 	db	101	;'e'
  3974  00E5E4  72                 	db	114	;'r'
  3975  00E5E5  20                 	db	32
  3976  00E5E6  49                 	db	73	;'I'
  3977  00E5E7  44                 	db	68	;'D'
  3978  00E5E8  73                 	db	115	;'s'
  3979  00E5E9  3F                 	db	63	;'?'
  3980  00E5EA  3A                 	db	58	;':'
  3981  00E5EB  20                 	db	32
  3982  00E5EC  52                 	db	82	;'R'
  3983  00E5ED  65                 	db	101	;'e'
  3984  00E5EE  74                 	db	116	;'t'
  3985  00E5EF  75                 	db	117	;'u'
  3986  00E5F0  72                 	db	114	;'r'
  3987  00E5F1  6E                 	db	110	;'n'
  3988  00E5F2  73                 	db	115	;'s'
  3989  00E5F3  20                 	db	32
  3990  00E5F4  61                 	db	97	;'a'
  3991  00E5F5  20                 	db	32
  3992  00E5F6  6C                 	db	108	;'l'
  3993  00E5F7  69                 	db	105	;'i'
  3994  00E5F8  73                 	db	115	;'s'
  3995  00E5F9  74                 	db	116	;'t'
  3996  00E5FA  20                 	db	32
  3997  00E5FB  6F                 	db	111	;'o'
  3998  00E5FC  66                 	db	102	;'f'
  3999  00E5FD  20                 	db	32
  4000  00E5FE  75                 	db	117	;'u'
  4001  00E5FF  73                 	db	115	;'s'
  4002  00E600  65                 	db	101	;'e'
  4003  00E601  72                 	db	114	;'r'
  4004  00E602  20                 	db	32
  4005  00E603  49                 	db	73	;'I'
  4006  00E604  44                 	db	68	;'D'
  4007  00E605  73                 	db	115	;'s'
  4008  00E606  20                 	db	32
  4009  00E607  28                 	db	40
  4010  00E608  64                 	db	100	;'d'
  4011  00E609  69                 	db	105	;'i'
  4012  00E60A  73                 	db	115	;'s'
  4013  00E60B  70                 	db	112	;'p'
  4014  00E60C  6C                 	db	108	;'l'
  4015  00E60D  61                 	db	97	;'a'
  4016  00E60E  79                 	db	121	;'y'
  4017  00E60F  65                 	db	101	;'e'
  4018  00E610  64                 	db	100	;'d'
  4019  00E611  20                 	db	32
  4020  00E612  69                 	db	105	;'i'
  4021  00E613  6E                 	db	110	;'n'
  4022  00E614  20                 	db	32
  4023  00E615  68                 	db	104	;'h'
  4024  00E616  65                 	db	101	;'e'
  4025  00E617  78                 	db	120	;'x'
  4026  00E618  29                 	db	41
  4027  00E619  20                 	db	32
  4028  00E61A  61                 	db	97	;'a'
  4029  00E61B  73                 	db	115	;'s'
  4030  00E61C  20                 	db	32
  4031  00E61D  73                 	db	115	;'s'
  4032  00E61E  74                 	db	116	;'t'
  4033  00E61F  6F                 	db	111	;'o'
  4034  00E620  72                 	db	114	;'r'
  4035  00E621  65                 	db	101	;'e'
  4036  00E622  64                 	db	100	;'d'
  4037  00E623  20                 	db	32
  4038  00E624  69                 	db	105	;'i'
  4039  00E625  6E                 	db	110	;'n'
  4040  00E626  20                 	db	32
  4041  00E627  66                 	db	102	;'f'
  4042  00E628  6C                 	db	108	;'l'
  4043  00E629  61                 	db	97	;'a'
  4044  00E62A  73                 	db	115	;'s'
  4045  00E62B  68                 	db	104	;'h'
  4046  00E62C  20                 	db	32
  4047  00E62D  6D                 	db	109	;'m'
  4048  00E62E  65                 	db	101	;'e'
  4049  00E62F  6D                 	db	109	;'m'
  4050  00E630  6F                 	db	111	;'o'
  4051  00E631  72                 	db	114	;'r'
  4052  00E632  79                 	db	121	;'y'
  4053  00E633  0A                 	db	10
  4054  00E634  0D                 	db	13
  4055  00E635  20                 	db	32
  4056  00E636  20                 	db	32
  4057  00E637  20                 	db	32
  4058  00E638  41                 	db	65	;'A'
  4059  00E639  44                 	db	68	;'D'
  4060  00E63A  43                 	db	67	;'C'
  4061  00E63B  20                 	db	32
  4062  00E63C  45                 	db	69	;'E'
  4063  00E63D  72                 	db	114	;'r'
  4064  00E63E  72                 	db	114	;'r'
  4065  00E63F  6F                 	db	111	;'o'
  4066  00E640  72                 	db	114	;'r'
  4067  00E641  3F                 	db	63	;'?'
  4068  00E642  3A                 	db	58	;':'
  4069  00E643  20                 	db	32
  4070  00E644  52                 	db	82	;'R'
  4071  00E645  65                 	db	101	;'e'
  4072  00E646  74                 	db	116	;'t'
  4073  00E647  75                 	db	117	;'u'
  4074  00E648  72                 	db	114	;'r'
  4075  00E649  6E                 	db	110	;'n'
  4076  00E64A  73                 	db	115	;'s'
  4077  00E64B  20                 	db	32
  4078  00E64C  74                 	db	116	;'t'
  4079  00E64D  68                 	db	104	;'h'
  4080  00E64E  65                 	db	101	;'e'
  4081  00E64F  20                 	db	32
  4082  00E650  63                 	db	99	;'c'
  4083  00E651  61                 	db	97	;'a'
  4084  00E652  75                 	db	117	;'u'
  4085  00E653  73                 	db	115	;'s'
  4086  00E654  65                 	db	101	;'e'
  4087  00E655  20                 	db	32
  4088  00E656  6F                 	db	111	;'o'
  4089  00E657  66                 	db	102	;'f'
  4090  00E658  20                 	db	32
  4091  00E659  61                 	db	97	;'a'
  4092  00E65A  6E                 	db	110	;'n'
  4093  00E65B  20                 	db	32
  4094  00E65C  41                 	db	65	;'A'
  4095  00E65D  44                 	db	68	;'D'
  4096  00E65E  43                 	db	67	;'C'
  4097  00E65F  20                 	db	32
  4098  00E660  65                 	db	101	;'e'
  4099  00E661  72                 	db	114	;'r'
  4100  00E662  72                 	db	114	;'r'
  4101  00E663  6F                 	db	111	;'o'
  4102  00E664  72                 	db	114	;'r'
  4103  00E665  20                 	db	32
  4104  00E666  69                 	db	105	;'i'
  4105  00E667  66                 	db	102	;'f'
  4106  00E668  20                 	db	32
  4107  00E669  61                 	db	97	;'a'
  4108  00E66A  6E                 	db	110	;'n'
  4109  00E66B  20                 	db	32
  4110  00E66C  65                 	db	101	;'e'
  4111  00E66D  72                 	db	114	;'r'
  4112  00E66E  72                 	db	114	;'r'
  4113  00E66F  6F                 	db	111	;'o'
  4114  00E670  72                 	db	114	;'r'
  4115  00E671  20                 	db	32
  4116  00E672  6F                 	db	111	;'o'
  4117  00E673  63                 	db	99	;'c'
  4118  00E674  63                 	db	99	;'c'
  4119  00E675  75                 	db	117	;'u'
  4120  00E676  72                 	db	114	;'r'
  4121  00E677  72                 	db	114	;'r'
  4122  00E678  65                 	db	101	;'e'
  4123  00E679  64                 	db	100	;'d'
  4124  00E67A  0A                 	db	10
  4125  00E67B  0D                 	db	13
  4126  00E67C  20                 	db	32
  4127  00E67D  20                 	db	32
  4128  00E67E  20                 	db	32
  4129  00E67F  43                 	db	67	;'C'
  4130  00E680  6C                 	db	108	;'l'
  4131  00E681  65                 	db	101	;'e'
  4132  00E682  61                 	db	97	;'a'
  4133  00E683  72                 	db	114	;'r'
  4134  00E684  20                 	db	32
  4135  00E685  41                 	db	65	;'A'
  4136  00E686  44                 	db	68	;'D'
  4137  00E687  43                 	db	67	;'C'
  4138  00E688  20                 	db	32
  4139  00E689  45                 	db	69	;'E'
  4140  00E68A  72                 	db	114	;'r'
  4141  00E68B  72                 	db	114	;'r'
  4142  00E68C  6F                 	db	111	;'o'
  4143  00E68D  72                 	db	114	;'r'
  4144  00E68E  3A                 	db	58	;':'
  4145  00E68F  20                 	db	32
  4146  00E690  43                 	db	67	;'C'
  4147  00E691  6C                 	db	108	;'l'
  4148  00E692  65                 	db	101	;'e'
  4149  00E693  61                 	db	97	;'a'
  4150  00E694  72                 	db	114	;'r'
  4151  00E695  73                 	db	115	;'s'
  4152  00E696  20                 	db	32
  4153  00E697  74                 	db	116	;'t'
  4154  00E698  68                 	db	104	;'h'
  4155  00E699  65                 	db	101	;'e'
  4156  00E69A  20                 	db	32
  4157  00E69B  41                 	db	65	;'A'
  4158  00E69C  44                 	db	68	;'D'
  4159  00E69D  43                 	db	67	;'C'
  4160  00E69E  20                 	db	32
  4161  00E69F  65                 	db	101	;'e'
  4162  00E6A0  72                 	db	114	;'r'
  4163  00E6A1  72                 	db	114	;'r'
  4164  00E6A2  6F                 	db	111	;'o'
  4165  00E6A3  72                 	db	114	;'r'
  4166  00E6A4  20                 	db	32
  4167  00E6A5  61                 	db	97	;'a'
  4168  00E6A6  6E                 	db	110	;'n'
  4169  00E6A7  64                 	db	100	;'d'
  4170  00E6A8  20                 	db	32
  4171  00E6A9  72                 	db	114	;'r'
  4172  00E6AA  65                 	db	101	;'e'
  4173  00E6AB  73                 	db	115	;'s'
  4174  00E6AC  75                 	db	117	;'u'
  4175  00E6AD  6D                 	db	109	;'m'
  4176  00E6AE  65                 	db	101	;'e'
  4177  00E6AF  73                 	db	115	;'s'
  4178  00E6B0  20                 	db	32
  4179  00E6B1  41                 	db	65	;'A'
  4180  00E6B2  44                 	db	68	;'D'
  4181  00E6B3  43                 	db	67	;'C'
  4182  00E6B4  20                 	db	32
  4183  00E6B5  63                 	db	99	;'c'
  4184  00E6B6  6F                 	db	111	;'o'
  4185  00E6B7  6E                 	db	110	;'n'
  4186  00E6B8  76                 	db	118	;'v'
  4187  00E6B9  65                 	db	101	;'e'
  4188  00E6BA  72                 	db	114	;'r'
  4189  00E6BB  73                 	db	115	;'s'
  4190  00E6BC  69                 	db	105	;'i'
  4191  00E6BD  6F                 	db	111	;'o'
  4192  00E6BE  6E                 	db	110	;'n'
  4193  00E6BF  73                 	db	115	;'s'
  4194  00E6C0  0A                 	db	10
  4195  00E6C1  0D                 	db	13
  4196  00E6C2  20                 	db	32
  4197  00E6C3  20                 	db	32
  4198  00E6C4  20                 	db	32
  4199  00E6C5  56                 	db	86	;'V'
  4200  00E6C6  43                 	db	67	;'C'
  4201  00E6C7  43                 	db	67	;'C'
  4202  00E6C8  20                 	db	32
  4203  00E6C9  4F                 	db	79	;'O'
  4204  00E6CA  76                 	db	118	;'v'
  4205  00E6CB  65                 	db	101	;'e'
  4206  00E6CC  72                 	db	114	;'r'
  4207  00E6CD  76                 	db	118	;'v'
  4208  00E6CE  6F                 	db	111	;'o'
  4209  00E6CF  6C                 	db	108	;'l'
  4210  00E6D0  74                 	db	116	;'t'
  4211  00E6D1  61                 	db	97	;'a'
  4212  00E6D2  67                 	db	103	;'g'
  4213  00E6D3  65                 	db	101	;'e'
  4214  00E6D4  3F                 	db	63	;'?'
  4215  00E6D5  3A                 	db	58	;':'
  4216  00E6D6  20                 	db	32
  4217  00E6D7  53                 	db	83	;'S'
  4218  00E6D8  74                 	db	116	;'t'
  4219  00E6D9  61                 	db	97	;'a'
  4220  00E6DA  74                 	db	116	;'t'
  4221  00E6DB  65                 	db	101	;'e'
  4222  00E6DC  73                 	db	115	;'s'
  4223  00E6DD  20                 	db	32
  4224  00E6DE  69                 	db	105	;'i'
  4225  00E6DF  66                 	db	102	;'f'
  4226  00E6E0  20                 	db	32
  4227  00E6E1  61                 	db	97	;'a'
  4228  00E6E2  20                 	db	32
  4229  00E6E3  56                 	db	86	;'V'
  4230  00E6E4  43                 	db	67	;'C'
  4231  00E6E5  43                 	db	67	;'C'
  4232  00E6E6  20                 	db	32
  4233  00E6E7  6F                 	db	111	;'o'
  4234  00E6E8  76                 	db	118	;'v'
  4235  00E6E9  65                 	db	101	;'e'
  4236  00E6EA  72                 	db	114	;'r'
  4237  00E6EB  76                 	db	118	;'v'
  4238  00E6EC  6F                 	db	111	;'o'
  4239  00E6ED  6C                 	db	108	;'l'
  4240  00E6EE  74                 	db	116	;'t'
  4241  00E6EF  61                 	db	97	;'a'
  4242  00E6F0  67                 	db	103	;'g'
  4243  00E6F1  65                 	db	101	;'e'
  4244  00E6F2  20                 	db	32
  4245  00E6F3  63                 	db	99	;'c'
  4246  00E6F4  6F                 	db	111	;'o'
  4247  00E6F5  6E                 	db	110	;'n'
  4248  00E6F6  64                 	db	100	;'d'
  4249  00E6F7  69                 	db	105	;'i'
  4250  00E6F8  74                 	db	116	;'t'
  4251  00E6F9  69                 	db	105	;'i'
  4252  00E6FA  6F                 	db	111	;'o'
  4253  00E6FB  6E                 	db	110	;'n'
  4254  00E6FC  20                 	db	32
  4255  00E6FD  68                 	db	104	;'h'
  4256  00E6FE  61                 	db	97	;'a'
  4257  00E6FF  73                 	db	115	;'s'
  4258  00E700  20                 	db	32
  4259  00E701  6F                 	db	111	;'o'
  4260  00E702  63                 	db	99	;'c'
  4261  00E703  63                 	db	99	;'c'
  4262  00E704  75                 	db	117	;'u'
  4263  00E705  72                 	db	114	;'r'
  4264  00E706  72                 	db	114	;'r'
  4265  00E707  65                 	db	101	;'e'
  4266  00E708  64                 	db	100	;'d'
  4267  00E709  20                 	db	32
  4268  00E70A  6F                 	db	111	;'o'
  4269  00E70B  72                 	db	114	;'r'
  4270  00E70C  20                 	db	32
  4271  00E70D  6E                 	db	110	;'n'
  4272  00E70E  6F                 	db	111	;'o'
  4273  00E70F  74                 	db	116	;'t'
  4274  00E710  0A                 	db	10
  4275  00E711  0D                 	db	13
  4276  00E712  20                 	db	32
  4277  00E713  20                 	db	32
  4278  00E714  20                 	db	32
  4279  00E715  43                 	db	67	;'C'
  4280  00E716  6C                 	db	108	;'l'
  4281  00E717  65                 	db	101	;'e'
  4282  00E718  61                 	db	97	;'a'
  4283  00E719  72                 	db	114	;'r'
  4284  00E71A  20                 	db	32
  4285  00E71B  4D                 	db	77	;'M'
  4286  00E71C  61                 	db	97	;'a'
  4287  00E71D  78                 	db	120	;'x'
  4288  00E71E  20                 	db	32
  4289  00E71F  56                 	db	86	;'V'
  4290  00E720  61                 	db	97	;'a'
  4291  00E721  6C                 	db	108	;'l'
  4292  00E722  75                 	db	117	;'u'
  4293  00E723  65                 	db	101	;'e'
  4294  00E724  73                 	db	115	;'s'
  4295  00E725  3A                 	db	58	;':'
  4296  00E726  20                 	db	32
  4297  00E727  45                 	db	69	;'E'
  4298  00E728  72                 	db	114	;'r'
  4299  00E729  61                 	db	97	;'a'
  4300  00E72A  73                 	db	115	;'s'
  4301  00E72B  65                 	db	101	;'e'
  4302  00E72C  73                 	db	115	;'s'
  4303  00E72D  20                 	db	32
  4304  00E72E  6D                 	db	109	;'m'
  4305  00E72F  61                 	db	97	;'a'
  4306  00E730  78                 	db	120	;'x'
  4307  00E731  69                 	db	105	;'i'
  4308  00E732  6D                 	db	109	;'m'
  4309  00E733  75                 	db	117	;'u'
  4310  00E734  6D                 	db	109	;'m'
  4311  00E735  20                 	db	32
  4312  00E736  72                 	db	114	;'r'
  4313  00E737  65                 	db	101	;'e'
  4314  00E738  63                 	db	99	;'c'
  4315  00E739  6F                 	db	111	;'o'
  4316  00E73A  72                 	db	114	;'r'
  4317  00E73B  64                 	db	100	;'d'
  4318  00E73C  65                 	db	101	;'e'
  4319  00E73D  64                 	db	100	;'d'
  4320  00E73E  20                 	db	32
  4321  00E73F  76                 	db	118	;'v'
  4322  00E740  61                 	db	97	;'a'
  4323  00E741  6C                 	db	108	;'l'
  4324  00E742  75                 	db	117	;'u'
  4325  00E743  65                 	db	101	;'e'
  4326  00E744  73                 	db	115	;'s'
  4327  00E745  20                 	db	32
  4328  00E746  66                 	db	102	;'f'
  4329  00E747  72                 	db	114	;'r'
  4330  00E748  6F                 	db	111	;'o'
  4331  00E749  6D                 	db	109	;'m'
  4332  00E74A  20                 	db	32
  4333  00E74B  45                 	db	69	;'E'
  4334  00E74C  45                 	db	69	;'E'
  4335  00E74D  50                 	db	80	;'P'
  4336  00E74E  52                 	db	82	;'R'
  4337  00E74F  4F                 	db	79	;'O'
  4338  00E750  4D                 	db	77	;'M'
  4339  00E751  0A                 	db	10
  4340  00E752  0D                 	db	13
  4341  00E753  20                 	db	32
  4342  00E754  20                 	db	32
  4343  00E755  20                 	db	32
  4344  00E756  48                 	db	72	;'H'
  4345  00E757  65                 	db	101	;'e'
  4346  00E758  6C                 	db	108	;'l'
  4347  00E759  70                 	db	112	;'p'
  4348  00E75A  3A                 	db	58	;':'
  4349  00E75B  20                 	db	32
  4350  00E75C  54                 	db	84	;'T'
  4351  00E75D  68                 	db	104	;'h'
  4352  00E75E  69                 	db	105	;'i'
  4353  00E75F  73                 	db	115	;'s'
  4354  00E760  20                 	db	32
  4355  00E761  6D                 	db	109	;'m'
  4356  00E762  65                 	db	101	;'e'
  4357  00E763  73                 	db	115	;'s'
  4358  00E764  73                 	db	115	;'s'
  4359  00E765  61                 	db	97	;'a'
  4360  00E766  67                 	db	103	;'g'
  4361  00E767  65                 	db	101	;'e'
  4362  00E768  2C                 	db	44
  4363  00E769  20                 	db	32
  4364  00E76A  6C                 	db	108	;'l'
  4365  00E76B  69                 	db	105	;'i'
  4366  00E76C  73                 	db	115	;'s'
  4367  00E76D  74                 	db	116	;'t'
  4368  00E76E  73                 	db	115	;'s'
  4369  00E76F  20                 	db	32
  4370  00E770  73                 	db	115	;'s'
  4371  00E771  75                 	db	117	;'u'
  4372  00E772  70                 	db	112	;'p'
  4373  00E773  70                 	db	112	;'p'
  4374  00E774  6F                 	db	111	;'o'
  4375  00E775  72                 	db	114	;'r'
  4376  00E776  74                 	db	116	;'t'
  4377  00E777  65                 	db	101	;'e'
  4378  00E778  64                 	db	100	;'d'
  4379  00E779  20                 	db	32
  4380  00E77A  63                 	db	99	;'c'
  4381  00E77B  6F                 	db	111	;'o'
  4382  00E77C  6D                 	db	109	;'m'
  4383  00E77D  6D                 	db	109	;'m'
  4384  00E77E  61                 	db	97	;'a'
  4385  00E77F  6E                 	db	110	;'n'
  4386  00E780  64                 	db	100	;'d'
  4387  00E781  73                 	db	115	;'s'
  4388  00E782  0A                 	db	10
  4389  00E783  0D                 	db	13
  4390  00E784  0A                 	db	10
  4391  00E785  0D                 	db	13
  4392  00E786  00                 	db	0
  4393  00E787                     STR_139:
  4394  00E787  4C                 	db	76	;'L'
  4395  00E788  69                 	db	105	;'i'
  4396  00E789  73                 	db	115	;'s'
  4397  00E78A  74                 	db	116	;'t'
  4398  00E78B  20                 	db	32
  4399  00E78C  6F                 	db	111	;'o'
  4400  00E78D  66                 	db	102	;'f'
  4401  00E78E  20                 	db	32
  4402  00E78F  73                 	db	115	;'s'
  4403  00E790  75                 	db	117	;'u'
  4404  00E791  70                 	db	112	;'p'
  4405  00E792  70                 	db	112	;'p'
  4406  00E793  6F                 	db	111	;'o'
  4407  00E794  72                 	db	114	;'r'
  4408  00E795  74                 	db	116	;'t'
  4409  00E796  65                 	db	101	;'e'
  4410  00E797  64                 	db	100	;'d'
  4411  00E798  20                 	db	32
  4412  00E799  44                 	db	68	;'D'
  4413  00E79A  65                 	db	101	;'e'
  4414  00E79B  76                 	db	118	;'v'
  4415  00E79C  69                 	db	105	;'i'
  4416  00E79D  63                 	db	99	;'c'
  4417  00E79E  65                 	db	101	;'e'
  4418  00E79F  20                 	db	32
  4419  00E7A0  4D                 	db	77	;'M'
  4420  00E7A1  65                 	db	101	;'e'
  4421  00E7A2  61                 	db	97	;'a'
  4422  00E7A3  73                 	db	115	;'s'
  4423  00E7A4  75                 	db	117	;'u'
  4424  00E7A5  72                 	db	114	;'r'
  4425  00E7A6  65                 	db	101	;'e'
  4426  00E7A7  6D                 	db	109	;'m'
  4427  00E7A8  65                 	db	101	;'e'
  4428  00E7A9  6E                 	db	110	;'n'
  4429  00E7AA  74                 	db	116	;'t'
  4430  00E7AB  20                 	db	32
  4431  00E7AC  43                 	db	67	;'C'
  4432  00E7AD  6F                 	db	111	;'o'
  4433  00E7AE  6D                 	db	109	;'m'
  4434  00E7AF  6D                 	db	109	;'m'
  4435  00E7B0  61                 	db	97	;'a'
  4436  00E7B1  6E                 	db	110	;'n'
  4437  00E7B2  64                 	db	100	;'d'
  4438  00E7B3  73                 	db	115	;'s'
  4439  00E7B4  3A                 	db	58	;':'
  4440  00E7B5  0A                 	db	10
  4441  00E7B6  0D                 	db	13
  4442  00E7B7  20                 	db	32
  4443  00E7B8  20                 	db	32
  4444  00E7B9  20                 	db	32
  4445  00E7BA  4D                 	db	77	;'M'
  4446  00E7BB  65                 	db	101	;'e'
  4447  00E7BC  61                 	db	97	;'a'
  4448  00E7BD  73                 	db	115	;'s'
  4449  00E7BE  75                 	db	117	;'u'
  4450  00E7BF  72                 	db	114	;'r'
  4451  00E7C0  65                 	db	101	;'e'
  4452  00E7C1  20                 	db	32
  4453  00E7C2  50                 	db	80	;'P'
  4454  00E7C3  4F                 	db	79	;'O'
  4455  00E7C4  53                 	db	83	;'S'
  4456  00E7C5  33                 	db	51	;'3'
  4457  00E7C6  50                 	db	80	;'P'
  4458  00E7C7  33                 	db	51	;'3'
  4459  00E7C8  3F                 	db	63	;'?'
  4460  00E7C9  3A                 	db	58	;':'
  4461  00E7CA  20                 	db	32
  4462  00E7CB  52                 	db	82	;'R'
  4463  00E7CC  65                 	db	101	;'e'
  4464  00E7CD  74                 	db	116	;'t'
  4465  00E7CE  75                 	db	117	;'u'
  4466  00E7CF  72                 	db	114	;'r'
  4467  00E7D0  6E                 	db	110	;'n'
  4468  00E7D1  73                 	db	115	;'s'
  4469  00E7D2  20                 	db	32
  4470  00E7D3  2B                 	db	43
  4471  00E7D4  33                 	db	51	;'3'
  4472  00E7D5  2E                 	db	46
  4473  00E7D6  33                 	db	51	;'3'
  4474  00E7D7  56                 	db	86	;'V'
  4475  00E7D8  20                 	db	32
  4476  00E7D9  41                 	db	65	;'A'
  4477  00E7DA  44                 	db	68	;'D'
  4478  00E7DB  43                 	db	67	;'C'
  4479  00E7DC  20                 	db	32
  4480  00E7DD  43                 	db	67	;'C'
  4481  00E7DE  6F                 	db	111	;'o'
  4482  00E7DF  6E                 	db	110	;'n'
  4483  00E7E0  76                 	db	118	;'v'
  4484  00E7E1  65                 	db	101	;'e'
  4485  00E7E2  72                 	db	114	;'r'
  4486  00E7E3  73                 	db	115	;'s'
  4487  00E7E4  69                 	db	105	;'i'
  4488  00E7E5  6F                 	db	111	;'o'
  4489  00E7E6  6E                 	db	110	;'n'
  4490  00E7E7  20                 	db	32
  4491  00E7E8  69                 	db	105	;'i'
  4492  00E7E9  6E                 	db	110	;'n'
  4493  00E7EA  20                 	db	32
  4494  00E7EB  76                 	db	118	;'v'
  4495  00E7EC  6F                 	db	111	;'o'
  4496  00E7ED  6C                 	db	108	;'l'
  4497  00E7EE  74                 	db	116	;'t'
  4498  00E7EF  73                 	db	115	;'s'
  4499  00E7F0  0A                 	db	10
  4500  00E7F1  0D                 	db	13
  4501  00E7F2  20                 	db	32
  4502  00E7F3  20                 	db	32
  4503  00E7F4  20                 	db	32
  4504  00E7F5  4D                 	db	77	;'M'
  4505  00E7F6  65                 	db	101	;'e'
  4506  00E7F7  61                 	db	97	;'a'
  4507  00E7F8  73                 	db	115	;'s'
  4508  00E7F9  75                 	db	117	;'u'
  4509  00E7FA  72                 	db	114	;'r'
  4510  00E7FB  65                 	db	101	;'e'
  4511  00E7FC  20                 	db	32
  4512  00E7FD  50                 	db	80	;'P'
  4513  00E7FE  4F                 	db	79	;'O'
  4514  00E7FF  53                 	db	83	;'S'
  4515  00E800  31                 	db	49	;'1'
  4516  00E801  32                 	db	50	;'2'
  4517  00E802  3F                 	db	63	;'?'
  4518  00E803  3A                 	db	58	;':'
  4519  00E804  20                 	db	32
  4520  00E805  52                 	db	82	;'R'
  4521  00E806  65                 	db	101	;'e'
  4522  00E807  74                 	db	116	;'t'
  4523  00E808  75                 	db	117	;'u'
  4524  00E809  72                 	db	114	;'r'
  4525  00E80A  6E                 	db	110	;'n'
  4526  00E80B  73                 	db	115	;'s'
  4527  00E80C  20                 	db	32
  4528  00E80D  2B                 	db	43
  4529  00E80E  31                 	db	49	;'1'
  4530  00E80F  32                 	db	50	;'2'
  4531  00E810  56                 	db	86	;'V'
  4532  00E811  20                 	db	32
  4533  00E812  41                 	db	65	;'A'
  4534  00E813  44                 	db	68	;'D'
  4535  00E814  43                 	db	67	;'C'
  4536  00E815  20                 	db	32
  4537  00E816  43                 	db	67	;'C'
  4538  00E817  6F                 	db	111	;'o'
  4539  00E818  6E                 	db	110	;'n'
  4540  00E819  76                 	db	118	;'v'
  4541  00E81A  65                 	db	101	;'e'
  4542  00E81B  72                 	db	114	;'r'
  4543  00E81C  73                 	db	115	;'s'
  4544  00E81D  69                 	db	105	;'i'
  4545  00E81E  6F                 	db	111	;'o'
  4546  00E81F  6E                 	db	110	;'n'
  4547  00E820  20                 	db	32
  4548  00E821  69                 	db	105	;'i'
  4549  00E822  6E                 	db	110	;'n'
  4550  00E823  20                 	db	32
  4551  00E824  76                 	db	118	;'v'
  4552  00E825  6F                 	db	111	;'o'
  4553  00E826  6C                 	db	108	;'l'
  4554  00E827  74                 	db	116	;'t'
  4555  00E828  73                 	db	115	;'s'
  4556  00E829  0A                 	db	10
  4557  00E82A  0D                 	db	13
  4558  00E82B  20                 	db	32
  4559  00E82C  20                 	db	32
  4560  00E82D  20                 	db	32
  4561  00E82E  4D                 	db	77	;'M'
  4562  00E82F  65                 	db	101	;'e'
  4563  00E830  61                 	db	97	;'a'
  4564  00E831  73                 	db	115	;'s'
  4565  00E832  75                 	db	117	;'u'
  4566  00E833  72                 	db	114	;'r'
  4567  00E834  65                 	db	101	;'e'
  4568  00E835  20                 	db	32
  4569  00E836  44                 	db	68	;'D'
  4570  00E837  69                 	db	105	;'i'
  4571  00E838  65                 	db	101	;'e'
  4572  00E839  20                 	db	32
  4573  00E83A  54                 	db	84	;'T'
  4574  00E83B  65                 	db	101	;'e'
  4575  00E83C  6D                 	db	109	;'m'
  4576  00E83D  70                 	db	112	;'p'
  4577  00E83E  3F                 	db	63	;'?'
  4578  00E83F  3A                 	db	58	;':'
  4579  00E840  20                 	db	32
  4580  00E841  52                 	db	82	;'R'
  4581  00E842  65                 	db	101	;'e'
  4582  00E843  74                 	db	116	;'t'
  4583  00E844  75                 	db	117	;'u'
  4584  00E845  72                 	db	114	;'r'
  4585  00E846  6E                 	db	110	;'n'
  4586  00E847  73                 	db	115	;'s'
  4587  00E848  20                 	db	32
  4588  00E849  74                 	db	116	;'t'
  4589  00E84A  68                 	db	104	;'h'
  4590  00E84B  65                 	db	101	;'e'
  4591  00E84C  20                 	db	32
  4592  00E84D  6D                 	db	109	;'m'
  4593  00E84E  69                 	db	105	;'i'
  4594  00E84F  63                 	db	99	;'c'
  4595  00E850  72                 	db	114	;'r'
  4596  00E851  6F                 	db	111	;'o'
  4597  00E852  63                 	db	99	;'c'
  4598  00E853  6F                 	db	111	;'o'
  4599  00E854  6E                 	db	110	;'n'
  4600  00E855  74                 	db	116	;'t'
  4601  00E856  72                 	db	114	;'r'
  4602  00E857  6F                 	db	111	;'o'
  4603  00E858  6C                 	db	108	;'l'
  4604  00E859  6C                 	db	108	;'l'
  4605  00E85A  65                 	db	101	;'e'
  4606  00E85B  72                 	db	114	;'r'
  4607  00E85C  20                 	db	32
  4608  00E85D  64                 	db	100	;'d'
  4609  00E85E  69                 	db	105	;'i'
  4610  00E85F  65                 	db	101	;'e'
  4611  00E860  20                 	db	32
  4612  00E861  74                 	db	116	;'t'
  4613  00E862  65                 	db	101	;'e'
  4614  00E863  6D                 	db	109	;'m'
  4615  00E864  70                 	db	112	;'p'
  4616  00E865  65                 	db	101	;'e'
  4617  00E866  72                 	db	114	;'r'
  4618  00E867  61                 	db	97	;'a'
  4619  00E868  74                 	db	116	;'t'
  4620  00E869  75                 	db	117	;'u'
  4621  00E86A  72                 	db	114	;'r'
  4622  00E86B  65                 	db	101	;'e'
  4623  00E86C  20                 	db	32
  4624  00E86D  69                 	db	105	;'i'
  4625  00E86E  6E                 	db	110	;'n'
  4626  00E86F  20                 	db	32
  4627  00E870  64                 	db	100	;'d'
  4628  00E871  65                 	db	101	;'e'
  4629  00E872  67                 	db	103	;'g'
  4630  00E873  72                 	db	114	;'r'
  4631  00E874  65                 	db	101	;'e'
  4632  00E875  65                 	db	101	;'e'
  4633  00E876  73                 	db	115	;'s'
  4634  00E877  20                 	db	32
  4635  00E878  43                 	db	67	;'C'
  4636  00E879  0A                 	db	10
  4637  00E87A  0D                 	db	13
  4638  00E87B  20                 	db	32
  4639  00E87C  20                 	db	32
  4640  00E87D  20                 	db	32
  4641  00E87E  4D                 	db	77	;'M'
  4642  00E87F  65                 	db	101	;'e'
  4643  00E880  61                 	db	97	;'a'
  4644  00E881  73                 	db	115	;'s'
  4645  00E882  75                 	db	117	;'u'
  4646  00E883  72                 	db	114	;'r'
  4647  00E884  65                 	db	101	;'e'
  4648  00E885  20                 	db	32
  4649  00E886  46                 	db	70	;'F'
  4650  00E887  56                 	db	86	;'V'
  4651  00E888  52                 	db	82	;'R'
  4652  00E889  3F                 	db	63	;'?'
  4653  00E88A  3A                 	db	58	;':'
  4654  00E88B  20                 	db	32
  4655  00E88C  52                 	db	82	;'R'
  4656  00E88D  65                 	db	101	;'e'
  4657  00E88E  74                 	db	116	;'t'
  4658  00E88F  75                 	db	117	;'u'
  4659  00E890  72                 	db	114	;'r'
  4660  00E891  6E                 	db	110	;'n'
  4661  00E892  73                 	db	115	;'s'
  4662  00E893  20                 	db	32
  4663  00E894  74                 	db	116	;'t'
  4664  00E895  68                 	db	104	;'h'
  4665  00E896  65                 	db	101	;'e'
  4666  00E897  20                 	db	32
  4667  00E898  69                 	db	105	;'i'
  4668  00E899  6E                 	db	110	;'n'
  4669  00E89A  74                 	db	116	;'t'
  4670  00E89B  65                 	db	101	;'e'
  4671  00E89C  72                 	db	114	;'r'
  4672  00E89D  6E                 	db	110	;'n'
  4673  00E89E  61                 	db	97	;'a'
  4674  00E89F  6C                 	db	108	;'l'
  4675  00E8A0  20                 	db	32
  4676  00E8A1  66                 	db	102	;'f'
  4677  00E8A2  69                 	db	105	;'i'
  4678  00E8A3  78                 	db	120	;'x'
  4679  00E8A4  65                 	db	101	;'e'
  4680  00E8A5  64                 	db	100	;'d'
  4681  00E8A6  20                 	db	32
  4682  00E8A7  76                 	db	118	;'v'
  4683  00E8A8  6F                 	db	111	;'o'
  4684  00E8A9  6C                 	db	108	;'l'
  4685  00E8AA  74                 	db	116	;'t'
  4686  00E8AB  61                 	db	97	;'a'
  4687  00E8AC  67                 	db	103	;'g'
  4688  00E8AD  65                 	db	101	;'e'
  4689  00E8AE  20                 	db	32
  4690  00E8AF  72                 	db	114	;'r'
  4691  00E8B0  65                 	db	101	;'e'
  4692  00E8B1  66                 	db	102	;'f'
  4693  00E8B2  65                 	db	101	;'e'
  4694  00E8B3  72                 	db	114	;'r'
  4695  00E8B4  65                 	db	101	;'e'
  4696  00E8B5  6E                 	db	110	;'n'
  4697  00E8B6  63                 	db	99	;'c'
  4698  00E8B7  65                 	db	101	;'e'
  4699  00E8B8  20                 	db	32
  4700  00E8B9  62                 	db	98	;'b'
  4701  00E8BA  75                 	db	117	;'u'
  4702  00E8BB  66                 	db	102	;'f'
  4703  00E8BC  66                 	db	102	;'f'
  4704  00E8BD  65                 	db	101	;'e'
  4705  00E8BE  72                 	db	114	;'r'
  4706  00E8BF  20                 	db	32
  4707  00E8C0  31                 	db	49	;'1'
  4708  00E8C1  20                 	db	32
  4709  00E8C2  6F                 	db	111	;'o'
  4710  00E8C3  75                 	db	117	;'u'
  4711  00E8C4  74                 	db	116	;'t'
  4712  00E8C5  70                 	db	112	;'p'
  4713  00E8C6  75                 	db	117	;'u'
  4714  00E8C7  74                 	db	116	;'t'
  4715  00E8C8  20                 	db	32
  4716  00E8C9  69                 	db	105	;'i'
  4717  00E8CA  6E                 	db	110	;'n'
  4718  00E8CB  20                 	db	32
  4719  00E8CC  76                 	db	118	;'v'
  4720  00E8CD  6F                 	db	111	;'o'
  4721  00E8CE  6C                 	db	108	;'l'
  4722  00E8CF  74                 	db	116	;'t'
  4723  00E8D0  73                 	db	115	;'s'
  4724  00E8D1  0A                 	db	10
  4725  00E8D2  0D                 	db	13
  4726  00E8D3  20                 	db	32
  4727  00E8D4  20                 	db	32
  4728  00E8D5  20                 	db	32
  4729  00E8D6  4D                 	db	77	;'M'
  4730  00E8D7  65                 	db	101	;'e'
  4731  00E8D8  61                 	db	97	;'a'
  4732  00E8D9  73                 	db	115	;'s'
  4733  00E8DA  75                 	db	117	;'u'
  4734  00E8DB  72                 	db	114	;'r'
  4735  00E8DC  65                 	db	101	;'e'
  4736  00E8DD  20                 	db	32
  4737  00E8DE  41                 	db	65	;'A'
  4738  00E8DF  56                 	db	86	;'V'
  4739  00E8E0  53                 	db	83	;'S'
  4740  00E8E1  53                 	db	83	;'S'
  4741  00E8E2  3F                 	db	63	;'?'
  4742  00E8E3  3A                 	db	58	;':'
  4743  00E8E4  20                 	db	32
  4744  00E8E5  52                 	db	82	;'R'
  4745  00E8E6  65                 	db	101	;'e'
  4746  00E8E7  74                 	db	116	;'t'
  4747  00E8E8  75                 	db	117	;'u'
  4748  00E8E9  72                 	db	114	;'r'
  4749  00E8EA  6E                 	db	110	;'n'
  4750  00E8EB  73                 	db	115	;'s'
  4751  00E8EC  20                 	db	32
  4752  00E8ED  74                 	db	116	;'t'
  4753  00E8EE  68                 	db	104	;'h'
  4754  00E8EF  65                 	db	101	;'e'
  4755  00E8F0  20                 	db	32
  4756  00E8F1  6D                 	db	109	;'m'
  4757  00E8F2  65                 	db	101	;'e'
  4758  00E8F3  61                 	db	97	;'a'
  4759  00E8F4  73                 	db	115	;'s'
  4760  00E8F5  75                 	db	117	;'u'
  4761  00E8F6  72                 	db	114	;'r'
  4762  00E8F7  65                 	db	101	;'e'
  4763  00E8F8  64                 	db	100	;'d'
  4764  00E8F9  20                 	db	32
  4765  00E8FA  76                 	db	118	;'v'
  4766  00E8FB  61                 	db	97	;'a'
  4767  00E8FC  6C                 	db	108	;'l'
  4768  00E8FD  75                 	db	117	;'u'
  4769  00E8FE  65                 	db	101	;'e'
  4770  00E8FF  20                 	db	32
  4771  00E900  6F                 	db	111	;'o'
  4772  00E901  66                 	db	102	;'f'
  4773  00E902  20                 	db	32
  4774  00E903  41                 	db	65	;'A'
  4775  00E904  6E                 	db	110	;'n'
  4776  00E905  61                 	db	97	;'a'
  4777  00E906  6C                 	db	108	;'l'
  4778  00E907  6F                 	db	111	;'o'
  4779  00E908  67                 	db	103	;'g'
  4780  00E909  20                 	db	32
  4781  00E90A  56                 	db	86	;'V'
  4782  00E90B  53                 	db	83	;'S'
  4783  00E90C  53                 	db	83	;'S'
  4784  00E90D  20                 	db	32
  4785  00E90E  69                 	db	105	;'i'
  4786  00E90F  6E                 	db	110	;'n'
  4787  00E910  20                 	db	32
  4788  00E911  76                 	db	118	;'v'
  4789  00E912  6F                 	db	111	;'o'
  4790  00E913  6C                 	db	108	;'l'
  4791  00E914  74                 	db	116	;'t'
  4792  00E915  73                 	db	115	;'s'
  4793  00E916  0A                 	db	10
  4794  00E917  0D                 	db	13
  4795  00E918  20                 	db	32
  4796  00E919  20                 	db	32
  4797  00E91A  20                 	db	32
  4798  00E91B  4D                 	db	77	;'M'
  4799  00E91C  61                 	db	97	;'a'
  4800  00E91D  78                 	db	120	;'x'
  4801  00E91E  20                 	db	32
  4802  00E91F  50                 	db	80	;'P'
  4803  00E920  4F                 	db	79	;'O'
  4804  00E921  53                 	db	83	;'S'
  4805  00E922  33                 	db	51	;'3'
  4806  00E923  50                 	db	80	;'P'
  4807  00E924  33                 	db	51	;'3'
  4808  00E925  20                 	db	32
  4809  00E926  56                 	db	86	;'V'
  4810  00E927  6F                 	db	111	;'o'
  4811  00E928  6C                 	db	108	;'l'
  4812  00E929  74                 	db	116	;'t'
  4813  00E92A  61                 	db	97	;'a'
  4814  00E92B  67                 	db	103	;'g'
  4815  00E92C  65                 	db	101	;'e'
  4816  00E92D  3F                 	db	63	;'?'
  4817  00E92E  3A                 	db	58	;':'
  4818  00E92F  20                 	db	32
  4819  00E930  52                 	db	82	;'R'
  4820  00E931  65                 	db	101	;'e'
  4821  00E932  74                 	db	116	;'t'
  4822  00E933  75                 	db	117	;'u'
  4823  00E934  72                 	db	114	;'r'
  4824  00E935  6E                 	db	110	;'n'
  4825  00E936  73                 	db	115	;'s'
  4826  00E937  20                 	db	32
  4827  00E938  74                 	db	116	;'t'
  4828  00E939  68                 	db	104	;'h'
  4829  00E93A  65                 	db	101	;'e'
  4830  00E93B  20                 	db	32
  4831  00E93C  6D                 	db	109	;'m'
  4832  00E93D  61                 	db	97	;'a'
  4833  00E93E  78                 	db	120	;'x'
  4834  00E93F  69                 	db	105	;'i'
  4835  00E940  6D                 	db	109	;'m'
  4836  00E941  75                 	db	117	;'u'
  4837  00E942  6D                 	db	109	;'m'
  4838  00E943  20                 	db	32
  4839  00E944  72                 	db	114	;'r'
  4840  00E945  65                 	db	101	;'e'
  4841  00E946  63                 	db	99	;'c'
  4842  00E947  6F                 	db	111	;'o'
  4843  00E948  72                 	db	114	;'r'
  4844  00E949  64                 	db	100	;'d'
  4845  00E94A  65                 	db	101	;'e'
  4846  00E94B  64                 	db	100	;'d'
  4847  00E94C  20                 	db	32
  4848  00E94D  2B                 	db	43
  4849  00E94E  33                 	db	51	;'3'
  4850  00E94F  2E                 	db	46
  4851  00E950  33                 	db	51	;'3'
  4852  00E951  56                 	db	86	;'V'
  4853  00E952  20                 	db	32
  4854  00E953  52                 	db	82	;'R'
  4855  00E954  61                 	db	97	;'a'
  4856  00E955  69                 	db	105	;'i'
  4857  00E956  6C                 	db	108	;'l'
  4858  00E957  20                 	db	32
  4859  00E958  56                 	db	86	;'V'
  4860  00E959  6F                 	db	111	;'o'
  4861  00E95A  6C                 	db	108	;'l'
  4862  00E95B  74                 	db	116	;'t'
  4863  00E95C  61                 	db	97	;'a'
  4864  00E95D  67                 	db	103	;'g'
  4865  00E95E  65                 	db	101	;'e'
  4866  00E95F  20                 	db	32
  4867  00E960  6D                 	db	109	;'m'
  4868  00E961  65                 	db	101	;'e'
  4869  00E962  61                 	db	97	;'a'
  4870  00E963  73                 	db	115	;'s'
  4871  00E964  75                 	db	117	;'u'
  4872  00E965  72                 	db	114	;'r'
  4873  00E966  65                 	db	101	;'e'
  4874  00E967  64                 	db	100	;'d'
  4875  00E968  0A                 	db	10
  4876  00E969  0D                 	db	13
  4877  00E96A  20                 	db	32
  4878  00E96B  20                 	db	32
  4879  00E96C  20                 	db	32
  4880  00E96D  4D                 	db	77	;'M'
  4881  00E96E  61                 	db	97	;'a'
  4882  00E96F  78                 	db	120	;'x'
  4883  00E970  20                 	db	32
  4884  00E971  50                 	db	80	;'P'
  4885  00E972  4F                 	db	79	;'O'
  4886  00E973  53                 	db	83	;'S'
  4887  00E974  31                 	db	49	;'1'
  4888  00E975  32                 	db	50	;'2'
  4889  00E976  20                 	db	32
  4890  00E977  56                 	db	86	;'V'
  4891  00E978  6F                 	db	111	;'o'
  4892  00E979  6C                 	db	108	;'l'
  4893  00E97A  74                 	db	116	;'t'
  4894  00E97B  61                 	db	97	;'a'
  4895  00E97C  67                 	db	103	;'g'
  4896  00E97D  65                 	db	101	;'e'
  4897  00E97E  3F                 	db	63	;'?'
  4898  00E97F  3A                 	db	58	;':'
  4899  00E980  20                 	db	32
  4900  00E981  52                 	db	82	;'R'
  4901  00E982  65                 	db	101	;'e'
  4902  00E983  74                 	db	116	;'t'
  4903  00E984  75                 	db	117	;'u'
  4904  00E985  72                 	db	114	;'r'
  4905  00E986  6E                 	db	110	;'n'
  4906  00E987  73                 	db	115	;'s'
  4907  00E988  20                 	db	32
  4908  00E989  74                 	db	116	;'t'
  4909  00E98A  68                 	db	104	;'h'
  4910  00E98B  65                 	db	101	;'e'
  4911  00E98C  20                 	db	32
  4912  00E98D  6D                 	db	109	;'m'
  4913  00E98E  61                 	db	97	;'a'
  4914  00E98F  78                 	db	120	;'x'
  4915  00E990  69                 	db	105	;'i'
  4916  00E991  6D                 	db	109	;'m'
  4917  00E992  75                 	db	117	;'u'
  4918  00E993  6D                 	db	109	;'m'
  4919  00E994  20                 	db	32
  4920  00E995  72                 	db	114	;'r'
  4921  00E996  65                 	db	101	;'e'
  4922  00E997  63                 	db	99	;'c'
  4923  00E998  6F                 	db	111	;'o'
  4924  00E999  72                 	db	114	;'r'
  4925  00E99A  64                 	db	100	;'d'
  4926  00E99B  65                 	db	101	;'e'
  4927  00E99C  64                 	db	100	;'d'
  4928  00E99D  20                 	db	32
  4929  00E99E  2B                 	db	43
  4930  00E99F  31                 	db	49	;'1'
  4931  00E9A0  32                 	db	50	;'2'
  4932  00E9A1  56                 	db	86	;'V'
  4933  00E9A2  20                 	db	32
  4934  00E9A3  52                 	db	82	;'R'
  4935  00E9A4  61                 	db	97	;'a'
  4936  00E9A5  69                 	db	105	;'i'
  4937  00E9A6  6C                 	db	108	;'l'
  4938  00E9A7  20                 	db	32
  4939  00E9A8  56                 	db	86	;'V'
  4940  00E9A9  6F                 	db	111	;'o'
  4941  00E9AA  6C                 	db	108	;'l'
  4942  00E9AB  74                 	db	116	;'t'
  4943  00E9AC  61                 	db	97	;'a'
  4944  00E9AD  67                 	db	103	;'g'
  4945  00E9AE  65                 	db	101	;'e'
  4946  00E9AF  20                 	db	32
  4947  00E9B0  6D                 	db	109	;'m'
  4948  00E9B1  65                 	db	101	;'e'
  4949  00E9B2  61                 	db	97	;'a'
  4950  00E9B3  73                 	db	115	;'s'
  4951  00E9B4  75                 	db	117	;'u'
  4952  00E9B5  72                 	db	114	;'r'
  4953  00E9B6  65                 	db	101	;'e'
  4954  00E9B7  64                 	db	100	;'d'
  4955  00E9B8  0A                 	db	10
  4956  00E9B9  0D                 	db	13
  4957  00E9BA  20                 	db	32
  4958  00E9BB  20                 	db	32
  4959  00E9BC  20                 	db	32
  4960  00E9BD  4D                 	db	77	;'M'
  4961  00E9BE  61                 	db	97	;'a'
  4962  00E9BF  78                 	db	120	;'x'
  4963  00E9C0  20                 	db	32
  4964  00E9C1  44                 	db	68	;'D'
  4965  00E9C2  69                 	db	105	;'i'
  4966  00E9C3  65                 	db	101	;'e'
  4967  00E9C4  20                 	db	32
  4968  00E9C5  54                 	db	84	;'T'
  4969  00E9C6  65                 	db	101	;'e'
  4970  00E9C7  6D                 	db	109	;'m'
  4971  00E9C8  70                 	db	112	;'p'
  4972  00E9C9  3F                 	db	63	;'?'
  4973  00E9CA  3A                 	db	58	;':'
  4974  00E9CB  20                 	db	32
  4975  00E9CC  52                 	db	82	;'R'
  4976  00E9CD  65                 	db	101	;'e'
  4977  00E9CE  74                 	db	116	;'t'
  4978  00E9CF  75                 	db	117	;'u'
  4979  00E9D0  72                 	db	114	;'r'
  4980  00E9D1  6E                 	db	110	;'n'
  4981  00E9D2  73                 	db	115	;'s'
  4982  00E9D3  20                 	db	32
  4983  00E9D4  74                 	db	116	;'t'
  4984  00E9D5  68                 	db	104	;'h'
  4985  00E9D6  65                 	db	101	;'e'
  4986  00E9D7  20                 	db	32
  4987  00E9D8  6D                 	db	109	;'m'
  4988  00E9D9  61                 	db	97	;'a'
  4989  00E9DA  78                 	db	120	;'x'
  4990  00E9DB  69                 	db	105	;'i'
  4991  00E9DC  6D                 	db	109	;'m'
  4992  00E9DD  75                 	db	117	;'u'
  4993  00E9DE  6D                 	db	109	;'m'
  4994  00E9DF  20                 	db	32
  4995  00E9E0  72                 	db	114	;'r'
  4996  00E9E1  65                 	db	101	;'e'
  4997  00E9E2  63                 	db	99	;'c'
  4998  00E9E3  6F                 	db	111	;'o'
  4999  00E9E4  72                 	db	114	;'r'
  5000  00E9E5  64                 	db	100	;'d'
  5001  00E9E6  65                 	db	101	;'e'
  5002  00E9E7  64                 	db	100	;'d'
  5003  00E9E8  20                 	db	32
  5004  00E9E9  64                 	db	100	;'d'
  5005  00E9EA  69                 	db	105	;'i'
  5006  00E9EB  65                 	db	101	;'e'
  5007  00E9EC  20                 	db	32
  5008  00E9ED  74                 	db	116	;'t'
  5009  00E9EE  65                 	db	101	;'e'
  5010  00E9EF  6D                 	db	109	;'m'
  5011  00E9F0  70                 	db	112	;'p'
  5012  00E9F1  65                 	db	101	;'e'
  5013  00E9F2  72                 	db	114	;'r'
  5014  00E9F3  61                 	db	97	;'a'
  5015  00E9F4  74                 	db	116	;'t'
  5016  00E9F5  75                 	db	117	;'u'
  5017  00E9F6  72                 	db	114	;'r'
  5018  00E9F7  65                 	db	101	;'e'
  5019  00E9F8  20                 	db	32
  5020  00E9F9  6D                 	db	109	;'m'
  5021  00E9FA  65                 	db	101	;'e'
  5022  00E9FB  61                 	db	97	;'a'
  5023  00E9FC  73                 	db	115	;'s'
  5024  00E9FD  75                 	db	117	;'u'
  5025  00E9FE  72                 	db	114	;'r'
  5026  00E9FF  65                 	db	101	;'e'
  5027  00EA00  64                 	db	100	;'d'
  5028  00EA01  0A                 	db	10
  5029  00EA02  0D                 	db	13
  5030  00EA03  20                 	db	32
  5031  00EA04  20                 	db	32
  5032  00EA05  20                 	db	32
  5033  00EA06  4D                 	db	77	;'M'
  5034  00EA07  61                 	db	97	;'a'
  5035  00EA08  78                 	db	120	;'x'
  5036  00EA09  20                 	db	32
  5037  00EA0A  46                 	db	70	;'F'
  5038  00EA0B  56                 	db	86	;'V'
  5039  00EA0C  52                 	db	82	;'R'
  5040  00EA0D  20                 	db	32
  5041  00EA0E  56                 	db	86	;'V'
  5042  00EA0F  6F                 	db	111	;'o'
  5043  00EA10  6C                 	db	108	;'l'
  5044  00EA11  74                 	db	116	;'t'
  5045  00EA12  61                 	db	97	;'a'
  5046  00EA13  67                 	db	103	;'g'
  5047  00EA14  65                 	db	101	;'e'
  5048  00EA15  3F                 	db	63	;'?'
  5049  00EA16  3A                 	db	58	;':'
  5050  00EA17  20                 	db	32
  5051  00EA18  52                 	db	82	;'R'
  5052  00EA19  65                 	db	101	;'e'
  5053  00EA1A  74                 	db	116	;'t'
  5054  00EA1B  75                 	db	117	;'u'
  5055  00EA1C  72                 	db	114	;'r'
  5056  00EA1D  6E                 	db	110	;'n'
  5057  00EA1E  73                 	db	115	;'s'
  5058  00EA1F  20                 	db	32
  5059  00EA20  74                 	db	116	;'t'
  5060  00EA21  68                 	db	104	;'h'
  5061  00EA22  65                 	db	101	;'e'
  5062  00EA23  20                 	db	32
  5063  00EA24  6D                 	db	109	;'m'
  5064  00EA25  61                 	db	97	;'a'
  5065  00EA26  78                 	db	120	;'x'
  5066  00EA27  69                 	db	105	;'i'
  5067  00EA28  6D                 	db	109	;'m'
  5068  00EA29  75                 	db	117	;'u'
  5069  00EA2A  6D                 	db	109	;'m'
  5070  00EA2B  20                 	db	32
  5071  00EA2C  72                 	db	114	;'r'
  5072  00EA2D  65                 	db	101	;'e'
  5073  00EA2E  63                 	db	99	;'c'
  5074  00EA2F  6F                 	db	111	;'o'
  5075  00EA30  72                 	db	114	;'r'
  5076  00EA31  64                 	db	100	;'d'
  5077  00EA32  65                 	db	101	;'e'
  5078  00EA33  64                 	db	100	;'d'
  5079  00EA34  20                 	db	32
  5080  00EA35  46                 	db	70	;'F'
  5081  00EA36  56                 	db	86	;'V'
  5082  00EA37  52                 	db	82	;'R'
  5083  00EA38  20                 	db	32
  5084  00EA39  42                 	db	66	;'B'
  5085  00EA3A  75                 	db	117	;'u'
  5086  00EA3B  66                 	db	102	;'f'
  5087  00EA3C  66                 	db	102	;'f'
  5088  00EA3D  65                 	db	101	;'e'
  5089  00EA3E  72                 	db	114	;'r'
  5090  00EA3F  20                 	db	32
  5091  00EA40  31                 	db	49	;'1'
  5092  00EA41  20                 	db	32
  5093  00EA42  56                 	db	86	;'V'
  5094  00EA43  6F                 	db	111	;'o'
  5095  00EA44  6C                 	db	108	;'l'
  5096  00EA45  74                 	db	116	;'t'
  5097  00EA46  61                 	db	97	;'a'
  5098  00EA47  67                 	db	103	;'g'
  5099  00EA48  65                 	db	101	;'e'
  5100  00EA49  20                 	db	32
  5101  00EA4A  6D                 	db	109	;'m'
  5102  00EA4B  65                 	db	101	;'e'
  5103  00EA4C  61                 	db	97	;'a'
  5104  00EA4D  73                 	db	115	;'s'
  5105  00EA4E  75                 	db	117	;'u'
  5106  00EA4F  72                 	db	114	;'r'
  5107  00EA50  65                 	db	101	;'e'
  5108  00EA51  64                 	db	100	;'d'
  5109  00EA52  0A                 	db	10
  5110  00EA53  0D                 	db	13
  5111  00EA54  0A                 	db	10
  5112  00EA55  0D                 	db	13
  5113  00EA56  00                 	db	0
  5114  00EA57                     STR_141:
  5115  00EA57  4C                 	db	76	;'L'
  5116  00EA58  69                 	db	105	;'i'
  5117  00EA59  73                 	db	115	;'s'
  5118  00EA5A  74                 	db	116	;'t'
  5119  00EA5B  20                 	db	32
  5120  00EA5C  6F                 	db	111	;'o'
  5121  00EA5D  66                 	db	102	;'f'
  5122  00EA5E  20                 	db	32
  5123  00EA5F  73                 	db	115	;'s'
  5124  00EA60  75                 	db	117	;'u'
  5125  00EA61  70                 	db	112	;'p'
  5126  00EA62  70                 	db	112	;'p'
  5127  00EA63  6F                 	db	111	;'o'
  5128  00EA64  72                 	db	114	;'r'
  5129  00EA65  74                 	db	116	;'t'
  5130  00EA66  65                 	db	101	;'e'
  5131  00EA67  64                 	db	100	;'d'
  5132  00EA68  20                 	db	32
  5133  00EA69  50                 	db	80	;'P'
  5134  00EA6A  72                 	db	114	;'r'
  5135  00EA6B  69                 	db	105	;'i'
  5136  00EA6C  6D                 	db	109	;'m'
  5137  00EA6D  61                 	db	97	;'a'
  5138  00EA6E  72                 	db	114	;'r'
  5139  00EA6F  79                 	db	121	;'y'
  5140  00EA70  20                 	db	32
  5141  00EA71  4D                 	db	77	;'M'
  5142  00EA72  65                 	db	101	;'e'
  5143  00EA73  61                 	db	97	;'a'
  5144  00EA74  73                 	db	115	;'s'
  5145  00EA75  75                 	db	117	;'u'
  5146  00EA76  72                 	db	114	;'r'
  5147  00EA77  65                 	db	101	;'e'
  5148  00EA78  6D                 	db	109	;'m'
  5149  00EA79  65                 	db	101	;'e'
  5150  00EA7A  6E                 	db	110	;'n'
  5151  00EA7B  74                 	db	116	;'t'
  5152  00EA7C  20                 	db	32
  5153  00EA7D  43                 	db	67	;'C'
  5154  00EA7E  6F                 	db	111	;'o'
  5155  00EA7F  6D                 	db	109	;'m'
  5156  00EA80  6D                 	db	109	;'m'
  5157  00EA81  61                 	db	97	;'a'
  5158  00EA82  6E                 	db	110	;'n'
  5159  00EA83  64                 	db	100	;'d'
  5160  00EA84  73                 	db	115	;'s'
  5161  00EA85  3A                 	db	58	;':'
  5162  00EA86  0A                 	db	10
  5163  00EA87  0D                 	db	13
  5164  00EA88  20                 	db	32
  5165  00EA89  20                 	db	32
  5166  00EA8A  20                 	db	32
  5167  00EA8B  4D                 	db	77	;'M'
  5168  00EA8C  65                 	db	101	;'e'
  5169  00EA8D  61                 	db	97	;'a'
  5170  00EA8E  73                 	db	115	;'s'
  5171  00EA8F  75                 	db	117	;'u'
  5172  00EA90  72                 	db	114	;'r'
  5173  00EA91  65                 	db	101	;'e'
  5174  00EA92  20                 	db	32
  5175  00EA93  44                 	db	68	;'D'
  5176  00EA94  65                 	db	101	;'e'
  5177  00EA95  74                 	db	116	;'t'
  5178  00EA96  65                 	db	101	;'e'
  5179  00EA97  63                 	db	99	;'c'
  5180  00EA98  74                 	db	116	;'t'
  5181  00EA99  65                 	db	101	;'e'
  5182  00EA9A  64                 	db	100	;'d'
  5183  00EA9B  20                 	db	32
  5184  00EA9C  43                 	db	67	;'C'
  5185  00EA9D  75                 	db	117	;'u'
  5186  00EA9E  72                 	db	114	;'r'
  5187  00EA9F  72                 	db	114	;'r'
  5188  00EAA0  65                 	db	101	;'e'
  5189  00EAA1  6E                 	db	110	;'n'
  5190  00EAA2  74                 	db	116	;'t'
  5191  00EAA3  3F                 	db	63	;'?'
  5192  00EAA4  3A                 	db	58	;':'
  5193  00EAA5  20                 	db	32
  5194  00EAA6  52                 	db	82	;'R'
  5195  00EAA7  65                 	db	101	;'e'
  5196  00EAA8  74                 	db	116	;'t'
  5197  00EAA9  75                 	db	117	;'u'
  5198  00EAAA  72                 	db	114	;'r'
  5199  00EAAB  6E                 	db	110	;'n'
  5200  00EAAC  73                 	db	115	;'s'
  5201  00EAAD  20                 	db	32
  5202  00EAAE  6D                 	db	109	;'m'
  5203  00EAAF  65                 	db	101	;'e'
  5204  00EAB0  61                 	db	97	;'a'
  5205  00EAB1  73                 	db	115	;'s'
  5206  00EAB2  75                 	db	117	;'u'
  5207  00EAB3  72                 	db	114	;'r'
  5208  00EAB4  65                 	db	101	;'e'
  5209  00EAB5  64                 	db	100	;'d'
  5210  00EAB6  20                 	db	32
  5211  00EAB7  6F                 	db	111	;'o'
  5212  00EAB8  75                 	db	117	;'u'
  5213  00EAB9  74                 	db	116	;'t'
  5214  00EABA  70                 	db	112	;'p'
  5215  00EABB  75                 	db	117	;'u'
  5216  00EABC  74                 	db	116	;'t'
  5217  00EABD  20                 	db	32
  5218  00EABE  63                 	db	99	;'c'
  5219  00EABF  75                 	db	117	;'u'
  5220  00EAC0  72                 	db	114	;'r'
  5221  00EAC1  72                 	db	114	;'r'
  5222  00EAC2  65                 	db	101	;'e'
  5223  00EAC3  6E                 	db	110	;'n'
  5224  00EAC4  74                 	db	116	;'t'
  5225  00EAC5  20                 	db	32
  5226  00EAC6  69                 	db	105	;'i'
  5227  00EAC7  6E                 	db	110	;'n'
  5228  00EAC8  20                 	db	32
  5229  00EAC9  61                 	db	97	;'a'
  5230  00EACA  6D                 	db	109	;'m'
  5231  00EACB  70                 	db	112	;'p'
  5232  00EACC  73                 	db	115	;'s'
  5233  00EACD  20                 	db	32
  5234  00EACE  61                 	db	97	;'a'
  5235  00EACF  73                 	db	115	;'s'
  5236  00EAD0  20                 	db	32
  5237  00EAD1  73                 	db	115	;'s'
  5238  00EAD2  65                 	db	101	;'e'
  5239  00EAD3  65                 	db	101	;'e'
  5240  00EAD4  6E                 	db	110	;'n'
  5241  00EAD5  20                 	db	32
  5242  00EAD6  62                 	db	98	;'b'
  5243  00EAD7  79                 	db	121	;'y'
  5244  00EAD8  20                 	db	32
  5245  00EAD9  41                 	db	65	;'A'
  5246  00EADA  44                 	db	68	;'D'
  5247  00EADB  43                 	db	67	;'C'
  5248  00EADC  0A                 	db	10
  5249  00EADD  0D                 	db	13
  5250  00EADE  20                 	db	32
  5251  00EADF  20                 	db	32
  5252  00EAE0  20                 	db	32
  5253  00EAE1  4D                 	db	77	;'M'
  5254  00EAE2  65                 	db	101	;'e'
  5255  00EAE3  61                 	db	97	;'a'
  5256  00EAE4  73                 	db	115	;'s'
  5257  00EAE5  75                 	db	117	;'u'
  5258  00EAE6  72                 	db	114	;'r'
  5259  00EAE7  65                 	db	101	;'e'
  5260  00EAE8  20                 	db	32
  5261  00EAE9  52                 	db	82	;'R'
  5262  00EAEA  4D                 	db	77	;'M'
  5263  00EAEB  53                 	db	83	;'S'
  5264  00EAEC  20                 	db	32
  5265  00EAED  43                 	db	67	;'C'
  5266  00EAEE  75                 	db	117	;'u'
  5267  00EAEF  72                 	db	114	;'r'
  5268  00EAF0  72                 	db	114	;'r'
  5269  00EAF1  65                 	db	101	;'e'
  5270  00EAF2  6E                 	db	110	;'n'
  5271  00EAF3  74                 	db	116	;'t'
  5272  00EAF4  3F                 	db	63	;'?'
  5273  00EAF5  3A                 	db	58	;':'
  5274  00EAF6  20                 	db	32
  5275  00EAF7  52                 	db	82	;'R'
  5276  00EAF8  65                 	db	101	;'e'
  5277  00EAF9  74                 	db	116	;'t'
  5278  00EAFA  75                 	db	117	;'u'
  5279  00EAFB  72                 	db	114	;'r'
  5280  00EAFC  6E                 	db	110	;'n'
  5281  00EAFD  73                 	db	115	;'s'
  5282  00EAFE  20                 	db	32
  5283  00EAFF  74                 	db	116	;'t'
  5284  00EB00  68                 	db	104	;'h'
  5285  00EB01  65                 	db	101	;'e'
  5286  00EB02  20                 	db	32
  5287  00EB03  63                 	db	99	;'c'
  5288  00EB04  61                 	db	97	;'a'
  5289  00EB05  6C                 	db	108	;'l'
  5290  00EB06  63                 	db	99	;'c'
  5291  00EB07  75                 	db	117	;'u'
  5292  00EB08  6C                 	db	108	;'l'
  5293  00EB09  61                 	db	97	;'a'
  5294  00EB0A  74                 	db	116	;'t'
  5295  00EB0B  65                 	db	101	;'e'
  5296  00EB0C  64                 	db	100	;'d'
  5297  00EB0D  20                 	db	32
  5298  00EB0E  52                 	db	82	;'R'
  5299  00EB0F  4D                 	db	77	;'M'
  5300  00EB10  53                 	db	83	;'S'
  5301  00EB11  20                 	db	32
  5302  00EB12  6F                 	db	111	;'o'
  5303  00EB13  75                 	db	117	;'u'
  5304  00EB14  74                 	db	116	;'t'
  5305  00EB15  70                 	db	112	;'p'
  5306  00EB16  75                 	db	117	;'u'
  5307  00EB17  74                 	db	116	;'t'
  5308  00EB18  20                 	db	32
  5309  00EB19  63                 	db	99	;'c'
  5310  00EB1A  75                 	db	117	;'u'
  5311  00EB1B  72                 	db	114	;'r'
  5312  00EB1C  72                 	db	114	;'r'
  5313  00EB1D  65                 	db	101	;'e'
  5314  00EB1E  6E                 	db	110	;'n'
  5315  00EB1F  74                 	db	116	;'t'
  5316  00EB20  20                 	db	32
  5317  00EB21  66                 	db	102	;'f'
  5318  00EB22  72                 	db	114	;'r'
  5319  00EB23  6F                 	db	111	;'o'
  5320  00EB24  6D                 	db	109	;'m'
  5321  00EB25  20                 	db	32
  5322  00EB26  6D                 	db	109	;'m'
  5323  00EB27  65                 	db	101	;'e'
  5324  00EB28  61                 	db	97	;'a'
  5325  00EB29  73                 	db	115	;'s'
  5326  00EB2A  75                 	db	117	;'u'
  5327  00EB2B  72                 	db	114	;'r'
  5328  00EB2C  65                 	db	101	;'e'
  5329  00EB2D  6D                 	db	109	;'m'
  5330  00EB2E  65                 	db	101	;'e'
  5331  00EB2F  6E                 	db	110	;'n'
  5332  00EB30  74                 	db	116	;'t'
  5333  00EB31  73                 	db	115	;'s'
  5334  00EB32  20                 	db	32
  5335  00EB33  61                 	db	97	;'a'
  5336  00EB34  6E                 	db	110	;'n'
  5337  00EB35  64                 	db	100	;'d'
  5338  00EB36  20                 	db	32
  5339  00EB37  54                 	db	84	;'T'
  5340  00EB38  52                 	db	82	;'R'
  5341  00EB39  49                 	db	73	;'I'
  5342  00EB3A  41                 	db	65	;'A'
  5343  00EB3B  43                 	db	67	;'C'
  5344  00EB3C  20                 	db	32
  5345  00EB3D  66                 	db	102	;'f'
  5346  00EB3E  69                 	db	105	;'i'
  5347  00EB3F  72                 	db	114	;'r'
  5348  00EB40  69                 	db	105	;'i'
  5349  00EB41  6E                 	db	110	;'n'
  5350  00EB42  67                 	db	103	;'g'
  5351  00EB43  20                 	db	32
  5352  00EB44  61                 	db	97	;'a'
  5353  00EB45  6E                 	db	110	;'n'
  5354  00EB46  67                 	db	103	;'g'
  5355  00EB47  6C                 	db	108	;'l'
  5356  00EB48  65                 	db	101	;'e'
  5357  00EB49  0A                 	db	10
  5358  00EB4A  0D                 	db	13
  5359  00EB4B  20                 	db	32
  5360  00EB4C  20                 	db	32
  5361  00EB4D  20                 	db	32
  5362  00EB4E  4D                 	db	77	;'M'
  5363  00EB4F  65                 	db	101	;'e'
  5364  00EB50  61                 	db	97	;'a'
  5365  00EB51  73                 	db	115	;'s'
  5366  00EB52  75                 	db	117	;'u'
  5367  00EB53  72                 	db	114	;'r'
  5368  00EB54  65                 	db	101	;'e'
  5369  00EB55  20                 	db	32
  5370  00EB56  52                 	db	82	;'R'
  5371  00EB57  4D                 	db	77	;'M'
  5372  00EB58  53                 	db	83	;'S'
  5373  00EB59  20                 	db	32
  5374  00EB5A  56                 	db	86	;'V'
  5375  00EB5B  6F                 	db	111	;'o'
  5376  00EB5C  6C                 	db	108	;'l'
  5377  00EB5D  74                 	db	116	;'t'
  5378  00EB5E  61                 	db	97	;'a'
  5379  00EB5F  67                 	db	103	;'g'
  5380  00EB60  65                 	db	101	;'e'
  5381  00EB61  3F                 	db	63	;'?'
  5382  00EB62  3A                 	db	58	;':'
  5383  00EB63  20                 	db	32
  5384  00EB64  52                 	db	82	;'R'
  5385  00EB65  65                 	db	101	;'e'
  5386  00EB66  74                 	db	116	;'t'
  5387  00EB67  75                 	db	117	;'u'
  5388  00EB68  72                 	db	114	;'r'
  5389  00EB69  6E                 	db	110	;'n'
  5390  00EB6A  73                 	db	115	;'s'
  5391  00EB6B  20                 	db	32
  5392  00EB6C  74                 	db	116	;'t'
  5393  00EB6D  68                 	db	104	;'h'
  5394  00EB6E  65                 	db	101	;'e'
  5395  00EB6F  20                 	db	32
  5396  00EB70  63                 	db	99	;'c'
  5397  00EB71  61                 	db	97	;'a'
  5398  00EB72  6C                 	db	108	;'l'
  5399  00EB73  63                 	db	99	;'c'
  5400  00EB74  75                 	db	117	;'u'
  5401  00EB75  6C                 	db	108	;'l'
  5402  00EB76  61                 	db	97	;'a'
  5403  00EB77  74                 	db	116	;'t'
  5404  00EB78  65                 	db	101	;'e'
  5405  00EB79  64                 	db	100	;'d'
  5406  00EB7A  20                 	db	32
  5407  00EB7B  52                 	db	82	;'R'
  5408  00EB7C  4D                 	db	77	;'M'
  5409  00EB7D  53                 	db	83	;'S'
  5410  00EB7E  20                 	db	32
  5411  00EB7F  6F                 	db	111	;'o'
  5412  00EB80  75                 	db	117	;'u'
  5413  00EB81  74                 	db	116	;'t'
  5414  00EB82  70                 	db	112	;'p'
  5415  00EB83  75                 	db	117	;'u'
  5416  00EB84  74                 	db	116	;'t'
  5417  00EB85  20                 	db	32
  5418  00EB86  76                 	db	118	;'v'
  5419  00EB87  6F                 	db	111	;'o'
  5420  00EB88  6C                 	db	108	;'l'
  5421  00EB89  74                 	db	116	;'t'
  5422  00EB8A  61                 	db	97	;'a'
  5423  00EB8B  67                 	db	103	;'g'
  5424  00EB8C  65                 	db	101	;'e'
  5425  00EB8D  20                 	db	32
  5426  00EB8E  66                 	db	102	;'f'
  5427  00EB8F  72                 	db	114	;'r'
  5428  00EB90  6F                 	db	111	;'o'
  5429  00EB91  6D                 	db	109	;'m'
  5430  00EB92  20                 	db	32
  5431  00EB93  54                 	db	84	;'T'
  5432  00EB94  52                 	db	82	;'R'
  5433  00EB95  49                 	db	73	;'I'
  5434  00EB96  41                 	db	65	;'A'
  5435  00EB97  43                 	db	67	;'C'
  5436  00EB98  20                 	db	32
  5437  00EB99  66                 	db	102	;'f'
  5438  00EB9A  69                 	db	105	;'i'
  5439  00EB9B  72                 	db	114	;'r'
  5440  00EB9C  69                 	db	105	;'i'
  5441  00EB9D  6E                 	db	110	;'n'
  5442  00EB9E  67                 	db	103	;'g'
  5443  00EB9F  20                 	db	32
  5444  00EBA0  61                 	db	97	;'a'
  5445  00EBA1  6E                 	db	110	;'n'
  5446  00EBA2  67                 	db	103	;'g'
  5447  00EBA3  6C                 	db	108	;'l'
  5448  00EBA4  65                 	db	101	;'e'
  5449  00EBA5  0A                 	db	10
  5450  00EBA6  0D                 	db	13
  5451  00EBA7  20                 	db	32
  5452  00EBA8  20                 	db	32
  5453  00EBA9  20                 	db	32
  5454  00EBAA  4D                 	db	77	;'M'
  5455  00EBAB  65                 	db	101	;'e'
  5456  00EBAC  61                 	db	97	;'a'
  5457  00EBAD  73                 	db	115	;'s'
  5458  00EBAE  75                 	db	117	;'u'
  5459  00EBAF  72                 	db	114	;'r'
  5460  00EBB0  65                 	db	101	;'e'
  5461  00EBB1  20                 	db	32
  5462  00EBB2  50                 	db	80	;'P'
  5463  00EBB3  6F                 	db	111	;'o'
  5464  00EBB4  77                 	db	119	;'w'
  5465  00EBB5  65                 	db	101	;'e'
  5466  00EBB6  72                 	db	114	;'r'
  5467  00EBB7  3F                 	db	63	;'?'
  5468  00EBB8  3A                 	db	58	;':'
  5469  00EBB9  20                 	db	32
  5470  00EBBA  52                 	db	82	;'R'
  5471  00EBBB  65                 	db	101	;'e'
  5472  00EBBC  74                 	db	116	;'t'
  5473  00EBBD  75                 	db	117	;'u'
  5474  00EBBE  72                 	db	114	;'r'
  5475  00EBBF  6E                 	db	110	;'n'
  5476  00EBC0  73                 	db	115	;'s'
  5477  00EBC1  20                 	db	32
  5478  00EBC2  74                 	db	116	;'t'
  5479  00EBC3  68                 	db	104	;'h'
  5480  00EBC4  65                 	db	101	;'e'
  5481  00EBC5  20                 	db	32
  5482  00EBC6  63                 	db	99	;'c'
  5483  00EBC7  61                 	db	97	;'a'
  5484  00EBC8  6C                 	db	108	;'l'
  5485  00EBC9  63                 	db	99	;'c'
  5486  00EBCA  75                 	db	117	;'u'
  5487  00EBCB  6C                 	db	108	;'l'
  5488  00EBCC  61                 	db	97	;'a'
  5489  00EBCD  74                 	db	116	;'t'
  5490  00EBCE  65                 	db	101	;'e'
  5491  00EBCF  64                 	db	100	;'d'
  5492  00EBD0  20                 	db	32
  5493  00EBD1  6F                 	db	111	;'o'
  5494  00EBD2  75                 	db	117	;'u'
  5495  00EBD3  74                 	db	116	;'t'
  5496  00EBD4  70                 	db	112	;'p'
  5497  00EBD5  75                 	db	117	;'u'
  5498  00EBD6  74                 	db	116	;'t'
  5499  00EBD7  20                 	db	32
  5500  00EBD8  70                 	db	112	;'p'
  5501  00EBD9  6F                 	db	111	;'o'
  5502  00EBDA  77                 	db	119	;'w'
  5503  00EBDB  65                 	db	101	;'e'
  5504  00EBDC  72                 	db	114	;'r'
  5505  00EBDD  20                 	db	32
  5506  00EBDE  69                 	db	105	;'i'
  5507  00EBDF  6E                 	db	110	;'n'
  5508  00EBE0  20                 	db	32
  5509  00EBE1  57                 	db	87	;'W'
  5510  00EBE2  61                 	db	97	;'a'
  5511  00EBE3  74                 	db	116	;'t'
  5512  00EBE4  74                 	db	116	;'t'
  5513  00EBE5  73                 	db	115	;'s'
  5514  00EBE6  0A                 	db	10
  5515  00EBE7  0D                 	db	13
  5516  00EBE8  20                 	db	32
  5517  00EBE9  20                 	db	32
  5518  00EBEA  20                 	db	32
  5519  00EBEB  4D                 	db	77	;'M'
  5520  00EBEC  65                 	db	101	;'e'
  5521  00EBED  61                 	db	97	;'a'
  5522  00EBEE  73                 	db	115	;'s'
  5523  00EBEF  75                 	db	117	;'u'
  5524  00EBF0  72                 	db	114	;'r'
  5525  00EBF1  65                 	db	101	;'e'
  5526  00EBF2  20                 	db	32
  5527  00EBF3  45                 	db	69	;'E'
  5528  00EBF4  6E                 	db	110	;'n'
  5529  00EBF5  65                 	db	101	;'e'
  5530  00EBF6  72                 	db	114	;'r'
  5531  00EBF7  67                 	db	103	;'g'
  5532  00EBF8  79                 	db	121	;'y'
  5533  00EBF9  3F                 	db	63	;'?'
  5534  00EBFA  3A                 	db	58	;':'
  5535  00EBFB  20                 	db	32
  5536  00EBFC  52                 	db	82	;'R'
  5537  00EBFD  65                 	db	101	;'e'
  5538  00EBFE  74                 	db	116	;'t'
  5539  00EBFF  75                 	db	117	;'u'
  5540  00EC00  72                 	db	114	;'r'
  5541  00EC01  6E                 	db	110	;'n'
  5542  00EC02  73                 	db	115	;'s'
  5543  00EC03  20                 	db	32
  5544  00EC04  6D                 	db	109	;'m'
  5545  00EC05  65                 	db	101	;'e'
  5546  00EC06  61                 	db	97	;'a'
  5547  00EC07  73                 	db	115	;'s'
  5548  00EC08  75                 	db	117	;'u'
  5549  00EC09  72                 	db	114	;'r'
  5550  00EC0A  65                 	db	101	;'e'
  5551  00EC0B  64                 	db	100	;'d'
  5552  00EC0C  20                 	db	32
  5553  00EC0D  65                 	db	101	;'e'
  5554  00EC0E  6E                 	db	110	;'n'
  5555  00EC0F  65                 	db	101	;'e'
  5556  00EC10  72                 	db	114	;'r'
  5557  00EC11  67                 	db	103	;'g'
  5558  00EC12  79                 	db	121	;'y'
  5559  00EC13  20                 	db	32
  5560  00EC14  73                 	db	115	;'s'
  5561  00EC15  69                 	db	105	;'i'
  5562  00EC16  6E                 	db	110	;'n'
  5563  00EC17  63                 	db	99	;'c'
  5564  00EC18  65                 	db	101	;'e'
  5565  00EC19  20                 	db	32
  5566  00EC1A  6D                 	db	109	;'m'
  5567  00EC1B  65                 	db	101	;'e'
  5568  00EC1C  61                 	db	97	;'a'
  5569  00EC1D  73                 	db	115	;'s'
  5570  00EC1E  75                 	db	117	;'u'
  5571  00EC1F  72                 	db	114	;'r'
  5572  00EC20  65                 	db	101	;'e'
  5573  00EC21  6D                 	db	109	;'m'
  5574  00EC22  65                 	db	101	;'e'
  5575  00EC23  6E                 	db	110	;'n'
  5576  00EC24  74                 	db	116	;'t'
  5577  00EC25  20                 	db	32
  5578  00EC26  72                 	db	114	;'r'
  5579  00EC27  65                 	db	101	;'e'
  5580  00EC28  73                 	db	115	;'s'
  5581  00EC29  65                 	db	101	;'e'
  5582  00EC2A  74                 	db	116	;'t'
  5583  00EC2B  20                 	db	32
  5584  00EC2C  69                 	db	105	;'i'
  5585  00EC2D  6E                 	db	110	;'n'
  5586  00EC2E  20                 	db	32
  5587  00EC2F  57                 	db	87	;'W'
  5588  00EC30  61                 	db	97	;'a'
  5589  00EC31  74                 	db	116	;'t'
  5590  00EC32  74                 	db	116	;'t'
  5591  00EC33  20                 	db	32
  5592  00EC34  48                 	db	72	;'H'
  5593  00EC35  6F                 	db	111	;'o'
  5594  00EC36  75                 	db	117	;'u'
  5595  00EC37  72                 	db	114	;'r'
  5596  00EC38  73                 	db	115	;'s'
  5597  00EC39  0A                 	db	10
  5598  00EC3A  0D                 	db	13
  5599  00EC3B  20                 	db	32
  5600  00EC3C  20                 	db	32
  5601  00EC3D  20                 	db	32
  5602  00EC3E  4C                 	db	76	;'L'
  5603  00EC3F  6F                 	db	111	;'o'
  5604  00EC40  61                 	db	97	;'a'
  5605  00EC41  64                 	db	100	;'d'
  5606  00EC42  20                 	db	32
  5607  00EC43  4F                 	db	79	;'O'
  5608  00EC44  6E                 	db	110	;'n'
  5609  00EC45  20                 	db	32
  5610  00EC46  54                 	db	84	;'T'
  5611  00EC47  69                 	db	105	;'i'
  5612  00EC48  6D                 	db	109	;'m'
  5613  00EC49  65                 	db	101	;'e'
  5614  00EC4A  3F                 	db	63	;'?'
  5615  00EC4B  3A                 	db	58	;':'
  5616  00EC4C  20                 	db	32
  5617  00EC4D  52                 	db	82	;'R'
  5618  00EC4E  65                 	db	101	;'e'
  5619  00EC4F  74                 	db	116	;'t'
  5620  00EC50  75                 	db	117	;'u'
  5621  00EC51  72                 	db	114	;'r'
  5622  00EC52  6E                 	db	110	;'n'
  5623  00EC53  73                 	db	115	;'s'
  5624  00EC54  20                 	db	32
  5625  00EC55  6C                 	db	108	;'l'
  5626  00EC56  6F                 	db	111	;'o'
  5627  00EC57  61                 	db	97	;'a'
  5628  00EC58  64                 	db	100	;'d'
  5629  00EC59  20                 	db	32
  5630  00EC5A  6F                 	db	111	;'o'
  5631  00EC5B  6E                 	db	110	;'n'
  5632  00EC5C  20                 	db	32
  5633  00EC5D  74                 	db	116	;'t'
  5634  00EC5E  69                 	db	105	;'i'
  5635  00EC5F  6D                 	db	109	;'m'
  5636  00EC60  65                 	db	101	;'e'
  5637  00EC61  20                 	db	32
  5638  00EC62  73                 	db	115	;'s'
  5639  00EC63  69                 	db	105	;'i'
  5640  00EC64  6E                 	db	110	;'n'
  5641  00EC65  63                 	db	99	;'c'
  5642  00EC66  65                 	db	101	;'e'
  5643  00EC67  20                 	db	32
  5644  00EC68  6C                 	db	108	;'l'
  5645  00EC69  61                 	db	97	;'a'
  5646  00EC6A  73                 	db	115	;'s'
  5647  00EC6B  74                 	db	116	;'t'
  5648  00EC6C  20                 	db	32
  5649  00EC6D  64                 	db	100	;'d'
  5650  00EC6E  65                 	db	101	;'e'
  5651  00EC6F  76                 	db	118	;'v'
  5652  00EC70  69                 	db	105	;'i'
  5653  00EC71  63                 	db	99	;'c'
  5654  00EC72  65                 	db	101	;'e'
  5655  00EC73  20                 	db	32
  5656  00EC74  72                 	db	114	;'r'
  5657  00EC75  65                 	db	101	;'e'
  5658  00EC76  73                 	db	115	;'s'
  5659  00EC77  65                 	db	101	;'e'
  5660  00EC78  74                 	db	116	;'t'
  5661  00EC79  20                 	db	32
  5662  00EC7A  69                 	db	105	;'i'
  5663  00EC7B  6E                 	db	110	;'n'
  5664  00EC7C  20                 	db	32
  5665  00EC7D  73                 	db	115	;'s'
  5666  00EC7E  65                 	db	101	;'e'
  5667  00EC7F  63                 	db	99	;'c'
  5668  00EC80  6F                 	db	111	;'o'
  5669  00EC81  6E                 	db	110	;'n'
  5670  00EC82  64                 	db	100	;'d'
  5671  00EC83  73                 	db	115	;'s'
  5672  00EC84  0A                 	db	10
  5673  00EC85  0D                 	db	13
  5674  00EC86  20                 	db	32
  5675  00EC87  20                 	db	32
  5676  00EC88  20                 	db	32
  5677  00EC89  4D                 	db	77	;'M'
  5678  00EC8A  61                 	db	97	;'a'
  5679  00EC8B  78                 	db	120	;'x'
  5680  00EC8C  20                 	db	32
  5681  00EC8D  52                 	db	82	;'R'
  5682  00EC8E  4D                 	db	77	;'M'
  5683  00EC8F  53                 	db	83	;'S'
  5684  00EC90  20                 	db	32
  5685  00EC91  43                 	db	67	;'C'
  5686  00EC92  75                 	db	117	;'u'
  5687  00EC93  72                 	db	114	;'r'
  5688  00EC94  72                 	db	114	;'r'
  5689  00EC95  65                 	db	101	;'e'
  5690  00EC96  6E                 	db	110	;'n'
  5691  00EC97  74                 	db	116	;'t'
  5692  00EC98  3F                 	db	63	;'?'
  5693  00EC99  3A                 	db	58	;':'
  5694  00EC9A  20                 	db	32
  5695  00EC9B  50                 	db	80	;'P'
  5696  00EC9C  72                 	db	114	;'r'
  5697  00EC9D  69                 	db	105	;'i'
  5698  00EC9E  6E                 	db	110	;'n'
  5699  00EC9F  74                 	db	116	;'t'
  5700  00ECA0  73                 	db	115	;'s'
  5701  00ECA1  20                 	db	32
  5702  00ECA2  74                 	db	116	;'t'
  5703  00ECA3  68                 	db	104	;'h'
  5704  00ECA4  65                 	db	101	;'e'
  5705  00ECA5  20                 	db	32
  5706  00ECA6  6D                 	db	109	;'m'
  5707  00ECA7  61                 	db	97	;'a'
  5708  00ECA8  78                 	db	120	;'x'
  5709  00ECA9  69                 	db	105	;'i'
  5710  00ECAA  6D                 	db	109	;'m'
  5711  00ECAB  75                 	db	117	;'u'
  5712  00ECAC  6D                 	db	109	;'m'
  5713  00ECAD  20                 	db	32
  5714  00ECAE  72                 	db	114	;'r'
  5715  00ECAF  65                 	db	101	;'e'
  5716  00ECB0  63                 	db	99	;'c'
  5717  00ECB1  6F                 	db	111	;'o'
  5718  00ECB2  72                 	db	114	;'r'
  5719  00ECB3  64                 	db	100	;'d'
  5720  00ECB4  65                 	db	101	;'e'
  5721  00ECB5  64                 	db	100	;'d'
  5722  00ECB6  20                 	db	32
  5723  00ECB7  52                 	db	82	;'R'
  5724  00ECB8  4D                 	db	77	;'M'
  5725  00ECB9  53                 	db	83	;'S'
  5726  00ECBA  20                 	db	32
  5727  00ECBB  6F                 	db	111	;'o'
  5728  00ECBC  75                 	db	117	;'u'
  5729  00ECBD  74                 	db	116	;'t'
  5730  00ECBE  70                 	db	112	;'p'
  5731  00ECBF  75                 	db	117	;'u'
  5732  00ECC0  74                 	db	116	;'t'
  5733  00ECC1  20                 	db	32
  5734  00ECC2  63                 	db	99	;'c'
  5735  00ECC3  75                 	db	117	;'u'
  5736  00ECC4  72                 	db	114	;'r'
  5737  00ECC5  72                 	db	114	;'r'
  5738  00ECC6  65                 	db	101	;'e'
  5739  00ECC7  6E                 	db	110	;'n'
  5740  00ECC8  74                 	db	116	;'t'
  5741  00ECC9  0A                 	db	10
  5742  00ECCA  0D                 	db	13
  5743  00ECCB  20                 	db	32
  5744  00ECCC  20                 	db	32
  5745  00ECCD  20                 	db	32
  5746  00ECCE  4D                 	db	77	;'M'
  5747  00ECCF  61                 	db	97	;'a'
  5748  00ECD0  78                 	db	120	;'x'
  5749  00ECD1  20                 	db	32
  5750  00ECD2  50                 	db	80	;'P'
  5751  00ECD3  6F                 	db	111	;'o'
  5752  00ECD4  77                 	db	119	;'w'
  5753  00ECD5  65                 	db	101	;'e'
  5754  00ECD6  72                 	db	114	;'r'
  5755  00ECD7  3F                 	db	63	;'?'
  5756  00ECD8  3A                 	db	58	;':'
  5757  00ECD9  20                 	db	32
  5758  00ECDA  50                 	db	80	;'P'
  5759  00ECDB  72                 	db	114	;'r'
  5760  00ECDC  69                 	db	105	;'i'
  5761  00ECDD  6E                 	db	110	;'n'
  5762  00ECDE  74                 	db	116	;'t'
  5763  00ECDF  73                 	db	115	;'s'
  5764  00ECE0  20                 	db	32
  5765  00ECE1  74                 	db	116	;'t'
  5766  00ECE2  68                 	db	104	;'h'
  5767  00ECE3  65                 	db	101	;'e'
  5768  00ECE4  20                 	db	32
  5769  00ECE5  6D                 	db	109	;'m'
  5770  00ECE6  61                 	db	97	;'a'
  5771  00ECE7  78                 	db	120	;'x'
  5772  00ECE8  69                 	db	105	;'i'
  5773  00ECE9  6D                 	db	109	;'m'
  5774  00ECEA  75                 	db	117	;'u'
  5775  00ECEB  6D                 	db	109	;'m'
  5776  00ECEC  20                 	db	32
  5777  00ECED  72                 	db	114	;'r'
  5778  00ECEE  65                 	db	101	;'e'
  5779  00ECEF  63                 	db	99	;'c'
  5780  00ECF0  6F                 	db	111	;'o'
  5781  00ECF1  72                 	db	114	;'r'
  5782  00ECF2  64                 	db	100	;'d'
  5783  00ECF3  65                 	db	101	;'e'
  5784  00ECF4  64                 	db	100	;'d'
  5785  00ECF5  20                 	db	32
  5786  00ECF6  6F                 	db	111	;'o'
  5787  00ECF7  75                 	db	117	;'u'
  5788  00ECF8  74                 	db	116	;'t'
  5789  00ECF9  70                 	db	112	;'p'
  5790  00ECFA  75                 	db	117	;'u'
  5791  00ECFB  74                 	db	116	;'t'
  5792  00ECFC  20                 	db	32
  5793  00ECFD  70                 	db	112	;'p'
  5794  00ECFE  6F                 	db	111	;'o'
  5795  00ECFF  77                 	db	119	;'w'
  5796  00ED00  65                 	db	101	;'e'
  5797  00ED01  72                 	db	114	;'r'
  5798  00ED02  0A                 	db	10
  5799  00ED03  0D                 	db	13
  5800  00ED04  0A                 	db	10
  5801  00ED05  0D                 	db	13
  5802  00ED06  00                 	db	0
  5803  00ED07                     STR_143:
  5804  00ED07  4C                 	db	76	;'L'
  5805  00ED08  69                 	db	105	;'i'
  5806  00ED09  73                 	db	115	;'s'
  5807  00ED0A  74                 	db	116	;'t'
  5808  00ED0B  20                 	db	32
  5809  00ED0C  6F                 	db	111	;'o'
  5810  00ED0D  66                 	db	102	;'f'
  5811  00ED0E  20                 	db	32
  5812  00ED0F  73                 	db	115	;'s'
  5813  00ED10  75                 	db	117	;'u'
  5814  00ED11  70                 	db	112	;'p'
  5815  00ED12  70                 	db	112	;'p'
  5816  00ED13  6F                 	db	111	;'o'
  5817  00ED14  72                 	db	114	;'r'
  5818  00ED15  74                 	db	116	;'t'
  5819  00ED16  65                 	db	101	;'e'
  5820  00ED17  64                 	db	100	;'d'
  5821  00ED18  20                 	db	32
  5822  00ED19  4F                 	db	79	;'O'
  5823  00ED1A  75                 	db	117	;'u'
  5824  00ED1B  74                 	db	116	;'t'
  5825  00ED1C  70                 	db	112	;'p'
  5826  00ED1D  75                 	db	117	;'u'
  5827  00ED1E  74                 	db	116	;'t'
  5828  00ED1F  20                 	db	32
  5829  00ED20  43                 	db	67	;'C'
  5830  00ED21  6F                 	db	111	;'o'
  5831  00ED22  6E                 	db	110	;'n'
  5832  00ED23  74                 	db	116	;'t'
  5833  00ED24  72                 	db	114	;'r'
  5834  00ED25  6F                 	db	111	;'o'
  5835  00ED26  6C                 	db	108	;'l'
  5836  00ED27  20                 	db	32
  5837  00ED28  43                 	db	67	;'C'
  5838  00ED29  6F                 	db	111	;'o'
  5839  00ED2A  6D                 	db	109	;'m'
  5840  00ED2B  6D                 	db	109	;'m'
  5841  00ED2C  61                 	db	97	;'a'
  5842  00ED2D  6E                 	db	110	;'n'
  5843  00ED2E  64                 	db	100	;'d'
  5844  00ED2F  73                 	db	115	;'s'
  5845  00ED30  3A                 	db	58	;':'
  5846  00ED31  0A                 	db	10
  5847  00ED32  0D                 	db	13
  5848  00ED33  20                 	db	32
  5849  00ED34  20                 	db	32
  5850  00ED35  20                 	db	32
  5851  00ED36  45                 	db	69	;'E'
  5852  00ED37  6E                 	db	110	;'n'
  5853  00ED38  61                 	db	97	;'a'
  5854  00ED39  62                 	db	98	;'b'
  5855  00ED3A  6C                 	db	108	;'l'
  5856  00ED3B  65                 	db	101	;'e'
  5857  00ED3C  20                 	db	32
  5858  00ED3D  44                 	db	68	;'D'
  5859  00ED3E  69                 	db	105	;'i'
  5860  00ED3F  6D                 	db	109	;'m'
  5861  00ED40  6D                 	db	109	;'m'
  5862  00ED41  69                 	db	105	;'i'
  5863  00ED42  6E                 	db	110	;'n'
  5864  00ED43  67                 	db	103	;'g'
  5865  00ED44  3A                 	db	58	;':'
  5866  00ED45  20                 	db	32
  5867  00ED46  45                 	db	69	;'E'
  5868  00ED47  6E                 	db	110	;'n'
  5869  00ED48  61                 	db	97	;'a'
  5870  00ED49  62                 	db	98	;'b'
  5871  00ED4A  6C                 	db	108	;'l'
  5872  00ED4B  65                 	db	101	;'e'
  5873  00ED4C  20                 	db	32
  5874  00ED4D  54                 	db	84	;'T'
  5875  00ED4E  52                 	db	82	;'R'
  5876  00ED4F  49                 	db	73	;'I'
  5877  00ED50  41                 	db	65	;'A'
  5878  00ED51  43                 	db	67	;'C'
  5879  00ED52  20                 	db	32
  5880  00ED53  6F                 	db	111	;'o'
  5881  00ED54  75                 	db	117	;'u'
  5882  00ED55  74                 	db	116	;'t'
  5883  00ED56  70                 	db	112	;'p'
  5884  00ED57  75                 	db	117	;'u'
  5885  00ED58  74                 	db	116	;'t'
  5886  00ED59  20                 	db	32
  5887  00ED5A  64                 	db	100	;'d'
  5888  00ED5B  69                 	db	105	;'i'
  5889  00ED5C  6D                 	db	109	;'m'
  5890  00ED5D  6D                 	db	109	;'m'
  5891  00ED5E  69                 	db	105	;'i'
  5892  00ED5F  6E                 	db	110	;'n'
  5893  00ED60  67                 	db	103	;'g'
  5894  00ED61  0A                 	db	10
  5895  00ED62  0D                 	db	13
  5896  00ED63  20                 	db	32
  5897  00ED64  20                 	db	32
  5898  00ED65  20                 	db	32
  5899  00ED66  44                 	db	68	;'D'
  5900  00ED67  69                 	db	105	;'i'
  5901  00ED68  73                 	db	115	;'s'
  5902  00ED69  61                 	db	97	;'a'
  5903  00ED6A  62                 	db	98	;'b'
  5904  00ED6B  6C                 	db	108	;'l'
  5905  00ED6C  65                 	db	101	;'e'
  5906  00ED6D  20                 	db	32
  5907  00ED6E  44                 	db	68	;'D'
  5908  00ED6F  69                 	db	105	;'i'
  5909  00ED70  6D                 	db	109	;'m'
  5910  00ED71  6D                 	db	109	;'m'
  5911  00ED72  69                 	db	105	;'i'
  5912  00ED73  6E                 	db	110	;'n'
  5913  00ED74  67                 	db	103	;'g'
  5914  00ED75  3A                 	db	58	;':'
  5915  00ED76  20                 	db	32
  5916  00ED77  44                 	db	68	;'D'
  5917  00ED78  69                 	db	105	;'i'
  5918  00ED79  73                 	db	115	;'s'
  5919  00ED7A  61                 	db	97	;'a'
  5920  00ED7B  62                 	db	98	;'b'
  5921  00ED7C  6C                 	db	108	;'l'
  5922  00ED7D  65                 	db	101	;'e'
  5923  00ED7E  20                 	db	32
  5924  00ED7F  54                 	db	84	;'T'
  5925  00ED80  52                 	db	82	;'R'
  5926  00ED81  49                 	db	73	;'I'
  5927  00ED82  41                 	db	65	;'A'
  5928  00ED83  43                 	db	67	;'C'
  5929  00ED84  20                 	db	32
  5930  00ED85  6F                 	db	111	;'o'
  5931  00ED86  75                 	db	117	;'u'
  5932  00ED87  74                 	db	116	;'t'
  5933  00ED88  70                 	db	112	;'p'
  5934  00ED89  75                 	db	117	;'u'
  5935  00ED8A  74                 	db	116	;'t'
  5936  00ED8B  20                 	db	32
  5937  00ED8C  64                 	db	100	;'d'
  5938  00ED8D  69                 	db	105	;'i'
  5939  00ED8E  6D                 	db	109	;'m'
  5940  00ED8F  6D                 	db	109	;'m'
  5941  00ED90  69                 	db	105	;'i'
  5942  00ED91  6E                 	db	110	;'n'
  5943  00ED92  67                 	db	103	;'g'
  5944  00ED93  0A                 	db	10
  5945  00ED94  0D                 	db	13
  5946  00ED95  20                 	db	32
  5947  00ED96  20                 	db	32
  5948  00ED97  20                 	db	32
  5949  00ED98  45                 	db	69	;'E'
  5950  00ED99  6E                 	db	110	;'n'
  5951  00ED9A  61                 	db	97	;'a'
  5952  00ED9B  62                 	db	98	;'b'
  5953  00ED9C  6C                 	db	108	;'l'
  5954  00ED9D  65                 	db	101	;'e'
  5955  00ED9E  20                 	db	32
  5956  00ED9F  4C                 	db	76	;'L'
  5957  00EDA0  6F                 	db	111	;'o'
  5958  00EDA1  61                 	db	97	;'a'
  5959  00EDA2  64                 	db	100	;'d'
  5960  00EDA3  3A                 	db	58	;':'
  5961  00EDA4  20                 	db	32
  5962  00EDA5  45                 	db	69	;'E'
  5963  00EDA6  6E                 	db	110	;'n'
  5964  00EDA7  61                 	db	97	;'a'
  5965  00EDA8  62                 	db	98	;'b'
  5966  00EDA9  6C                 	db	108	;'l'
  5967  00EDAA  65                 	db	101	;'e'
  5968  00EDAB  73                 	db	115	;'s'
  5969  00EDAC  20                 	db	32
  5970  00EDAD  74                 	db	116	;'t'
  5971  00EDAE  68                 	db	104	;'h'
  5972  00EDAF  65                 	db	101	;'e'
  5973  00EDB0  20                 	db	32
  5974  00EDB1  6F                 	db	111	;'o'
  5975  00EDB2  75                 	db	117	;'u'
  5976  00EDB3  74                 	db	116	;'t'
  5977  00EDB4  70                 	db	112	;'p'
  5978  00EDB5  75                 	db	117	;'u'
  5979  00EDB6  74                 	db	116	;'t'
  5980  00EDB7  20                 	db	32
  5981  00EDB8  54                 	db	84	;'T'
  5982  00EDB9  52                 	db	82	;'R'
  5983  00EDBA  49                 	db	73	;'I'
  5984  00EDBB  41                 	db	65	;'A'
  5985  00EDBC  43                 	db	67	;'C'
  5986  00EDBD  20                 	db	32
  5987  00EDBE  77                 	db	119	;'w'
  5988  00EDBF  69                 	db	105	;'i'
  5989  00EDC0  74                 	db	116	;'t'
  5990  00EDC1  68                 	db	104	;'h'
  5991  00EDC2  20                 	db	32
  5992  00EDC3  64                 	db	100	;'d'
  5993  00EDC4  69                 	db	105	;'i'
  5994  00EDC5  6D                 	db	109	;'m'
  5995  00EDC6  6D                 	db	109	;'m'
  5996  00EDC7  69                 	db	105	;'i'
  5997  00EDC8  6E                 	db	110	;'n'
  5998  00EDC9  67                 	db	103	;'g'
  5999  00EDCA  20                 	db	32
  6000  00EDCB  64                 	db	100	;'d'
  6001  00EDCC  69                 	db	105	;'i'
  6002  00EDCD  73                 	db	115	;'s'
  6003  00EDCE  61                 	db	97	;'a'
  6004  00EDCF  62                 	db	98	;'b'
  6005  00EDD0  6C                 	db	108	;'l'
  6006  00EDD1  65                 	db	101	;'e'
  6007  00EDD2  64                 	db	100	;'d'
  6008  00EDD3  0A                 	db	10
  6009  00EDD4  0D                 	db	13
  6010  00EDD5  20                 	db	32
  6011  00EDD6  20                 	db	32
  6012  00EDD7  20                 	db	32
  6013  00EDD8  44                 	db	68	;'D'
  6014  00EDD9  69                 	db	105	;'i'
  6015  00EDDA  73                 	db	115	;'s'
  6016  00EDDB  61                 	db	97	;'a'
  6017  00EDDC  62                 	db	98	;'b'
  6018  00EDDD  6C                 	db	108	;'l'
  6019  00EDDE  65                 	db	101	;'e'
  6020  00EDDF  20                 	db	32
  6021  00EDE0  4C                 	db	76	;'L'
  6022  00EDE1  6F                 	db	111	;'o'
  6023  00EDE2  61                 	db	97	;'a'
  6024  00EDE3  64                 	db	100	;'d'
  6025  00EDE4  3A                 	db	58	;':'
  6026  00EDE5  20                 	db	32
  6027  00EDE6  44                 	db	68	;'D'
  6028  00EDE7  69                 	db	105	;'i'
  6029  00EDE8  73                 	db	115	;'s'
  6030  00EDE9  61                 	db	97	;'a'
  6031  00EDEA  62                 	db	98	;'b'
  6032  00EDEB  6C                 	db	108	;'l'
  6033  00EDEC  65                 	db	101	;'e'
  6034  00EDED  73                 	db	115	;'s'
  6035  00EDEE  20                 	db	32
  6036  00EDEF  74                 	db	116	;'t'
  6037  00EDF0  68                 	db	104	;'h'
  6038  00EDF1  65                 	db	101	;'e'
  6039  00EDF2  20                 	db	32
  6040  00EDF3  6F                 	db	111	;'o'
  6041  00EDF4  75                 	db	117	;'u'
  6042  00EDF5  74                 	db	116	;'t'
  6043  00EDF6  70                 	db	112	;'p'
  6044  00EDF7  75                 	db	117	;'u'
  6045  00EDF8  74                 	db	116	;'t'
  6046  00EDF9  20                 	db	32
  6047  00EDFA  54                 	db	84	;'T'
  6048  00EDFB  52                 	db	82	;'R'
  6049  00EDFC  49                 	db	73	;'I'
  6050  00EDFD  41                 	db	65	;'A'
  6051  00EDFE  43                 	db	67	;'C'
  6052  00EDFF  20                 	db	32
  6053  00EE00  63                 	db	99	;'c'
  6054  00EE01  6F                 	db	111	;'o'
  6055  00EE02  6D                 	db	109	;'m'
  6056  00EE03  70                 	db	112	;'p'
  6057  00EE04  6C                 	db	108	;'l'
  6058  00EE05  65                 	db	101	;'e'
  6059  00EE06  74                 	db	116	;'t'
  6060  00EE07  65                 	db	101	;'e'
  6061  00EE08  6C                 	db	108	;'l'
  6062  00EE09  79                 	db	121	;'y'
  6063  00EE0A  0A                 	db	10
  6064  00EE0B  0D                 	db	13
  6065  00EE0C  20                 	db	32
  6066  00EE0D  20                 	db	32
  6067  00EE0E  20                 	db	32
  6068  00EE0F  4C                 	db	76	;'L'
  6069  00EE10  6F                 	db	111	;'o'
  6070  00EE11  61                 	db	97	;'a'
  6071  00EE12  64                 	db	100	;'d'
  6072  00EE13  20                 	db	32
  6073  00EE14  45                 	db	69	;'E'
  6074  00EE15  6E                 	db	110	;'n'
  6075  00EE16  61                 	db	97	;'a'
  6076  00EE17  62                 	db	98	;'b'
  6077  00EE18  6C                 	db	108	;'l'
  6078  00EE19  65                 	db	101	;'e'
  6079  00EE1A  64                 	db	100	;'d'
  6080  00EE1B  3F                 	db	63	;'?'
  6081  00EE1C  3A                 	db	58	;':'
  6082  00EE1D  20                 	db	32
  6083  00EE1E  52                 	db	82	;'R'
  6084  00EE1F  65                 	db	101	;'e'
  6085  00EE20  74                 	db	116	;'t'
  6086  00EE21  75                 	db	117	;'u'
  6087  00EE22  72                 	db	114	;'r'
  6088  00EE23  6E                 	db	110	;'n'
  6089  00EE24  73                 	db	115	;'s'
  6090  00EE25  20                 	db	32
  6091  00EE26  69                 	db	105	;'i'
  6092  00EE27  66                 	db	102	;'f'
  6093  00EE28  20                 	db	32
  6094  00EE29  74                 	db	116	;'t'
  6095  00EE2A  68                 	db	104	;'h'
  6096  00EE2B  65                 	db	101	;'e'
  6097  00EE2C  20                 	db	32
  6098  00EE2D  6F                 	db	111	;'o'
  6099  00EE2E  75                 	db	117	;'u'
  6100  00EE2F  74                 	db	116	;'t'
  6101  00EE30  70                 	db	112	;'p'
  6102  00EE31  75                 	db	117	;'u'
  6103  00EE32  74                 	db	116	;'t'
  6104  00EE33  20                 	db	32
  6105  00EE34  6C                 	db	108	;'l'
  6106  00EE35  6F                 	db	111	;'o'
  6107  00EE36  61                 	db	97	;'a'
  6108  00EE37  64                 	db	100	;'d'
  6109  00EE38  20                 	db	32
  6110  00EE39  69                 	db	105	;'i'
  6111  00EE3A  73                 	db	115	;'s'
  6112  00EE3B  20                 	db	32
  6113  00EE3C  65                 	db	101	;'e'
  6114  00EE3D  6E                 	db	110	;'n'
  6115  00EE3E  61                 	db	97	;'a'
  6116  00EE3F  62                 	db	98	;'b'
  6117  00EE40  6C                 	db	108	;'l'
  6118  00EE41  65                 	db	101	;'e'
  6119  00EE42  64                 	db	100	;'d'
  6120  00EE43  20                 	db	32
  6121  00EE44  6F                 	db	111	;'o'
  6122  00EE45  72                 	db	114	;'r'
  6123  00EE46  20                 	db	32
  6124  00EE47  64                 	db	100	;'d'
  6125  00EE48  69                 	db	105	;'i'
  6126  00EE49  73                 	db	115	;'s'
  6127  00EE4A  61                 	db	97	;'a'
  6128  00EE4B  62                 	db	98	;'b'
  6129  00EE4C  6C                 	db	108	;'l'
  6130  00EE4D  65                 	db	101	;'e'
  6131  00EE4E  64                 	db	100	;'d'
  6132  00EE4F  0A                 	db	10
  6133  00EE50  0D                 	db	13
  6134  00EE51  20                 	db	32
  6135  00EE52  20                 	db	32
  6136  00EE53  20                 	db	32
  6137  00EE54  44                 	db	68	;'D'
  6138  00EE55  69                 	db	105	;'i'
  6139  00EE56  6D                 	db	109	;'m'
  6140  00EE57  6D                 	db	109	;'m'
  6141  00EE58  69                 	db	105	;'i'
  6142  00EE59  6E                 	db	110	;'n'
  6143  00EE5A  67                 	db	103	;'g'
  6144  00EE5B  20                 	db	32
  6145  00EE5C  45                 	db	69	;'E'
  6146  00EE5D  6E                 	db	110	;'n'
  6147  00EE5E  61                 	db	97	;'a'
  6148  00EE5F  62                 	db	98	;'b'
  6149  00EE60  6C                 	db	108	;'l'
  6150  00EE61  65                 	db	101	;'e'
  6151  00EE62  64                 	db	100	;'d'
  6152  00EE63  3F                 	db	63	;'?'
  6153  00EE64  3A                 	db	58	;':'
  6154  00EE65  20                 	db	32
  6155  00EE66  52                 	db	82	;'R'
  6156  00EE67  65                 	db	101	;'e'
  6157  00EE68  74                 	db	116	;'t'
  6158  00EE69  75                 	db	117	;'u'
  6159  00EE6A  72                 	db	114	;'r'
  6160  00EE6B  6E                 	db	110	;'n'
  6161  00EE6C  73                 	db	115	;'s'
  6162  00EE6D  20                 	db	32
  6163  00EE6E  69                 	db	105	;'i'
  6164  00EE6F  66                 	db	102	;'f'
  6165  00EE70  20                 	db	32
  6166  00EE71  64                 	db	100	;'d'
  6167  00EE72  69                 	db	105	;'i'
  6168  00EE73  6D                 	db	109	;'m'
  6169  00EE74  6D                 	db	109	;'m'
  6170  00EE75  69                 	db	105	;'i'
  6171  00EE76  6E                 	db	110	;'n'
  6172  00EE77  67                 	db	103	;'g'
  6173  00EE78  20                 	db	32
  6174  00EE79  6F                 	db	111	;'o'
  6175  00EE7A  66                 	db	102	;'f'
  6176  00EE7B  20                 	db	32
  6177  00EE7C  74                 	db	116	;'t'
  6178  00EE7D  68                 	db	104	;'h'
  6179  00EE7E  65                 	db	101	;'e'
  6180  00EE7F  20                 	db	32
  6181  00EE80  6F                 	db	111	;'o'
  6182  00EE81  75                 	db	117	;'u'
  6183  00EE82  74                 	db	116	;'t'
  6184  00EE83  70                 	db	112	;'p'
  6185  00EE84  75                 	db	117	;'u'
  6186  00EE85  74                 	db	116	;'t'
  6187  00EE86  20                 	db	32
  6188  00EE87  6C                 	db	108	;'l'
  6189  00EE88  6F                 	db	111	;'o'
  6190  00EE89  61                 	db	97	;'a'
  6191  00EE8A  64                 	db	100	;'d'
  6192  00EE8B  20                 	db	32
  6193  00EE8C  69                 	db	105	;'i'
  6194  00EE8D  73                 	db	115	;'s'
  6195  00EE8E  20                 	db	32
  6196  00EE8F  65                 	db	101	;'e'
  6197  00EE90  6E                 	db	110	;'n'
  6198  00EE91  61                 	db	97	;'a'
  6199  00EE92  62                 	db	98	;'b'
  6200  00EE93  6C                 	db	108	;'l'
  6201  00EE94  65                 	db	101	;'e'
  6202  00EE95  64                 	db	100	;'d'
  6203  00EE96  20                 	db	32
  6204  00EE97  6F                 	db	111	;'o'
  6205  00EE98  72                 	db	114	;'r'
  6206  00EE99  20                 	db	32
  6207  00EE9A  6E                 	db	110	;'n'
  6208  00EE9B  6F                 	db	111	;'o'
  6209  00EE9C  74                 	db	116	;'t'
  6210  00EE9D  0A                 	db	10
  6211  00EE9E  0D                 	db	13
  6212  00EE9F  20                 	db	32
  6213  00EEA0  20                 	db	32
  6214  00EEA1  20                 	db	32
  6215  00EEA2  53                 	db	83	;'S'
  6216  00EEA3  65                 	db	101	;'e'
  6217  00EEA4  74                 	db	116	;'t'
  6218  00EEA5  20                 	db	32
  6219  00EEA6  44                 	db	68	;'D'
  6220  00EEA7  69                 	db	105	;'i'
  6221  00EEA8  6D                 	db	109	;'m'
  6222  00EEA9  6D                 	db	109	;'m'
  6223  00EEAA  69                 	db	105	;'i'
  6224  00EEAB  6E                 	db	110	;'n'
  6225  00EEAC  67                 	db	103	;'g'
  6226  00EEAD  20                 	db	32
  6227  00EEAE  50                 	db	80	;'P'
  6228  00EEAF  65                 	db	101	;'e'
  6229  00EEB0  72                 	db	114	;'r'
  6230  00EEB1  63                 	db	99	;'c'
  6231  00EEB2  65                 	db	101	;'e'
  6232  00EEB3  6E                 	db	110	;'n'
  6233  00EEB4  74                 	db	116	;'t'
  6234  00EEB5  61                 	db	97	;'a'
  6235  00EEB6  67                 	db	103	;'g'
  6236  00EEB7  65                 	db	101	;'e'
  6237  00EEB8  3A                 	db	58	;':'
  6238  00EEB9  20                 	db	32
  6239  00EEBA  3C                 	db	60	;'<'
  6240  00EEBB  78                 	db	120	;'x'
  6241  00EEBC  3E                 	db	62	;'>'
  6242  00EEBD  3A                 	db	58	;':'
  6243  00EEBE  20                 	db	32
  6244  00EEBF  53                 	db	83	;'S'
  6245  00EEC0  65                 	db	101	;'e'
  6246  00EEC1  74                 	db	116	;'t'
  6247  00EEC2  73                 	db	115	;'s'
  6248  00EEC3  20                 	db	32
  6249  00EEC4  74                 	db	116	;'t'
  6250  00EEC5  68                 	db	104	;'h'
  6251  00EEC6  65                 	db	101	;'e'
  6252  00EEC7  20                 	db	32
  6253  00EEC8  6F                 	db	111	;'o'
  6254  00EEC9  75                 	db	117	;'u'
  6255  00EECA  74                 	db	116	;'t'
  6256  00EECB  70                 	db	112	;'p'
  6257  00EECC  75                 	db	117	;'u'
  6258  00EECD  74                 	db	116	;'t'
  6259  00EECE  20                 	db	32
  6260  00EECF  64                 	db	100	;'d'
  6261  00EED0  69                 	db	105	;'i'
  6262  00EED1  6D                 	db	109	;'m'
  6263  00EED2  6D                 	db	109	;'m'
  6264  00EED3  69                 	db	105	;'i'
  6265  00EED4  6E                 	db	110	;'n'
  6266  00EED5  67                 	db	103	;'g'
  6267  00EED6  20                 	db	32
  6268  00EED7  70                 	db	112	;'p'
  6269  00EED8  65                 	db	101	;'e'
  6270  00EED9  72                 	db	114	;'r'
  6271  00EEDA  63                 	db	99	;'c'
  6272  00EEDB  65                 	db	101	;'e'
  6273  00EEDC  6E                 	db	110	;'n'
  6274  00EEDD  74                 	db	116	;'t'
  6275  00EEDE  61                 	db	97	;'a'
  6276  00EEDF  67                 	db	103	;'g'
  6277  00EEE0  65                 	db	101	;'e'
  6278  00EEE1  20                 	db	32
  6279  00EEE2  61                 	db	97	;'a'
  6280  00EEE3  73                 	db	115	;'s'
  6281  00EEE4  20                 	db	32
  6282  00EEE5  78                 	db	120	;'x'
  6283  00EEE6  20                 	db	32
  6284  00EEE7  70                 	db	112	;'p'
  6285  00EEE8  65                 	db	101	;'e'
  6286  00EEE9  72                 	db	114	;'r'
  6287  00EEEA  63                 	db	99	;'c'
  6288  00EEEB  65                 	db	101	;'e'
  6289  00EEEC  6E                 	db	110	;'n'
  6290  00EEED  74                 	db	116	;'t'
  6291  00EEEE  0A                 	db	10
  6292  00EEEF  0D                 	db	13
  6293  00EEF0  0A                 	db	10
  6294  00EEF1  0D                 	db	13
  6295  00EEF2  00                 	db	0
  6296  00EEF3                     STR_147:
  6297  00EEF3  50                 	db	80	;'P'
  6298  00EEF4  6C                 	db	108	;'l'
  6299  00EEF5  65                 	db	101	;'e'
  6300  00EEF6  61                 	db	97	;'a'
  6301  00EEF7  73                 	db	115	;'s'
  6302  00EEF8  65                 	db	101	;'e'
  6303  00EEF9  20                 	db	32
  6304  00EEFA  73                 	db	115	;'s'
  6305  00EEFB  70                 	db	112	;'p'
  6306  00EEFC  65                 	db	101	;'e'
  6307  00EEFD  63                 	db	99	;'c'
  6308  00EEFE  69                 	db	105	;'i'
  6309  00EEFF  66                 	db	102	;'f'
  6310  00EF00  79                 	db	121	;'y'
  6311  00EF01  20                 	db	32
  6312  00EF02  77                 	db	119	;'w'
  6313  00EF03  68                 	db	104	;'h'
  6314  00EF04  61                 	db	97	;'a'
  6315  00EF05  74                 	db	116	;'t'
  6316  00EF06  20                 	db	32
  6317  00EF07  74                 	db	116	;'t'
  6318  00EF08  79                 	db	121	;'y'
  6319  00EF09  70                 	db	112	;'p'
  6320  00EF0A  65                 	db	101	;'e'
  6321  00EF0B  20                 	db	32
  6322  00EF0C  6F                 	db	111	;'o'
  6323  00EF0D  66                 	db	102	;'f'
  6324  00EF0E  20                 	db	32
  6325  00EF0F  63                 	db	99	;'c'
  6326  00EF10  6F                 	db	111	;'o'
  6327  00EF11  6D                 	db	109	;'m'
  6328  00EF12  6D                 	db	109	;'m'
  6329  00EF13  61                 	db	97	;'a'
  6330  00EF14  6E                 	db	110	;'n'
  6331  00EF15  64                 	db	100	;'d'
  6332  00EF16  73                 	db	115	;'s'
  6333  00EF17  20                 	db	32
  6334  00EF18  79                 	db	121	;'y'
  6335  00EF19  6F                 	db	111	;'o'
  6336  00EF1A  75                 	db	117	;'u'
  6337  00EF1B  27                 	db	39
  6338  00EF1C  64                 	db	100	;'d'
  6339  00EF1D  20                 	db	32
  6340  00EF1E  6C                 	db	108	;'l'
  6341  00EF1F  69                 	db	105	;'i'
  6342  00EF20  6B                 	db	107	;'k'
  6343  00EF21  65                 	db	101	;'e'
  6344  00EF22  20                 	db	32
  6345  00EF23  68                 	db	104	;'h'
  6346  00EF24  65                 	db	101	;'e'
  6347  00EF25  6C                 	db	108	;'l'
  6348  00EF26  70                 	db	112	;'p'
  6349  00EF27  20                 	db	32
  6350  00EF28  77                 	db	119	;'w'
  6351  00EF29  69                 	db	105	;'i'
  6352  00EF2A  74                 	db	116	;'t'
  6353  00EF2B  68                 	db	104	;'h'
  6354  00EF2C  3A                 	db	58	;':'
  6355  00EF2D  0A                 	db	10
  6356  00EF2E  0D                 	db	13
  6357  00EF2F  54                 	db	84	;'T'
  6358  00EF30  72                 	db	114	;'r'
  6359  00EF31  79                 	db	121	;'y'
  6360  00EF32  20                 	db	32
  6361  00EF33  27                 	db	39
  6362  00EF34  48                 	db	72	;'H'
  6363  00EF35  65                 	db	101	;'e'
  6364  00EF36  6C                 	db	108	;'l'
  6365  00EF37  70                 	db	112	;'p'
  6366  00EF38  20                 	db	32
  6367  00EF39  3C                 	db	60	;'<'
  6368  00EF3A  63                 	db	99	;'c'
  6369  00EF3B  6F                 	db	111	;'o'
  6370  00EF3C  6D                 	db	109	;'m'
  6371  00EF3D  6D                 	db	109	;'m'
  6372  00EF3E  61                 	db	97	;'a'
  6373  00EF3F  6E                 	db	110	;'n'
  6374  00EF40  64                 	db	100	;'d'
  6375  00EF41  20                 	db	32
  6376  00EF42  73                 	db	115	;'s'
  6377  00EF43  65                 	db	101	;'e'
  6378  00EF44  74                 	db	116	;'t'
  6379  00EF45  3E                 	db	62	;'>'
  6380  00EF46  27                 	db	39
  6381  00EF47  0A                 	db	10
  6382  00EF48  0D                 	db	13
  6383  00EF49  0A                 	db	10
  6384  00EF4A  0D                 	db	13
  6385  00EF4B  53                 	db	83	;'S'
  6386  00EF4C  75                 	db	117	;'u'
  6387  00EF4D  70                 	db	112	;'p'
  6388  00EF4E  70                 	db	112	;'p'
  6389  00EF4F  6F                 	db	111	;'o'
  6390  00EF50  72                 	db	114	;'r'
  6391  00EF51  74                 	db	116	;'t'
  6392  00EF52  65                 	db	101	;'e'
  6393  00EF53  64                 	db	100	;'d'
  6394  00EF54  20                 	db	32
  6395  00EF55  43                 	db	67	;'C'
  6396  00EF56  6F                 	db	111	;'o'
  6397  00EF57  6D                 	db	109	;'m'
  6398  00EF58  6D                 	db	109	;'m'
  6399  00EF59  61                 	db	97	;'a'
  6400  00EF5A  6E                 	db	110	;'n'
  6401  00EF5B  64                 	db	100	;'d'
  6402  00EF5C  20                 	db	32
  6403  00EF5D  53                 	db	83	;'S'
  6404  00EF5E  65                 	db	101	;'e'
  6405  00EF5F  74                 	db	116	;'t'
  6406  00EF60  73                 	db	115	;'s'
  6407  00EF61  3A                 	db	58	;':'
  6408  00EF62  0A                 	db	10
  6409  00EF63  0D                 	db	13
  6410  00EF64  20                 	db	32
  6411  00EF65  20                 	db	32
  6412  00EF66  20                 	db	32
  6413  00EF67  44                 	db	68	;'D'
  6414  00EF68  65                 	db	101	;'e'
  6415  00EF69  76                 	db	118	;'v'
  6416  00EF6A  69                 	db	105	;'i'
  6417  00EF6B  63                 	db	99	;'c'
  6418  00EF6C  65                 	db	101	;'e'
  6419  00EF6D  20                 	db	32
  6420  00EF6E  43                 	db	67	;'C'
  6421  00EF6F  6F                 	db	111	;'o'
  6422  00EF70  6E                 	db	110	;'n'
  6423  00EF71  74                 	db	116	;'t'
  6424  00EF72  72                 	db	114	;'r'
  6425  00EF73  6F                 	db	111	;'o'
  6426  00EF74  6C                 	db	108	;'l'
  6427  00EF75  20                 	db	32
  6428  00EF76  43                 	db	67	;'C'
  6429  00EF77  6F                 	db	111	;'o'
  6430  00EF78  6D                 	db	109	;'m'
  6431  00EF79  6D                 	db	109	;'m'
  6432  00EF7A  61                 	db	97	;'a'
  6433  00EF7B  6E                 	db	110	;'n'
  6434  00EF7C  64                 	db	100	;'d'
  6435  00EF7D  73                 	db	115	;'s'
  6436  00EF7E  3A                 	db	58	;':'
  6437  00EF7F  20                 	db	32
  6438  00EF80  43                 	db	67	;'C'
  6439  00EF81  6F                 	db	111	;'o'
  6440  00EF82  6D                 	db	109	;'m'
  6441  00EF83  6D                 	db	109	;'m'
  6442  00EF84  61                 	db	97	;'a'
  6443  00EF85  6E                 	db	110	;'n'
  6444  00EF86  64                 	db	100	;'d'
  6445  00EF87  73                 	db	115	;'s'
  6446  00EF88  20                 	db	32
  6447  00EF89  74                 	db	116	;'t'
  6448  00EF8A  6F                 	db	111	;'o'
  6449  00EF8B  20                 	db	32
  6450  00EF8C  76                 	db	118	;'v'
  6451  00EF8D  69                 	db	105	;'i'
  6452  00EF8E  65                 	db	101	;'e'
  6453  00EF8F  77                 	db	119	;'w'
  6454  00EF90  20                 	db	32
  6455  00EF91  61                 	db	97	;'a'
  6456  00EF92  6E                 	db	110	;'n'
  6457  00EF93  64                 	db	100	;'d'
  6458  00EF94  20                 	db	32
  6459  00EF95  63                 	db	99	;'c'
  6460  00EF96  6F                 	db	111	;'o'
  6461  00EF97  6E                 	db	110	;'n'
  6462  00EF98  74                 	db	116	;'t'
  6463  00EF99  72                 	db	114	;'r'
  6464  00EF9A  6F                 	db	111	;'o'
  6465  00EF9B  6C                 	db	108	;'l'
  6466  00EF9C  20                 	db	32
  6467  00EF9D  6C                 	db	108	;'l'
  6468  00EF9E  6F                 	db	111	;'o'
  6469  00EF9F  77                 	db	119	;'w'
  6470  00EFA0  20                 	db	32
  6471  00EFA1  6C                 	db	108	;'l'
  6472  00EFA2  65                 	db	101	;'e'
  6473  00EFA3  76                 	db	118	;'v'
  6474  00EFA4  65                 	db	101	;'e'
  6475  00EFA5  6C                 	db	108	;'l'
  6476  00EFA6  20                 	db	32
  6477  00EFA7  73                 	db	115	;'s'
  6478  00EFA8  79                 	db	121	;'y'
  6479  00EFA9  73                 	db	115	;'s'
  6480  00EFAA  74                 	db	116	;'t'
  6481  00EFAB  65                 	db	101	;'e'
  6482  00EFAC  6D                 	db	109	;'m'
  6483  00EFAD  20                 	db	32
  6484  00EFAE  66                 	db	102	;'f'
  6485  00EFAF  75                 	db	117	;'u'
  6486  00EFB0  6E                 	db	110	;'n'
  6487  00EFB1  63                 	db	99	;'c'
  6488  00EFB2  74                 	db	116	;'t'
  6489  00EFB3  69                 	db	105	;'i'
  6490  00EFB4  6F                 	db	111	;'o'
  6491  00EFB5  6E                 	db	110	;'n'
  6492  00EFB6  61                 	db	97	;'a'
  6493  00EFB7  6C                 	db	108	;'l'
  6494  00EFB8  69                 	db	105	;'i'
  6495  00EFB9  74                 	db	116	;'t'
  6496  00EFBA  79                 	db	121	;'y'
  6497  00EFBB  0A                 	db	10
  6498  00EFBC  0D                 	db	13
  6499  00EFBD  20                 	db	32
  6500  00EFBE  20                 	db	32
  6501  00EFBF  20                 	db	32
  6502  00EFC0  44                 	db	68	;'D'
  6503  00EFC1  65                 	db	101	;'e'
  6504  00EFC2  76                 	db	118	;'v'
  6505  00EFC3  69                 	db	105	;'i'
  6506  00EFC4  63                 	db	99	;'c'
  6507  00EFC5  65                 	db	101	;'e'
  6508  00EFC6  20                 	db	32
  6509  00EFC7  4D                 	db	77	;'M'
  6510  00EFC8  65                 	db	101	;'e'
  6511  00EFC9  61                 	db	97	;'a'
  6512  00EFCA  73                 	db	115	;'s'
  6513  00EFCB  75                 	db	117	;'u'
  6514  00EFCC  72                 	db	114	;'r'
  6515  00EFCD  65                 	db	101	;'e'
  6516  00EFCE  6D                 	db	109	;'m'
  6517  00EFCF  65                 	db	101	;'e'
  6518  00EFD0  6E                 	db	110	;'n'
  6519  00EFD1  74                 	db	116	;'t'
  6520  00EFD2  20                 	db	32
  6521  00EFD3  43                 	db	67	;'C'
  6522  00EFD4  6F                 	db	111	;'o'
  6523  00EFD5  6D                 	db	109	;'m'
  6524  00EFD6  6D                 	db	109	;'m'
  6525  00EFD7  61                 	db	97	;'a'
  6526  00EFD8  6E                 	db	110	;'n'
  6527  00EFD9  64                 	db	100	;'d'
  6528  00EFDA  73                 	db	115	;'s'
  6529  00EFDB  3A                 	db	58	;':'
  6530  00EFDC  20                 	db	32
  6531  00EFDD  56                 	db	86	;'V'
  6532  00EFDE  69                 	db	105	;'i'
  6533  00EFDF  65                 	db	101	;'e'
  6534  00EFE0  77                 	db	119	;'w'
  6535  00EFE1  20                 	db	32
  6536  00EFE2  6C                 	db	108	;'l'
  6537  00EFE3  6F                 	db	111	;'o'
  6538  00EFE4  77                 	db	119	;'w'
  6539  00EFE5  20                 	db	32
  6540  00EFE6  6C                 	db	108	;'l'
  6541  00EFE7  65                 	db	101	;'e'
  6542  00EFE8  76                 	db	118	;'v'
  6543  00EFE9  65                 	db	101	;'e'
  6544  00EFEA  6C                 	db	108	;'l'
  6545  00EFEB  20                 	db	32
  6546  00EFEC  73                 	db	115	;'s'
  6547  00EFED  79                 	db	121	;'y'
  6548  00EFEE  73                 	db	115	;'s'
  6549  00EFEF  74                 	db	116	;'t'
  6550  00EFF0  65                 	db	101	;'e'
  6551  00EFF1  6D                 	db	109	;'m'
  6552  00EFF2  20                 	db	32
  6553  00EFF3  6D                 	db	109	;'m'
  6554  00EFF4  65                 	db	101	;'e'
  6555  00EFF5  61                 	db	97	;'a'
  6556  00EFF6  73                 	db	115	;'s'
  6557  00EFF7  75                 	db	117	;'u'
  6558  00EFF8  72                 	db	114	;'r'
  6559  00EFF9  65                 	db	101	;'e'
  6560  00EFFA  6D                 	db	109	;'m'
  6561  00EFFB  65                 	db	101	;'e'
  6562  00EFFC  6E                 	db	110	;'n'
  6563  00EFFD  74                 	db	116	;'t'
  6564  00EFFE  73                 	db	115	;'s'
  6565  00EFFF  0A                 	db	10
  6566  00F000  0D                 	db	13
  6567  00F001  20                 	db	32
  6568  00F002  20                 	db	32
  6569  00F003  20                 	db	32
  6570  00F004  50                 	db	80	;'P'
  6571  00F005  72                 	db	114	;'r'
  6572  00F006  69                 	db	105	;'i'
  6573  00F007  6D                 	db	109	;'m'
  6574  00F008  61                 	db	97	;'a'
  6575  00F009  72                 	db	114	;'r'
  6576  00F00A  79                 	db	121	;'y'
  6577  00F00B  20                 	db	32
  6578  00F00C  4D                 	db	77	;'M'
  6579  00F00D  65                 	db	101	;'e'
  6580  00F00E  61                 	db	97	;'a'
  6581  00F00F  73                 	db	115	;'s'
  6582  00F010  75                 	db	117	;'u'
  6583  00F011  72                 	db	114	;'r'
  6584  00F012  65                 	db	101	;'e'
  6585  00F013  6D                 	db	109	;'m'
  6586  00F014  65                 	db	101	;'e'
  6587  00F015  6E                 	db	110	;'n'
  6588  00F016  74                 	db	116	;'t'
  6589  00F017  20                 	db	32
  6590  00F018  43                 	db	67	;'C'
  6591  00F019  6F                 	db	111	;'o'
  6592  00F01A  6D                 	db	109	;'m'
  6593  00F01B  6D                 	db	109	;'m'
  6594  00F01C  61                 	db	97	;'a'
  6595  00F01D  6E                 	db	110	;'n'
  6596  00F01E  64                 	db	100	;'d'
  6597  00F01F  73                 	db	115	;'s'
  6598  00F020  3A                 	db	58	;':'
  6599  00F021  20                 	db	32
  6600  00F022  56                 	db	86	;'V'
  6601  00F023  69                 	db	105	;'i'
  6602  00F024  65                 	db	101	;'e'
  6603  00F025  77                 	db	119	;'w'
  6604  00F026  20                 	db	32
  6605  00F027  68                 	db	104	;'h'
  6606  00F028  69                 	db	105	;'i'
  6607  00F029  67                 	db	103	;'g'
  6608  00F02A  68                 	db	104	;'h'
  6609  00F02B  20                 	db	32
  6610  00F02C  6C                 	db	108	;'l'
  6611  00F02D  65                 	db	101	;'e'
  6612  00F02E  76                 	db	118	;'v'
  6613  00F02F  65                 	db	101	;'e'
  6614  00F030  6C                 	db	108	;'l'
  6615  00F031  20                 	db	32
  6616  00F032  6F                 	db	111	;'o'
  6617  00F033  75                 	db	117	;'u'
  6618  00F034  74                 	db	116	;'t'
  6619  00F035  70                 	db	112	;'p'
  6620  00F036  75                 	db	117	;'u'
  6621  00F037  74                 	db	116	;'t'
  6622  00F038  20                 	db	32
  6623  00F039  6D                 	db	109	;'m'
  6624  00F03A  65                 	db	101	;'e'
  6625  00F03B  61                 	db	97	;'a'
  6626  00F03C  73                 	db	115	;'s'
  6627  00F03D  75                 	db	117	;'u'
  6628  00F03E  72                 	db	114	;'r'
  6629  00F03F  65                 	db	101	;'e'
  6630  00F040  6D                 	db	109	;'m'
  6631  00F041  65                 	db	101	;'e'
  6632  00F042  6E                 	db	110	;'n'
  6633  00F043  74                 	db	116	;'t'
  6634  00F044  73                 	db	115	;'s'
  6635  00F045  20                 	db	32
  6636  00F046  61                 	db	97	;'a'
  6637  00F047  6E                 	db	110	;'n'
  6638  00F048  64                 	db	100	;'d'
  6639  00F049  20                 	db	32
  6640  00F04A  63                 	db	99	;'c'
  6641  00F04B  61                 	db	97	;'a'
  6642  00F04C  6C                 	db	108	;'l'
  6643  00F04D  63                 	db	99	;'c'
  6644  00F04E  75                 	db	117	;'u'
  6645  00F04F  6C                 	db	108	;'l'
  6646  00F050  61                 	db	97	;'a'
  6647  00F051  74                 	db	116	;'t'
  6648  00F052  69                 	db	105	;'i'
  6649  00F053  6F                 	db	111	;'o'
  6650  00F054  6E                 	db	110	;'n'
  6651  00F055  73                 	db	115	;'s'
  6652  00F056  0A                 	db	10
  6653  00F057  0D                 	db	13
  6654  00F058  20                 	db	32
  6655  00F059  20                 	db	32
  6656  00F05A  20                 	db	32
  6657  00F05B  4F                 	db	79	;'O'
  6658  00F05C  75                 	db	117	;'u'
  6659  00F05D  74                 	db	116	;'t'
  6660  00F05E  70                 	db	112	;'p'
  6661  00F05F  75                 	db	117	;'u'
  6662  00F060  74                 	db	116	;'t'
  6663  00F061  20                 	db	32
  6664  00F062  43                 	db	67	;'C'
  6665  00F063  6F                 	db	111	;'o'
  6666  00F064  6E                 	db	110	;'n'
  6667  00F065  74                 	db	116	;'t'
  6668  00F066  72                 	db	114	;'r'
  6669  00F067  6F                 	db	111	;'o'
  6670  00F068  6C                 	db	108	;'l'
  6671  00F069  20                 	db	32
  6672  00F06A  43                 	db	67	;'C'
  6673  00F06B  6F                 	db	111	;'o'
  6674  00F06C  6D                 	db	109	;'m'
  6675  00F06D  6D                 	db	109	;'m'
  6676  00F06E  61                 	db	97	;'a'
  6677  00F06F  6E                 	db	110	;'n'
  6678  00F070  64                 	db	100	;'d'
  6679  00F071  73                 	db	115	;'s'
  6680  00F072  3A                 	db	58	;':'
  6681  00F073  20                 	db	32
  6682  00F074  43                 	db	67	;'C'
  6683  00F075  6F                 	db	111	;'o'
  6684  00F076  6E                 	db	110	;'n'
  6685  00F077  74                 	db	116	;'t'
  6686  00F078  72                 	db	114	;'r'
  6687  00F079  6F                 	db	111	;'o'
  6688  00F07A  6C                 	db	108	;'l'
  6689  00F07B  20                 	db	32
  6690  00F07C  74                 	db	116	;'t'
  6691  00F07D  68                 	db	104	;'h'
  6692  00F07E  65                 	db	101	;'e'
  6693  00F07F  20                 	db	32
  6694  00F080  6F                 	db	111	;'o'
  6695  00F081  75                 	db	117	;'u'
  6696  00F082  74                 	db	116	;'t'
  6697  00F083  70                 	db	112	;'p'
  6698  00F084  75                 	db	117	;'u'
  6699  00F085  74                 	db	116	;'t'
  6700  00F086  20                 	db	32
  6701  00F087  73                 	db	115	;'s'
  6702  00F088  74                 	db	116	;'t'
  6703  00F089  61                 	db	97	;'a'
  6704  00F08A  74                 	db	116	;'t'
  6705  00F08B  65                 	db	101	;'e'
  6706  00F08C  20                 	db	32
  6707  00F08D  61                 	db	97	;'a'
  6708  00F08E  6E                 	db	110	;'n'
  6709  00F08F  64                 	db	100	;'d'
  6710  00F090  20                 	db	32
  6711  00F091  64                 	db	100	;'d'
  6712  00F092  69                 	db	105	;'i'
  6713  00F093  6D                 	db	109	;'m'
  6714  00F094  6D                 	db	109	;'m'
  6715  00F095  69                 	db	105	;'i'
  6716  00F096  6E                 	db	110	;'n'
  6717  00F097  67                 	db	103	;'g'
  6718  00F098  20                 	db	32
  6719  00F099  66                 	db	102	;'f'
  6720  00F09A  65                 	db	101	;'e'
  6721  00F09B  61                 	db	97	;'a'
  6722  00F09C  74                 	db	116	;'t'
  6723  00F09D  75                 	db	117	;'u'
  6724  00F09E  72                 	db	114	;'r'
  6725  00F09F  65                 	db	101	;'e'
  6726  00F0A0  73                 	db	115	;'s'
  6727  00F0A1  0A                 	db	10
  6728  00F0A2  0D                 	db	13
  6729  00F0A3  0A                 	db	10
  6730  00F0A4  0D                 	db	13
  6731  00F0A5  27                 	db	39
  6732  00F0A6  48                 	db	72	;'H'
  6733  00F0A7  65                 	db	101	;'e'
  6734  00F0A8  6C                 	db	108	;'l'
  6735  00F0A9  70                 	db	112	;'p'
  6736  00F0AA  20                 	db	32
  6737  00F0AB  41                 	db	65	;'A'
  6738  00F0AC  6C                 	db	108	;'l'
  6739  00F0AD  6C                 	db	108	;'l'
  6740  00F0AE  27                 	db	39
  6741  00F0AF  20                 	db	32
  6742  00F0B0  77                 	db	119	;'w'
  6743  00F0B1  69                 	db	105	;'i'
  6744  00F0B2  6C                 	db	108	;'l'
  6745  00F0B3  6C                 	db	108	;'l'
  6746  00F0B4  20                 	db	32
  6747  00F0B5  6C                 	db	108	;'l'
  6748  00F0B6  69                 	db	105	;'i'
  6749  00F0B7  73                 	db	115	;'s'
  6750  00F0B8  74                 	db	116	;'t'
  6751  00F0B9  20                 	db	32
  6752  00F0BA  61                 	db	97	;'a'
  6753  00F0BB  6C                 	db	108	;'l'
  6754  00F0BC  6C                 	db	108	;'l'
  6755  00F0BD  20                 	db	32
  6756  00F0BE  63                 	db	99	;'c'
  6757  00F0BF  6F                 	db	111	;'o'
  6758  00F0C0  6D                 	db	109	;'m'
  6759  00F0C1  6D                 	db	109	;'m'
  6760  00F0C2  61                 	db	97	;'a'
  6761  00F0C3  6E                 	db	110	;'n'
  6762  00F0C4  64                 	db	100	;'d'
  6763  00F0C5  73                 	db	115	;'s'
  6764  00F0C6  0A                 	db	10
  6765  00F0C7  0D                 	db	13
  6766  00F0C8  00                 	db	0
  6767  00F0C9  20                 	db	32
  6768  00F0CA  20                 	db	32
  6769  00F0CB  20                 	db	32
  6770  00F0CC  20                 	db	32
  6771  00F0CD  42                 	db	66	;'B'
  6772  00F0CE  6F                 	db	111	;'o'
  6773  00F0CF  6F                 	db	111	;'o'
  6774  00F0D0  74                 	db	116	;'t'
  6775  00F0D1  20                 	db	32
  6776  00F0D2  63                 	db	99	;'c'
  6777  00F0D3  6F                 	db	111	;'o'
  6778  00F0D4  6D                 	db	109	;'m'
  6779  00F0D5  70                 	db	112	;'p'
  6780  00F0D6  6C                 	db	108	;'l'
  6781  00F0D7  65                 	db	101	;'e'
  6782  00F0D8  74                 	db	116	;'t'
  6783  00F0D9  65                 	db	101	;'e'
  6784  00F0DA  0A                 	db	10
  6785  00F0DB  0D                 	db	13
  6786  00F0DC  20                 	db	32
  6787  00F0DD  20                 	db	32
  6788  00F0DE  20                 	db	32
  6789  00F0DF  20                 	db	32
  6790  00F0E0  50                 	db	80	;'P'
  6791  00F0E1  49                 	db	73	;'I'
  6792  00F0E2  43                 	db	67	;'C'
  6793  00F0E3  31                 	db	49	;'1'
  6794  00F0E4  38                 	db	56	;'8'
  6795  00F0E5  46                 	db	70	;'F'
  6796  00F0E6  36                 	db	54	;'6'
  6797  00F0E7  37                 	db	55	;'7'
  6798  00F0E8  4B                 	db	75	;'K'
  6799  00F0E9  34                 	db	52	;'4'
  6800  00F0EA  30                 	db	48	;'0'
  6801  00F0EB  20                 	db	32
  6802  00F0EC  6D                 	db	109	;'m'
  6803  00F0ED  54                 	db	84	;'T'
  6804  00F0EE  6F                 	db	111	;'o'
  6805  00F0EF  75                 	db	117	;'u'
  6806  00F0F0  63                 	db	99	;'c'
  6807  00F0F1  68                 	db	104	;'h'
  6808  00F0F2  20                 	db	32
  6809  00F0F3  54                 	db	84	;'T'
  6810  00F0F4  65                 	db	101	;'e'
  6811  00F0F5  73                 	db	115	;'s'
  6812  00F0F6  74                 	db	116	;'t'
  6813  00F0F7  20                 	db	32
  6814  00F0F8  42                 	db	66	;'B'
  6815  00F0F9  6F                 	db	111	;'o'
  6816  00F0FA  61                 	db	97	;'a'
  6817  00F0FB  72                 	db	114	;'r'
  6818  00F0FC  64                 	db	100	;'d'
  6819  00F0FD  0A                 	db	10
  6820  00F0FE  0D                 	db	13
  6821  00F0FF  20                 	db	32
  6822  00F100  20                 	db	32
  6823  00F101  20                 	db	32
  6824  00F102  20                 	db	32
  6825  00F103  45                 	db	69	;'E'
  6826  00F104  76                 	db	118	;'v'
  6827  00F105  61                 	db	97	;'a'
  6828  00F106  6C                 	db	108	;'l'
  6829  00F107  75                 	db	117	;'u'
  6830  00F108  61                 	db	97	;'a'
  6831  00F109  74                 	db	116	;'t'
  6832  00F10A  65                 	db	101	;'e'
  6833  00F10B  73                 	db	115	;'s'
  6834  00F10C  20                 	db	32
  6835  00F10D  74                 	db	116	;'t'
  6836  00F10E  68                 	db	104	;'h'
  6837  00F10F  65                 	db	101	;'e'
  6838  00F110  20                 	db	32
  6839  00F111  6D                 	db	109	;'m'
  6840  00F112  54                 	db	84	;'T'
  6841  00F113  6F                 	db	111	;'o'
  6842  00F114  75                 	db	117	;'u'
  6843  00F115  63                 	db	99	;'c'
  6844  00F116  68                 	db	104	;'h'
  6845  00F117  20                 	db	32
  6846  00F118  63                 	db	99	;'c'
  6847  00F119  61                 	db	97	;'a'
  6848  00F11A  70                 	db	112	;'p'
  6849  00F11B  61                 	db	97	;'a'
  6850  00F11C  63                 	db	99	;'c'
  6851  00F11D  69                 	db	105	;'i'
  6852  00F11E  74                 	db	116	;'t'
  6853  00F11F  69                 	db	105	;'i'
  6854  00F120  76                 	db	118	;'v'
  6855  00F121  65                 	db	101	;'e'
  6856  00F122  20                 	db	32
  6857  00F123  74                 	db	116	;'t'
  6858  00F124  6F                 	db	111	;'o'
  6859  00F125  75                 	db	117	;'u'
  6860  00F126  63                 	db	99	;'c'
  6861  00F127  68                 	db	104	;'h'
  6862  00F128  20                 	db	32
  6863  00F129  6C                 	db	108	;'l'
  6864  00F12A  69                 	db	105	;'i'
  6865  00F12B  62                 	db	98	;'b'
  6866  00F12C  72                 	db	114	;'r'
  6867  00F12D  61                 	db	97	;'a'
  6868  00F12E  72                 	db	114	;'r'
  6869  00F12F  79                 	db	121	;'y'
  6870  00F130  20                 	db	32
  6871  00F131  64                 	db	100	;'d'
  6872  00F132  69                 	db	105	;'i'
  6873  00F133  73                 	db	115	;'s'
  6874  00F134  74                 	db	116	;'t'
  6875  00F135  72                 	db	114	;'r'
  6876  00F136  69                 	db	105	;'i'
  6877  00F137  62                 	db	98	;'b'
  6878  00F138  75                 	db	117	;'u'
  6879  00F139  74                 	db	116	;'t'
  6880  00F13A  65                 	db	101	;'e'
  6881  00F13B  64                 	db	100	;'d'
  6882  00F13C  20                 	db	32
  6883  00F13D  62                 	db	98	;'b'
  6884  00F13E  79                 	db	121	;'y'
  6885  00F13F  20                 	db	32
  6886  00F140  4D                 	db	77	;'M'
  6887  00F141  69                 	db	105	;'i'
  6888  00F142  63                 	db	99	;'c'
  6889  00F143  72                 	db	114	;'r'
  6890  00F144  6F                 	db	111	;'o'
  6891  00F145  63                 	db	99	;'c'
  6892  00F146  68                 	db	104	;'h'
  6893  00F147  69                 	db	105	;'i'
  6894  00F148  70                 	db	112	;'p'
  6895  00F149  0A                 	db	10
  6896  00F14A  0D                 	db	13
  6897  00F14B  20                 	db	32
  6898  00F14C  20                 	db	32
  6899  00F14D  20                 	db	32
  6900  00F14E  20                 	db	32
  6901  00F14F  53                 	db	83	;'S'
  6902  00F150  65                 	db	101	;'e'
  6903  00F151  74                 	db	116	;'t'
  6904  00F152  73                 	db	115	;'s'
  6905  00F153  20                 	db	32
  6906  00F154  74                 	db	116	;'t'
  6907  00F155  68                 	db	104	;'h'
  6908  00F156  65                 	db	101	;'e'
  6909  00F157  20                 	db	32
  6910  00F158  73                 	db	115	;'s'
  6911  00F159  74                 	db	116	;'t'
  6912  00F15A  61                 	db	97	;'a'
  6913  00F15B  74                 	db	116	;'t'
  6914  00F15C  65                 	db	101	;'e'
  6915  00F15D  20                 	db	32
  6916  00F15E  6F                 	db	111	;'o'
  6917  00F15F  66                 	db	102	;'f'
  6918  00F160  20                 	db	32
  6919  00F161  66                 	db	102	;'f'
  6920  00F162  69                 	db	105	;'i'
  6921  00F163  76                 	db	118	;'v'
  6922  00F164  65                 	db	101	;'e'
  6923  00F165  20                 	db	32
  6924  00F166  4C                 	db	76	;'L'
  6925  00F167  45                 	db	69	;'E'
  6926  00F168  44                 	db	68	;'D'
  6927  00F169  73                 	db	115	;'s'
  6928  00F16A  20                 	db	32
  6929  00F16B  62                 	db	98	;'b'
  6930  00F16C  61                 	db	97	;'a'
  6931  00F16D  73                 	db	115	;'s'
  6932  00F16E  65                 	db	101	;'e'
  6933  00F16F  64                 	db	100	;'d'
  6934  00F170  20                 	db	32
  6935  00F171  6F                 	db	111	;'o'
  6936  00F172  6E                 	db	110	;'n'
  6937  00F173  20                 	db	32
  6938  00F174  6D                 	db	109	;'m'
  6939  00F175  54                 	db	84	;'T'
  6940  00F176  6F                 	db	111	;'o'
  6941  00F177  75                 	db	117	;'u'
  6942  00F178  63                 	db	99	;'c'
  6943  00F179  68                 	db	104	;'h'
  6944  00F17A  20                 	db	32
  6945  00F17B  63                 	db	99	;'c'
  6946  00F17C  61                 	db	97	;'a'
  6947  00F17D  70                 	db	112	;'p'
  6948  00F17E  61                 	db	97	;'a'
  6949  00F17F  63                 	db	99	;'c'
  6950  00F180  69                 	db	105	;'i'
  6951  00F181  74                 	db	116	;'t'
  6952  00F182  69                 	db	105	;'i'
  6953  00F183  76                 	db	118	;'v'
  6954  00F184  65                 	db	101	;'e'
  6955  00F185  20                 	db	32
  6956  00F186  70                 	db	112	;'p'
  6957  00F187  75                 	db	117	;'u'
  6958  00F188  73                 	db	115	;'s'
  6959  00F189  68                 	db	104	;'h'
  6960  00F18A  62                 	db	98	;'b'
  6961  00F18B  75                 	db	117	;'u'
  6962  00F18C  74                 	db	116	;'t'
  6963  00F18D  74                 	db	116	;'t'
  6964  00F18E  6F                 	db	111	;'o'
  6965  00F18F  6E                 	db	110	;'n'
  6966  00F190  73                 	db	115	;'s'
  6967  00F191  0A                 	db	10
  6968  00F192  0D                 	db	13
  6969  00F193  20                 	db	32
  6970  00F194  20                 	db	32
  6971  00F195  20                 	db	32
  6972  00F196  20                 	db	32
  6973  00F197  42                 	db	66	;'B'
  6974  00F198  61                 	db	97	;'a'
  6975  00F199  75                 	db	117	;'u'
  6976  00F19A  64                 	db	100	;'d'
  6977  00F19B  20                 	db	32
  6978  00F19C  72                 	db	114	;'r'
  6979  00F19D  61                 	db	97	;'a'
  6980  00F19E  74                 	db	116	;'t'
  6981  00F19F  65                 	db	101	;'e'
  6982  00F1A0  3A                 	db	58	;':'
  6983  00F1A1  20                 	db	32
  6984  00F1A2  31                 	db	49	;'1'
  6985  00F1A3  31                 	db	49	;'1'
  6986  00F1A4  35                 	db	53	;'5'
  6987  00F1A5  32                 	db	50	;'2'
  6988  00F1A6  30                 	db	48	;'0'
  6989  00F1A7  30                 	db	48	;'0'
  6990  00F1A8  20                 	db	32
  6991  00F1A9  62                 	db	98	;'b'
  6992  00F1AA  70                 	db	112	;'p'
  6993  00F1AB  73                 	db	115	;'s'
  6994  00F1AC  0A                 	db	10
  6995  00F1AD  0D                 	db	13
  6996  00F1AE  20                 	db	32
  6997  00F1AF  20                 	db	32
  6998  00F1B0  20                 	db	32
  6999  00F1B1  20                 	db	32
  7000  00F1B2  4E                 	db	78	;'N'
  7001  00F1B3  6F                 	db	111	;'o'
  7002  00F1B4  20                 	db	32
  7003  00F1B5  70                 	db	112	;'p'
  7004  00F1B6  61                 	db	97	;'a'
  7005  00F1B7  72                 	db	114	;'r'
  7006  00F1B8  69                 	db	105	;'i'
  7007  00F1B9  74                 	db	116	;'t'
  7008  00F1BA  79                 	db	121	;'y'
  7009  00F1BB  2C                 	db	44
  7010  00F1BC  20                 	db	32
  7011  00F1BD  38                 	db	56	;'8'
  7012  00F1BE  20                 	db	32
  7013  00F1BF  62                 	db	98	;'b'
  7014  00F1C0  69                 	db	105	;'i'
  7015  00F1C1  74                 	db	116	;'t'
  7016  00F1C2  73                 	db	115	;'s'
  7017  00F1C3  2C                 	db	44
  7018  00F1C4  20                 	db	32
  7019  00F1C5  6E                 	db	110	;'n'
  7020  00F1C6  6F                 	db	111	;'o'
  7021  00F1C7  20                 	db	32
  7022  00F1C8  66                 	db	102	;'f'
  7023  00F1C9  6C                 	db	108	;'l'
  7024  00F1CA  6F                 	db	111	;'o'
  7025  00F1CB  77                 	db	119	;'w'
  7026  00F1CC  20                 	db	32
  7027  00F1CD  63                 	db	99	;'c'
  7028  00F1CE  6F                 	db	111	;'o'
  7029  00F1CF  6E                 	db	110	;'n'
  7030  00F1D0  74                 	db	116	;'t'
  7031  00F1D1  72                 	db	114	;'r'
  7032  00F1D2  6F                 	db	111	;'o'
  7033  00F1D3  6C                 	db	108	;'l'
  7034  00F1D4  2C                 	db	44
  7035  00F1D5  20                 	db	32
  7036  00F1D6  31                 	db	49	;'1'
  7037  00F1D7  20                 	db	32
  7038  00F1D8  73                 	db	115	;'s'
  7039  00F1D9  74                 	db	116	;'t'
  7040  00F1DA  6F                 	db	111	;'o'
  7041  00F1DB  70                 	db	112	;'p'
  7042  00F1DC  20                 	db	32
  7043  00F1DD  62                 	db	98	;'b'
  7044  00F1DE  69                 	db	105	;'i'
  7045  00F1DF  74                 	db	116	;'t'
  7046  00F1E0  0A                 	db	10
  7047  00F1E1  0D                 	db	13
  7048  00F1E2  20                 	db	32
  7049  00F1E3  20                 	db	32
  7050  00F1E4  20                 	db	32
  7051  00F1E5  20                 	db	32
  7052  00F1E6  43                 	db	67	;'C'
  7053  00F1E7  6F                 	db	111	;'o'
  7054  00F1E8  6D                 	db	109	;'m'
  7055  00F1E9  6D                 	db	109	;'m'
  7056  00F1EA  61                 	db	97	;'a'
  7057  00F1EB  6E                 	db	110	;'n'
  7058  00F1EC  64                 	db	100	;'d'
  7059  00F1ED  73                 	db	115	;'s'
  7060  00F1EE  20                 	db	32
  7061  00F1EF  61                 	db	97	;'a'
  7062  00F1F0  72                 	db	114	;'r'
  7063  00F1F1  65                 	db	101	;'e'
  7064  00F1F2  20                 	db	32
  7065  00F1F3  63                 	db	99	;'c'
  7066  00F1F4  61                 	db	97	;'a'
  7067  00F1F5  73                 	db	115	;'s'
  7068  00F1F6  65                 	db	101	;'e'
  7069  00F1F7  20                 	db	32
  7070  00F1F8  73                 	db	115	;'s'
  7071  00F1F9  65                 	db	101	;'e'
  7072  00F1FA  6E                 	db	110	;'n'
  7073  00F1FB  73                 	db	115	;'s'
  7074  00F1FC  69                 	db	105	;'i'
  7075  00F1FD  74                 	db	116	;'t'
  7076  00F1FE  69                 	db	105	;'i'
  7077  00F1FF  76                 	db	118	;'v'
  7078  00F200  65                 	db	101	;'e'
  7079  00F201  0A                 	db	10
  7080  00F202  0D                 	db	13
  7081  00F203  20                 	db	32
  7082  00F204  20                 	db	32
  7083  00F205  20                 	db	32
  7084  00F206  20                 	db	32
  7085  00F207  45                 	db	69	;'E'
  7086  00F208  6E                 	db	110	;'n'
  7087  00F209  74                 	db	116	;'t'
  7088  00F20A  65                 	db	101	;'e'
  7089  00F20B  72                 	db	114	;'r'
  7090  00F20C  20                 	db	32
  7091  00F20D  61                 	db	97	;'a'
  7092  00F20E  20                 	db	32
  7093  00F20F  63                 	db	99	;'c'
  7094  00F210  6F                 	db	111	;'o'
  7095  00F211  6D                 	db	109	;'m'
  7096  00F212  6D                 	db	109	;'m'
  7097  00F213  61                 	db	97	;'a'
  7098  00F214  6E                 	db	110	;'n'
  7099  00F215  64                 	db	100	;'d'
  7100  00F216  2C                 	db	44
  7101  00F217  20                 	db	32
  7102  00F218  6F                 	db	111	;'o'
  7103  00F219  72                 	db	114	;'r'
  7104  00F21A  20                 	db	32
  7105  00F21B  65                 	db	101	;'e'
  7106  00F21C  6E                 	db	110	;'n'
  7107  00F21D  74                 	db	116	;'t'
  7108  00F21E  65                 	db	101	;'e'
  7109  00F21F  72                 	db	114	;'r'
  7110  00F220  20                 	db	32
  7111  00F221  48                 	db	72	;'H'
  7112  00F222  65                 	db	101	;'e'
  7113  00F223  6C                 	db	108	;'l'
  7114  00F224  70                 	db	112	;'p'
  7115  00F225  20                 	db	32
  7116  00F226  66                 	db	102	;'f'
  7117  00F227  6F                 	db	111	;'o'
  7118  00F228  72                 	db	114	;'r'
  7119  00F229  20                 	db	32
  7120  00F22A  6C                 	db	108	;'l'
  7121  00F22B  69                 	db	105	;'i'
  7122  00F22C  73                 	db	115	;'s'
  7123  00F22D  74                 	db	116	;'t'
  7124  00F22E  20                 	db	32
  7125  00F22F  6F                 	db	111	;'o'
  7126  00F230  66                 	db	102	;'f'
  7127  00F231  20                 	db	32
  7128  00F232  63                 	db	99	;'c'
  7129  00F233  6F                 	db	111	;'o'
  7130  00F234  6D                 	db	109	;'m'
  7131  00F235  6D                 	db	109	;'m'
  7132  00F236  61                 	db	97	;'a'
  7133  00F237  6E                 	db	110	;'n'
  7134  00F238  64                 	db	100	;'d'
  7135  00F239  73                 	db	115	;'s'
  7136  00F23A  0A                 	db	10
  7137  00F23B  0D                 	db	13
  7138  00F23C  00                 	db	0
  7139  00F23D                     STR_113:
  7140  00F23D  49                 	db	73	;'I'
  7141  00F23E  66                 	db	102	;'f'
  7142  00F23F  20                 	db	32
  7143  00F240  79                 	db	121	;'y'
  7144  00F241  6F                 	db	111	;'o'
  7145  00F242  75                 	db	117	;'u'
  7146  00F243  27                 	db	39
  7147  00F244  64                 	db	100	;'d'
  7148  00F245  20                 	db	32
  7149  00F246  6C                 	db	108	;'l'
  7150  00F247  69                 	db	105	;'i'
  7151  00F248  6B                 	db	107	;'k'
  7152  00F249  65                 	db	101	;'e'
  7153  00F24A  20                 	db	32
  7154  00F24B  74                 	db	116	;'t'
  7155  00F24C  6F                 	db	111	;'o'
  7156  00F24D  20                 	db	32
  7157  00F24E  63                 	db	99	;'c'
  7158  00F24F  6F                 	db	111	;'o'
  7159  00F250  6D                 	db	109	;'m'
  7160  00F251  70                 	db	112	;'p'
  7161  00F252  6C                 	db	108	;'l'
  7162  00F253  65                 	db	101	;'e'
  7163  00F254  74                 	db	116	;'t'
  7164  00F255  65                 	db	101	;'e'
  7165  00F256  6C                 	db	108	;'l'
  7166  00F257  79                 	db	121	;'y'
  7167  00F258  20                 	db	32
  7168  00F259  65                 	db	101	;'e'
  7169  00F25A  6E                 	db	110	;'n'
  7170  00F25B  61                 	db	97	;'a'
  7171  00F25C  62                 	db	98	;'b'
  7172  00F25D  6C                 	db	108	;'l'
  7173  00F25E  65                 	db	101	;'e'
  7174  00F25F  20                 	db	32
  7175  00F260  6F                 	db	111	;'o'
  7176  00F261  72                 	db	114	;'r'
  7177  00F262  20                 	db	32
  7178  00F263  64                 	db	100	;'d'
  7179  00F264  69                 	db	105	;'i'
  7180  00F265  73                 	db	115	;'s'
  7181  00F266  61                 	db	97	;'a'
  7182  00F267  62                 	db	98	;'b'
  7183  00F268  6C                 	db	108	;'l'
  7184  00F269  65                 	db	101	;'e'
  7185  00F26A  20                 	db	32
  7186  00F26B  74                 	db	116	;'t'
  7187  00F26C  68                 	db	104	;'h'
  7188  00F26D  65                 	db	101	;'e'
  7189  00F26E  20                 	db	32
  7190  00F26F  6C                 	db	108	;'l'
  7191  00F270  6F                 	db	111	;'o'
  7192  00F271  61                 	db	97	;'a'
  7193  00F272  64                 	db	100	;'d'
  7194  00F273  2C                 	db	44
  7195  00F274  20                 	db	32
  7196  00F275  64                 	db	100	;'d'
  7197  00F276  69                 	db	105	;'i'
  7198  00F277  73                 	db	115	;'s'
  7199  00F278  61                 	db	97	;'a'
  7200  00F279  62                 	db	98	;'b'
  7201  00F27A  6C                 	db	108	;'l'
  7202  00F27B  65                 	db	101	;'e'
  7203  00F27C  20                 	db	32
  7204  00F27D  64                 	db	100	;'d'
  7205  00F27E  69                 	db	105	;'i'
  7206  00F27F  6D                 	db	109	;'m'
  7207  00F280  6D                 	db	109	;'m'
  7208  00F281  69                 	db	105	;'i'
  7209  00F282  6E                 	db	110	;'n'
  7210  00F283  67                 	db	103	;'g'
  7211  00F284  20                 	db	32
  7212  00F285  61                 	db	97	;'a'
  7213  00F286  6E                 	db	110	;'n'
  7214  00F287  64                 	db	100	;'d'
  7215  00F288  20                 	db	32
  7216  00F289  75                 	db	117	;'u'
  7217  00F28A  73                 	db	115	;'s'
  7218  00F28B  65                 	db	101	;'e'
  7219  00F28C  20                 	db	32
  7220  00F28D  72                 	db	114	;'r'
  7221  00F28E  65                 	db	101	;'e'
  7222  00F28F  73                 	db	115	;'s'
  7223  00F290  70                 	db	112	;'p'
  7224  00F291  65                 	db	101	;'e'
  7225  00F292  63                 	db	99	;'c'
  7226  00F293  74                 	db	116	;'t'
  7227  00F294  69                 	db	105	;'i'
  7228  00F295  76                 	db	118	;'v'
  7229  00F296  65                 	db	101	;'e'
  7230  00F297  20                 	db	32
  7231  00F298  63                 	db	99	;'c'
  7232  00F299  6F                 	db	111	;'o'
  7233  00F29A  6D                 	db	109	;'m'
  7234  00F29B  6D                 	db	109	;'m'
  7235  00F29C  61                 	db	97	;'a'
  7236  00F29D  6E                 	db	110	;'n'
  7237  00F29E  64                 	db	100	;'d'
  7238  00F29F  73                 	db	115	;'s'
  7239  00F2A0  0A                 	db	10
  7240  00F2A1  0D                 	db	13
  7241  00F2A2  00                 	db	0
  7242  00F2A3                     STR_112:
  7243  00F2A3  45                 	db	69	;'E'
  7244  00F2A4  52                 	db	82	;'R'
  7245  00F2A5  52                 	db	82	;'R'
  7246  00F2A6  4F                 	db	79	;'O'
  7247  00F2A7  52                 	db	82	;'R'
  7248  00F2A8  3A                 	db	58	;':'
  7249  00F2A9  20                 	db	32
  7250  00F2AA  50                 	db	80	;'P'
  7251  00F2AB  6C                 	db	108	;'l'
  7252  00F2AC  65                 	db	101	;'e'
  7253  00F2AD  61                 	db	97	;'a'
  7254  00F2AE  73                 	db	115	;'s'
  7255  00F2AF  65                 	db	101	;'e'
  7256  00F2B0  20                 	db	32
  7257  00F2B1  73                 	db	115	;'s'
  7258  00F2B2  65                 	db	101	;'e'
  7259  00F2B3  74                 	db	116	;'t'
  7260  00F2B4  20                 	db	32
  7261  00F2B5  64                 	db	100	;'d'
  7262  00F2B6  69                 	db	105	;'i'
  7263  00F2B7  6D                 	db	109	;'m'
  7264  00F2B8  6D                 	db	109	;'m'
  7265  00F2B9  69                 	db	105	;'i'
  7266  00F2BA  6E                 	db	110	;'n'
  7267  00F2BB  67                 	db	103	;'g'
  7268  00F2BC  20                 	db	32
  7269  00F2BD  70                 	db	112	;'p'
  7270  00F2BE  65                 	db	101	;'e'
  7271  00F2BF  72                 	db	114	;'r'
  7272  00F2C0  63                 	db	99	;'c'
  7273  00F2C1  65                 	db	101	;'e'
  7274  00F2C2  6E                 	db	110	;'n'
  7275  00F2C3  74                 	db	116	;'t'
  7276  00F2C4  61                 	db	97	;'a'
  7277  00F2C5  67                 	db	103	;'g'
  7278  00F2C6  65                 	db	101	;'e'
  7279  00F2C7  20                 	db	32
  7280  00F2C8  74                 	db	116	;'t'
  7281  00F2C9  6F                 	db	111	;'o'
  7282  00F2CA  20                 	db	32
  7283  00F2CB  61                 	db	97	;'a'
  7284  00F2CC  6E                 	db	110	;'n'
  7285  00F2CD  20                 	db	32
  7286  00F2CE  69                 	db	105	;'i'
  7287  00F2CF  6E                 	db	110	;'n'
  7288  00F2D0  74                 	db	116	;'t'
  7289  00F2D1  65                 	db	101	;'e'
  7290  00F2D2  67                 	db	103	;'g'
  7291  00F2D3  65                 	db	101	;'e'
  7292  00F2D4  72                 	db	114	;'r'
  7293  00F2D5  20                 	db	32
  7294  00F2D6  67                 	db	103	;'g'
  7295  00F2D7  72                 	db	114	;'r'
  7296  00F2D8  65                 	db	101	;'e'
  7297  00F2D9  61                 	db	97	;'a'
  7298  00F2DA  74                 	db	116	;'t'
  7299  00F2DB  65                 	db	101	;'e'
  7300  00F2DC  72                 	db	114	;'r'
  7301  00F2DD  20                 	db	32
  7302  00F2DE  74                 	db	116	;'t'
  7303  00F2DF  68                 	db	104	;'h'
  7304  00F2E0  61                 	db	97	;'a'
  7305  00F2E1  6E                 	db	110	;'n'
  7306  00F2E2  20                 	db	32
  7307  00F2E3  30                 	db	48	;'0'
  7308  00F2E4  20                 	db	32
  7309  00F2E5  61                 	db	97	;'a'
  7310  00F2E6  6E                 	db	110	;'n'
  7311  00F2E7  64                 	db	100	;'d'
  7312  00F2E8  20                 	db	32
  7313  00F2E9  6C                 	db	108	;'l'
  7314  00F2EA  65                 	db	101	;'e'
  7315  00F2EB  73                 	db	115	;'s'
  7316  00F2EC  73                 	db	115	;'s'
  7317  00F2ED  20                 	db	32
  7318  00F2EE  74                 	db	116	;'t'
  7319  00F2EF  68                 	db	104	;'h'
  7320  00F2F0  61                 	db	97	;'a'
  7321  00F2F1  6E                 	db	110	;'n'
  7322  00F2F2  20                 	db	32
  7323  00F2F3  31                 	db	49	;'1'
  7324  00F2F4  30                 	db	48	;'0'
  7325  00F2F5  30                 	db	48	;'0'
  7326  00F2F6  0A                 	db	10
  7327  00F2F7  0D                 	db	13
  7328  00F2F8  00                 	db	0
  7329  00F2F9                     STR_54:
  7330  00F2F9  44                 	db	68	;'D'
  7331  00F2FA  65                 	db	101	;'e'
  7332  00F2FB  76                 	db	118	;'v'
  7333  00F2FC  69                 	db	105	;'i'
  7334  00F2FD  63                 	db	99	;'c'
  7335  00F2FE  65                 	db	101	;'e'
  7336  00F2FF  20                 	db	32
  7337  00F300  49                 	db	73	;'I'
  7338  00F301  44                 	db	68	;'D'
  7339  00F302  20                 	db	32
  7340  00F303  73                 	db	115	;'s'
  7341  00F304  74                 	db	116	;'t'
  7342  00F305  6F                 	db	111	;'o'
  7343  00F306  72                 	db	114	;'r'
  7344  00F307  65                 	db	101	;'e'
  7345  00F308  64                 	db	100	;'d'
  7346  00F309  20                 	db	32
  7347  00F30A  69                 	db	105	;'i'
  7348  00F30B  6E                 	db	110	;'n'
  7349  00F30C  20                 	db	32
  7350  00F30D  46                 	db	70	;'F'
  7351  00F30E  6C                 	db	108	;'l'
  7352  00F30F  61                 	db	97	;'a'
  7353  00F310  73                 	db	115	;'s'
  7354  00F311  68                 	db	104	;'h'
  7355  00F312  20                 	db	32
  7356  00F313  69                 	db	105	;'i'
  7357  00F314  73                 	db	115	;'s'
  7358  00F315  3A                 	db	58	;':'
  7359  00F316  20                 	db	32
  7360  00F317  30                 	db	48	;'0'
  7361  00F318  78                 	db	120	;'x'
  7362  00F319  25                 	db	37
  7363  00F31A  58                 	db	88	;'X'
  7364  00F31B  2E                 	db	46
  7365  00F31C  20                 	db	32
  7366  00F31D  54                 	db	84	;'T'
  7367  00F31E  68                 	db	104	;'h'
  7368  00F31F  69                 	db	105	;'i'
  7369  00F320  73                 	db	115	;'s'
  7370  00F321  20                 	db	32
  7371  00F322  63                 	db	99	;'c'
  7372  00F323  6F                 	db	111	;'o'
  7373  00F324  72                 	db	114	;'r'
  7374  00F325  72                 	db	114	;'r'
  7375  00F326  65                 	db	101	;'e'
  7376  00F327  73                 	db	115	;'s'
  7377  00F328  70                 	db	112	;'p'
  7378  00F329  6F                 	db	111	;'o'
  7379  00F32A  6E                 	db	110	;'n'
  7380  00F32B  64                 	db	100	;'d'
  7381  00F32C  73                 	db	115	;'s'
  7382  00F32D  20                 	db	32
  7383  00F32E  74                 	db	116	;'t'
  7384  00F32F  6F                 	db	111	;'o'
  7385  00F330  20                 	db	32
  7386  00F331  61                 	db	97	;'a'
  7387  00F332  20                 	db	32
  7388  00F333  64                 	db	100	;'d'
  7389  00F334  65                 	db	101	;'e'
  7390  00F335  76                 	db	118	;'v'
  7391  00F336  69                 	db	105	;'i'
  7392  00F337  63                 	db	99	;'c'
  7393  00F338  65                 	db	101	;'e'
  7394  00F339  20                 	db	32
  7395  00F33A  70                 	db	112	;'p'
  7396  00F33B  61                 	db	97	;'a'
  7397  00F33C  72                 	db	114	;'r'
  7398  00F33D  74                 	db	116	;'t'
  7399  00F33E  20                 	db	32
  7400  00F33F  6E                 	db	110	;'n'
  7401  00F340  75                 	db	117	;'u'
  7402  00F341  6D                 	db	109	;'m'
  7403  00F342  62                 	db	98	;'b'
  7404  00F343  65                 	db	101	;'e'
  7405  00F344  72                 	db	114	;'r'
  7406  00F345  20                 	db	32
  7407  00F346  6F                 	db	111	;'o'
  7408  00F347  66                 	db	102	;'f'
  7409  00F348  20                 	db	32
  7410  00F349  25                 	db	37
  7411  00F34A  73                 	db	115	;'s'
  7412  00F34B  0A                 	db	10
  7413  00F34C  0D                 	db	13
  7414  00F34D  00                 	db	0
  7415  00F34E                     STR_95:
  7416  00F34E  4D                 	db	77	;'M'
  7417  00F34F  65                 	db	101	;'e'
  7418  00F350  61                 	db	97	;'a'
  7419  00F351  73                 	db	115	;'s'
  7420  00F352  75                 	db	117	;'u'
  7421  00F353  72                 	db	114	;'r'
  7422  00F354  65                 	db	101	;'e'
  7423  00F355  64                 	db	100	;'d'
  7424  00F356  20                 	db	32
  7425  00F357  6F                 	db	111	;'o'
  7426  00F358  75                 	db	117	;'u'
  7427  00F359  74                 	db	116	;'t'
  7428  00F35A  70                 	db	112	;'p'
  7429  00F35B  75                 	db	117	;'u'
  7430  00F35C  74                 	db	116	;'t'
  7431  00F35D  20                 	db	32
  7432  00F35E  65                 	db	101	;'e'
  7433  00F35F  6E                 	db	110	;'n'
  7434  00F360  65                 	db	101	;'e'
  7435  00F361  72                 	db	114	;'r'
  7436  00F362  67                 	db	103	;'g'
  7437  00F363  79                 	db	121	;'y'
  7438  00F364  20                 	db	32
  7439  00F365  73                 	db	115	;'s'
  7440  00F366  69                 	db	105	;'i'
  7441  00F367  6E                 	db	110	;'n'
  7442  00F368  63                 	db	99	;'c'
  7443  00F369  65                 	db	101	;'e'
  7444  00F36A  20                 	db	32
  7445  00F36B  6C                 	db	108	;'l'
  7446  00F36C  61                 	db	97	;'a'
  7447  00F36D  73                 	db	115	;'s'
  7448  00F36E  74                 	db	116	;'t'
  7449  00F36F  20                 	db	32
  7450  00F370  6D                 	db	109	;'m'
  7451  00F371  65                 	db	101	;'e'
  7452  00F372  61                 	db	97	;'a'
  7453  00F373  73                 	db	115	;'s'
  7454  00F374  75                 	db	117	;'u'
  7455  00F375  72                 	db	114	;'r'
  7456  00F376  65                 	db	101	;'e'
  7457  00F377  6D                 	db	109	;'m'
  7458  00F378  65                 	db	101	;'e'
  7459  00F379  6E                 	db	110	;'n'
  7460  00F37A  74                 	db	116	;'t'
  7461  00F37B  20                 	db	32
  7462  00F37C  72                 	db	114	;'r'
  7463  00F37D  65                 	db	101	;'e'
  7464  00F37E  73                 	db	115	;'s'
  7465  00F37F  65                 	db	101	;'e'
  7466  00F380  74                 	db	116	;'t'
  7467  00F381  20                 	db	32
  7468  00F382  69                 	db	105	;'i'
  7469  00F383  73                 	db	115	;'s'
  7470  00F384  20                 	db	32
  7471  00F385  25                 	db	37
  7472  00F386  2E                 	db	46
  7473  00F387  33                 	db	51	;'3'
  7474  00F388  66                 	db	102	;'f'
  7475  00F389  20                 	db	32
  7476  00F38A  57                 	db	87	;'W'
  7477  00F38B  61                 	db	97	;'a'
  7478  00F38C  74                 	db	116	;'t'
  7479  00F38D  74                 	db	116	;'t'
  7480  00F38E  20                 	db	32
  7481  00F38F  48                 	db	72	;'H'
  7482  00F390  6F                 	db	111	;'o'
  7483  00F391  75                 	db	117	;'u'
  7484  00F392  72                 	db	114	;'r'
  7485  00F393  73                 	db	115	;'s'
  7486  00F394  0A                 	db	10
  7487  00F395  0D                 	db	13
  7488  00F396  00                 	db	0
  7489  00F397                     STR_117:
  7490  00F397  54                 	db	84	;'T'
  7491  00F398  68                 	db	104	;'h'
  7492  00F399  69                 	db	105	;'i'
  7493  00F39A  73                 	db	115	;'s'
  7494  00F39B  20                 	db	32
  7495  00F39C  63                 	db	99	;'c'
  7496  00F39D  6F                 	db	111	;'o'
  7497  00F39E  72                 	db	114	;'r'
  7498  00F39F  72                 	db	114	;'r'
  7499  00F3A0  65                 	db	101	;'e'
  7500  00F3A1  73                 	db	115	;'s'
  7501  00F3A2  70                 	db	112	;'p'
  7502  00F3A3  6F                 	db	111	;'o'
  7503  00F3A4  6E                 	db	110	;'n'
  7504  00F3A5  64                 	db	100	;'d'
  7505  00F3A6  73                 	db	115	;'s'
  7506  00F3A7  20                 	db	32
  7507  00F3A8  74                 	db	116	;'t'
  7508  00F3A9  6F                 	db	111	;'o'
  7509  00F3AA  20                 	db	32
  7510  00F3AB  61                 	db	97	;'a'
  7511  00F3AC  20                 	db	32
  7512  00F3AD  31                 	db	49	;'1'
  7513  00F3AE  36                 	db	54	;'6'
  7514  00F3AF  20                 	db	32
  7515  00F3B0  62                 	db	98	;'b'
  7516  00F3B1  69                 	db	105	;'i'
  7517  00F3B2  74                 	db	116	;'t'
  7518  00F3B3  20                 	db	32
  7519  00F3B4  74                 	db	116	;'t'
  7520  00F3B5  69                 	db	105	;'i'
  7521  00F3B6  6D                 	db	109	;'m'
  7522  00F3B7  65                 	db	101	;'e'
  7523  00F3B8  72                 	db	114	;'r'
  7524  00F3B9  20                 	db	32
  7525  00F3BA  70                 	db	112	;'p'
  7526  00F3BB  72                 	db	114	;'r'
  7527  00F3BC  65                 	db	101	;'e'
  7528  00F3BD  2D                 	db	45
  7529  00F3BE  6C                 	db	108	;'l'
  7530  00F3BF  6F                 	db	111	;'o'
  7531  00F3C0  61                 	db	97	;'a'
  7532  00F3C1  64                 	db	100	;'d'
  7533  00F3C2  20                 	db	32
  7534  00F3C3  76                 	db	118	;'v'
  7535  00F3C4  61                 	db	97	;'a'
  7536  00F3C5  6C                 	db	108	;'l'
  7537  00F3C6  75                 	db	117	;'u'
  7538  00F3C7  65                 	db	101	;'e'
  7539  00F3C8  20                 	db	32
  7540  00F3C9  6F                 	db	111	;'o'
  7541  00F3CA  66                 	db	102	;'f'
  7542  00F3CB  20                 	db	32
  7543  00F3CC  30                 	db	48	;'0'
  7544  00F3CD  78                 	db	120	;'x'
  7545  00F3CE  25                 	db	37
  7546  00F3CF  58                 	db	88	;'X'
  7547  00F3D0  20                 	db	32
  7548  00F3D1  28                 	db	40
  7549  00F3D2  25                 	db	37
  7550  00F3D3  75                 	db	117	;'u'
  7551  00F3D4  20                 	db	32
  7552  00F3D5  4C                 	db	76	;'L'
  7553  00F3D6  53                 	db	83	;'S'
  7554  00F3D7  42                 	db	66	;'B'
  7555  00F3D8  73                 	db	115	;'s'
  7556  00F3D9  29                 	db	41
  7557  00F3DA  20                 	db	32
  7558  00F3DB  0A                 	db	10
  7559  00F3DC  0D                 	db	13
  7560  00F3DD  00                 	db	0
  7561  00F3DE                     STR_74:
  7562  00F3DE  56                 	db	86	;'V'
  7563  00F3DF  43                 	db	67	;'C'
  7564  00F3E0  43                 	db	67	;'C'
  7565  00F3E1  20                 	db	32
  7566  00F3E2  4F                 	db	79	;'O'
  7567  00F3E3  76                 	db	118	;'v'
  7568  00F3E4  65                 	db	101	;'e'
  7569  00F3E5  72                 	db	114	;'r'
  7570  00F3E6  76                 	db	118	;'v'
  7571  00F3E7  6F                 	db	111	;'o'
  7572  00F3E8  6C                 	db	108	;'l'
  7573  00F3E9  74                 	db	116	;'t'
  7574  00F3EA  61                 	db	97	;'a'
  7575  00F3EB  67                 	db	103	;'g'
  7576  00F3EC  65                 	db	101	;'e'
  7577  00F3ED  20                 	db	32
  7578  00F3EE  63                 	db	99	;'c'
  7579  00F3EF  6F                 	db	111	;'o'
  7580  00F3F0  6E                 	db	110	;'n'
  7581  00F3F1  64                 	db	100	;'d'
  7582  00F3F2  69                 	db	105	;'i'
  7583  00F3F3  74                 	db	116	;'t'
  7584  00F3F4  69                 	db	105	;'i'
  7585  00F3F5  6F                 	db	111	;'o'
  7586  00F3F6  6E                 	db	110	;'n'
  7587  00F3F7  20                 	db	32
  7588  00F3F8  68                 	db	104	;'h'
  7589  00F3F9  61                 	db	97	;'a'
  7590  00F3FA  73                 	db	115	;'s'
  7591  00F3FB  20                 	db	32
  7592  00F3FC  6F                 	db	111	;'o'
  7593  00F3FD  63                 	db	99	;'c'
  7594  00F3FE  63                 	db	99	;'c'
  7595  00F3FF  75                 	db	117	;'u'
  7596  00F400  72                 	db	114	;'r'
  7597  00F401  72                 	db	114	;'r'
  7598  00F402  65                 	db	101	;'e'
  7599  00F403  64                 	db	100	;'d'
  7600  00F404  20                 	db	32
  7601  00F405  28                 	db	40
  7602  00F406  56                 	db	86	;'V'
  7603  00F407  43                 	db	67	;'C'
  7604  00F408  43                 	db	67	;'C'
  7605  00F409  20                 	db	32
  7606  00F40A  68                 	db	104	;'h'
  7607  00F40B  61                 	db	97	;'a'
  7608  00F40C  73                 	db	115	;'s'
  7609  00F40D  20                 	db	32
  7610  00F40E  65                 	db	101	;'e'
  7611  00F40F  78                 	db	120	;'x'
  7612  00F410  63                 	db	99	;'c'
  7613  00F411  65                 	db	101	;'e'
  7614  00F412  65                 	db	101	;'e'
  7615  00F413  64                 	db	100	;'d'
  7616  00F414  65                 	db	101	;'e'
  7617  00F415  64                 	db	100	;'d'
  7618  00F416  20                 	db	32
  7619  00F417  33                 	db	51	;'3'
  7620  00F418  2E                 	db	46
  7621  00F419  36                 	db	54	;'6'
  7622  00F41A  30                 	db	48	;'0'
  7623  00F41B  56                 	db	86	;'V'
  7624  00F41C  29                 	db	41
  7625  00F41D  0A                 	db	10
  7626  00F41E  0D                 	db	13
  7627  00F41F  00                 	db	0
  7628  00F420                     STR_58:
  7629  00F420  54                 	db	84	;'T'
  7630  00F421  68                 	db	104	;'h'
  7631  00F422  65                 	db	101	;'e'
  7632  00F423  20                 	db	32
  7633  00F424  66                 	db	102	;'f'
  7634  00F425  6F                 	db	111	;'o'
  7635  00F426  6C                 	db	108	;'l'
  7636  00F427  6C                 	db	108	;'l'
  7637  00F428  6F                 	db	111	;'o'
  7638  00F429  77                 	db	119	;'w'
  7639  00F42A  69                 	db	105	;'i'
  7640  00F42B  6E                 	db	110	;'n'
  7641  00F42C  67                 	db	103	;'g'
  7642  00F42D  20                 	db	32
  7643  00F42E  55                 	db	85	;'U'
  7644  00F42F  73                 	db	115	;'s'
  7645  00F430  65                 	db	101	;'e'
  7646  00F431  72                 	db	114	;'r'
  7647  00F432  20                 	db	32
  7648  00F433  49                 	db	73	;'I'
  7649  00F434  44                 	db	68	;'D'
  7650  00F435  73                 	db	115	;'s'
  7651  00F436  20                 	db	32
  7652  00F437  68                 	db	104	;'h'
  7653  00F438  61                 	db	97	;'a'
  7654  00F439  76                 	db	118	;'v'
  7655  00F43A  65                 	db	101	;'e'
  7656  00F43B  20                 	db	32
  7657  00F43C  62                 	db	98	;'b'
  7658  00F43D  65                 	db	101	;'e'
  7659  00F43E  65                 	db	101	;'e'
  7660  00F43F  6E                 	db	110	;'n'
  7661  00F440  20                 	db	32
  7662  00F441  72                 	db	114	;'r'
  7663  00F442  65                 	db	101	;'e'
  7664  00F443  74                 	db	116	;'t'
  7665  00F444  72                 	db	114	;'r'
  7666  00F445  69                 	db	105	;'i'
  7667  00F446  65                 	db	101	;'e'
  7668  00F447  76                 	db	118	;'v'
  7669  00F448  65                 	db	101	;'e'
  7670  00F449  64                 	db	100	;'d'
  7671  00F44A  20                 	db	32
  7672  00F44B  66                 	db	102	;'f'
  7673  00F44C  72                 	db	114	;'r'
  7674  00F44D  6F                 	db	111	;'o'
  7675  00F44E  6D                 	db	109	;'m'
  7676  00F44F  20                 	db	32
  7677  00F450  66                 	db	102	;'f'
  7678  00F451  6C                 	db	108	;'l'
  7679  00F452  61                 	db	97	;'a'
  7680  00F453  73                 	db	115	;'s'
  7681  00F454  68                 	db	104	;'h'
  7682  00F455  20                 	db	32
  7683  00F456  6D                 	db	109	;'m'
  7684  00F457  65                 	db	101	;'e'
  7685  00F458  6D                 	db	109	;'m'
  7686  00F459  6F                 	db	111	;'o'
  7687  00F45A  72                 	db	114	;'r'
  7688  00F45B  79                 	db	121	;'y'
  7689  00F45C  3A                 	db	58	;':'
  7690  00F45D  0A                 	db	10
  7691  00F45E  0D                 	db	13
  7692  00F45F  00                 	db	0
  7693  00F460                     STR_116:
  7694  00F460  43                 	db	67	;'C'
  7695  00F461  61                 	db	97	;'a'
  7696  00F462  6C                 	db	108	;'l'
  7697  00F463  63                 	db	99	;'c'
  7698  00F464  75                 	db	117	;'u'
  7699  00F465  6C                 	db	108	;'l'
  7700  00F466  61                 	db	97	;'a'
  7701  00F467  74                 	db	116	;'t'
  7702  00F468  65                 	db	101	;'e'
  7703  00F469  64                 	db	100	;'d'
  7704  00F46A  20                 	db	32
  7705  00F46B  54                 	db	84	;'T'
  7706  00F46C  52                 	db	82	;'R'
  7707  00F46D  49                 	db	73	;'I'
  7708  00F46E  41                 	db	65	;'A'
  7709  00F46F  43                 	db	67	;'C'
  7710  00F470  20                 	db	32
  7711  00F471  66                 	db	102	;'f'
  7712  00F472  69                 	db	105	;'i'
  7713  00F473  72                 	db	114	;'r'
  7714  00F474  69                 	db	105	;'i'
  7715  00F475  6E                 	db	110	;'n'
  7716  00F476  67                 	db	103	;'g'
  7717  00F477  20                 	db	32
  7718  00F478  61                 	db	97	;'a'
  7719  00F479  6E                 	db	110	;'n'
  7720  00F47A  67                 	db	103	;'g'
  7721  00F47B  6C                 	db	108	;'l'
  7722  00F47C  65                 	db	101	;'e'
  7723  00F47D  20                 	db	32
  7724  00F47E  69                 	db	105	;'i'
  7725  00F47F  73                 	db	115	;'s'
  7726  00F480  20                 	db	32
  7727  00F481  25                 	db	37
  7728  00F482  2E                 	db	46
  7729  00F483  33                 	db	51	;'3'
  7730  00F484  66                 	db	102	;'f'
  7731  00F485  20                 	db	32
  7732  00F486  72                 	db	114	;'r'
  7733  00F487  61                 	db	97	;'a'
  7734  00F488  64                 	db	100	;'d'
  7735  00F489  69                 	db	105	;'i'
  7736  00F48A  61                 	db	97	;'a'
  7737  00F48B  6E                 	db	110	;'n'
  7738  00F48C  73                 	db	115	;'s'
  7739  00F48D  20                 	db	32
  7740  00F48E  28                 	db	40
  7741  00F48F  25                 	db	37
  7742  00F490  2E                 	db	46
  7743  00F491  33                 	db	51	;'3'
  7744  00F492  66                 	db	102	;'f'
  7745  00F493  20                 	db	32
  7746  00F494  64                 	db	100	;'d'
  7747  00F495  65                 	db	101	;'e'
  7748  00F496  67                 	db	103	;'g'
  7749  00F497  72                 	db	114	;'r'
  7750  00F498  65                 	db	101	;'e'
  7751  00F499  65                 	db	101	;'e'
  7752  00F49A  73                 	db	115	;'s'
  7753  00F49B  29                 	db	41
  7754  00F49C  0A                 	db	10
  7755  00F49D  0D                 	db	13
  7756  00F49E  00                 	db	0
  7757  00F49F                     STR_149:
  7758  00F49F  53                 	db	83	;'S'
  7759  00F4A0  79                 	db	121	;'y'
  7760  00F4A1  73                 	db	115	;'s'
  7761  00F4A2  74                 	db	116	;'t'
  7762  00F4A3  65                 	db	101	;'e'
  7763  00F4A4  6D                 	db	109	;'m'
  7764  00F4A5  20                 	db	32
  7765  00F4A6  70                 	db	112	;'p'
  7766  00F4A7  61                 	db	97	;'a'
  7767  00F4A8  72                 	db	114	;'r'
  7768  00F4A9  61                 	db	97	;'a'
  7769  00F4AA  6D                 	db	109	;'m'
  7770  00F4AB  65                 	db	101	;'e'
  7771  00F4AC  74                 	db	116	;'t'
  7772  00F4AD  65                 	db	101	;'e'
  7773  00F4AE  72                 	db	114	;'r'
  7774  00F4AF  73                 	db	115	;'s'
  7775  00F4B0  20                 	db	32
  7776  00F4B1  61                 	db	97	;'a'
  7777  00F4B2  6E                 	db	110	;'n'
  7778  00F4B3  64                 	db	100	;'d'
  7779  00F4B4  20                 	db	32
  7780  00F4B5  61                 	db	97	;'a'
  7781  00F4B6  66                 	db	102	;'f'
  7782  00F4B7  66                 	db	102	;'f'
  7783  00F4B8  69                 	db	105	;'i'
  7784  00F4B9  72                 	db	114	;'r'
  7785  00F4BA  6D                 	db	109	;'m'
  7786  00F4BB  61                 	db	97	;'a'
  7787  00F4BC  74                 	db	116	;'t'
  7788  00F4BD  69                 	db	105	;'i'
  7789  00F4BE  76                 	db	118	;'v'
  7790  00F4BF  65                 	db	101	;'e'
  7791  00F4C0  20                 	db	32
  7792  00F4C1  72                 	db	114	;'r'
  7793  00F4C2  65                 	db	101	;'e'
  7794  00F4C3  73                 	db	115	;'s'
  7795  00F4C4  70                 	db	112	;'p'
  7796  00F4C5  6F                 	db	111	;'o'
  7797  00F4C6  6E                 	db	110	;'n'
  7798  00F4C7  73                 	db	115	;'s'
  7799  00F4C8  65                 	db	101	;'e'
  7800  00F4C9  73                 	db	115	;'s'
  7801  00F4CA  20                 	db	32
  7802  00F4CB  61                 	db	97	;'a'
  7803  00F4CC  70                 	db	112	;'p'
  7804  00F4CD  70                 	db	112	;'p'
  7805  00F4CE  65                 	db	101	;'e'
  7806  00F4CF  61                 	db	97	;'a'
  7807  00F4D0  72                 	db	114	;'r'
  7808  00F4D1  20                 	db	32
  7809  00F4D2  69                 	db	105	;'i'
  7810  00F4D3  6E                 	db	110	;'n'
  7811  00F4D4  20                 	db	32
  7812  00F4D5  67                 	db	103	;'g'
  7813  00F4D6  72                 	db	114	;'r'
  7814  00F4D7  65                 	db	101	;'e'
  7815  00F4D8  65                 	db	101	;'e'
  7816  00F4D9  6E                 	db	110	;'n'
  7817  00F4DA  0A                 	db	10
  7818  00F4DB  0D                 	db	13
  7819  00F4DC  00                 	db	0
  7820  00F4DD                     STR_56:
  7821  00F4DD  44                 	db	68	;'D'
  7822  00F4DE  65                 	db	101	;'e'
  7823  00F4DF  76                 	db	118	;'v'
  7824  00F4E0  69                 	db	105	;'i'
  7825  00F4E1  63                 	db	99	;'c'
  7826  00F4E2  65                 	db	101	;'e'
  7827  00F4E3  20                 	db	32
  7828  00F4E4  73                 	db	115	;'s'
  7829  00F4E5  69                 	db	105	;'i'
  7830  00F4E6  6C                 	db	108	;'l'
  7831  00F4E7  69                 	db	105	;'i'
  7832  00F4E8  63                 	db	99	;'c'
  7833  00F4E9  6F                 	db	111	;'o'
  7834  00F4EA  6E                 	db	110	;'n'
  7835  00F4EB  20                 	db	32
  7836  00F4EC  72                 	db	114	;'r'
  7837  00F4ED  65                 	db	101	;'e'
  7838  00F4EE  76                 	db	118	;'v'
  7839  00F4EF  69                 	db	105	;'i'
  7840  00F4F0  73                 	db	115	;'s'
  7841  00F4F1  69                 	db	105	;'i'
  7842  00F4F2  6F                 	db	111	;'o'
  7843  00F4F3  6E                 	db	110	;'n'
  7844  00F4F4  20                 	db	32
  7845  00F4F5  49                 	db	73	;'I'
  7846  00F4F6  44                 	db	68	;'D'
  7847  00F4F7  20                 	db	32
  7848  00F4F8  61                 	db	97	;'a'
  7849  00F4F9  73                 	db	115	;'s'
  7850  00F4FA  20                 	db	32
  7851  00F4FB  73                 	db	115	;'s'
  7852  00F4FC  74                 	db	116	;'t'
  7853  00F4FD  6F                 	db	111	;'o'
  7854  00F4FE  72                 	db	114	;'r'
  7855  00F4FF  65                 	db	101	;'e'
  7856  00F500  64                 	db	100	;'d'
  7857  00F501  20                 	db	32
  7858  00F502  69                 	db	105	;'i'
  7859  00F503  6E                 	db	110	;'n'
  7860  00F504  20                 	db	32
  7861  00F505  46                 	db	70	;'F'
  7862  00F506  6C                 	db	108	;'l'
  7863  00F507  61                 	db	97	;'a'
  7864  00F508  73                 	db	115	;'s'
  7865  00F509  68                 	db	104	;'h'
  7866  00F50A  20                 	db	32
  7867  00F50B  69                 	db	105	;'i'
  7868  00F50C  73                 	db	115	;'s'
  7869  00F50D  3A                 	db	58	;':'
  7870  00F50E  20                 	db	32
  7871  00F50F  25                 	db	37
  7872  00F510  63                 	db	99	;'c'
  7873  00F511  25                 	db	37
  7874  00F512  30                 	db	48	;'0'
  7875  00F513  33                 	db	51	;'3'
  7876  00F514  64                 	db	100	;'d'
  7877  00F515  0A                 	db	10
  7878  00F516  0D                 	db	13
  7879  00F517  00                 	db	0
  7880  00F518                     STR_119:
  7881  00F518  44                 	db	68	;'D'
  7882  00F519  65                 	db	101	;'e'
  7883  00F51A  76                 	db	118	;'v'
  7884  00F51B  69                 	db	105	;'i'
  7885  00F51C  63                 	db	99	;'c'
  7886  00F51D  65                 	db	101	;'e'
  7887  00F51E  20                 	db	32
  7888  00F51F  6F                 	db	111	;'o'
  7889  00F520  6E                 	db	110	;'n'
  7890  00F521  20                 	db	32
  7891  00F522  74                 	db	116	;'t'
  7892  00F523  69                 	db	105	;'i'
  7893  00F524  6D                 	db	109	;'m'
  7894  00F525  65                 	db	101	;'e'
  7895  00F526  20                 	db	32
  7896  00F527  73                 	db	115	;'s'
  7897  00F528  69                 	db	105	;'i'
  7898  00F529  6E                 	db	110	;'n'
  7899  00F52A  63                 	db	99	;'c'
  7900  00F52B  65                 	db	101	;'e'
  7901  00F52C  20                 	db	32
  7902  00F52D  6C                 	db	108	;'l'
  7903  00F52E  61                 	db	97	;'a'
  7904  00F52F  73                 	db	115	;'s'
  7905  00F530  74                 	db	116	;'t'
  7906  00F531  20                 	db	32
  7907  00F532  72                 	db	114	;'r'
  7908  00F533  65                 	db	101	;'e'
  7909  00F534  73                 	db	115	;'s'
  7910  00F535  65                 	db	101	;'e'
  7911  00F536  74                 	db	116	;'t'
  7912  00F537  20                 	db	32
  7913  00F538  63                 	db	99	;'c'
  7914  00F539  6F                 	db	111	;'o'
  7915  00F53A  6E                 	db	110	;'n'
  7916  00F53B  64                 	db	100	;'d'
  7917  00F53C  69                 	db	105	;'i'
  7918  00F53D  74                 	db	116	;'t'
  7919  00F53E  69                 	db	105	;'i'
  7920  00F53F  6F                 	db	111	;'o'
  7921  00F540  6E                 	db	110	;'n'
  7922  00F541  20                 	db	32
  7923  00F542  69                 	db	105	;'i'
  7924  00F543  73                 	db	115	;'s'
  7925  00F544  20                 	db	32
  7926  00F545  25                 	db	37
  7927  00F546  64                 	db	100	;'d'
  7928  00F547  20                 	db	32
  7929  00F548  73                 	db	115	;'s'
  7930  00F549  65                 	db	101	;'e'
  7931  00F54A  63                 	db	99	;'c'
  7932  00F54B  6F                 	db	111	;'o'
  7933  00F54C  6E                 	db	110	;'n'
  7934  00F54D  64                 	db	100	;'d'
  7935  00F54E  73                 	db	115	;'s'
  7936  00F54F  0A                 	db	10
  7937  00F550  0D                 	db	13
  7938  00F551  00                 	db	0
  7939  00F552                     STR_83:
  7940  00F552  46                 	db	70	;'F'
  7941  00F553  69                 	db	105	;'i'
  7942  00F554  78                 	db	120	;'x'
  7943  00F555  65                 	db	101	;'e'
  7944  00F556  64                 	db	100	;'d'
  7945  00F557  20                 	db	32
  7946  00F558  56                 	db	86	;'V'
  7947  00F559  6F                 	db	111	;'o'
  7948  00F55A  6C                 	db	108	;'l'
  7949  00F55B  74                 	db	116	;'t'
  7950  00F55C  61                 	db	97	;'a'
  7951  00F55D  67                 	db	103	;'g'
  7952  00F55E  65                 	db	101	;'e'
  7953  00F55F  20                 	db	32
  7954  00F560  52                 	db	82	;'R'
  7955  00F561  65                 	db	101	;'e'
  7956  00F562  66                 	db	102	;'f'
  7957  00F563  65                 	db	101	;'e'
  7958  00F564  72                 	db	114	;'r'
  7959  00F565  65                 	db	101	;'e'
  7960  00F566  6E                 	db	110	;'n'
  7961  00F567  63                 	db	99	;'c'
  7962  00F568  65                 	db	101	;'e'
  7963  00F569  20                 	db	32
  7964  00F56A  42                 	db	66	;'B'
  7965  00F56B  75                 	db	117	;'u'
  7966  00F56C  66                 	db	102	;'f'
  7967  00F56D  66                 	db	102	;'f'
  7968  00F56E  65                 	db	101	;'e'
  7969  00F56F  72                 	db	114	;'r'
  7970  00F570  20                 	db	32
  7971  00F571  31                 	db	49	;'1'
  7972  00F572  20                 	db	32
  7973  00F573  6D                 	db	109	;'m'
  7974  00F574  65                 	db	101	;'e'
  7975  00F575  61                 	db	97	;'a'
  7976  00F576  73                 	db	115	;'s'
  7977  00F577  75                 	db	117	;'u'
  7978  00F578  72                 	db	114	;'r'
  7979  00F579  65                 	db	101	;'e'
  7980  00F57A  64                 	db	100	;'d'
  7981  00F57B  20                 	db	32
  7982  00F57C  61                 	db	97	;'a'
  7983  00F57D  73                 	db	115	;'s'
  7984  00F57E  20                 	db	32
  7985  00F57F  25                 	db	37
  7986  00F580  2E                 	db	46
  7987  00F581  33                 	db	51	;'3'
  7988  00F582  66                 	db	102	;'f'
  7989  00F583  20                 	db	32
  7990  00F584  56                 	db	86	;'V'
  7991  00F585  6F                 	db	111	;'o'
  7992  00F586  6C                 	db	108	;'l'
  7993  00F587  74                 	db	116	;'t'
  7994  00F588  73                 	db	115	;'s'
  7995  00F589  0A                 	db	10
  7996  00F58A  0D                 	db	13
  7997  00F58B  00                 	db	0
  7998  00F58C                     STR_93:
  7999  00F58C  4F                 	db	79	;'O'
  8000  00F58D  75                 	db	117	;'u'
  8001  00F58E  74                 	db	116	;'t'
  8002  00F58F  70                 	db	112	;'p'
  8003  00F590  75                 	db	117	;'u'
  8004  00F591  74                 	db	116	;'t'
  8005  00F592  20                 	db	32
  8006  00F593  70                 	db	112	;'p'
  8007  00F594  6F                 	db	111	;'o'
  8008  00F595  77                 	db	119	;'w'
  8009  00F596  65                 	db	101	;'e'
  8010  00F597  72                 	db	114	;'r'
  8011  00F598  20                 	db	32
  8012  00F599  63                 	db	99	;'c'
  8013  00F59A  61                 	db	97	;'a'
  8014  00F59B  6C                 	db	108	;'l'
  8015  00F59C  63                 	db	99	;'c'
  8016  00F59D  75                 	db	117	;'u'
  8017  00F59E  6C                 	db	108	;'l'
  8018  00F59F  61                 	db	97	;'a'
  8019  00F5A0  74                 	db	116	;'t'
  8020  00F5A1  65                 	db	101	;'e'
  8021  00F5A2  64                 	db	100	;'d'
  8022  00F5A3  20                 	db	32
  8023  00F5A4  61                 	db	97	;'a'
  8024  00F5A5  73                 	db	115	;'s'
  8025  00F5A6  20                 	db	32
  8026  00F5A7  25                 	db	37
  8027  00F5A8  2E                 	db	46
  8028  00F5A9  33                 	db	51	;'3'
  8029  00F5AA  66                 	db	102	;'f'
  8030  00F5AB  20                 	db	32
  8031  00F5AC  57                 	db	87	;'W'
  8032  00F5AD  61                 	db	97	;'a'
  8033  00F5AE  74                 	db	116	;'t'
  8034  00F5AF  74                 	db	116	;'t'
  8035  00F5B0  73                 	db	115	;'s'
  8036  00F5B1  20                 	db	32
  8037  00F5B2  66                 	db	102	;'f'
  8038  00F5B3  72                 	db	114	;'r'
  8039  00F5B4  6F                 	db	111	;'o'
  8040  00F5B5  6D                 	db	109	;'m'
  8041  00F5B6  20                 	db	32
  8042  00F5B7  52                 	db	82	;'R'
  8043  00F5B8  4D                 	db	77	;'M'
  8044  00F5B9  53                 	db	83	;'S'
  8045  00F5BA  20                 	db	32
  8046  00F5BB  76                 	db	118	;'v'
  8047  00F5BC  61                 	db	97	;'a'
  8048  00F5BD  6C                 	db	108	;'l'
  8049  00F5BE  75                 	db	117	;'u'
  8050  00F5BF  65                 	db	101	;'e'
  8051  00F5C0  73                 	db	115	;'s'
  8052  00F5C1  0A                 	db	10
  8053  00F5C2  0D                 	db	13
  8054  00F5C3  00                 	db	0
  8055  00F5C4                     STR_148:
  8056  00F5C4  48                 	db	72	;'H'
  8057  00F5C5  65                 	db	101	;'e'
  8058  00F5C6  6C                 	db	108	;'l'
  8059  00F5C7  70                 	db	112	;'p'
  8060  00F5C8  20                 	db	32
  8061  00F5C9  6D                 	db	109	;'m'
  8062  00F5CA  65                 	db	101	;'e'
  8063  00F5CB  73                 	db	115	;'s'
  8064  00F5CC  73                 	db	115	;'s'
  8065  00F5CD  61                 	db	97	;'a'
  8066  00F5CE  67                 	db	103	;'g'
  8067  00F5CF  65                 	db	101	;'e'
  8068  00F5D0  73                 	db	115	;'s'
  8069  00F5D1  20                 	db	32
  8070  00F5D2  61                 	db	97	;'a'
  8071  00F5D3  6E                 	db	110	;'n'
  8072  00F5D4  64                 	db	100	;'d'
  8073  00F5D5  20                 	db	32
  8074  00F5D6  6E                 	db	110	;'n'
  8075  00F5D7  65                 	db	101	;'e'
  8076  00F5D8  75                 	db	117	;'u'
  8077  00F5D9  74                 	db	116	;'t'
  8078  00F5DA  72                 	db	114	;'r'
  8079  00F5DB  61                 	db	97	;'a'
  8080  00F5DC  6C                 	db	108	;'l'
  8081  00F5DD  20                 	db	32
  8082  00F5DE  72                 	db	114	;'r'
  8083  00F5DF  65                 	db	101	;'e'
  8084  00F5E0  73                 	db	115	;'s'
  8085  00F5E1  70                 	db	112	;'p'
  8086  00F5E2  6F                 	db	111	;'o'
  8087  00F5E3  6E                 	db	110	;'n'
  8088  00F5E4  73                 	db	115	;'s'
  8089  00F5E5  65                 	db	101	;'e'
  8090  00F5E6  73                 	db	115	;'s'
  8091  00F5E7  20                 	db	32
  8092  00F5E8  61                 	db	97	;'a'
  8093  00F5E9  70                 	db	112	;'p'
  8094  00F5EA  70                 	db	112	;'p'
  8095  00F5EB  65                 	db	101	;'e'
  8096  00F5EC  61                 	db	97	;'a'
  8097  00F5ED  72                 	db	114	;'r'
  8098  00F5EE  20                 	db	32
  8099  00F5EF  69                 	db	105	;'i'
  8100  00F5F0  6E                 	db	110	;'n'
  8101  00F5F1  20                 	db	32
  8102  00F5F2  79                 	db	121	;'y'
  8103  00F5F3  65                 	db	101	;'e'
  8104  00F5F4  6C                 	db	108	;'l'
  8105  00F5F5  6C                 	db	108	;'l'
  8106  00F5F6  6F                 	db	111	;'o'
  8107  00F5F7  77                 	db	119	;'w'
  8108  00F5F8  0A                 	db	10
  8109  00F5F9  0D                 	db	13
  8110  00F5FA  00                 	db	0
  8111  00F5FB                     STR_135:
  8112  00F5FB  4D                 	db	77	;'M'
  8113  00F5FC  61                 	db	97	;'a'
  8114  00F5FD  78                 	db	120	;'x'
  8115  00F5FE  69                 	db	105	;'i'
  8116  00F5FF  6D                 	db	109	;'m'
  8117  00F600  75                 	db	117	;'u'
  8118  00F601  6D                 	db	109	;'m'
  8119  00F602  20                 	db	32
  8120  00F603  72                 	db	114	;'r'
  8121  00F604  65                 	db	101	;'e'
  8122  00F605  63                 	db	99	;'c'
  8123  00F606  6F                 	db	111	;'o'
  8124  00F607  72                 	db	114	;'r'
  8125  00F608  64                 	db	100	;'d'
  8126  00F609  65                 	db	101	;'e'
  8127  00F60A  64                 	db	100	;'d'
  8128  00F60B  20                 	db	32
  8129  00F60C  76                 	db	118	;'v'
  8130  00F60D  61                 	db	97	;'a'
  8131  00F60E  6C                 	db	108	;'l'
  8132  00F60F  75                 	db	117	;'u'
  8133  00F610  65                 	db	101	;'e'
  8134  00F611  73                 	db	115	;'s'
  8135  00F612  20                 	db	32
  8136  00F613  65                 	db	101	;'e'
  8137  00F614  72                 	db	114	;'r'
  8138  00F615  61                 	db	97	;'a'
  8139  00F616  73                 	db	115	;'s'
  8140  00F617  65                 	db	101	;'e'
  8141  00F618  64                 	db	100	;'d'
  8142  00F619  20                 	db	32
  8143  00F61A  66                 	db	102	;'f'
  8144  00F61B  72                 	db	114	;'r'
  8145  00F61C  6F                 	db	111	;'o'
  8146  00F61D  6D                 	db	109	;'m'
  8147  00F61E  20                 	db	32
  8148  00F61F  53                 	db	83	;'S'
  8149  00F620  52                 	db	82	;'R'
  8150  00F621  41                 	db	65	;'A'
  8151  00F622  4D                 	db	77	;'M'
  8152  00F623  20                 	db	32
  8153  00F624  61                 	db	97	;'a'
  8154  00F625  6E                 	db	110	;'n'
  8155  00F626  64                 	db	100	;'d'
  8156  00F627  20                 	db	32
  8157  00F628  45                 	db	69	;'E'
  8158  00F629  45                 	db	69	;'E'
  8159  00F62A  50                 	db	80	;'P'
  8160  00F62B  52                 	db	82	;'R'
  8161  00F62C  4F                 	db	79	;'O'
  8162  00F62D  4D                 	db	77	;'M'
  8163  00F62E  0A                 	db	10
  8164  00F62F  0D                 	db	13
  8165  00F630  00                 	db	0
  8166  00F631                     STR_59:
  8167  00F631  20                 	db	32
  8168  00F632  20                 	db	32
  8169  00F633  20                 	db	32
  8170  00F634  20                 	db	32
  8171  00F635  55                 	db	85	;'U'
  8172  00F636  73                 	db	115	;'s'
  8173  00F637  65                 	db	101	;'e'
  8174  00F638  72                 	db	114	;'r'
  8175  00F639  20                 	db	32
  8176  00F63A  49                 	db	73	;'I'
  8177  00F63B  44                 	db	68	;'D'
  8178  00F63C  20                 	db	32
  8179  00F63D  57                 	db	87	;'W'
  8180  00F63E  6F                 	db	111	;'o'
  8181  00F63F  72                 	db	114	;'r'
  8182  00F640  64                 	db	100	;'d'
  8183  00F641  20                 	db	32
  8184  00F642  25                 	db	37
  8185  00F643  64                 	db	100	;'d'
  8186  00F644  20                 	db	32
  8187  00F645  28                 	db	40
  8188  00F646  46                 	db	70	;'F'
  8189  00F647  6C                 	db	108	;'l'
  8190  00F648  61                 	db	97	;'a'
  8191  00F649  73                 	db	115	;'s'
  8192  00F64A  68                 	db	104	;'h'
  8193  00F64B  20                 	db	32
  8194  00F64C  61                 	db	97	;'a'
  8195  00F64D  64                 	db	100	;'d'
  8196  00F64E  64                 	db	100	;'d'
  8197  00F64F  72                 	db	114	;'r'
  8198  00F650  65                 	db	101	;'e'
  8199  00F651  73                 	db	115	;'s'
  8200  00F652  73                 	db	115	;'s'
  8201  00F653  20                 	db	32
  8202  00F654  30                 	db	48	;'0'
  8203  00F655  78                 	db	120	;'x'
  8204  00F656  32                 	db	50	;'2'
  8205  00F657  30                 	db	48	;'0'
  8206  00F658  30                 	db	48	;'0'
  8207  00F659  30                 	db	48	;'0'
  8208  00F65A  30                 	db	48	;'0'
  8209  00F65B  25                 	db	37
  8210  00F65C  58                 	db	88	;'X'
  8211  00F65D  29                 	db	41
  8212  00F65E  3A                 	db	58	;':'
  8213  00F65F  20                 	db	32
  8214  00F660  30                 	db	48	;'0'
  8215  00F661  78                 	db	120	;'x'
  8216  00F662  25                 	db	37
  8217  00F663  58                 	db	88	;'X'
  8218  00F664  0A                 	db	10
  8219  00F665  0D                 	db	13
  8220  00F666  00                 	db	0
  8221  00F667                     STR_133:
  8222  00F667  4D                 	db	77	;'M'
  8223  00F668  61                 	db	97	;'a'
  8224  00F669  78                 	db	120	;'x'
  8225  00F66A  69                 	db	105	;'i'
  8226  00F66B  6D                 	db	109	;'m'
  8227  00F66C  75                 	db	117	;'u'
  8228  00F66D  6D                 	db	109	;'m'
  8229  00F66E  20                 	db	32
  8230  00F66F  72                 	db	114	;'r'
  8231  00F670  65                 	db	101	;'e'
  8232  00F671  63                 	db	99	;'c'
  8233  00F672  6F                 	db	111	;'o'
  8234  00F673  72                 	db	114	;'r'
  8235  00F674  64                 	db	100	;'d'
  8236  00F675  65                 	db	101	;'e'
  8237  00F676  64                 	db	100	;'d'
  8238  00F677  20                 	db	32
  8239  00F678  46                 	db	70	;'F'
  8240  00F679  56                 	db	86	;'V'
  8241  00F67A  52                 	db	82	;'R'
  8242  00F67B  20                 	db	32
  8243  00F67C  62                 	db	98	;'b'
  8244  00F67D  75                 	db	117	;'u'
  8245  00F67E  66                 	db	102	;'f'
  8246  00F67F  66                 	db	102	;'f'
  8247  00F680  65                 	db	101	;'e'
  8248  00F681  72                 	db	114	;'r'
  8249  00F682  20                 	db	32
  8250  00F683  31                 	db	49	;'1'
  8251  00F684  20                 	db	32
  8252  00F685  76                 	db	118	;'v'
  8253  00F686  6F                 	db	111	;'o'
  8254  00F687  6C                 	db	108	;'l'
  8255  00F688  74                 	db	116	;'t'
  8256  00F689  61                 	db	97	;'a'
  8257  00F68A  67                 	db	103	;'g'
  8258  00F68B  65                 	db	101	;'e'
  8259  00F68C  20                 	db	32
  8260  00F68D  69                 	db	105	;'i'
  8261  00F68E  73                 	db	115	;'s'
  8262  00F68F  20                 	db	32
  8263  00F690  25                 	db	37
  8264  00F691  2E                 	db	46
  8265  00F692  33                 	db	51	;'3'
  8266  00F693  66                 	db	102	;'f'
  8267  00F694  20                 	db	32
  8268  00F695  56                 	db	86	;'V'
  8269  00F696  6F                 	db	111	;'o'
  8270  00F697  6C                 	db	108	;'l'
  8271  00F698  74                 	db	116	;'t'
  8272  00F699  73                 	db	115	;'s'
  8273  00F69A  0A                 	db	10
  8274  00F69B  0D                 	db	13
  8275  00F69C  00                 	db	0
  8276  00F69D                     STR_107:
  8277  00F69D  4C                 	db	76	;'L'
  8278  00F69E  6F                 	db	111	;'o'
  8279  00F69F  61                 	db	97	;'a'
  8280  00F6A0  64                 	db	100	;'d'
  8281  00F6A1  20                 	db	32
  8282  00F6A2  69                 	db	105	;'i'
  8283  00F6A3  73                 	db	115	;'s'
  8284  00F6A4  20                 	db	32
  8285  00F6A5  63                 	db	99	;'c'
  8286  00F6A6  75                 	db	117	;'u'
  8287  00F6A7  72                 	db	114	;'r'
  8288  00F6A8  72                 	db	114	;'r'
  8289  00F6A9  65                 	db	101	;'e'
  8290  00F6AA  6E                 	db	110	;'n'
  8291  00F6AB  74                 	db	116	;'t'
  8292  00F6AC  6C                 	db	108	;'l'
  8293  00F6AD  79                 	db	121	;'y'
  8294  00F6AE  20                 	db	32
  8295  00F6AF  65                 	db	101	;'e'
  8296  00F6B0  6E                 	db	110	;'n'
  8297  00F6B1  61                 	db	97	;'a'
  8298  00F6B2  62                 	db	98	;'b'
  8299  00F6B3  6C                 	db	108	;'l'
  8300  00F6B4  65                 	db	101	;'e'
  8301  00F6B5  64                 	db	100	;'d'
  8302  00F6B6  2C                 	db	44
  8303  00F6B7  20                 	db	32
  8304  00F6B8  62                 	db	98	;'b'
  8305  00F6B9  75                 	db	117	;'u'
  8306  00F6BA  74                 	db	116	;'t'
  8307  00F6BB  20                 	db	32
  8308  00F6BC  64                 	db	100	;'d'
  8309  00F6BD  69                 	db	105	;'i'
  8310  00F6BE  6D                 	db	109	;'m'
  8311  00F6BF  6D                 	db	109	;'m'
  8312  00F6C0  69                 	db	105	;'i'
  8313  00F6C1  6E                 	db	110	;'n'
  8314  00F6C2  67                 	db	103	;'g'
  8315  00F6C3  20                 	db	32
  8316  00F6C4  69                 	db	105	;'i'
  8317  00F6C5  73                 	db	115	;'s'
  8318  00F6C6  20                 	db	32
  8319  00F6C7  64                 	db	100	;'d'
  8320  00F6C8  69                 	db	105	;'i'
  8321  00F6C9  73                 	db	115	;'s'
  8322  00F6CA  61                 	db	97	;'a'
  8323  00F6CB  62                 	db	98	;'b'
  8324  00F6CC  6C                 	db	108	;'l'
  8325  00F6CD  65                 	db	101	;'e'
  8326  00F6CE  64                 	db	100	;'d'
  8327  00F6CF  0A                 	db	10
  8328  00F6D0  0D                 	db	13
  8329  00F6D1  00                 	db	0
  8330  00F6D2                     STR_121:
  8331  00F6D2  4C                 	db	76	;'L'
  8332  00F6D3  6F                 	db	111	;'o'
  8333  00F6D4  61                 	db	97	;'a'
  8334  00F6D5  64                 	db	100	;'d'
  8335  00F6D6  20                 	db	32
  8336  00F6D7  6F                 	db	111	;'o'
  8337  00F6D8  6E                 	db	110	;'n'
  8338  00F6D9  20                 	db	32
  8339  00F6DA  74                 	db	116	;'t'
  8340  00F6DB  69                 	db	105	;'i'
  8341  00F6DC  6D                 	db	109	;'m'
  8342  00F6DD  65                 	db	101	;'e'
  8343  00F6DE  20                 	db	32
  8344  00F6DF  73                 	db	115	;'s'
  8345  00F6E0  69                 	db	105	;'i'
  8346  00F6E1  6E                 	db	110	;'n'
  8347  00F6E2  63                 	db	99	;'c'
  8348  00F6E3  65                 	db	101	;'e'
  8349  00F6E4  20                 	db	32
  8350  00F6E5  6C                 	db	108	;'l'
  8351  00F6E6  61                 	db	97	;'a'
  8352  00F6E7  73                 	db	115	;'s'
  8353  00F6E8  74                 	db	116	;'t'
  8354  00F6E9  20                 	db	32
  8355  00F6EA  64                 	db	100	;'d'
  8356  00F6EB  65                 	db	101	;'e'
  8357  00F6EC  76                 	db	118	;'v'
  8358  00F6ED  69                 	db	105	;'i'
  8359  00F6EE  63                 	db	99	;'c'
  8360  00F6EF  65                 	db	101	;'e'
  8361  00F6F0  20                 	db	32
  8362  00F6F1  72                 	db	114	;'r'
  8363  00F6F2  65                 	db	101	;'e'
  8364  00F6F3  73                 	db	115	;'s'
  8365  00F6F4  65                 	db	101	;'e'
  8366  00F6F5  74                 	db	116	;'t'
  8367  00F6F6  20                 	db	32
  8368  00F6F7  69                 	db	105	;'i'
  8369  00F6F8  73                 	db	115	;'s'
  8370  00F6F9  20                 	db	32
  8371  00F6FA  25                 	db	37
  8372  00F6FB  64                 	db	100	;'d'
  8373  00F6FC  20                 	db	32
  8374  00F6FD  73                 	db	115	;'s'
  8375  00F6FE  65                 	db	101	;'e'
  8376  00F6FF  63                 	db	99	;'c'
  8377  00F700  6F                 	db	111	;'o'
  8378  00F701  6E                 	db	110	;'n'
  8379  00F702  64                 	db	100	;'d'
  8380  00F703  73                 	db	115	;'s'
  8381  00F704  0A                 	db	10
  8382  00F705  0D                 	db	13
  8383  00F706  00                 	db	0
  8384  00F707                     STR_48:
  8385  00F707  54                 	db	84	;'T'
  8386  00F708  68                 	db	104	;'h'
  8387  00F709  65                 	db	101	;'e'
  8388  00F70A  20                 	db	32
  8389  00F70B  63                 	db	99	;'c'
  8390  00F70C  61                 	db	97	;'a'
  8391  00F70D  75                 	db	117	;'u'
  8392  00F70E  73                 	db	115	;'s'
  8393  00F70F  65                 	db	101	;'e'
  8394  00F710  20                 	db	32
  8395  00F711  6F                 	db	111	;'o'
  8396  00F712  66                 	db	102	;'f'
  8397  00F713  20                 	db	32
  8398  00F714  74                 	db	116	;'t'
  8399  00F715  68                 	db	104	;'h'
  8400  00F716  65                 	db	101	;'e'
  8401  00F717  20                 	db	32
  8402  00F718  6D                 	db	109	;'m'
  8403  00F719  6F                 	db	111	;'o'
  8404  00F71A  73                 	db	115	;'s'
  8405  00F71B  74                 	db	116	;'t'
  8406  00F71C  20                 	db	32
  8407  00F71D  72                 	db	114	;'r'
  8408  00F71E  65                 	db	101	;'e'
  8409  00F71F  63                 	db	99	;'c'
  8410  00F720  65                 	db	101	;'e'
  8411  00F721  6E                 	db	110	;'n'
  8412  00F722  74                 	db	116	;'t'
  8413  00F723  20                 	db	32
  8414  00F724  64                 	db	100	;'d'
  8415  00F725  65                 	db	101	;'e'
  8416  00F726  76                 	db	118	;'v'
  8417  00F727  69                 	db	105	;'i'
  8418  00F728  63                 	db	99	;'c'
  8419  00F729  65                 	db	101	;'e'
  8420  00F72A  20                 	db	32
  8421  00F72B  72                 	db	114	;'r'
  8422  00F72C  65                 	db	101	;'e'
  8423  00F72D  73                 	db	115	;'s'
  8424  00F72E  65                 	db	101	;'e'
  8425  00F72F  74                 	db	116	;'t'
  8426  00F730  20                 	db	32
  8427  00F731  77                 	db	119	;'w'
  8428  00F732  61                 	db	97	;'a'
  8429  00F733  73                 	db	115	;'s'
  8430  00F734  3A                 	db	58	;':'
  8431  00F735  20                 	db	32
  8432  00F736  25                 	db	37
  8433  00F737  73                 	db	115	;'s'
  8434  00F738  0A                 	db	10
  8435  00F739  0D                 	db	13
  8436  00F73A  00                 	db	0
  8437  00F73B                     STR_127:
  8438  00F73B  4D                 	db	77	;'M'
  8439  00F73C  61                 	db	97	;'a'
  8440  00F73D  78                 	db	120	;'x'
  8441  00F73E  69                 	db	105	;'i'
  8442  00F73F  6D                 	db	109	;'m'
  8443  00F740  75                 	db	117	;'u'
  8444  00F741  6D                 	db	109	;'m'
  8445  00F742  20                 	db	32
  8446  00F743  72                 	db	114	;'r'
  8447  00F744  65                 	db	101	;'e'
  8448  00F745  63                 	db	99	;'c'
  8449  00F746  6F                 	db	111	;'o'
  8450  00F747  72                 	db	114	;'r'
  8451  00F748  64                 	db	100	;'d'
  8452  00F749  65                 	db	101	;'e'
  8453  00F74A  64                 	db	100	;'d'
  8454  00F74B  20                 	db	32
  8455  00F74C  2B                 	db	43
  8456  00F74D  33                 	db	51	;'3'
  8457  00F74E  2E                 	db	46
  8458  00F74F  33                 	db	51	;'3'
  8459  00F750  56                 	db	86	;'V'
  8460  00F751  20                 	db	32
  8461  00F752  72                 	db	114	;'r'
  8462  00F753  61                 	db	97	;'a'
  8463  00F754  69                 	db	105	;'i'
  8464  00F755  6C                 	db	108	;'l'
  8465  00F756  20                 	db	32
  8466  00F757  76                 	db	118	;'v'
  8467  00F758  6F                 	db	111	;'o'
  8468  00F759  6C                 	db	108	;'l'
  8469  00F75A  74                 	db	116	;'t'
  8470  00F75B  61                 	db	97	;'a'
  8471  00F75C  67                 	db	103	;'g'
  8472  00F75D  65                 	db	101	;'e'
  8473  00F75E  20                 	db	32
  8474  00F75F  69                 	db	105	;'i'
  8475  00F760  73                 	db	115	;'s'
  8476  00F761  20                 	db	32
  8477  00F762  25                 	db	37
  8478  00F763  2E                 	db	46
  8479  00F764  33                 	db	51	;'3'
  8480  00F765  66                 	db	102	;'f'
  8481  00F766  20                 	db	32
  8482  00F767  56                 	db	86	;'V'
  8483  00F768  6F                 	db	111	;'o'
  8484  00F769  6C                 	db	108	;'l'
  8485  00F76A  74                 	db	116	;'t'
  8486  00F76B  73                 	db	115	;'s'
  8487  00F76C  0A                 	db	10
  8488  00F76D  0D                 	db	13
  8489  00F76E  00                 	db	0
  8490  00F76F                     STR_123:
  8491  00F76F  4D                 	db	77	;'M'
  8492  00F770  61                 	db	97	;'a'
  8493  00F771  78                 	db	120	;'x'
  8494  00F772  69                 	db	105	;'i'
  8495  00F773  6D                 	db	109	;'m'
  8496  00F774  75                 	db	117	;'u'
  8497  00F775  6D                 	db	109	;'m'
  8498  00F776  20                 	db	32
  8499  00F777  72                 	db	114	;'r'
  8500  00F778  65                 	db	101	;'e'
  8501  00F779  63                 	db	99	;'c'
  8502  00F77A  6F                 	db	111	;'o'
  8503  00F77B  72                 	db	114	;'r'
  8504  00F77C  64                 	db	100	;'d'
  8505  00F77D  65                 	db	101	;'e'
  8506  00F77E  64                 	db	100	;'d'
  8507  00F77F  20                 	db	32
  8508  00F780  52                 	db	82	;'R'
  8509  00F781  4D                 	db	77	;'M'
  8510  00F782  53                 	db	83	;'S'
  8511  00F783  20                 	db	32
  8512  00F784  6F                 	db	111	;'o'
  8513  00F785  75                 	db	117	;'u'
  8514  00F786  74                 	db	116	;'t'
  8515  00F787  70                 	db	112	;'p'
  8516  00F788  75                 	db	117	;'u'
  8517  00F789  74                 	db	116	;'t'
  8518  00F78A  20                 	db	32
  8519  00F78B  63                 	db	99	;'c'
  8520  00F78C  75                 	db	117	;'u'
  8521  00F78D  72                 	db	114	;'r'
  8522  00F78E  72                 	db	114	;'r'
  8523  00F78F  65                 	db	101	;'e'
  8524  00F790  6E                 	db	110	;'n'
  8525  00F791  74                 	db	116	;'t'
  8526  00F792  20                 	db	32
  8527  00F793  69                 	db	105	;'i'
  8528  00F794  73                 	db	115	;'s'
  8529  00F795  20                 	db	32
  8530  00F796  25                 	db	37
  8531  00F797  2E                 	db	46
  8532  00F798  33                 	db	51	;'3'
  8533  00F799  66                 	db	102	;'f'
  8534  00F79A  20                 	db	32
  8535  00F79B  41                 	db	65	;'A'
  8536  00F79C  72                 	db	114	;'r'
  8537  00F79D  6D                 	db	109	;'m'
  8538  00F79E  73                 	db	115	;'s'
  8539  00F79F  0A                 	db	10
  8540  00F7A0  0D                 	db	13
  8541  00F7A1  00                 	db	0
  8542  00F7A2                     STR_129:
  8543  00F7A2  4D                 	db	77	;'M'
  8544  00F7A3  61                 	db	97	;'a'
  8545  00F7A4  78                 	db	120	;'x'
  8546  00F7A5  69                 	db	105	;'i'
  8547  00F7A6  6D                 	db	109	;'m'
  8548  00F7A7  75                 	db	117	;'u'
  8549  00F7A8  6D                 	db	109	;'m'
  8550  00F7A9  20                 	db	32
  8551  00F7AA  72                 	db	114	;'r'
  8552  00F7AB  65                 	db	101	;'e'
  8553  00F7AC  63                 	db	99	;'c'
  8554  00F7AD  6F                 	db	111	;'o'
  8555  00F7AE  72                 	db	114	;'r'
  8556  00F7AF  64                 	db	100	;'d'
  8557  00F7B0  65                 	db	101	;'e'
  8558  00F7B1  64                 	db	100	;'d'
  8559  00F7B2  20                 	db	32
  8560  00F7B3  2B                 	db	43
  8561  00F7B4  31                 	db	49	;'1'
  8562  00F7B5  32                 	db	50	;'2'
  8563  00F7B6  56                 	db	86	;'V'
  8564  00F7B7  20                 	db	32
  8565  00F7B8  72                 	db	114	;'r'
  8566  00F7B9  61                 	db	97	;'a'
  8567  00F7BA  69                 	db	105	;'i'
  8568  00F7BB  6C                 	db	108	;'l'
  8569  00F7BC  20                 	db	32
  8570  00F7BD  76                 	db	118	;'v'
  8571  00F7BE  6F                 	db	111	;'o'
  8572  00F7BF  6C                 	db	108	;'l'
  8573  00F7C0  74                 	db	116	;'t'
  8574  00F7C1  61                 	db	97	;'a'
  8575  00F7C2  67                 	db	103	;'g'
  8576  00F7C3  65                 	db	101	;'e'
  8577  00F7C4  20                 	db	32
  8578  00F7C5  69                 	db	105	;'i'
  8579  00F7C6  73                 	db	115	;'s'
  8580  00F7C7  20                 	db	32
  8581  00F7C8  25                 	db	37
  8582  00F7C9  2E                 	db	46
  8583  00F7CA  33                 	db	51	;'3'
  8584  00F7CB  66                 	db	102	;'f'
  8585  00F7CC  20                 	db	32
  8586  00F7CD  56                 	db	86	;'V'
  8587  00F7CE  6F                 	db	111	;'o'
  8588  00F7CF  6C                 	db	108	;'l'
  8589  00F7D0  74                 	db	116	;'t'
  8590  00F7D1  73                 	db	115	;'s'
  8591  00F7D2  0A                 	db	10
  8592  00F7D3  0D                 	db	13
  8593  00F7D4  00                 	db	0
  8594  00F7D5                     STR_69:
  8595  00F7D5  54                 	db	84	;'T'
  8596  00F7D6  68                 	db	104	;'h'
  8597  00F7D7  65                 	db	101	;'e'
  8598  00F7D8  20                 	db	32
  8599  00F7D9  66                 	db	102	;'f'
  8600  00F7DA  6F                 	db	111	;'o'
  8601  00F7DB  6C                 	db	108	;'l'
  8602  00F7DC  6C                 	db	108	;'l'
  8603  00F7DD  6F                 	db	111	;'o'
  8604  00F7DE  77                 	db	119	;'w'
  8605  00F7DF  69                 	db	105	;'i'
  8606  00F7E0  6E                 	db	110	;'n'
  8607  00F7E1  67                 	db	103	;'g'
  8608  00F7E2  20                 	db	32
  8609  00F7E3  63                 	db	99	;'c'
  8610  00F7E4  68                 	db	104	;'h'
  8611  00F7E5  61                 	db	97	;'a'
  8612  00F7E6  6E                 	db	110	;'n'
  8613  00F7E7  6E                 	db	110	;'n'
  8614  00F7E8  65                 	db	101	;'e'
  8615  00F7E9  6C                 	db	108	;'l'
  8616  00F7EA  20                 	db	32
  8617  00F7EB  63                 	db	99	;'c'
  8618  00F7EC  61                 	db	97	;'a'
  8619  00F7ED  75                 	db	117	;'u'
  8620  00F7EE  73                 	db	115	;'s'
  8621  00F7EF  65                 	db	101	;'e'
  8622  00F7F0  64                 	db	100	;'d'
  8623  00F7F1  20                 	db	32
  8624  00F7F2  61                 	db	97	;'a'
  8625  00F7F3  6E                 	db	110	;'n'
  8626  00F7F4  20                 	db	32
  8627  00F7F5  41                 	db	65	;'A'
  8628  00F7F6  44                 	db	68	;'D'
  8629  00F7F7  43                 	db	67	;'C'
  8630  00F7F8  20                 	db	32
  8631  00F7F9  65                 	db	101	;'e'
  8632  00F7FA  72                 	db	114	;'r'
  8633  00F7FB  72                 	db	114	;'r'
  8634  00F7FC  6F                 	db	111	;'o'
  8635  00F7FD  72                 	db	114	;'r'
  8636  00F7FE  3A                 	db	58	;':'
  8637  00F7FF  20                 	db	32
  8638  00F800  25                 	db	37
  8639  00F801  73                 	db	115	;'s'
  8640  00F802  0A                 	db	10
  8641  00F803  0D                 	db	13
  8642  00F804  00                 	db	0
  8643  00F805                     STR_52:
  8644  00F805  4D                 	db	77	;'M'
  8645  00F806  61                 	db	97	;'a'
  8646  00F807  72                 	db	114	;'r'
  8647  00F808  71                 	db	113	;'q'
  8648  00F809  75                 	db	117	;'u'
  8649  00F80A  65                 	db	101	;'e'
  8650  00F80B  74                 	db	116	;'t'
  8651  00F80C  74                 	db	116	;'t'
  8652  00F80D  65                 	db	101	;'e'
  8653  00F80E  20                 	db	32
  8654  00F80F  55                 	db	85	;'U'
  8655  00F810  6E                 	db	110	;'n'
  8656  00F811  69                 	db	105	;'i'
  8657  00F812  76                 	db	118	;'v'
  8658  00F813  65                 	db	101	;'e'
  8659  00F814  72                 	db	114	;'r'
  8660  00F815  73                 	db	115	;'s'
  8661  00F816  69                 	db	105	;'i'
  8662  00F817  74                 	db	116	;'t'
  8663  00F818  79                 	db	121	;'y'
  8664  00F819  20                 	db	32
  8665  00F81A  45                 	db	69	;'E'
  8666  00F81B  4C                 	db	76	;'L'
  8667  00F81C  45                 	db	69	;'E'
  8668  00F81D  4E                 	db	78	;'N'
  8669  00F81E  20                 	db	32
  8670  00F81F  33                 	db	51	;'3'
  8671  00F820  30                 	db	48	;'0'
  8672  00F821  33                 	db	51	;'3'
  8673  00F822  35                 	db	53	;'5'
  8674  00F823  20                 	db	32
  8675  00F824  46                 	db	70	;'F'
  8676  00F825  69                 	db	105	;'i'
  8677  00F826  6E                 	db	110	;'n'
  8678  00F827  61                 	db	97	;'a'
  8679  00F828  6C                 	db	108	;'l'
  8680  00F829  20                 	db	32
  8681  00F82A  50                 	db	80	;'P'
  8682  00F82B  72                 	db	114	;'r'
  8683  00F82C  6F                 	db	111	;'o'
  8684  00F82D  6A                 	db	106	;'j'
  8685  00F82E  65                 	db	101	;'e'
  8686  00F82F  63                 	db	99	;'c'
  8687  00F830  74                 	db	116	;'t'
  8688  00F831  0A                 	db	10
  8689  00F832  0D                 	db	13
  8690  00F833  00                 	db	0
  8691  00F834                     STR_151:
  8692  00F834  45                 	db	69	;'E'
  8693  00F835  72                 	db	114	;'r'
  8694  00F836  72                 	db	114	;'r'
  8695  00F837  6F                 	db	111	;'o'
  8696  00F838  72                 	db	114	;'r'
  8697  00F839  73                 	db	115	;'s'
  8698  00F83A  20                 	db	32
  8699  00F83B  61                 	db	97	;'a'
  8700  00F83C  6E                 	db	110	;'n'
  8701  00F83D  64                 	db	100	;'d'
  8702  00F83E  20                 	db	32
  8703  00F83F  6E                 	db	110	;'n'
  8704  00F840  65                 	db	101	;'e'
  8705  00F841  67                 	db	103	;'g'
  8706  00F842  61                 	db	97	;'a'
  8707  00F843  74                 	db	116	;'t'
  8708  00F844  69                 	db	105	;'i'
  8709  00F845  76                 	db	118	;'v'
  8710  00F846  65                 	db	101	;'e'
  8711  00F847  20                 	db	32
  8712  00F848  72                 	db	114	;'r'
  8713  00F849  65                 	db	101	;'e'
  8714  00F84A  73                 	db	115	;'s'
  8715  00F84B  70                 	db	112	;'p'
  8716  00F84C  6F                 	db	111	;'o'
  8717  00F84D  6E                 	db	110	;'n'
  8718  00F84E  73                 	db	115	;'s'
  8719  00F84F  65                 	db	101	;'e'
  8720  00F850  73                 	db	115	;'s'
  8721  00F851  20                 	db	32
  8722  00F852  61                 	db	97	;'a'
  8723  00F853  70                 	db	112	;'p'
  8724  00F854  70                 	db	112	;'p'
  8725  00F855  65                 	db	101	;'e'
  8726  00F856  61                 	db	97	;'a'
  8727  00F857  72                 	db	114	;'r'
  8728  00F858  20                 	db	32
  8729  00F859  69                 	db	105	;'i'
  8730  00F85A  6E                 	db	110	;'n'
  8731  00F85B  20                 	db	32
  8732  00F85C  72                 	db	114	;'r'
  8733  00F85D  65                 	db	101	;'e'
  8734  00F85E  64                 	db	100	;'d'
  8735  00F85F  0A                 	db	10
  8736  00F860  0D                 	db	13
  8737  00F861  00                 	db	0
  8738  00F862                     STR_114:
  8739  00F862  45                 	db	69	;'E'
  8740  00F863  6E                 	db	110	;'n'
  8741  00F864  74                 	db	116	;'t'
  8742  00F865  65                 	db	101	;'e'
  8743  00F866  72                 	db	114	;'r'
  8744  00F867  20                 	db	32
  8745  00F868  27                 	db	39
  8746  00F869  48                 	db	72	;'H'
  8747  00F86A  65                 	db	101	;'e'
  8748  00F86B  6C                 	db	108	;'l'
  8749  00F86C  70                 	db	112	;'p'
  8750  00F86D  27                 	db	39
  8751  00F86E  20                 	db	32
  8752  00F86F  66                 	db	102	;'f'
  8753  00F870  6F                 	db	111	;'o'
  8754  00F871  72                 	db	114	;'r'
  8755  00F872  20                 	db	32
  8756  00F873  6C                 	db	108	;'l'
  8757  00F874  69                 	db	105	;'i'
  8758  00F875  73                 	db	115	;'s'
  8759  00F876  74                 	db	116	;'t'
  8760  00F877  20                 	db	32
  8761  00F878  6F                 	db	111	;'o'
  8762  00F879  66                 	db	102	;'f'
  8763  00F87A  20                 	db	32
  8764  00F87B  61                 	db	97	;'a'
  8765  00F87C  76                 	db	118	;'v'
  8766  00F87D  61                 	db	97	;'a'
  8767  00F87E  69                 	db	105	;'i'
  8768  00F87F  6C                 	db	108	;'l'
  8769  00F880  61                 	db	97	;'a'
  8770  00F881  62                 	db	98	;'b'
  8771  00F882  6C                 	db	108	;'l'
  8772  00F883  65                 	db	101	;'e'
  8773  00F884  20                 	db	32
  8774  00F885  63                 	db	99	;'c'
  8775  00F886  6F                 	db	111	;'o'
  8776  00F887  6D                 	db	109	;'m'
  8777  00F888  6D                 	db	109	;'m'
  8778  00F889  61                 	db	97	;'a'
  8779  00F88A  6E                 	db	110	;'n'
  8780  00F88B  64                 	db	100	;'d'
  8781  00F88C  73                 	db	115	;'s'
  8782  00F88D  0A                 	db	10
  8783  00F88E  0D                 	db	13
  8784  00F88F  00                 	db	0
  8785  00F890                     STR_125:
  8786  00F890  4D                 	db	77	;'M'
  8787  00F891  61                 	db	97	;'a'
  8788  00F892  78                 	db	120	;'x'
  8789  00F893  69                 	db	105	;'i'
  8790  00F894  6D                 	db	109	;'m'
  8791  00F895  75                 	db	117	;'u'
  8792  00F896  6D                 	db	109	;'m'
  8793  00F897  20                 	db	32
  8794  00F898  72                 	db	114	;'r'
  8795  00F899  65                 	db	101	;'e'
  8796  00F89A  63                 	db	99	;'c'
  8797  00F89B  6F                 	db	111	;'o'
  8798  00F89C  72                 	db	114	;'r'
  8799  00F89D  64                 	db	100	;'d'
  8800  00F89E  65                 	db	101	;'e'
  8801  00F89F  64                 	db	100	;'d'
  8802  00F8A0  20                 	db	32
  8803  00F8A1  6F                 	db	111	;'o'
  8804  00F8A2  75                 	db	117	;'u'
  8805  00F8A3  74                 	db	116	;'t'
  8806  00F8A4  70                 	db	112	;'p'
  8807  00F8A5  75                 	db	117	;'u'
  8808  00F8A6  74                 	db	116	;'t'
  8809  00F8A7  20                 	db	32
  8810  00F8A8  70                 	db	112	;'p'
  8811  00F8A9  6F                 	db	111	;'o'
  8812  00F8AA  77                 	db	119	;'w'
  8813  00F8AB  65                 	db	101	;'e'
  8814  00F8AC  72                 	db	114	;'r'
  8815  00F8AD  20                 	db	32
  8816  00F8AE  69                 	db	105	;'i'
  8817  00F8AF  73                 	db	115	;'s'
  8818  00F8B0  20                 	db	32
  8819  00F8B1  25                 	db	37
  8820  00F8B2  2E                 	db	46
  8821  00F8B3  33                 	db	51	;'3'
  8822  00F8B4  66                 	db	102	;'f'
  8823  00F8B5  20                 	db	32
  8824  00F8B6  57                 	db	87	;'W'
  8825  00F8B7  61                 	db	97	;'a'
  8826  00F8B8  74                 	db	116	;'t'
  8827  00F8B9  74                 	db	116	;'t'
  8828  00F8BA  73                 	db	115	;'s'
  8829  00F8BB  0A                 	db	10
  8830  00F8BC  0D                 	db	13
  8831  00F8BD  00                 	db	0
  8832  00F8BE                     STR_131:
  8833  00F8BE  4D                 	db	77	;'M'
  8834  00F8BF  61                 	db	97	;'a'
  8835  00F8C0  78                 	db	120	;'x'
  8836  00F8C1  69                 	db	105	;'i'
  8837  00F8C2  6D                 	db	109	;'m'
  8838  00F8C3  75                 	db	117	;'u'
  8839  00F8C4  6D                 	db	109	;'m'
  8840  00F8C5  20                 	db	32
  8841  00F8C6  72                 	db	114	;'r'
  8842  00F8C7  65                 	db	101	;'e'
  8843  00F8C8  63                 	db	99	;'c'
  8844  00F8C9  6F                 	db	111	;'o'
  8845  00F8CA  72                 	db	114	;'r'
  8846  00F8CB  64                 	db	100	;'d'
  8847  00F8CC  65                 	db	101	;'e'
  8848  00F8CD  64                 	db	100	;'d'
  8849  00F8CE  20                 	db	32
  8850  00F8CF  64                 	db	100	;'d'
  8851  00F8D0  69                 	db	105	;'i'
  8852  00F8D1  65                 	db	101	;'e'
  8853  00F8D2  20                 	db	32
  8854  00F8D3  74                 	db	116	;'t'
  8855  00F8D4  65                 	db	101	;'e'
  8856  00F8D5  6D                 	db	109	;'m'
  8857  00F8D6  70                 	db	112	;'p'
  8858  00F8D7  65                 	db	101	;'e'
  8859  00F8D8  72                 	db	114	;'r'
  8860  00F8D9  61                 	db	97	;'a'
  8861  00F8DA  74                 	db	116	;'t'
  8862  00F8DB  75                 	db	117	;'u'
  8863  00F8DC  72                 	db	114	;'r'
  8864  00F8DD  65                 	db	101	;'e'
  8865  00F8DE  20                 	db	32
  8866  00F8DF  69                 	db	105	;'i'
  8867  00F8E0  73                 	db	115	;'s'
  8868  00F8E1  20                 	db	32
  8869  00F8E2  25                 	db	37
  8870  00F8E3  2E                 	db	46
  8871  00F8E4  33                 	db	51	;'3'
  8872  00F8E5  66                 	db	102	;'f'
  8873  00F8E6  20                 	db	32
  8874  00F8E7  43                 	db	67	;'C'
  8875  00F8E8  0A                 	db	10
  8876  00F8E9  0D                 	db	13
  8877  00F8EA  00                 	db	0
  8878  00F8EB                     STR_75:
  8879  00F8EB  56                 	db	86	;'V'
  8880  00F8EC  43                 	db	67	;'C'
  8881  00F8ED  43                 	db	67	;'C'
  8882  00F8EE  20                 	db	32
  8883  00F8EF  4F                 	db	79	;'O'
  8884  00F8F0  76                 	db	118	;'v'
  8885  00F8F1  65                 	db	101	;'e'
  8886  00F8F2  72                 	db	114	;'r'
  8887  00F8F3  76                 	db	118	;'v'
  8888  00F8F4  6F                 	db	111	;'o'
  8889  00F8F5  6C                 	db	108	;'l'
  8890  00F8F6  74                 	db	116	;'t'
  8891  00F8F7  61                 	db	97	;'a'
  8892  00F8F8  67                 	db	103	;'g'
  8893  00F8F9  65                 	db	101	;'e'
  8894  00F8FA  20                 	db	32
  8895  00F8FB  63                 	db	99	;'c'
  8896  00F8FC  6F                 	db	111	;'o'
  8897  00F8FD  6E                 	db	110	;'n'
  8898  00F8FE  64                 	db	100	;'d'
  8899  00F8FF  69                 	db	105	;'i'
  8900  00F900  74                 	db	116	;'t'
  8901  00F901  69                 	db	105	;'i'
  8902  00F902  6F                 	db	111	;'o'
  8903  00F903  6E                 	db	110	;'n'
  8904  00F904  20                 	db	32
  8905  00F905  68                 	db	104	;'h'
  8906  00F906  61                 	db	97	;'a'
  8907  00F907  73                 	db	115	;'s'
  8908  00F908  20                 	db	32
  8909  00F909  6E                 	db	110	;'n'
  8910  00F90A  6F                 	db	111	;'o'
  8911  00F90B  74                 	db	116	;'t'
  8912  00F90C  20                 	db	32
  8913  00F90D  6F                 	db	111	;'o'
  8914  00F90E  63                 	db	99	;'c'
  8915  00F90F  63                 	db	99	;'c'
  8916  00F910  75                 	db	117	;'u'
  8917  00F911  72                 	db	114	;'r'
  8918  00F912  72                 	db	114	;'r'
  8919  00F913  65                 	db	101	;'e'
  8920  00F914  64                 	db	100	;'d'
  8921  00F915  0A                 	db	10
  8922  00F916  0D                 	db	13
  8923  00F917  00                 	db	0
  8924  00F918                     STR_101:
  8925  00F918  4C                 	db	76	;'L'
  8926  00F919  6F                 	db	111	;'o'
  8927  00F91A  61                 	db	97	;'a'
  8928  00F91B  64                 	db	100	;'d'
  8929  00F91C  20                 	db	32
  8930  00F91D  68                 	db	104	;'h'
  8931  00F91E  61                 	db	97	;'a'
  8932  00F91F  73                 	db	115	;'s'
  8933  00F920  20                 	db	32
  8934  00F921  62                 	db	98	;'b'
  8935  00F922  65                 	db	101	;'e'
  8936  00F923  65                 	db	101	;'e'
  8937  00F924  6E                 	db	110	;'n'
  8938  00F925  20                 	db	32
  8939  00F926  65                 	db	101	;'e'
  8940  00F927  6E                 	db	110	;'n'
  8941  00F928  61                 	db	97	;'a'
  8942  00F929  62                 	db	98	;'b'
  8943  00F92A  6C                 	db	108	;'l'
  8944  00F92B  65                 	db	101	;'e'
  8945  00F92C  64                 	db	100	;'d'
  8946  00F92D  2C                 	db	44
  8947  00F92E  20                 	db	32
  8948  00F92F  64                 	db	100	;'d'
  8949  00F930  69                 	db	105	;'i'
  8950  00F931  6D                 	db	109	;'m'
  8951  00F932  6D                 	db	109	;'m'
  8952  00F933  69                 	db	105	;'i'
  8953  00F934  6E                 	db	110	;'n'
  8954  00F935  67                 	db	103	;'g'
  8955  00F936  20                 	db	32
  8956  00F937  64                 	db	100	;'d'
  8957  00F938  69                 	db	105	;'i'
  8958  00F939  73                 	db	115	;'s'
  8959  00F93A  61                 	db	97	;'a'
  8960  00F93B  62                 	db	98	;'b'
  8961  00F93C  6C                 	db	108	;'l'
  8962  00F93D  65                 	db	101	;'e'
  8963  00F93E  64                 	db	100	;'d'
  8964  00F93F  0A                 	db	10
  8965  00F940  0D                 	db	13
  8966  00F941  00                 	db	0
  8967  00F942                     STR_108:
  8968  00F942  4C                 	db	76	;'L'
  8969  00F943  6F                 	db	111	;'o'
  8970  00F944  61                 	db	97	;'a'
  8971  00F945  64                 	db	100	;'d'
  8972  00F946  20                 	db	32
  8973  00F947  61                 	db	97	;'a'
  8974  00F948  6E                 	db	110	;'n'
  8975  00F949  64                 	db	100	;'d'
  8976  00F94A  20                 	db	32
  8977  00F94B  64                 	db	100	;'d'
  8978  00F94C  69                 	db	105	;'i'
  8979  00F94D  6D                 	db	109	;'m'
  8980  00F94E  6D                 	db	109	;'m'
  8981  00F94F  69                 	db	105	;'i'
  8982  00F950  6E                 	db	110	;'n'
  8983  00F951  67                 	db	103	;'g'
  8984  00F952  20                 	db	32
  8985  00F953  61                 	db	97	;'a'
  8986  00F954  72                 	db	114	;'r'
  8987  00F955  65                 	db	101	;'e'
  8988  00F956  20                 	db	32
  8989  00F957  63                 	db	99	;'c'
  8990  00F958  75                 	db	117	;'u'
  8991  00F959  72                 	db	114	;'r'
  8992  00F95A  72                 	db	114	;'r'
  8993  00F95B  65                 	db	101	;'e'
  8994  00F95C  6E                 	db	110	;'n'
  8995  00F95D  74                 	db	116	;'t'
  8996  00F95E  6C                 	db	108	;'l'
  8997  00F95F  79                 	db	121	;'y'
  8998  00F960  20                 	db	32
  8999  00F961  64                 	db	100	;'d'
  9000  00F962  69                 	db	105	;'i'
  9001  00F963  73                 	db	115	;'s'
  9002  00F964  61                 	db	97	;'a'
  9003  00F965  62                 	db	98	;'b'
  9004  00F966  6C                 	db	108	;'l'
  9005  00F967  65                 	db	101	;'e'
  9006  00F968  64                 	db	100	;'d'
  9007  00F969  0A                 	db	10
  9008  00F96A  0D                 	db	13
  9009  00F96B  00                 	db	0
  9010  00F96C                     STR_161:
  9011  00F96C  57                 	db	87	;'W'
  9012  00F96D  69                 	db	105	;'i'
  9013  00F96E  6E                 	db	110	;'n'
  9014  00F96F  64                 	db	100	;'d'
  9015  00F970  6F                 	db	111	;'o'
  9016  00F971  77                 	db	119	;'w'
  9017  00F972  65                 	db	101	;'e'
  9018  00F973  64                 	db	100	;'d'
  9019  00F974  20                 	db	32
  9020  00F975  57                 	db	87	;'W'
  9021  00F976  61                 	db	97	;'a'
  9022  00F977  74                 	db	116	;'t'
  9023  00F978  63                 	db	99	;'c'
  9024  00F979  68                 	db	104	;'h'
  9025  00F97A  20                 	db	32
  9026  00F97B  44                 	db	68	;'D'
  9027  00F97C  6F                 	db	111	;'o'
  9028  00F97D  67                 	db	103	;'g'
  9029  00F97E  20                 	db	32
  9030  00F97F  54                 	db	84	;'T'
  9031  00F980  69                 	db	105	;'i'
  9032  00F981  6D                 	db	109	;'m'
  9033  00F982  65                 	db	101	;'e'
  9034  00F983  72                 	db	114	;'r'
  9035  00F984  20                 	db	32
  9036  00F985  56                 	db	86	;'V'
  9037  00F986  69                 	db	105	;'i'
  9038  00F987  6F                 	db	111	;'o'
  9039  00F988  6C                 	db	108	;'l'
  9040  00F989  61                 	db	97	;'a'
  9041  00F98A  74                 	db	116	;'t'
  9042  00F98B  69                 	db	105	;'i'
  9043  00F98C  6F                 	db	111	;'o'
  9044  00F98D  6E                 	db	110	;'n'
  9045  00F98E  20                 	db	32
  9046  00F98F  52                 	db	82	;'R'
  9047  00F990  65                 	db	101	;'e'
  9048  00F991  73                 	db	115	;'s'
  9049  00F992  65                 	db	101	;'e'
  9050  00F993  74                 	db	116	;'t'
  9051  00F994  00                 	db	0
  9052  00F995                     STR_99:
  9053  00F995  54                 	db	84	;'T'
  9054  00F996  52                 	db	82	;'R'
  9055  00F997  49                 	db	73	;'I'
  9056  00F998  41                 	db	65	;'A'
  9057  00F999  43                 	db	67	;'C'
  9058  00F99A  20                 	db	32
  9059  00F99B  6F                 	db	111	;'o'
  9060  00F99C  75                 	db	117	;'u'
  9061  00F99D  74                 	db	116	;'t'
  9062  00F99E  70                 	db	112	;'p'
  9063  00F99F  75                 	db	117	;'u'
  9064  00F9A0  74                 	db	116	;'t'
  9065  00F9A1  20                 	db	32
  9066  00F9A2  64                 	db	100	;'d'
  9067  00F9A3  69                 	db	105	;'i'
  9068  00F9A4  6D                 	db	109	;'m'
  9069  00F9A5  6D                 	db	109	;'m'
  9070  00F9A6  69                 	db	105	;'i'
  9071  00F9A7  6E                 	db	110	;'n'
  9072  00F9A8  67                 	db	103	;'g'
  9073  00F9A9  20                 	db	32
  9074  00F9AA  68                 	db	104	;'h'
  9075  00F9AB  61                 	db	97	;'a'
  9076  00F9AC  73                 	db	115	;'s'
  9077  00F9AD  20                 	db	32
  9078  00F9AE  62                 	db	98	;'b'
  9079  00F9AF  65                 	db	101	;'e'
  9080  00F9B0  65                 	db	101	;'e'
  9081  00F9B1  6E                 	db	110	;'n'
  9082  00F9B2  20                 	db	32
  9083  00F9B3  64                 	db	100	;'d'
  9084  00F9B4  69                 	db	105	;'i'
  9085  00F9B5  73                 	db	115	;'s'
  9086  00F9B6  61                 	db	97	;'a'
  9087  00F9B7  62                 	db	98	;'b'
  9088  00F9B8  6C                 	db	108	;'l'
  9089  00F9B9  65                 	db	101	;'e'
  9090  00F9BA  64                 	db	100	;'d'
  9091  00F9BB  0A                 	db	10
  9092  00F9BC  0D                 	db	13
  9093  00F9BD  00                 	db	0
  9094  00F9BE                     STR_97:
  9095  00F9BE  54                 	db	84	;'T'
  9096  00F9BF  52                 	db	82	;'R'
  9097  00F9C0  49                 	db	73	;'I'
  9098  00F9C1  41                 	db	65	;'A'
  9099  00F9C2  43                 	db	67	;'C'
  9100  00F9C3  20                 	db	32
  9101  00F9C4  6F                 	db	111	;'o'
  9102  00F9C5  75                 	db	117	;'u'
  9103  00F9C6  74                 	db	116	;'t'
  9104  00F9C7  70                 	db	112	;'p'
  9105  00F9C8  75                 	db	117	;'u'
  9106  00F9C9  74                 	db	116	;'t'
  9107  00F9CA  20                 	db	32
  9108  00F9CB  64                 	db	100	;'d'
  9109  00F9CC  69                 	db	105	;'i'
  9110  00F9CD  6D                 	db	109	;'m'
  9111  00F9CE  6D                 	db	109	;'m'
  9112  00F9CF  69                 	db	105	;'i'
  9113  00F9D0  6E                 	db	110	;'n'
  9114  00F9D1  67                 	db	103	;'g'
  9115  00F9D2  20                 	db	32
  9116  00F9D3  68                 	db	104	;'h'
  9117  00F9D4  61                 	db	97	;'a'
  9118  00F9D5  73                 	db	115	;'s'
  9119  00F9D6  20                 	db	32
  9120  00F9D7  62                 	db	98	;'b'
  9121  00F9D8  65                 	db	101	;'e'
  9122  00F9D9  65                 	db	101	;'e'
  9123  00F9DA  6E                 	db	110	;'n'
  9124  00F9DB  20                 	db	32
  9125  00F9DC  65                 	db	101	;'e'
  9126  00F9DD  6E                 	db	110	;'n'
  9127  00F9DE  61                 	db	97	;'a'
  9128  00F9DF  62                 	db	98	;'b'
  9129  00F9E0  6C                 	db	108	;'l'
  9130  00F9E1  65                 	db	101	;'e'
  9131  00F9E2  64                 	db	100	;'d'
  9132  00F9E3  0A                 	db	10
  9133  00F9E4  0D                 	db	13
  9134  00F9E5  00                 	db	0
  9135  00F9E6                     STR_150:
  9136  00F9E6  4D                 	db	77	;'M'
  9137  00F9E7  65                 	db	101	;'e'
  9138  00F9E8  61                 	db	97	;'a'
  9139  00F9E9  73                 	db	115	;'s'
  9140  00F9EA  75                 	db	117	;'u'
  9141  00F9EB  72                 	db	114	;'r'
  9142  00F9EC  65                 	db	101	;'e'
  9143  00F9ED  6D                 	db	109	;'m'
  9144  00F9EE  65                 	db	101	;'e'
  9145  00F9EF  6E                 	db	110	;'n'
  9146  00F9F0  74                 	db	116	;'t'
  9147  00F9F1  20                 	db	32
  9148  00F9F2  72                 	db	114	;'r'
  9149  00F9F3  65                 	db	101	;'e'
  9150  00F9F4  73                 	db	115	;'s'
  9151  00F9F5  70                 	db	112	;'p'
  9152  00F9F6  6F                 	db	111	;'o'
  9153  00F9F7  6E                 	db	110	;'n'
  9154  00F9F8  73                 	db	115	;'s'
  9155  00F9F9  65                 	db	101	;'e'
  9156  00F9FA  73                 	db	115	;'s'
  9157  00F9FB  20                 	db	32
  9158  00F9FC  61                 	db	97	;'a'
  9159  00F9FD  70                 	db	112	;'p'
  9160  00F9FE  70                 	db	112	;'p'
  9161  00F9FF  65                 	db	101	;'e'
  9162  00FA00  61                 	db	97	;'a'
  9163  00FA01  72                 	db	114	;'r'
  9164  00FA02  20                 	db	32
  9165  00FA03  69                 	db	105	;'i'
  9166  00FA04  6E                 	db	110	;'n'
  9167  00FA05  20                 	db	32
  9168  00FA06  63                 	db	99	;'c'
  9169  00FA07  79                 	db	121	;'y'
  9170  00FA08  61                 	db	97	;'a'
  9171  00FA09  6E                 	db	110	;'n'
  9172  00FA0A  0A                 	db	10
  9173  00FA0B  0D                 	db	13
  9174  00FA0C  00                 	db	0
  9175  00FA0D                     STR_85:
  9176  00FA0D  41                 	db	65	;'A'
  9177  00FA0E  56                 	db	86	;'V'
  9178  00FA0F  53                 	db	83	;'S'
  9179  00FA10  53                 	db	83	;'S'
  9180  00FA11  20                 	db	32
  9181  00FA12  6D                 	db	109	;'m'
  9182  00FA13  65                 	db	101	;'e'
  9183  00FA14  61                 	db	97	;'a'
  9184  00FA15  73                 	db	115	;'s'
  9185  00FA16  75                 	db	117	;'u'
  9186  00FA17  72                 	db	114	;'r'
  9187  00FA18  65                 	db	101	;'e'
  9188  00FA19  64                 	db	100	;'d'
  9189  00FA1A  20                 	db	32
  9190  00FA1B  61                 	db	97	;'a'
  9191  00FA1C  73                 	db	115	;'s'
  9192  00FA1D  20                 	db	32
  9193  00FA1E  25                 	db	37
  9194  00FA1F  2E                 	db	46
  9195  00FA20  33                 	db	51	;'3'
  9196  00FA21  66                 	db	102	;'f'
  9197  00FA22  20                 	db	32
  9198  00FA23  56                 	db	86	;'V'
  9199  00FA24  6F                 	db	111	;'o'
  9200  00FA25  6C                 	db	108	;'l'
  9201  00FA26  74                 	db	116	;'t'
  9202  00FA27  73                 	db	115	;'s'
  9203  00FA28  20                 	db	32
  9204  00FA29  62                 	db	98	;'b'
  9205  00FA2A  79                 	db	121	;'y'
  9206  00FA2B  20                 	db	32
  9207  00FA2C  41                 	db	65	;'A'
  9208  00FA2D  44                 	db	68	;'D'
  9209  00FA2E  43                 	db	67	;'C'
  9210  00FA2F  0A                 	db	10
  9211  00FA30  0D                 	db	13
  9212  00FA31  00                 	db	0
  9213  00FA32                     STR_77:
  9214  00FA32  2B                 	db	43
  9215  00FA33  33                 	db	51	;'3'
  9216  00FA34  2E                 	db	46
  9217  00FA35  33                 	db	51	;'3'
  9218  00FA36  56                 	db	86	;'V'
  9219  00FA37  20                 	db	32
  9220  00FA38  72                 	db	114	;'r'
  9221  00FA39  61                 	db	97	;'a'
  9222  00FA3A  69                 	db	105	;'i'
  9223  00FA3B  6C                 	db	108	;'l'
  9224  00FA3C  20                 	db	32
  9225  00FA3D  6D                 	db	109	;'m'
  9226  00FA3E  65                 	db	101	;'e'
  9227  00FA3F  61                 	db	97	;'a'
  9228  00FA40  73                 	db	115	;'s'
  9229  00FA41  75                 	db	117	;'u'
  9230  00FA42  72                 	db	114	;'r'
  9231  00FA43  65                 	db	101	;'e'
  9232  00FA44  64                 	db	100	;'d'
  9233  00FA45  20                 	db	32
  9234  00FA46  61                 	db	97	;'a'
  9235  00FA47  73                 	db	115	;'s'
  9236  00FA48  20                 	db	32
  9237  00FA49  2B                 	db	43
  9238  00FA4A  25                 	db	37
  9239  00FA4B  2E                 	db	46
  9240  00FA4C  33                 	db	51	;'3'
  9241  00FA4D  66                 	db	102	;'f'
  9242  00FA4E  20                 	db	32
  9243  00FA4F  56                 	db	86	;'V'
  9244  00FA50  6F                 	db	111	;'o'
  9245  00FA51  6C                 	db	108	;'l'
  9246  00FA52  74                 	db	116	;'t'
  9247  00FA53  73                 	db	115	;'s'
  9248  00FA54  0A                 	db	10
  9249  00FA55  0D                 	db	13
  9250  00FA56  00                 	db	0
  9251  00FA57                     STR_115:
  9252  00FA57  44                 	db	68	;'D'
  9253  00FA58  69                 	db	105	;'i'
  9254  00FA59  6D                 	db	109	;'m'
  9255  00FA5A  6D                 	db	109	;'m'
  9256  00FA5B  69                 	db	105	;'i'
  9257  00FA5C  6E                 	db	110	;'n'
  9258  00FA5D  67                 	db	103	;'g'
  9259  00FA5E  20                 	db	32
  9260  00FA5F  68                 	db	104	;'h'
  9261  00FA60  61                 	db	97	;'a'
  9262  00FA61  73                 	db	115	;'s'
  9263  00FA62  20                 	db	32
  9264  00FA63  62                 	db	98	;'b'
  9265  00FA64  65                 	db	101	;'e'
  9266  00FA65  65                 	db	101	;'e'
  9267  00FA66  6E                 	db	110	;'n'
  9268  00FA67  20                 	db	32
  9269  00FA68  73                 	db	115	;'s'
  9270  00FA69  65                 	db	101	;'e'
  9271  00FA6A  74                 	db	116	;'t'
  9272  00FA6B  20                 	db	32
  9273  00FA6C  74                 	db	116	;'t'
  9274  00FA6D  6F                 	db	111	;'o'
  9275  00FA6E  20                 	db	32
  9276  00FA6F  25                 	db	37
  9277  00FA70  64                 	db	100	;'d'
  9278  00FA71  20                 	db	32
  9279  00FA72  70                 	db	112	;'p'
  9280  00FA73  65                 	db	101	;'e'
  9281  00FA74  72                 	db	114	;'r'
  9282  00FA75  63                 	db	99	;'c'
  9283  00FA76  65                 	db	101	;'e'
  9284  00FA77  6E                 	db	110	;'n'
  9285  00FA78  74                 	db	116	;'t'
  9286  00FA79  0A                 	db	10
  9287  00FA7A  0D                 	db	13
  9288  00FA7B  00                 	db	0
  9289  00FA7C                     STR_81:
  9290  00FA7C  44                 	db	68	;'D'
  9291  00FA7D  69                 	db	105	;'i'
  9292  00FA7E  65                 	db	101	;'e'
  9293  00FA7F  20                 	db	32
  9294  00FA80  54                 	db	84	;'T'
  9295  00FA81  65                 	db	101	;'e'
  9296  00FA82  6D                 	db	109	;'m'
  9297  00FA83  70                 	db	112	;'p'
  9298  00FA84  65                 	db	101	;'e'
  9299  00FA85  72                 	db	114	;'r'
  9300  00FA86  61                 	db	97	;'a'
  9301  00FA87  74                 	db	116	;'t'
  9302  00FA88  75                 	db	117	;'u'
  9303  00FA89  72                 	db	114	;'r'
  9304  00FA8A  65                 	db	101	;'e'
  9305  00FA8B  20                 	db	32
  9306  00FA8C  6D                 	db	109	;'m'
  9307  00FA8D  65                 	db	101	;'e'
  9308  00FA8E  61                 	db	97	;'a'
  9309  00FA8F  73                 	db	115	;'s'
  9310  00FA90  75                 	db	117	;'u'
  9311  00FA91  72                 	db	114	;'r'
  9312  00FA92  65                 	db	101	;'e'
  9313  00FA93  64                 	db	100	;'d'
  9314  00FA94  20                 	db	32
  9315  00FA95  61                 	db	97	;'a'
  9316  00FA96  73                 	db	115	;'s'
  9317  00FA97  20                 	db	32
  9318  00FA98  25                 	db	37
  9319  00FA99  2E                 	db	46
  9320  00FA9A  33                 	db	51	;'3'
  9321  00FA9B  66                 	db	102	;'f'
  9322  00FA9C  43                 	db	67	;'C'
  9323  00FA9D  0A                 	db	10
  9324  00FA9E  0D                 	db	13
  9325  00FA9F  00                 	db	0
  9326  00FAA0                     STR_79:
  9327  00FAA0  2B                 	db	43
  9328  00FAA1  31                 	db	49	;'1'
  9329  00FAA2  32                 	db	50	;'2'
  9330  00FAA3  56                 	db	86	;'V'
  9331  00FAA4  20                 	db	32
  9332  00FAA5  72                 	db	114	;'r'
  9333  00FAA6  61                 	db	97	;'a'
  9334  00FAA7  69                 	db	105	;'i'
  9335  00FAA8  6C                 	db	108	;'l'
  9336  00FAA9  20                 	db	32
  9337  00FAAA  6D                 	db	109	;'m'
  9338  00FAAB  65                 	db	101	;'e'
  9339  00FAAC  61                 	db	97	;'a'
  9340  00FAAD  73                 	db	115	;'s'
  9341  00FAAE  75                 	db	117	;'u'
  9342  00FAAF  72                 	db	114	;'r'
  9343  00FAB0  65                 	db	101	;'e'
  9344  00FAB1  64                 	db	100	;'d'
  9345  00FAB2  20                 	db	32
  9346  00FAB3  61                 	db	97	;'a'
  9347  00FAB4  73                 	db	115	;'s'
  9348  00FAB5  20                 	db	32
  9349  00FAB6  2B                 	db	43
  9350  00FAB7  25                 	db	37
  9351  00FAB8  2E                 	db	46
  9352  00FAB9  33                 	db	51	;'3'
  9353  00FABA  66                 	db	102	;'f'
  9354  00FABB  20                 	db	32
  9355  00FABC  56                 	db	86	;'V'
  9356  00FABD  6F                 	db	111	;'o'
  9357  00FABE  6C                 	db	108	;'l'
  9358  00FABF  74                 	db	116	;'t'
  9359  00FAC0  73                 	db	115	;'s'
  9360  00FAC1  0A                 	db	10
  9361  00FAC2  0D                 	db	13
  9362  00FAC3  00                 	db	0
  9363  00FAC4                     STR_89:
  9364  00FAC4  52                 	db	82	;'R'
  9365  00FAC5  4D                 	db	77	;'M'
  9366  00FAC6  53                 	db	83	;'S'
  9367  00FAC7  20                 	db	32
  9368  00FAC8  4F                 	db	79	;'O'
  9369  00FAC9  75                 	db	117	;'u'
  9370  00FACA  74                 	db	116	;'t'
  9371  00FACB  70                 	db	112	;'p'
  9372  00FACC  75                 	db	117	;'u'
  9373  00FACD  74                 	db	116	;'t'
  9374  00FACE  20                 	db	32
  9375  00FACF  43                 	db	67	;'C'
  9376  00FAD0  75                 	db	117	;'u'
  9377  00FAD1  72                 	db	114	;'r'
  9378  00FAD2  72                 	db	114	;'r'
  9379  00FAD3  65                 	db	101	;'e'
  9380  00FAD4  6E                 	db	110	;'n'
  9381  00FAD5  74                 	db	116	;'t'
  9382  00FAD6  20                 	db	32
  9383  00FAD7  69                 	db	105	;'i'
  9384  00FAD8  73                 	db	115	;'s'
  9385  00FAD9  20                 	db	32
  9386  00FADA  25                 	db	37
  9387  00FADB  2E                 	db	46
  9388  00FADC  33                 	db	51	;'3'
  9389  00FADD  66                 	db	102	;'f'
  9390  00FADE  20                 	db	32
  9391  00FADF  41                 	db	65	;'A'
  9392  00FAE0  72                 	db	114	;'r'
  9393  00FAE1  6D                 	db	109	;'m'
  9394  00FAE2  73                 	db	115	;'s'
  9395  00FAE3  0A                 	db	10
  9396  00FAE4  0D                 	db	13
  9397  00FAE5  00                 	db	0
  9398  00FAE6                     STR_91:
  9399  00FAE6  52                 	db	82	;'R'
  9400  00FAE7  4D                 	db	77	;'M'
  9401  00FAE8  53                 	db	83	;'S'
  9402  00FAE9  20                 	db	32
  9403  00FAEA  4F                 	db	79	;'O'
  9404  00FAEB  75                 	db	117	;'u'
  9405  00FAEC  74                 	db	116	;'t'
  9406  00FAED  70                 	db	112	;'p'
  9407  00FAEE  75                 	db	117	;'u'
  9408  00FAEF  74                 	db	116	;'t'
  9409  00FAF0  20                 	db	32
  9410  00FAF1  56                 	db	86	;'V'
  9411  00FAF2  6F                 	db	111	;'o'
  9412  00FAF3  6C                 	db	108	;'l'
  9413  00FAF4  74                 	db	116	;'t'
  9414  00FAF5  61                 	db	97	;'a'
  9415  00FAF6  67                 	db	103	;'g'
  9416  00FAF7  65                 	db	101	;'e'
  9417  00FAF8  20                 	db	32
  9418  00FAF9  69                 	db	105	;'i'
  9419  00FAFA  73                 	db	115	;'s'
  9420  00FAFB  20                 	db	32
  9421  00FAFC  25                 	db	37
  9422  00FAFD  2E                 	db	46
  9423  00FAFE  33                 	db	51	;'3'
  9424  00FAFF  66                 	db	102	;'f'
  9425  00FB00  20                 	db	32
  9426  00FB01  56                 	db	86	;'V'
  9427  00FB02  72                 	db	114	;'r'
  9428  00FB03  6D                 	db	109	;'m'
  9429  00FB04  73                 	db	115	;'s'
  9430  00FB05  0A                 	db	10
  9431  00FB06  0D                 	db	13
  9432  00FB07  00                 	db	0
  9433  00FB08                     STR_140:
  9434  00FB08  48                 	db	72	;'H'
  9435  00FB09  65                 	db	101	;'e'
  9436  00FB0A  6C                 	db	108	;'l'
  9437  00FB0B  70                 	db	112	;'p'
  9438  00FB0C  20                 	db	32
  9439  00FB0D  50                 	db	80	;'P'
  9440  00FB0E  72                 	db	114	;'r'
  9441  00FB0F  69                 	db	105	;'i'
  9442  00FB10  6D                 	db	109	;'m'
  9443  00FB11  61                 	db	97	;'a'
  9444  00FB12  72                 	db	114	;'r'
  9445  00FB13  79                 	db	121	;'y'
  9446  00FB14  20                 	db	32
  9447  00FB15  4D                 	db	77	;'M'
  9448  00FB16  65                 	db	101	;'e'
  9449  00FB17  61                 	db	97	;'a'
  9450  00FB18  73                 	db	115	;'s'
  9451  00FB19  75                 	db	117	;'u'
  9452  00FB1A  72                 	db	114	;'r'
  9453  00FB1B  65                 	db	101	;'e'
  9454  00FB1C  6D                 	db	109	;'m'
  9455  00FB1D  65                 	db	101	;'e'
  9456  00FB1E  6E                 	db	110	;'n'
  9457  00FB1F  74                 	db	116	;'t'
  9458  00FB20  20                 	db	32
  9459  00FB21  43                 	db	67	;'C'
  9460  00FB22  6F                 	db	111	;'o'
  9461  00FB23  6D                 	db	109	;'m'
  9462  00FB24  6D                 	db	109	;'m'
  9463  00FB25  61                 	db	97	;'a'
  9464  00FB26  6E                 	db	110	;'n'
  9465  00FB27  64                 	db	100	;'d'
  9466  00FB28  73                 	db	115	;'s'
  9467  00FB29  00                 	db	0
  9468  00FB2A                     STR_138:
  9469  00FB2A  48                 	db	72	;'H'
  9470  00FB2B  65                 	db	101	;'e'
  9471  00FB2C  6C                 	db	108	;'l'
  9472  00FB2D  70                 	db	112	;'p'
  9473  00FB2E  20                 	db	32
  9474  00FB2F  44                 	db	68	;'D'
  9475  00FB30  65                 	db	101	;'e'
  9476  00FB31  76                 	db	118	;'v'
  9477  00FB32  69                 	db	105	;'i'
  9478  00FB33  63                 	db	99	;'c'
  9479  00FB34  65                 	db	101	;'e'
  9480  00FB35  20                 	db	32
  9481  00FB36  4D                 	db	77	;'M'
  9482  00FB37  65                 	db	101	;'e'
  9483  00FB38  61                 	db	97	;'a'
  9484  00FB39  73                 	db	115	;'s'
  9485  00FB3A  75                 	db	117	;'u'
  9486  00FB3B  72                 	db	114	;'r'
  9487  00FB3C  65                 	db	101	;'e'
  9488  00FB3D  6D                 	db	109	;'m'
  9489  00FB3E  65                 	db	101	;'e'
  9490  00FB3F  6E                 	db	110	;'n'
  9491  00FB40  74                 	db	116	;'t'
  9492  00FB41  20                 	db	32
  9493  00FB42  43                 	db	67	;'C'
  9494  00FB43  6F                 	db	111	;'o'
  9495  00FB44  6D                 	db	109	;'m'
  9496  00FB45  6D                 	db	109	;'m'
  9497  00FB46  61                 	db	97	;'a'
  9498  00FB47  6E                 	db	110	;'n'
  9499  00FB48  64                 	db	100	;'d'
  9500  00FB49  73                 	db	115	;'s'
  9501  00FB4A  00                 	db	0
  9502  00FB4B                     STR_87:
  9503  00FB4B  4D                 	db	77	;'M'
  9504  00FB4C  65                 	db	101	;'e'
  9505  00FB4D  61                 	db	97	;'a'
  9506  00FB4E  73                 	db	115	;'s'
  9507  00FB4F  75                 	db	117	;'u'
  9508  00FB50  72                 	db	114	;'r'
  9509  00FB51  65                 	db	101	;'e'
  9510  00FB52  64                 	db	100	;'d'
  9511  00FB53  20                 	db	32
  9512  00FB54  43                 	db	67	;'C'
  9513  00FB55  75                 	db	117	;'u'
  9514  00FB56  72                 	db	114	;'r'
  9515  00FB57  72                 	db	114	;'r'
  9516  00FB58  65                 	db	101	;'e'
  9517  00FB59  6E                 	db	110	;'n'
  9518  00FB5A  74                 	db	116	;'t'
  9519  00FB5B  20                 	db	32
  9520  00FB5C  69                 	db	105	;'i'
  9521  00FB5D  73                 	db	115	;'s'
  9522  00FB5E  20                 	db	32
  9523  00FB5F  25                 	db	37
  9524  00FB60  2E                 	db	46
  9525  00FB61  33                 	db	51	;'3'
  9526  00FB62  66                 	db	102	;'f'
  9527  00FB63  20                 	db	32
  9528  00FB64  41                 	db	65	;'A'
  9529  00FB65  6D                 	db	109	;'m'
  9530  00FB66  70                 	db	112	;'p'
  9531  00FB67  73                 	db	115	;'s'
  9532  00FB68  0A                 	db	10
  9533  00FB69  0D                 	db	13
  9534  00FB6A  00                 	db	0
  9535  00FB6B                     STR_106:
  9536  00FB6B  44                 	db	68	;'D'
  9537  00FB6C  69                 	db	105	;'i'
  9538  00FB6D  6D                 	db	109	;'m'
  9539  00FB6E  6D                 	db	109	;'m'
  9540  00FB6F  69                 	db	105	;'i'
  9541  00FB70  6E                 	db	110	;'n'
  9542  00FB71  67                 	db	103	;'g'
  9543  00FB72  20                 	db	32
  9544  00FB73  69                 	db	105	;'i'
  9545  00FB74  73                 	db	115	;'s'
  9546  00FB75  20                 	db	32
  9547  00FB76  63                 	db	99	;'c'
  9548  00FB77  75                 	db	117	;'u'
  9549  00FB78  72                 	db	114	;'r'
  9550  00FB79  72                 	db	114	;'r'
  9551  00FB7A  65                 	db	101	;'e'
  9552  00FB7B  6E                 	db	110	;'n'
  9553  00FB7C  74                 	db	116	;'t'
  9554  00FB7D  6C                 	db	108	;'l'
  9555  00FB7E  79                 	db	121	;'y'
  9556  00FB7F  20                 	db	32
  9557  00FB80  65                 	db	101	;'e'
  9558  00FB81  6E                 	db	110	;'n'
  9559  00FB82  61                 	db	97	;'a'
  9560  00FB83  62                 	db	98	;'b'
  9561  00FB84  6C                 	db	108	;'l'
  9562  00FB85  65                 	db	101	;'e'
  9563  00FB86  64                 	db	100	;'d'
  9564  00FB87  0A                 	db	10
  9565  00FB88  0D                 	db	13
  9566  00FB89  00                 	db	0
  9567  00FB8A                     STR_152:
  9568  00FB8A  55                 	db	85	;'U'
  9569  00FB8B  73                 	db	115	;'s'
  9570  00FB8C  65                 	db	101	;'e'
  9571  00FB8D  72                 	db	114	;'r'
  9572  00FB8E  20                 	db	32
  9573  00FB8F  69                 	db	105	;'i'
  9574  00FB90  6E                 	db	110	;'n'
  9575  00FB91  70                 	db	112	;'p'
  9576  00FB92  75                 	db	117	;'u'
  9577  00FB93  74                 	db	116	;'t'
  9578  00FB94  20                 	db	32
  9579  00FB95  61                 	db	97	;'a'
  9580  00FB96  70                 	db	112	;'p'
  9581  00FB97  70                 	db	112	;'p'
  9582  00FB98  65                 	db	101	;'e'
  9583  00FB99  61                 	db	97	;'a'
  9584  00FB9A  72                 	db	114	;'r'
  9585  00FB9B  73                 	db	115	;'s'
  9586  00FB9C  20                 	db	32
  9587  00FB9D  69                 	db	105	;'i'
  9588  00FB9E  6E                 	db	110	;'n'
  9589  00FB9F  20                 	db	32
  9590  00FBA0  77                 	db	119	;'w'
  9591  00FBA1  68                 	db	104	;'h'
  9592  00FBA2  69                 	db	105	;'i'
  9593  00FBA3  74                 	db	116	;'t'
  9594  00FBA4  65                 	db	101	;'e'
  9595  00FBA5  0A                 	db	10
  9596  00FBA6  0D                 	db	13
  9597  00FBA7  00                 	db	0
  9598  00FBA8                     STR_104:
  9599  00FBA8  4C                 	db	76	;'L'
  9600  00FBA9  6F                 	db	111	;'o'
  9601  00FBAA  61                 	db	97	;'a'
  9602  00FBAB  64                 	db	100	;'d'
  9603  00FBAC  20                 	db	32
  9604  00FBAD  69                 	db	105	;'i'
  9605  00FBAE  73                 	db	115	;'s'
  9606  00FBAF  20                 	db	32
  9607  00FBB0  63                 	db	99	;'c'
  9608  00FBB1  75                 	db	117	;'u'
  9609  00FBB2  72                 	db	114	;'r'
  9610  00FBB3  72                 	db	114	;'r'
  9611  00FBB4  65                 	db	101	;'e'
  9612  00FBB5  6E                 	db	110	;'n'
  9613  00FBB6  74                 	db	116	;'t'
  9614  00FBB7  6C                 	db	108	;'l'
  9615  00FBB8  79                 	db	121	;'y'
  9616  00FBB9  20                 	db	32
  9617  00FBBA  64                 	db	100	;'d'
  9618  00FBBB  69                 	db	105	;'i'
  9619  00FBBC  73                 	db	115	;'s'
  9620  00FBBD  61                 	db	97	;'a'
  9621  00FBBE  62                 	db	98	;'b'
  9622  00FBBF  6C                 	db	108	;'l'
  9623  00FBC0  65                 	db	101	;'e'
  9624  00FBC1  64                 	db	100	;'d'
  9625  00FBC2  0A                 	db	10
  9626  00FBC3  0D                 	db	13
  9627  00FBC4  00                 	db	0
  9628  00FBC5                     STR_136:
  9629  00FBC5  48                 	db	72	;'H'
  9630  00FBC6  65                 	db	101	;'e'
  9631  00FBC7  6C                 	db	108	;'l'
  9632  00FBC8  70                 	db	112	;'p'
  9633  00FBC9  20                 	db	32
  9634  00FBCA  44                 	db	68	;'D'
  9635  00FBCB  65                 	db	101	;'e'
  9636  00FBCC  76                 	db	118	;'v'
  9637  00FBCD  69                 	db	105	;'i'
  9638  00FBCE  63                 	db	99	;'c'
  9639  00FBCF  65                 	db	101	;'e'
  9640  00FBD0  20                 	db	32
  9641  00FBD1  43                 	db	67	;'C'
  9642  00FBD2  6F                 	db	111	;'o'
  9643  00FBD3  6E                 	db	110	;'n'
  9644  00FBD4  74                 	db	116	;'t'
  9645  00FBD5  72                 	db	114	;'r'
  9646  00FBD6  6F                 	db	111	;'o'
  9647  00FBD7  6C                 	db	108	;'l'
  9648  00FBD8  20                 	db	32
  9649  00FBD9  43                 	db	67	;'C'
  9650  00FBDA  6F                 	db	111	;'o'
  9651  00FBDB  6D                 	db	109	;'m'
  9652  00FBDC  6D                 	db	109	;'m'
  9653  00FBDD  61                 	db	97	;'a'
  9654  00FBDE  6E                 	db	110	;'n'
  9655  00FBDF  64                 	db	100	;'d'
  9656  00FBE0  73                 	db	115	;'s'
  9657  00FBE1  00                 	db	0
  9658  00FBE2                     STR_142:
  9659  00FBE2  48                 	db	72	;'H'
  9660  00FBE3  65                 	db	101	;'e'
  9661  00FBE4  6C                 	db	108	;'l'
  9662  00FBE5  70                 	db	112	;'p'
  9663  00FBE6  20                 	db	32
  9664  00FBE7  4F                 	db	79	;'O'
  9665  00FBE8  75                 	db	117	;'u'
  9666  00FBE9  74                 	db	116	;'t'
  9667  00FBEA  70                 	db	112	;'p'
  9668  00FBEB  75                 	db	117	;'u'
  9669  00FBEC  74                 	db	116	;'t'
  9670  00FBED  20                 	db	32
  9671  00FBEE  43                 	db	67	;'C'
  9672  00FBEF  6F                 	db	111	;'o'
  9673  00FBF0  6E                 	db	110	;'n'
  9674  00FBF1  74                 	db	116	;'t'
  9675  00FBF2  72                 	db	114	;'r'
  9676  00FBF3  6F                 	db	111	;'o'
  9677  00FBF4  6C                 	db	108	;'l'
  9678  00FBF5  20                 	db	32
  9679  00FBF6  43                 	db	67	;'C'
  9680  00FBF7  6F                 	db	111	;'o'
  9681  00FBF8  6D                 	db	109	;'m'
  9682  00FBF9  6D                 	db	109	;'m'
  9683  00FBFA  61                 	db	97	;'a'
  9684  00FBFB  6E                 	db	110	;'n'
  9685  00FBFC  64                 	db	100	;'d'
  9686  00FBFD  73                 	db	115	;'s'
  9687  00FBFE  00                 	db	0
  9688  00FBFF                     STR_103:
  9689  00FBFF  4C                 	db	76	;'L'
  9690  00FC00  6F                 	db	111	;'o'
  9691  00FC01  61                 	db	97	;'a'
  9692  00FC02  64                 	db	100	;'d'
  9693  00FC03  20                 	db	32
  9694  00FC04  69                 	db	105	;'i'
  9695  00FC05  73                 	db	115	;'s'
  9696  00FC06  20                 	db	32
  9697  00FC07  63                 	db	99	;'c'
  9698  00FC08  75                 	db	117	;'u'
  9699  00FC09  72                 	db	114	;'r'
  9700  00FC0A  72                 	db	114	;'r'
  9701  00FC0B  65                 	db	101	;'e'
  9702  00FC0C  6E                 	db	110	;'n'
  9703  00FC0D  74                 	db	116	;'t'
  9704  00FC0E  6C                 	db	108	;'l'
  9705  00FC0F  79                 	db	121	;'y'
  9706  00FC10  20                 	db	32
  9707  00FC11  65                 	db	101	;'e'
  9708  00FC12  6E                 	db	110	;'n'
  9709  00FC13  61                 	db	97	;'a'
  9710  00FC14  62                 	db	98	;'b'
  9711  00FC15  6C                 	db	108	;'l'
  9712  00FC16  65                 	db	101	;'e'
  9713  00FC17  64                 	db	100	;'d'
  9714  00FC18  0A                 	db	10
  9715  00FC19  0D                 	db	13
  9716  00FC1A  00                 	db	0
  9717  00FC1B                     STR_162:
  9718  00FC1B  52                 	db	82	;'R'
  9719  00FC1C  45                 	db	69	;'E'
  9720  00FC1D  53                 	db	83	;'S'
  9721  00FC1E  45                 	db	69	;'E'
  9722  00FC1F  54                 	db	84	;'T'
  9723  00FC20  20                 	db	32
  9724  00FC21  49                 	db	73	;'I'
  9725  00FC22  6E                 	db	110	;'n'
  9726  00FC23  73                 	db	115	;'s'
  9727  00FC24  74                 	db	116	;'t'
  9728  00FC25  72                 	db	114	;'r'
  9729  00FC26  75                 	db	117	;'u'
  9730  00FC27  63                 	db	99	;'c'
  9731  00FC28  74                 	db	116	;'t'
  9732  00FC29  69                 	db	105	;'i'
  9733  00FC2A  6F                 	db	111	;'o'
  9734  00FC2B  6E                 	db	110	;'n'
  9735  00FC2C  20                 	db	32
  9736  00FC2D  45                 	db	69	;'E'
  9737  00FC2E  78                 	db	120	;'x'
  9738  00FC2F  65                 	db	101	;'e'
  9739  00FC30  63                 	db	99	;'c'
  9740  00FC31  75                 	db	117	;'u'
  9741  00FC32  74                 	db	116	;'t'
  9742  00FC33  65                 	db	101	;'e'
  9743  00FC34  64                 	db	100	;'d'
  9744  00FC35  00                 	db	0
  9745  00FC36                     STR_86:
  9746  00FC36  4D                 	db	77	;'M'
  9747  00FC37  65                 	db	101	;'e'
  9748  00FC38  61                 	db	97	;'a'
  9749  00FC39  73                 	db	115	;'s'
  9750  00FC3A  75                 	db	117	;'u'
  9751  00FC3B  72                 	db	114	;'r'
  9752  00FC3C  65                 	db	101	;'e'
  9753  00FC3D  20                 	db	32
  9754  00FC3E  44                 	db	68	;'D'
  9755  00FC3F  65                 	db	101	;'e'
  9756  00FC40  74                 	db	116	;'t'
  9757  00FC41  65                 	db	101	;'e'
  9758  00FC42  63                 	db	99	;'c'
  9759  00FC43  74                 	db	116	;'t'
  9760  00FC44  65                 	db	101	;'e'
  9761  00FC45  64                 	db	100	;'d'
  9762  00FC46  20                 	db	32
  9763  00FC47  43                 	db	67	;'C'
  9764  00FC48  75                 	db	117	;'u'
  9765  00FC49  72                 	db	114	;'r'
  9766  00FC4A  72                 	db	114	;'r'
  9767  00FC4B  65                 	db	101	;'e'
  9768  00FC4C  6E                 	db	110	;'n'
  9769  00FC4D  74                 	db	116	;'t'
  9770  00FC4E  3F                 	db	63	;'?'
  9771  00FC4F  00                 	db	0
  9772  00FC50                     STR_110:
  9773  00FC50  4C                 	db	76	;'L'
  9774  00FC51  6F                 	db	111	;'o'
  9775  00FC52  61                 	db	97	;'a'
  9776  00FC53  64                 	db	100	;'d'
  9777  00FC54  20                 	db	32
  9778  00FC55  68                 	db	104	;'h'
  9779  00FC56  61                 	db	97	;'a'
  9780  00FC57  73                 	db	115	;'s'
  9781  00FC58  20                 	db	32
  9782  00FC59  62                 	db	98	;'b'
  9783  00FC5A  65                 	db	101	;'e'
  9784  00FC5B  65                 	db	101	;'e'
  9785  00FC5C  6E                 	db	110	;'n'
  9786  00FC5D  20                 	db	32
  9787  00FC5E  64                 	db	100	;'d'
  9788  00FC5F  69                 	db	105	;'i'
  9789  00FC60  73                 	db	115	;'s'
  9790  00FC61  61                 	db	97	;'a'
  9791  00FC62  62                 	db	98	;'b'
  9792  00FC63  6C                 	db	108	;'l'
  9793  00FC64  65                 	db	101	;'e'
  9794  00FC65  64                 	db	100	;'d'
  9795  00FC66  0A                 	db	10
  9796  00FC67  0D                 	db	13
  9797  00FC68  00                 	db	0
  9798  00FC69                     STR_111:
  9799  00FC69  53                 	db	83	;'S'
  9800  00FC6A  65                 	db	101	;'e'
  9801  00FC6B  74                 	db	116	;'t'
  9802  00FC6C  20                 	db	32
  9803  00FC6D  44                 	db	68	;'D'
  9804  00FC6E  69                 	db	105	;'i'
  9805  00FC6F  6D                 	db	109	;'m'
  9806  00FC70  6D                 	db	109	;'m'
  9807  00FC71  69                 	db	105	;'i'
  9808  00FC72  6E                 	db	110	;'n'
  9809  00FC73  67                 	db	103	;'g'
  9810  00FC74  20                 	db	32
  9811  00FC75  50                 	db	80	;'P'
  9812  00FC76  65                 	db	101	;'e'
  9813  00FC77  72                 	db	114	;'r'
  9814  00FC78  63                 	db	99	;'c'
  9815  00FC79  65                 	db	101	;'e'
  9816  00FC7A  6E                 	db	110	;'n'
  9817  00FC7B  74                 	db	116	;'t'
  9818  00FC7C  61                 	db	97	;'a'
  9819  00FC7D  67                 	db	103	;'g'
  9820  00FC7E  65                 	db	101	;'e'
  9821  00FC7F  3A                 	db	58	;':'
  9822  00FC80  20                 	db	32
  9823  00FC81  00                 	db	0
  9824  00FC82                     STR_70:
  9825  00FC82  4E                 	db	78	;'N'
  9826  00FC83  6F                 	db	111	;'o'
  9827  00FC84  20                 	db	32
  9828  00FC85  41                 	db	65	;'A'
  9829  00FC86  44                 	db	68	;'D'
  9830  00FC87  43                 	db	67	;'C'
  9831  00FC88  20                 	db	32
  9832  00FC89  45                 	db	69	;'E'
  9833  00FC8A  72                 	db	114	;'r'
  9834  00FC8B  72                 	db	114	;'r'
  9835  00FC8C  6F                 	db	111	;'o'
  9836  00FC8D  72                 	db	114	;'r'
  9837  00FC8E  20                 	db	32
  9838  00FC8F  64                 	db	100	;'d'
  9839  00FC90  65                 	db	101	;'e'
  9840  00FC91  74                 	db	116	;'t'
  9841  00FC92  65                 	db	101	;'e'
  9842  00FC93  63                 	db	99	;'c'
  9843  00FC94  74                 	db	116	;'t'
  9844  00FC95  65                 	db	101	;'e'
  9845  00FC96  64                 	db	100	;'d'
  9846  00FC97  0A                 	db	10
  9847  00FC98  0D                 	db	13
  9848  00FC99  00                 	db	0
  9849  00FC9A                     STR_164:
  9850  00FC9A  53                 	db	83	;'S'
  9851  00FC9B  74                 	db	116	;'t'
  9852  00FC9C  61                 	db	97	;'a'
  9853  00FC9D  63                 	db	99	;'c'
  9854  00FC9E  6B                 	db	107	;'k'
  9855  00FC9F  20                 	db	32
  9856  00FCA0  55                 	db	85	;'U'
  9857  00FCA1  6E                 	db	110	;'n'
  9858  00FCA2  64                 	db	100	;'d'
  9859  00FCA3  65                 	db	101	;'e'
  9860  00FCA4  72                 	db	114	;'r'
  9861  00FCA5  66                 	db	102	;'f'
  9862  00FCA6  6C                 	db	108	;'l'
  9863  00FCA7  6F                 	db	111	;'o'
  9864  00FCA8  77                 	db	119	;'w'
  9865  00FCA9  20                 	db	32
  9866  00FCAA  52                 	db	82	;'R'
  9867  00FCAB  65                 	db	101	;'e'
  9868  00FCAC  73                 	db	115	;'s'
  9869  00FCAD  65                 	db	101	;'e'
  9870  00FCAE  74                 	db	116	;'t'
  9871  00FCAF  00                 	db	0
  9872  00FCB0                     STR_67:
  9873  00FCB0  49                 	db	73	;'I'
  9874  00FCB1  6E                 	db	110	;'n'
  9875  00FCB2  74                 	db	116	;'t'
  9876  00FCB3  65                 	db	101	;'e'
  9877  00FCB4  72                 	db	114	;'r'
  9878  00FCB5  6E                 	db	110	;'n'
  9879  00FCB6  61                 	db	97	;'a'
  9880  00FCB7  6C                 	db	108	;'l'
  9881  00FCB8  20                 	db	32
  9882  00FCB9  46                 	db	70	;'F'
  9883  00FCBA  56                 	db	86	;'V'
  9884  00FCBB  52                 	db	82	;'R'
  9885  00FCBC  20                 	db	32
  9886  00FCBD  42                 	db	66	;'B'
  9887  00FCBE  75                 	db	117	;'u'
  9888  00FCBF  66                 	db	102	;'f'
  9889  00FCC0  66                 	db	102	;'f'
  9890  00FCC1  65                 	db	101	;'e'
  9891  00FCC2  72                 	db	114	;'r'
  9892  00FCC3  20                 	db	32
  9893  00FCC4  31                 	db	49	;'1'
  9894  00FCC5  00                 	db	0
  9895  00FCC6                     STR_163:
  9896  00FCC6  53                 	db	83	;'S'
  9897  00FCC7  74                 	db	116	;'t'
  9898  00FCC8  61                 	db	97	;'a'
  9899  00FCC9  63                 	db	99	;'c'
  9900  00FCCA  6B                 	db	107	;'k'
  9901  00FCCB  20                 	db	32
  9902  00FCCC  4F                 	db	79	;'O'
  9903  00FCCD  76                 	db	118	;'v'
  9904  00FCCE  65                 	db	101	;'e'
  9905  00FCCF  72                 	db	114	;'r'
  9906  00FCD0  66                 	db	102	;'f'
  9907  00FCD1  6C                 	db	108	;'l'
  9908  00FCD2  6F                 	db	111	;'o'
  9909  00FCD3  77                 	db	119	;'w'
  9910  00FCD4  20                 	db	32
  9911  00FCD5  52                 	db	82	;'R'
  9912  00FCD6  65                 	db	101	;'e'
  9913  00FCD7  73                 	db	115	;'s'
  9914  00FCD8  65                 	db	101	;'e'
  9915  00FCD9  74                 	db	116	;'t'
  9916  00FCDA  00                 	db	0
  9917  00FCDB                     STR_72:
  9918  00FCDB  43                 	db	67	;'C'
  9919  00FCDC  6C                 	db	108	;'l'
  9920  00FCDD  65                 	db	101	;'e'
  9921  00FCDE  61                 	db	97	;'a'
  9922  00FCDF  72                 	db	114	;'r'
  9923  00FCE0  69                 	db	105	;'i'
  9924  00FCE1  6E                 	db	110	;'n'
  9925  00FCE2  67                 	db	103	;'g'
  9926  00FCE3  20                 	db	32
  9927  00FCE4  41                 	db	65	;'A'
  9928  00FCE5  44                 	db	68	;'D'
  9929  00FCE6  43                 	db	67	;'C'
  9930  00FCE7  20                 	db	32
  9931  00FCE8  45                 	db	69	;'E'
  9932  00FCE9  72                 	db	114	;'r'
  9933  00FCEA  72                 	db	114	;'r'
  9934  00FCEB  6F                 	db	111	;'o'
  9935  00FCEC  72                 	db	114	;'r'
  9936  00FCED  0A                 	db	10
  9937  00FCEE  0D                 	db	13
  9938  00FCEF  00                 	db	0
  9939  00FCF0                     STR_90:
  9940  00FCF0  4D                 	db	77	;'M'
  9941  00FCF1  65                 	db	101	;'e'
  9942  00FCF2  61                 	db	97	;'a'
  9943  00FCF3  73                 	db	115	;'s'
  9944  00FCF4  75                 	db	117	;'u'
  9945  00FCF5  72                 	db	114	;'r'
  9946  00FCF6  65                 	db	101	;'e'
  9947  00FCF7  20                 	db	32
  9948  00FCF8  52                 	db	82	;'R'
  9949  00FCF9  4D                 	db	77	;'M'
  9950  00FCFA  53                 	db	83	;'S'
  9951  00FCFB  20                 	db	32
  9952  00FCFC  56                 	db	86	;'V'
  9953  00FCFD  6F                 	db	111	;'o'
  9954  00FCFE  6C                 	db	108	;'l'
  9955  00FCFF  74                 	db	116	;'t'
  9956  00FD00  61                 	db	97	;'a'
  9957  00FD01  67                 	db	103	;'g'
  9958  00FD02  65                 	db	101	;'e'
  9959  00FD03  3F                 	db	63	;'?'
  9960  00FD04  00                 	db	0
  9961  00FD05                     STR_88:
  9962  00FD05  4D                 	db	77	;'M'
  9963  00FD06  65                 	db	101	;'e'
  9964  00FD07  61                 	db	97	;'a'
  9965  00FD08  73                 	db	115	;'s'
  9966  00FD09  75                 	db	117	;'u'
  9967  00FD0A  72                 	db	114	;'r'
  9968  00FD0B  65                 	db	101	;'e'
  9969  00FD0C  20                 	db	32
  9970  00FD0D  52                 	db	82	;'R'
  9971  00FD0E  4D                 	db	77	;'M'
  9972  00FD0F  53                 	db	83	;'S'
  9973  00FD10  20                 	db	32
  9974  00FD11  43                 	db	67	;'C'
  9975  00FD12  75                 	db	117	;'u'
  9976  00FD13  72                 	db	114	;'r'
  9977  00FD14  72                 	db	114	;'r'
  9978  00FD15  65                 	db	101	;'e'
  9979  00FD16  6E                 	db	110	;'n'
  9980  00FD17  74                 	db	116	;'t'
  9981  00FD18  3F                 	db	63	;'?'
  9982  00FD19  00                 	db	0
  9983  00FD1A                     STR_126:
  9984  00FD1A  4D                 	db	77	;'M'
  9985  00FD1B  61                 	db	97	;'a'
  9986  00FD1C  78                 	db	120	;'x'
  9987  00FD1D  20                 	db	32
  9988  00FD1E  50                 	db	80	;'P'
  9989  00FD1F  4F                 	db	79	;'O'
  9990  00FD20  53                 	db	83	;'S'
  9991  00FD21  33                 	db	51	;'3'
  9992  00FD22  50                 	db	80	;'P'
  9993  00FD23  33                 	db	51	;'3'
  9994  00FD24  20                 	db	32
  9995  00FD25  56                 	db	86	;'V'
  9996  00FD26  6F                 	db	111	;'o'
  9997  00FD27  6C                 	db	108	;'l'
  9998  00FD28  74                 	db	116	;'t'
  9999  00FD29  61                 	db	97	;'a'
 10000  00FD2A  67                 	db	103	;'g'
 10001  00FD2B  65                 	db	101	;'e'
 10002  00FD2C  3F                 	db	63	;'?'
 10003  00FD2D  00                 	db	0
 10004  00FD2E                     STR_159:
 10005  00FD2E  4D                 	db	77	;'M'
 10006  00FD2F  61                 	db	97	;'a'
 10007  00FD30  73                 	db	115	;'s'
 10008  00FD31  74                 	db	116	;'t'
 10009  00FD32  65                 	db	101	;'e'
 10010  00FD33  72                 	db	114	;'r'
 10011  00FD34  20                 	db	32
 10012  00FD35  43                 	db	67	;'C'
 10013  00FD36  6C                 	db	108	;'l'
 10014  00FD37  65                 	db	101	;'e'
 10015  00FD38  61                 	db	97	;'a'
 10016  00FD39  72                 	db	114	;'r'
 10017  00FD3A  20                 	db	32
 10018  00FD3B  52                 	db	82	;'R'
 10019  00FD3C  65                 	db	101	;'e'
 10020  00FD3D  73                 	db	115	;'s'
 10021  00FD3E  65                 	db	101	;'e'
 10022  00FD3F  74                 	db	116	;'t'
 10023  00FD40  00                 	db	0
 10024  00FD41                     STR_128:
 10025  00FD41  4D                 	db	77	;'M'
 10026  00FD42  61                 	db	97	;'a'
 10027  00FD43  78                 	db	120	;'x'
 10028  00FD44  20                 	db	32
 10029  00FD45  50                 	db	80	;'P'
 10030  00FD46  4F                 	db	79	;'O'
 10031  00FD47  53                 	db	83	;'S'
 10032  00FD48  31                 	db	49	;'1'
 10033  00FD49  32                 	db	50	;'2'
 10034  00FD4A  20                 	db	32
 10035  00FD4B  56                 	db	86	;'V'
 10036  00FD4C  6F                 	db	111	;'o'
 10037  00FD4D  6C                 	db	108	;'l'
 10038  00FD4E  74                 	db	116	;'t'
 10039  00FD4F  61                 	db	97	;'a'
 10040  00FD50  67                 	db	103	;'g'
 10041  00FD51  65                 	db	101	;'e'
 10042  00FD52  3F                 	db	63	;'?'
 10043  00FD53  00                 	db	0
 10044  00FD54                     STR_80:
 10045  00FD54  4D                 	db	77	;'M'
 10046  00FD55  65                 	db	101	;'e'
 10047  00FD56  61                 	db	97	;'a'
 10048  00FD57  73                 	db	115	;'s'
 10049  00FD58  75                 	db	117	;'u'
 10050  00FD59  72                 	db	114	;'r'
 10051  00FD5A  65                 	db	101	;'e'
 10052  00FD5B  20                 	db	32
 10053  00FD5C  44                 	db	68	;'D'
 10054  00FD5D  69                 	db	105	;'i'
 10055  00FD5E  65                 	db	101	;'e'
 10056  00FD5F  20                 	db	32
 10057  00FD60  54                 	db	84	;'T'
 10058  00FD61  65                 	db	101	;'e'
 10059  00FD62  6D                 	db	109	;'m'
 10060  00FD63  70                 	db	112	;'p'
 10061  00FD64  3F                 	db	63	;'?'
 10062  00FD65  00                 	db	0
 10063  00FD66                     STR_167:
 10064  00FD66  30                 	db	48	;'0'
 10065  00FD67  31                 	db	49	;'1'
 10066  00FD68  32                 	db	50	;'2'
 10067  00FD69  33                 	db	51	;'3'
 10068  00FD6A  34                 	db	52	;'4'
 10069  00FD6B  35                 	db	53	;'5'
 10070  00FD6C  36                 	db	54	;'6'
 10071  00FD6D  37                 	db	55	;'7'
 10072  00FD6E  38                 	db	56	;'8'
 10073  00FD6F  39                 	db	57	;'9'
 10074  00FD70  41                 	db	65	;'A'
 10075  00FD71  42                 	db	66	;'B'
 10076  00FD72  43                 	db	67	;'C'
 10077  00FD73  44                 	db	68	;'D'
 10078  00FD74  45                 	db	69	;'E'
 10079  00FD75  46                 	db	70	;'F'
 10080  00FD76  00                 	db	0
 10081  00FD77                     STR_51:
 10082  00FD77  41                 	db	65	;'A'
 10083  00FD78  43                 	db	67	;'C'
 10084  00FD79  20                 	db	32
 10085  00FD7A  50                 	db	80	;'P'
 10086  00FD7B  6F                 	db	111	;'o'
 10087  00FD7C  77                 	db	119	;'w'
 10088  00FD7D  65                 	db	101	;'e'
 10089  00FD7E  72                 	db	114	;'r'
 10090  00FD7F  20                 	db	32
 10091  00FD80  4D                 	db	77	;'M'
 10092  00FD81  65                 	db	101	;'e'
 10093  00FD82  74                 	db	116	;'t'
 10094  00FD83  65                 	db	101	;'e'
 10095  00FD84  72                 	db	114	;'r'
 10096  00FD85  0A                 	db	10
 10097  00FD86  0D                 	db	13
 10098  00FD87  00                 	db	0
 10099  00FD88                     STR_105:
 10100  00FD88  44                 	db	68	;'D'
 10101  00FD89  69                 	db	105	;'i'
 10102  00FD8A  6D                 	db	109	;'m'
 10103  00FD8B  6D                 	db	109	;'m'
 10104  00FD8C  69                 	db	105	;'i'
 10105  00FD8D  6E                 	db	110	;'n'
 10106  00FD8E  67                 	db	103	;'g'
 10107  00FD8F  20                 	db	32
 10108  00FD90  45                 	db	69	;'E'
 10109  00FD91  6E                 	db	110	;'n'
 10110  00FD92  61                 	db	97	;'a'
 10111  00FD93  62                 	db	98	;'b'
 10112  00FD94  6C                 	db	108	;'l'
 10113  00FD95  65                 	db	101	;'e'
 10114  00FD96  64                 	db	100	;'d'
 10115  00FD97  3F                 	db	63	;'?'
 10116  00FD98  00                 	db	0
 10117  00FD99                     STR_132:
 10118  00FD99  4D                 	db	77	;'M'
 10119  00FD9A  61                 	db	97	;'a'
 10120  00FD9B  78                 	db	120	;'x'
 10121  00FD9C  20                 	db	32
 10122  00FD9D  46                 	db	70	;'F'
 10123  00FD9E  56                 	db	86	;'V'
 10124  00FD9F  52                 	db	82	;'R'
 10125  00FDA0  20                 	db	32
 10126  00FDA1  56                 	db	86	;'V'
 10127  00FDA2  6F                 	db	111	;'o'
 10128  00FDA3  6C                 	db	108	;'l'
 10129  00FDA4  74                 	db	116	;'t'
 10130  00FDA5  61                 	db	97	;'a'
 10131  00FDA6  67                 	db	103	;'g'
 10132  00FDA7  65                 	db	101	;'e'
 10133  00FDA8  3F                 	db	63	;'?'
 10134  00FDA9  00                 	db	0
 10135  00FDAA                     STR_73:
 10136  00FDAA  56                 	db	86	;'V'
 10137  00FDAB  43                 	db	67	;'C'
 10138  00FDAC  43                 	db	67	;'C'
 10139  00FDAD  20                 	db	32
 10140  00FDAE  4F                 	db	79	;'O'
 10141  00FDAF  76                 	db	118	;'v'
 10142  00FDB0  65                 	db	101	;'e'
 10143  00FDB1  72                 	db	114	;'r'
 10144  00FDB2  76                 	db	118	;'v'
 10145  00FDB3  6F                 	db	111	;'o'
 10146  00FDB4  6C                 	db	108	;'l'
 10147  00FDB5  74                 	db	116	;'t'
 10148  00FDB6  61                 	db	97	;'a'
 10149  00FDB7  67                 	db	103	;'g'
 10150  00FDB8  65                 	db	101	;'e'
 10151  00FDB9  3F                 	db	63	;'?'
 10152  00FDBA  00                 	db	0
 10153  00FDBB                     STR_122:
 10154  00FDBB  4D                 	db	77	;'M'
 10155  00FDBC  61                 	db	97	;'a'
 10156  00FDBD  78                 	db	120	;'x'
 10157  00FDBE  20                 	db	32
 10158  00FDBF  52                 	db	82	;'R'
 10159  00FDC0  4D                 	db	77	;'M'
 10160  00FDC1  53                 	db	83	;'S'
 10161  00FDC2  20                 	db	32
 10162  00FDC3  43                 	db	67	;'C'
 10163  00FDC4  75                 	db	117	;'u'
 10164  00FDC5  72                 	db	114	;'r'
 10165  00FDC6  72                 	db	114	;'r'
 10166  00FDC7  65                 	db	101	;'e'
 10167  00FDC8  6E                 	db	110	;'n'
 10168  00FDC9  74                 	db	116	;'t'
 10169  00FDCA  3F                 	db	63	;'?'
 10170  00FDCB  00                 	db	0
 10171  00FDCC                     STR_134:
 10172  00FDCC  43                 	db	67	;'C'
 10173  00FDCD  6C                 	db	108	;'l'
 10174  00FDCE  65                 	db	101	;'e'
 10175  00FDCF  61                 	db	97	;'a'
 10176  00FDD0  72                 	db	114	;'r'
 10177  00FDD1  20                 	db	32
 10178  00FDD2  4D                 	db	77	;'M'
 10179  00FDD3  61                 	db	97	;'a'
 10180  00FDD4  78                 	db	120	;'x'
 10181  00FDD5  20                 	db	32
 10182  00FDD6  56                 	db	86	;'V'
 10183  00FDD7  61                 	db	97	;'a'
 10184  00FDD8  6C                 	db	108	;'l'
 10185  00FDD9  75                 	db	117	;'u'
 10186  00FDDA  65                 	db	101	;'e'
 10187  00FDDB  73                 	db	115	;'s'
 10188  00FDDC  00                 	db	0
 10189  00FDDD                     STR_156:
 10190  00FDDD  55                 	db	85	;'U'
 10191  00FDDE  6E                 	db	110	;'n'
 10192  00FDDF  64                 	db	100	;'d'
 10193  00FDE0  65                 	db	101	;'e'
 10194  00FDE1  66                 	db	102	;'f'
 10195  00FDE2  69                 	db	105	;'i'
 10196  00FDE3  6E                 	db	110	;'n'
 10197  00FDE4  65                 	db	101	;'e'
 10198  00FDE5  64                 	db	100	;'d'
 10199  00FDE6  20                 	db	32
 10200  00FDE7  52                 	db	82	;'R'
 10201  00FDE8  65                 	db	101	;'e'
 10202  00FDE9  73                 	db	115	;'s'
 10203  00FDEA  65                 	db	101	;'e'
 10204  00FDEB  74                 	db	116	;'t'
 10205  00FDEC  00                 	db	0
 10206  00FDED                     STR_158:
 10207  00FDED  42                 	db	66	;'B'
 10208  00FDEE  72                 	db	114	;'r'
 10209  00FDEF  6F                 	db	111	;'o'
 10210  00FDF0  77                 	db	119	;'w'
 10211  00FDF1  6E                 	db	110	;'n'
 10212  00FDF2  20                 	db	32
 10213  00FDF3  4F                 	db	79	;'O'
 10214  00FDF4  75                 	db	117	;'u'
 10215  00FDF5  74                 	db	116	;'t'
 10216  00FDF6  20                 	db	32
 10217  00FDF7  52                 	db	82	;'R'
 10218  00FDF8  65                 	db	101	;'e'
 10219  00FDF9  73                 	db	115	;'s'
 10220  00FDFA  65                 	db	101	;'e'
 10221  00FDFB  74                 	db	116	;'t'
 10222  00FDFC  00                 	db	0
 10223  00FDFD                     STR_76:
 10224  00FDFD  4D                 	db	77	;'M'
 10225  00FDFE  65                 	db	101	;'e'
 10226  00FDFF  61                 	db	97	;'a'
 10227  00FE00  73                 	db	115	;'s'
 10228  00FE01  75                 	db	117	;'u'
 10229  00FE02  72                 	db	114	;'r'
 10230  00FE03  65                 	db	101	;'e'
 10231  00FE04  20                 	db	32
 10232  00FE05  50                 	db	80	;'P'
 10233  00FE06  4F                 	db	79	;'O'
 10234  00FE07  53                 	db	83	;'S'
 10235  00FE08  33                 	db	51	;'3'
 10236  00FE09  50                 	db	80	;'P'
 10237  00FE0A  33                 	db	51	;'3'
 10238  00FE0B  3F                 	db	63	;'?'
 10239  00FE0C  00                 	db	0
 10240  00FE0D                     STR_118:
 10241  00FE0D  44                 	db	68	;'D'
 10242  00FE0E  65                 	db	101	;'e'
 10243  00FE0F  76                 	db	118	;'v'
 10244  00FE10  69                 	db	105	;'i'
 10245  00FE11  63                 	db	99	;'c'
 10246  00FE12  65                 	db	101	;'e'
 10247  00FE13  20                 	db	32
 10248  00FE14  4F                 	db	79	;'O'
 10249  00FE15  6E                 	db	110	;'n'
 10250  00FE16  20                 	db	32
 10251  00FE17  54                 	db	84	;'T'
 10252  00FE18  69                 	db	105	;'i'
 10253  00FE19  6D                 	db	109	;'m'
 10254  00FE1A  65                 	db	101	;'e'
 10255  00FE1B  3F                 	db	63	;'?'
 10256  00FE1C  00                 	db	0
 10257  00FE1D                     STR_47:
 10258  00FE1D  43                 	db	67	;'C'
 10259  00FE1E  61                 	db	97	;'a'
 10260  00FE1F  75                 	db	117	;'u'
 10261  00FE20  73                 	db	115	;'s'
 10262  00FE21  65                 	db	101	;'e'
 10263  00FE22  20                 	db	32
 10264  00FE23  6F                 	db	111	;'o'
 10265  00FE24  66                 	db	102	;'f'
 10266  00FE25  20                 	db	32
 10267  00FE26  52                 	db	82	;'R'
 10268  00FE27  65                 	db	101	;'e'
 10269  00FE28  73                 	db	115	;'s'
 10270  00FE29  65                 	db	101	;'e'
 10271  00FE2A  74                 	db	116	;'t'
 10272  00FE2B  3F                 	db	63	;'?'
 10273  00FE2C  00                 	db	0
 10274  00FE2D                     STR_94:
 10275  00FE2D  4D                 	db	77	;'M'
 10276  00FE2E  65                 	db	101	;'e'
 10277  00FE2F  61                 	db	97	;'a'
 10278  00FE30  73                 	db	115	;'s'
 10279  00FE31  75                 	db	117	;'u'
 10280  00FE32  72                 	db	114	;'r'
 10281  00FE33  65                 	db	101	;'e'
 10282  00FE34  20                 	db	32
 10283  00FE35  45                 	db	69	;'E'
 10284  00FE36  6E                 	db	110	;'n'
 10285  00FE37  65                 	db	101	;'e'
 10286  00FE38  72                 	db	114	;'r'
 10287  00FE39  67                 	db	103	;'g'
 10288  00FE3A  79                 	db	121	;'y'
 10289  00FE3B  3F                 	db	63	;'?'
 10290  00FE3C  00                 	db	0
 10291  00FE3D                     STR_98:
 10292  00FE3D  44                 	db	68	;'D'
 10293  00FE3E  69                 	db	105	;'i'
 10294  00FE3F  73                 	db	115	;'s'
 10295  00FE40  61                 	db	97	;'a'
 10296  00FE41  62                 	db	98	;'b'
 10297  00FE42  6C                 	db	108	;'l'
 10298  00FE43  65                 	db	101	;'e'
 10299  00FE44  20                 	db	32
 10300  00FE45  44                 	db	68	;'D'
 10301  00FE46  69                 	db	105	;'i'
 10302  00FE47  6D                 	db	109	;'m'
 10303  00FE48  6D                 	db	109	;'m'
 10304  00FE49  69                 	db	105	;'i'
 10305  00FE4A  6E                 	db	110	;'n'
 10306  00FE4B  67                 	db	103	;'g'
 10307  00FE4C  00                 	db	0
 10308  00FE4D                     STR_71:
 10309  00FE4D  43                 	db	67	;'C'
 10310  00FE4E  6C                 	db	108	;'l'
 10311  00FE4F  65                 	db	101	;'e'
 10312  00FE50  61                 	db	97	;'a'
 10313  00FE51  72                 	db	114	;'r'
 10314  00FE52  20                 	db	32
 10315  00FE53  41                 	db	65	;'A'
 10316  00FE54  44                 	db	68	;'D'
 10317  00FE55  43                 	db	67	;'C'
 10318  00FE56  20                 	db	32
 10319  00FE57  45                 	db	69	;'E'
 10320  00FE58  72                 	db	114	;'r'
 10321  00FE59  72                 	db	114	;'r'
 10322  00FE5A  6F                 	db	111	;'o'
 10323  00FE5B  72                 	db	114	;'r'
 10324  00FE5C  00                 	db	0
 10325  00FE5D                     STR_157:
 10326  00FE5D  50                 	db	80	;'P'
 10327  00FE5E  6F                 	db	111	;'o'
 10328  00FE5F  77                 	db	119	;'w'
 10329  00FE60  65                 	db	101	;'e'
 10330  00FE61  72                 	db	114	;'r'
 10331  00FE62  20                 	db	32
 10332  00FE63  4F                 	db	79	;'O'
 10333  00FE64  6E                 	db	110	;'n'
 10334  00FE65  20                 	db	32
 10335  00FE66  52                 	db	82	;'R'
 10336  00FE67  65                 	db	101	;'e'
 10337  00FE68  73                 	db	115	;'s'
 10338  00FE69  65                 	db	101	;'e'
 10339  00FE6A  74                 	db	116	;'t'
 10340  00FE6B  00                 	db	0
 10341  00FE6C                     STR_78:
 10342  00FE6C  4D                 	db	77	;'M'
 10343  00FE6D  65                 	db	101	;'e'
 10344  00FE6E  61                 	db	97	;'a'
 10345  00FE6F  73                 	db	115	;'s'
 10346  00FE70  75                 	db	117	;'u'
 10347  00FE71  72                 	db	114	;'r'
 10348  00FE72  65                 	db	101	;'e'
 10349  00FE73  20                 	db	32
 10350  00FE74  50                 	db	80	;'P'
 10351  00FE75  4F                 	db	79	;'O'
 10352  00FE76  53                 	db	83	;'S'
 10353  00FE77  31                 	db	49	;'1'
 10354  00FE78  32                 	db	50	;'2'
 10355  00FE79  3F                 	db	63	;'?'
 10356  00FE7A  00                 	db	0
 10357  00FE7B                     STR_92:
 10358  00FE7B  4D                 	db	77	;'M'
 10359  00FE7C  65                 	db	101	;'e'
 10360  00FE7D  61                 	db	97	;'a'
 10361  00FE7E  73                 	db	115	;'s'
 10362  00FE7F  75                 	db	117	;'u'
 10363  00FE80  72                 	db	114	;'r'
 10364  00FE81  65                 	db	101	;'e'
 10365  00FE82  20                 	db	32
 10366  00FE83  50                 	db	80	;'P'
 10367  00FE84  6F                 	db	111	;'o'
 10368  00FE85  77                 	db	119	;'w'
 10369  00FE86  65                 	db	101	;'e'
 10370  00FE87  72                 	db	114	;'r'
 10371  00FE88  3F                 	db	63	;'?'
 10372  00FE89  00                 	db	0
 10373  00FE8A                     STR_96:
 10374  00FE8A  45                 	db	69	;'E'
 10375  00FE8B  6E                 	db	110	;'n'
 10376  00FE8C  61                 	db	97	;'a'
 10377  00FE8D  62                 	db	98	;'b'
 10378  00FE8E  6C                 	db	108	;'l'
 10379  00FE8F  65                 	db	101	;'e'
 10380  00FE90  20                 	db	32
 10381  00FE91  44                 	db	68	;'D'
 10382  00FE92  69                 	db	105	;'i'
 10383  00FE93  6D                 	db	109	;'m'
 10384  00FE94  6D                 	db	109	;'m'
 10385  00FE95  69                 	db	105	;'i'
 10386  00FE96  6E                 	db	110	;'n'
 10387  00FE97  67                 	db	103	;'g'
 10388  00FE98  00                 	db	0
 10389  00FE99                     STR_66:
 10390  00FE99  49                 	db	73	;'I'
 10391  00FE9A  6E                 	db	110	;'n'
 10392  00FE9B  74                 	db	116	;'t'
 10393  00FE9C  65                 	db	101	;'e'
 10394  00FE9D  72                 	db	114	;'r'
 10395  00FE9E  6E                 	db	110	;'n'
 10396  00FE9F  61                 	db	97	;'a'
 10397  00FEA0  6C                 	db	108	;'l'
 10398  00FEA1  20                 	db	32
 10399  00FEA2  44                 	db	68	;'D'
 10400  00FEA3  41                 	db	65	;'A'
 10401  00FEA4  43                 	db	67	;'C'
 10402  00FEA5  31                 	db	49	;'1'
 10403  00FEA6  00                 	db	0
 10404  00FEA7                     STR_84:
 10405  00FEA7  4D                 	db	77	;'M'
 10406  00FEA8  65                 	db	101	;'e'
 10407  00FEA9  61                 	db	97	;'a'
 10408  00FEAA  73                 	db	115	;'s'
 10409  00FEAB  75                 	db	117	;'u'
 10410  00FEAC  72                 	db	114	;'r'
 10411  00FEAD  65                 	db	101	;'e'
 10412  00FEAE  20                 	db	32
 10413  00FEAF  41                 	db	65	;'A'
 10414  00FEB0  56                 	db	86	;'V'
 10415  00FEB1  53                 	db	83	;'S'
 10416  00FEB2  53                 	db	83	;'S'
 10417  00FEB3  3F                 	db	63	;'?'
 10418  00FEB4  00                 	db	0
 10419  00FEB5                     STR_102:
 10420  00FEB5  4C                 	db	76	;'L'
 10421  00FEB6  6F                 	db	111	;'o'
 10422  00FEB7  61                 	db	97	;'a'
 10423  00FEB8  64                 	db	100	;'d'
 10424  00FEB9  20                 	db	32
 10425  00FEBA  45                 	db	69	;'E'
 10426  00FEBB  6E                 	db	110	;'n'
 10427  00FEBC  61                 	db	97	;'a'
 10428  00FEBD  62                 	db	98	;'b'
 10429  00FEBE  6C                 	db	108	;'l'
 10430  00FEBF  65                 	db	101	;'e'
 10431  00FEC0  64                 	db	100	;'d'
 10432  00FEC1  3F                 	db	63	;'?'
 10433  00FEC2  00                 	db	0
 10434  00FEC3                     STR_120:
 10435  00FEC3  4C                 	db	76	;'L'
 10436  00FEC4  6F                 	db	111	;'o'
 10437  00FEC5  61                 	db	97	;'a'
 10438  00FEC6  64                 	db	100	;'d'
 10439  00FEC7  20                 	db	32
 10440  00FEC8  4F                 	db	79	;'O'
 10441  00FEC9  6E                 	db	110	;'n'
 10442  00FECA  20                 	db	32
 10443  00FECB  54                 	db	84	;'T'
 10444  00FECC  69                 	db	105	;'i'
 10445  00FECD  6D                 	db	109	;'m'
 10446  00FECE  65                 	db	101	;'e'
 10447  00FECF  3F                 	db	63	;'?'
 10448  00FED0  00                 	db	0
 10449  00FED1                     STR_130:
 10450  00FED1  4D                 	db	77	;'M'
 10451  00FED2  61                 	db	97	;'a'
 10452  00FED3  78                 	db	120	;'x'
 10453  00FED4  20                 	db	32
 10454  00FED5  44                 	db	68	;'D'
 10455  00FED6  69                 	db	105	;'i'
 10456  00FED7  65                 	db	101	;'e'
 10457  00FED8  20                 	db	32
 10458  00FED9  54                 	db	84	;'T'
 10459  00FEDA  65                 	db	101	;'e'
 10460  00FEDB  6D                 	db	109	;'m'
 10461  00FEDC  70                 	db	112	;'p'
 10462  00FEDD  3F                 	db	63	;'?'
 10463  00FEDE  00                 	db	0
 10464  00FEDF                     STR_64:
 10465  00FEDF  49                 	db	73	;'I'
 10466  00FEE0  6E                 	db	110	;'n'
 10467  00FEE1  74                 	db	116	;'t'
 10468  00FEE2  65                 	db	101	;'e'
 10469  00FEE3  72                 	db	114	;'r'
 10470  00FEE4  6E                 	db	110	;'n'
 10471  00FEE5  61                 	db	97	;'a'
 10472  00FEE6  6C                 	db	108	;'l'
 10473  00FEE7  20                 	db	32
 10474  00FEE8  41                 	db	65	;'A'
 10475  00FEE9  56                 	db	86	;'V'
 10476  00FEEA  53                 	db	83	;'S'
 10477  00FEEB  53                 	db	83	;'S'
 10478  00FEEC  00                 	db	0
 10479  00FEED                     STR_65:
 10480  00FEED  49                 	db	73	;'I'
 10481  00FEEE  6E                 	db	110	;'n'
 10482  00FEEF  74                 	db	116	;'t'
 10483  00FEF0  65                 	db	101	;'e'
 10484  00FEF1  72                 	db	114	;'r'
 10485  00FEF2  6E                 	db	110	;'n'
 10486  00FEF3  61                 	db	97	;'a'
 10487  00FEF4  6C                 	db	108	;'l'
 10488  00FEF5  20                 	db	32
 10489  00FEF6  54                 	db	84	;'T'
 10490  00FEF7  65                 	db	101	;'e'
 10491  00FEF8  6D                 	db	109	;'m'
 10492  00FEF9  70                 	db	112	;'p'
 10493  00FEFA  00                 	db	0
 10494  00FEFB                     STR_154:
 10495  00FEFB  50                 	db	80	;'P'
 10496  00FEFC  49                 	db	73	;'I'
 10497  00FEFD  43                 	db	67	;'C'
 10498  00FEFE  31                 	db	49	;'1'
 10499  00FEFF  38                 	db	56	;'8'
 10500  00FF00  4C                 	db	76	;'L'
 10501  00FF01  46                 	db	70	;'F'
 10502  00FF02  36                 	db	54	;'6'
 10503  00FF03  37                 	db	55	;'7'
 10504  00FF04  4B                 	db	75	;'K'
 10505  00FF05  34                 	db	52	;'4'
 10506  00FF06  30                 	db	48	;'0'
 10507  00FF07  00                 	db	0
 10508  00FF08                     STR_55:
 10509  00FF08  52                 	db	82	;'R'
 10510  00FF09  65                 	db	101	;'e'
 10511  00FF0A  76                 	db	118	;'v'
 10512  00FF0B  69                 	db	105	;'i'
 10513  00FF0C  73                 	db	115	;'s'
 10514  00FF0D  69                 	db	105	;'i'
 10515  00FF0E  6F                 	db	111	;'o'
 10516  00FF0F  6E                 	db	110	;'n'
 10517  00FF10  20                 	db	32
 10518  00FF11  49                 	db	73	;'I'
 10519  00FF12  44                 	db	68	;'D'
 10520  00FF13  3F                 	db	63	;'?'
 10521  00FF14  00                 	db	0
 10522  00FF15                     STR_82:
 10523  00FF15  4D                 	db	77	;'M'
 10524  00FF16  65                 	db	101	;'e'
 10525  00FF17  61                 	db	97	;'a'
 10526  00FF18  73                 	db	115	;'s'
 10527  00FF19  75                 	db	117	;'u'
 10528  00FF1A  72                 	db	114	;'r'
 10529  00FF1B  65                 	db	101	;'e'
 10530  00FF1C  20                 	db	32
 10531  00FF1D  46                 	db	70	;'F'
 10532  00FF1E  56                 	db	86	;'V'
 10533  00FF1F  52                 	db	82	;'R'
 10534  00FF20  3F                 	db	63	;'?'
 10535  00FF21  00                 	db	0
 10536  00FF22                     STR_109:
 10537  00FF22  44                 	db	68	;'D'
 10538  00FF23  69                 	db	105	;'i'
 10539  00FF24  73                 	db	115	;'s'
 10540  00FF25  61                 	db	97	;'a'
 10541  00FF26  62                 	db	98	;'b'
 10542  00FF27  6C                 	db	108	;'l'
 10543  00FF28  65                 	db	101	;'e'
 10544  00FF29  20                 	db	32
 10545  00FF2A  4C                 	db	76	;'L'
 10546  00FF2B  6F                 	db	111	;'o'
 10547  00FF2C  61                 	db	97	;'a'
 10548  00FF2D  64                 	db	100	;'d'
 10549  00FF2E  00                 	db	0
 10550  00FF2F                     STR_153:
 10551  00FF2F  50                 	db	80	;'P'
 10552  00FF30  49                 	db	73	;'I'
 10553  00FF31  43                 	db	67	;'C'
 10554  00FF32  31                 	db	49	;'1'
 10555  00FF33  38                 	db	56	;'8'
 10556  00FF34  46                 	db	70	;'F'
 10557  00FF35  36                 	db	54	;'6'
 10558  00FF36  37                 	db	55	;'7'
 10559  00FF37  4B                 	db	75	;'K'
 10560  00FF38  34                 	db	52	;'4'
 10561  00FF39  30                 	db	48	;'0'
 10562  00FF3A  00                 	db	0
 10563  00FF3B                     STR_100:
 10564  00FF3B  45                 	db	69	;'E'
 10565  00FF3C  6E                 	db	110	;'n'
 10566  00FF3D  61                 	db	97	;'a'
 10567  00FF3E  62                 	db	98	;'b'
 10568  00FF3F  6C                 	db	108	;'l'
 10569  00FF40  65                 	db	101	;'e'
 10570  00FF41  20                 	db	32
 10571  00FF42  4C                 	db	76	;'L'
 10572  00FF43  6F                 	db	111	;'o'
 10573  00FF44  61                 	db	97	;'a'
 10574  00FF45  64                 	db	100	;'d'
 10575  00FF46  00                 	db	0
 10576  00FF47                     STR_53:
 10577  00FF47  44                 	db	68	;'D'
 10578  00FF48  65                 	db	101	;'e'
 10579  00FF49  76                 	db	118	;'v'
 10580  00FF4A  69                 	db	105	;'i'
 10581  00FF4B  63                 	db	99	;'c'
 10582  00FF4C  65                 	db	101	;'e'
 10583  00FF4D  20                 	db	32
 10584  00FF4E  49                 	db	73	;'I'
 10585  00FF4F  44                 	db	68	;'D'
 10586  00FF50  3F                 	db	63	;'?'
 10587  00FF51  00                 	db	0
 10588  00FF52                     STR_124:
 10589  00FF52  4D                 	db	77	;'M'
 10590  00FF53  61                 	db	97	;'a'
 10591  00FF54  78                 	db	120	;'x'
 10592  00FF55  20                 	db	32
 10593  00FF56  50                 	db	80	;'P'
 10594  00FF57  6F                 	db	111	;'o'
 10595  00FF58  77                 	db	119	;'w'
 10596  00FF59  65                 	db	101	;'e'
 10597  00FF5A  72                 	db	114	;'r'
 10598  00FF5B  3F                 	db	63	;'?'
 10599  00FF5C  00                 	db	0
 10600  00FF5D                     STR_60:
 10601  00FF5D  41                 	db	65	;'A'
 10602  00FF5E  44                 	db	68	;'D'
 10603  00FF5F  43                 	db	67	;'C'
 10604  00FF60  20                 	db	32
 10605  00FF61  45                 	db	69	;'E'
 10606  00FF62  72                 	db	114	;'r'
 10607  00FF63  72                 	db	114	;'r'
 10608  00FF64  6F                 	db	111	;'o'
 10609  00FF65  72                 	db	114	;'r'
 10610  00FF66  3F                 	db	63	;'?'
 10611  00FF67  00                 	db	0
 10612  00FF68                     STR_57:
 10613  00FF68  55                 	db	85	;'U'
 10614  00FF69  73                 	db	115	;'s'
 10615  00FF6A  65                 	db	101	;'e'
 10616  00FF6B  72                 	db	114	;'r'
 10617  00FF6C  20                 	db	32
 10618  00FF6D  49                 	db	73	;'I'
 10619  00FF6E  44                 	db	68	;'D'
 10620  00FF6F  73                 	db	115	;'s'
 10621  00FF70  3F                 	db	63	;'?'
 10622  00FF71  00                 	db	0
 10623  00FF72                     STR_68:
 10624  00FF72  55                 	db	85	;'U'
 10625  00FF73  6E                 	db	110	;'n'
 10626  00FF74  64                 	db	100	;'d'
 10627  00FF75  65                 	db	101	;'e'
 10628  00FF76  66                 	db	102	;'f'
 10629  00FF77  69                 	db	105	;'i'
 10630  00FF78  6E                 	db	110	;'n'
 10631  00FF79  65                 	db	101	;'e'
 10632  00FF7A  64                 	db	100	;'d'
 10633  00FF7B  00                 	db	0
 10634  00FF7C                     STR_144:
 10635  00FF7C  48                 	db	72	;'H'
 10636  00FF7D  65                 	db	101	;'e'
 10637  00FF7E  6C                 	db	108	;'l'
 10638  00FF7F  70                 	db	112	;'p'
 10639  00FF80  20                 	db	32
 10640  00FF81  41                 	db	65	;'A'
 10641  00FF82  6C                 	db	108	;'l'
 10642  00FF83  6C                 	db	108	;'l'
 10643  00FF84  00                 	db	0
 10644  00FF85                     STR_166:
 10645  00FF85  28                 	db	40
 10646  00FF86  6E                 	db	110	;'n'
 10647  00FF87  75                 	db	117	;'u'
 10648  00FF88  6C                 	db	108	;'l'
 10649  00FF89  6C                 	db	108	;'l'
 10650  00FF8A  29                 	db	41
 10651  00FF8B  00                 	db	0
 10652  00FF8C                     STR_63:
 10653  00FF8C  50                 	db	80	;'P'
 10654  00FF8D  4F                 	db	79	;'O'
 10655  00FF8E  53                 	db	83	;'S'
 10656  00FF8F  33                 	db	51	;'3'
 10657  00FF90  50                 	db	80	;'P'
 10658  00FF91  33                 	db	51	;'3'
 10659  00FF92  00                 	db	0
 10660  00FF93                     STR_62:
 10661  00FF93  50                 	db	80	;'P'
 10662  00FF94  4F                 	db	79	;'O'
 10663  00FF95  53                 	db	83	;'S'
 10664  00FF96  31                 	db	49	;'1'
 10665  00FF97  32                 	db	50	;'2'
 10666  00FF98  00                 	db	0
 10667  00FF99                     STR_49:
 10668  00FF99  2A                 	db	42
 10669  00FF9A  49                 	db	73	;'I'
 10670  00FF9B  44                 	db	68	;'D'
 10671  00FF9C  4E                 	db	78	;'N'
 10672  00FF9D  3F                 	db	63	;'?'
 10673  00FF9E  00                 	db	0
 10674  00FF9F                     STR_44:
 10675  00FF9F  43                 	db	67	;'C'
 10676  00FFA0  6C                 	db	108	;'l'
 10677  00FFA1  65                 	db	101	;'e'
 10678  00FFA2  61                 	db	97	;'a'
 10679  00FFA3  72                 	db	114	;'r'
 10680  00FFA4  00                 	db	0
 10681  00FFA5                     STR_61:
 10682  00FFA5  49                 	db	73	;'I'
 10683  00FFA6  53                 	db	83	;'S'
 10684  00FFA7  4E                 	db	78	;'N'
 10685  00FFA8  53                 	db	83	;'S'
 10686  00FFA9  00                 	db	0
 10687  00FFAA                     STR_146:
 10688  00FFAA  48                 	db	72	;'H'
 10689  00FFAB  65                 	db	101	;'e'
 10690  00FFAC  6C                 	db	108	;'l'
 10691  00FFAD  70                 	db	112	;'p'
 10692  00FFAE  00                 	db	0
 10693  00FFAF                     STR_2:
 10694  00FFAF  1B                 	db	27
 10695  00FFB0  5B                 	db	91	;'['
 10696  00FFB1  32                 	db	50	;'2'
 10697  00FFB2  4A                 	db	74	;'J'
 10698  00FFB3  00                 	db	0
 10699  00FFB4                     STR_50:
 10700  00FFB4  49                 	db	73	;'I'
 10701  00FFB5  44                 	db	68	;'D'
 10702  00FFB6  4E                 	db	78	;'N'
 10703  00FFB7  00                 	db	0
 10704  00FFB8                     STR_3:
 10705  00FFB8  1B                 	db	27
 10706  00FFB9  5B                 	db	91	;'['
 10707  00FFBA  48                 	db	72	;'H'
 10708  00FFBB  00                 	db	0
 10709  00FFBC  1B                 	db	27
 10710  00FFBD  5B                 	db	91	;'['
 10711  00FFBE  73                 	db	115	;'s'
 10712  00FFBF  00                 	db	0
 10713  00FFC0  1B                 	db	27
 10714  00FFC1  5B                 	db	91	;'['
 10715  00FFC2  75                 	db	117	;'u'
 10716  00FFC3  00                 	db	0
 10717  00FFC4                     STR_1:
 10718  00FFC4  1B                 	db	27
 10719  00FFC5  5B                 	db	91	;'['
 10720  00FFC6  4B                 	db	75	;'K'
 10721  00FFC7  00                 	db	0
 10722  00FFC8                     STR_20:
 10723  00FFC8  33                 	db	51	;'3'
 10724  00FFC9  30                 	db	48	;'0'
 10725  00FFCA  00                 	db	0
 10726  00FFCB                     STR_21:
 10727  00FFCB  33                 	db	51	;'3'
 10728  00FFCC  31                 	db	49	;'1'
 10729  00FFCD  00                 	db	0
 10730  00FFCE                     STR_31:
 10731  00FFCE  34                 	db	52	;'4'
 10732  00FFCF  31                 	db	49	;'1'
 10733  00FFD0  00                 	db	0
 10734  00FFD1                     STR_22:
 10735  00FFD1  33                 	db	51	;'3'
 10736  00FFD2  32                 	db	50	;'2'
 10737  00FFD3  00                 	db	0
 10738  00FFD4                     STR_32:
 10739  00FFD4  34                 	db	52	;'4'
 10740  00FFD5  32                 	db	50	;'2'
 10741  00FFD6  00                 	db	0
 10742  00FFD7                     STR_23:
 10743  00FFD7  33                 	db	51	;'3'
 10744  00FFD8  33                 	db	51	;'3'
 10745  00FFD9  00                 	db	0
 10746  00FFDA                     STR_33:
 10747  00FFDA  34                 	db	52	;'4'
 10748  00FFDB  33                 	db	51	;'3'
 10749  00FFDC  00                 	db	0
 10750  00FFDD                     STR_24:
 10751  00FFDD  33                 	db	51	;'3'
 10752  00FFDE  34                 	db	52	;'4'
 10753  00FFDF  00                 	db	0
 10754  00FFE0                     STR_34:
 10755  00FFE0  34                 	db	52	;'4'
 10756  00FFE1  34                 	db	52	;'4'
 10757  00FFE2  00                 	db	0
 10758  00FFE3                     STR_25:
 10759  00FFE3  33                 	db	51	;'3'
 10760  00FFE4  35                 	db	53	;'5'
 10761  00FFE5  00                 	db	0
 10762  00FFE6                     STR_35:
 10763  00FFE6  34                 	db	52	;'4'
 10764  00FFE7  35                 	db	53	;'5'
 10765  00FFE8  00                 	db	0
 10766  00FFE9                     STR_26:
 10767  00FFE9  33                 	db	51	;'3'
 10768  00FFEA  36                 	db	54	;'6'
 10769  00FFEB  00                 	db	0
 10770  00FFEC                     STR_36:
 10771  00FFEC  34                 	db	52	;'4'
 10772  00FFED  36                 	db	54	;'6'
 10773  00FFEE  00                 	db	0
 10774  00FFEF                     STR_27:
 10775  00FFEF  33                 	db	51	;'3'
 10776  00FFF0  37                 	db	55	;'7'
 10777  00FFF1  00                 	db	0
 10778  00FFF2                     STR_37:
 10779  00FFF2  34                 	db	52	;'4'
 10780  00FFF3  37                 	db	55	;'7'
 10781  00FFF4  00                 	db	0
 10782  00FFF5                     STR_11:
 10783  00FFF5  1B                 	db	27
 10784  00FFF6  5B                 	db	91	;'['
 10785  00FFF7  00                 	db	0
 10786  00FFF8                     STR_17:
 10787  00FFF8  38                 	db	56	;'8'
 10788  00FFF9  00                 	db	0
 10789  00FFFA                     STR_19:
 10790  00FFFA  3B                 	db	59	;';'
 10791  00FFFB  00                 	db	0
 10792  00FFFC                     STR_39:
 10793  00FFFC  6D                 	db	109	;'m'
 10794  00FFFD  00                 	db	0
 10795  0000                     
 10796                           ; #config settings
 10797  00FFFE  00                 	db	0	; dummy byte at the end
 10798  0000                     
 10799                           	psect	nvBANK2
 10800  0002FE                     __pnvBANK2:
 10801                           	opt stack 0
 10802  0002FE                     _reset_cause:
 10803                           	opt stack 0
 10804  0002FE                     	ds	1
 10805  0000                     _INT0PPS	set	3568
 10806  0000                     _HLVDCON0bits	set	3778
 10807  0000                     _HLVDCON0	set	3778
 10808  0000                     _HLVDCON1	set	3779
 10809  0000                     _PIR8bits	set	3643
 10810  0000                     _FVRCONbits	set	3780
 10811  0000                     _FVRCON	set	3780
 10812  0000                     _RC2REG	set	3825
 10813  0000                     _RC2STAbits	set	3829
 10814  0000                     _TX2REG	set	3826
 10815  0000                     _TX2STAbits	set	3830
 10816  0000                     _SP2BRGH	set	3828
 10817  0000                     _SP2BRGL	set	3827
 10818  0000                     _TX2STA	set	3830
 10819  0000                     _RC2STA	set	3829
 10820  0000                     _BAUD2CON	set	3831
 10821  0000                     _PIR1bits	set	3636
 10822  0000                     _PIE1bits	set	3626
 10823  0000                     _PIR5bits	set	3640
 10824  0000                     _PIE5bits	set	3630
 10825  0000                     _PIR3bits	set	3638
 10826  0000                     _PIE3bits	set	3628
 10827  0000                     _PIR0bits	set	3635
 10828  0000                     _PIE0bits	set	3625
 10829  0000                     _PIR2bits	set	3637
 10830  0000                     _PIE2bits	set	3627
 10831  0000                     _IPR1bits	set	3616
 10832  0000                     _IPR5bits	set	3620
 10833  0000                     _IPR3bits	set	3618
 10834  0000                     _IPR0bits	set	3615
 10835  0000                     _IPR2bits	set	3617
 10836  0000                     _RX2PPS	set	3601
 10837  0000                     _RG7PPS	set	3721
 10838  0000                     _SLRCONH	set	3774
 10839  0000                     _SLRCONG	set	3769
 10840  0000                     _SLRCONF	set	3761
 10841  0000                     _SLRCONE	set	3756
 10842  0000                     _SLRCOND	set	3748
 10843  0000                     _SLRCONC	set	3743
 10844  0000                     _SLRCONB	set	3735
 10845  0000                     _SLRCONA	set	3727
 10846  0000                     _ODCOND	set	3749
 10847  0000                     _ODCONC	set	3744
 10848  0000                     _ODCONH	set	3775
 10849  0000                     _ODCONB	set	3736
 10850  0000                     _ODCONG	set	3770
 10851  0000                     _ODCONA	set	3728
 10852  0000                     _ODCONF	set	3762
 10853  0000                     _ODCONE	set	3757
 10854  0000                     _WPUH	set	3776
 10855  0000                     _WPUC	set	3745
 10856  0000                     _WPUA	set	3729
 10857  0000                     _WPUG	set	3771
 10858  0000                     _WPUB	set	3737
 10859  0000                     _WPUE	set	3758
 10860  0000                     _WPUF	set	3763
 10861  0000                     _WPUD	set	3750
 10862  0000                     _ANSELA	set	3730
 10863  0000                     _ANSELF	set	3764
 10864  0000                     _ANSELG	set	3772
 10865  0000                     _ANSELE	set	3759
 10866  0000                     _ANSELB	set	3738
 10867  0000                     _ANSELD	set	3751
 10868  0000                     _PMD5	set	3665
 10869  0000                     _PMD4	set	3664
 10870  0000                     _PMD3	set	3663
 10871  0000                     _PMD2	set	3662
 10872  0000                     _PMD1	set	3661
 10873  0000                     _PMD0	set	3660
 10874  0000                     _OSCTUNE	set	3656
 10875  0000                     _OSCFRQ	set	3657
 10876  0000                     _OSCEN	set	3655
 10877  0000                     _OSCCON3	set	3653
 10878  0000                     _OSCCON1	set	3651
 10879  0000                     _PLLR	set	29232
 10880  0000                     _T7GCONbits	set	3889
 10881  0000                     _T7CONbits	set	3888
 10882  0000                     _T7CON	set	3888
 10883  0000                     _TMR7L	set	3886
 10884  0000                     _TMR7H	set	3887
 10885  0000                     _T7CLK	set	3891
 10886  0000                     _T7GATE	set	3890
 10887  0000                     _T7GCON	set	3889
 10888  0000                     _ADCON1bits	set	3929
 10889  0000                     _ADCON2bits	set	3930
 10890  0000                     _ADPRE	set	3934
 10891  0000                     _ADCON3bits	set	3931
 10892  0000                     _ADACQ	set	3932
 10893  0000                     _ADCLK	set	3927
 10894  0000                     _ADACT	set	3926
 10895  0000                     _ADREF	set	3928
 10896  0000                     _ADCON3	set	3931
 10897  0000                     _ADCON2	set	3930
 10898  0000                     _ADCON1	set	3929
 10899  0000                     _ADCAP	set	3933
 10900  0000                     _ADPCH	set	3935
 10901  0000                     _PCON0bits	set	4055
 10902  0000                     _LATGbits	set	3967
 10903  0000                     _NVMDAT	set	3958
 10904  0000                     _NVMADRL	set	3956
 10905  0000                     _NVMADRH	set	3957
 10906  0000                     _NVMCON2	set	3960
 10907  0000                     _TABLAT	set	4085
 10908  0000                     _TBLPTRL	set	4086
 10909  0000                     _TBLPTRH	set	4087
 10910  0000                     _TBLPTRU	set	4088
 10911  0000                     _NVMCON1bits	set	3959
 10912  0000                     _T5GCONbits	set	4036
 10913  0000                     _T5CONbits	set	4035
 10914  0000                     _T5CON	set	4035
 10915  0000                     _TMR5L	set	4033
 10916  0000                     _TMR5H	set	4034
 10917  0000                     _T5CLK	set	4038
 10918  0000                     _T5GATE	set	4037
 10919  0000                     _T5GCON	set	4036
 10920  0000                     _ADERRL	set	3950
 10921  0000                     _ADERRH	set	3951
 10922  0000                     _ADPREVL	set	3937
 10923  0000                     _ADPREVH	set	3938
 10924  0000                     _ADFLTRL	set	3954
 10925  0000                     _ADFLTRH	set	3955
 10926  0000                     _ADSTATbits	set	3941
 10927  0000                     _ADACCL	set	3952
 10928  0000                     _ADACCH	set	3953
 10929  0000                     _ADCNT	set	3943
 10930  0000                     _ADRESL	set	3939
 10931  0000                     _ADRESH	set	3940
 10932  0000                     _ADCON0bits	set	3936
 10933  0000                     _ADCON0	set	3936
 10934  0000                     _ADSTAT	set	3941
 10935  0000                     _ADRPT	set	3942
 10936  0000                     _ADSTPTH	set	3945
 10937  0000                     _ADSTPTL	set	3944
 10938  0000                     _ADUTHH	set	3949
 10939  0000                     _ADUTHL	set	3948
 10940  0000                     _ADLTHH	set	3947
 10941  0000                     _ADLTHL	set	3946
 10942  0000                     _LATFbits	set	3966
 10943  0000                     _PR6	set	4016
 10944  0000                     _TMR6	set	4015
 10945  0000                     _T6CONbits	set	4017
 10946  0000                     _T6RSTbits	set	4020
 10947  0000                     _T6HLTbits	set	4018
 10948  0000                     _T6CON	set	4017
 10949  0000                     _T6TMR	set	4015
 10950  0000                     _T6PR	set	4016
 10951  0000                     _T6RST	set	4020
 10952  0000                     _T6HLT	set	4018
 10953  0000                     _T6CLKCON	set	4019
 10954  0000                     _INTCONbits	set	4082
 10955  0000                     _TRISD	set	3972
 10956  0000                     _TRISC	set	3971
 10957  0000                     _TRISH	set	3976
 10958  0000                     _TRISB	set	3970
 10959  0000                     _TRISG	set	3975
 10960  0000                     _TRISA	set	3969
 10961  0000                     _TRISF	set	3974
 10962  0000                     _TRISE	set	3973
 10963  0000                     _LATH	set	3968
 10964  0000                     _LATC	set	3963
 10965  0000                     _LATG	set	3967
 10966  0000                     _LATB	set	3962
 10967  0000                     _LATF	set	3966
 10968  0000                     _LATA	set	3961
 10969  0000                     _LATD	set	3964
 10970  0000                     _LATE	set	3965
 10971                           
 10972                           	psect	cinit
 10973  018256                     __pcinit:
 10974                           	opt stack 0
 10975  018256                     start_initialization:
 10976                           	opt stack 0
 10977  018256                     __initialization:
 10978                           	opt stack 0
 10979                           
 10980                           ; Initialize objects allocated to BANK2 (36 bytes)
 10981                           ; load TBLPTR registers with __pidataBANK2
 10982  018256  0EFA               	movlw	low __pidataBANK2
 10983  018258  6EF6               	movwf	tblptrl,c
 10984  01825A  0E93               	movlw	high __pidataBANK2
 10985  01825C  6EF7               	movwf	tblptrh,c
 10986  01825E  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 10987  018260  6EF8               	movwf	tblptru,c
 10988  018262  EE02  F0DA         	lfsr	0,__pdataBANK2
 10989  018266  EE10 F024          	lfsr	1,36
 10990  01826A                     copy_data0:
 10991  01826A  0009               	tblrd		*+
 10992  01826C  CFF5 FFEE          	movff	tablat,postinc0
 10993  018270  50E5               	movf	postdec1,w,c
 10994  018272  50E1               	movf	fsr1l,w,c
 10995  018274  E1FA               	bnz	copy_data0
 10996                           
 10997                           ; Initialize objects allocated to BANK1 (1 bytes)
 10998                           ; load TBLPTR registers with __pidataBANK1
 10999  018276  0EEE               	movlw	low __pidataBANK1
 11000  018278  6EF6               	movwf	tblptrl,c
 11001  01827A  0E96               	movlw	high __pidataBANK1
 11002  01827C  6EF7               	movwf	tblptrh,c
 11003  01827E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
 11004  018280  6EF8               	movwf	tblptru,c
 11005  018282  0009               	tblrd		*+	;fetch initializer
 11006  018284  CFF5 F1E8          	movff	tablat,__pdataBANK1
 11007                           
 11008                           ; Initialize objects allocated to BANK0 (6 bytes)
 11009                           ; load TBLPTR registers with __pidataBANK0
 11010  018288  0EBC               	movlw	low __pidataBANK0
 11011  01828A  6EF6               	movwf	tblptrl,c
 11012  01828C  0E96               	movlw	high __pidataBANK0
 11013  01828E  6EF7               	movwf	tblptrh,c
 11014  018290  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 11015  018292  6EF8               	movwf	tblptru,c
 11016  018294  EE00  F0F0         	lfsr	0,__pdataBANK0
 11017  018298  EE10 F006          	lfsr	1,6
 11018  01829C                     copy_data1:
 11019  01829C  0009               	tblrd		*+
 11020  01829E  CFF5 FFEE          	movff	tablat,postinc0
 11021  0182A2  50E5               	movf	postdec1,w,c
 11022  0182A4  50E1               	movf	fsr1l,w,c
 11023  0182A6  E1FA               	bnz	copy_data1
 11024                           
 11025                           ; Clear objects allocated to BANK3 (192 bytes)
 11026  0182A8  EE03  F000         	lfsr	0,__pbssBANK3
 11027  0182AC  0EC0               	movlw	192
 11028  0182AE                     clear_0:
 11029  0182AE  6AEE               	clrf	postinc0,c
 11030  0182B0  06E8               	decf	wreg,f,c
 11031  0182B2  E1FD               	bnz	clear_0
 11032                           
 11033                           ; Clear objects allocated to BANK2 (135 bytes)
 11034  0182B4  EE02  F000         	lfsr	0,__pbssBANK2
 11035  0182B8  0E87               	movlw	135
 11036  0182BA                     clear_1:
 11037  0182BA  6AEE               	clrf	postinc0,c
 11038  0182BC  06E8               	decf	wreg,f,c
 11039  0182BE  E1FD               	bnz	clear_1
 11040                           
 11041                           ; Clear objects allocated to BANK1 (45 bytes)
 11042  0182C0  EE01  F0BB         	lfsr	0,__pbssBANK1
 11043  0182C4  0E2D               	movlw	45
 11044  0182C6                     clear_2:
 11045  0182C6  6AEE               	clrf	postinc0,c
 11046  0182C8  06E8               	decf	wreg,f,c
 11047  0182CA  E1FD               	bnz	clear_2
 11048                           
 11049                           ; Clear objects allocated to BITBANK0 (1 bytes)
 11050  0182CC  0100               	movlb	0
 11051  0182CE  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
 11052                           
 11053                           ; Clear objects allocated to BANK0 (5 bytes)
 11054  0182D0  0100               	movlb	0
 11055  0182D2  6BFA               	clrf	(__pbssBANK0+4)& (0+255),b
 11056  0182D4  6BF9               	clrf	(__pbssBANK0+3)& (0+255),b
 11057  0182D6  6BF8               	clrf	(__pbssBANK0+2)& (0+255),b
 11058  0182D8  6BF7               	clrf	(__pbssBANK0+1)& (0+255),b
 11059  0182DA  6BF6               	clrf	__pbssBANK0& (0+255),b
 11060                           
 11061                           ; Clear objects allocated to BITCOMRAM (1 bytes)
 11062  0182DC  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
 11063  0182DE                     end_of_initialization:
 11064                           	opt stack 0
 11065  0182DE                     __end_of__initialization:
 11066                           	opt stack 0
 11067  0182DE  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 11068  0182E0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11069  0182E2  0100               	movlb	0
 11070  0182E4  EF20  F0C0         	goto	_main	;jump to C main() function
 11071                           tblptru	equ	0xFF8
 11072                           tblptrh	equ	0xFF7
 11073                           tblptrl	equ	0xFF6
 11074                           tablat	equ	0xFF5
 11075                           postinc0	equ	0xFEE
 11076                           wreg	equ	0xFE8
 11077                           postdec1	equ	0xFE5
 11078                           fsr1l	equ	0xFE1
 11079                           
 11080                           	psect	bitbssCOMRAM
 11081  0002F0                     __pbitbssCOMRAM:
 11082                           	opt stack 0
 11083  0002F0                     _VCC_overvoltage_flag:
 11084                           	opt stack 0
 11085  0002F0                     	ds	1
 11086  0002F1                     _adc_error_flag:
 11087                           	opt stack 0
 11088  0002F1                     	ds	1
 11089  0002F2                     _load_enable:
 11090                           	opt stack 0
 11091  0002F2                     	ds	1
 11092                           tblptru	equ	0xFF8
 11093                           tblptrh	equ	0xFF7
 11094                           tblptrl	equ	0xFF6
 11095                           tablat	equ	0xFF5
 11096                           postinc0	equ	0xFEE
 11097                           wreg	equ	0xFE8
 11098                           postdec1	equ	0xFE5
 11099                           fsr1l	equ	0xFE1
 11100                           
 11101                           	psect	bitbssBANK0
 11102  0007D8                     __pbitbssBANK0:
 11103                           	opt stack 0
 11104  0007D8                     _eusart2RxStringReady:
 11105                           	opt stack 0
 11106  0007D8                     	ds	1
 11107                           tblptru	equ	0xFF8
 11108                           tblptrh	equ	0xFF7
 11109                           tblptrl	equ	0xFF6
 11110                           tablat	equ	0xFF5
 11111                           postinc0	equ	0xFEE
 11112                           wreg	equ	0xFE8
 11113                           postdec1	equ	0xFE5
 11114                           fsr1l	equ	0xFE1
 11115                           
 11116                           	psect	bssBANK0
 11117  0000F6                     __pbssBANK0:
 11118                           	opt stack 0
 11119  0000F6                     _Total_Energy:
 11120                           	opt stack 0
 11121  0000F6                     	ds	4
 11122  0000FA                     _eusart2RxHead:
 11123                           	opt stack 0
 11124  0000FA                     	ds	1
 11125                           tblptru	equ	0xFF8
 11126                           tblptrh	equ	0xFF7
 11127                           tblptrl	equ	0xFF6
 11128                           tablat	equ	0xFF5
 11129                           postinc0	equ	0xFEE
 11130                           wreg	equ	0xFE8
 11131                           postdec1	equ	0xFE5
 11132                           fsr1l	equ	0xFE1
 11133                           
 11134                           	psect	dataBANK0
 11135  0000F0                     __pdataBANK0:
 11136                           	opt stack 0
 11137  0000F0                     _dimming_period:
 11138                           	opt stack 0
 11139  0000F0                     	ds	2
 11140  0000F2                     _TRIAC_Firing_Angle:
 11141                           	opt stack 0
 11142  0000F2                     	ds	4
 11143                           tblptru	equ	0xFF8
 11144                           tblptrh	equ	0xFF7
 11145                           tblptrl	equ	0xFF6
 11146                           tablat	equ	0xFF5
 11147                           postinc0	equ	0xFEE
 11148                           wreg	equ	0xFE8
 11149                           postdec1	equ	0xFE5
 11150                           fsr1l	equ	0xFE1
 11151                           
 11152                           	psect	bssBANK1
 11153  0001BB                     __pbssBANK1:
 11154                           	opt stack 0
 11155  0001BB                     _Avg_Power:
 11156                           	opt stack 0
 11157  0001BB                     	ds	4
 11158  0001BF                     _Vrms:
 11159                           	opt stack 0
 11160  0001BF                     	ds	4
 11161  0001C3                     _Irms:
 11162                           	opt stack 0
 11163  0001C3                     	ds	4
 11164  0001C7                     _Imeas:
 11165                           	opt stack 0
 11166  0001C7                     	ds	4
 11167  0001CB                     _Ipk:
 11168                           	opt stack 0
 11169  0001CB                     	ds	4
 11170  0001CF                     _Temp_ADC_Result:
 11171                           	opt stack 0
 11172  0001CF                     	ds	4
 11173  0001D3                     _POS12_ADC_Result:
 11174                           	opt stack 0
 11175  0001D3                     	ds	4
 11176  0001D7                     _POS3P3_ADC_Result:
 11177                           	opt stack 0
 11178  0001D7                     	ds	4
 11179  0001DB                     _AVSS_ADC_Result:
 11180                           	opt stack 0
 11181  0001DB                     	ds	4
 11182  0001DF                     _eusart2RxCount:
 11183                           	opt stack 0
 11184  0001DF                     	ds	1
 11185  0001E0                     _eusart2RxTail:
 11186                           	opt stack 0
 11187  0001E0                     	ds	1
 11188  0001E1                     _eusart2TxBufferRemaining:
 11189                           	opt stack 0
 11190  0001E1                     	ds	1
 11191  0001E2                     _eusart2TxTail:
 11192                           	opt stack 0
 11193  0001E2                     	ds	1
 11194  0001E3                     _eusart2TxHead:
 11195                           	opt stack 0
 11196  0001E3                     	ds	1
 11197  0001E4                     _FVR_ADC_Result:
 11198                           	opt stack 0
 11199  0001E4                     	ds	4
 11200                           tblptru	equ	0xFF8
 11201                           tblptrh	equ	0xFF7
 11202                           tblptrl	equ	0xFF6
 11203                           tablat	equ	0xFF5
 11204                           postinc0	equ	0xFEE
 11205                           wreg	equ	0xFE8
 11206                           postdec1	equ	0xFE5
 11207                           fsr1l	equ	0xFE1
 11208                           
 11209                           	psect	dataBANK1
 11210  0001E8                     __pdataBANK1:
 11211                           	opt stack 0
 11212  0001E8                     _next_channel:
 11213                           	opt stack 0
 11214  0001E8                     	ds	1
 11215                           tblptru	equ	0xFF8
 11216                           tblptrh	equ	0xFF7
 11217                           tblptrl	equ	0xFF6
 11218                           tablat	equ	0xFF5
 11219                           postinc0	equ	0xFEE
 11220                           wreg	equ	0xFE8
 11221                           postdec1	equ	0xFE5
 11222                           fsr1l	equ	0xFE1
 11223                           
 11224                           	psect	bssBANK2
 11225  000200                     __pbssBANK2:
 11226                           	opt stack 0
 11227  000200                     _max_FVR_ADC_Result:
 11228                           	opt stack 0
 11229  000200                     	ds	4
 11230  000204                     _max_Temp_ADC_Result:
 11231                           	opt stack 0
 11232  000204                     	ds	4
 11233  000208                     _max_POS12_ADC_Result:
 11234                           	opt stack 0
 11235  000208                     	ds	4
 11236  00020C                     _max_POS3P3_ADC_Result:
 11237                           	opt stack 0
 11238  00020C                     	ds	4
 11239  000210                     _max_Power:
 11240                           	opt stack 0
 11241  000210                     	ds	4
 11242  000214                     _max_Irms:
 11243                           	opt stack 0
 11244  000214                     	ds	4
 11245  000218                     _load_on_time:
 11246                           	opt stack 0
 11247  000218                     	ds	4
 11248  00021C                     _dev_on_time:
 11249                           	opt stack 0
 11250  00021C                     	ds	4
 11251  000220                     _Vpk:
 11252                           	opt stack 0
 11253  000220                     	ds	4
 11254  000224                     _ADC_Result_Scaling:
 11255                           	opt stack 0
 11256  000224                     	ds	4
 11257  000228                     _INT0_InterruptHandler:
 11258                           	opt stack 0
 11259  000228                     	ds	3
 11260  00022B                     _TMR5_InterruptHandler:
 11261                           	opt stack 0
 11262  00022B                     	ds	3
 11263  00022E                     _TMR7_InterruptHandler:
 11264                           	opt stack 0
 11265  00022E                     	ds	3
 11266  000231                     _ADCC_ADTI_InterruptHandler:
 11267                           	opt stack 0
 11268  000231                     	ds	3
 11269  000234                     _TMR6_InterruptHandler:
 11270                           	opt stack 0
 11271  000234                     	ds	3
 11272  000237                     _EUSART2_RxDefaultInterruptHandler:
 11273                           	opt stack 0
 11274  000237                     	ds	3
 11275  00023A                     _EUSART2_TxDefaultInterruptHandler:
 11276                           	opt stack 0
 11277  00023A                     	ds	3
 11278  00023D                     _errno:
 11279                           	opt stack 0
 11280  00023D                     	ds	2
 11281  00023F                     _timer5ReloadVal:
 11282                           	opt stack 0
 11283  00023F                     	ds	2
 11284  000241                     _timer7ReloadVal:
 11285                           	opt stack 0
 11286  000241                     	ds	2
 11287  000243                     _current_adc_channel:
 11288                           	opt stack 0
 11289  000243                     	ds	1
 11290  000244                     _background_color:
 11291                           	opt stack 0
 11292  000244                     	ds	1
 11293  000245                     _foreground_color:
 11294                           	opt stack 0
 11295  000245                     	ds	1
 11296  000246                     _attribute:
 11297                           	opt stack 0
 11298  000246                     	ds	1
 11299  000247                     _line:
 11300                           	opt stack 0
 11301  000247                     	ds	64
 11302                           tblptru	equ	0xFF8
 11303                           tblptrh	equ	0xFF7
 11304                           tblptrl	equ	0xFF6
 11305                           tablat	equ	0xFF5
 11306                           postinc0	equ	0xFEE
 11307                           wreg	equ	0xFE8
 11308                           postdec1	equ	0xFE5
 11309                           fsr1l	equ	0xFE1
 11310                           
 11311                           	psect	dataBANK2
 11312  0002DA                     __pdataBANK2:
 11313                           	opt stack 0
 11314  0002DA                     getCauseOfResetString@strings:
 11315                           	opt stack 0
 11316  0002DA                     	ds	18
 11317  0002EC                     getDeviceIDString@F17550:
 11318                           	opt stack 0
 11319  0002EC                     	ds	6
 11320  0002F2                     _Irms_offset:
 11321                           	opt stack 0
 11322  0002F2                     	ds	4
 11323  0002F6                     _Vpk_const:
 11324                           	opt stack 0
 11325  0002F6                     	ds	4
 11326  0002FA                     _Temp_ADC_Offset:
 11327                           	opt stack 0
 11328  0002FA                     	ds	4
 11329                           tblptru	equ	0xFF8
 11330                           tblptrh	equ	0xFF7
 11331                           tblptrl	equ	0xFF6
 11332                           tablat	equ	0xFF5
 11333                           postinc0	equ	0xFEE
 11334                           wreg	equ	0xFE8
 11335                           postdec1	equ	0xFE5
 11336                           fsr1l	equ	0xFE1
 11337                           
 11338                           	psect	bssBANK3
 11339  000300                     __pbssBANK3:
 11340                           	opt stack 0
 11341  000300                     _eusart2TxBuffer:
 11342                           	opt stack 0
 11343  000300                     	ds	128
 11344  000380                     _eusart2RxBuffer:
 11345                           	opt stack 0
 11346  000380                     	ds	64
 11347                           tblptru	equ	0xFF8
 11348                           tblptrh	equ	0xFF7
 11349                           tblptrl	equ	0xFF6
 11350                           tablat	equ	0xFF5
 11351                           postinc0	equ	0xFEE
 11352                           wreg	equ	0xFE8
 11353                           postdec1	equ	0xFE5
 11354                           fsr1l	equ	0xFE1
 11355                           
 11356                           	psect	cstackBANK2
 11357  000287                     __pcstackBANK2:
 11358                           	opt stack 0
 11359  000287                     terminal_textAttributes@foreground_color:
 11360                           	opt stack 0
 11361                           
 11362                           ; 1 bytes @ 0x0
 11363  000287                     	ds	1
 11364  000288                     terminal_textAttributes@output_buff:
 11365                           	opt stack 0
 11366                           
 11367                           ; 15 bytes @ 0x1
 11368  000288                     	ds	15
 11369  000297                     ringBufferLUT@channel_name:
 11370                           	opt stack 0
 11371                           
 11372                           ; 22 bytes @ 0x10
 11373  000297                     	ds	22
 11374  0002AD                     ringBufferLUT@angle_degrees:
 11375                           	opt stack 0
 11376                           
 11377                           ; 4 bytes @ 0x26
 11378  0002AD                     	ds	4
 11379  0002B1                     ringBufferLUT@max_current_print:
 11380                           	opt stack 0
 11381                           
 11382                           ; 4 bytes @ 0x2A
 11383  0002B1                     	ds	4
 11384  0002B5                     ringBufferLUT@max_Power_print:
 11385                           	opt stack 0
 11386                           
 11387                           ; 4 bytes @ 0x2E
 11388  0002B5                     	ds	4
 11389  0002B9                     ringBufferLUT@max_voltage_print:
 11390                           	opt stack 0
 11391                           
 11392                           ; 4 bytes @ 0x32
 11393  0002B9                     	ds	4
 11394  0002BD                     ringBufferLUT@max_voltage_print_2878:
 11395                           	opt stack 0
 11396                           
 11397                           ; 4 bytes @ 0x36
 11398  0002BD                     	ds	4
 11399  0002C1                     ringBufferLUT@max_temp_print:
 11400                           	opt stack 0
 11401                           
 11402                           ; 4 bytes @ 0x3A
 11403  0002C1                     	ds	4
 11404  0002C5                     ringBufferLUT@max_voltage_print_2884:
 11405                           	opt stack 0
 11406                           
 11407                           ; 4 bytes @ 0x3E
 11408  0002C5                     	ds	4
 11409  0002C9                     ringBufferLUT@arg_buff:
 11410                           	opt stack 0
 11411                           
 11412                           ; 3 bytes @ 0x42
 11413  0002C9                     	ds	3
 11414  0002CC                     ringBufferLUT@index:
 11415                           	opt stack 0
 11416                           
 11417                           ; 2 bytes @ 0x45
 11418  0002CC                     	ds	2
 11419  0002CE                     ringBufferLUT@percentage:
 11420                           	opt stack 0
 11421                           
 11422                           ; 2 bytes @ 0x47
 11423  0002CE                     	ds	2
 11424  0002D0                     ringBufferLUT@userID:
 11425                           	opt stack 0
 11426                           
 11427                           ; 2 bytes @ 0x49
 11428  0002D0                     	ds	2
 11429  0002D2                     terminal_ringBufferPull@charNumber:
 11430                           	opt stack 0
 11431                           
 11432                           ; 2 bytes @ 0x4B
 11433  0002D2                     	ds	2
 11434  0002D4                     terminal_ringBufferPull@index_2531:
 11435                           	opt stack 0
 11436                           
 11437                           ; 2 bytes @ 0x4D
 11438  0002D4                     	ds	2
 11439  0002D6                     terminal_ringBufferPull@index:
 11440                           	opt stack 0
 11441                           
 11442                           ; 2 bytes @ 0x4F
 11443  0002D6                     	ds	2
 11444  0002D8                     ??_main:
 11445                           
 11446                           ; 1 bytes @ 0x51
 11447  0002D8                     	ds	2
 11448                           tblptru	equ	0xFF8
 11449                           tblptrh	equ	0xFF7
 11450                           tblptrl	equ	0xFF6
 11451                           tablat	equ	0xFF5
 11452                           postinc0	equ	0xFEE
 11453                           wreg	equ	0xFE8
 11454                           postdec1	equ	0xFE5
 11455                           fsr1l	equ	0xFE1
 11456                           
 11457                           	psect	cstackBANK1
 11458  000100                     __pcstackBANK1:
 11459                           	opt stack 0
 11460  000100                     ??_heartbeatTimerCallback:
 11461  000100                     ADCC_StartConversion@channel:
 11462                           	opt stack 0
 11463  000100                     TMR7_WriteTimer@timerVal:
 11464                           	opt stack 0
 11465                           
 11466                           ; 2 bytes @ 0x0
 11467  000100                     	ds	1
 11468  000101                     
 11469                           ; 1 bytes @ 0x1
 11470  000101                     	ds	1
 11471  000102                     ??_INTERRUPT_InterruptManagerLow:
 11472  000102                     
 11473                           ; 1 bytes @ 0x2
 11474  000102                     	ds	21
 11475  000117                     ??_isdigit:
 11476  000117                     ?_strlen:
 11477                           	opt stack 0
 11478  000117                     ?_strcmp:
 11479                           	opt stack 0
 11480  000117                     ?_getCauseOfResetString:
 11481                           	opt stack 0
 11482  000117                     ?_strchr:
 11483                           	opt stack 0
 11484  000117                     ?___wmul:
 11485                           	opt stack 0
 11486  000117                     ?___awmod:
 11487                           	opt stack 0
 11488  000117                     ?__tdiv_to_l_:
 11489                           	opt stack 0
 11490  000117                     ?__div_to_l_:
 11491                           	opt stack 0
 11492  000117                     ?___lldiv:
 11493                           	opt stack 0
 11494  000117                     ?___xxtofl:
 11495                           	opt stack 0
 11496  000117                     EUSART2_Read@readValue:
 11497                           	opt stack 0
 11498  000117                     EUSART2_Write@txData:
 11499                           	opt stack 0
 11500  000117                     getCauseOfReset@return_reset_cause:
 11501                           	opt stack 0
 11502  000117                     DATAEE_WriteByte@bAdd:
 11503                           	opt stack 0
 11504  000117                     DATAEE_ReadByte@bAdd:
 11505                           	opt stack 0
 11506  000117                     ___wmul@multiplier:
 11507                           	opt stack 0
 11508  000117                     ___awmod@dividend:
 11509                           	opt stack 0
 11510  000117                     strcat@to:
 11511                           	opt stack 0
 11512  000117                     strcmp@s1:
 11513                           	opt stack 0
 11514  000117                     strcpy@to:
 11515                           	opt stack 0
 11516  000117                     strlen@s:
 11517                           	opt stack 0
 11518  000117                     strncpy@to:
 11519                           	opt stack 0
 11520  000117                     strchr@ptr:
 11521                           	opt stack 0
 11522  000117                     TMR6_SetInterruptHandler@InterruptHandler:
 11523                           	opt stack 0
 11524  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
 11525                           	opt stack 0
 11526  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
 11527                           	opt stack 0
 11528  000117                     ADCC_SetADTIInterruptHandler@InterruptHandler:
 11529                           	opt stack 0
 11530  000117                     TMR7_SetInterruptHandler@InterruptHandler:
 11531                           	opt stack 0
 11532  000117                     TMR5_SetInterruptHandler@InterruptHandler:
 11533                           	opt stack 0
 11534  000117                     INT0_SetInterruptHandler@InterruptHandler:
 11535                           	opt stack 0
 11536  000117                     __tdiv_to_l_@f1:
 11537                           	opt stack 0
 11538  000117                     FLASH_ReadByte@flashAddr:
 11539                           	opt stack 0
 11540  000117                     __div_to_l_@f1:
 11541                           	opt stack 0
 11542  000117                     ___flge@ff1:
 11543                           	opt stack 0
 11544  000117                     ___lldiv@dividend:
 11545                           	opt stack 0
 11546  000117                     ___xxtofl@val:
 11547                           	opt stack 0
 11548                           
 11549                           ; 4 bytes @ 0x17
 11550  000117                     	ds	1
 11551  000118                     putch@txData:
 11552                           	opt stack 0
 11553  000118                     _isdigit$3451:
 11554                           	opt stack 0
 11555                           
 11556                           ; 1 bytes @ 0x18
 11557  000118                     	ds	1
 11558  000119                     ??_strlen:
 11559  000119                     ?_readDoubleFromEEPROM:
 11560                           	opt stack 0
 11561  000119                     DATAEE_WriteByte@bData:
 11562                           	opt stack 0
 11563  000119                     getCauseOfResetString@r:
 11564                           	opt stack 0
 11565  000119                     isdigit@c:
 11566                           	opt stack 0
 11567  000119                     readDoubleFromEEPROM@starting_address:
 11568                           	opt stack 0
 11569  000119                     ___wmul@multiplicand:
 11570                           	opt stack 0
 11571  000119                     ___awmod@divisor:
 11572                           	opt stack 0
 11573  000119                     strcat@from:
 11574                           	opt stack 0
 11575  000119                     strcmp@s2:
 11576                           	opt stack 0
 11577  000119                     strcpy@from:
 11578                           	opt stack 0
 11579  000119                     strncpy@from:
 11580                           	opt stack 0
 11581  000119                     strchr@chr:
 11582                           	opt stack 0
 11583                           
 11584                           ; 2 bytes @ 0x19
 11585  000119                     	ds	1
 11586  00011A                     ??_TMR7_Initialize:
 11587  00011A                     ??_TMR5_Initialize:
 11588  00011A                     DATAEE_WriteByte@GIEBitValue:
 11589                           	opt stack 0
 11590  00011A                     __tdiv_to_l_@f2:
 11591                           	opt stack 0
 11592                           
 11593                           ; 3 bytes @ 0x1A
 11594  00011A                     	ds	1
 11595  00011B                     ??_strcmp:
 11596  00011B                     ??___xxtofl:
 11597  00011B                     ?_FLASH_ReadWord:
 11598                           	opt stack 0
 11599  00011B                     ___awmod@counter:
 11600                           	opt stack 0
 11601  00011B                     ___wmul@product:
 11602                           	opt stack 0
 11603  00011B                     strcat@cp:
 11604                           	opt stack 0
 11605  00011B                     strcpy@cp:
 11606                           	opt stack 0
 11607  00011B                     strlen@cp:
 11608                           	opt stack 0
 11609  00011B                     strncpy@size:
 11610                           	opt stack 0
 11611  00011B                     FLASH_ReadWord@flashAddr:
 11612                           	opt stack 0
 11613  00011B                     writeDoubleToEEPROM@input_double:
 11614                           	opt stack 0
 11615  00011B                     __div_to_l_@f2:
 11616                           	opt stack 0
 11617  00011B                     ___flge@ff2:
 11618                           	opt stack 0
 11619  00011B                     ___lldiv@divisor:
 11620                           	opt stack 0
 11621                           
 11622                           ; 4 bytes @ 0x1B
 11623  00011B                     	ds	1
 11624  00011C                     ___awmod@sign:
 11625                           	opt stack 0
 11626  00011C                     strcmp@r:
 11627                           	opt stack 0
 11628                           
 11629                           ; 1 bytes @ 0x1C
 11630  00011C                     	ds	1
 11631  00011D                     ??__tdiv_to_l_:
 11632  00011D                     ?_atoi:
 11633                           	opt stack 0
 11634  00011D                     ?_strncmp:
 11635                           	opt stack 0
 11636  00011D                     ?___awdiv:
 11637                           	opt stack 0
 11638  00011D                     atoi@s:
 11639                           	opt stack 0
 11640  00011D                     ___awdiv@dividend:
 11641                           	opt stack 0
 11642  00011D                     strncpy@cp:
 11643                           	opt stack 0
 11644  00011D                     strncmp@s1:
 11645                           	opt stack 0
 11646  00011D                     readDoubleFromEEPROM@output_data:
 11647                           	opt stack 0
 11648                           
 11649                           ; 4 bytes @ 0x1D
 11650  00011D                     	ds	2
 11651  00011F                     ??_atoi:
 11652  00011F                     ??_FLASH_ReadWord:
 11653  00011F                     ??___flge:
 11654  00011F                     ___lldiv@counter:
 11655                           	opt stack 0
 11656  00011F                     ___xxtofl@sign:
 11657                           	opt stack 0
 11658  00011F                     writeDoubleToEEPROM@starting_address:
 11659                           	opt stack 0
 11660  00011F                     ___awdiv@divisor:
 11661                           	opt stack 0
 11662  00011F                     strncmp@s2:
 11663                           	opt stack 0
 11664  00011F                     __div_to_l_@quot:
 11665                           	opt stack 0
 11666                           
 11667                           ; 4 bytes @ 0x1F
 11668  00011F                     	ds	1
 11669  000120                     ___xxtofl@exp:
 11670                           	opt stack 0
 11671  000120                     __tdiv_to_l_@quot:
 11672                           	opt stack 0
 11673  000120                     ___lldiv@quotient:
 11674                           	opt stack 0
 11675                           
 11676                           ; 4 bytes @ 0x20
 11677  000120                     	ds	1
 11678  000121                     atoi@sign:
 11679                           	opt stack 0
 11680  000121                     ___awdiv@counter:
 11681                           	opt stack 0
 11682  000121                     readDoubleFromEEPROM@byte_index:
 11683                           	opt stack 0
 11684  000121                     strncmp@len:
 11685                           	opt stack 0
 11686  000121                     writeDoubleToEEPROM@input_data:
 11687                           	opt stack 0
 11688  000121                     ___xxtofl@arg:
 11689                           	opt stack 0
 11690                           
 11691                           ; 4 bytes @ 0x21
 11692  000121                     	ds	1
 11693  000122                     ??_getMajorRevisionID:
 11694  000122                     ?_getDeviceID:
 11695                           	opt stack 0
 11696  000122                     ?_getUserID:
 11697                           	opt stack 0
 11698  000122                     ___awdiv@sign:
 11699                           	opt stack 0
 11700  000122                     getMinorRevisionID@REVID_RAW:
 11701                           	opt stack 0
 11702  000122                     atoi@a:
 11703                           	opt stack 0
 11704                           
 11705                           ; 2 bytes @ 0x22
 11706  000122                     	ds	1
 11707  000123                     ??_strncmp:
 11708  000123                     __div_to_l_@cntr:
 11709                           	opt stack 0
 11710  000123                     ___awdiv@quotient:
 11711                           	opt stack 0
 11712                           
 11713                           ; 2 bytes @ 0x23
 11714  000123                     	ds	1
 11715  000124                     ?_getDeviceIDString:
 11716                           	opt stack 0
 11717  000124                     ?___llmod:
 11718                           	opt stack 0
 11719  000124                     getUserID@inputUserID:
 11720                           	opt stack 0
 11721  000124                     __div_to_l_@exp1:
 11722                           	opt stack 0
 11723  000124                     __tdiv_to_l_@cntr:
 11724                           	opt stack 0
 11725  000124                     getDeviceIDString@inputDevID:
 11726                           	opt stack 0
 11727  000124                     ___llmod@dividend:
 11728                           	opt stack 0
 11729                           
 11730                           ; 4 bytes @ 0x24
 11731  000124                     	ds	1
 11732  000125                     ?___flneg:
 11733                           	opt stack 0
 11734  000125                     __tdiv_to_l_@exp1:
 11735                           	opt stack 0
 11736  000125                     getMajorRevisionID@REVID_RAW:
 11737                           	opt stack 0
 11738  000125                     writeDoubleToEEPROM@byte_index:
 11739                           	opt stack 0
 11740  000125                     getUserID@initialOffset:
 11741                           	opt stack 0
 11742  000125                     ___flneg@f1:
 11743                           	opt stack 0
 11744                           
 11745                           ; 4 bytes @ 0x25
 11746  000125                     	ds	1
 11747  000126                     ??_getDeviceIDString:
 11748  000126                     ?_strstr:
 11749                           	opt stack 0
 11750  000126                     strstr@s1:
 11751                           	opt stack 0
 11752                           
 11753                           ; 2 bytes @ 0x26
 11754  000126                     	ds	1
 11755  000127                     
 11756                           ; 1 bytes @ 0x27
 11757  000127                     	ds	1
 11758  000128                     strstr@s2:
 11759                           	opt stack 0
 11760  000128                     ___llmod@divisor:
 11761                           	opt stack 0
 11762  000128                     getDeviceIDString@strings:
 11763                           	opt stack 0
 11764                           
 11765                           ; 6 bytes @ 0x28
 11766  000128                     	ds	1
 11767  000129                     ?___fladd:
 11768                           	opt stack 0
 11769  000129                     getUserID@IDOffset:
 11770                           	opt stack 0
 11771  000129                     ___fladd@b:
 11772                           	opt stack 0
 11773                           
 11774                           ; 4 bytes @ 0x29
 11775  000129                     	ds	1
 11776  00012A                     
 11777                           ; 1 bytes @ 0x2A
 11778  00012A                     	ds	2
 11779  00012C                     ___llmod@counter:
 11780                           	opt stack 0
 11781                           
 11782                           ; 1 bytes @ 0x2C
 11783  00012C                     	ds	1
 11784  00012D                     ___fladd@a:
 11785                           	opt stack 0
 11786                           
 11787                           ; 4 bytes @ 0x2D
 11788  00012D                     	ds	4
 11789  000131                     ??___fladd:
 11790                           
 11791                           ; 1 bytes @ 0x31
 11792  000131                     	ds	8
 11793  000139                     ___fladd@signs:
 11794                           	opt stack 0
 11795                           
 11796                           ; 1 bytes @ 0x39
 11797  000139                     	ds	1
 11798  00013A                     ___fladd@aexp:
 11799                           	opt stack 0
 11800                           
 11801                           ; 1 bytes @ 0x3A
 11802  00013A                     	ds	1
 11803  00013B                     ___fladd@bexp:
 11804                           	opt stack 0
 11805                           
 11806                           ; 1 bytes @ 0x3B
 11807  00013B                     	ds	1
 11808  00013C                     ___fladd@grs:
 11809                           	opt stack 0
 11810                           
 11811                           ; 1 bytes @ 0x3C
 11812  00013C                     	ds	1
 11813  00013D                     ?___fldiv:
 11814                           	opt stack 0
 11815  00013D                     ?___flsub:
 11816                           	opt stack 0
 11817  00013D                     ___flsub@b:
 11818                           	opt stack 0
 11819  00013D                     ___fldiv@b:
 11820                           	opt stack 0
 11821                           
 11822                           ; 4 bytes @ 0x3D
 11823  00013D                     	ds	4
 11824  000141                     ___flsub@a:
 11825                           	opt stack 0
 11826  000141                     ___fldiv@a:
 11827                           	opt stack 0
 11828                           
 11829                           ; 4 bytes @ 0x41
 11830  000141                     	ds	4
 11831  000145                     ??___fldiv:
 11832  000145                     
 11833                           ; 1 bytes @ 0x45
 11834  000145                     	ds	4
 11835  000149                     ___fldiv@sign:
 11836                           	opt stack 0
 11837                           
 11838                           ; 1 bytes @ 0x49
 11839  000149                     	ds	1
 11840  00014A                     ___fldiv@rem:
 11841                           	opt stack 0
 11842                           
 11843                           ; 4 bytes @ 0x4A
 11844  00014A                     	ds	4
 11845  00014E                     ___fldiv@new_exp:
 11846                           	opt stack 0
 11847                           
 11848                           ; 2 bytes @ 0x4E
 11849  00014E                     	ds	2
 11850  000150                     ___fldiv@grs:
 11851                           	opt stack 0
 11852                           
 11853                           ; 4 bytes @ 0x50
 11854  000150                     	ds	4
 11855  000154                     ___fldiv@bexp:
 11856                           	opt stack 0
 11857                           
 11858                           ; 1 bytes @ 0x54
 11859  000154                     	ds	1
 11860  000155                     ___fldiv@aexp:
 11861                           	opt stack 0
 11862                           
 11863                           ; 1 bytes @ 0x55
 11864  000155                     	ds	1
 11865  000156                     ?___flmul:
 11866                           	opt stack 0
 11867  000156                     ___flmul@b:
 11868                           	opt stack 0
 11869                           
 11870                           ; 4 bytes @ 0x56
 11871  000156                     	ds	4
 11872  00015A                     ___flmul@a:
 11873                           	opt stack 0
 11874                           
 11875                           ; 4 bytes @ 0x5A
 11876  00015A                     	ds	4
 11877  00015E                     ??___flmul:
 11878                           
 11879                           ; 1 bytes @ 0x5E
 11880  00015E                     	ds	4
 11881  000162                     ___flmul@sign:
 11882                           	opt stack 0
 11883                           
 11884                           ; 1 bytes @ 0x62
 11885  000162                     	ds	1
 11886  000163                     ___flmul@aexp:
 11887                           	opt stack 0
 11888                           
 11889                           ; 1 bytes @ 0x63
 11890  000163                     	ds	1
 11891  000164                     ___flmul@bexp:
 11892                           	opt stack 0
 11893                           
 11894                           ; 1 bytes @ 0x64
 11895  000164                     	ds	1
 11896  000165                     ___flmul@grs:
 11897                           	opt stack 0
 11898                           
 11899                           ; 4 bytes @ 0x65
 11900  000165                     	ds	4
 11901  000169                     ___flmul@prod:
 11902                           	opt stack 0
 11903                           
 11904                           ; 4 bytes @ 0x69
 11905  000169                     	ds	4
 11906  00016D                     ___flmul@temp:
 11907                           	opt stack 0
 11908                           
 11909                           ; 2 bytes @ 0x6D
 11910  00016D                     	ds	2
 11911  00016F                     ?_fround:
 11912                           	opt stack 0
 11913  00016F                     ?_scale:
 11914                           	opt stack 0
 11915                           
 11916                           ; 4 bytes @ 0x6F
 11917  00016F                     	ds	4
 11918  000173                     _fround$4175:
 11919                           	opt stack 0
 11920  000173                     _scale$4176:
 11921                           	opt stack 0
 11922                           
 11923                           ; 4 bytes @ 0x73
 11924  000173                     	ds	4
 11925  000177                     scale@scl:
 11926                           	opt stack 0
 11927  000177                     _fround$4174:
 11928                           	opt stack 0
 11929                           
 11930                           ; 4 bytes @ 0x77
 11931  000177                     	ds	1
 11932  000178                     ?___fltol:
 11933                           	opt stack 0
 11934  000178                     ___fltol@f1:
 11935                           	opt stack 0
 11936                           
 11937                           ; 4 bytes @ 0x78
 11938  000178                     	ds	3
 11939  00017B                     fround@prec:
 11940                           	opt stack 0
 11941                           
 11942                           ; 1 bytes @ 0x7B
 11943  00017B                     	ds	1
 11944  00017C                     ??___fltol:
 11945                           
 11946                           ; 1 bytes @ 0x7C
 11947  00017C                     	ds	4
 11948  000180                     ___fltol@sign1:
 11949                           	opt stack 0
 11950                           
 11951                           ; 1 bytes @ 0x80
 11952  000180                     	ds	1
 11953  000181                     ___fltol@exp1:
 11954                           	opt stack 0
 11955                           
 11956                           ; 1 bytes @ 0x81
 11957  000181                     	ds	1
 11958  000182                     ?_printf:
 11959                           	opt stack 0
 11960  000182                     printf@f:
 11961                           	opt stack 0
 11962                           
 11963                           ; 2 bytes @ 0x82
 11964  000182                     	ds	10
 11965  00018C                     ??_printf:
 11966                           
 11967                           ; 1 bytes @ 0x8C
 11968  00018C                     	ds	6
 11969  000192                     _printf$4177:
 11970                           	opt stack 0
 11971                           
 11972                           ; 4 bytes @ 0x92
 11973  000192                     	ds	4
 11974  000196                     printf@idx:
 11975                           	opt stack 0
 11976                           
 11977                           ; 1 bytes @ 0x96
 11978  000196                     	ds	1
 11979  000197                     printf@cp:
 11980                           	opt stack 0
 11981                           
 11982                           ; 2 bytes @ 0x97
 11983  000197                     	ds	2
 11984  000199                     printf@len:
 11985                           	opt stack 0
 11986                           
 11987                           ; 2 bytes @ 0x99
 11988  000199                     	ds	2
 11989  00019B                     printf@ap:
 11990                           	opt stack 0
 11991                           
 11992                           ; 2 bytes @ 0x9B
 11993  00019B                     	ds	2
 11994  00019D                     printf@tmpval:
 11995                           	opt stack 0
 11996                           
 11997                           ; 4 bytes @ 0x9D
 11998  00019D                     	ds	4
 11999  0001A1                     printf@exp:
 12000                           	opt stack 0
 12001                           
 12002                           ; 2 bytes @ 0xA1
 12003  0001A1                     	ds	2
 12004  0001A3                     printf@fval:
 12005                           	opt stack 0
 12006                           
 12007                           ; 4 bytes @ 0xA3
 12008  0001A3                     	ds	4
 12009  0001A7                     printf@val:
 12010                           	opt stack 0
 12011                           
 12012                           ; 4 bytes @ 0xA7
 12013  0001A7                     	ds	4
 12014  0001AB                     printf@flag:
 12015                           	opt stack 0
 12016                           
 12017                           ; 2 bytes @ 0xAB
 12018  0001AB                     	ds	2
 12019  0001AD                     printf@width:
 12020                           	opt stack 0
 12021                           
 12022                           ; 2 bytes @ 0xAD
 12023  0001AD                     	ds	2
 12024  0001AF                     printf@prec:
 12025                           	opt stack 0
 12026                           
 12027                           ; 2 bytes @ 0xAF
 12028  0001AF                     	ds	2
 12029  0001B1                     printf@c:
 12030                           	opt stack 0
 12031                           
 12032                           ; 1 bytes @ 0xB1
 12033  0001B1                     	ds	1
 12034  0001B2                     terminal_textAttributes@background_color:
 12035                           	opt stack 0
 12036                           
 12037                           ; 1 bytes @ 0xB2
 12038  0001B2                     	ds	1
 12039  0001B3                     terminal_textAttributes@input_attribute:
 12040                           	opt stack 0
 12041                           
 12042                           ; 1 bytes @ 0xB3
 12043  0001B3                     	ds	1
 12044  0001B4                     ringBufferLUT@line:
 12045                           	opt stack 0
 12046                           
 12047                           ; 2 bytes @ 0xB4
 12048  0001B4                     	ds	2
 12049  0001B6                     ??_ringBufferLUT:
 12050                           
 12051                           ; 1 bytes @ 0xB6
 12052  0001B6                     	ds	2
 12053  0001B8                     ??_terminal_ringBufferPull:
 12054                           
 12055                           ; 1 bytes @ 0xB8
 12056  0001B8                     	ds	3
 12057                           tblptru	equ	0xFF8
 12058                           tblptrh	equ	0xFF7
 12059                           tblptrl	equ	0xFF6
 12060                           tablat	equ	0xFF5
 12061                           postinc0	equ	0xFEE
 12062                           wreg	equ	0xFE8
 12063                           postdec1	equ	0xFE5
 12064                           fsr1l	equ	0xFE1
 12065                           
 12066                           	psect	cstackBANK0
 12067  000060                     __pcstackBANK0:
 12068                           	opt stack 0
 12069  000060                     ??i2___fladd:
 12070                           
 12071                           ; 1 bytes @ 0x0
 12072  000060                     	ds	8
 12073  000068                     i2___fladd@signs:
 12074                           	opt stack 0
 12075                           
 12076                           ; 1 bytes @ 0x8
 12077  000068                     	ds	1
 12078  000069                     i2___fladd@aexp:
 12079                           	opt stack 0
 12080                           
 12081                           ; 1 bytes @ 0x9
 12082  000069                     	ds	1
 12083  00006A                     i2___fladd@bexp:
 12084                           	opt stack 0
 12085                           
 12086                           ; 1 bytes @ 0xA
 12087  00006A                     	ds	1
 12088  00006B                     i2___fladd@grs:
 12089                           	opt stack 0
 12090                           
 12091                           ; 1 bytes @ 0xB
 12092  00006B                     	ds	1
 12093  00006C                     ?_sqrt:
 12094                           	opt stack 0
 12095  00006C                     ?_eval_poly:
 12096                           	opt stack 0
 12097  00006C                     ?i2___fltol:
 12098                           	opt stack 0
 12099  00006C                     eval_poly@x:
 12100                           	opt stack 0
 12101  00006C                     sqrt@a:
 12102                           	opt stack 0
 12103  00006C                     i2___fltol@f1:
 12104                           	opt stack 0
 12105                           
 12106                           ; 4 bytes @ 0xC
 12107  00006C                     	ds	4
 12108  000070                     ??_sqrt:
 12109  000070                     ??i2___fltol:
 12110  000070                     eval_poly@d:
 12111                           	opt stack 0
 12112                           
 12113                           ; 2 bytes @ 0x10
 12114  000070                     	ds	2
 12115  000072                     eval_poly@n:
 12116                           	opt stack 0
 12117                           
 12118                           ; 2 bytes @ 0x12
 12119  000072                     	ds	2
 12120  000074                     ??_eval_poly:
 12121  000074                     sqrt@sign:
 12122                           	opt stack 0
 12123  000074                     i2___fltol@sign1:
 12124                           	opt stack 0
 12125                           
 12126                           ; 1 bytes @ 0x14
 12127  000074                     	ds	1
 12128  000075                     sqrt@i:
 12129                           	opt stack 0
 12130  000075                     i2___fltol@exp1:
 12131                           	opt stack 0
 12132                           
 12133                           ; 1 bytes @ 0x15
 12134  000075                     	ds	1
 12135  000076                     ?_abs:
 12136                           	opt stack 0
 12137  000076                     ?_floor:
 12138                           	opt stack 0
 12139  000076                     abs@a:
 12140                           	opt stack 0
 12141  000076                     sqrt@tfrac:
 12142                           	opt stack 0
 12143  000076                     floor@x:
 12144                           	opt stack 0
 12145                           
 12146                           ; 4 bytes @ 0x16
 12147  000076                     	ds	2
 12148  000078                     ??_abs:
 12149  000078                     eval_poly@res:
 12150                           	opt stack 0
 12151                           
 12152                           ; 4 bytes @ 0x18
 12153  000078                     	ds	2
 12154  00007A                     sqrt@p:
 12155                           	opt stack 0
 12156  00007A                     floor@i:
 12157                           	opt stack 0
 12158                           
 12159                           ; 4 bytes @ 0x1A
 12160  00007A                     	ds	1
 12161  00007B                     sqrt@grs:
 12162                           	opt stack 0
 12163                           
 12164                           ; 4 bytes @ 0x1B
 12165  00007B                     	ds	1
 12166  00007C                     ?_atan:
 12167                           	opt stack 0
 12168  00007C                     atan@f:
 12169                           	opt stack 0
 12170                           
 12171                           ; 4 bytes @ 0x1C
 12172  00007C                     	ds	2
 12173  00007E                     floor@expon:
 12174                           	opt stack 0
 12175                           
 12176                           ; 2 bytes @ 0x1E
 12177  00007E                     	ds	1
 12178  00007F                     sqrt@exp:
 12179                           	opt stack 0
 12180                           
 12181                           ; 2 bytes @ 0x1F
 12182  00007F                     	ds	1
 12183  000080                     ?i2___flsub:
 12184                           	opt stack 0
 12185  000080                     atan@y:
 12186                           	opt stack 0
 12187  000080                     i2___flsub@b:
 12188                           	opt stack 0
 12189                           
 12190                           ; 4 bytes @ 0x20
 12191  000080                     	ds	1
 12192  000081                     sqrt@root:
 12193                           	opt stack 0
 12194                           
 12195                           ; 4 bytes @ 0x21
 12196  000081                     	ds	3
 12197  000084                     atan@x:
 12198                           	opt stack 0
 12199  000084                     i2___flsub@a:
 12200                           	opt stack 0
 12201                           
 12202                           ; 4 bytes @ 0x24
 12203  000084                     	ds	1
 12204  000085                     sqrt@frac:
 12205                           	opt stack 0
 12206                           
 12207                           ; 4 bytes @ 0x25
 12208  000085                     	ds	3
 12209  000088                     ?i2_printf:
 12210                           	opt stack 0
 12211  000088                     ?_sin:
 12212                           	opt stack 0
 12213  000088                     atan@recip:
 12214                           	opt stack 0
 12215  000088                     i2printf@f:
 12216                           	opt stack 0
 12217  000088                     sin@f:
 12218                           	opt stack 0
 12219                           
 12220                           ; 4 bytes @ 0x28
 12221  000088                     	ds	1
 12222  000089                     atan@val_squared:
 12223                           	opt stack 0
 12224                           
 12225                           ; 4 bytes @ 0x29
 12226  000089                     	ds	1
 12227  00008A                     ??i2_printf:
 12228                           
 12229                           ; 1 bytes @ 0x2A
 12230  00008A                     	ds	2
 12231  00008C                     sin@y:
 12232                           	opt stack 0
 12233                           
 12234                           ; 4 bytes @ 0x2C
 12235  00008C                     	ds	1
 12236  00008D                     atan@val:
 12237                           	opt stack 0
 12238                           
 12239                           ; 4 bytes @ 0x2D
 12240  00008D                     	ds	3
 12241  000090                     _sin$4395:
 12242                           	opt stack 0
 12243  000090                     i2_printf$4399:
 12244                           	opt stack 0
 12245                           
 12246                           ; 4 bytes @ 0x30
 12247  000090                     	ds	1
 12248  000091                     ?_asin:
 12249                           	opt stack 0
 12250  000091                     asin@x:
 12251                           	opt stack 0
 12252                           
 12253                           ; 4 bytes @ 0x31
 12254  000091                     	ds	3
 12255  000094                     i2printf@idx:
 12256                           	opt stack 0
 12257  000094                     sin@x2:
 12258                           	opt stack 0
 12259                           
 12260                           ; 4 bytes @ 0x34
 12261  000094                     	ds	1
 12262  000095                     i2printf@cp:
 12263                           	opt stack 0
 12264  000095                     asin@sgn:
 12265                           	opt stack 0
 12266                           
 12267                           ; 4 bytes @ 0x35
 12268  000095                     	ds	2
 12269  000097                     i2printf@len:
 12270                           	opt stack 0
 12271                           
 12272                           ; 2 bytes @ 0x37
 12273  000097                     	ds	1
 12274  000098                     sin@sgn:
 12275                           	opt stack 0
 12276                           
 12277                           ; 1 bytes @ 0x38
 12278  000098                     	ds	1
 12279  000099                     ?_currentMeasuredToPeak:
 12280                           	opt stack 0
 12281  000099                     i2printf@ap:
 12282                           	opt stack 0
 12283  000099                     currentMeasuredToPeak@Measured:
 12284                           	opt stack 0
 12285  000099                     _asin$4394:
 12286                           	opt stack 0
 12287                           
 12288                           ; 4 bytes @ 0x39
 12289  000099                     	ds	2
 12290  00009B                     i2printf@tmpval:
 12291                           	opt stack 0
 12292                           
 12293                           ; 4 bytes @ 0x3B
 12294  00009B                     	ds	2
 12295  00009D                     currentMeasuredToPeak@Angle:
 12296                           	opt stack 0
 12297  00009D                     _asin$4393:
 12298                           	opt stack 0
 12299                           
 12300                           ; 4 bytes @ 0x3D
 12301  00009D                     	ds	2
 12302  00009F                     i2printf@exp:
 12303                           	opt stack 0
 12304                           
 12305                           ; 2 bytes @ 0x3F
 12306  00009F                     	ds	2
 12307  0000A1                     currentMeasuredToPeak@Peak:
 12308                           	opt stack 0
 12309  0000A1                     asin@y:
 12310                           	opt stack 0
 12311  0000A1                     i2printf@val:
 12312                           	opt stack 0
 12313                           
 12314                           ; 4 bytes @ 0x41
 12315  0000A1                     	ds	4
 12316  0000A5                     i2printf@fval:
 12317                           	opt stack 0
 12318  0000A5                     _asin$4392:
 12319                           	opt stack 0
 12320                           
 12321                           ; 4 bytes @ 0x45
 12322  0000A5                     	ds	4
 12323  0000A9                     ?_acos:
 12324                           	opt stack 0
 12325  0000A9                     i2printf@flag:
 12326                           	opt stack 0
 12327  0000A9                     acos@x:
 12328                           	opt stack 0
 12329                           
 12330                           ; 4 bytes @ 0x49
 12331  0000A9                     	ds	2
 12332  0000AB                     i2printf@width:
 12333                           	opt stack 0
 12334                           
 12335                           ; 2 bytes @ 0x4B
 12336  0000AB                     	ds	2
 12337  0000AD                     i2printf@prec:
 12338                           	opt stack 0
 12339  0000AD                     _acos$4391:
 12340                           	opt stack 0
 12341                           
 12342                           ; 4 bytes @ 0x4D
 12343  0000AD                     	ds	2
 12344  0000AF                     i2printf@c:
 12345                           	opt stack 0
 12346                           
 12347                           ; 1 bytes @ 0x4F
 12348  0000AF                     	ds	2
 12349  0000B1                     ?_peakToRMS:
 12350                           	opt stack 0
 12351  0000B1                     peakToRMS@Peak:
 12352                           	opt stack 0
 12353                           
 12354                           ; 4 bytes @ 0x51
 12355  0000B1                     	ds	4
 12356  0000B5                     peakToRMS@Angle:
 12357                           	opt stack 0
 12358                           
 12359                           ; 4 bytes @ 0x55
 12360  0000B5                     	ds	4
 12361  0000B9                     _peakToRMS$4384:
 12362                           	opt stack 0
 12363                           
 12364                           ; 4 bytes @ 0x59
 12365  0000B9                     	ds	4
 12366  0000BD                     _peakToRMS$4385:
 12367                           	opt stack 0
 12368                           
 12369                           ; 4 bytes @ 0x5D
 12370  0000BD                     	ds	4
 12371  0000C1                     _peakToRMS$4383:
 12372                           	opt stack 0
 12373                           
 12374                           ; 4 bytes @ 0x61
 12375  0000C1                     	ds	4
 12376  0000C5                     peakToRMS@RMS:
 12377                           	opt stack 0
 12378                           
 12379                           ; 4 bytes @ 0x65
 12380  0000C5                     	ds	4
 12381  0000C9                     _ADCPostProcessingCallback$4388:
 12382                           	opt stack 0
 12383                           
 12384                           ; 4 bytes @ 0x69
 12385  0000C9                     	ds	4
 12386  0000CD                     _ADCPostProcessingCallback$4389:
 12387                           	opt stack 0
 12388                           
 12389                           ; 4 bytes @ 0x6D
 12390  0000CD                     	ds	4
 12391  0000D1                     _ADCPostProcessingCallback$4390:
 12392                           	opt stack 0
 12393                           
 12394                           ; 4 bytes @ 0x71
 12395  0000D1                     	ds	4
 12396  0000D5                     ADCPostProcessingCallback@current_adc_channel:
 12397                           	opt stack 0
 12398                           
 12399                           ; 1 bytes @ 0x75
 12400  0000D5                     	ds	1
 12401  0000D6                     _ADCPostProcessingCallback$4386:
 12402                           	opt stack 0
 12403                           
 12404                           ; 4 bytes @ 0x76
 12405  0000D6                     	ds	4
 12406  0000DA                     _ADCPostProcessingCallback$4387:
 12407                           	opt stack 0
 12408                           
 12409                           ; 4 bytes @ 0x7A
 12410  0000DA                     	ds	4
 12411  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
 12412                           
 12413                           ; 1 bytes @ 0x7E
 12414  0000DE                     	ds	18
 12415                           tblptru	equ	0xFF8
 12416                           tblptrh	equ	0xFF7
 12417                           tblptrl	equ	0xFF6
 12418                           tablat	equ	0xFF5
 12419                           postinc0	equ	0xFEE
 12420                           wreg	equ	0xFE8
 12421                           postdec1	equ	0xFE5
 12422                           fsr1l	equ	0xFE1
 12423                           
 12424                           	psect	cstackCOMRAM
 12425  000001                     __pcstackCOMRAM:
 12426                           	opt stack 0
 12427  000001                     ??i2_isdigit:
 12428  000001                     ?_ADCC_GetConversionResult:
 12429                           	opt stack 0
 12430  000001                     ?_ADCC_GetFilterValue:
 12431                           	opt stack 0
 12432  000001                     ?i2___wmul:
 12433                           	opt stack 0
 12434  000001                     ?i2___awmod:
 12435                           	opt stack 0
 12436  000001                     ?i2__div_to_l_:
 12437                           	opt stack 0
 12438  000001                     ?i2__tdiv_to_l_:
 12439                           	opt stack 0
 12440  000001                     ?i2___lldiv:
 12441                           	opt stack 0
 12442  000001                     i2EUSART2_Write@txData:
 12443                           	opt stack 0
 12444  000001                     TMR5_WriteTimer@timerVal:
 12445                           	opt stack 0
 12446  000001                     i2DATAEE_WriteByte@bAdd:
 12447                           	opt stack 0
 12448  000001                     i2___wmul@multiplier:
 12449                           	opt stack 0
 12450  000001                     i2___awmod@dividend:
 12451                           	opt stack 0
 12452  000001                     i2__tdiv_to_l_@f1:
 12453                           	opt stack 0
 12454  000001                     frexp@value:
 12455                           	opt stack 0
 12456  000001                     i2__div_to_l_@f1:
 12457                           	opt stack 0
 12458  000001                     i2___lldiv@dividend:
 12459                           	opt stack 0
 12460                           
 12461                           ; 4 bytes @ 0x0
 12462  000001                     	ds	1
 12463  000002                     i2putch@txData:
 12464                           	opt stack 0
 12465  000002                     i2_isdigit$3451:
 12466                           	opt stack 0
 12467                           
 12468                           ; 1 bytes @ 0x1
 12469  000002                     	ds	1
 12470  000003                     ??_ADCC_GetConversionResult:
 12471  000003                     ??_ADCC_GetFilterValue:
 12472  000003                     i2DATAEE_WriteByte@bData:
 12473                           	opt stack 0
 12474  000003                     i2isdigit@c:
 12475                           	opt stack 0
 12476  000003                     i2___wmul@multiplicand:
 12477                           	opt stack 0
 12478  000003                     i2___awmod@divisor:
 12479                           	opt stack 0
 12480                           
 12481                           ; 2 bytes @ 0x2
 12482  000003                     	ds	1
 12483  000004                     i2DATAEE_WriteByte@GIEBitValue:
 12484                           	opt stack 0
 12485  000004                     i2__tdiv_to_l_@f2:
 12486                           	opt stack 0
 12487                           
 12488                           ; 3 bytes @ 0x3
 12489  000004                     	ds	1
 12490  000005                     ?i2___xxtofl:
 12491                           	opt stack 0
 12492  000005                     i2___awmod@counter:
 12493                           	opt stack 0
 12494  000005                     frexp@eptr:
 12495                           	opt stack 0
 12496  000005                     i2___wmul@product:
 12497                           	opt stack 0
 12498  000005                     i2writeDoubleToEEPROM@input_double:
 12499                           	opt stack 0
 12500  000005                     i2__div_to_l_@f2:
 12501                           	opt stack 0
 12502  000005                     i2___lldiv@divisor:
 12503                           	opt stack 0
 12504  000005                     i2___xxtofl@val:
 12505                           	opt stack 0
 12506                           
 12507                           ; 4 bytes @ 0x4
 12508  000005                     	ds	1
 12509  000006                     i2___awmod@sign:
 12510                           	opt stack 0
 12511                           
 12512                           ; 1 bytes @ 0x5
 12513  000006                     	ds	1
 12514  000007                     ??_frexp:
 12515  000007                     ??i2__tdiv_to_l_:
 12516  000007                     ?i2___awdiv:
 12517                           	opt stack 0
 12518  000007                     i2___awdiv@dividend:
 12519                           	opt stack 0
 12520                           
 12521                           ; 2 bytes @ 0x6
 12522  000007                     	ds	2
 12523  000009                     ??i2___xxtofl:
 12524  000009                     i2writeDoubleToEEPROM@starting_address:
 12525                           	opt stack 0
 12526  000009                     i2___awdiv@divisor:
 12527                           	opt stack 0
 12528  000009                     i2__div_to_l_@quot:
 12529                           	opt stack 0
 12530  000009                     i2___lldiv@quotient:
 12531                           	opt stack 0
 12532                           
 12533                           ; 4 bytes @ 0x8
 12534  000009                     	ds	1
 12535  00000A                     i2__tdiv_to_l_@quot:
 12536                           	opt stack 0
 12537                           
 12538                           ; 4 bytes @ 0x9
 12539  00000A                     	ds	1
 12540  00000B                     i2___awdiv@counter:
 12541                           	opt stack 0
 12542  00000B                     i2writeDoubleToEEPROM@input_data:
 12543                           	opt stack 0
 12544                           
 12545                           ; 4 bytes @ 0xA
 12546  00000B                     	ds	1
 12547  00000C                     i2___awdiv@sign:
 12548                           	opt stack 0
 12549                           
 12550                           ; 1 bytes @ 0xB
 12551  00000C                     	ds	1
 12552  00000D                     i2__div_to_l_@cntr:
 12553                           	opt stack 0
 12554  00000D                     i2___lldiv@counter:
 12555                           	opt stack 0
 12556  00000D                     i2___xxtofl@sign:
 12557                           	opt stack 0
 12558  00000D                     i2___awdiv@quotient:
 12559                           	opt stack 0
 12560                           
 12561                           ; 2 bytes @ 0xC
 12562  00000D                     	ds	1
 12563  00000E                     ?i2___llmod:
 12564                           	opt stack 0
 12565  00000E                     i2__div_to_l_@exp1:
 12566                           	opt stack 0
 12567  00000E                     i2__tdiv_to_l_@cntr:
 12568                           	opt stack 0
 12569  00000E                     i2___xxtofl@exp:
 12570                           	opt stack 0
 12571  00000E                     i2___llmod@dividend:
 12572                           	opt stack 0
 12573                           
 12574                           ; 4 bytes @ 0xD
 12575  00000E                     	ds	1
 12576  00000F                     i2__tdiv_to_l_@exp1:
 12577                           	opt stack 0
 12578  00000F                     i2writeDoubleToEEPROM@byte_index:
 12579                           	opt stack 0
 12580  00000F                     i2___xxtofl@arg:
 12581                           	opt stack 0
 12582                           
 12583                           ; 4 bytes @ 0xE
 12584  00000F                     	ds	2
 12585  000011                     
 12586                           ; 1 bytes @ 0x10
 12587  000011                     	ds	1
 12588  000012                     i2___llmod@divisor:
 12589                           	opt stack 0
 12590                           
 12591                           ; 4 bytes @ 0x11
 12592  000012                     	ds	1
 12593  000013                     ?i2___fldiv:
 12594                           	opt stack 0
 12595  000013                     i2___fldiv@b:
 12596                           	opt stack 0
 12597                           
 12598                           ; 4 bytes @ 0x12
 12599  000013                     	ds	3
 12600  000016                     i2___llmod@counter:
 12601                           	opt stack 0
 12602                           
 12603                           ; 1 bytes @ 0x15
 12604  000016                     	ds	1
 12605  000017                     i2___fldiv@a:
 12606                           	opt stack 0
 12607                           
 12608                           ; 4 bytes @ 0x16
 12609  000017                     	ds	4
 12610  00001B                     ??i2___fldiv:
 12611                           
 12612                           ; 1 bytes @ 0x1A
 12613  00001B                     	ds	4
 12614  00001F                     i2___fldiv@sign:
 12615                           	opt stack 0
 12616                           
 12617                           ; 1 bytes @ 0x1E
 12618  00001F                     	ds	1
 12619  000020                     i2___fldiv@rem:
 12620                           	opt stack 0
 12621                           
 12622                           ; 4 bytes @ 0x1F
 12623  000020                     	ds	4
 12624  000024                     i2___fldiv@new_exp:
 12625                           	opt stack 0
 12626                           
 12627                           ; 2 bytes @ 0x23
 12628  000024                     	ds	2
 12629  000026                     i2___fldiv@grs:
 12630                           	opt stack 0
 12631                           
 12632                           ; 4 bytes @ 0x25
 12633  000026                     	ds	4
 12634  00002A                     i2___fldiv@bexp:
 12635                           	opt stack 0
 12636                           
 12637                           ; 1 bytes @ 0x29
 12638  00002A                     	ds	1
 12639  00002B                     i2___fldiv@aexp:
 12640                           	opt stack 0
 12641                           
 12642                           ; 1 bytes @ 0x2A
 12643  00002B                     	ds	1
 12644  00002C                     ?i2___flneg:
 12645                           	opt stack 0
 12646  00002C                     i2___flneg@f1:
 12647                           	opt stack 0
 12648                           
 12649                           ; 4 bytes @ 0x2B
 12650  00002C                     	ds	4
 12651  000030                     ?_fabs:
 12652                           	opt stack 0
 12653  000030                     ?i2___flmul:
 12654                           	opt stack 0
 12655  000030                     fabs@d:
 12656                           	opt stack 0
 12657  000030                     i2___flmul@b:
 12658                           	opt stack 0
 12659                           
 12660                           ; 4 bytes @ 0x2F
 12661  000030                     	ds	4
 12662  000034                     i2___flge@ff1:
 12663                           	opt stack 0
 12664  000034                     i2___flmul@a:
 12665                           	opt stack 0
 12666                           
 12667                           ; 4 bytes @ 0x33
 12668  000034                     	ds	4
 12669  000038                     ??i2___flmul:
 12670  000038                     i2___flge@ff2:
 12671                           	opt stack 0
 12672                           
 12673                           ; 4 bytes @ 0x37
 12674  000038                     	ds	4
 12675  00003C                     ??i2___flge:
 12676  00003C                     i2___flmul@sign:
 12677                           	opt stack 0
 12678                           
 12679                           ; 1 bytes @ 0x3B
 12680  00003C                     	ds	1
 12681  00003D                     i2___flmul@aexp:
 12682                           	opt stack 0
 12683                           
 12684                           ; 1 bytes @ 0x3C
 12685  00003D                     	ds	1
 12686  00003E                     i2___flmul@grs:
 12687                           	opt stack 0
 12688                           
 12689                           ; 4 bytes @ 0x3D
 12690  00003E                     	ds	4
 12691  000042                     i2___flmul@bexp:
 12692                           	opt stack 0
 12693                           
 12694                           ; 1 bytes @ 0x41
 12695  000042                     	ds	1
 12696  000043                     i2___flmul@prod:
 12697                           	opt stack 0
 12698                           
 12699                           ; 4 bytes @ 0x42
 12700  000043                     	ds	4
 12701  000047                     i2___flmul@temp:
 12702                           	opt stack 0
 12703                           
 12704                           ; 2 bytes @ 0x46
 12705  000047                     	ds	2
 12706  000049                     ?i2_fround:
 12707                           	opt stack 0
 12708  000049                     ?i2_scale:
 12709                           	opt stack 0
 12710                           
 12711                           ; 4 bytes @ 0x48
 12712  000049                     	ds	4
 12713  00004D                     i2_fround$4397:
 12714                           	opt stack 0
 12715  00004D                     i2_scale$4398:
 12716                           	opt stack 0
 12717                           
 12718                           ; 4 bytes @ 0x4C
 12719  00004D                     	ds	4
 12720  000051                     i2scale@scl:
 12721                           	opt stack 0
 12722  000051                     i2_fround$4396:
 12723                           	opt stack 0
 12724                           
 12725                           ; 4 bytes @ 0x50
 12726  000051                     	ds	4
 12727  000055                     i2fround@prec:
 12728                           	opt stack 0
 12729                           
 12730                           ; 1 bytes @ 0x54
 12731  000055                     	ds	1
 12732  000056                     ?i2___fladd:
 12733                           	opt stack 0
 12734  000056                     i2___fladd@b:
 12735                           	opt stack 0
 12736                           
 12737                           ; 4 bytes @ 0x55
 12738  000056                     	ds	4
 12739  00005A                     i2___fladd@a:
 12740                           	opt stack 0
 12741                           
 12742                           ; 4 bytes @ 0x59
 12743  00005A                     	ds	4
 12744  00005E                     tblptru	equ	0xFF8
 12745                           tblptrh	equ	0xFF7
 12746                           tblptrl	equ	0xFF6
 12747                           tablat	equ	0xFF5
 12748                           postinc0	equ	0xFEE
 12749                           wreg	equ	0xFE8
 12750                           postdec1	equ	0xFE5
 12751                           fsr1l	equ	0xFE1
 12752                           
 12753                           ; 1 bytes @ 0x5D
 12754 ;;
 12755 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 12756 ;;
 12757 ;; *************** function _main *****************
 12758 ;; Defined at:
 12759 ;;		line 479 in file "main.c"
 12760 ;; Parameters:    Size  Location     Type
 12761 ;;		None
 12762 ;; Auto vars:     Size  Location     Type
 12763 ;;		None
 12764 ;; Return value:  Size  Location     Type
 12765 ;;                  1    wreg      void 
 12766 ;; Registers used:
 12767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12768 ;; Tracked objects:
 12769 ;;		On entry : 0/0
 12770 ;;		On exit  : 0/0
 12771 ;;		Unchanged: 0/0
 12772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12775 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 12776 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 12777 ;;Total ram usage:        2 bytes
 12778 ;; Hardware stack levels required when called:   20
 12779 ;; This function calls:
 12780 ;;		_ADCC_SetADTIInterruptHandler
 12781 ;;		_INT0_SetInterruptHandler
 12782 ;;		_SYSTEM_Initialize
 12783 ;;		_TMR5_SetInterruptHandler
 12784 ;;		_TMR5_StopTimer
 12785 ;;		_TMR6_SetInterruptHandler
 12786 ;;		_TMR7_SetInterruptHandler
 12787 ;;		_getCauseOfReset
 12788 ;;		_recoverSRAMMaxFromEEPROM
 12789 ;;		_saveSRAMMaxToEEPROM
 12790 ;;		_terminal_clearTerminal
 12791 ;;		_terminal_ringBufferPull
 12792 ;;		_terminal_setCursorHome
 12793 ;;		_terminal_textAttributesReset
 12794 ;; This function is called by:
 12795 ;;		Startup code after reset
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799                           	psect	text0
 12800  018040                     __ptext0:
 12801                           	opt stack 0
 12802  018040                     _main:
 12803                           	opt stack 11
 12804                           
 12805                           ;main.c: 483: reset_cause = getCauseOfReset();
 12806                           
 12807                           ;incstack = 0
 12808  018040  ECDC  F0C5         	call	_getCauseOfReset	;wreg free
 12809  018044  0102               	movlb	2	; () banked
 12810  018046  6FFE               	movwf	_reset_cause& (0+255),b
 12811                           
 12812                           ; BSR set to: 2
 12813                           ;main.c: 487: _delay((unsigned long)((250)*(64000000/4000.0)));
 12814  018048  0E15               	movlw	21
 12815  01804A  0102               	movlb	2	; () banked
 12816  01804C  6FD9               	movwf	(??_main+1)& (0+255),b
 12817  01804E  0E4B               	movlw	75
 12818  018050  6FD8               	movwf	??_main& (0+255),b
 12819  018052  0EBE               	movlw	190
 12820  018054                     u27427:
 12821  018054  2EE8               	decfsz	wreg,f,c
 12822  018056  D7FE               	bra	u27427
 12823  018058  2FD8               	decfsz	??_main& (0+255),f,b
 12824  01805A  D7FC               	bra	u27427
 12825  01805C  2FD9               	decfsz	(??_main+1)& (0+255),f,b
 12826  01805E  D7FA               	bra	u27427
 12827  018060  F000               	nop	
 12828                           
 12829                           ;main.c: 490: SYSTEM_Initialize();
 12830  018062  ECE1  F0C8         	call	_SYSTEM_Initialize	;wreg free
 12831                           
 12832                           ;main.c: 493: LATGbits.LATG0 = 0;
 12833  018066  907F               	bcf	3967,0,c	;volatile
 12834                           
 12835                           ;main.c: 494: LATGbits.LATG1 = 0;
 12836  018068  927F               	bcf	3967,1,c	;volatile
 12837                           
 12838                           ;main.c: 495: load_enable = 0;
 12839  01806A  945E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 12840                           
 12841                           ;main.c: 498: ADCON2bits.ADCRS = 7;
 12842  01806C  010F               	movlb	15	; () banked
 12843  01806E  895A               	bsf	90,4,b	;volatile
 12844  018070  8B5A               	bsf	90,5,b	;volatile
 12845  018072  8D5A               	bsf	90,6,b	;volatile
 12846                           
 12847                           ; BSR set to: 15
 12848                           ;main.c: 499: ADCAP = 20;
 12849  018074  0E14               	movlw	20
 12850  018076  6F5D               	movwf	93,b	;volatile
 12851                           
 12852                           ; BSR set to: 15
 12853                           ;main.c: 502: TMR6_SetInterruptHandler(heartbeatTimerCallback);
 12854  018078  0E86               	movlw	low _heartbeatTimerCallback
 12855  01807A  0101               	movlb	1	; () banked
 12856  01807C  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 12857  01807E  0E8F               	movlw	high _heartbeatTimerCallback
 12858  018080  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12859  018082  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
 12860  018084  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12861  018086  EC0F  F0CB         	call	_TMR6_SetInterruptHandler	;wreg free
 12862                           
 12863                           ;main.c: 505: ADCC_SetADTIInterruptHandler(ADCPostProcessingCallback);
 12864  01808A  0EB0               	movlw	low _ADCPostProcessingCallback
 12865  01808C  0101               	movlb	1	; () banked
 12866  01808E  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 12867  018090  0E2F               	movlw	high _ADCPostProcessingCallback
 12868  018092  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 12869  018094  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
 12870  018096  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 12871  018098  EC32  F0CB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 12872                           
 12873                           ;main.c: 508: TMR7_SetInterruptHandler(acquisitionTimerCallback);
 12874  01809C  0EB0               	movlw	low _acquisitionTimerCallback
 12875  01809E  0101               	movlb	1	; () banked
 12876  0180A0  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 12877  0180A2  0E95               	movlw	high _acquisitionTimerCallback
 12878  0180A4  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12879  0180A6  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
 12880  0180A8  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12881  0180AA  EC08  F0CB         	call	_TMR7_SetInterruptHandler	;wreg free
 12882                           
 12883                           ;main.c: 511: INT0_SetInterruptHandler(dimmingOffTimeCallback);
 12884  0180AE  0E48               	movlw	low _dimmingOffTimeCallback
 12885  0180B0  0101               	movlb	1	; () banked
 12886  0180B2  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 12887  0180B4  0E95               	movlw	high _dimmingOffTimeCallback
 12888  0180B6  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12889  0180B8  0E01               	movlw	low (_dimmingOffTimeCallback shr (0+16))
 12890  0180BA  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12891  0180BC  EC1D  F0CB         	call	_INT0_SetInterruptHandler	;wreg free
 12892                           
 12893                           ;main.c: 514: TMR5_SetInterruptHandler(dimmingOnTimeCallback);
 12894  0180C0  0E80               	movlw	low _dimmingOnTimeCallback
 12895  0180C2  0101               	movlb	1	; () banked
 12896  0180C4  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 12897  0180C6  0E96               	movlw	high _dimmingOnTimeCallback
 12898  0180C8  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12899  0180CA  0E01               	movlw	low (_dimmingOnTimeCallback shr (0+16))
 12900  0180CC  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 12901  0180CE  EC16  F0CB         	call	_TMR5_SetInterruptHandler	;wreg free
 12902                           
 12903                           ;main.c: 517: TMR5_StopTimer();
 12904  0180D2  EC6A  F0CB         	call	_TMR5_StopTimer	;wreg free
 12905                           
 12906                           ;main.c: 518: PIE0bits.INT0IE = 0;
 12907  0180D6  010E               	movlb	14	; () banked
 12908  0180D8  9129               	bcf	41,0,b	;volatile
 12909                           
 12910                           ; BSR set to: 14
 12911                           ;main.c: 522: recoverSRAMMaxFromEEPROM();
 12912  0180DA  ECB1  F0B8         	call	_recoverSRAMMaxFromEEPROM	;wreg free
 12913                           
 12914                           ;main.c: 525: (INTCONbits.GIEH = 1);
 12915  0180DE  8EF2               	bsf	intcon,7,c	;volatile
 12916                           
 12917                           ;main.c: 528: (INTCONbits.GIEL = 1);
 12918  0180E0  8CF2               	bsf	intcon,6,c	;volatile
 12919                           
 12920                           ;main.c: 531: terminal_clearTerminal();
 12921  0180E2  ECF1  F0CA         	call	_terminal_clearTerminal	;wreg free
 12922                           
 12923                           ;main.c: 532: terminal_setCursorHome();
 12924  0180E6  ECE1  F0CA         	call	_terminal_setCursorHome	;wreg free
 12925                           
 12926                           ;main.c: 533: terminal_textAttributesReset();
 12927  0180EA  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 12928  0180EE                     
 12929                           ;main.c: 537: {
 12930                           ;main.c: 540: if (eusart2RxStringReady) {
 12931  0180EE  0100               	movlb	0	; () banked
 12932  0180F0  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;main.c: 542: terminal_ringBufferPull();
 12936  0180F2  ECA8  F0BB         	call	_terminal_ringBufferPull	;wreg free
 12937                           
 12938                           ;main.c: 544: }
 12939                           ;main.c: 547: saveSRAMMaxToEEPROM();
 12940  0180F6  ECEC  F0B3         	call	_saveSRAMMaxToEEPROM	;wreg free
 12941  0180FA  D7F9               	goto	l1078
 12942  0180FC                     __end_of_main:
 12943                           	opt stack 0
 12944                           tblptru	equ	0xFF8
 12945                           tblptrh	equ	0xFF7
 12946                           tblptrl	equ	0xFF6
 12947                           tablat	equ	0xFF5
 12948                           intcon	equ	0xFF2
 12949                           postinc0	equ	0xFEE
 12950                           wreg	equ	0xFE8
 12951                           postdec1	equ	0xFE5
 12952                           fsr1l	equ	0xFE1
 12953                           
 12954 ;; *************** function _terminal_setCursorHome *****************
 12955 ;; Defined at:
 12956 ;;		line 85 in file "ring_buffer_interface.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;		None
 12959 ;; Auto vars:     Size  Location     Type
 12960 ;;		None
 12961 ;; Return value:  Size  Location     Type
 12962 ;;                  1    wreg      void 
 12963 ;; Registers used:
 12964 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12965 ;; Tracked objects:
 12966 ;;		On entry : 0/0
 12967 ;;		On exit  : 0/0
 12968 ;;		Unchanged: 0/0
 12969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12974 ;;Total ram usage:        0 bytes
 12975 ;; Hardware stack levels used:    1
 12976 ;; Hardware stack levels required when called:   16
 12977 ;; This function calls:
 12978 ;;		_printf
 12979 ;; This function is called by:
 12980 ;;		_main
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	text1
 12985  0195C2                     __ptext1:
 12986                           	opt stack 0
 12987  0195C2                     _terminal_setCursorHome:
 12988                           	opt stack 14
 12989                           
 12990                           ;ring_buffer_interface.c: 86: printf("\033[H");
 12991                           
 12992                           ;incstack = 0
 12993  0195C2  0EB8               	movlw	low STR_3
 12994  0195C4  0101               	movlb	1	; () banked
 12995  0195C6  6F82               	movwf	printf@f& (0+255),b
 12996  0195C8  0EFF               	movlw	high STR_3
 12997  0195CA  6F83               	movwf	(printf@f+1)& (0+255),b
 12998  0195CC  EC0F  F08A         	call	_printf	;wreg free
 12999  0195D0  0012               	return		;funcret
 13000  0195D2                     __end_of_terminal_setCursorHome:
 13001                           	opt stack 0
 13002                           tblptru	equ	0xFF8
 13003                           tblptrh	equ	0xFF7
 13004                           tblptrl	equ	0xFF6
 13005                           tablat	equ	0xFF5
 13006                           intcon	equ	0xFF2
 13007                           postinc0	equ	0xFEE
 13008                           wreg	equ	0xFE8
 13009                           postdec1	equ	0xFE5
 13010                           fsr1l	equ	0xFE1
 13011                           
 13012 ;; *************** function _terminal_ringBufferPull *****************
 13013 ;; Defined at:
 13014 ;;		line 12 in file "ring_buffer_interface.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;		None
 13017 ;; Auto vars:     Size  Location     Type
 13018 ;;  index           2   77[BANK2 ] int 
 13019 ;;  index           2   79[BANK2 ] int 
 13020 ;;  charNumber      2   75[BANK2 ] int 
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      void 
 13023 ;; Registers used:
 13024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13031 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 13032 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13033 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
 13034 ;;Total ram usage:        9 bytes
 13035 ;; Hardware stack levels used:    1
 13036 ;; Hardware stack levels required when called:   19
 13037 ;; This function calls:
 13038 ;;		_EUSART2_Read
 13039 ;;		_ringBufferLUT
 13040 ;;		_strlen
 13041 ;; This function is called by:
 13042 ;;		_main
 13043 ;; This function uses a non-reentrant model
 13044 ;;
 13045                           
 13046                           	psect	text2
 13047  017750                     __ptext2:
 13048                           	opt stack 0
 13049  017750                     _terminal_ringBufferPull:
 13050                           	opt stack 11
 13051                           
 13052                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
 13053                           
 13054                           ;incstack = 0
 13055  017750  C1DF  F2D2         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 13056  017754  0102               	movlb	2	; () banked
 13057  017756  6BD3               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 13058                           
 13059                           ; BSR set to: 2
 13060                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
 13061  017758  0E00               	movlw	0
 13062  01775A  6FD7               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 13063  01775C  0E00               	movlw	0
 13064  01775E  6FD6               	movwf	terminal_ringBufferPull@index& (0+255),b
 13065  017760                     l20380:
 13066                           
 13067                           ; BSR set to: 2
 13068  017760  BFD7               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 13069  017762  D006               	goto	l1117
 13070  017764  51D7               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 13071  017766  E10F               	bnz	l20390
 13072  017768  0E40               	movlw	64
 13073  01776A  5DD6               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 13074  01776C  B0D8               	btfsc	status,0,c
 13075  01776E  D00B               	goto	u27170
 13076  017770                     l1117:
 13077                           
 13078                           ; BSR set to: 2
 13079                           ;ring_buffer_interface.c: 19: line[index] = '\0';
 13080                           
 13081                           ; BSR set to: 2
 13082  017770  0E47               	movlw	low _line
 13083  017772  25D6               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 13084  017774  6ED9               	movwf	fsr2l,c
 13085  017776  0E02               	movlw	high _line
 13086  017778  21D7               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 13087  01777A  6EDA               	movwf	fsr2h,c
 13088  01777C  0E00               	movlw	0
 13089  01777E  6EDF               	movwf	indf2,c
 13090                           
 13091                           ; BSR set to: 2
 13092  017780  4BD6               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 13093  017782  2BD7               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 13094  017784  D7ED               	goto	l20380
 13095  017786                     u27170:
 13096  017786                     l20390:
 13097                           
 13098                           ; BSR set to: 2
 13099                           ;ring_buffer_interface.c: 21: }
 13100                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
 13101  017786  0E00               	movlw	0
 13102  017788  6FD5               	movwf	(terminal_ringBufferPull@index_2531+1)& (0+255),b
 13103  01778A  0E00               	movlw	0
 13104  01778C  6FD4               	movwf	terminal_ringBufferPull@index_2531& (0+255),b
 13105  01778E  D00F               	goto	l1119
 13106  017790                     
 13107                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
 13108                           
 13109                           ; BSR set to: 2
 13110  017790  EC14  F0C7         	call	_EUSART2_Read	;wreg free
 13111  017794  0101               	movlb	1	; () banked
 13112  017796  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 13113  017798  0E47               	movlw	low _line
 13114  01779A  0102               	movlb	2	; () banked
 13115  01779C  25D4               	addwf	terminal_ringBufferPull@index_2531& (0+255),w,b
 13116  01779E  6ED9               	movwf	fsr2l,c
 13117  0177A0  0E02               	movlw	high _line
 13118  0177A2  21D5               	addwfc	(terminal_ringBufferPull@index_2531+1)& (0+255),w,b
 13119  0177A4  6EDA               	movwf	fsr2h,c
 13120  0177A6  C1B8  FFDF         	movff	??_terminal_ringBufferPull,indf2
 13121                           
 13122                           ; BSR set to: 2
 13123  0177AA  4BD4               	infsnz	terminal_ringBufferPull@index_2531& (0+255),f,b
 13124  0177AC  2BD5               	incf	(terminal_ringBufferPull@index_2531+1)& (0+255),f,b
 13125  0177AE                     l1119:
 13126                           
 13127                           ; BSR set to: 2
 13128                           
 13129                           ; BSR set to: 2
 13130  0177AE  51D2               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 13131  0177B0  5DD4               	subwf	terminal_ringBufferPull@index_2531& (0+255),w,b
 13132  0177B2  51D5               	movf	(terminal_ringBufferPull@index_2531+1)& (0+255),w,b
 13133  0177B4  0A80               	xorlw	128
 13134  0177B6  0101               	movlb	1	; () banked
 13135  0177B8  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 13136  0177BA  0102               	movlb	2	; () banked
 13137  0177BC  51D3               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 13138  0177BE  0A80               	xorlw	128
 13139  0177C0  0101               	movlb	1	; () banked
 13140  0177C2  59B8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 13141  0177C4  A0D8               	btfss	status,0,c
 13142  0177C6  D7E4               	goto	l1120
 13143                           
 13144                           ; BSR set to: 1
 13145                           ;ring_buffer_interface.c: 28: }
 13146                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
 13147  0177C8  C0FA  F1E0         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 13148                           
 13149                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
 13150                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
 13151  0177CC  D017               	goto	l1122
 13152  0177CE                     
 13153                           ; BSR set to: 1
 13154                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
 13155                           
 13156                           ; BSR set to: 1
 13157  0177CE  0EFF               	movlw	255
 13158  0177D0  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 13159  0177D2  0EFF               	movlw	255
 13160  0177D4  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 13161  0177D6  0E47               	movlw	low _line
 13162  0177D8  6F17               	movwf	strlen@s& (0+255),b
 13163  0177DA  0E02               	movlw	high _line
 13164  0177DC  6F18               	movwf	(strlen@s+1)& (0+255),b
 13165  0177DE  EC5D  F0C5         	call	_strlen	;wreg free
 13166  0177E2  0101               	movlb	1	; () banked
 13167  0177E4  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 13168  0177E6  2717               	addwf	?_strlen& (0+255),f,b
 13169  0177E8  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 13170  0177EA  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 13171  0177EC  0E47               	movlw	low _line
 13172  0177EE  2517               	addwf	?_strlen& (0+255),w,b
 13173  0177F0  6ED9               	movwf	fsr2l,c
 13174  0177F2  0E02               	movlw	high _line
 13175  0177F4  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 13176  0177F6  6EDA               	movwf	fsr2h,c
 13177  0177F8  0E00               	movlw	0
 13178  0177FA  6EDF               	movwf	indf2,c
 13179  0177FC                     l1122:
 13180                           
 13181                           ; BSR set to: 1
 13182  0177FC  0EFF               	movlw	255
 13183  0177FE  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 13184  017800  0EFF               	movlw	255
 13185  017802  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 13186  017804  0E47               	movlw	low _line
 13187  017806  6F17               	movwf	strlen@s& (0+255),b
 13188  017808  0E02               	movlw	high _line
 13189  01780A  6F18               	movwf	(strlen@s+1)& (0+255),b
 13190  01780C  EC5D  F0C5         	call	_strlen	;wreg free
 13191  017810  0101               	movlb	1	; () banked
 13192  017812  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 13193  017814  2717               	addwf	?_strlen& (0+255),f,b
 13194  017816  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 13195  017818  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 13196  01781A  0E47               	movlw	low _line
 13197  01781C  2517               	addwf	?_strlen& (0+255),w,b
 13198  01781E  6ED9               	movwf	fsr2l,c
 13199  017820  0E02               	movlw	high _line
 13200  017822  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 13201  017824  6EDA               	movwf	fsr2h,c
 13202  017826  0E0A               	movlw	10
 13203  017828  18DE               	xorwf	postinc2,w,c
 13204  01782A  B4D8               	btfsc	status,2,c
 13205  01782C  D7D0               	goto	l1123
 13206                           
 13207                           ; BSR set to: 1
 13208  01782E  0EFF               	movlw	255
 13209  017830  6FB8               	movwf	??_terminal_ringBufferPull& (0+255),b
 13210  017832  0EFF               	movlw	255
 13211  017834  6FB9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 13212  017836  0E47               	movlw	low _line
 13213  017838  6F17               	movwf	strlen@s& (0+255),b
 13214  01783A  0E02               	movlw	high _line
 13215  01783C  6F18               	movwf	(strlen@s+1)& (0+255),b
 13216  01783E  EC5D  F0C5         	call	_strlen	;wreg free
 13217  017842  0101               	movlb	1	; () banked
 13218  017844  51B8               	movf	??_terminal_ringBufferPull& (0+255),w,b
 13219  017846  2717               	addwf	?_strlen& (0+255),f,b
 13220  017848  51B9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 13221  01784A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
 13222  01784C  0E47               	movlw	low _line
 13223  01784E  2517               	addwf	?_strlen& (0+255),w,b
 13224  017850  6ED9               	movwf	fsr2l,c
 13225  017852  0E02               	movlw	high _line
 13226  017854  2118               	addwfc	(?_strlen+1)& (0+255),w,b
 13227  017856  6EDA               	movwf	fsr2h,c
 13228  017858  0E0D               	movlw	13
 13229  01785A  18DE               	xorwf	postinc2,w,c
 13230  01785C  B4D8               	btfsc	status,2,c
 13231  01785E  D7B7               	goto	l1123
 13232                           
 13233                           ; BSR set to: 1
 13234                           ;ring_buffer_interface.c: 40: }
 13235                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
 13236  017860  0100               	movlb	0	; () banked
 13237  017862  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
 13241  017864  0E47               	movlw	low _line
 13242  017866  0101               	movlb	1	; () banked
 13243  017868  6FB4               	movwf	ringBufferLUT@line& (0+255),b
 13244  01786A  0E02               	movlw	high _line
 13245  01786C  6FB5               	movwf	(ringBufferLUT@line+1)& (0+255),b
 13246  01786E  EC00  F080         	call	_ringBufferLUT	;wreg free
 13247  017872  0012               	return		;funcret
 13248  017874                     __end_of_terminal_ringBufferPull:
 13249                           	opt stack 0
 13250                           tblptru	equ	0xFF8
 13251                           tblptrh	equ	0xFF7
 13252                           tblptrl	equ	0xFF6
 13253                           tablat	equ	0xFF5
 13254                           intcon	equ	0xFF2
 13255                           postinc0	equ	0xFEE
 13256                           wreg	equ	0xFE8
 13257                           postdec1	equ	0xFE5
 13258                           fsr1l	equ	0xFE1
 13259                           indf2	equ	0xFDF
 13260                           postinc2	equ	0xFDE
 13261                           fsr2h	equ	0xFDA
 13262                           fsr2l	equ	0xFD9
 13263                           status	equ	0xFD8
 13264                           
 13265 ;; *************** function _ringBufferLUT *****************
 13266 ;; Defined at:
 13267 ;;		line 62 in file "ring_buffer_LUT.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;  line            2  180[BANK1 ] PTR unsigned char 
 13270 ;;		 -> line(64), 
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;  angle_degree    4   38[BANK2 ] PTR unsigned char 
 13273 ;;  index           2   69[BANK2 ] int 
 13274 ;;  channel_name   22   16[BANK2 ] unsigned char [22]
 13275 ;;  userID          2   73[BANK2 ] int 
 13276 ;;  max_voltage_    4   62[BANK2 ] int 
 13277 ;;  max_temp_pri    4   58[BANK2 ] int 
 13278 ;;  max_voltage_    4   54[BANK2 ] int 
 13279 ;;  max_voltage_    4   50[BANK2 ] int 
 13280 ;;  max_Power_pr    4   46[BANK2 ] int 
 13281 ;;  max_current_    4   42[BANK2 ] int 
 13282 ;;  arg_buff        3   66[BANK2 ] unsigned char [3]
 13283 ;;  percentage      2   71[BANK2 ] int 
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      void 
 13286 ;; Registers used:
 13287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13293 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13294 ;;      Locals:         0       0       0      59       0       0       0       0       0       0       0       0       
      +0       0       0
 13295 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13296 ;;      Totals:         0       0       4      59       0       0       0       0       0       0       0       0       
      +0       0       0
 13297 ;;Total ram usage:       63 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:   18
 13300 ;; This function calls:
 13301 ;;		_TMR5_StopTimer
 13302 ;;		_TMR7_StopTimer
 13303 ;;		___fladd
 13304 ;;		___fldiv
 13305 ;;		___flmul
 13306 ;;		___flneg
 13307 ;;		___wmul
 13308 ;;		___xxtofl
 13309 ;;		_atoi
 13310 ;;		_getCauseOfResetString
 13311 ;;		_getDeviceID
 13312 ;;		_getDeviceIDString
 13313 ;;		_getMajorRevisionID
 13314 ;;		_getMinorRevisionID
 13315 ;;		_getUserID
 13316 ;;		_printf
 13317 ;;		_readDoubleFromEEPROM
 13318 ;;		_strcmp
 13319 ;;		_strcpy
 13320 ;;		_strstr
 13321 ;;		_terminal_printNewline
 13322 ;;		_terminal_textAttributes
 13323 ;;		_terminal_textAttributesReset
 13324 ;;		_writeDoubleToEEPROM
 13325 ;; This function is called by:
 13326 ;;		_terminal_ringBufferPull
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           	psect	text3
 13331  010000                     __ptext3:
 13332                           	opt stack 0
 13333  010000                     _ringBufferLUT:
 13334                           	opt stack 11
 13335                           
 13336                           ;ring_buffer_LUT.c: 68: if((0 == strcmp(line, "Reset"))) {
 13337                           
 13338                           ;incstack = 0
 13339  010000  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13340  010004  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13341  010008  0EE7               	movlw	low (STR_156+10)
 13342  01000A  0101               	movlb	1	; () banked
 13343  01000C  6F19               	movwf	strcmp@s2& (0+255),b
 13344  01000E  0EFD               	movlw	high (STR_156+10)
 13345  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13346  010012  EC05  F0C6         	call	_strcmp	;wreg free
 13347  010016  0101               	movlb	1	; () banked
 13348  010018  5117               	movf	?_strcmp& (0+255),w,b
 13349  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13350  01001C  A4D8               	btfss	status,2,c
 13351  01001E  D026               	goto	l1302
 13352                           
 13353                           ; BSR set to: 1
 13354                           ;ring_buffer_LUT.c: 72: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 13355  010020  C0F6  F11B         	movff	_Total_Energy,writeDoubleToEEPROM@input_double	;volatile
 13356  010024  C0F7  F11C         	movff	_Total_Energy+1,writeDoubleToEEPROM@input_double+1	;volatile
 13357  010028  C0F8  F11D         	movff	_Total_Energy+2,writeDoubleToEEPROM@input_double+2	;volatile
 13358  01002C  C0F9  F11E         	movff	_Total_Energy+3,writeDoubleToEEPROM@input_double+3	;volatile
 13359  010030  0EFD               	movlw	low _Total_Energy_address
 13360  010032  6EF6               	movwf	tblptrl,c
 13361  010034                     	if	1	;There is more than 1 active tblptr byte
 13362  010034  0ED7               	movlw	high _Total_Energy_address
 13363  010036  6EF7               	movwf	tblptrh,c
 13364  010038                     	endif
 13365  010038                     	if	1	;There are 3 active tblptr bytes
 13366  010038  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 13367  01003A  6EF8               	movwf	tblptru,c
 13368  01003C                     	endif
 13369  01003C  0009               	tblrd		*+
 13370  01003E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 13371  010042  000A               	tblrd		*-
 13372  010044  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 13373  010048  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 13374                           
 13375                           ;ring_buffer_LUT.c: 75: printf("\033[2J");
 13376  01004C  0EAF               	movlw	low STR_2
 13377  01004E  0101               	movlb	1	; () banked
 13378  010050  6F82               	movwf	printf@f& (0+255),b
 13379  010052  0EFF               	movlw	high STR_2
 13380  010054  6F83               	movwf	(printf@f+1)& (0+255),b
 13381  010056  EC0F  F08A         	call	_printf	;wreg free
 13382                           
 13383                           ;ring_buffer_LUT.c: 78: printf("\033[H");
 13384  01005A  0EB8               	movlw	low STR_3
 13385  01005C  0101               	movlb	1	; () banked
 13386  01005E  6F82               	movwf	printf@f& (0+255),b
 13387  010060  0EFF               	movlw	high STR_3
 13388  010062  6F83               	movwf	(printf@f+1)& (0+255),b
 13389  010064  EC0F  F08A         	call	_printf	;wreg free
 13390  010068  00FF               	reset		;# 
 13391                           
 13392                           ;ring_buffer_LUT.c: 83: }
 13393  01006A  0012               	return	
 13394  01006C                     l1302:
 13395                           
 13396                           ;ring_buffer_LUT.c: 86: else if((0 == strcmp(line, "Clear"))) {
 13397  01006C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13398  010070  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13399  010074  0E9F               	movlw	low STR_44
 13400  010076  0101               	movlb	1	; () banked
 13401  010078  6F19               	movwf	strcmp@s2& (0+255),b
 13402  01007A  0EFF               	movlw	high STR_44
 13403  01007C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13404  01007E  EC05  F0C6         	call	_strcmp	;wreg free
 13405  010082  0101               	movlb	1	; () banked
 13406  010084  5117               	movf	?_strcmp& (0+255),w,b
 13407  010086  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13408  010088  A4D8               	btfss	status,2,c
 13409  01008A  D00E               	goto	l1304
 13410                           
 13411                           ; BSR set to: 1
 13412                           ;ring_buffer_LUT.c: 89: printf("\033[2J");
 13413  01008C  0EAF               	movlw	low STR_2
 13414  01008E  6F82               	movwf	printf@f& (0+255),b
 13415  010090  0EFF               	movlw	high STR_2
 13416  010092  6F83               	movwf	(printf@f+1)& (0+255),b
 13417  010094  EC0F  F08A         	call	_printf	;wreg free
 13418                           
 13419                           ;ring_buffer_LUT.c: 92: printf("\033[H");
 13420  010098  0EB8               	movlw	low STR_3
 13421  01009A  0101               	movlb	1	; () banked
 13422  01009C  6F82               	movwf	printf@f& (0+255),b
 13423  01009E  0EFF               	movlw	high STR_3
 13424  0100A0  6F83               	movwf	(printf@f+1)& (0+255),b
 13425  0100A2  EC0F  F08A         	call	_printf	;wreg free
 13426                           
 13427                           ;ring_buffer_LUT.c: 94: }
 13428  0100A6  0012               	return	
 13429  0100A8                     l1304:
 13430                           
 13431                           ;ring_buffer_LUT.c: 97: else if((0 == strcmp(line, "Cause of Reset?"))) {
 13432  0100A8  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13433  0100AC  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13434  0100B0  0E1D               	movlw	low STR_47
 13435  0100B2  0101               	movlb	1	; () banked
 13436  0100B4  6F19               	movwf	strcmp@s2& (0+255),b
 13437  0100B6  0EFE               	movlw	high STR_47
 13438  0100B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13439  0100BA  EC05  F0C6         	call	_strcmp	;wreg free
 13440  0100BE  0101               	movlb	1	; () banked
 13441  0100C0  5117               	movf	?_strcmp& (0+255),w,b
 13442  0100C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13443  0100C4  A4D8               	btfss	status,2,c
 13444  0100C6  D019               	goto	l1306
 13445                           
 13446                           ; BSR set to: 1
 13447                           ;ring_buffer_LUT.c: 99: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13448  0100C8  0E00               	movlw	0
 13449  0100CA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13450  0100CC  0E00               	movlw	0
 13451  0100CE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13452  0100D0  0E02               	movlw	2
 13453  0100D2  ECD7  F0A1         	call	_terminal_textAttributes
 13454                           
 13455                           ;ring_buffer_LUT.c: 102: printf("The cause of the most recent device reset was: %s\n\r",
 13456                           ;ring_buffer_LUT.c: 103: getCauseOfResetString(reset_cause));
 13457  0100D6  0E07               	movlw	low STR_48
 13458  0100D8  0101               	movlb	1	; () banked
 13459  0100DA  6F82               	movwf	printf@f& (0+255),b
 13460  0100DC  0EF7               	movlw	high STR_48
 13461  0100DE  6F83               	movwf	(printf@f+1)& (0+255),b
 13462  0100E0  0102               	movlb	2	; () banked
 13463  0100E2  51FE               	movf	_reset_cause& (0+255),w,b
 13464  0100E4  EC2C  F0C9         	call	_getCauseOfResetString
 13465  0100E8  C117  F184         	movff	?_getCauseOfResetString,?_printf+2
 13466  0100EC  C118  F185         	movff	?_getCauseOfResetString+1,?_printf+3
 13467  0100F0  EC0F  F08A         	call	_printf	;wreg free
 13468                           
 13469                           ;ring_buffer_LUT.c: 105: terminal_textAttributesReset();
 13470  0100F4  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 13471                           
 13472                           ;ring_buffer_LUT.c: 107: }
 13473  0100F8  0012               	return	
 13474  0100FA                     l1306:
 13475                           
 13476                           ;ring_buffer_LUT.c: 110: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN
      +                          "))) {
 13477  0100FA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13478  0100FE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13479  010102  0E99               	movlw	low STR_49
 13480  010104  0101               	movlb	1	; () banked
 13481  010106  6F19               	movwf	strcmp@s2& (0+255),b
 13482  010108  0EFF               	movlw	high STR_49
 13483  01010A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13484  01010C  EC05  F0C6         	call	_strcmp	;wreg free
 13485  010110  0101               	movlb	1	; () banked
 13486  010112  5117               	movf	?_strcmp& (0+255),w,b
 13487  010114  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13488  010116  B4D8               	btfsc	status,2,c
 13489  010118  D00F               	goto	u26490
 13490                           
 13491                           ; BSR set to: 1
 13492  01011A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13493  01011E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13494  010122  0EB4               	movlw	low STR_50
 13495  010124  6F19               	movwf	strcmp@s2& (0+255),b
 13496  010126  0EFF               	movlw	high STR_50
 13497  010128  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13498  01012A  EC05  F0C6         	call	_strcmp	;wreg free
 13499  01012E  0101               	movlb	1	; () banked
 13500  010130  5117               	movf	?_strcmp& (0+255),w,b
 13501  010132  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13502  010134  A4D8               	btfss	status,2,c
 13503  010136  D018               	goto	l1308
 13504  010138                     u26490:
 13505                           
 13506                           ; BSR set to: 1
 13507                           ;ring_buffer_LUT.c: 112: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13508                           
 13509                           ; BSR set to: 1
 13510  010138  0E00               	movlw	0
 13511  01013A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13512  01013C  0E00               	movlw	0
 13513  01013E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13514  010140  0E02               	movlw	2
 13515  010142  ECD7  F0A1         	call	_terminal_textAttributes
 13516                           
 13517                           ;ring_buffer_LUT.c: 113: printf("AC Power Meter\n\r");
 13518  010146  0E77               	movlw	low STR_51
 13519  010148  0101               	movlb	1	; () banked
 13520  01014A  6F82               	movwf	printf@f& (0+255),b
 13521  01014C  0EFD               	movlw	high STR_51
 13522  01014E  6F83               	movwf	(printf@f+1)& (0+255),b
 13523  010150  EC0F  F08A         	call	_printf	;wreg free
 13524                           
 13525                           ;ring_buffer_LUT.c: 114: printf("Marquette University ELEN 3035 Final Project\n\r");
 13526  010154  0E05               	movlw	low STR_52
 13527  010156  0101               	movlb	1	; () banked
 13528  010158  6F82               	movwf	printf@f& (0+255),b
 13529  01015A  0EF8               	movlw	high STR_52
 13530  01015C  6F83               	movwf	(printf@f+1)& (0+255),b
 13531  01015E  EC0F  F08A         	call	_printf	;wreg free
 13532                           
 13533                           ;ring_buffer_LUT.c: 115: terminal_textAttributesReset();
 13534  010162  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 13535                           
 13536                           ;ring_buffer_LUT.c: 117: }
 13537  010166  0012               	return	
 13538  010168                     l1308:
 13539                           
 13540                           ;ring_buffer_LUT.c: 120: else if((0 == strcmp(line, "Device ID?"))) {
 13541  010168  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13542  01016C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13543  010170  0E47               	movlw	low STR_53
 13544  010172  0101               	movlb	1	; () banked
 13545  010174  6F19               	movwf	strcmp@s2& (0+255),b
 13546  010176  0EFF               	movlw	high STR_53
 13547  010178  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13548  01017A  EC05  F0C6         	call	_strcmp	;wreg free
 13549  01017E  0101               	movlb	1	; () banked
 13550  010180  5117               	movf	?_strcmp& (0+255),w,b
 13551  010182  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13552  010184  A4D8               	btfss	status,2,c
 13553  010186  D023               	goto	l1312
 13554                           
 13555                           ; BSR set to: 1
 13556                           ;ring_buffer_LUT.c: 122: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13557  010188  0E00               	movlw	0
 13558  01018A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13559  01018C  0E00               	movlw	0
 13560  01018E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13561  010190  0E02               	movlw	2
 13562  010192  ECD7  F0A1         	call	_terminal_textAttributes
 13563                           
 13564                           ;ring_buffer_LUT.c: 125: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 13565                           ;ring_buffer_LUT.c: 126: "part number of %s\n\r",
 13566                           ;ring_buffer_LUT.c: 127: getDeviceID(),
 13567                           ;ring_buffer_LUT.c: 128: getDeviceIDString(getDeviceID()));
 13568  010196  0EF9               	movlw	low STR_54
 13569  010198  0101               	movlb	1	; () banked
 13570  01019A  6F82               	movwf	printf@f& (0+255),b
 13571  01019C  0EF2               	movlw	high STR_54
 13572  01019E  6F83               	movwf	(printf@f+1)& (0+255),b
 13573  0101A0  EC32  F0CA         	call	_getDeviceID	;wreg free
 13574  0101A4  C122  F184         	movff	?_getDeviceID,?_printf+2
 13575  0101A8  C123  F185         	movff	?_getDeviceID+1,?_printf+3
 13576  0101AC  EC32  F0CA         	call	_getDeviceID	;wreg free
 13577  0101B0  C122  F124         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 13578  0101B4  C123  F125         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 13579  0101B8  ECFD  F0C4         	call	_getDeviceIDString	;wreg free
 13580  0101BC  C124  F186         	movff	?_getDeviceIDString,?_printf+4
 13581  0101C0  C125  F187         	movff	?_getDeviceIDString+1,?_printf+5
 13582  0101C4  EC0F  F08A         	call	_printf	;wreg free
 13583                           
 13584                           ;ring_buffer_LUT.c: 130: terminal_textAttributesReset();
 13585  0101C8  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 13586                           
 13587                           ;ring_buffer_LUT.c: 132: }
 13588  0101CC  0012               	return	
 13589  0101CE                     l1312:
 13590                           
 13591                           ;ring_buffer_LUT.c: 135: else if((0 == strcmp(line, "Revision ID?"))) {
 13592  0101CE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13593  0101D2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13594  0101D6  0E08               	movlw	low STR_55
 13595  0101D8  0101               	movlb	1	; () banked
 13596  0101DA  6F19               	movwf	strcmp@s2& (0+255),b
 13597  0101DC  0EFF               	movlw	high STR_55
 13598  0101DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13599  0101E0  EC05  F0C6         	call	_strcmp	;wreg free
 13600  0101E4  0101               	movlb	1	; () banked
 13601  0101E6  5117               	movf	?_strcmp& (0+255),w,b
 13602  0101E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13603  0101EA  A4D8               	btfss	status,2,c
 13604  0101EC  D022               	goto	l1314
 13605                           
 13606                           ; BSR set to: 1
 13607                           ;ring_buffer_LUT.c: 137: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13608  0101EE  0E00               	movlw	0
 13609  0101F0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13610  0101F2  0E00               	movlw	0
 13611  0101F4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13612  0101F6  0E02               	movlw	2
 13613  0101F8  ECD7  F0A1         	call	_terminal_textAttributes
 13614                           
 13615                           ;ring_buffer_LUT.c: 140: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 13616                           ;ring_buffer_LUT.c: 141: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 13617  0101FC  0EDD               	movlw	low STR_56
 13618  0101FE  0101               	movlb	1	; () banked
 13619  010200  6F82               	movwf	printf@f& (0+255),b
 13620  010202  0EF4               	movlw	high STR_56
 13621  010204  6F83               	movwf	(printf@f+1)& (0+255),b
 13622  010206  EC02  F0C8         	call	_getMajorRevisionID	;wreg free
 13623  01020A  0101               	movlb	1	; () banked
 13624  01020C  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 13625  01020E  0E41               	movlw	65
 13626  010210  25B6               	addwf	??_ringBufferLUT& (0+255),w,b
 13627  010212  6F84               	movwf	(?_printf+2)& (0+255),b
 13628  010214  6B85               	clrf	(?_printf+3)& (0+255),b
 13629  010216  0E00               	movlw	0
 13630  010218  2385               	addwfc	(?_printf+3)& (0+255),f,b
 13631  01021A  ECC4  F0C9         	call	_getMinorRevisionID	;wreg free
 13632  01021E  0101               	movlb	1	; () banked
 13633  010220  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 13634  010222  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 13635  010224  6F86               	movwf	(?_printf+4)& (0+255),b
 13636  010226  6B87               	clrf	(?_printf+5)& (0+255),b
 13637  010228  EC0F  F08A         	call	_printf	;wreg free
 13638                           
 13639                           ;ring_buffer_LUT.c: 143: terminal_textAttributesReset();
 13640  01022C  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 13641                           
 13642                           ;ring_buffer_LUT.c: 145: }
 13643  010230  0012               	return	
 13644  010232                     l1314:
 13645                           
 13646                           ;ring_buffer_LUT.c: 148: else if((0 == strcmp(line, "User IDs?"))) {
 13647  010232  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13648  010236  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13649  01023A  0E68               	movlw	low STR_57
 13650  01023C  0101               	movlb	1	; () banked
 13651  01023E  6F19               	movwf	strcmp@s2& (0+255),b
 13652  010240  0EFF               	movlw	high STR_57
 13653  010242  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13654  010244  EC05  F0C6         	call	_strcmp	;wreg free
 13655  010248  0101               	movlb	1	; () banked
 13656  01024A  5117               	movf	?_strcmp& (0+255),w,b
 13657  01024C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13658  01024E  A4D8               	btfss	status,2,c
 13659  010250  D03E               	goto	l1316
 13660                           
 13661                           ; BSR set to: 1
 13662                           ;ring_buffer_LUT.c: 150: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13663  010252  0E00               	movlw	0
 13664  010254  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13665  010256  0E00               	movlw	0
 13666  010258  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13667  01025A  0E02               	movlw	2
 13668  01025C  ECD7  F0A1         	call	_terminal_textAttributes
 13669                           
 13670                           ;ring_buffer_LUT.c: 152: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 13671  010260  0E20               	movlw	low STR_58
 13672  010262  0101               	movlb	1	; () banked
 13673  010264  6F82               	movwf	printf@f& (0+255),b
 13674  010266  0EF4               	movlw	high STR_58
 13675  010268  6F83               	movwf	(printf@f+1)& (0+255),b
 13676  01026A  EC0F  F08A         	call	_printf	;wreg free
 13677                           
 13678                           ;ring_buffer_LUT.c: 155: for (int userID = 0; userID <= 7; userID++) {
 13679  01026E  0E00               	movlw	0
 13680  010270  0102               	movlb	2	; () banked
 13681  010272  6FD1               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 13682  010274  0E00               	movlw	0
 13683  010276  6FD0               	movwf	ringBufferLUT@userID& (0+255),b
 13684  010278                     l19994:
 13685                           
 13686                           ; BSR set to: 2
 13687  010278  BFD1               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 13688  01027A  D006               	goto	l1317
 13689  01027C  51D1               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 13690  01027E  E124               	bnz	l20004
 13691  010280  0E08               	movlw	8
 13692  010282  5DD0               	subwf	ringBufferLUT@userID& (0+255),w,b
 13693  010284  B0D8               	btfsc	status,0,c
 13694  010286  D020               	goto	u26540
 13695  010288                     l1317:
 13696                           
 13697                           ; BSR set to: 2
 13698                           ;ring_buffer_LUT.c: 157: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 13699                           ;ring_buffer_LUT.c: 158: userID,
 13700                           ;ring_buffer_LUT.c: 159: (2 * userID),
 13701                           ;ring_buffer_LUT.c: 160: getUserID(userID));
 13702                           
 13703                           ; BSR set to: 2
 13704  010288  0E31               	movlw	low STR_59
 13705  01028A  0101               	movlb	1	; () banked
 13706  01028C  6F82               	movwf	printf@f& (0+255),b
 13707  01028E  0EF6               	movlw	high STR_59
 13708  010290  6F83               	movwf	(printf@f+1)& (0+255),b
 13709  010292  C2D0  F184         	movff	ringBufferLUT@userID,?_printf+2
 13710  010296  C2D1  F185         	movff	ringBufferLUT@userID+1,?_printf+3
 13711  01029A  90D8               	bcf	status,0,c
 13712  01029C  0102               	movlb	2	; () banked
 13713  01029E  35D0               	rlcf	ringBufferLUT@userID& (0+255),w,b
 13714  0102A0  0101               	movlb	1	; () banked
 13715  0102A2  6F86               	movwf	(?_printf+4)& (0+255),b
 13716  0102A4  0102               	movlb	2	; () banked
 13717  0102A6  35D1               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 13718  0102A8  0101               	movlb	1	; () banked
 13719  0102AA  6F87               	movwf	(?_printf+5)& (0+255),b
 13720  0102AC  0102               	movlb	2	; () banked
 13721  0102AE  51D0               	movf	ringBufferLUT@userID& (0+255),w,b
 13722  0102B0  EC80  F0C7         	call	_getUserID
 13723  0102B4  C122  F188         	movff	?_getUserID,?_printf+6
 13724  0102B8  C123  F189         	movff	?_getUserID+1,?_printf+7
 13725  0102BC  EC0F  F08A         	call	_printf	;wreg free
 13726  0102C0  0102               	movlb	2	; () banked
 13727  0102C2  4BD0               	infsnz	ringBufferLUT@userID& (0+255),f,b
 13728  0102C4  2BD1               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 13729  0102C6  D7D8               	goto	l19994
 13730  0102C8                     u26540:
 13731  0102C8                     l20004:
 13732                           
 13733                           ; BSR set to: 2
 13734                           ;ring_buffer_LUT.c: 162: }
 13735                           ;ring_buffer_LUT.c: 164: terminal_textAttributesReset();
 13736  0102C8  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 13737                           
 13738                           ;ring_buffer_LUT.c: 166: }
 13739  0102CC  0012               	return	
 13740  0102CE                     l1316:
 13741                           
 13742                           ;ring_buffer_LUT.c: 169: else if((0 == strcmp(line, "ADC Error?"))) {
 13743  0102CE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13744  0102D2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13745  0102D6  0E5D               	movlw	low STR_60
 13746  0102D8  0101               	movlb	1	; () banked
 13747  0102DA  6F19               	movwf	strcmp@s2& (0+255),b
 13748  0102DC  0EFF               	movlw	high STR_60
 13749  0102DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13750  0102E0  EC05  F0C6         	call	_strcmp	;wreg free
 13751  0102E4  0101               	movlb	1	; () banked
 13752  0102E6  5117               	movf	?_strcmp& (0+255),w,b
 13753  0102E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13754  0102EA  A4D8               	btfss	status,2,c
 13755  0102EC  D0A4               	goto	l1320
 13756                           
 13757                           ; BSR set to: 1
 13758                           ;ring_buffer_LUT.c: 171: if (adc_error_flag) {
 13759  0102EE  A25E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 13760  0102F0  D090               	goto	l1321
 13761                           
 13762                           ; BSR set to: 1
 13763                           ;ring_buffer_LUT.c: 173: terminal_textAttributes(RED, BLACK, NORMAL);
 13764  0102F2  0E00               	movlw	0
 13765  0102F4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13766  0102F6  0E00               	movlw	0
 13767  0102F8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13768  0102FA  0E01               	movlw	1
 13769  0102FC  ECD7  F0A1         	call	_terminal_textAttributes
 13770                           
 13771                           ;ring_buffer_LUT.c: 176: current_adc_channel = ADPCH;
 13772  010300  CF5F F243          	movff	3935,_current_adc_channel	;volatile
 13773                           
 13774                           ;ring_buffer_LUT.c: 179: char channel_name[22];
 13775                           ;ring_buffer_LUT.c: 181: switch (current_adc_channel) {
 13776  010304  D060               	goto	l1322
 13777  010306                     
 13778                           ;ring_buffer_LUT.c: 184: strcpy(channel_name, "ISNS");
 13779  010306  0E97               	movlw	low ringBufferLUT@channel_name
 13780  010308  0101               	movlb	1	; () banked
 13781  01030A  6F17               	movwf	strcpy@to& (0+255),b
 13782  01030C  0E02               	movlw	high ringBufferLUT@channel_name
 13783  01030E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13784  010310  0EA5               	movlw	low STR_61
 13785  010312  6F19               	movwf	strcpy@from& (0+255),b
 13786  010314  0EFF               	movlw	high STR_61
 13787  010316  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13788  010318  EC77  F0C8         	call	_strcpy	;wreg free
 13789                           
 13790                           ;ring_buffer_LUT.c: 185: break;
 13791  01031C  D06C               	goto	l1324
 13792  01031E                     
 13793                           ;ring_buffer_LUT.c: 188: strcpy(channel_name, "POS12");
 13794  01031E  0E97               	movlw	low ringBufferLUT@channel_name
 13795  010320  0101               	movlb	1	; () banked
 13796  010322  6F17               	movwf	strcpy@to& (0+255),b
 13797  010324  0E02               	movlw	high ringBufferLUT@channel_name
 13798  010326  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13799  010328  0E93               	movlw	low STR_62
 13800  01032A  6F19               	movwf	strcpy@from& (0+255),b
 13801  01032C  0EFF               	movlw	high STR_62
 13802  01032E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13803  010330  EC77  F0C8         	call	_strcpy	;wreg free
 13804                           
 13805                           ;ring_buffer_LUT.c: 189: break;
 13806  010334  D060               	goto	l1324
 13807  010336                     
 13808                           ;ring_buffer_LUT.c: 192: strcpy(channel_name, "POS3P3");
 13809  010336  0E97               	movlw	low ringBufferLUT@channel_name
 13810  010338  0101               	movlb	1	; () banked
 13811  01033A  6F17               	movwf	strcpy@to& (0+255),b
 13812  01033C  0E02               	movlw	high ringBufferLUT@channel_name
 13813  01033E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13814  010340  0E8C               	movlw	low STR_63
 13815  010342  6F19               	movwf	strcpy@from& (0+255),b
 13816  010344  0EFF               	movlw	high STR_63
 13817  010346  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13818  010348  EC77  F0C8         	call	_strcpy	;wreg free
 13819                           
 13820                           ;ring_buffer_LUT.c: 193: break;
 13821  01034C  D054               	goto	l1324
 13822  01034E                     
 13823                           ;ring_buffer_LUT.c: 196: strcpy(channel_name, "Internal AVSS");
 13824  01034E  0E97               	movlw	low ringBufferLUT@channel_name
 13825  010350  0101               	movlb	1	; () banked
 13826  010352  6F17               	movwf	strcpy@to& (0+255),b
 13827  010354  0E02               	movlw	high ringBufferLUT@channel_name
 13828  010356  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13829  010358  0EDF               	movlw	low STR_64
 13830  01035A  6F19               	movwf	strcpy@from& (0+255),b
 13831  01035C  0EFE               	movlw	high STR_64
 13832  01035E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13833  010360  EC77  F0C8         	call	_strcpy	;wreg free
 13834                           
 13835                           ;ring_buffer_LUT.c: 197: break;
 13836  010364  D048               	goto	l1324
 13837  010366                     
 13838                           ;ring_buffer_LUT.c: 200: strcpy(channel_name, "Internal Temp");
 13839  010366  0E97               	movlw	low ringBufferLUT@channel_name
 13840  010368  0101               	movlb	1	; () banked
 13841  01036A  6F17               	movwf	strcpy@to& (0+255),b
 13842  01036C  0E02               	movlw	high ringBufferLUT@channel_name
 13843  01036E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13844  010370  0EED               	movlw	low STR_65
 13845  010372  6F19               	movwf	strcpy@from& (0+255),b
 13846  010374  0EFE               	movlw	high STR_65
 13847  010376  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13848  010378  EC77  F0C8         	call	_strcpy	;wreg free
 13849                           
 13850                           ;ring_buffer_LUT.c: 201: break;
 13851  01037C  D03C               	goto	l1324
 13852  01037E                     
 13853                           ;ring_buffer_LUT.c: 204: strcpy(channel_name, "Internal DAC1");
 13854  01037E  0E97               	movlw	low ringBufferLUT@channel_name
 13855  010380  0101               	movlb	1	; () banked
 13856  010382  6F17               	movwf	strcpy@to& (0+255),b
 13857  010384  0E02               	movlw	high ringBufferLUT@channel_name
 13858  010386  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13859  010388  0E99               	movlw	low STR_66
 13860  01038A  6F19               	movwf	strcpy@from& (0+255),b
 13861  01038C  0EFE               	movlw	high STR_66
 13862  01038E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13863  010390  EC77  F0C8         	call	_strcpy	;wreg free
 13864                           
 13865                           ;ring_buffer_LUT.c: 205: break;
 13866  010394  D030               	goto	l1324
 13867  010396                     
 13868                           ;ring_buffer_LUT.c: 208: strcpy(channel_name, "Internal FVR Buffer 1");
 13869  010396  0E97               	movlw	low ringBufferLUT@channel_name
 13870  010398  0101               	movlb	1	; () banked
 13871  01039A  6F17               	movwf	strcpy@to& (0+255),b
 13872  01039C  0E02               	movlw	high ringBufferLUT@channel_name
 13873  01039E  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13874  0103A0  0EB0               	movlw	low STR_67
 13875  0103A2  6F19               	movwf	strcpy@from& (0+255),b
 13876  0103A4  0EFC               	movlw	high STR_67
 13877  0103A6  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13878  0103A8  EC77  F0C8         	call	_strcpy	;wreg free
 13879                           
 13880                           ;ring_buffer_LUT.c: 209: break;
 13881  0103AC  D024               	goto	l1324
 13882  0103AE                     
 13883                           ;ring_buffer_LUT.c: 212: strcpy(channel_name, "Undefined");
 13884  0103AE  0E97               	movlw	low ringBufferLUT@channel_name
 13885  0103B0  0101               	movlb	1	; () banked
 13886  0103B2  6F17               	movwf	strcpy@to& (0+255),b
 13887  0103B4  0E02               	movlw	high ringBufferLUT@channel_name
 13888  0103B6  6F18               	movwf	(strcpy@to+1)& (0+255),b
 13889  0103B8  0E72               	movlw	low STR_68
 13890  0103BA  6F19               	movwf	strcpy@from& (0+255),b
 13891  0103BC  0EFF               	movlw	high STR_68
 13892  0103BE  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 13893  0103C0  EC77  F0C8         	call	_strcpy	;wreg free
 13894                           
 13895                           ;ring_buffer_LUT.c: 215: }
 13896                           
 13897                           ;ring_buffer_LUT.c: 213: break;
 13898  0103C4  D018               	goto	l1324
 13899  0103C6                     l1322:
 13900  0103C6  0102               	movlb	2	; () banked
 13901  0103C8  5143               	movf	_current_adc_channel& (0+255),w,b
 13902                           
 13903                           ; Switch size 1, requested type "space"
 13904                           ; Number of cases is 7, Range of values is 0 to 63
 13905                           ; switch strategies available:
 13906                           ; Name         Instructions Cycles
 13907                           ; simple_byte           22    12 (average)
 13908                           ;	Chosen strategy is simple_byte
 13909  0103CA  0A00               	xorlw	0	; case 0
 13910  0103CC  B4D8               	btfsc	status,2,c
 13911  0103CE  D79B               	goto	l1323
 13912  0103D0  0A04               	xorlw	4	; case 4
 13913  0103D2  B4D8               	btfsc	status,2,c
 13914  0103D4  D7A4               	goto	l1325
 13915  0103D6  0A26               	xorlw	38	; case 34
 13916  0103D8  B4D8               	btfsc	status,2,c
 13917  0103DA  D7AD               	goto	l1326
 13918  0103DC  0A1E               	xorlw	30	; case 60
 13919  0103DE  B4D8               	btfsc	status,2,c
 13920  0103E0  D7B6               	goto	l1327
 13921  0103E2  0A01               	xorlw	1	; case 61
 13922  0103E4  B4D8               	btfsc	status,2,c
 13923  0103E6  D7BF               	goto	l1328
 13924  0103E8  0A03               	xorlw	3	; case 62
 13925  0103EA  B4D8               	btfsc	status,2,c
 13926  0103EC  D7C8               	goto	l1329
 13927  0103EE  0A01               	xorlw	1	; case 63
 13928  0103F0  B4D8               	btfsc	status,2,c
 13929  0103F2  D7D1               	goto	l1330
 13930  0103F4  D7DC               	goto	l1331
 13931  0103F6                     l1324:
 13932                           
 13933                           ;ring_buffer_LUT.c: 218: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
 13934                           
 13935                           ; BSR set to: 2
 13936  0103F6  0ED5               	movlw	low STR_69
 13937  0103F8  0101               	movlb	1	; () banked
 13938  0103FA  6F82               	movwf	printf@f& (0+255),b
 13939  0103FC  0EF7               	movlw	high STR_69
 13940  0103FE  6F83               	movwf	(printf@f+1)& (0+255),b
 13941  010400  0E97               	movlw	low ringBufferLUT@channel_name
 13942  010402  6F84               	movwf	(?_printf+2)& (0+255),b
 13943  010404  0E02               	movlw	high ringBufferLUT@channel_name
 13944  010406  6F85               	movwf	(?_printf+3)& (0+255),b
 13945  010408  EC0F  F08A         	call	_printf	;wreg free
 13946                           
 13947                           ;ring_buffer_LUT.c: 219: terminal_textAttributesReset();
 13948  01040C  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 13949                           
 13950                           ;ring_buffer_LUT.c: 221: }
 13951  010410  0012               	return	
 13952  010412                     l1321:
 13953                           
 13954                           ;ring_buffer_LUT.c: 223: else {
 13955                           ;ring_buffer_LUT.c: 225: terminal_textAttributes(GREEN, BLACK, NORMAL);
 13956  010412  0E00               	movlw	0
 13957  010414  0101               	movlb	1	; () banked
 13958  010416  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 13959  010418  0E00               	movlw	0
 13960  01041A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 13961  01041C  0E02               	movlw	2
 13962  01041E  ECD7  F0A1         	call	_terminal_textAttributes
 13963                           
 13964                           ;ring_buffer_LUT.c: 226: printf("No ADC Error detected\n\r");
 13965  010422  0E82               	movlw	low STR_70
 13966  010424  0101               	movlb	1	; () banked
 13967  010426  6F82               	movwf	printf@f& (0+255),b
 13968  010428  0EFC               	movlw	high STR_70
 13969  01042A  6F83               	movwf	(printf@f+1)& (0+255),b
 13970  01042C  EC0F  F08A         	call	_printf	;wreg free
 13971                           
 13972                           ;ring_buffer_LUT.c: 227: terminal_textAttributesReset();
 13973  010430  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 13974                           
 13975                           ;ring_buffer_LUT.c: 229: }
 13976                           ;ring_buffer_LUT.c: 231: }
 13977  010434  0012               	return	
 13978  010436                     l1320:
 13979                           
 13980                           ;ring_buffer_LUT.c: 234: else if((0 == strcmp(line, "Clear ADC Error"))) {
 13981  010436  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 13982  01043A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 13983  01043E  0E4D               	movlw	low STR_71
 13984  010440  0101               	movlb	1	; () banked
 13985  010442  6F19               	movwf	strcmp@s2& (0+255),b
 13986  010444  0EFE               	movlw	high STR_71
 13987  010446  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 13988  010448  EC05  F0C6         	call	_strcmp	;wreg free
 13989  01044C  0101               	movlb	1	; () banked
 13990  01044E  5117               	movf	?_strcmp& (0+255),w,b
 13991  010450  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 13992  010452  A4D8               	btfss	status,2,c
 13993  010454  D018               	goto	l1334
 13994                           
 13995                           ; BSR set to: 1
 13996                           ;ring_buffer_LUT.c: 236: LATFbits.LATF3 = 0;
 13997  010456  967E               	bcf	3966,3,c	;volatile
 13998                           
 13999                           ;ring_buffer_LUT.c: 237: adc_error_flag = 0;
 14000  010458  925E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 14001                           
 14002                           ;ring_buffer_LUT.c: 239: PIE5bits.TMR7IE = 1;
 14003  01045A  010E               	movlb	14	; () banked
 14004  01045C  8D2E               	bsf	46,6,b	;volatile
 14005                           
 14006                           ; BSR set to: 14
 14007                           ;ring_buffer_LUT.c: 240: TMR7_StopTimer();
 14008  01045E  EC61  F0CB         	call	_TMR7_StopTimer	;wreg free
 14009                           
 14010                           ;ring_buffer_LUT.c: 242: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14011  010462  0E00               	movlw	0
 14012  010464  0101               	movlb	1	; () banked
 14013  010466  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14014  010468  0E00               	movlw	0
 14015  01046A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14016  01046C  0E02               	movlw	2
 14017  01046E  ECD7  F0A1         	call	_terminal_textAttributes
 14018                           
 14019                           ;ring_buffer_LUT.c: 243: printf("Clearing ADC Error\n\r");
 14020  010472  0EDB               	movlw	low STR_72
 14021  010474  0101               	movlb	1	; () banked
 14022  010476  6F82               	movwf	printf@f& (0+255),b
 14023  010478  0EFC               	movlw	high STR_72
 14024  01047A  6F83               	movwf	(printf@f+1)& (0+255),b
 14025  01047C  EC0F  F08A         	call	_printf	;wreg free
 14026                           
 14027                           ;ring_buffer_LUT.c: 244: terminal_textAttributesReset();
 14028  010480  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14029                           
 14030                           ;ring_buffer_LUT.c: 246: }
 14031  010484  0012               	return	
 14032  010486                     l1334:
 14033                           
 14034                           ;ring_buffer_LUT.c: 249: else if((0 == strcmp(line, "VCC Overvoltage?"))) {
 14035  010486  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14036  01048A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14037  01048E  0EAA               	movlw	low STR_73
 14038  010490  0101               	movlb	1	; () banked
 14039  010492  6F19               	movwf	strcmp@s2& (0+255),b
 14040  010494  0EFD               	movlw	high STR_73
 14041  010496  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14042  010498  EC05  F0C6         	call	_strcmp	;wreg free
 14043  01049C  0101               	movlb	1	; () banked
 14044  01049E  5117               	movf	?_strcmp& (0+255),w,b
 14045  0104A0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14046  0104A2  A4D8               	btfss	status,2,c
 14047  0104A4  D026               	goto	l1336
 14048                           
 14049                           ; BSR set to: 1
 14050                           ;ring_buffer_LUT.c: 252: if (VCC_overvoltage_flag == 1) {
 14051  0104A6  A05E               	btfss	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 14052  0104A8  D012               	goto	l1337
 14053                           
 14054                           ; BSR set to: 1
 14055                           ;ring_buffer_LUT.c: 254: terminal_textAttributes(RED, BLACK, NORMAL);
 14056  0104AA  0E00               	movlw	0
 14057  0104AC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14058  0104AE  0E00               	movlw	0
 14059  0104B0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14060  0104B2  0E01               	movlw	1
 14061  0104B4  ECD7  F0A1         	call	_terminal_textAttributes
 14062                           
 14063                           ;ring_buffer_LUT.c: 255: printf("VCC Overvoltage condition has occurred (VCC has exceede
      +                          d 3.60V)\n\r");
 14064  0104B8  0EDE               	movlw	low STR_74
 14065  0104BA  0101               	movlb	1	; () banked
 14066  0104BC  6F82               	movwf	printf@f& (0+255),b
 14067  0104BE  0EF3               	movlw	high STR_74
 14068  0104C0  6F83               	movwf	(printf@f+1)& (0+255),b
 14069  0104C2  EC0F  F08A         	call	_printf	;wreg free
 14070                           
 14071                           ;ring_buffer_LUT.c: 256: terminal_textAttributesReset();
 14072  0104C6  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14073                           
 14074                           ;ring_buffer_LUT.c: 259: VCC_overvoltage_flag = 0;
 14075  0104CA  905E               	bcf	_VCC_overvoltage_flag/(0+8),_VCC_overvoltage_flag& (0+7),c	;volatile
 14076                           
 14077                           ;ring_buffer_LUT.c: 261: }
 14078  0104CC  0012               	return	
 14079  0104CE                     l1337:
 14080                           
 14081                           ;ring_buffer_LUT.c: 263: else {
 14082                           ;ring_buffer_LUT.c: 265: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14083  0104CE  0E00               	movlw	0
 14084  0104D0  0101               	movlb	1	; () banked
 14085  0104D2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14086  0104D4  0E00               	movlw	0
 14087  0104D6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14088  0104D8  0E02               	movlw	2
 14089  0104DA  ECD7  F0A1         	call	_terminal_textAttributes
 14090                           
 14091                           ;ring_buffer_LUT.c: 266: printf("VCC Overvoltage condition has not occurred\n\r");
 14092  0104DE  0EEB               	movlw	low STR_75
 14093  0104E0  0101               	movlb	1	; () banked
 14094  0104E2  6F82               	movwf	printf@f& (0+255),b
 14095  0104E4  0EF8               	movlw	high STR_75
 14096  0104E6  6F83               	movwf	(printf@f+1)& (0+255),b
 14097  0104E8  EC0F  F08A         	call	_printf	;wreg free
 14098                           
 14099                           ;ring_buffer_LUT.c: 267: terminal_textAttributesReset();
 14100  0104EC  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14101                           
 14102                           ;ring_buffer_LUT.c: 269: }
 14103                           ;ring_buffer_LUT.c: 271: }
 14104  0104F0  0012               	return	
 14105  0104F2                     l1336:
 14106                           
 14107                           ;ring_buffer_LUT.c: 274: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 14108  0104F2  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14109  0104F6  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14110  0104FA  0EFD               	movlw	low STR_76
 14111  0104FC  0101               	movlb	1	; () banked
 14112  0104FE  6F19               	movwf	strcmp@s2& (0+255),b
 14113  010500  0EFD               	movlw	high STR_76
 14114  010502  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14115  010504  EC05  F0C6         	call	_strcmp	;wreg free
 14116  010508  0101               	movlb	1	; () banked
 14117  01050A  5117               	movf	?_strcmp& (0+255),w,b
 14118  01050C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14119  01050E  A4D8               	btfss	status,2,c
 14120  010510  D019               	goto	l1340
 14121                           
 14122                           ; BSR set to: 1
 14123                           ;ring_buffer_LUT.c: 276: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14124  010512  0E00               	movlw	0
 14125  010514  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14126  010516  0E00               	movlw	0
 14127  010518  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14128  01051A  0E06               	movlw	6
 14129  01051C  ECD7  F0A1         	call	_terminal_textAttributes
 14130                           
 14131                           ;ring_buffer_LUT.c: 277: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 14132  010520  0E32               	movlw	low STR_77
 14133  010522  0101               	movlb	1	; () banked
 14134  010524  6F82               	movwf	printf@f& (0+255),b
 14135  010526  0EFA               	movlw	high STR_77
 14136  010528  6F83               	movwf	(printf@f+1)& (0+255),b
 14137  01052A  C1D7  F184         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 14138  01052E  C1D8  F185         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 14139  010532  C1D9  F186         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 14140  010536  C1DA  F187         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 14141  01053A  EC0F  F08A         	call	_printf	;wreg free
 14142                           
 14143                           ;ring_buffer_LUT.c: 278: terminal_textAttributesReset();
 14144  01053E  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14145                           
 14146                           ;ring_buffer_LUT.c: 280: }
 14147  010542  0012               	return	
 14148  010544                     l1340:
 14149                           
 14150                           ;ring_buffer_LUT.c: 283: else if((0 == strcmp(line, "Measure POS12?"))) {
 14151  010544  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14152  010548  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14153  01054C  0E6C               	movlw	low STR_78
 14154  01054E  0101               	movlb	1	; () banked
 14155  010550  6F19               	movwf	strcmp@s2& (0+255),b
 14156  010552  0EFE               	movlw	high STR_78
 14157  010554  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14158  010556  EC05  F0C6         	call	_strcmp	;wreg free
 14159  01055A  0101               	movlb	1	; () banked
 14160  01055C  5117               	movf	?_strcmp& (0+255),w,b
 14161  01055E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14162  010560  A4D8               	btfss	status,2,c
 14163  010562  D019               	goto	l1342
 14164                           
 14165                           ; BSR set to: 1
 14166                           ;ring_buffer_LUT.c: 285: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14167  010564  0E00               	movlw	0
 14168  010566  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14169  010568  0E00               	movlw	0
 14170  01056A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14171  01056C  0E06               	movlw	6
 14172  01056E  ECD7  F0A1         	call	_terminal_textAttributes
 14173                           
 14174                           ;ring_buffer_LUT.c: 286: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 14175  010572  0EA0               	movlw	low STR_79
 14176  010574  0101               	movlb	1	; () banked
 14177  010576  6F82               	movwf	printf@f& (0+255),b
 14178  010578  0EFA               	movlw	high STR_79
 14179  01057A  6F83               	movwf	(printf@f+1)& (0+255),b
 14180  01057C  C1D3  F184         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 14181  010580  C1D4  F185         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 14182  010584  C1D5  F186         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 14183  010588  C1D6  F187         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 14184  01058C  EC0F  F08A         	call	_printf	;wreg free
 14185                           
 14186                           ;ring_buffer_LUT.c: 287: terminal_textAttributesReset();
 14187  010590  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14188                           
 14189                           ;ring_buffer_LUT.c: 289: }
 14190  010594  0012               	return	
 14191  010596                     l1342:
 14192                           
 14193                           ;ring_buffer_LUT.c: 292: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 14194  010596  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14195  01059A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14196  01059E  0E54               	movlw	low STR_80
 14197  0105A0  0101               	movlb	1	; () banked
 14198  0105A2  6F19               	movwf	strcmp@s2& (0+255),b
 14199  0105A4  0EFD               	movlw	high STR_80
 14200  0105A6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14201  0105A8  EC05  F0C6         	call	_strcmp	;wreg free
 14202  0105AC  0101               	movlb	1	; () banked
 14203  0105AE  5117               	movf	?_strcmp& (0+255),w,b
 14204  0105B0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14205  0105B2  A4D8               	btfss	status,2,c
 14206  0105B4  D019               	goto	l1344
 14207                           
 14208                           ; BSR set to: 1
 14209                           ;ring_buffer_LUT.c: 294: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14210  0105B6  0E00               	movlw	0
 14211  0105B8  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14212  0105BA  0E00               	movlw	0
 14213  0105BC  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14214  0105BE  0E06               	movlw	6
 14215  0105C0  ECD7  F0A1         	call	_terminal_textAttributes
 14216                           
 14217                           ;ring_buffer_LUT.c: 295: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 14218  0105C4  0E7C               	movlw	low STR_81
 14219  0105C6  0101               	movlb	1	; () banked
 14220  0105C8  6F82               	movwf	printf@f& (0+255),b
 14221  0105CA  0EFA               	movlw	high STR_81
 14222  0105CC  6F83               	movwf	(printf@f+1)& (0+255),b
 14223  0105CE  C1CF  F184         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 14224  0105D2  C1D0  F185         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 14225  0105D6  C1D1  F186         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 14226  0105DA  C1D2  F187         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 14227  0105DE  EC0F  F08A         	call	_printf	;wreg free
 14228                           
 14229                           ;ring_buffer_LUT.c: 296: terminal_textAttributesReset();
 14230  0105E2  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14231                           
 14232                           ;ring_buffer_LUT.c: 300: }
 14233  0105E6  0012               	return	
 14234  0105E8                     l1344:
 14235                           
 14236                           ;ring_buffer_LUT.c: 303: else if((0 == strcmp(line, "Measure FVR?"))) {
 14237  0105E8  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14238  0105EC  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14239  0105F0  0E15               	movlw	low STR_82
 14240  0105F2  0101               	movlb	1	; () banked
 14241  0105F4  6F19               	movwf	strcmp@s2& (0+255),b
 14242  0105F6  0EFF               	movlw	high STR_82
 14243  0105F8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14244  0105FA  EC05  F0C6         	call	_strcmp	;wreg free
 14245  0105FE  0101               	movlb	1	; () banked
 14246  010600  5117               	movf	?_strcmp& (0+255),w,b
 14247  010602  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14248  010604  A4D8               	btfss	status,2,c
 14249  010606  D019               	goto	l1346
 14250                           
 14251                           ; BSR set to: 1
 14252                           ;ring_buffer_LUT.c: 305: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14253  010608  0E00               	movlw	0
 14254  01060A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14255  01060C  0E00               	movlw	0
 14256  01060E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14257  010610  0E06               	movlw	6
 14258  010612  ECD7  F0A1         	call	_terminal_textAttributes
 14259                           
 14260                           ;ring_buffer_LUT.c: 306: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 14261  010616  0E52               	movlw	low STR_83
 14262  010618  0101               	movlb	1	; () banked
 14263  01061A  6F82               	movwf	printf@f& (0+255),b
 14264  01061C  0EF5               	movlw	high STR_83
 14265  01061E  6F83               	movwf	(printf@f+1)& (0+255),b
 14266  010620  C1E4  F184         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 14267  010624  C1E5  F185         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 14268  010628  C1E6  F186         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 14269  01062C  C1E7  F187         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 14270  010630  EC0F  F08A         	call	_printf	;wreg free
 14271                           
 14272                           ;ring_buffer_LUT.c: 307: terminal_textAttributesReset();
 14273  010634  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14274                           
 14275                           ;ring_buffer_LUT.c: 309: }
 14276  010638  0012               	return	
 14277  01063A                     l1346:
 14278                           
 14279                           ;ring_buffer_LUT.c: 312: else if((0 == strcmp(line, "Measure AVSS?"))) {
 14280  01063A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14281  01063E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14282  010642  0EA7               	movlw	low STR_84
 14283  010644  0101               	movlb	1	; () banked
 14284  010646  6F19               	movwf	strcmp@s2& (0+255),b
 14285  010648  0EFE               	movlw	high STR_84
 14286  01064A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14287  01064C  EC05  F0C6         	call	_strcmp	;wreg free
 14288  010650  0101               	movlb	1	; () banked
 14289  010652  5117               	movf	?_strcmp& (0+255),w,b
 14290  010654  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14291  010656  A4D8               	btfss	status,2,c
 14292  010658  D019               	goto	l1348
 14293                           
 14294                           ; BSR set to: 1
 14295                           ;ring_buffer_LUT.c: 314: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14296  01065A  0E00               	movlw	0
 14297  01065C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14298  01065E  0E00               	movlw	0
 14299  010660  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14300  010662  0E06               	movlw	6
 14301  010664  ECD7  F0A1         	call	_terminal_textAttributes
 14302                           
 14303                           ;ring_buffer_LUT.c: 315: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 14304  010668  0E0D               	movlw	low STR_85
 14305  01066A  0101               	movlb	1	; () banked
 14306  01066C  6F82               	movwf	printf@f& (0+255),b
 14307  01066E  0EFA               	movlw	high STR_85
 14308  010670  6F83               	movwf	(printf@f+1)& (0+255),b
 14309  010672  C1DB  F184         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 14310  010676  C1DC  F185         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 14311  01067A  C1DD  F186         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 14312  01067E  C1DE  F187         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 14313  010682  EC0F  F08A         	call	_printf	;wreg free
 14314                           
 14315                           ;ring_buffer_LUT.c: 316: terminal_textAttributesReset();
 14316  010686  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14317                           
 14318                           ;ring_buffer_LUT.c: 318: }
 14319  01068A  0012               	return	
 14320  01068C                     l1348:
 14321                           
 14322                           ;ring_buffer_LUT.c: 321: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 14323  01068C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14324  010690  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14325  010694  0E36               	movlw	low STR_86
 14326  010696  0101               	movlb	1	; () banked
 14327  010698  6F19               	movwf	strcmp@s2& (0+255),b
 14328  01069A  0EFC               	movlw	high STR_86
 14329  01069C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14330  01069E  EC05  F0C6         	call	_strcmp	;wreg free
 14331  0106A2  0101               	movlb	1	; () banked
 14332  0106A4  5117               	movf	?_strcmp& (0+255),w,b
 14333  0106A6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14334  0106A8  A4D8               	btfss	status,2,c
 14335  0106AA  D019               	goto	l1350
 14336                           
 14337                           ; BSR set to: 1
 14338                           ;ring_buffer_LUT.c: 323: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14339  0106AC  0E00               	movlw	0
 14340  0106AE  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14341  0106B0  0E00               	movlw	0
 14342  0106B2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14343  0106B4  0E06               	movlw	6
 14344  0106B6  ECD7  F0A1         	call	_terminal_textAttributes
 14345                           
 14346                           ;ring_buffer_LUT.c: 324: printf("Measured Current is %.3f Amps\n\r", Imeas);
 14347  0106BA  0E4B               	movlw	low STR_87
 14348  0106BC  0101               	movlb	1	; () banked
 14349  0106BE  6F82               	movwf	printf@f& (0+255),b
 14350  0106C0  0EFB               	movlw	high STR_87
 14351  0106C2  6F83               	movwf	(printf@f+1)& (0+255),b
 14352  0106C4  C1C7  F184         	movff	_Imeas,?_printf+2	;volatile
 14353  0106C8  C1C8  F185         	movff	_Imeas+1,?_printf+3	;volatile
 14354  0106CC  C1C9  F186         	movff	_Imeas+2,?_printf+4	;volatile
 14355  0106D0  C1CA  F187         	movff	_Imeas+3,?_printf+5	;volatile
 14356  0106D4  EC0F  F08A         	call	_printf	;wreg free
 14357                           
 14358                           ;ring_buffer_LUT.c: 325: terminal_textAttributesReset();
 14359  0106D8  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14360                           
 14361                           ;ring_buffer_LUT.c: 327: }
 14362  0106DC  0012               	return	
 14363  0106DE                     l1350:
 14364                           
 14365                           ;ring_buffer_LUT.c: 330: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 14366  0106DE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14367  0106E2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14368  0106E6  0E05               	movlw	low STR_88
 14369  0106E8  0101               	movlb	1	; () banked
 14370  0106EA  6F19               	movwf	strcmp@s2& (0+255),b
 14371  0106EC  0EFD               	movlw	high STR_88
 14372  0106EE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14373  0106F0  EC05  F0C6         	call	_strcmp	;wreg free
 14374  0106F4  0101               	movlb	1	; () banked
 14375  0106F6  5117               	movf	?_strcmp& (0+255),w,b
 14376  0106F8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14377  0106FA  A4D8               	btfss	status,2,c
 14378  0106FC  D019               	goto	l1352
 14379                           
 14380                           ; BSR set to: 1
 14381                           ;ring_buffer_LUT.c: 332: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14382  0106FE  0E00               	movlw	0
 14383  010700  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14384  010702  0E00               	movlw	0
 14385  010704  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14386  010706  0E06               	movlw	6
 14387  010708  ECD7  F0A1         	call	_terminal_textAttributes
 14388                           
 14389                           ;ring_buffer_LUT.c: 333: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 14390  01070C  0EC4               	movlw	low STR_89
 14391  01070E  0101               	movlb	1	; () banked
 14392  010710  6F82               	movwf	printf@f& (0+255),b
 14393  010712  0EFA               	movlw	high STR_89
 14394  010714  6F83               	movwf	(printf@f+1)& (0+255),b
 14395  010716  C1C3  F184         	movff	_Irms,?_printf+2	;volatile
 14396  01071A  C1C4  F185         	movff	_Irms+1,?_printf+3	;volatile
 14397  01071E  C1C5  F186         	movff	_Irms+2,?_printf+4	;volatile
 14398  010722  C1C6  F187         	movff	_Irms+3,?_printf+5	;volatile
 14399  010726  EC0F  F08A         	call	_printf	;wreg free
 14400                           
 14401                           ;ring_buffer_LUT.c: 334: terminal_textAttributesReset();
 14402  01072A  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14403                           
 14404                           ;ring_buffer_LUT.c: 336: }
 14405  01072E  0012               	return	
 14406  010730                     l1352:
 14407                           
 14408                           ;ring_buffer_LUT.c: 339: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 14409  010730  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14410  010734  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14411  010738  0EF0               	movlw	low STR_90
 14412  01073A  0101               	movlb	1	; () banked
 14413  01073C  6F19               	movwf	strcmp@s2& (0+255),b
 14414  01073E  0EFC               	movlw	high STR_90
 14415  010740  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14416  010742  EC05  F0C6         	call	_strcmp	;wreg free
 14417  010746  0101               	movlb	1	; () banked
 14418  010748  5117               	movf	?_strcmp& (0+255),w,b
 14419  01074A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14420  01074C  A4D8               	btfss	status,2,c
 14421  01074E  D019               	goto	l1354
 14422                           
 14423                           ; BSR set to: 1
 14424                           ;ring_buffer_LUT.c: 341: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14425  010750  0E00               	movlw	0
 14426  010752  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14427  010754  0E00               	movlw	0
 14428  010756  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14429  010758  0E06               	movlw	6
 14430  01075A  ECD7  F0A1         	call	_terminal_textAttributes
 14431                           
 14432                           ;ring_buffer_LUT.c: 342: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 14433  01075E  0EE6               	movlw	low STR_91
 14434  010760  0101               	movlb	1	; () banked
 14435  010762  6F82               	movwf	printf@f& (0+255),b
 14436  010764  0EFA               	movlw	high STR_91
 14437  010766  6F83               	movwf	(printf@f+1)& (0+255),b
 14438  010768  C1BF  F184         	movff	_Vrms,?_printf+2	;volatile
 14439  01076C  C1C0  F185         	movff	_Vrms+1,?_printf+3	;volatile
 14440  010770  C1C1  F186         	movff	_Vrms+2,?_printf+4	;volatile
 14441  010774  C1C2  F187         	movff	_Vrms+3,?_printf+5	;volatile
 14442  010778  EC0F  F08A         	call	_printf	;wreg free
 14443                           
 14444                           ;ring_buffer_LUT.c: 343: terminal_textAttributesReset();
 14445  01077C  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14446                           
 14447                           ;ring_buffer_LUT.c: 345: }
 14448  010780  0012               	return	
 14449  010782                     l1354:
 14450                           
 14451                           ;ring_buffer_LUT.c: 348: else if ((0 == strcmp(line, "Measure Power?"))) {
 14452  010782  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14453  010786  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14454  01078A  0E7B               	movlw	low STR_92
 14455  01078C  0101               	movlb	1	; () banked
 14456  01078E  6F19               	movwf	strcmp@s2& (0+255),b
 14457  010790  0EFE               	movlw	high STR_92
 14458  010792  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14459  010794  EC05  F0C6         	call	_strcmp	;wreg free
 14460  010798  0101               	movlb	1	; () banked
 14461  01079A  5117               	movf	?_strcmp& (0+255),w,b
 14462  01079C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14463  01079E  A4D8               	btfss	status,2,c
 14464  0107A0  D019               	goto	l1356
 14465                           
 14466                           ; BSR set to: 1
 14467                           ;ring_buffer_LUT.c: 350: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14468  0107A2  0E00               	movlw	0
 14469  0107A4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14470  0107A6  0E00               	movlw	0
 14471  0107A8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14472  0107AA  0E06               	movlw	6
 14473  0107AC  ECD7  F0A1         	call	_terminal_textAttributes
 14474                           
 14475                           ;ring_buffer_LUT.c: 351: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 14476  0107B0  0E8C               	movlw	low STR_93
 14477  0107B2  0101               	movlb	1	; () banked
 14478  0107B4  6F82               	movwf	printf@f& (0+255),b
 14479  0107B6  0EF5               	movlw	high STR_93
 14480  0107B8  6F83               	movwf	(printf@f+1)& (0+255),b
 14481  0107BA  C1BB  F184         	movff	_Avg_Power,?_printf+2	;volatile
 14482  0107BE  C1BC  F185         	movff	_Avg_Power+1,?_printf+3	;volatile
 14483  0107C2  C1BD  F186         	movff	_Avg_Power+2,?_printf+4	;volatile
 14484  0107C6  C1BE  F187         	movff	_Avg_Power+3,?_printf+5	;volatile
 14485  0107CA  EC0F  F08A         	call	_printf	;wreg free
 14486                           
 14487                           ;ring_buffer_LUT.c: 352: terminal_textAttributesReset();
 14488  0107CE  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14489                           
 14490                           ;ring_buffer_LUT.c: 354: }
 14491  0107D2  0012               	return	
 14492  0107D4                     l1356:
 14493                           
 14494                           ;ring_buffer_LUT.c: 357: else if ((0 == strcmp(line, "Measure Energy?"))) {
 14495  0107D4  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14496  0107D8  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14497  0107DC  0E2D               	movlw	low STR_94
 14498  0107DE  0101               	movlb	1	; () banked
 14499  0107E0  6F19               	movwf	strcmp@s2& (0+255),b
 14500  0107E2  0EFE               	movlw	high STR_94
 14501  0107E4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14502  0107E6  EC05  F0C6         	call	_strcmp	;wreg free
 14503  0107EA  0101               	movlb	1	; () banked
 14504  0107EC  5117               	movf	?_strcmp& (0+255),w,b
 14505  0107EE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14506  0107F0  A4D8               	btfss	status,2,c
 14507  0107F2  D019               	goto	l1358
 14508                           
 14509                           ; BSR set to: 1
 14510                           ;ring_buffer_LUT.c: 359: terminal_textAttributes(CYAN, BLACK, NORMAL);
 14511  0107F4  0E00               	movlw	0
 14512  0107F6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14513  0107F8  0E00               	movlw	0
 14514  0107FA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14515  0107FC  0E06               	movlw	6
 14516  0107FE  ECD7  F0A1         	call	_terminal_textAttributes
 14517                           
 14518                           ;ring_buffer_LUT.c: 360: printf("Measured output energy since last measurement reset is 
      +                          %.3f Watt Hours\n\r", Total_Energy);
 14519  010802  0E4E               	movlw	low STR_95
 14520  010804  0101               	movlb	1	; () banked
 14521  010806  6F82               	movwf	printf@f& (0+255),b
 14522  010808  0EF3               	movlw	high STR_95
 14523  01080A  6F83               	movwf	(printf@f+1)& (0+255),b
 14524  01080C  C0F6  F184         	movff	_Total_Energy,?_printf+2	;volatile
 14525  010810  C0F7  F185         	movff	_Total_Energy+1,?_printf+3	;volatile
 14526  010814  C0F8  F186         	movff	_Total_Energy+2,?_printf+4	;volatile
 14527  010818  C0F9  F187         	movff	_Total_Energy+3,?_printf+5	;volatile
 14528  01081C  EC0F  F08A         	call	_printf	;wreg free
 14529                           
 14530                           ;ring_buffer_LUT.c: 361: terminal_textAttributesReset();
 14531  010820  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14532                           
 14533                           ;ring_buffer_LUT.c: 363: }
 14534  010824  0012               	return	
 14535  010826                     l1358:
 14536                           
 14537                           ;ring_buffer_LUT.c: 366: else if ((0 == strcmp(line, "Enable Dimming"))) {
 14538  010826  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14539  01082A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14540  01082E  0E8A               	movlw	low STR_96
 14541  010830  0101               	movlb	1	; () banked
 14542  010832  6F19               	movwf	strcmp@s2& (0+255),b
 14543  010834  0EFE               	movlw	high STR_96
 14544  010836  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14545  010838  EC05  F0C6         	call	_strcmp	;wreg free
 14546  01083C  0101               	movlb	1	; () banked
 14547  01083E  5117               	movf	?_strcmp& (0+255),w,b
 14548  010840  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14549  010842  A4D8               	btfss	status,2,c
 14550  010844  D015               	goto	l1360
 14551                           
 14552                           ; BSR set to: 1
 14553                           ;ring_buffer_LUT.c: 369: LATGbits.LATG0 = 0;
 14554  010846  907F               	bcf	3967,0,c	;volatile
 14555                           
 14556                           ;ring_buffer_LUT.c: 372: PIE0bits.INT0IE = 1;
 14557  010848  010E               	movlb	14	; () banked
 14558  01084A  8129               	bsf	41,0,b	;volatile
 14559                           
 14560                           ; BSR set to: 14
 14561                           ;ring_buffer_LUT.c: 374: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14562  01084C  0E00               	movlw	0
 14563  01084E  0101               	movlb	1	; () banked
 14564  010850  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14565  010852  0E00               	movlw	0
 14566  010854  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14567  010856  0E02               	movlw	2
 14568  010858  ECD7  F0A1         	call	_terminal_textAttributes
 14569                           
 14570                           ;ring_buffer_LUT.c: 375: printf("TRIAC output dimming has been enabled\n\r");
 14571  01085C  0EBE               	movlw	low STR_97
 14572  01085E  0101               	movlb	1	; () banked
 14573  010860  6F82               	movwf	printf@f& (0+255),b
 14574  010862  0EF9               	movlw	high STR_97
 14575  010864  6F83               	movwf	(printf@f+1)& (0+255),b
 14576  010866  EC0F  F08A         	call	_printf	;wreg free
 14577                           
 14578                           ;ring_buffer_LUT.c: 376: terminal_textAttributesReset();
 14579  01086A  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14580                           
 14581                           ;ring_buffer_LUT.c: 378: }
 14582  01086E  0012               	return	
 14583  010870                     l1360:
 14584                           
 14585                           ;ring_buffer_LUT.c: 381: else if ((0 == strcmp(line, "Disable Dimming"))) {
 14586  010870  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14587  010874  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14588  010878  0E3D               	movlw	low STR_98
 14589  01087A  0101               	movlb	1	; () banked
 14590  01087C  6F19               	movwf	strcmp@s2& (0+255),b
 14591  01087E  0EFE               	movlw	high STR_98
 14592  010880  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14593  010882  EC05  F0C6         	call	_strcmp	;wreg free
 14594  010886  0101               	movlb	1	; () banked
 14595  010888  5117               	movf	?_strcmp& (0+255),w,b
 14596  01088A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14597  01088C  A4D8               	btfss	status,2,c
 14598  01088E  D017               	goto	l1362
 14599                           
 14600                           ; BSR set to: 1
 14601                           ;ring_buffer_LUT.c: 384: LATGbits.LATG0 = 1;
 14602  010890  807F               	bsf	3967,0,c	;volatile
 14603                           
 14604                           ;ring_buffer_LUT.c: 387: PIE0bits.INT0IE = 0;
 14605  010892  010E               	movlb	14	; () banked
 14606  010894  9129               	bcf	41,0,b	;volatile
 14607                           
 14608                           ; BSR set to: 14
 14609                           ;ring_buffer_LUT.c: 388: TMR5_StopTimer();
 14610  010896  EC6A  F0CB         	call	_TMR5_StopTimer	;wreg free
 14611                           
 14612                           ;ring_buffer_LUT.c: 390: terminal_textAttributes(RED, BLACK, NORMAL);
 14613  01089A  0E00               	movlw	0
 14614  01089C  0101               	movlb	1	; () banked
 14615  01089E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14616  0108A0  0E00               	movlw	0
 14617  0108A2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14618  0108A4  0E01               	movlw	1
 14619  0108A6  ECD7  F0A1         	call	_terminal_textAttributes
 14620                           
 14621                           ;ring_buffer_LUT.c: 391: printf("TRIAC output dimming has been disabled\n\r");
 14622  0108AA  0E95               	movlw	low STR_99
 14623  0108AC  0101               	movlb	1	; () banked
 14624  0108AE  6F82               	movwf	printf@f& (0+255),b
 14625  0108B0  0EF9               	movlw	high STR_99
 14626  0108B2  6F83               	movwf	(printf@f+1)& (0+255),b
 14627  0108B4  EC0F  F08A         	call	_printf	;wreg free
 14628                           
 14629                           ;ring_buffer_LUT.c: 392: terminal_textAttributesReset();
 14630  0108B8  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14631                           
 14632                           ;ring_buffer_LUT.c: 394: }
 14633  0108BC  0012               	return	
 14634  0108BE                     l1362:
 14635                           
 14636                           ;ring_buffer_LUT.c: 397: else if ((0 == strcmp(line, "Enable Load"))) {
 14637  0108BE  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14638  0108C2  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14639  0108C6  0E3B               	movlw	low STR_100
 14640  0108C8  0101               	movlb	1	; () banked
 14641  0108CA  6F19               	movwf	strcmp@s2& (0+255),b
 14642  0108CC  0EFF               	movlw	high STR_100
 14643  0108CE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14644  0108D0  EC05  F0C6         	call	_strcmp	;wreg free
 14645  0108D4  0101               	movlb	1	; () banked
 14646  0108D6  5117               	movf	?_strcmp& (0+255),w,b
 14647  0108D8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14648  0108DA  A4D8               	btfss	status,2,c
 14649  0108DC  D014               	goto	l1364
 14650                           
 14651                           ; BSR set to: 1
 14652                           ;ring_buffer_LUT.c: 399: LATGbits.LATG0 = 1;
 14653  0108DE  807F               	bsf	3967,0,c	;volatile
 14654                           
 14655                           ;ring_buffer_LUT.c: 400: LATGbits.LATG1 = 0;
 14656  0108E0  927F               	bcf	3967,1,c	;volatile
 14657                           
 14658                           ;ring_buffer_LUT.c: 401: load_enable = 1;
 14659  0108E2  845E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14660                           
 14661                           ; BSR set to: 1
 14662                           ;ring_buffer_LUT.c: 403: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14663  0108E4  0E00               	movlw	0
 14664  0108E6  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14665  0108E8  0E00               	movlw	0
 14666  0108EA  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14667  0108EC  0E02               	movlw	2
 14668  0108EE  ECD7  F0A1         	call	_terminal_textAttributes
 14669                           
 14670                           ;ring_buffer_LUT.c: 404: printf("Load has been enabled, dimming disabled\n\r");
 14671  0108F2  0E18               	movlw	low STR_101
 14672  0108F4  0101               	movlb	1	; () banked
 14673  0108F6  6F82               	movwf	printf@f& (0+255),b
 14674  0108F8  0EF9               	movlw	high STR_101
 14675  0108FA  6F83               	movwf	(printf@f+1)& (0+255),b
 14676  0108FC  EC0F  F08A         	call	_printf	;wreg free
 14677                           
 14678                           ;ring_buffer_LUT.c: 405: terminal_textAttributesReset();
 14679  010900  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14680                           
 14681                           ;ring_buffer_LUT.c: 407: }
 14682  010904  0012               	return	
 14683  010906                     l1364:
 14684                           
 14685                           ;ring_buffer_LUT.c: 410: else if ((0 == strcmp(line, "Load Enabled?"))) {
 14686  010906  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14687  01090A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14688  01090E  0EB5               	movlw	low STR_102
 14689  010910  0101               	movlb	1	; () banked
 14690  010912  6F19               	movwf	strcmp@s2& (0+255),b
 14691  010914  0EFE               	movlw	high STR_102
 14692  010916  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14693  010918  EC05  F0C6         	call	_strcmp	;wreg free
 14694  01091C  0101               	movlb	1	; () banked
 14695  01091E  5117               	movf	?_strcmp& (0+255),w,b
 14696  010920  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14697  010922  A4D8               	btfss	status,2,c
 14698  010924  D025               	goto	l1366
 14699                           
 14700                           ; BSR set to: 1
 14701                           ;ring_buffer_LUT.c: 412: if (load_enable == 1) {
 14702  010926  A45E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14703  010928  D011               	goto	l1367
 14704                           
 14705                           ; BSR set to: 1
 14706                           ;ring_buffer_LUT.c: 414: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14707  01092A  0E00               	movlw	0
 14708  01092C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14709  01092E  0E00               	movlw	0
 14710  010930  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14711  010932  0E02               	movlw	2
 14712  010934  ECD7  F0A1         	call	_terminal_textAttributes
 14713                           
 14714                           ;ring_buffer_LUT.c: 415: printf("Load is currently enabled\n\r");
 14715  010938  0EFF               	movlw	low STR_103
 14716  01093A  0101               	movlb	1	; () banked
 14717  01093C  6F82               	movwf	printf@f& (0+255),b
 14718  01093E  0EFB               	movlw	high STR_103
 14719  010940  6F83               	movwf	(printf@f+1)& (0+255),b
 14720  010942  EC0F  F08A         	call	_printf	;wreg free
 14721                           
 14722                           ;ring_buffer_LUT.c: 416: terminal_textAttributesReset();
 14723  010946  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14724                           
 14725                           ;ring_buffer_LUT.c: 418: }
 14726  01094A  0012               	return	
 14727  01094C                     l1367:
 14728                           
 14729                           ;ring_buffer_LUT.c: 420: else {
 14730                           ;ring_buffer_LUT.c: 422: terminal_textAttributes(RED, BLACK, NORMAL);
 14731  01094C  0E00               	movlw	0
 14732  01094E  0101               	movlb	1	; () banked
 14733  010950  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14734  010952  0E00               	movlw	0
 14735  010954  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14736  010956  0E01               	movlw	1
 14737  010958  ECD7  F0A1         	call	_terminal_textAttributes
 14738                           
 14739                           ;ring_buffer_LUT.c: 423: printf("Load is currently disabled\n\r");
 14740  01095C  0EA8               	movlw	low STR_104
 14741  01095E  0101               	movlb	1	; () banked
 14742  010960  6F82               	movwf	printf@f& (0+255),b
 14743  010962  0EFB               	movlw	high STR_104
 14744  010964  6F83               	movwf	(printf@f+1)& (0+255),b
 14745  010966  EC0F  F08A         	call	_printf	;wreg free
 14746                           
 14747                           ;ring_buffer_LUT.c: 424: terminal_textAttributesReset();
 14748  01096A  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14749                           
 14750                           ;ring_buffer_LUT.c: 427: }
 14751                           ;ring_buffer_LUT.c: 429: }
 14752  01096E  0012               	return	
 14753  010970                     l1366:
 14754                           
 14755                           ;ring_buffer_LUT.c: 432: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 14756  010970  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14757  010974  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14758  010978  0E88               	movlw	low STR_105
 14759  01097A  0101               	movlb	1	; () banked
 14760  01097C  6F19               	movwf	strcmp@s2& (0+255),b
 14761  01097E  0EFD               	movlw	high STR_105
 14762  010980  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14763  010982  EC05  F0C6         	call	_strcmp	;wreg free
 14764  010986  0101               	movlb	1	; () banked
 14765  010988  5117               	movf	?_strcmp& (0+255),w,b
 14766  01098A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14767  01098C  A4D8               	btfss	status,2,c
 14768  01098E  D039               	goto	l1370
 14769                           
 14770                           ; BSR set to: 1
 14771                           ;ring_buffer_LUT.c: 434: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 14772  010990  B45E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14773                           
 14774                           ; BSR set to: 1
 14775  010992  B07F               	btfsc	3967,0,c	;volatile
 14776  010994  D011               	goto	l1371
 14777                           
 14778                           ; BSR set to: 1
 14779                           ;ring_buffer_LUT.c: 436: terminal_textAttributes(GREEN, BLACK, NORMAL);
 14780  010996  0E00               	movlw	0
 14781  010998  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14782  01099A  0E00               	movlw	0
 14783  01099C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14784  01099E  0E02               	movlw	2
 14785  0109A0  ECD7  F0A1         	call	_terminal_textAttributes
 14786                           
 14787                           ;ring_buffer_LUT.c: 437: printf("Dimming is currently enabled\n\r");
 14788  0109A4  0E6B               	movlw	low STR_106
 14789  0109A6  0101               	movlb	1	; () banked
 14790  0109A8  6F82               	movwf	printf@f& (0+255),b
 14791  0109AA  0EFB               	movlw	high STR_106
 14792  0109AC  6F83               	movwf	(printf@f+1)& (0+255),b
 14793  0109AE  EC0F  F08A         	call	_printf	;wreg free
 14794                           
 14795                           ;ring_buffer_LUT.c: 438: terminal_textAttributesReset();
 14796  0109B2  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14797                           
 14798                           ;ring_buffer_LUT.c: 440: }
 14799  0109B6  0012               	return	
 14800  0109B8                     l1371:
 14801                           
 14802                           ; BSR set to: 1
 14803                           ;ring_buffer_LUT.c: 442: else if (load_enable == 1){
 14804  0109B8  A45E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14805  0109BA  D011               	goto	l1373
 14806                           
 14807                           ; BSR set to: 1
 14808                           ;ring_buffer_LUT.c: 444: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 14809  0109BC  0E00               	movlw	0
 14810  0109BE  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14811  0109C0  0E00               	movlw	0
 14812  0109C2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14813  0109C4  0E03               	movlw	3
 14814  0109C6  ECD7  F0A1         	call	_terminal_textAttributes
 14815                           
 14816                           ;ring_buffer_LUT.c: 445: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 14817  0109CA  0E9D               	movlw	low STR_107
 14818  0109CC  0101               	movlb	1	; () banked
 14819  0109CE  6F82               	movwf	printf@f& (0+255),b
 14820  0109D0  0EF6               	movlw	high STR_107
 14821  0109D2  6F83               	movwf	(printf@f+1)& (0+255),b
 14822  0109D4  EC0F  F08A         	call	_printf	;wreg free
 14823                           
 14824                           ;ring_buffer_LUT.c: 446: terminal_textAttributesReset();
 14825  0109D8  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14826                           
 14827                           ;ring_buffer_LUT.c: 448: }
 14828  0109DC  0012               	return	
 14829  0109DE                     l1373:
 14830                           
 14831                           ;ring_buffer_LUT.c: 450: else {
 14832                           ;ring_buffer_LUT.c: 452: terminal_textAttributes(RED, BLACK, NORMAL);
 14833  0109DE  0E00               	movlw	0
 14834  0109E0  0101               	movlb	1	; () banked
 14835  0109E2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14836  0109E4  0E00               	movlw	0
 14837  0109E6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14838  0109E8  0E01               	movlw	1
 14839  0109EA  ECD7  F0A1         	call	_terminal_textAttributes
 14840                           
 14841                           ;ring_buffer_LUT.c: 453: printf("Load and dimming are currently disabled\n\r");
 14842  0109EE  0E42               	movlw	low STR_108
 14843  0109F0  0101               	movlb	1	; () banked
 14844  0109F2  6F82               	movwf	printf@f& (0+255),b
 14845  0109F4  0EF9               	movlw	high STR_108
 14846  0109F6  6F83               	movwf	(printf@f+1)& (0+255),b
 14847  0109F8  EC0F  F08A         	call	_printf	;wreg free
 14848                           
 14849                           ;ring_buffer_LUT.c: 454: terminal_textAttributesReset();
 14850  0109FC  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14851                           
 14852                           ;ring_buffer_LUT.c: 456: }
 14853                           ;ring_buffer_LUT.c: 460: }
 14854  010A00  0012               	return	
 14855  010A02                     l1370:
 14856                           
 14857                           ;ring_buffer_LUT.c: 465: else if ((0 == strcmp(line, "Disable Load"))) {
 14858  010A02  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 14859  010A06  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 14860  010A0A  0E22               	movlw	low STR_109
 14861  010A0C  0101               	movlb	1	; () banked
 14862  010A0E  6F19               	movwf	strcmp@s2& (0+255),b
 14863  010A10  0EFF               	movlw	high STR_109
 14864  010A12  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 14865  010A14  EC05  F0C6         	call	_strcmp	;wreg free
 14866  010A18  0101               	movlb	1	; () banked
 14867  010A1A  5117               	movf	?_strcmp& (0+255),w,b
 14868  010A1C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 14869  010A1E  A4D8               	btfss	status,2,c
 14870  010A20  D014               	goto	l1376
 14871                           
 14872                           ; BSR set to: 1
 14873                           ;ring_buffer_LUT.c: 467: LATGbits.LATG1 = 0;
 14874  010A22  927F               	bcf	3967,1,c	;volatile
 14875                           
 14876                           ;ring_buffer_LUT.c: 468: LATGbits.LATG0 = 0;
 14877  010A24  907F               	bcf	3967,0,c	;volatile
 14878                           
 14879                           ;ring_buffer_LUT.c: 469: load_enable = 0;
 14880  010A26  945E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 14881                           
 14882                           ; BSR set to: 1
 14883                           ;ring_buffer_LUT.c: 471: terminal_textAttributes(RED, BLACK, NORMAL);
 14884  010A28  0E00               	movlw	0
 14885  010A2A  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 14886  010A2C  0E00               	movlw	0
 14887  010A2E  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 14888  010A30  0E01               	movlw	1
 14889  010A32  ECD7  F0A1         	call	_terminal_textAttributes
 14890                           
 14891                           ;ring_buffer_LUT.c: 472: printf("Load has been disabled\n\r");
 14892  010A36  0E50               	movlw	low STR_110
 14893  010A38  0101               	movlb	1	; () banked
 14894  010A3A  6F82               	movwf	printf@f& (0+255),b
 14895  010A3C  0EFC               	movlw	high STR_110
 14896  010A3E  6F83               	movwf	(printf@f+1)& (0+255),b
 14897  010A40  EC0F  F08A         	call	_printf	;wreg free
 14898                           
 14899                           ;ring_buffer_LUT.c: 473: terminal_textAttributesReset();
 14900  010A44  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 14901                           
 14902                           ;ring_buffer_LUT.c: 475: }
 14903  010A48  0012               	return	
 14904  010A4A                     l1376:
 14905                           
 14906                           ;ring_buffer_LUT.c: 478: else if ((strstr(line, "Set Dimming Percentage: "))) {
 14907  010A4A  C1B4  F126         	movff	ringBufferLUT@line,strstr@s1
 14908  010A4E  C1B5  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
 14909  010A52  0E69               	movlw	low STR_111
 14910  010A54  0101               	movlb	1	; () banked
 14911  010A56  6F28               	movwf	strstr@s2& (0+255),b
 14912  010A58  0EFC               	movlw	high STR_111
 14913  010A5A  6F29               	movwf	(strstr@s2+1)& (0+255),b
 14914  010A5C  ECBC  F0C1         	call	_strstr	;wreg free
 14915  010A60  0101               	movlb	1	; () banked
 14916  010A62  5126               	movf	?_strstr& (0+255),w,b
 14917  010A64  1127               	iorwf	(?_strstr+1)& (0+255),w,b
 14918  010A66  B4D8               	btfsc	status,2,c
 14919  010A68  D127               	goto	l1378
 14920                           
 14921                           ; BSR set to: 1
 14922                           ;ring_buffer_LUT.c: 481: char arg_buff[3];
 14923                           ;ring_buffer_LUT.c: 484: for (int index = 0; index < 3; index++) {
 14924  010A6A  0E00               	movlw	0
 14925  010A6C  0102               	movlb	2	; () banked
 14926  010A6E  6FCD               	movwf	(ringBufferLUT@index+1)& (0+255),b
 14927  010A70  0E00               	movlw	0
 14928  010A72  6FCC               	movwf	ringBufferLUT@index& (0+255),b
 14929  010A74                     l20154:
 14930                           
 14931                           ; BSR set to: 2
 14932  010A74  BFCD               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 14933  010A76  D006               	goto	l1379
 14934  010A78  51CD               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 14935  010A7A  E11F               	bnz	l20164
 14936  010A7C  0E03               	movlw	3
 14937  010A7E  5DCC               	subwf	ringBufferLUT@index& (0+255),w,b
 14938  010A80  B0D8               	btfsc	status,0,c
 14939  010A82  D01B               	goto	u26820
 14940  010A84                     l1379:
 14941                           
 14942                           ; BSR set to: 2
 14943                           ;ring_buffer_LUT.c: 486: arg_buff[index] = line[index + 24];
 14944                           
 14945                           ; BSR set to: 2
 14946  010A84  0E18               	movlw	24
 14947  010A86  25CC               	addwf	ringBufferLUT@index& (0+255),w,b
 14948  010A88  0101               	movlb	1	; () banked
 14949  010A8A  6FB6               	movwf	??_ringBufferLUT& (0+255),b
 14950  010A8C  0E00               	movlw	0
 14951  010A8E  0102               	movlb	2	; () banked
 14952  010A90  21CD               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 14953  010A92  0101               	movlb	1	; () banked
 14954  010A94  6FB7               	movwf	(??_ringBufferLUT+1)& (0+255),b
 14955  010A96  51B6               	movf	??_ringBufferLUT& (0+255),w,b
 14956  010A98  25B4               	addwf	ringBufferLUT@line& (0+255),w,b
 14957  010A9A  6ED9               	movwf	fsr2l,c
 14958  010A9C  51B7               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 14959  010A9E  21B5               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 14960  010AA0  6EDA               	movwf	fsr2h,c
 14961  010AA2  0EC9               	movlw	low ringBufferLUT@arg_buff
 14962  010AA4  0102               	movlb	2	; () banked
 14963  010AA6  25CC               	addwf	ringBufferLUT@index& (0+255),w,b
 14964  010AA8  6EE1               	movwf	fsr1l,c
 14965  010AAA  0E02               	movlw	high ringBufferLUT@arg_buff
 14966  010AAC  21CD               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 14967  010AAE  6EE2               	movwf	fsr1h,c
 14968  010AB0  CFDF FFE7          	movff	indf2,indf1
 14969                           
 14970                           ; BSR set to: 2
 14971  010AB4  4BCC               	infsnz	ringBufferLUT@index& (0+255),f,b
 14972  010AB6  2BCD               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 14973  010AB8  D7DD               	goto	l20154
 14974  010ABA                     u26820:
 14975  010ABA                     l20164:
 14976                           
 14977                           ; BSR set to: 2
 14978                           ;ring_buffer_LUT.c: 488: }
 14979                           ;ring_buffer_LUT.c: 490: int percentage = atoi(arg_buff);
 14980  010ABA  0EC9               	movlw	low ringBufferLUT@arg_buff
 14981  010ABC  0101               	movlb	1	; () banked
 14982  010ABE  6F1D               	movwf	atoi@s& (0+255),b
 14983  010AC0  0E02               	movlw	high ringBufferLUT@arg_buff
 14984  010AC2  6F1E               	movwf	(atoi@s+1)& (0+255),b
 14985  010AC4  ECB4  F0BF         	call	_atoi	;wreg free
 14986  010AC8  C11D  F2CE         	movff	?_atoi,ringBufferLUT@percentage
 14987  010ACC  C11E  F2CF         	movff	?_atoi+1,ringBufferLUT@percentage+1
 14988                           
 14989                           ;ring_buffer_LUT.c: 493: if ( (percentage >= 100) ||
 14990                           ;ring_buffer_LUT.c: 494: (percentage <= 0)) {
 14991  010AD0  0102               	movlb	2	; () banked
 14992  010AD2  BFCF               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 14993  010AD4  D006               	goto	u26830
 14994  010AD6  51CF               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 14995  010AD8  E10B               	bnz	l20170
 14996  010ADA  0E64               	movlw	100
 14997  010ADC  5DCE               	subwf	ringBufferLUT@percentage& (0+255),w,b
 14998  010ADE  B0D8               	btfsc	status,0,c
 14999  010AE0  D007               	goto	u26840
 15000  010AE2                     u26830:
 15001                           
 15002                           ; BSR set to: 2
 15003  010AE2  BFCF               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 15004  010AE4  D005               	goto	u26840
 15005  010AE6  51CF               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 15006  010AE8  E12B               	bnz	l20172
 15007  010AEA  05CE               	decf	ringBufferLUT@percentage& (0+255),w,b
 15008  010AEC  B0D8               	btfsc	status,0,c
 15009  010AEE  D028               	goto	l1381
 15010  010AF0                     u26840:
 15011  010AF0                     l20170:
 15012                           
 15013                           ; BSR set to: 2
 15014                           ;ring_buffer_LUT.c: 496: terminal_textAttributes(RED, BLACK, NORMAL);
 15015  010AF0  0E00               	movlw	0
 15016  010AF2  0101               	movlb	1	; () banked
 15017  010AF4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15018  010AF6  0E00               	movlw	0
 15019  010AF8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15020  010AFA  0E01               	movlw	1
 15021  010AFC  ECD7  F0A1         	call	_terminal_textAttributes
 15022                           
 15023                           ;ring_buffer_LUT.c: 497: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 15024  010B00  0EA3               	movlw	low STR_112
 15025  010B02  0101               	movlb	1	; () banked
 15026  010B04  6F82               	movwf	printf@f& (0+255),b
 15027  010B06  0EF2               	movlw	high STR_112
 15028  010B08  6F83               	movwf	(printf@f+1)& (0+255),b
 15029  010B0A  EC0F  F08A         	call	_printf	;wreg free
 15030                           
 15031                           ;ring_buffer_LUT.c: 498: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15032  010B0E  0E00               	movlw	0
 15033  010B10  0101               	movlb	1	; () banked
 15034  010B12  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15035  010B14  0E00               	movlw	0
 15036  010B16  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15037  010B18  0E03               	movlw	3
 15038  010B1A  ECD7  F0A1         	call	_terminal_textAttributes
 15039                           
 15040                           ;ring_buffer_LUT.c: 499: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 15041  010B1E  0E3D               	movlw	low STR_113
 15042  010B20  0101               	movlb	1	; () banked
 15043  010B22  6F82               	movwf	printf@f& (0+255),b
 15044  010B24  0EF2               	movlw	high STR_113
 15045  010B26  6F83               	movwf	(printf@f+1)& (0+255),b
 15046  010B28  EC0F  F08A         	call	_printf	;wreg free
 15047                           
 15048                           ;ring_buffer_LUT.c: 500: printf("Enter 'Help' for list of available commands\n\r");
 15049  010B2C  0E62               	movlw	low STR_114
 15050  010B2E  0101               	movlb	1	; () banked
 15051  010B30  6F82               	movwf	printf@f& (0+255),b
 15052  010B32  0EF8               	movlw	high STR_114
 15053  010B34  6F83               	movwf	(printf@f+1)& (0+255),b
 15054  010B36  EC0F  F08A         	call	_printf	;wreg free
 15055                           
 15056                           ;ring_buffer_LUT.c: 501: terminal_textAttributesReset();
 15057  010B3A  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15058                           
 15059                           ;ring_buffer_LUT.c: 503: }
 15060  010B3E  0012               	return	
 15061  010B40                     l1381:
 15062  010B40                     l20172:
 15063                           
 15064                           ;ring_buffer_LUT.c: 506: else {
 15065                           ;ring_buffer_LUT.c: 509: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 15066  010B40  0E00               	movlw	0
 15067  010B42  0101               	movlb	1	; () banked
 15068  010B44  6F41               	movwf	___fldiv@a& (0+255),b
 15069  010B46  0E00               	movlw	0
 15070  010B48  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 15071  010B4A  0EC8               	movlw	200
 15072  010B4C  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 15073  010B4E  0E42               	movlw	66
 15074  010B50  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 15075  010B52  0E00               	movlw	0
 15076  010B54  6F2D               	movwf	___fladd@a& (0+255),b
 15077  010B56  0E00               	movlw	0
 15078  010B58  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 15079  010B5A  0EC8               	movlw	200
 15080  010B5C  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 15081  010B5E  0E42               	movlw	66
 15082  010B60  6F30               	movwf	(___fladd@a+3)& (0+255),b
 15083  010B62  C2CE  F117         	movff	ringBufferLUT@percentage,___xxtofl@val
 15084  010B66  C2CF  F118         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 15085  010B6A  0E00               	movlw	0
 15086  010B6C  BF18               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15087  010B6E  0EFF               	movlw	-1
 15088  010B70  6F19               	movwf	(___xxtofl@val+2)& (0+255),b
 15089  010B72  6F1A               	movwf	(___xxtofl@val+3)& (0+255),b
 15090  010B74  0E01               	movlw	1
 15091  010B76  EC5F  F0B7         	call	___xxtofl
 15092  010B7A  C117  F125         	movff	?___xxtofl,___flneg@f1
 15093  010B7E  C118  F126         	movff	?___xxtofl+1,___flneg@f1+1
 15094  010B82  C119  F127         	movff	?___xxtofl+2,___flneg@f1+2
 15095  010B86  C11A  F128         	movff	?___xxtofl+3,___flneg@f1+3
 15096  010B8A  EC44  F0C9         	call	___flneg	;wreg free
 15097  010B8E  C125  F129         	movff	?___flneg,___fladd@b
 15098  010B92  C126  F12A         	movff	?___flneg+1,___fladd@b+1
 15099  010B96  C127  F12B         	movff	?___flneg+2,___fladd@b+2
 15100  010B9A  C128  F12C         	movff	?___flneg+3,___fladd@b+3
 15101  010B9E  ECDC  F0A6         	call	___fladd	;wreg free
 15102  010BA2  C129  F13D         	movff	?___fladd,___fldiv@b
 15103  010BA6  C12A  F13E         	movff	?___fladd+1,___fldiv@b+1
 15104  010BAA  C12B  F13F         	movff	?___fladd+2,___fldiv@b+2
 15105  010BAE  C12C  F140         	movff	?___fladd+3,___fldiv@b+3
 15106  010BB2  ECE0  F0AF         	call	___fldiv	;wreg free
 15107  010BB6  C13D  F156         	movff	?___fldiv,___flmul@b
 15108  010BBA  C13E  F157         	movff	?___fldiv+1,___flmul@b+1
 15109  010BBE  C13F  F158         	movff	?___fldiv+2,___flmul@b+2
 15110  010BC2  C140  F159         	movff	?___fldiv+3,___flmul@b+3
 15111  010BC6  0EDB               	movlw	219
 15112  010BC8  0101               	movlb	1	; () banked
 15113  010BCA  6F5A               	movwf	___flmul@a& (0+255),b
 15114  010BCC  0E0F               	movlw	15
 15115  010BCE  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 15116  010BD0  0E49               	movlw	73
 15117  010BD2  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 15118  010BD4  0E40               	movlw	64
 15119  010BD6  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 15120  010BD8  EC8B  F0A3         	call	___flmul	;wreg free
 15121  010BDC  C156  F0F2         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 15122  010BE0  C157  F0F3         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 15123  010BE4  C158  F0F4         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 15124  010BE8  C159  F0F5         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 15125                           
 15126                           ;ring_buffer_LUT.c: 510: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 15127  010BEC  C0F2  F156         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 15128  010BF0  C0F3  F157         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 15129  010BF4  C0F4  F158         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 15130  010BF8  C0F5  F159         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 15131  010BFC  0EE1               	movlw	225
 15132  010BFE  0101               	movlb	1	; () banked
 15133  010C00  6F5A               	movwf	___flmul@a& (0+255),b
 15134  010C02  0E2E               	movlw	46
 15135  010C04  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 15136  010C06  0E65               	movlw	101
 15137  010C08  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 15138  010C0A  0E42               	movlw	66
 15139  010C0C  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 15140  010C0E  EC8B  F0A3         	call	___flmul	;wreg free
 15141  010C12  C156  F2AD         	movff	?___flmul,ringBufferLUT@angle_degrees
 15142  010C16  C157  F2AE         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 15143  010C1A  C158  F2AF         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 15144  010C1E  C159  F2B0         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 15145                           
 15146                           ;ring_buffer_LUT.c: 511: dimming_period = (percentage) * (0xFFFF / 100);
 15147  010C22  C2CE  F117         	movff	ringBufferLUT@percentage,___wmul@multiplier
 15148  010C26  C2CF  F118         	movff	ringBufferLUT@percentage+1,___wmul@multiplier+1
 15149  010C2A  0E02               	movlw	2
 15150  010C2C  0101               	movlb	1	; () banked
 15151  010C2E  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15152  010C30  0E8F               	movlw	143
 15153  010C32  6F19               	movwf	___wmul@multiplicand& (0+255),b
 15154  010C34  EC88  F0C9         	call	___wmul	;wreg free
 15155  010C38  C117  F0F0         	movff	?___wmul,_dimming_period	;volatile
 15156  010C3C  C118  F0F1         	movff	?___wmul+1,_dimming_period+1	;volatile
 15157                           
 15158                           ;ring_buffer_LUT.c: 513: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15159  010C40  0E00               	movlw	0
 15160  010C42  0101               	movlb	1	; () banked
 15161  010C44  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15162  010C46  0E00               	movlw	0
 15163  010C48  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15164  010C4A  0E02               	movlw	2
 15165  010C4C  ECD7  F0A1         	call	_terminal_textAttributes
 15166                           
 15167                           ;ring_buffer_LUT.c: 514: printf("Dimming has been set to %d percent\n\r", percentage);
 15168  010C50  0E57               	movlw	low STR_115
 15169  010C52  0101               	movlb	1	; () banked
 15170  010C54  6F82               	movwf	printf@f& (0+255),b
 15171  010C56  0EFA               	movlw	high STR_115
 15172  010C58  6F83               	movwf	(printf@f+1)& (0+255),b
 15173  010C5A  C2CE  F184         	movff	ringBufferLUT@percentage,?_printf+2
 15174  010C5E  C2CF  F185         	movff	ringBufferLUT@percentage+1,?_printf+3
 15175  010C62  EC0F  F08A         	call	_printf	;wreg free
 15176                           
 15177                           ;ring_buffer_LUT.c: 515: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 15178  010C66  0E60               	movlw	low STR_116
 15179  010C68  0101               	movlb	1	; () banked
 15180  010C6A  6F82               	movwf	printf@f& (0+255),b
 15181  010C6C  0EF4               	movlw	high STR_116
 15182  010C6E  6F83               	movwf	(printf@f+1)& (0+255),b
 15183  010C70  C0F2  F184         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 15184  010C74  C0F3  F185         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 15185  010C78  C0F4  F186         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 15186  010C7C  C0F5  F187         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 15187  010C80  C2AD  F188         	movff	ringBufferLUT@angle_degrees,?_printf+6
 15188  010C84  C2AE  F189         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 15189  010C88  C2AF  F18A         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 15190  010C8C  C2B0  F18B         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 15191  010C90  EC0F  F08A         	call	_printf	;wreg free
 15192                           
 15193                           ;ring_buffer_LUT.c: 516: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 15194  010C94  0E97               	movlw	low STR_117
 15195  010C96  0101               	movlb	1	; () banked
 15196  010C98  6F82               	movwf	printf@f& (0+255),b
 15197  010C9A  0EF3               	movlw	high STR_117
 15198  010C9C  6F83               	movwf	(printf@f+1)& (0+255),b
 15199  010C9E  C0F0  F184         	movff	_dimming_period,?_printf+2	;volatile
 15200  010CA2  C0F1  F185         	movff	_dimming_period+1,?_printf+3	;volatile
 15201  010CA6  C0F0  F186         	movff	_dimming_period,?_printf+4	;volatile
 15202  010CAA  C0F1  F187         	movff	_dimming_period+1,?_printf+5	;volatile
 15203  010CAE  EC0F  F08A         	call	_printf	;wreg free
 15204                           
 15205                           ;ring_buffer_LUT.c: 517: terminal_textAttributesReset();
 15206  010CB2  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15207                           
 15208                           ;ring_buffer_LUT.c: 519: }
 15209                           ;ring_buffer_LUT.c: 521: }
 15210  010CB6  0012               	return	
 15211  010CB8                     l1378:
 15212                           
 15213                           ;ring_buffer_LUT.c: 524: else if((0 == strcmp(line, "Device On Time?"))) {
 15214  010CB8  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15215  010CBC  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15216  010CC0  0E0D               	movlw	low STR_118
 15217  010CC2  0101               	movlb	1	; () banked
 15218  010CC4  6F19               	movwf	strcmp@s2& (0+255),b
 15219  010CC6  0EFE               	movlw	high STR_118
 15220  010CC8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15221  010CCA  EC05  F0C6         	call	_strcmp	;wreg free
 15222  010CCE  0101               	movlb	1	; () banked
 15223  010CD0  5117               	movf	?_strcmp& (0+255),w,b
 15224  010CD2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15225  010CD4  A4D8               	btfss	status,2,c
 15226  010CD6  D019               	goto	l1386
 15227                           
 15228                           ; BSR set to: 1
 15229                           ;ring_buffer_LUT.c: 526: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15230  010CD8  0E00               	movlw	0
 15231  010CDA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15232  010CDC  0E00               	movlw	0
 15233  010CDE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15234  010CE0  0E02               	movlw	2
 15235  010CE2  ECD7  F0A1         	call	_terminal_textAttributes
 15236                           
 15237                           ;ring_buffer_LUT.c: 527: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 15238  010CE6  0E18               	movlw	low STR_119
 15239  010CE8  0101               	movlb	1	; () banked
 15240  010CEA  6F82               	movwf	printf@f& (0+255),b
 15241  010CEC  0EF5               	movlw	high STR_119
 15242  010CEE  6F83               	movwf	(printf@f+1)& (0+255),b
 15243  010CF0  C21C  F184         	movff	_dev_on_time,?_printf+2	;volatile
 15244  010CF4  C21D  F185         	movff	_dev_on_time+1,?_printf+3	;volatile
 15245  010CF8  C21E  F186         	movff	_dev_on_time+2,?_printf+4	;volatile
 15246  010CFC  C21F  F187         	movff	_dev_on_time+3,?_printf+5	;volatile
 15247  010D00  EC0F  F08A         	call	_printf	;wreg free
 15248                           
 15249                           ;ring_buffer_LUT.c: 528: terminal_textAttributesReset();
 15250  010D04  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15251                           
 15252                           ;ring_buffer_LUT.c: 530: }
 15253  010D08  0012               	return	
 15254  010D0A                     l1386:
 15255                           
 15256                           ;ring_buffer_LUT.c: 533: else if((0 == strcmp(line, "Load On Time?"))) {
 15257  010D0A  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15258  010D0E  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15259  010D12  0EC3               	movlw	low STR_120
 15260  010D14  0101               	movlb	1	; () banked
 15261  010D16  6F19               	movwf	strcmp@s2& (0+255),b
 15262  010D18  0EFE               	movlw	high STR_120
 15263  010D1A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15264  010D1C  EC05  F0C6         	call	_strcmp	;wreg free
 15265  010D20  0101               	movlb	1	; () banked
 15266  010D22  5117               	movf	?_strcmp& (0+255),w,b
 15267  010D24  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15268  010D26  A4D8               	btfss	status,2,c
 15269  010D28  D019               	goto	l1388
 15270                           
 15271                           ; BSR set to: 1
 15272                           ;ring_buffer_LUT.c: 535: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15273  010D2A  0E00               	movlw	0
 15274  010D2C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15275  010D2E  0E00               	movlw	0
 15276  010D30  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15277  010D32  0E02               	movlw	2
 15278  010D34  ECD7  F0A1         	call	_terminal_textAttributes
 15279                           
 15280                           ;ring_buffer_LUT.c: 536: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 15281  010D38  0ED2               	movlw	low STR_121
 15282  010D3A  0101               	movlb	1	; () banked
 15283  010D3C  6F82               	movwf	printf@f& (0+255),b
 15284  010D3E  0EF6               	movlw	high STR_121
 15285  010D40  6F83               	movwf	(printf@f+1)& (0+255),b
 15286  010D42  C218  F184         	movff	_load_on_time,?_printf+2	;volatile
 15287  010D46  C219  F185         	movff	_load_on_time+1,?_printf+3	;volatile
 15288  010D4A  C21A  F186         	movff	_load_on_time+2,?_printf+4	;volatile
 15289  010D4E  C21B  F187         	movff	_load_on_time+3,?_printf+5	;volatile
 15290  010D52  EC0F  F08A         	call	_printf	;wreg free
 15291                           
 15292                           ;ring_buffer_LUT.c: 537: terminal_textAttributesReset();
 15293  010D56  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15294                           
 15295                           ;ring_buffer_LUT.c: 539: }
 15296  010D5A  0012               	return	
 15297  010D5C                     l1388:
 15298                           
 15299                           ;ring_buffer_LUT.c: 542: else if((0 == strcmp(line, "Max RMS Current?"))) {
 15300  010D5C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15301  010D60  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15302  010D64  0EBB               	movlw	low STR_122
 15303  010D66  0101               	movlb	1	; () banked
 15304  010D68  6F19               	movwf	strcmp@s2& (0+255),b
 15305  010D6A  0EFD               	movlw	high STR_122
 15306  010D6C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15307  010D6E  EC05  F0C6         	call	_strcmp	;wreg free
 15308  010D72  0101               	movlb	1	; () banked
 15309  010D74  5117               	movf	?_strcmp& (0+255),w,b
 15310  010D76  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15311  010D78  A4D8               	btfss	status,2,c
 15312  010D7A  D030               	goto	l1390
 15313                           
 15314                           ; BSR set to: 1
 15315                           ;ring_buffer_LUT.c: 545: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 15316  010D7C  0EFB               	movlw	low _max_Irms_address
 15317  010D7E  6EF6               	movwf	tblptrl,c
 15318  010D80                     	if	1	;There is more than 1 active tblptr byte
 15319  010D80  0ED7               	movlw	high _max_Irms_address
 15320  010D82  6EF7               	movwf	tblptrh,c
 15321  010D84                     	endif
 15322  010D84                     	if	1	;There are 3 active tblptr bytes
 15323  010D84  0E00               	movlw	low (_max_Irms_address shr (0+16))
 15324  010D86  6EF8               	movwf	tblptru,c
 15325  010D88                     	endif
 15326  010D88  0009               	tblrd		*+
 15327  010D8A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15328  010D8E  000A               	tblrd		*-
 15329  010D90  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15330  010D94  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 15331  010D98  C119  F2B1         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 15332  010D9C  C11A  F2B2         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 15333  010DA0  C11B  F2B3         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 15334  010DA4  C11C  F2B4         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 15335                           
 15336                           ;ring_buffer_LUT.c: 547: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15337  010DA8  0E00               	movlw	0
 15338  010DAA  0101               	movlb	1	; () banked
 15339  010DAC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15340  010DAE  0E00               	movlw	0
 15341  010DB0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15342  010DB2  0E06               	movlw	6
 15343  010DB4  ECD7  F0A1         	call	_terminal_textAttributes
 15344                           
 15345                           ;ring_buffer_LUT.c: 548: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 15346  010DB8  0E6F               	movlw	low STR_123
 15347  010DBA  0101               	movlb	1	; () banked
 15348  010DBC  6F82               	movwf	printf@f& (0+255),b
 15349  010DBE  0EF7               	movlw	high STR_123
 15350  010DC0  6F83               	movwf	(printf@f+1)& (0+255),b
 15351  010DC2  C2B1  F184         	movff	ringBufferLUT@max_current_print,?_printf+2
 15352  010DC6  C2B2  F185         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 15353  010DCA  C2B3  F186         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 15354  010DCE  C2B4  F187         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 15355  010DD2  EC0F  F08A         	call	_printf	;wreg free
 15356                           
 15357                           ;ring_buffer_LUT.c: 549: terminal_textAttributesReset();
 15358  010DD6  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15359                           
 15360                           ;ring_buffer_LUT.c: 551: }
 15361  010DDA  0012               	return	
 15362  010DDC                     l1390:
 15363                           
 15364                           ;ring_buffer_LUT.c: 554: else if((0 == strcmp(line, "Max Power?"))) {
 15365  010DDC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15366  010DE0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15367  010DE4  0E52               	movlw	low STR_124
 15368  010DE6  0101               	movlb	1	; () banked
 15369  010DE8  6F19               	movwf	strcmp@s2& (0+255),b
 15370  010DEA  0EFF               	movlw	high STR_124
 15371  010DEC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15372  010DEE  EC05  F0C6         	call	_strcmp	;wreg free
 15373  010DF2  0101               	movlb	1	; () banked
 15374  010DF4  5117               	movf	?_strcmp& (0+255),w,b
 15375  010DF6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15376  010DF8  A4D8               	btfss	status,2,c
 15377  010DFA  D030               	goto	l1392
 15378                           
 15379                           ; BSR set to: 1
 15380                           ;ring_buffer_LUT.c: 557: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 15381  010DFC  0EF9               	movlw	low _max_Power_address
 15382  010DFE  6EF6               	movwf	tblptrl,c
 15383  010E00                     	if	1	;There is more than 1 active tblptr byte
 15384  010E00  0ED7               	movlw	high _max_Power_address
 15385  010E02  6EF7               	movwf	tblptrh,c
 15386  010E04                     	endif
 15387  010E04                     	if	1	;There are 3 active tblptr bytes
 15388  010E04  0E00               	movlw	low (_max_Power_address shr (0+16))
 15389  010E06  6EF8               	movwf	tblptru,c
 15390  010E08                     	endif
 15391  010E08  0009               	tblrd		*+
 15392  010E0A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15393  010E0E  000A               	tblrd		*-
 15394  010E10  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15395  010E14  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 15396  010E18  C119  F2B5         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 15397  010E1C  C11A  F2B6         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 15398  010E20  C11B  F2B7         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 15399  010E24  C11C  F2B8         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 15400                           
 15401                           ;ring_buffer_LUT.c: 559: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15402  010E28  0E00               	movlw	0
 15403  010E2A  0101               	movlb	1	; () banked
 15404  010E2C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15405  010E2E  0E00               	movlw	0
 15406  010E30  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15407  010E32  0E06               	movlw	6
 15408  010E34  ECD7  F0A1         	call	_terminal_textAttributes
 15409                           
 15410                           ;ring_buffer_LUT.c: 560: printf("Maximum recorded output power is %.3f Watts\n\r", max_P
      +                          ower_print);
 15411  010E38  0E90               	movlw	low STR_125
 15412  010E3A  0101               	movlb	1	; () banked
 15413  010E3C  6F82               	movwf	printf@f& (0+255),b
 15414  010E3E  0EF8               	movlw	high STR_125
 15415  010E40  6F83               	movwf	(printf@f+1)& (0+255),b
 15416  010E42  C2B5  F184         	movff	ringBufferLUT@max_Power_print,?_printf+2
 15417  010E46  C2B6  F185         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 15418  010E4A  C2B7  F186         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 15419  010E4E  C2B8  F187         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 15420  010E52  EC0F  F08A         	call	_printf	;wreg free
 15421                           
 15422                           ;ring_buffer_LUT.c: 561: terminal_textAttributesReset();
 15423  010E56  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15424                           
 15425                           ;ring_buffer_LUT.c: 563: }
 15426  010E5A  0012               	return	
 15427  010E5C                     l1392:
 15428                           
 15429                           ;ring_buffer_LUT.c: 566: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 15430  010E5C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15431  010E60  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15432  010E64  0E1A               	movlw	low STR_126
 15433  010E66  0101               	movlb	1	; () banked
 15434  010E68  6F19               	movwf	strcmp@s2& (0+255),b
 15435  010E6A  0EFD               	movlw	high STR_126
 15436  010E6C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15437  010E6E  EC05  F0C6         	call	_strcmp	;wreg free
 15438  010E72  0101               	movlb	1	; () banked
 15439  010E74  5117               	movf	?_strcmp& (0+255),w,b
 15440  010E76  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15441  010E78  A4D8               	btfss	status,2,c
 15442  010E7A  D030               	goto	l1394
 15443                           
 15444                           ; BSR set to: 1
 15445                           ;ring_buffer_LUT.c: 569: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 15446  010E7C  0EF7               	movlw	low _max_POS3P3_ADC_Result_address
 15447  010E7E  6EF6               	movwf	tblptrl,c
 15448  010E80                     	if	1	;There is more than 1 active tblptr byte
 15449  010E80  0ED7               	movlw	high _max_POS3P3_ADC_Result_address
 15450  010E82  6EF7               	movwf	tblptrh,c
 15451  010E84                     	endif
 15452  010E84                     	if	1	;There are 3 active tblptr bytes
 15453  010E84  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 15454  010E86  6EF8               	movwf	tblptru,c
 15455  010E88                     	endif
 15456  010E88  0009               	tblrd		*+
 15457  010E8A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15458  010E8E  000A               	tblrd		*-
 15459  010E90  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15460  010E94  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 15461  010E98  C119  F2B9         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 15462  010E9C  C11A  F2BA         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 15463  010EA0  C11B  F2BB         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 15464  010EA4  C11C  F2BC         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 15465                           
 15466                           ;ring_buffer_LUT.c: 571: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15467  010EA8  0E00               	movlw	0
 15468  010EAA  0101               	movlb	1	; () banked
 15469  010EAC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15470  010EAE  0E00               	movlw	0
 15471  010EB0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15472  010EB2  0E06               	movlw	6
 15473  010EB4  ECD7  F0A1         	call	_terminal_textAttributes
 15474                           
 15475                           ;ring_buffer_LUT.c: 572: printf("Maximum recorded +3.3V rail voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 15476  010EB8  0E3B               	movlw	low STR_127
 15477  010EBA  0101               	movlb	1	; () banked
 15478  010EBC  6F82               	movwf	printf@f& (0+255),b
 15479  010EBE  0EF7               	movlw	high STR_127
 15480  010EC0  6F83               	movwf	(printf@f+1)& (0+255),b
 15481  010EC2  C2B9  F184         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 15482  010EC6  C2BA  F185         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 15483  010ECA  C2BB  F186         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 15484  010ECE  C2BC  F187         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 15485  010ED2  EC0F  F08A         	call	_printf	;wreg free
 15486                           
 15487                           ;ring_buffer_LUT.c: 573: terminal_textAttributesReset();
 15488  010ED6  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15489                           
 15490                           ;ring_buffer_LUT.c: 575: }
 15491  010EDA  0012               	return	
 15492  010EDC                     l1394:
 15493                           
 15494                           ;ring_buffer_LUT.c: 578: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 15495  010EDC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15496  010EE0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15497  010EE4  0E41               	movlw	low STR_128
 15498  010EE6  0101               	movlb	1	; () banked
 15499  010EE8  6F19               	movwf	strcmp@s2& (0+255),b
 15500  010EEA  0EFD               	movlw	high STR_128
 15501  010EEC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15502  010EEE  EC05  F0C6         	call	_strcmp	;wreg free
 15503  010EF2  0101               	movlb	1	; () banked
 15504  010EF4  5117               	movf	?_strcmp& (0+255),w,b
 15505  010EF6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15506  010EF8  A4D8               	btfss	status,2,c
 15507  010EFA  D030               	goto	l1396
 15508                           
 15509                           ; BSR set to: 1
 15510                           ;ring_buffer_LUT.c: 581: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 15511  010EFC  0EF5               	movlw	low _max_POS12_ADC_Result_address
 15512  010EFE  6EF6               	movwf	tblptrl,c
 15513  010F00                     	if	1	;There is more than 1 active tblptr byte
 15514  010F00  0ED7               	movlw	high _max_POS12_ADC_Result_address
 15515  010F02  6EF7               	movwf	tblptrh,c
 15516  010F04                     	endif
 15517  010F04                     	if	1	;There are 3 active tblptr bytes
 15518  010F04  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 15519  010F06  6EF8               	movwf	tblptru,c
 15520  010F08                     	endif
 15521  010F08  0009               	tblrd		*+
 15522  010F0A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15523  010F0E  000A               	tblrd		*-
 15524  010F10  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15525  010F14  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 15526  010F18  C119  F2BD         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_2878
 15527  010F1C  C11A  F2BE         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_2878+1
 15528  010F20  C11B  F2BF         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_2878+2
 15529  010F24  C11C  F2C0         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_2878+3
 15530                           
 15531                           ;ring_buffer_LUT.c: 583: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15532  010F28  0E00               	movlw	0
 15533  010F2A  0101               	movlb	1	; () banked
 15534  010F2C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15535  010F2E  0E00               	movlw	0
 15536  010F30  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15537  010F32  0E06               	movlw	6
 15538  010F34  ECD7  F0A1         	call	_terminal_textAttributes
 15539                           
 15540                           ;ring_buffer_LUT.c: 584: printf("Maximum recorded +12V rail voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 15541  010F38  0EA2               	movlw	low STR_129
 15542  010F3A  0101               	movlb	1	; () banked
 15543  010F3C  6F82               	movwf	printf@f& (0+255),b
 15544  010F3E  0EF7               	movlw	high STR_129
 15545  010F40  6F83               	movwf	(printf@f+1)& (0+255),b
 15546  010F42  C2BD  F184         	movff	ringBufferLUT@max_voltage_print_2878,?_printf+2
 15547  010F46  C2BE  F185         	movff	ringBufferLUT@max_voltage_print_2878+1,?_printf+3
 15548  010F4A  C2BF  F186         	movff	ringBufferLUT@max_voltage_print_2878+2,?_printf+4
 15549  010F4E  C2C0  F187         	movff	ringBufferLUT@max_voltage_print_2878+3,?_printf+5
 15550  010F52  EC0F  F08A         	call	_printf	;wreg free
 15551                           
 15552                           ;ring_buffer_LUT.c: 585: terminal_textAttributesReset();
 15553  010F56  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15554                           
 15555                           ;ring_buffer_LUT.c: 587: }
 15556  010F5A  0012               	return	
 15557  010F5C                     l1396:
 15558                           
 15559                           ;ring_buffer_LUT.c: 590: else if((0 == strcmp(line, "Max Die Temp?"))) {
 15560  010F5C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15561  010F60  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15562  010F64  0ED1               	movlw	low STR_130
 15563  010F66  0101               	movlb	1	; () banked
 15564  010F68  6F19               	movwf	strcmp@s2& (0+255),b
 15565  010F6A  0EFE               	movlw	high STR_130
 15566  010F6C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15567  010F6E  EC05  F0C6         	call	_strcmp	;wreg free
 15568  010F72  0101               	movlb	1	; () banked
 15569  010F74  5117               	movf	?_strcmp& (0+255),w,b
 15570  010F76  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15571  010F78  A4D8               	btfss	status,2,c
 15572  010F7A  D030               	goto	l1398
 15573                           
 15574                           ; BSR set to: 1
 15575                           ;ring_buffer_LUT.c: 593: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 15576  010F7C  0EF3               	movlw	low _max_Temp_ADC_Result_address
 15577  010F7E  6EF6               	movwf	tblptrl,c
 15578  010F80                     	if	1	;There is more than 1 active tblptr byte
 15579  010F80  0ED7               	movlw	high _max_Temp_ADC_Result_address
 15580  010F82  6EF7               	movwf	tblptrh,c
 15581  010F84                     	endif
 15582  010F84                     	if	1	;There are 3 active tblptr bytes
 15583  010F84  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 15584  010F86  6EF8               	movwf	tblptru,c
 15585  010F88                     	endif
 15586  010F88  0009               	tblrd		*+
 15587  010F8A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15588  010F8E  000A               	tblrd		*-
 15589  010F90  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15590  010F94  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 15591  010F98  C119  F2C1         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 15592  010F9C  C11A  F2C2         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 15593  010FA0  C11B  F2C3         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 15594  010FA4  C11C  F2C4         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 15595                           
 15596                           ;ring_buffer_LUT.c: 595: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15597  010FA8  0E00               	movlw	0
 15598  010FAA  0101               	movlb	1	; () banked
 15599  010FAC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15600  010FAE  0E00               	movlw	0
 15601  010FB0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15602  010FB2  0E06               	movlw	6
 15603  010FB4  ECD7  F0A1         	call	_terminal_textAttributes
 15604                           
 15605                           ;ring_buffer_LUT.c: 596: printf("Maximum recorded die temperature is %.3f C\n\r", max_te
      +                          mp_print);
 15606  010FB8  0EBE               	movlw	low STR_131
 15607  010FBA  0101               	movlb	1	; () banked
 15608  010FBC  6F82               	movwf	printf@f& (0+255),b
 15609  010FBE  0EF8               	movlw	high STR_131
 15610  010FC0  6F83               	movwf	(printf@f+1)& (0+255),b
 15611  010FC2  C2C1  F184         	movff	ringBufferLUT@max_temp_print,?_printf+2
 15612  010FC6  C2C2  F185         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 15613  010FCA  C2C3  F186         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 15614  010FCE  C2C4  F187         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 15615  010FD2  EC0F  F08A         	call	_printf	;wreg free
 15616                           
 15617                           ;ring_buffer_LUT.c: 597: terminal_textAttributesReset();
 15618  010FD6  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15619                           
 15620                           ;ring_buffer_LUT.c: 599: }
 15621  010FDA  0012               	return	
 15622  010FDC                     l1398:
 15623                           
 15624                           ;ring_buffer_LUT.c: 602: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 15625  010FDC  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15626  010FE0  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15627  010FE4  0E99               	movlw	low STR_132
 15628  010FE6  0101               	movlb	1	; () banked
 15629  010FE8  6F19               	movwf	strcmp@s2& (0+255),b
 15630  010FEA  0EFD               	movlw	high STR_132
 15631  010FEC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15632  010FEE  EC05  F0C6         	call	_strcmp	;wreg free
 15633  010FF2  0101               	movlb	1	; () banked
 15634  010FF4  5117               	movf	?_strcmp& (0+255),w,b
 15635  010FF6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15636  010FF8  A4D8               	btfss	status,2,c
 15637  010FFA  D030               	goto	l1400
 15638                           
 15639                           ; BSR set to: 1
 15640                           ;ring_buffer_LUT.c: 605: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 15641  010FFC  0EF1               	movlw	low _max_FVR_ADC_Result_address
 15642  010FFE  6EF6               	movwf	tblptrl,c
 15643  011000                     	if	1	;There is more than 1 active tblptr byte
 15644  011000  0ED7               	movlw	high _max_FVR_ADC_Result_address
 15645  011002  6EF7               	movwf	tblptrh,c
 15646  011004                     	endif
 15647  011004                     	if	1	;There are 3 active tblptr bytes
 15648  011004  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 15649  011006  6EF8               	movwf	tblptru,c
 15650  011008                     	endif
 15651  011008  0009               	tblrd		*+
 15652  01100A  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 15653  01100E  000A               	tblrd		*-
 15654  011010  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 15655  011014  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 15656  011018  C119  F2C5         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_2884
 15657  01101C  C11A  F2C6         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_2884+1
 15658  011020  C11B  F2C7         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_2884+2
 15659  011024  C11C  F2C8         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_2884+3
 15660                           
 15661                           ;ring_buffer_LUT.c: 607: terminal_textAttributes(CYAN, BLACK, NORMAL);
 15662  011028  0E00               	movlw	0
 15663  01102A  0101               	movlb	1	; () banked
 15664  01102C  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15665  01102E  0E00               	movlw	0
 15666  011030  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15667  011032  0E06               	movlw	6
 15668  011034  ECD7  F0A1         	call	_terminal_textAttributes
 15669                           
 15670                           ;ring_buffer_LUT.c: 608: printf("Maximum recorded FVR buffer 1 voltage is %.3f Volts\n\r
      +                          ", max_voltage_print);
 15671  011038  0E67               	movlw	low STR_133
 15672  01103A  0101               	movlb	1	; () banked
 15673  01103C  6F82               	movwf	printf@f& (0+255),b
 15674  01103E  0EF6               	movlw	high STR_133
 15675  011040  6F83               	movwf	(printf@f+1)& (0+255),b
 15676  011042  C2C5  F184         	movff	ringBufferLUT@max_voltage_print_2884,?_printf+2
 15677  011046  C2C6  F185         	movff	ringBufferLUT@max_voltage_print_2884+1,?_printf+3
 15678  01104A  C2C7  F186         	movff	ringBufferLUT@max_voltage_print_2884+2,?_printf+4
 15679  01104E  C2C8  F187         	movff	ringBufferLUT@max_voltage_print_2884+3,?_printf+5
 15680  011052  EC0F  F08A         	call	_printf	;wreg free
 15681                           
 15682                           ;ring_buffer_LUT.c: 609: terminal_textAttributesReset();
 15683  011056  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15684                           
 15685                           ;ring_buffer_LUT.c: 611: }
 15686  01105A  0012               	return	
 15687  01105C                     l1400:
 15688                           
 15689                           ;ring_buffer_LUT.c: 614: else if((0 == strcmp(line, "Clear Max Values"))) {
 15690  01105C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15691  011060  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15692  011064  0ECC               	movlw	low STR_134
 15693  011066  0101               	movlb	1	; () banked
 15694  011068  6F19               	movwf	strcmp@s2& (0+255),b
 15695  01106A  0EFD               	movlw	high STR_134
 15696  01106C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15697  01106E  EC05  F0C6         	call	_strcmp	;wreg free
 15698  011072  0101               	movlb	1	; () banked
 15699  011074  5117               	movf	?_strcmp& (0+255),w,b
 15700  011076  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15701  011078  A4D8               	btfss	status,2,c
 15702  01107A  D0CC               	goto	l1402
 15703                           
 15704                           ; BSR set to: 1
 15705                           ;ring_buffer_LUT.c: 617: writeDoubleToEEPROM(0.0, max_Irms_address);
 15706  01107C  0E00               	movlw	0
 15707  01107E  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15708  011080  0E00               	movlw	0
 15709  011082  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15710  011084  0E00               	movlw	0
 15711  011086  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15712  011088  0E00               	movlw	0
 15713  01108A  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15714  01108C  0EFB               	movlw	low _max_Irms_address
 15715  01108E  6EF6               	movwf	tblptrl,c
 15716  011090                     	if	1	;There is more than 1 active tblptr byte
 15717  011090  0ED7               	movlw	high _max_Irms_address
 15718  011092  6EF7               	movwf	tblptrh,c
 15719  011094                     	endif
 15720  011094                     	if	1	;There are 3 active tblptr bytes
 15721  011094  0E00               	movlw	low (_max_Irms_address shr (0+16))
 15722  011096  6EF8               	movwf	tblptru,c
 15723  011098                     	endif
 15724  011098  0009               	tblrd		*+
 15725  01109A  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15726  01109E  000A               	tblrd		*-
 15727  0110A0  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15728  0110A4  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 15729                           
 15730                           ;ring_buffer_LUT.c: 618: writeDoubleToEEPROM(0.0, max_Power_address);
 15731  0110A8  0E00               	movlw	0
 15732  0110AA  0101               	movlb	1	; () banked
 15733  0110AC  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15734  0110AE  0E00               	movlw	0
 15735  0110B0  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15736  0110B2  0E00               	movlw	0
 15737  0110B4  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15738  0110B6  0E00               	movlw	0
 15739  0110B8  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15740  0110BA  0EF9               	movlw	low _max_Power_address
 15741  0110BC  6EF6               	movwf	tblptrl,c
 15742  0110BE                     	if	1	;There is more than 1 active tblptr byte
 15743  0110BE  0ED7               	movlw	high _max_Power_address
 15744  0110C0  6EF7               	movwf	tblptrh,c
 15745  0110C2                     	endif
 15746  0110C2                     	if	1	;There are 3 active tblptr bytes
 15747  0110C2  0E00               	movlw	low (_max_Power_address shr (0+16))
 15748  0110C4  6EF8               	movwf	tblptru,c
 15749  0110C6                     	endif
 15750  0110C6  0009               	tblrd		*+
 15751  0110C8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15752  0110CC  000A               	tblrd		*-
 15753  0110CE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15754  0110D2  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 15755                           
 15756                           ;ring_buffer_LUT.c: 619: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 15757  0110D6  0E00               	movlw	0
 15758  0110D8  0101               	movlb	1	; () banked
 15759  0110DA  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15760  0110DC  0E00               	movlw	0
 15761  0110DE  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15762  0110E0  0E00               	movlw	0
 15763  0110E2  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15764  0110E4  0E00               	movlw	0
 15765  0110E6  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15766  0110E8  0EF7               	movlw	low _max_POS3P3_ADC_Result_address
 15767  0110EA  6EF6               	movwf	tblptrl,c
 15768  0110EC                     	if	1	;There is more than 1 active tblptr byte
 15769  0110EC  0ED7               	movlw	high _max_POS3P3_ADC_Result_address
 15770  0110EE  6EF7               	movwf	tblptrh,c
 15771  0110F0                     	endif
 15772  0110F0                     	if	1	;There are 3 active tblptr bytes
 15773  0110F0  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 15774  0110F2  6EF8               	movwf	tblptru,c
 15775  0110F4                     	endif
 15776  0110F4  0009               	tblrd		*+
 15777  0110F6  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15778  0110FA  000A               	tblrd		*-
 15779  0110FC  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15780  011100  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 15781                           
 15782                           ;ring_buffer_LUT.c: 620: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 15783  011104  0E00               	movlw	0
 15784  011106  0101               	movlb	1	; () banked
 15785  011108  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15786  01110A  0E00               	movlw	0
 15787  01110C  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15788  01110E  0E00               	movlw	0
 15789  011110  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15790  011112  0E00               	movlw	0
 15791  011114  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15792  011116  0EF5               	movlw	low _max_POS12_ADC_Result_address
 15793  011118  6EF6               	movwf	tblptrl,c
 15794  01111A                     	if	1	;There is more than 1 active tblptr byte
 15795  01111A  0ED7               	movlw	high _max_POS12_ADC_Result_address
 15796  01111C  6EF7               	movwf	tblptrh,c
 15797  01111E                     	endif
 15798  01111E                     	if	1	;There are 3 active tblptr bytes
 15799  01111E  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 15800  011120  6EF8               	movwf	tblptru,c
 15801  011122                     	endif
 15802  011122  0009               	tblrd		*+
 15803  011124  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15804  011128  000A               	tblrd		*-
 15805  01112A  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15806  01112E  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 15807                           
 15808                           ;ring_buffer_LUT.c: 621: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 15809  011132  0E00               	movlw	0
 15810  011134  0101               	movlb	1	; () banked
 15811  011136  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15812  011138  0E00               	movlw	0
 15813  01113A  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15814  01113C  0E00               	movlw	0
 15815  01113E  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15816  011140  0E00               	movlw	0
 15817  011142  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15818  011144  0EF3               	movlw	low _max_Temp_ADC_Result_address
 15819  011146  6EF6               	movwf	tblptrl,c
 15820  011148                     	if	1	;There is more than 1 active tblptr byte
 15821  011148  0ED7               	movlw	high _max_Temp_ADC_Result_address
 15822  01114A  6EF7               	movwf	tblptrh,c
 15823  01114C                     	endif
 15824  01114C                     	if	1	;There are 3 active tblptr bytes
 15825  01114C  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 15826  01114E  6EF8               	movwf	tblptru,c
 15827  011150                     	endif
 15828  011150  0009               	tblrd		*+
 15829  011152  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15830  011156  000A               	tblrd		*-
 15831  011158  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15832  01115C  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 15833                           
 15834                           ;ring_buffer_LUT.c: 622: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 15835  011160  0E00               	movlw	0
 15836  011162  0101               	movlb	1	; () banked
 15837  011164  6F1B               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 15838  011166  0E00               	movlw	0
 15839  011168  6F1C               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 15840  01116A  0E00               	movlw	0
 15841  01116C  6F1D               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 15842  01116E  0E00               	movlw	0
 15843  011170  6F1E               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 15844  011172  0EF1               	movlw	low _max_FVR_ADC_Result_address
 15845  011174  6EF6               	movwf	tblptrl,c
 15846  011176                     	if	1	;There is more than 1 active tblptr byte
 15847  011176  0ED7               	movlw	high _max_FVR_ADC_Result_address
 15848  011178  6EF7               	movwf	tblptrh,c
 15849  01117A                     	endif
 15850  01117A                     	if	1	;There are 3 active tblptr bytes
 15851  01117A  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 15852  01117C  6EF8               	movwf	tblptru,c
 15853  01117E                     	endif
 15854  01117E  0009               	tblrd		*+
 15855  011180  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 15856  011184  000A               	tblrd		*-
 15857  011186  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 15858  01118A  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 15859                           
 15860                           ;ring_buffer_LUT.c: 625: max_Irms = 0.0;
 15861  01118E  0E00               	movlw	0
 15862  011190  0102               	movlb	2	; () banked
 15863  011192  6F14               	movwf	_max_Irms& (0+255),b	;volatile
 15864  011194  0E00               	movlw	0
 15865  011196  6F15               	movwf	(_max_Irms+1)& (0+255),b	;volatile
 15866  011198  0E00               	movlw	0
 15867  01119A  6F16               	movwf	(_max_Irms+2)& (0+255),b	;volatile
 15868  01119C  0E00               	movlw	0
 15869  01119E  6F17               	movwf	(_max_Irms+3)& (0+255),b	;volatile
 15870                           
 15871                           ; BSR set to: 2
 15872                           ;ring_buffer_LUT.c: 626: max_Power = 0.0;
 15873  0111A0  0E00               	movlw	0
 15874  0111A2  6F10               	movwf	_max_Power& (0+255),b	;volatile
 15875  0111A4  0E00               	movlw	0
 15876  0111A6  6F11               	movwf	(_max_Power+1)& (0+255),b	;volatile
 15877  0111A8  0E00               	movlw	0
 15878  0111AA  6F12               	movwf	(_max_Power+2)& (0+255),b	;volatile
 15879  0111AC  0E00               	movlw	0
 15880  0111AE  6F13               	movwf	(_max_Power+3)& (0+255),b	;volatile
 15881                           
 15882                           ; BSR set to: 2
 15883                           ;ring_buffer_LUT.c: 627: max_POS3P3_ADC_Result = 0.0;
 15884  0111B0  0E00               	movlw	0
 15885  0111B2  6F0C               	movwf	_max_POS3P3_ADC_Result& (0+255),b	;volatile
 15886  0111B4  0E00               	movlw	0
 15887  0111B6  6F0D               	movwf	(_max_POS3P3_ADC_Result+1)& (0+255),b	;volatile
 15888  0111B8  0E00               	movlw	0
 15889  0111BA  6F0E               	movwf	(_max_POS3P3_ADC_Result+2)& (0+255),b	;volatile
 15890  0111BC  0E00               	movlw	0
 15891  0111BE  6F0F               	movwf	(_max_POS3P3_ADC_Result+3)& (0+255),b	;volatile
 15892                           
 15893                           ; BSR set to: 2
 15894                           ;ring_buffer_LUT.c: 628: max_POS12_ADC_Result = 0.0;
 15895  0111C0  0E00               	movlw	0
 15896  0111C2  6F08               	movwf	_max_POS12_ADC_Result& (0+255),b	;volatile
 15897  0111C4  0E00               	movlw	0
 15898  0111C6  6F09               	movwf	(_max_POS12_ADC_Result+1)& (0+255),b	;volatile
 15899  0111C8  0E00               	movlw	0
 15900  0111CA  6F0A               	movwf	(_max_POS12_ADC_Result+2)& (0+255),b	;volatile
 15901  0111CC  0E00               	movlw	0
 15902  0111CE  6F0B               	movwf	(_max_POS12_ADC_Result+3)& (0+255),b	;volatile
 15903                           
 15904                           ; BSR set to: 2
 15905                           ;ring_buffer_LUT.c: 629: max_Temp_ADC_Result = 0.0;
 15906  0111D0  0E00               	movlw	0
 15907  0111D2  6F04               	movwf	_max_Temp_ADC_Result& (0+255),b	;volatile
 15908  0111D4  0E00               	movlw	0
 15909  0111D6  6F05               	movwf	(_max_Temp_ADC_Result+1)& (0+255),b	;volatile
 15910  0111D8  0E00               	movlw	0
 15911  0111DA  6F06               	movwf	(_max_Temp_ADC_Result+2)& (0+255),b	;volatile
 15912  0111DC  0E00               	movlw	0
 15913  0111DE  6F07               	movwf	(_max_Temp_ADC_Result+3)& (0+255),b	;volatile
 15914                           
 15915                           ; BSR set to: 2
 15916                           ;ring_buffer_LUT.c: 630: max_FVR_ADC_Result = 0.0;
 15917  0111E0  0E00               	movlw	0
 15918  0111E2  6F00               	movwf	_max_FVR_ADC_Result& (0+255),b	;volatile
 15919  0111E4  0E00               	movlw	0
 15920  0111E6  6F01               	movwf	(_max_FVR_ADC_Result+1)& (0+255),b	;volatile
 15921  0111E8  0E00               	movlw	0
 15922  0111EA  6F02               	movwf	(_max_FVR_ADC_Result+2)& (0+255),b	;volatile
 15923  0111EC  0E00               	movlw	0
 15924  0111EE  6F03               	movwf	(_max_FVR_ADC_Result+3)& (0+255),b	;volatile
 15925                           
 15926                           ; BSR set to: 2
 15927                           ;ring_buffer_LUT.c: 632: terminal_textAttributes(GREEN, BLACK, NORMAL);
 15928  0111F0  0E00               	movlw	0
 15929  0111F2  0101               	movlb	1	; () banked
 15930  0111F4  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15931  0111F6  0E00               	movlw	0
 15932  0111F8  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15933  0111FA  0E02               	movlw	2
 15934  0111FC  ECD7  F0A1         	call	_terminal_textAttributes
 15935                           
 15936                           ;ring_buffer_LUT.c: 633: printf("Maximum recorded values erased from SRAM and EEPROM\n\r
      +                          ");
 15937  011200  0EFB               	movlw	low STR_135
 15938  011202  0101               	movlb	1	; () banked
 15939  011204  6F82               	movwf	printf@f& (0+255),b
 15940  011206  0EF5               	movlw	high STR_135
 15941  011208  6F83               	movwf	(printf@f+1)& (0+255),b
 15942  01120A  EC0F  F08A         	call	_printf	;wreg free
 15943                           
 15944                           ;ring_buffer_LUT.c: 634: terminal_textAttributesReset();
 15945  01120E  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15946                           
 15947                           ;ring_buffer_LUT.c: 636: }
 15948  011212  0012               	return	
 15949  011214                     l1402:
 15950                           
 15951                           ;ring_buffer_LUT.c: 640: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 15952  011214  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15953  011218  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15954  01121C  0EC5               	movlw	low STR_136
 15955  01121E  0101               	movlb	1	; () banked
 15956  011220  6F19               	movwf	strcmp@s2& (0+255),b
 15957  011222  0EFB               	movlw	high STR_136
 15958  011224  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 15959  011226  EC05  F0C6         	call	_strcmp	;wreg free
 15960  01122A  0101               	movlb	1	; () banked
 15961  01122C  5117               	movf	?_strcmp& (0+255),w,b
 15962  01122E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 15963  011230  A4D8               	btfss	status,2,c
 15964  011232  D011               	goto	l1404
 15965                           
 15966                           ; BSR set to: 1
 15967                           ;ring_buffer_LUT.c: 642: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 15968  011234  0E00               	movlw	0
 15969  011236  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 15970  011238  0E00               	movlw	0
 15971  01123A  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 15972  01123C  0E03               	movlw	3
 15973  01123E  ECD7  F0A1         	call	_terminal_textAttributes
 15974                           
 15975                           ;ring_buffer_LUT.c: 643: printf("List of supported Device Control Commands:\n\r"
 15976                           ;ring_buffer_LUT.c: 645: "   Reset: Clears the terminal and resets the micro\n\r"
 15977                           ;ring_buffer_LUT.c: 646: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 15978                           ;ring_buffer_LUT.c: 647: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 15979                           ;ring_buffer_LUT.c: 648: "   *IDN?: Returns device identification string\n\r"
 15980                           ;ring_buffer_LUT.c: 649: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 15981  011242  0EED               	movlw	low STR_137
 15982  011244  0101               	movlb	1	; () banked
 15983  011246  6F82               	movwf	printf@f& (0+255),b
 15984  011248  0EE3               	movlw	high STR_137
 15985  01124A  6F83               	movwf	(printf@f+1)& (0+255),b
 15986  01124C  EC0F  F08A         	call	_printf	;wreg free
 15987                           
 15988                           ;ring_buffer_LUT.c: 660: terminal_textAttributesReset();
 15989  011250  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 15990                           
 15991                           ;ring_buffer_LUT.c: 662: }
 15992  011254  0012               	return	
 15993  011256                     l1404:
 15994                           
 15995                           ;ring_buffer_LUT.c: 665: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 15996  011256  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 15997  01125A  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 15998  01125E  0E2A               	movlw	low STR_138
 15999  011260  0101               	movlb	1	; () banked
 16000  011262  6F19               	movwf	strcmp@s2& (0+255),b
 16001  011264  0EFB               	movlw	high STR_138
 16002  011266  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16003  011268  EC05  F0C6         	call	_strcmp	;wreg free
 16004  01126C  0101               	movlb	1	; () banked
 16005  01126E  5117               	movf	?_strcmp& (0+255),w,b
 16006  011270  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16007  011272  A4D8               	btfss	status,2,c
 16008  011274  D011               	goto	l1406
 16009                           
 16010                           ; BSR set to: 1
 16011                           ;ring_buffer_LUT.c: 667: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16012  011276  0E00               	movlw	0
 16013  011278  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16014  01127A  0E00               	movlw	0
 16015  01127C  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16016  01127E  0E03               	movlw	3
 16017  011280  ECD7  F0A1         	call	_terminal_textAttributes
 16018                           
 16019                           ;ring_buffer_LUT.c: 668: printf("List of supported Device Measurement Commands:\n\r"
 16020                           ;ring_buffer_LUT.c: 670: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 16021                           ;ring_buffer_LUT.c: 671: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 16022                           ;ring_buffer_LUT.c: 672: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 16023                           ;ring_buffer_LUT.c: 673: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 16024                           ;ring_buffer_LUT.c: 674: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 16025  011284  0E87               	movlw	low STR_139
 16026  011286  0101               	movlb	1	; () banked
 16027  011288  6F82               	movwf	printf@f& (0+255),b
 16028  01128A  0EE7               	movlw	high STR_139
 16029  01128C  6F83               	movwf	(printf@f+1)& (0+255),b
 16030  01128E  EC0F  F08A         	call	_printf	;wreg free
 16031                           
 16032                           ;ring_buffer_LUT.c: 681: terminal_textAttributesReset();
 16033  011292  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 16034                           
 16035                           ;ring_buffer_LUT.c: 683: }
 16036  011296  0012               	return	
 16037  011298                     l1406:
 16038                           
 16039                           ;ring_buffer_LUT.c: 686: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 16040  011298  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16041  01129C  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16042  0112A0  0E08               	movlw	low STR_140
 16043  0112A2  0101               	movlb	1	; () banked
 16044  0112A4  6F19               	movwf	strcmp@s2& (0+255),b
 16045  0112A6  0EFB               	movlw	high STR_140
 16046  0112A8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16047  0112AA  EC05  F0C6         	call	_strcmp	;wreg free
 16048  0112AE  0101               	movlb	1	; () banked
 16049  0112B0  5117               	movf	?_strcmp& (0+255),w,b
 16050  0112B2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16051  0112B4  A4D8               	btfss	status,2,c
 16052  0112B6  D011               	goto	l1408
 16053                           
 16054                           ; BSR set to: 1
 16055                           ;ring_buffer_LUT.c: 688: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16056  0112B8  0E00               	movlw	0
 16057  0112BA  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16058  0112BC  0E00               	movlw	0
 16059  0112BE  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16060  0112C0  0E03               	movlw	3
 16061  0112C2  ECD7  F0A1         	call	_terminal_textAttributes
 16062                           
 16063                           ;ring_buffer_LUT.c: 689: printf("List of supported Primary Measurement Commands:\n\r"
 16064                           ;ring_buffer_LUT.c: 691: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 16065                           ;ring_buffer_LUT.c: 692: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 16066                           ;ring_buffer_LUT.c: 693: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 16067                           ;ring_buffer_LUT.c: 694: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 16068  0112C6  0E57               	movlw	low STR_141
 16069  0112C8  0101               	movlb	1	; () banked
 16070  0112CA  6F82               	movwf	printf@f& (0+255),b
 16071  0112CC  0EEA               	movlw	high STR_141
 16072  0112CE  6F83               	movwf	(printf@f+1)& (0+255),b
 16073  0112D0  EC0F  F08A         	call	_printf	;wreg free
 16074                           
 16075                           ;ring_buffer_LUT.c: 701: terminal_textAttributesReset();
 16076  0112D4  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 16077                           
 16078                           ;ring_buffer_LUT.c: 703: }
 16079  0112D8  0012               	return	
 16080  0112DA                     l1408:
 16081                           
 16082                           ;ring_buffer_LUT.c: 706: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 16083  0112DA  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16084  0112DE  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16085  0112E2  0EE2               	movlw	low STR_142
 16086  0112E4  0101               	movlb	1	; () banked
 16087  0112E6  6F19               	movwf	strcmp@s2& (0+255),b
 16088  0112E8  0EFB               	movlw	high STR_142
 16089  0112EA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16090  0112EC  EC05  F0C6         	call	_strcmp	;wreg free
 16091  0112F0  0101               	movlb	1	; () banked
 16092  0112F2  5117               	movf	?_strcmp& (0+255),w,b
 16093  0112F4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16094  0112F6  A4D8               	btfss	status,2,c
 16095  0112F8  D011               	goto	l1410
 16096                           
 16097                           ; BSR set to: 1
 16098                           ;ring_buffer_LUT.c: 708: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16099  0112FA  0E00               	movlw	0
 16100  0112FC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16101  0112FE  0E00               	movlw	0
 16102  011300  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16103  011302  0E03               	movlw	3
 16104  011304  ECD7  F0A1         	call	_terminal_textAttributes
 16105                           
 16106                           ;ring_buffer_LUT.c: 709: printf("List of supported Output Control Commands:\n\r"
 16107                           ;ring_buffer_LUT.c: 711: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 16108                           ;ring_buffer_LUT.c: 712: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 16109                           ;ring_buffer_LUT.c: 713: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 16110                           ;ring_buffer_LUT.c: 714: "   Disable Load: Disables the output TRIAC completely\n\r"
 16111                           ;ring_buffer_LUT.c: 715: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 16112  011308  0E07               	movlw	low STR_143
 16113  01130A  0101               	movlb	1	; () banked
 16114  01130C  6F82               	movwf	printf@f& (0+255),b
 16115  01130E  0EED               	movlw	high STR_143
 16116  011310  6F83               	movwf	(printf@f+1)& (0+255),b
 16117  011312  EC0F  F08A         	call	_printf	;wreg free
 16118                           
 16119                           ;ring_buffer_LUT.c: 720: terminal_textAttributesReset();
 16120  011316  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 16121                           
 16122                           ;ring_buffer_LUT.c: 722: }
 16123  01131A  0012               	return	
 16124  01131C                     l1410:
 16125                           
 16126                           ;ring_buffer_LUT.c: 725: else if((0 == strcmp(line, "Help All"))) {
 16127  01131C  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16128  011320  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16129  011324  0E7C               	movlw	low STR_144
 16130  011326  0101               	movlb	1	; () banked
 16131  011328  6F19               	movwf	strcmp@s2& (0+255),b
 16132  01132A  0EFF               	movlw	high STR_144
 16133  01132C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16134  01132E  EC05  F0C6         	call	_strcmp	;wreg free
 16135  011332  0101               	movlb	1	; () banked
 16136  011334  5117               	movf	?_strcmp& (0+255),w,b
 16137  011336  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16138  011338  A4D8               	btfss	status,2,c
 16139  01133A  D011               	goto	l1412
 16140                           
 16141                           ; BSR set to: 1
 16142                           ;ring_buffer_LUT.c: 727: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16143  01133C  0E00               	movlw	0
 16144  01133E  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16145  011340  0E00               	movlw	0
 16146  011342  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16147  011344  0E03               	movlw	3
 16148  011346  ECD7  F0A1         	call	_terminal_textAttributes
 16149                           
 16150                           ;ring_buffer_LUT.c: 728: printf("List of all supported commands:\n\r"
 16151                           ;ring_buffer_LUT.c: 730: "Device Control Commands: Commands to view and control low leve
      +                          l system functionality\n\r"
 16152                           ;ring_buffer_LUT.c: 731: "   Reset: Clears the terminal and resets the micro\n\r"
 16153                           ;ring_buffer_LUT.c: 732: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 16154                           ;ring_buffer_LUT.c: 733: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 16155                           ;ring_buffer_LUT.c: 734: "   *IDN?: Returns device identification string\n\r"
 16156  01134A  0E4F               	movlw	low STR_145
 16157  01134C  0101               	movlb	1	; () banked
 16158  01134E  6F82               	movwf	printf@f& (0+255),b
 16159  011350  0ED8               	movlw	high STR_145
 16160  011352  6F83               	movwf	(printf@f+1)& (0+255),b
 16161  011354  EC0F  F08A         	call	_printf	;wreg free
 16162                           
 16163                           ;ring_buffer_LUT.c: 777: terminal_textAttributesReset();
 16164  011358  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 16165                           
 16166                           ;ring_buffer_LUT.c: 779: }
 16167  01135C  0012               	return	
 16168  01135E                     l1412:
 16169                           
 16170                           ;ring_buffer_LUT.c: 783: else if((0 == strcmp(line, "Help"))) {
 16171  01135E  C1B4  F117         	movff	ringBufferLUT@line,strcmp@s1
 16172  011362  C1B5  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16173  011366  0EAA               	movlw	low STR_146
 16174  011368  0101               	movlb	1	; () banked
 16175  01136A  6F19               	movwf	strcmp@s2& (0+255),b
 16176  01136C  0EFF               	movlw	high STR_146
 16177  01136E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
 16178  011370  EC05  F0C6         	call	_strcmp	;wreg free
 16179  011374  0101               	movlb	1	; () banked
 16180  011376  5117               	movf	?_strcmp& (0+255),w,b
 16181  011378  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
 16182  01137A  A4D8               	btfss	status,2,c
 16183  01137C  0012               	return	
 16184                           
 16185                           ; BSR set to: 1
 16186                           ;ring_buffer_LUT.c: 785: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 16187  01137E  0E00               	movlw	0
 16188  011380  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16189  011382  0E00               	movlw	0
 16190  011384  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16191  011386  0E03               	movlw	3
 16192  011388  ECD7  F0A1         	call	_terminal_textAttributes
 16193                           
 16194                           ;ring_buffer_LUT.c: 786: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 16195                           ;ring_buffer_LUT.c: 787: "Try 'Help <command set>'\n\r\n\r"
 16196                           ;ring_buffer_LUT.c: 789: "Supported Command Sets:\n\r"
 16197                           ;ring_buffer_LUT.c: 790: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 16198                           ;ring_buffer_LUT.c: 791: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 16199                           ;ring_buffer_LUT.c: 792: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 16200  01138C  0EF3               	movlw	low STR_147
 16201  01138E  0101               	movlb	1	; () banked
 16202  011390  6F82               	movwf	printf@f& (0+255),b
 16203  011392  0EEE               	movlw	high STR_147
 16204  011394  6F83               	movwf	(printf@f+1)& (0+255),b
 16205  011396  EC0F  F08A         	call	_printf	;wreg free
 16206                           
 16207                           ;ring_buffer_LUT.c: 799: terminal_printNewline();
 16208  01139A  ECE9  F0CA         	call	_terminal_printNewline	;wreg free
 16209                           
 16210                           ;ring_buffer_LUT.c: 800: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 16211  01139E  0EC4               	movlw	low STR_148
 16212  0113A0  0101               	movlb	1	; () banked
 16213  0113A2  6F82               	movwf	printf@f& (0+255),b
 16214  0113A4  0EF5               	movlw	high STR_148
 16215  0113A6  6F83               	movwf	(printf@f+1)& (0+255),b
 16216  0113A8  EC0F  F08A         	call	_printf	;wreg free
 16217                           
 16218                           ;ring_buffer_LUT.c: 802: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16219  0113AC  0E00               	movlw	0
 16220  0113AE  0101               	movlb	1	; () banked
 16221  0113B0  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16222  0113B2  0E00               	movlw	0
 16223  0113B4  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16224  0113B6  0E02               	movlw	2
 16225  0113B8  ECD7  F0A1         	call	_terminal_textAttributes
 16226                           
 16227                           ;ring_buffer_LUT.c: 803: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 16228  0113BC  0E9F               	movlw	low STR_149
 16229  0113BE  0101               	movlb	1	; () banked
 16230  0113C0  6F82               	movwf	printf@f& (0+255),b
 16231  0113C2  0EF4               	movlw	high STR_149
 16232  0113C4  6F83               	movwf	(printf@f+1)& (0+255),b
 16233  0113C6  EC0F  F08A         	call	_printf	;wreg free
 16234                           
 16235                           ;ring_buffer_LUT.c: 804: terminal_textAttributes(CYAN, BLACK, NORMAL);
 16236  0113CA  0E00               	movlw	0
 16237  0113CC  0101               	movlb	1	; () banked
 16238  0113CE  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16239  0113D0  0E00               	movlw	0
 16240  0113D2  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16241  0113D4  0E06               	movlw	6
 16242  0113D6  ECD7  F0A1         	call	_terminal_textAttributes
 16243                           
 16244                           ;ring_buffer_LUT.c: 805: printf("Measurement responses appear in cyan\n\r");
 16245  0113DA  0EE6               	movlw	low STR_150
 16246  0113DC  0101               	movlb	1	; () banked
 16247  0113DE  6F82               	movwf	printf@f& (0+255),b
 16248  0113E0  0EF9               	movlw	high STR_150
 16249  0113E2  6F83               	movwf	(printf@f+1)& (0+255),b
 16250  0113E4  EC0F  F08A         	call	_printf	;wreg free
 16251                           
 16252                           ;ring_buffer_LUT.c: 806: terminal_textAttributes(RED, BLACK, NORMAL);
 16253  0113E8  0E00               	movlw	0
 16254  0113EA  0101               	movlb	1	; () banked
 16255  0113EC  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16256  0113EE  0E00               	movlw	0
 16257  0113F0  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16258  0113F2  0E01               	movlw	1
 16259  0113F4  ECD7  F0A1         	call	_terminal_textAttributes
 16260                           
 16261                           ;ring_buffer_LUT.c: 807: printf("Errors and negative responses appear in red\n\r");
 16262  0113F8  0E34               	movlw	low STR_151
 16263  0113FA  0101               	movlb	1	; () banked
 16264  0113FC  6F82               	movwf	printf@f& (0+255),b
 16265  0113FE  0EF8               	movlw	high STR_151
 16266  011400  6F83               	movwf	(printf@f+1)& (0+255),b
 16267  011402  EC0F  F08A         	call	_printf	;wreg free
 16268                           
 16269                           ;ring_buffer_LUT.c: 808: terminal_textAttributesReset();
 16270  011406  ECCF  F0CA         	call	_terminal_textAttributesReset	;wreg free
 16271                           
 16272                           ;ring_buffer_LUT.c: 809: printf("User input appears in white\n\r");
 16273  01140A  0E8A               	movlw	low STR_152
 16274  01140C  0101               	movlb	1	; () banked
 16275  01140E  6F82               	movwf	printf@f& (0+255),b
 16276  011410  0EFB               	movlw	high STR_152
 16277  011412  6F83               	movwf	(printf@f+1)& (0+255),b
 16278  011414  EC0F  F08A         	call	_printf	;wreg free
 16279                           
 16280                           ;ring_buffer_LUT.c: 812: terminal_printNewline();
 16281  011418  ECE9  F0CA         	call	_terminal_printNewline	;wreg free
 16282  01141C  0012               	return	
 16283  01141E                     __end_of_ringBufferLUT:
 16284                           	opt stack 0
 16285                           tblptru	equ	0xFF8
 16286                           tblptrh	equ	0xFF7
 16287                           tblptrl	equ	0xFF6
 16288                           tablat	equ	0xFF5
 16289                           intcon	equ	0xFF2
 16290                           postinc0	equ	0xFEE
 16291                           wreg	equ	0xFE8
 16292                           indf1	equ	0xFE7
 16293                           postdec1	equ	0xFE5
 16294                           fsr1h	equ	0xFE2
 16295                           fsr1l	equ	0xFE1
 16296                           indf2	equ	0xFDF
 16297                           postinc2	equ	0xFDE
 16298                           fsr2h	equ	0xFDA
 16299                           fsr2l	equ	0xFD9
 16300                           status	equ	0xFD8
 16301                           
 16302 ;; *************** function _terminal_textAttributesReset *****************
 16303 ;; Defined at:
 16304 ;;		line 223 in file "ring_buffer_interface.c"
 16305 ;; Parameters:    Size  Location     Type
 16306 ;;		None
 16307 ;; Auto vars:     Size  Location     Type
 16308 ;;		None
 16309 ;; Return value:  Size  Location     Type
 16310 ;;                  1    wreg      void 
 16311 ;; Registers used:
 16312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16313 ;; Tracked objects:
 16314 ;;		On entry : 0/0
 16315 ;;		On exit  : 0/0
 16316 ;;		Unchanged: 0/0
 16317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16322 ;;Total ram usage:        0 bytes
 16323 ;; Hardware stack levels used:    1
 16324 ;; Hardware stack levels required when called:   17
 16325 ;; This function calls:
 16326 ;;		_terminal_textAttributes
 16327 ;; This function is called by:
 16328 ;;		_main
 16329 ;;		_ringBufferLUT
 16330 ;; This function uses a non-reentrant model
 16331 ;;
 16332                           
 16333                           	psect	text4
 16334  01959E                     __ptext4:
 16335                           	opt stack 0
 16336  01959E                     _terminal_textAttributesReset:
 16337                           	opt stack 13
 16338                           
 16339                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 16340                           
 16341                           ;incstack = 0
 16342  01959E  0E00               	movlw	0
 16343  0195A0  0101               	movlb	1	; () banked
 16344  0195A2  6FB2               	movwf	terminal_textAttributes@background_color& (0+255),b
 16345  0195A4  0E00               	movlw	0
 16346  0195A6  6FB3               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16347  0195A8  0E07               	movlw	7
 16348  0195AA  ECD7  F0A1         	call	_terminal_textAttributes
 16349  0195AE  0012               	return		;funcret
 16350  0195B0                     __end_of_terminal_textAttributesReset:
 16351                           	opt stack 0
 16352                           tblptru	equ	0xFF8
 16353                           tblptrh	equ	0xFF7
 16354                           tblptrl	equ	0xFF6
 16355                           tablat	equ	0xFF5
 16356                           intcon	equ	0xFF2
 16357                           postinc0	equ	0xFEE
 16358                           wreg	equ	0xFE8
 16359                           indf1	equ	0xFE7
 16360                           postdec1	equ	0xFE5
 16361                           fsr1h	equ	0xFE2
 16362                           fsr1l	equ	0xFE1
 16363                           indf2	equ	0xFDF
 16364                           postinc2	equ	0xFDE
 16365                           fsr2h	equ	0xFDA
 16366                           fsr2l	equ	0xFD9
 16367                           status	equ	0xFD8
 16368                           
 16369 ;; *************** function _terminal_textAttributes *****************
 16370 ;; Defined at:
 16371 ;;		line 115 in file "ring_buffer_interface.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;  foreground_c    1    wreg     enum E17919
 16374 ;;  background_c    1  178[BANK1 ] enum E17919
 16375 ;;  input_attrib    1  179[BANK1 ] enum E17911
 16376 ;; Auto vars:     Size  Location     Type
 16377 ;;  foreground_c    1    0[BANK2 ] enum E17919
 16378 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  1    wreg      void 
 16381 ;; Registers used:
 16382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/0
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16388 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16389 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
 16390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16391 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
 16392 ;;Total ram usage:       18 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; Hardware stack levels required when called:   16
 16395 ;; This function calls:
 16396 ;;		_printf
 16397 ;;		_strcat
 16398 ;;		_strncpy
 16399 ;; This function is called by:
 16400 ;;		_terminal_textAttributesReset
 16401 ;;		_ringBufferLUT
 16402 ;; This function uses a non-reentrant model
 16403 ;;
 16404                           
 16405                           	psect	text5
 16406  0143AE                     __ptext5:
 16407                           	opt stack 0
 16408  0143AE                     _terminal_textAttributes:
 16409                           	opt stack 13
 16410                           
 16411                           ;incstack = 0
 16412                           ;terminal_textAttributes@foreground_color stored from wreg
 16413  0143AE  0102               	movlb	2	; () banked
 16414  0143B0  6F87               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 16415                           
 16416                           ;ring_buffer_interface.c: 119: char output_buff[15];
 16417                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 16418  0143B2  0E88               	movlw	low terminal_textAttributes@output_buff
 16419  0143B4  0101               	movlb	1	; () banked
 16420  0143B6  6F17               	movwf	strncpy@to& (0+255),b
 16421  0143B8  0E02               	movlw	high terminal_textAttributes@output_buff
 16422  0143BA  6F18               	movwf	(strncpy@to+1)& (0+255),b
 16423  0143BC  0EF5               	movlw	low STR_11
 16424  0143BE  6F19               	movwf	strncpy@from& (0+255),b
 16425  0143C0  0EFF               	movlw	high STR_11
 16426  0143C2  6F1A               	movwf	(strncpy@from+1)& (0+255),b
 16427  0143C4  0E00               	movlw	0
 16428  0143C6  6F1C               	movwf	(strncpy@size+1)& (0+255),b
 16429  0143C8  0E0F               	movlw	15
 16430  0143CA  6F1B               	movwf	strncpy@size& (0+255),b
 16431  0143CC  EC62  F0C4         	call	_strncpy	;wreg free
 16432                           
 16433                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 16434  0143D0  D054               	goto	l1146
 16435  0143D2                     
 16436                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 16437  0143D2  0E88               	movlw	low terminal_textAttributes@output_buff
 16438  0143D4  0101               	movlb	1	; () banked
 16439  0143D6  6F17               	movwf	strcat@to& (0+255),b
 16440  0143D8  0E02               	movlw	high terminal_textAttributes@output_buff
 16441  0143DA  6F18               	movwf	(strcat@to+1)& (0+255),b
 16442  0143DC  0EC9               	movlw	low (STR_20+1)
 16443  0143DE  6F19               	movwf	strcat@from& (0+255),b
 16444  0143E0  0EFF               	movlw	high (STR_20+1)
 16445  0143E2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16446  0143E4  EC7D  F0C6         	call	_strcat	;wreg free
 16447                           
 16448                           ;ring_buffer_interface.c: 127: break;
 16449  0143E8  D05D               	goto	l1148
 16450  0143EA                     
 16451                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 16452  0143EA  0E88               	movlw	low terminal_textAttributes@output_buff
 16453  0143EC  0101               	movlb	1	; () banked
 16454  0143EE  6F17               	movwf	strcat@to& (0+255),b
 16455  0143F0  0E02               	movlw	high terminal_textAttributes@output_buff
 16456  0143F2  6F18               	movwf	(strcat@to+1)& (0+255),b
 16457  0143F4  0EC4               	movlw	low (STR_67+20)
 16458  0143F6  6F19               	movwf	strcat@from& (0+255),b
 16459  0143F8  0EFC               	movlw	high (STR_67+20)
 16460  0143FA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16461  0143FC  EC7D  F0C6         	call	_strcat	;wreg free
 16462                           
 16463                           ;ring_buffer_interface.c: 130: break;
 16464  014400  D051               	goto	l1148
 16465  014402                     
 16466                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 16467  014402  0E88               	movlw	low terminal_textAttributes@output_buff
 16468  014404  0101               	movlb	1	; () banked
 16469  014406  6F17               	movwf	strcat@to& (0+255),b
 16470  014408  0E02               	movlw	high terminal_textAttributes@output_buff
 16471  01440A  6F18               	movwf	(strcat@to+1)& (0+255),b
 16472  01440C  0EDE               	movlw	low (STR_24+1)
 16473  01440E  6F19               	movwf	strcat@from& (0+255),b
 16474  014410  0EFF               	movlw	high (STR_24+1)
 16475  014412  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16476  014414  EC7D  F0C6         	call	_strcat	;wreg free
 16477                           
 16478                           ;ring_buffer_interface.c: 133: break;
 16479  014418  D045               	goto	l1148
 16480  01441A                     
 16481                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 16482  01441A  0E88               	movlw	low terminal_textAttributes@output_buff
 16483  01441C  0101               	movlb	1	; () banked
 16484  01441E  6F17               	movwf	strcat@to& (0+255),b
 16485  014420  0E02               	movlw	high terminal_textAttributes@output_buff
 16486  014422  6F18               	movwf	(strcat@to+1)& (0+255),b
 16487  014424  0EE4               	movlw	low (STR_25+1)
 16488  014426  6F19               	movwf	strcat@from& (0+255),b
 16489  014428  0EFF               	movlw	high (STR_25+1)
 16490  01442A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16491  01442C  EC7D  F0C6         	call	_strcat	;wreg free
 16492                           
 16493                           ;ring_buffer_interface.c: 136: break;
 16494  014430  D039               	goto	l1148
 16495  014432                     
 16496                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 16497  014432  0E88               	movlw	low terminal_textAttributes@output_buff
 16498  014434  0101               	movlb	1	; () banked
 16499  014436  6F17               	movwf	strcat@to& (0+255),b
 16500  014438  0E02               	movlw	high terminal_textAttributes@output_buff
 16501  01443A  6F18               	movwf	(strcat@to+1)& (0+255),b
 16502  01443C  0EF0               	movlw	low (STR_27+1)
 16503  01443E  6F19               	movwf	strcat@from& (0+255),b
 16504  014440  0EFF               	movlw	high (STR_27+1)
 16505  014442  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16506  014444  EC7D  F0C6         	call	_strcat	;wreg free
 16507                           
 16508                           ;ring_buffer_interface.c: 139: break;
 16509  014448  D02D               	goto	l1148
 16510  01444A                     
 16511                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 16512  01444A  0E88               	movlw	low terminal_textAttributes@output_buff
 16513  01444C  0101               	movlb	1	; () banked
 16514  01444E  6F17               	movwf	strcat@to& (0+255),b
 16515  014450  0E02               	movlw	high terminal_textAttributes@output_buff
 16516  014452  6F18               	movwf	(strcat@to+1)& (0+255),b
 16517  014454  0EF8               	movlw	low STR_17
 16518  014456  6F19               	movwf	strcat@from& (0+255),b
 16519  014458  0EFF               	movlw	high STR_17
 16520  01445A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16521  01445C  EC7D  F0C6         	call	_strcat	;wreg free
 16522                           
 16523                           ;ring_buffer_interface.c: 142: break;
 16524  014460  D021               	goto	l1148
 16525  014462                     
 16526                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 16527  014462  0E88               	movlw	low terminal_textAttributes@output_buff
 16528  014464  0101               	movlb	1	; () banked
 16529  014466  6F17               	movwf	strcat@to& (0+255),b
 16530  014468  0E02               	movlw	high terminal_textAttributes@output_buff
 16531  01446A  6F18               	movwf	(strcat@to+1)& (0+255),b
 16532  01446C  0EC9               	movlw	low (STR_20+1)
 16533  01446E  6F19               	movwf	strcat@from& (0+255),b
 16534  014470  0EFF               	movlw	high (STR_20+1)
 16535  014472  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16536  014474  EC7D  F0C6         	call	_strcat	;wreg free
 16537                           
 16538                           ;ring_buffer_interface.c: 147: }
 16539                           
 16540                           ;ring_buffer_interface.c: 146: break;
 16541  014478  D015               	goto	l1148
 16542  01447A                     l1146:
 16543  01447A  0101               	movlb	1	; () banked
 16544  01447C  51B3               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 16545                           
 16546                           ; Switch size 1, requested type "space"
 16547                           ; Number of cases is 6, Range of values is 0 to 5
 16548                           ; switch strategies available:
 16549                           ; Name         Instructions Cycles
 16550                           ; simple_byte           19    10 (average)
 16551                           ;	Chosen strategy is simple_byte
 16552  01447E  0A00               	xorlw	0	; case 0
 16553  014480  B4D8               	btfsc	status,2,c
 16554  014482  D7A7               	goto	l1147
 16555  014484  0A01               	xorlw	1	; case 1
 16556  014486  B4D8               	btfsc	status,2,c
 16557  014488  D7B0               	goto	l1149
 16558  01448A  0A03               	xorlw	3	; case 2
 16559  01448C  B4D8               	btfsc	status,2,c
 16560  01448E  D7B9               	goto	l1150
 16561  014490  0A01               	xorlw	1	; case 3
 16562  014492  B4D8               	btfsc	status,2,c
 16563  014494  D7C2               	goto	l1151
 16564  014496  0A07               	xorlw	7	; case 4
 16565  014498  B4D8               	btfsc	status,2,c
 16566  01449A  D7CB               	goto	l1152
 16567  01449C  0A01               	xorlw	1	; case 5
 16568  01449E  B4D8               	btfsc	status,2,c
 16569  0144A0  D7D4               	goto	l1153
 16570  0144A2  D7DF               	goto	l1154
 16571  0144A4                     l1148:
 16572                           
 16573                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 16574                           
 16575                           ; BSR set to: 1
 16576  0144A4  0E88               	movlw	low terminal_textAttributes@output_buff
 16577  0144A6  0101               	movlb	1	; () banked
 16578  0144A8  6F17               	movwf	strcat@to& (0+255),b
 16579  0144AA  0E02               	movlw	high terminal_textAttributes@output_buff
 16580  0144AC  6F18               	movwf	(strcat@to+1)& (0+255),b
 16581  0144AE  0EFA               	movlw	low STR_19
 16582  0144B0  6F19               	movwf	strcat@from& (0+255),b
 16583  0144B2  0EFF               	movlw	high STR_19
 16584  0144B4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16585  0144B6  EC7D  F0C6         	call	_strcat	;wreg free
 16586                           
 16587                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 16588  0144BA  D06C               	goto	l1155
 16589  0144BC                     
 16590                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 16591  0144BC  0E88               	movlw	low terminal_textAttributes@output_buff
 16592  0144BE  0101               	movlb	1	; () banked
 16593  0144C0  6F17               	movwf	strcat@to& (0+255),b
 16594  0144C2  0E02               	movlw	high terminal_textAttributes@output_buff
 16595  0144C4  6F18               	movwf	(strcat@to+1)& (0+255),b
 16596  0144C6  0EC8               	movlw	low STR_20
 16597  0144C8  6F19               	movwf	strcat@from& (0+255),b
 16598  0144CA  0EFF               	movlw	high STR_20
 16599  0144CC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16600  0144CE  EC7D  F0C6         	call	_strcat	;wreg free
 16601                           
 16602                           ;ring_buffer_interface.c: 155: break;
 16603  0144D2  D07B               	goto	l1157
 16604  0144D4                     
 16605                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 16606  0144D4  0E88               	movlw	low terminal_textAttributes@output_buff
 16607  0144D6  0101               	movlb	1	; () banked
 16608  0144D8  6F17               	movwf	strcat@to& (0+255),b
 16609  0144DA  0E02               	movlw	high terminal_textAttributes@output_buff
 16610  0144DC  6F18               	movwf	(strcat@to+1)& (0+255),b
 16611  0144DE  0ECB               	movlw	low STR_21
 16612  0144E0  6F19               	movwf	strcat@from& (0+255),b
 16613  0144E2  0EFF               	movlw	high STR_21
 16614  0144E4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16615  0144E6  EC7D  F0C6         	call	_strcat	;wreg free
 16616                           
 16617                           ;ring_buffer_interface.c: 158: break;
 16618  0144EA  D06F               	goto	l1157
 16619  0144EC                     
 16620                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 16621  0144EC  0E88               	movlw	low terminal_textAttributes@output_buff
 16622  0144EE  0101               	movlb	1	; () banked
 16623  0144F0  6F17               	movwf	strcat@to& (0+255),b
 16624  0144F2  0E02               	movlw	high terminal_textAttributes@output_buff
 16625  0144F4  6F18               	movwf	(strcat@to+1)& (0+255),b
 16626  0144F6  0ED1               	movlw	low STR_22
 16627  0144F8  6F19               	movwf	strcat@from& (0+255),b
 16628  0144FA  0EFF               	movlw	high STR_22
 16629  0144FC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16630  0144FE  EC7D  F0C6         	call	_strcat	;wreg free
 16631                           
 16632                           ;ring_buffer_interface.c: 161: break;
 16633  014502  D063               	goto	l1157
 16634  014504                     
 16635                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 16636  014504  0E88               	movlw	low terminal_textAttributes@output_buff
 16637  014506  0101               	movlb	1	; () banked
 16638  014508  6F17               	movwf	strcat@to& (0+255),b
 16639  01450A  0E02               	movlw	high terminal_textAttributes@output_buff
 16640  01450C  6F18               	movwf	(strcat@to+1)& (0+255),b
 16641  01450E  0ED7               	movlw	low STR_23
 16642  014510  6F19               	movwf	strcat@from& (0+255),b
 16643  014512  0EFF               	movlw	high STR_23
 16644  014514  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16645  014516  EC7D  F0C6         	call	_strcat	;wreg free
 16646                           
 16647                           ;ring_buffer_interface.c: 164: break;
 16648  01451A  D057               	goto	l1157
 16649  01451C                     
 16650                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 16651  01451C  0E88               	movlw	low terminal_textAttributes@output_buff
 16652  01451E  0101               	movlb	1	; () banked
 16653  014520  6F17               	movwf	strcat@to& (0+255),b
 16654  014522  0E02               	movlw	high terminal_textAttributes@output_buff
 16655  014524  6F18               	movwf	(strcat@to+1)& (0+255),b
 16656  014526  0EDD               	movlw	low STR_24
 16657  014528  6F19               	movwf	strcat@from& (0+255),b
 16658  01452A  0EFF               	movlw	high STR_24
 16659  01452C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16660  01452E  EC7D  F0C6         	call	_strcat	;wreg free
 16661                           
 16662                           ;ring_buffer_interface.c: 167: break;
 16663  014532  D04B               	goto	l1157
 16664  014534                     
 16665                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 16666  014534  0E88               	movlw	low terminal_textAttributes@output_buff
 16667  014536  0101               	movlb	1	; () banked
 16668  014538  6F17               	movwf	strcat@to& (0+255),b
 16669  01453A  0E02               	movlw	high terminal_textAttributes@output_buff
 16670  01453C  6F18               	movwf	(strcat@to+1)& (0+255),b
 16671  01453E  0EE3               	movlw	low STR_25
 16672  014540  6F19               	movwf	strcat@from& (0+255),b
 16673  014542  0EFF               	movlw	high STR_25
 16674  014544  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16675  014546  EC7D  F0C6         	call	_strcat	;wreg free
 16676                           
 16677                           ;ring_buffer_interface.c: 170: break;
 16678  01454A  D03F               	goto	l1157
 16679  01454C                     
 16680                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 16681  01454C  0E88               	movlw	low terminal_textAttributes@output_buff
 16682  01454E  0101               	movlb	1	; () banked
 16683  014550  6F17               	movwf	strcat@to& (0+255),b
 16684  014552  0E02               	movlw	high terminal_textAttributes@output_buff
 16685  014554  6F18               	movwf	(strcat@to+1)& (0+255),b
 16686  014556  0EE9               	movlw	low STR_26
 16687  014558  6F19               	movwf	strcat@from& (0+255),b
 16688  01455A  0EFF               	movlw	high STR_26
 16689  01455C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16690  01455E  EC7D  F0C6         	call	_strcat	;wreg free
 16691                           
 16692                           ;ring_buffer_interface.c: 173: break;
 16693  014562  D033               	goto	l1157
 16694  014564                     
 16695                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 16696  014564  0E88               	movlw	low terminal_textAttributes@output_buff
 16697  014566  0101               	movlb	1	; () banked
 16698  014568  6F17               	movwf	strcat@to& (0+255),b
 16699  01456A  0E02               	movlw	high terminal_textAttributes@output_buff
 16700  01456C  6F18               	movwf	(strcat@to+1)& (0+255),b
 16701  01456E  0EEF               	movlw	low STR_27
 16702  014570  6F19               	movwf	strcat@from& (0+255),b
 16703  014572  0EFF               	movlw	high STR_27
 16704  014574  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16705  014576  EC7D  F0C6         	call	_strcat	;wreg free
 16706                           
 16707                           ;ring_buffer_interface.c: 176: break;
 16708  01457A  D027               	goto	l1157
 16709  01457C                     
 16710                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 16711  01457C  0E88               	movlw	low terminal_textAttributes@output_buff
 16712  01457E  0101               	movlb	1	; () banked
 16713  014580  6F17               	movwf	strcat@to& (0+255),b
 16714  014582  0E02               	movlw	high terminal_textAttributes@output_buff
 16715  014584  6F18               	movwf	(strcat@to+1)& (0+255),b
 16716  014586  0EEF               	movlw	low STR_27
 16717  014588  6F19               	movwf	strcat@from& (0+255),b
 16718  01458A  0EFF               	movlw	high STR_27
 16719  01458C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16720  01458E  EC7D  F0C6         	call	_strcat	;wreg free
 16721                           
 16722                           ;ring_buffer_interface.c: 181: }
 16723                           
 16724                           ;ring_buffer_interface.c: 180: break;
 16725  014592  D01B               	goto	l1157
 16726  014594                     l1155:
 16727  014594  0102               	movlb	2	; () banked
 16728  014596  5187               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 16729                           
 16730                           ; Switch size 1, requested type "space"
 16731                           ; Number of cases is 8, Range of values is 0 to 7
 16732                           ; switch strategies available:
 16733                           ; Name         Instructions Cycles
 16734                           ; simple_byte           25    13 (average)
 16735                           ;	Chosen strategy is simple_byte
 16736  014598  0A00               	xorlw	0	; case 0
 16737  01459A  B4D8               	btfsc	status,2,c
 16738  01459C  D78F               	goto	l1156
 16739  01459E  0A01               	xorlw	1	; case 1
 16740  0145A0  B4D8               	btfsc	status,2,c
 16741  0145A2  D798               	goto	l1158
 16742  0145A4  0A03               	xorlw	3	; case 2
 16743  0145A6  B4D8               	btfsc	status,2,c
 16744  0145A8  D7A1               	goto	l1159
 16745  0145AA  0A01               	xorlw	1	; case 3
 16746  0145AC  B4D8               	btfsc	status,2,c
 16747  0145AE  D7AA               	goto	l1160
 16748  0145B0  0A07               	xorlw	7	; case 4
 16749  0145B2  B4D8               	btfsc	status,2,c
 16750  0145B4  D7B3               	goto	l1161
 16751  0145B6  0A01               	xorlw	1	; case 5
 16752  0145B8  B4D8               	btfsc	status,2,c
 16753  0145BA  D7BC               	goto	l1162
 16754  0145BC  0A03               	xorlw	3	; case 6
 16755  0145BE  B4D8               	btfsc	status,2,c
 16756  0145C0  D7C5               	goto	l1163
 16757  0145C2  0A01               	xorlw	1	; case 7
 16758  0145C4  B4D8               	btfsc	status,2,c
 16759  0145C6  D7CE               	goto	l1164
 16760  0145C8  D7D9               	goto	l1165
 16761  0145CA                     l1157:
 16762                           
 16763                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 16764                           
 16765                           ; BSR set to: 2
 16766  0145CA  0E88               	movlw	low terminal_textAttributes@output_buff
 16767  0145CC  0101               	movlb	1	; () banked
 16768  0145CE  6F17               	movwf	strcat@to& (0+255),b
 16769  0145D0  0E02               	movlw	high terminal_textAttributes@output_buff
 16770  0145D2  6F18               	movwf	(strcat@to+1)& (0+255),b
 16771  0145D4  0EFA               	movlw	low STR_19
 16772  0145D6  6F19               	movwf	strcat@from& (0+255),b
 16773  0145D8  0EFF               	movlw	high STR_19
 16774  0145DA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16775  0145DC  EC7D  F0C6         	call	_strcat	;wreg free
 16776                           
 16777                           ;ring_buffer_interface.c: 185: switch (background_color) {
 16778  0145E0  D06C               	goto	l1166
 16779  0145E2                     
 16780                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 16781  0145E2  0E88               	movlw	low terminal_textAttributes@output_buff
 16782  0145E4  0101               	movlb	1	; () banked
 16783  0145E6  6F17               	movwf	strcat@to& (0+255),b
 16784  0145E8  0E02               	movlw	high terminal_textAttributes@output_buff
 16785  0145EA  6F18               	movwf	(strcat@to+1)& (0+255),b
 16786  0145EC  0E38               	movlw	low (STR_153+9)
 16787  0145EE  6F19               	movwf	strcat@from& (0+255),b
 16788  0145F0  0EFF               	movlw	high (STR_153+9)
 16789  0145F2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16790  0145F4  EC7D  F0C6         	call	_strcat	;wreg free
 16791                           
 16792                           ;ring_buffer_interface.c: 189: break;
 16793  0145F8  D07B               	goto	l1168
 16794  0145FA                     
 16795                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 16796  0145FA  0E88               	movlw	low terminal_textAttributes@output_buff
 16797  0145FC  0101               	movlb	1	; () banked
 16798  0145FE  6F17               	movwf	strcat@to& (0+255),b
 16799  014600  0E02               	movlw	high terminal_textAttributes@output_buff
 16800  014602  6F18               	movwf	(strcat@to+1)& (0+255),b
 16801  014604  0ECE               	movlw	low STR_31
 16802  014606  6F19               	movwf	strcat@from& (0+255),b
 16803  014608  0EFF               	movlw	high STR_31
 16804  01460A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16805  01460C  EC7D  F0C6         	call	_strcat	;wreg free
 16806                           
 16807                           ;ring_buffer_interface.c: 192: break;
 16808  014610  D06F               	goto	l1168
 16809  014612                     
 16810                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 16811  014612  0E88               	movlw	low terminal_textAttributes@output_buff
 16812  014614  0101               	movlb	1	; () banked
 16813  014616  6F17               	movwf	strcat@to& (0+255),b
 16814  014618  0E02               	movlw	high terminal_textAttributes@output_buff
 16815  01461A  6F18               	movwf	(strcat@to+1)& (0+255),b
 16816  01461C  0ED4               	movlw	low STR_32
 16817  01461E  6F19               	movwf	strcat@from& (0+255),b
 16818  014620  0EFF               	movlw	high STR_32
 16819  014622  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16820  014624  EC7D  F0C6         	call	_strcat	;wreg free
 16821                           
 16822                           ;ring_buffer_interface.c: 195: break;
 16823  014628  D063               	goto	l1168
 16824  01462A                     
 16825                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 16826  01462A  0E88               	movlw	low terminal_textAttributes@output_buff
 16827  01462C  0101               	movlb	1	; () banked
 16828  01462E  6F17               	movwf	strcat@to& (0+255),b
 16829  014630  0E02               	movlw	high terminal_textAttributes@output_buff
 16830  014632  6F18               	movwf	(strcat@to+1)& (0+255),b
 16831  014634  0EDA               	movlw	low STR_33
 16832  014636  6F19               	movwf	strcat@from& (0+255),b
 16833  014638  0EFF               	movlw	high STR_33
 16834  01463A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16835  01463C  EC7D  F0C6         	call	_strcat	;wreg free
 16836                           
 16837                           ;ring_buffer_interface.c: 198: break;
 16838  014640  D057               	goto	l1168
 16839  014642                     
 16840                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 16841  014642  0E88               	movlw	low terminal_textAttributes@output_buff
 16842  014644  0101               	movlb	1	; () banked
 16843  014646  6F17               	movwf	strcat@to& (0+255),b
 16844  014648  0E02               	movlw	high terminal_textAttributes@output_buff
 16845  01464A  6F18               	movwf	(strcat@to+1)& (0+255),b
 16846  01464C  0EE0               	movlw	low STR_34
 16847  01464E  6F19               	movwf	strcat@from& (0+255),b
 16848  014650  0EFF               	movlw	high STR_34
 16849  014652  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16850  014654  EC7D  F0C6         	call	_strcat	;wreg free
 16851                           
 16852                           ;ring_buffer_interface.c: 201: break;
 16853  014658  D04B               	goto	l1168
 16854  01465A                     
 16855                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 16856  01465A  0E88               	movlw	low terminal_textAttributes@output_buff
 16857  01465C  0101               	movlb	1	; () banked
 16858  01465E  6F17               	movwf	strcat@to& (0+255),b
 16859  014660  0E02               	movlw	high terminal_textAttributes@output_buff
 16860  014662  6F18               	movwf	(strcat@to+1)& (0+255),b
 16861  014664  0EE6               	movlw	low STR_35
 16862  014666  6F19               	movwf	strcat@from& (0+255),b
 16863  014668  0EFF               	movlw	high STR_35
 16864  01466A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16865  01466C  EC7D  F0C6         	call	_strcat	;wreg free
 16866                           
 16867                           ;ring_buffer_interface.c: 204: break;
 16868  014670  D03F               	goto	l1168
 16869  014672                     
 16870                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 16871  014672  0E88               	movlw	low terminal_textAttributes@output_buff
 16872  014674  0101               	movlb	1	; () banked
 16873  014676  6F17               	movwf	strcat@to& (0+255),b
 16874  014678  0E02               	movlw	high terminal_textAttributes@output_buff
 16875  01467A  6F18               	movwf	(strcat@to+1)& (0+255),b
 16876  01467C  0EEC               	movlw	low STR_36
 16877  01467E  6F19               	movwf	strcat@from& (0+255),b
 16878  014680  0EFF               	movlw	high STR_36
 16879  014682  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16880  014684  EC7D  F0C6         	call	_strcat	;wreg free
 16881                           
 16882                           ;ring_buffer_interface.c: 207: break;
 16883  014688  D033               	goto	l1168
 16884  01468A                     
 16885                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 16886  01468A  0E88               	movlw	low terminal_textAttributes@output_buff
 16887  01468C  0101               	movlb	1	; () banked
 16888  01468E  6F17               	movwf	strcat@to& (0+255),b
 16889  014690  0E02               	movlw	high terminal_textAttributes@output_buff
 16890  014692  6F18               	movwf	(strcat@to+1)& (0+255),b
 16891  014694  0EF2               	movlw	low STR_37
 16892  014696  6F19               	movwf	strcat@from& (0+255),b
 16893  014698  0EFF               	movlw	high STR_37
 16894  01469A  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16895  01469C  EC7D  F0C6         	call	_strcat	;wreg free
 16896                           
 16897                           ;ring_buffer_interface.c: 210: break;
 16898  0146A0  D027               	goto	l1168
 16899  0146A2                     
 16900                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 16901  0146A2  0E88               	movlw	low terminal_textAttributes@output_buff
 16902  0146A4  0101               	movlb	1	; () banked
 16903  0146A6  6F17               	movwf	strcat@to& (0+255),b
 16904  0146A8  0E02               	movlw	high terminal_textAttributes@output_buff
 16905  0146AA  6F18               	movwf	(strcat@to+1)& (0+255),b
 16906  0146AC  0EF2               	movlw	low STR_37
 16907  0146AE  6F19               	movwf	strcat@from& (0+255),b
 16908  0146B0  0EFF               	movlw	high STR_37
 16909  0146B2  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16910  0146B4  EC7D  F0C6         	call	_strcat	;wreg free
 16911                           
 16912                           ;ring_buffer_interface.c: 215: }
 16913                           
 16914                           ;ring_buffer_interface.c: 214: break;
 16915  0146B8  D01B               	goto	l1168
 16916  0146BA                     l1166:
 16917  0146BA  0101               	movlb	1	; () banked
 16918  0146BC  51B2               	movf	terminal_textAttributes@background_color& (0+255),w,b
 16919                           
 16920                           ; Switch size 1, requested type "space"
 16921                           ; Number of cases is 8, Range of values is 0 to 7
 16922                           ; switch strategies available:
 16923                           ; Name         Instructions Cycles
 16924                           ; simple_byte           25    13 (average)
 16925                           ;	Chosen strategy is simple_byte
 16926  0146BE  0A00               	xorlw	0	; case 0
 16927  0146C0  B4D8               	btfsc	status,2,c
 16928  0146C2  D78F               	goto	l1167
 16929  0146C4  0A01               	xorlw	1	; case 1
 16930  0146C6  B4D8               	btfsc	status,2,c
 16931  0146C8  D798               	goto	l1169
 16932  0146CA  0A03               	xorlw	3	; case 2
 16933  0146CC  B4D8               	btfsc	status,2,c
 16934  0146CE  D7A1               	goto	l1170
 16935  0146D0  0A01               	xorlw	1	; case 3
 16936  0146D2  B4D8               	btfsc	status,2,c
 16937  0146D4  D7AA               	goto	l1171
 16938  0146D6  0A07               	xorlw	7	; case 4
 16939  0146D8  B4D8               	btfsc	status,2,c
 16940  0146DA  D7B3               	goto	l1172
 16941  0146DC  0A01               	xorlw	1	; case 5
 16942  0146DE  B4D8               	btfsc	status,2,c
 16943  0146E0  D7BC               	goto	l1173
 16944  0146E2  0A03               	xorlw	3	; case 6
 16945  0146E4  B4D8               	btfsc	status,2,c
 16946  0146E6  D7C5               	goto	l1174
 16947  0146E8  0A01               	xorlw	1	; case 7
 16948  0146EA  B4D8               	btfsc	status,2,c
 16949  0146EC  D7CE               	goto	l1175
 16950  0146EE  D7D9               	goto	l1176
 16951  0146F0                     l1168:
 16952                           
 16953                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 16954                           
 16955                           ; BSR set to: 1
 16956  0146F0  0E88               	movlw	low terminal_textAttributes@output_buff
 16957  0146F2  0101               	movlb	1	; () banked
 16958  0146F4  6F17               	movwf	strcat@to& (0+255),b
 16959  0146F6  0E02               	movlw	high terminal_textAttributes@output_buff
 16960  0146F8  6F18               	movwf	(strcat@to+1)& (0+255),b
 16961  0146FA  0EFC               	movlw	low STR_39
 16962  0146FC  6F19               	movwf	strcat@from& (0+255),b
 16963  0146FE  0EFF               	movlw	high STR_39
 16964  014700  6F1A               	movwf	(strcat@from+1)& (0+255),b
 16965  014702  EC7D  F0C6         	call	_strcat	;wreg free
 16966                           
 16967                           ;ring_buffer_interface.c: 219: printf(output_buff);
 16968  014706  0E88               	movlw	low terminal_textAttributes@output_buff
 16969  014708  0101               	movlb	1	; () banked
 16970  01470A  6F82               	movwf	printf@f& (0+255),b
 16971  01470C  0E02               	movlw	high terminal_textAttributes@output_buff
 16972  01470E  6F83               	movwf	(printf@f+1)& (0+255),b
 16973  014710  EC0F  F08A         	call	_printf	;wreg free
 16974  014714  0012               	return		;funcret
 16975  014716                     __end_of_terminal_textAttributes:
 16976                           	opt stack 0
 16977                           tblptru	equ	0xFF8
 16978                           tblptrh	equ	0xFF7
 16979                           tblptrl	equ	0xFF6
 16980                           tablat	equ	0xFF5
 16981                           intcon	equ	0xFF2
 16982                           postinc0	equ	0xFEE
 16983                           wreg	equ	0xFE8
 16984                           indf1	equ	0xFE7
 16985                           postdec1	equ	0xFE5
 16986                           fsr1h	equ	0xFE2
 16987                           fsr1l	equ	0xFE1
 16988                           indf2	equ	0xFDF
 16989                           postinc2	equ	0xFDE
 16990                           fsr2h	equ	0xFDA
 16991                           fsr2l	equ	0xFD9
 16992                           status	equ	0xFD8
 16993                           
 16994 ;; *************** function _strncpy *****************
 16995 ;; Defined at:
 16996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 16997 ;; Parameters:    Size  Location     Type
 16998 ;;  to              2   23[BANK1 ] PTR unsigned char 
 16999 ;;		 -> terminal_textAttributes@output_buff(15), 
 17000 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 17001 ;;		 -> STR_11(3), 
 17002 ;;  size            2   27[BANK1 ] unsigned int 
 17003 ;; Auto vars:     Size  Location     Type
 17004 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 17005 ;;		 -> terminal_textAttributes@output_buff(15), 
 17006 ;; Return value:  Size  Location     Type
 17007 ;;                  2   23[BANK1 ] PTR unsigned char 
 17008 ;; Registers used:
 17009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17010 ;; Tracked objects:
 17011 ;;		On entry : 0/0
 17012 ;;		On exit  : 0/0
 17013 ;;		Unchanged: 0/0
 17014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17015 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17016 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17018 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17019 ;;Total ram usage:        8 bytes
 17020 ;; Hardware stack levels used:    1
 17021 ;; Hardware stack levels required when called:   13
 17022 ;; This function calls:
 17023 ;;		Nothing
 17024 ;; This function is called by:
 17025 ;;		_terminal_textAttributes
 17026 ;; This function uses a non-reentrant model
 17027 ;;
 17028                           
 17029                           	psect	text6
 17030  0188C4                     __ptext6:
 17031                           	opt stack 0
 17032  0188C4                     _strncpy:
 17033                           	opt stack 15
 17034                           
 17035                           ;incstack = 0
 17036  0188C4  C117  F11D         	movff	strncpy@to,strncpy@cp
 17037  0188C8  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 17038  0188CC  D018               	goto	l2405
 17039  0188CE  0101               	movlb	1	; () banked
 17040  0188D0  071B               	decf	strncpy@size& (0+255),f,b
 17041  0188D2  A0D8               	btfss	status,0,c
 17042  0188D4  071C               	decf	(strncpy@size+1)& (0+255),f,b
 17043                           
 17044                           ; BSR set to: 1
 17045  0188D6  C119  FFF6         	movff	strncpy@from,tblptrl
 17046  0188DA  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 17047  0188DE  4B19               	infsnz	strncpy@from& (0+255),f,b
 17048  0188E0  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 17049  0188E2                     	if	0	;tblptru may be non-zero
 17050  0188E2                     	endif
 17051  0188E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17052  0188E2  0E00               	movlw	low (__mediumconst shr (0+16))
 17053  0188E4  6EF8               	movwf	tblptru,c
 17054  0188E6                     	endif
 17055  0188E6  C11D  FFD9         	movff	strncpy@cp,fsr2l
 17056  0188EA  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 17057  0188EE  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 17058  0188F0  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 17059  0188F2  0008               	tblrd		*
 17060  0188F4  CFF5 FFDF          	movff	tablat,indf2
 17061  0188F8  50DF               	movf	indf2,w,c
 17062  0188FA  B4D8               	btfsc	status,2,c
 17063  0188FC  D00E               	goto	l2407
 17064  0188FE                     l2405:
 17065                           
 17066                           ; BSR set to: 1
 17067                           
 17068                           ; BSR set to: 1
 17069  0188FE  0101               	movlb	1	; () banked
 17070  018900  511B               	movf	strncpy@size& (0+255),w,b
 17071  018902  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 17072  018904  B4D8               	btfsc	status,2,c
 17073  018906  D009               	goto	l2407
 17074  018908  D7E2               	goto	l2404
 17075  01890A                     l19462:
 17076                           
 17077                           ; BSR set to: 1
 17078  01890A  C11D  FFD9         	movff	strncpy@cp,fsr2l
 17079  01890E  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 17080  018912  0E00               	movlw	0
 17081  018914  6EDF               	movwf	indf2,c
 17082                           
 17083                           ; BSR set to: 1
 17084  018916  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 17085  018918  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 17086  01891A                     l2407:
 17087                           
 17088                           ; BSR set to: 1
 17089                           
 17090                           ; BSR set to: 1
 17091  01891A  071B               	decf	strncpy@size& (0+255),f,b
 17092  01891C  A0D8               	btfss	status,0,c
 17093  01891E  071C               	decf	(strncpy@size+1)& (0+255),f,b
 17094  018920  291B               	incf	strncpy@size& (0+255),w,b
 17095  018922  E1F3               	bnz	l19462
 17096  018924  291C               	incf	(strncpy@size+1)& (0+255),w,b
 17097  018926  B4D8               	btfsc	status,2,c
 17098  018928  0012               	return	
 17099  01892A  D7EF               	goto	l2408
 17100  01892C                     __end_of_strncpy:
 17101                           	opt stack 0
 17102                           tblptru	equ	0xFF8
 17103                           tblptrh	equ	0xFF7
 17104                           tblptrl	equ	0xFF6
 17105                           tablat	equ	0xFF5
 17106                           intcon	equ	0xFF2
 17107                           postinc0	equ	0xFEE
 17108                           wreg	equ	0xFE8
 17109                           indf1	equ	0xFE7
 17110                           postdec1	equ	0xFE5
 17111                           fsr1h	equ	0xFE2
 17112                           fsr1l	equ	0xFE1
 17113                           indf2	equ	0xFDF
 17114                           postinc2	equ	0xFDE
 17115                           fsr2h	equ	0xFDA
 17116                           fsr2l	equ	0xFD9
 17117                           status	equ	0xFD8
 17118                           
 17119 ;; *************** function _strcat *****************
 17120 ;; Defined at:
 17121 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 17122 ;; Parameters:    Size  Location     Type
 17123 ;;  to              2   23[BANK1 ] PTR unsigned char 
 17124 ;;		 -> terminal_textAttributes@output_buff(15), 
 17125 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 17126 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
 17127 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
 17128 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
 17129 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
 17130 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
 17131 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
 17132 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
 17133 ;; Auto vars:     Size  Location     Type
 17134 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 17135 ;;		 -> terminal_textAttributes@output_buff(15), 
 17136 ;; Return value:  Size  Location     Type
 17137 ;;                  2   23[BANK1 ] PTR unsigned char 
 17138 ;; Registers used:
 17139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17140 ;; Tracked objects:
 17141 ;;		On entry : 0/0
 17142 ;;		On exit  : 0/0
 17143 ;;		Unchanged: 0/0
 17144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17145 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17146 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17148 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17149 ;;Total ram usage:        6 bytes
 17150 ;; Hardware stack levels used:    1
 17151 ;; Hardware stack levels required when called:   13
 17152 ;; This function calls:
 17153 ;;		Nothing
 17154 ;; This function is called by:
 17155 ;;		_terminal_textAttributes
 17156 ;; This function uses a non-reentrant model
 17157 ;;
 17158                           
 17159                           	psect	text7
 17160  018CFA                     __ptext7:
 17161                           	opt stack 0
 17162  018CFA                     _strcat:
 17163                           	opt stack 15
 17164                           
 17165                           ; BSR set to: 1
 17166                           ;incstack = 0
 17167  018CFA  C117  F11B         	movff	strcat@to,strcat@cp
 17168  018CFE  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 17169  018D02  D003               	goto	l2374
 17170  018D04  0101               	movlb	1	; () banked
 17171  018D06  4B1B               	infsnz	strcat@cp& (0+255),f,b
 17172  018D08  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 17173  018D0A                     l2374:
 17174                           
 17175                           ; BSR set to: 1
 17176  018D0A  C11B  FFD9         	movff	strcat@cp,fsr2l
 17177  018D0E  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 17178  018D12  50DF               	movf	indf2,w,c
 17179  018D14  B4D8               	btfsc	status,2,c
 17180  018D16  D006               	goto	l2377
 17181  018D18  D7F5               	goto	l2375
 17182  018D1A  0101               	movlb	1	; () banked
 17183  018D1C  4B1B               	infsnz	strcat@cp& (0+255),f,b
 17184  018D1E  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 17185  018D20  4B19               	infsnz	strcat@from& (0+255),f,b
 17186  018D22  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 17187  018D24                     l2377:
 17188                           
 17189                           ; BSR set to: 1
 17190  018D24  C119  FFF6         	movff	strcat@from,tblptrl
 17191  018D28  C11A  FFF7         	movff	strcat@from+1,tblptrh
 17192  018D2C                     	if	0	;tblptru may be non-zero
 17193  018D2C                     	endif
 17194  018D2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17195  018D2C  0E00               	movlw	low (__mediumconst shr (0+16))
 17196  018D2E  6EF8               	movwf	tblptru,c
 17197  018D30                     	endif
 17198  018D30  C11B  FFD9         	movff	strcat@cp,fsr2l
 17199  018D34  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 17200  018D38  0008               	tblrd		*
 17201  018D3A  CFF5 FFDF          	movff	tablat,indf2
 17202  018D3E  50DF               	movf	indf2,w,c
 17203  018D40  B4D8               	btfsc	status,2,c
 17204  018D42  0012               	return	
 17205  018D44  D7EA               	goto	l2378
 17206  018D46                     __end_of_strcat:
 17207                           	opt stack 0
 17208                           tblptru	equ	0xFF8
 17209                           tblptrh	equ	0xFF7
 17210                           tblptrl	equ	0xFF6
 17211                           tablat	equ	0xFF5
 17212                           intcon	equ	0xFF2
 17213                           postinc0	equ	0xFEE
 17214                           wreg	equ	0xFE8
 17215                           indf1	equ	0xFE7
 17216                           postdec1	equ	0xFE5
 17217                           fsr1h	equ	0xFE2
 17218                           fsr1l	equ	0xFE1
 17219                           indf2	equ	0xFDF
 17220                           postinc2	equ	0xFDE
 17221                           fsr2h	equ	0xFDA
 17222                           fsr2l	equ	0xFD9
 17223                           status	equ	0xFD8
 17224                           
 17225 ;; *************** function _terminal_printNewline *****************
 17226 ;; Defined at:
 17227 ;;		line 230 in file "ring_buffer_interface.c"
 17228 ;; Parameters:    Size  Location     Type
 17229 ;;		None
 17230 ;; Auto vars:     Size  Location     Type
 17231 ;;		None
 17232 ;; Return value:  Size  Location     Type
 17233 ;;                  1    wreg      void 
 17234 ;; Registers used:
 17235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17236 ;; Tracked objects:
 17237 ;;		On entry : 0/0
 17238 ;;		On exit  : 0/0
 17239 ;;		Unchanged: 0/0
 17240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17245 ;;Total ram usage:        0 bytes
 17246 ;; Hardware stack levels used:    1
 17247 ;; Hardware stack levels required when called:   16
 17248 ;; This function calls:
 17249 ;;		_printf
 17250 ;; This function is called by:
 17251 ;;		_ringBufferLUT
 17252 ;; This function uses a non-reentrant model
 17253 ;;
 17254                           
 17255                           	psect	text8
 17256  0195D2                     __ptext8:
 17257                           	opt stack 0
 17258  0195D2                     _terminal_printNewline:
 17259                           	opt stack 12
 17260                           
 17261                           ;ring_buffer_interface.c: 232: printf("\n\r");
 17262                           
 17263                           ;incstack = 0
 17264  0195D2  0E54               	movlw	low (STR_139+717)
 17265  0195D4  0101               	movlb	1	; () banked
 17266  0195D6  6F82               	movwf	printf@f& (0+255),b
 17267  0195D8  0EEA               	movlw	high (STR_139+717)
 17268  0195DA  6F83               	movwf	(printf@f+1)& (0+255),b
 17269  0195DC  EC0F  F08A         	call	_printf	;wreg free
 17270  0195E0  0012               	return		;funcret
 17271  0195E2                     __end_of_terminal_printNewline:
 17272                           	opt stack 0
 17273                           tblptru	equ	0xFF8
 17274                           tblptrh	equ	0xFF7
 17275                           tblptrl	equ	0xFF6
 17276                           tablat	equ	0xFF5
 17277                           intcon	equ	0xFF2
 17278                           postinc0	equ	0xFEE
 17279                           wreg	equ	0xFE8
 17280                           indf1	equ	0xFE7
 17281                           postdec1	equ	0xFE5
 17282                           fsr1h	equ	0xFE2
 17283                           fsr1l	equ	0xFE1
 17284                           indf2	equ	0xFDF
 17285                           postinc2	equ	0xFDE
 17286                           fsr2h	equ	0xFDA
 17287                           fsr2l	equ	0xFD9
 17288                           status	equ	0xFD8
 17289                           
 17290 ;; *************** function _strstr *****************
 17291 ;; Defined at:
 17292 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 17293 ;; Parameters:    Size  Location     Type
 17294 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 17295 ;;		 -> NULL(0), line(64), 
 17296 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 17297 ;;		 -> STR_111(25), 
 17298 ;; Auto vars:     Size  Location     Type
 17299 ;;		None
 17300 ;; Return value:  Size  Location     Type
 17301 ;;                  2   38[BANK1 ] PTR unsigned char 
 17302 ;; Registers used:
 17303 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17304 ;; Tracked objects:
 17305 ;;		On entry : 0/0
 17306 ;;		On exit  : 0/0
 17307 ;;		Unchanged: 0/0
 17308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17309 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17312 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17313 ;;Total ram usage:        4 bytes
 17314 ;; Hardware stack levels used:    1
 17315 ;; Hardware stack levels required when called:   14
 17316 ;; This function calls:
 17317 ;;		_strchr
 17318 ;;		_strlen
 17319 ;;		_strncmp
 17320 ;; This function is called by:
 17321 ;;		_ringBufferLUT
 17322 ;; This function uses a non-reentrant model
 17323 ;;
 17324                           
 17325                           	psect	text9
 17326  018378                     __ptext9:
 17327                           	opt stack 0
 17328  018378                     _strstr:
 17329                           	opt stack 14
 17330                           
 17331                           ;incstack = 0
 17332  018378  D034               	goto	l2419
 17333  01837A  C126  F11D         	movff	strstr@s1,strncmp@s1
 17334  01837E  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 17335  018382  C128  F11F         	movff	strstr@s2,strncmp@s2
 17336  018386  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 17337  01838A  C128  F117         	movff	strstr@s2,strlen@s
 17338  01838E  C129  F118         	movff	strstr@s2+1,strlen@s+1
 17339  018392  EC5D  F0C5         	call	_strlen	;wreg free
 17340  018396  C117  F121         	movff	?_strlen,strncmp@len
 17341  01839A  C118  F122         	movff	?_strlen+1,strncmp@len+1
 17342  01839E  EC74  F0C1         	call	_strncmp	;wreg free
 17343  0183A2  0101               	movlb	1	; () banked
 17344  0183A4  511D               	movf	?_strncmp& (0+255),w,b
 17345  0183A6  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 17346  0183A8  A4D8               	btfss	status,2,c
 17347  0183AA  D005               	goto	l2421
 17348                           
 17349                           ; BSR set to: 1
 17350  0183AC  C126  F126         	movff	strstr@s1,?_strstr
 17351  0183B0  C127  F127         	movff	strstr@s1+1,?_strstr+1
 17352                           
 17353                           ; BSR set to: 1
 17354  0183B4  0012               	return	
 17355  0183B6                     l2421:
 17356                           
 17357                           ; BSR set to: 1
 17358                           
 17359                           ; BSR set to: 1
 17360  0183B6  0E01               	movlw	1
 17361  0183B8  2526               	addwf	strstr@s1& (0+255),w,b
 17362  0183BA  6F17               	movwf	strchr@ptr& (0+255),b
 17363  0183BC  0E00               	movlw	0
 17364  0183BE  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 17365  0183C0  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 17366  0183C2  C128  FFF6         	movff	strstr@s2,tblptrl
 17367  0183C6  C129  FFF7         	movff	strstr@s2+1,tblptrh
 17368  0183CA                     	if	0	;tblptru may be non-zero
 17369  0183CA                     	endif
 17370  0183CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17371  0183CA  0E00               	movlw	low (__mediumconst shr (0+16))
 17372  0183CC  6EF8               	movwf	tblptru,c
 17373  0183CE                     	endif
 17374  0183CE  0008               	tblrd		*
 17375  0183D0  50F5               	movf	tablat,w,c
 17376  0183D2  6F19               	movwf	strchr@chr& (0+255),b
 17377  0183D4  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 17378  0183D6  EC5B  F0C8         	call	_strchr	;wreg free
 17379  0183DA  C117  F126         	movff	?_strchr,strstr@s1
 17380  0183DE  C118  F127         	movff	?_strchr+1,strstr@s1+1
 17381  0183E2                     l2419:
 17382  0183E2  0101               	movlb	1	; () banked
 17383  0183E4  5126               	movf	strstr@s1& (0+255),w,b
 17384  0183E6  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 17385  0183E8  B4D8               	btfsc	status,2,c
 17386  0183EA  D007               	goto	u26130
 17387                           
 17388                           ; BSR set to: 1
 17389  0183EC  C126  FFD9         	movff	strstr@s1,fsr2l
 17390  0183F0  C127  FFDA         	movff	strstr@s1+1,fsr2h
 17391  0183F4  50DF               	movf	indf2,w,c
 17392  0183F6  A4D8               	btfss	status,2,c
 17393  0183F8  D7C0               	goto	l2420
 17394  0183FA                     u26130:
 17395                           
 17396                           ; BSR set to: 1
 17397                           
 17398                           ; BSR set to: 1
 17399                           
 17400                           ; BSR set to: 1
 17401  0183FA  0E00               	movlw	0
 17402  0183FC  6F26               	movwf	?_strstr& (0+255),b
 17403  0183FE  0E00               	movlw	0
 17404  018400  6F27               	movwf	(?_strstr+1)& (0+255),b
 17405  018402  0012               	return	
 17406  018404                     __end_of_strstr:
 17407                           	opt stack 0
 17408                           tblptru	equ	0xFF8
 17409                           tblptrh	equ	0xFF7
 17410                           tblptrl	equ	0xFF6
 17411                           tablat	equ	0xFF5
 17412                           intcon	equ	0xFF2
 17413                           postinc0	equ	0xFEE
 17414                           wreg	equ	0xFE8
 17415                           indf1	equ	0xFE7
 17416                           postdec1	equ	0xFE5
 17417                           fsr1h	equ	0xFE2
 17418                           fsr1l	equ	0xFE1
 17419                           indf2	equ	0xFDF
 17420                           postinc2	equ	0xFDE
 17421                           fsr2h	equ	0xFDA
 17422                           fsr2l	equ	0xFD9
 17423                           status	equ	0xFD8
 17424                           
 17425 ;; *************** function _strncmp *****************
 17426 ;; Defined at:
 17427 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 17428 ;; Parameters:    Size  Location     Type
 17429 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 17430 ;;		 -> NULL(0), line(64), 
 17431 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 17432 ;;		 -> STR_111(25), 
 17433 ;;  len             2   33[BANK1 ] unsigned int 
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;		None
 17436 ;; Return value:  Size  Location     Type
 17437 ;;                  2   29[BANK1 ] int 
 17438 ;; Registers used:
 17439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17440 ;; Tracked objects:
 17441 ;;		On entry : 0/0
 17442 ;;		On exit  : 0/0
 17443 ;;		Unchanged: 0/0
 17444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17445 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17447 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17448 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17449 ;;Total ram usage:        9 bytes
 17450 ;; Hardware stack levels used:    1
 17451 ;; Hardware stack levels required when called:   13
 17452 ;; This function calls:
 17453 ;;		Nothing
 17454 ;; This function is called by:
 17455 ;;		_strstr
 17456 ;; This function uses a non-reentrant model
 17457 ;;
 17458                           
 17459                           	psect	text10
 17460  0182E8                     __ptext10:
 17461                           	opt stack 0
 17462  0182E8                     _strncmp:
 17463                           	opt stack 14
 17464                           
 17465                           ; BSR set to: 1
 17466                           ;incstack = 0
 17467  0182E8  D039               	goto	l2478
 17468  0182EA                     l19602:
 17469  0182EA  C11D  FFD9         	movff	strncmp@s1,fsr2l
 17470  0182EE  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 17471  0182F2  50DF               	movf	indf2,w,c
 17472  0182F4  B4D8               	btfsc	status,2,c
 17473  0182F6  D012               	goto	u25970
 17474  0182F8  C11D  FFD9         	movff	strncmp@s1,fsr2l
 17475  0182FC  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 17476  018300  50DF               	movf	indf2,w,c
 17477  018302  0101               	movlb	1	; () banked
 17478  018304  6F23               	movwf	??_strncmp& (0+255),b
 17479  018306  C11F  FFF6         	movff	strncmp@s2,tblptrl
 17480  01830A  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 17481  01830E                     	if	0	;tblptru may be non-zero
 17482  01830E                     	endif
 17483  01830E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17484  01830E  0E00               	movlw	low (__mediumconst shr (0+16))
 17485  018310  6EF8               	movwf	tblptru,c
 17486  018312                     	endif
 17487  018312  0008               	tblrd		*
 17488  018314  50F5               	movf	tablat,w,c
 17489  018316  1923               	xorwf	??_strncmp& (0+255),w,b
 17490  018318  B4D8               	btfsc	status,2,c
 17491  01831A  D01C               	goto	l2480
 17492  01831C                     u25970:
 17493                           
 17494                           ; BSR set to: 1
 17495  01831C  C11F  FFF6         	movff	strncmp@s2,tblptrl
 17496  018320  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 17497  018324                     	if	0	;tblptru may be non-zero
 17498  018324                     	endif
 17499  018324                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17500  018324  0E00               	movlw	low (__mediumconst shr (0+16))
 17501  018326  6EF8               	movwf	tblptru,c
 17502  018328                     	endif
 17503  018328  0008               	tblrd		*
 17504  01832A  50F5               	movf	tablat,w,c
 17505  01832C  0101               	movlb	1	; () banked
 17506  01832E  6F23               	movwf	??_strncmp& (0+255),b
 17507  018330  6B24               	clrf	(??_strncmp+1)& (0+255),b
 17508  018332  1F23               	comf	??_strncmp& (0+255),f,b
 17509  018334  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 17510  018336  4B23               	infsnz	??_strncmp& (0+255),f,b
 17511  018338  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 17512  01833A  C11D  FFD9         	movff	strncmp@s1,fsr2l
 17513  01833E  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 17514  018342  50DF               	movf	indf2,w,c
 17515  018344  6F25               	movwf	(??_strncmp+2)& (0+255),b
 17516  018346  5125               	movf	(??_strncmp+2)& (0+255),w,b
 17517  018348  2523               	addwf	??_strncmp& (0+255),w,b
 17518  01834A  6F1D               	movwf	?_strncmp& (0+255),b
 17519  01834C  0E00               	movlw	0
 17520  01834E  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 17521  018350  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 17522                           
 17523                           ; BSR set to: 1
 17524  018352  0012               	return	
 17525  018354                     l2480:
 17526                           
 17527                           ; BSR set to: 1
 17528                           
 17529                           ; BSR set to: 1
 17530  018354  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 17531  018356  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 17532  018358  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 17533  01835A  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 17534  01835C                     l2478:
 17535                           
 17536                           ; BSR set to: 1
 17537  01835C  0101               	movlb	1	; () banked
 17538  01835E  0721               	decf	strncmp@len& (0+255),f,b
 17539  018360  A0D8               	btfss	status,0,c
 17540  018362  0722               	decf	(strncmp@len+1)& (0+255),f,b
 17541  018364  2921               	incf	strncmp@len& (0+255),w,b
 17542  018366  E1C1               	bnz	l19602
 17543  018368  2922               	incf	(strncmp@len+1)& (0+255),w,b
 17544  01836A  A4D8               	btfss	status,2,c
 17545  01836C  D7BE               	goto	l2479
 17546                           
 17547                           ; BSR set to: 1
 17548                           
 17549                           ; BSR set to: 1
 17550  01836E  0E00               	movlw	0
 17551  018370  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 17552  018372  0E00               	movlw	0
 17553  018374  6F1D               	movwf	?_strncmp& (0+255),b
 17554  018376  0012               	return	
 17555  018378                     __end_of_strncmp:
 17556                           	opt stack 0
 17557                           tblptru	equ	0xFF8
 17558                           tblptrh	equ	0xFF7
 17559                           tblptrl	equ	0xFF6
 17560                           tablat	equ	0xFF5
 17561                           intcon	equ	0xFF2
 17562                           postinc0	equ	0xFEE
 17563                           wreg	equ	0xFE8
 17564                           indf1	equ	0xFE7
 17565                           postdec1	equ	0xFE5
 17566                           fsr1h	equ	0xFE2
 17567                           fsr1l	equ	0xFE1
 17568                           indf2	equ	0xFDF
 17569                           postinc2	equ	0xFDE
 17570                           fsr2h	equ	0xFDA
 17571                           fsr2l	equ	0xFD9
 17572                           status	equ	0xFD8
 17573                           
 17574 ;; *************** function _strlen *****************
 17575 ;; Defined at:
 17576 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 17577 ;; Parameters:    Size  Location     Type
 17578 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 17579 ;;		 -> STR_111(25), line(64), 
 17580 ;; Auto vars:     Size  Location     Type
 17581 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 17582 ;;		 -> STR_111(25), line(64), 
 17583 ;; Return value:  Size  Location     Type
 17584 ;;                  2   23[BANK1 ] unsigned int 
 17585 ;; Registers used:
 17586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17587 ;; Tracked objects:
 17588 ;;		On entry : 0/0
 17589 ;;		On exit  : 0/0
 17590 ;;		Unchanged: 0/0
 17591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17592 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17593 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17594 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17595 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17596 ;;Total ram usage:        6 bytes
 17597 ;; Hardware stack levels used:    1
 17598 ;; Hardware stack levels required when called:   13
 17599 ;; This function calls:
 17600 ;;		Nothing
 17601 ;; This function is called by:
 17602 ;;		_terminal_ringBufferPull
 17603 ;;		_strstr
 17604 ;; This function uses a non-reentrant model
 17605 ;;
 17606                           
 17607                           	psect	text11
 17608  018ABA                     __ptext11:
 17609                           	opt stack 0
 17610  018ABA                     _strlen:
 17611                           	opt stack 16
 17612                           
 17613                           ; BSR set to: 1
 17614                           ;incstack = 0
 17615  018ABA  C117  F11B         	movff	strlen@s,strlen@cp
 17616  018ABE  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 17617  018AC2  D003               	goto	l2397
 17618  018AC4  0101               	movlb	1	; () banked
 17619  018AC6  4B1B               	infsnz	strlen@cp& (0+255),f,b
 17620  018AC8  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 17621  018ACA                     l2397:
 17622                           
 17623                           ; BSR set to: 1
 17624  018ACA  C11B  FFF6         	movff	strlen@cp,tblptrl
 17625  018ACE  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 17626  018AD2  0E00               	movlw	low (__mediumconst shr (0+16))
 17627  018AD4  6EF8               	movwf	tblptru,c
 17628  018AD6  0E0D               	movlw	(high __ramtop+-1)
 17629  018AD8  64F7               	cpfsgt	tblptrh,c
 17630  018ADA  D003               	bra	u25947
 17631  018ADC  0008               	tblrd		*
 17632  018ADE  50F5               	movf	tablat,w,c
 17633  018AE0  D005               	bra	u25940
 17634  018AE2                     u25947:
 17635  018AE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 17636  018AE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 17637  018AEA  50EF               	movf	indf0,w,c
 17638  018AEC                     u25940:
 17639  018AEC  0900               	iorlw	0
 17640  018AEE  A4D8               	btfss	status,2,c
 17641  018AF0  D7E9               	goto	l2398
 17642  018AF2  C117  F119         	movff	strlen@s,??_strlen
 17643  018AF6  C118  F11A         	movff	strlen@s+1,??_strlen+1
 17644  018AFA  0101               	movlb	1	; () banked
 17645  018AFC  1F19               	comf	??_strlen& (0+255),f,b
 17646  018AFE  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 17647  018B00  4B19               	infsnz	??_strlen& (0+255),f,b
 17648  018B02  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 17649  018B04  511B               	movf	strlen@cp& (0+255),w,b
 17650  018B06  2519               	addwf	??_strlen& (0+255),w,b
 17651  018B08  6F17               	movwf	?_strlen& (0+255),b
 17652  018B0A  511C               	movf	(strlen@cp+1)& (0+255),w,b
 17653  018B0C  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 17654  018B0E  6F18               	movwf	(?_strlen+1)& (0+255),b
 17655  018B10  0012               	return	
 17656  018B12                     __end_of_strlen:
 17657                           	opt stack 0
 17658                           tblptru	equ	0xFF8
 17659                           tblptrh	equ	0xFF7
 17660                           tblptrl	equ	0xFF6
 17661                           tablat	equ	0xFF5
 17662                           intcon	equ	0xFF2
 17663                           indf0	equ	0xFEF
 17664                           postinc0	equ	0xFEE
 17665                           fsr0h	equ	0xFEA
 17666                           fsr0l	equ	0xFE9
 17667                           wreg	equ	0xFE8
 17668                           indf1	equ	0xFE7
 17669                           postdec1	equ	0xFE5
 17670                           fsr1h	equ	0xFE2
 17671                           fsr1l	equ	0xFE1
 17672                           indf2	equ	0xFDF
 17673                           postinc2	equ	0xFDE
 17674                           fsr2h	equ	0xFDA
 17675                           fsr2l	equ	0xFD9
 17676                           status	equ	0xFD8
 17677                           
 17678 ;; *************** function _strchr *****************
 17679 ;; Defined at:
 17680 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 17683 ;;		 -> NULL(0), line(64), 
 17684 ;;  chr             2   25[BANK1 ] int 
 17685 ;; Auto vars:     Size  Location     Type
 17686 ;;		None
 17687 ;; Return value:  Size  Location     Type
 17688 ;;                  2   23[BANK1 ] PTR unsigned char 
 17689 ;; Registers used:
 17690 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17691 ;; Tracked objects:
 17692 ;;		On entry : 0/0
 17693 ;;		On exit  : 0/0
 17694 ;;		Unchanged: 0/0
 17695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17696 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17698 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17699 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17700 ;;Total ram usage:        5 bytes
 17701 ;; Hardware stack levels used:    1
 17702 ;; Hardware stack levels required when called:   13
 17703 ;; This function calls:
 17704 ;;		Nothing
 17705 ;; This function is called by:
 17706 ;;		_strstr
 17707 ;; This function uses a non-reentrant model
 17708 ;;
 17709                           
 17710                           	psect	text12
 17711  0190B6                     __ptext12:
 17712                           	opt stack 0
 17713  0190B6                     _strchr:
 17714                           	opt stack 14
 17715                           
 17716                           ; BSR set to: 1
 17717                           ;incstack = 0
 17718  0190B6  C117  FFD9         	movff	strchr@ptr,fsr2l
 17719  0190BA  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 17720  0190BE  0101               	movlb	1	; () banked
 17721  0190C0  5119               	movf	strchr@chr& (0+255),w,b
 17722  0190C2  18DE               	xorwf	postinc2,w,c
 17723  0190C4  A4D8               	btfss	status,2,c
 17724  0190C6  D005               	goto	l2473
 17725                           
 17726                           ; BSR set to: 1
 17727  0190C8  C117  F117         	movff	strchr@ptr,?_strchr
 17728  0190CC  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 17729                           
 17730                           ; BSR set to: 1
 17731  0190D0  0012               	return	
 17732  0190D2                     l2473:
 17733                           
 17734                           ; BSR set to: 1
 17735                           
 17736                           ; BSR set to: 1
 17737  0190D2  C117  FFD9         	movff	strchr@ptr,fsr2l
 17738  0190D6  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 17739  0190DA  4B17               	infsnz	strchr@ptr& (0+255),f,b
 17740  0190DC  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 17741  0190DE  50DF               	movf	indf2,w,c
 17742  0190E0  A4D8               	btfss	status,2,c
 17743  0190E2  D7E9               	goto	_strchr
 17744                           
 17745                           ; BSR set to: 1
 17746                           
 17747                           ; BSR set to: 1
 17748  0190E4  0E00               	movlw	0
 17749  0190E6  6F17               	movwf	?_strchr& (0+255),b
 17750  0190E8  0E00               	movlw	0
 17751  0190EA  6F18               	movwf	(?_strchr+1)& (0+255),b
 17752  0190EC  0012               	return	
 17753  0190EE                     __end_of_strchr:
 17754                           	opt stack 0
 17755                           tblptru	equ	0xFF8
 17756                           tblptrh	equ	0xFF7
 17757                           tblptrl	equ	0xFF6
 17758                           tablat	equ	0xFF5
 17759                           intcon	equ	0xFF2
 17760                           indf0	equ	0xFEF
 17761                           postinc0	equ	0xFEE
 17762                           fsr0h	equ	0xFEA
 17763                           fsr0l	equ	0xFE9
 17764                           wreg	equ	0xFE8
 17765                           indf1	equ	0xFE7
 17766                           postdec1	equ	0xFE5
 17767                           fsr1h	equ	0xFE2
 17768                           fsr1l	equ	0xFE1
 17769                           indf2	equ	0xFDF
 17770                           postinc2	equ	0xFDE
 17771                           fsr2h	equ	0xFDA
 17772                           fsr2l	equ	0xFD9
 17773                           status	equ	0xFD8
 17774                           
 17775 ;; *************** function _strcpy *****************
 17776 ;; Defined at:
 17777 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;  to              2   23[BANK1 ] PTR unsigned char 
 17780 ;;		 -> ringBufferLUT@channel_name(22), 
 17781 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 17782 ;;		 -> STR_68(10), STR_67(22), STR_66(14), STR_65(14), 
 17783 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 17784 ;; Auto vars:     Size  Location     Type
 17785 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 17786 ;;		 -> ringBufferLUT@channel_name(22), 
 17787 ;; Return value:  Size  Location     Type
 17788 ;;                  2   23[BANK1 ] PTR unsigned char 
 17789 ;; Registers used:
 17790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17791 ;; Tracked objects:
 17792 ;;		On entry : 0/0
 17793 ;;		On exit  : 0/0
 17794 ;;		Unchanged: 0/0
 17795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17796 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17797 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17799 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17800 ;;Total ram usage:        6 bytes
 17801 ;; Hardware stack levels used:    1
 17802 ;; Hardware stack levels required when called:   13
 17803 ;; This function calls:
 17804 ;;		Nothing
 17805 ;; This function is called by:
 17806 ;;		_ringBufferLUT
 17807 ;; This function uses a non-reentrant model
 17808 ;;
 17809                           
 17810                           	psect	text13
 17811  0190EE                     __ptext13:
 17812                           	opt stack 0
 17813  0190EE                     _strcpy:
 17814                           	opt stack 15
 17815                           
 17816                           ; BSR set to: 1
 17817                           ;incstack = 0
 17818  0190EE  C117  F11B         	movff	strcpy@to,strcpy@cp
 17819  0190F2  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 17820  0190F6  D005               	goto	l2391
 17821  0190F8  0101               	movlb	1	; () banked
 17822  0190FA  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 17823  0190FC  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 17824  0190FE  4B19               	infsnz	strcpy@from& (0+255),f,b
 17825  019100  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 17826  019102                     l2391:
 17827                           
 17828                           ; BSR set to: 1
 17829  019102  C119  FFF6         	movff	strcpy@from,tblptrl
 17830  019106  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 17831  01910A                     	if	0	;tblptru may be non-zero
 17832  01910A                     	endif
 17833  01910A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17834  01910A  0E00               	movlw	low (__mediumconst shr (0+16))
 17835  01910C  6EF8               	movwf	tblptru,c
 17836  01910E                     	endif
 17837  01910E  C11B  FFD9         	movff	strcpy@cp,fsr2l
 17838  019112  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 17839  019116  0008               	tblrd		*
 17840  019118  CFF5 FFDF          	movff	tablat,indf2
 17841  01911C  50DF               	movf	indf2,w,c
 17842  01911E  B4D8               	btfsc	status,2,c
 17843  019120  0012               	return	
 17844  019122  D7EA               	goto	l2392
 17845  019124                     __end_of_strcpy:
 17846                           	opt stack 0
 17847                           tblptru	equ	0xFF8
 17848                           tblptrh	equ	0xFF7
 17849                           tblptrl	equ	0xFF6
 17850                           tablat	equ	0xFF5
 17851                           intcon	equ	0xFF2
 17852                           indf0	equ	0xFEF
 17853                           postinc0	equ	0xFEE
 17854                           fsr0h	equ	0xFEA
 17855                           fsr0l	equ	0xFE9
 17856                           wreg	equ	0xFE8
 17857                           indf1	equ	0xFE7
 17858                           postdec1	equ	0xFE5
 17859                           fsr1h	equ	0xFE2
 17860                           fsr1l	equ	0xFE1
 17861                           indf2	equ	0xFDF
 17862                           postinc2	equ	0xFDE
 17863                           fsr2h	equ	0xFDA
 17864                           fsr2l	equ	0xFD9
 17865                           status	equ	0xFD8
 17866                           
 17867 ;; *************** function _strcmp *****************
 17868 ;; Defined at:
 17869 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 17870 ;; Parameters:    Size  Location     Type
 17871 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 17872 ;;		 -> line(64), 
 17873 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 17874 ;;		 -> STR_146(5), STR_144(9), STR_142(29), STR_140(34), 
 17875 ;;		 -> STR_138(33), STR_136(29), STR_134(17), STR_132(17), 
 17876 ;;		 -> STR_130(14), STR_128(19), STR_126(20), STR_124(11), 
 17877 ;;		 -> STR_122(17), STR_120(14), STR_118(16), STR_109(13), 
 17878 ;;		 -> STR_105(17), STR_102(14), STR_100(12), STR_98(16), 
 17879 ;;		 -> STR_96(15), STR_94(16), STR_92(15), STR_90(21), 
 17880 ;;		 -> STR_88(21), STR_86(26), STR_84(14), STR_82(13), 
 17881 ;;		 -> STR_80(18), STR_78(15), STR_76(16), STR_73(17), 
 17882 ;;		 -> STR_71(16), STR_60(11), STR_57(10), STR_55(13), 
 17883 ;;		 -> STR_53(11), STR_50(4), STR_49(6), STR_47(16), 
 17884 ;;		 -> STR_44(6), STR_41(6), 
 17885 ;; Auto vars:     Size  Location     Type
 17886 ;;  r               1   28[BANK1 ] char 
 17887 ;; Return value:  Size  Location     Type
 17888 ;;                  2   23[BANK1 ] int 
 17889 ;; Registers used:
 17890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17891 ;; Tracked objects:
 17892 ;;		On entry : 0/0
 17893 ;;		On exit  : 0/0
 17894 ;;		Unchanged: 0/0
 17895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17896 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17897 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17898 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17899 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17900 ;;Total ram usage:        6 bytes
 17901 ;; Hardware stack levels used:    1
 17902 ;; Hardware stack levels required when called:   13
 17903 ;; This function calls:
 17904 ;;		Nothing
 17905 ;; This function is called by:
 17906 ;;		_ringBufferLUT
 17907 ;; This function uses a non-reentrant model
 17908 ;;
 17909                           
 17910                           	psect	text14
 17911  018C0A                     __ptext14:
 17912                           	opt stack 0
 17913  018C0A                     _strcmp:
 17914                           	opt stack 15
 17915                           
 17916                           ;incstack = 0
 17917  018C0A  D005               	goto	l2383
 17918  018C0C  0101               	movlb	1	; () banked
 17919  018C0E  4B17               	infsnz	strcmp@s1& (0+255),f,b
 17920  018C10  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 17921  018C12  4B19               	infsnz	strcmp@s2& (0+255),f,b
 17922  018C14  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 17923  018C16                     l2383:
 17924                           
 17925                           ; BSR set to: 1
 17926  018C16  C117  FFD9         	movff	strcmp@s1,fsr2l
 17927  018C1A  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 17928  018C1E  50DF               	movf	indf2,w,c
 17929  018C20  0101               	movlb	1	; () banked
 17930  018C22  6F1B               	movwf	??_strcmp& (0+255),b
 17931  018C24  C119  FFF6         	movff	strcmp@s2,tblptrl
 17932  018C28  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 17933  018C2C                     	if	0	;tblptru may be non-zero
 17934  018C2C                     	endif
 17935  018C2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17936  018C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 17937  018C2E  6EF8               	movwf	tblptru,c
 17938  018C30                     	endif
 17939  018C30  0008               	tblrd		*
 17940  018C32  50F5               	movf	tablat,w,c
 17941  018C34  0800               	sublw	0
 17942  018C36  251B               	addwf	??_strcmp& (0+255),w,b
 17943  018C38  6F1C               	movwf	strcmp@r& (0+255),b
 17944  018C3A  511C               	movf	strcmp@r& (0+255),w,b
 17945  018C3C  A4D8               	btfss	status,2,c
 17946  018C3E  D007               	goto	u26060
 17947                           
 17948                           ; BSR set to: 1
 17949  018C40  C117  FFD9         	movff	strcmp@s1,fsr2l
 17950  018C44  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 17951  018C48  50DF               	movf	indf2,w,c
 17952  018C4A  A4D8               	btfss	status,2,c
 17953  018C4C  D7DF               	goto	l2384
 17954  018C4E                     u26060:
 17955                           
 17956                           ; BSR set to: 1
 17957                           
 17958                           ; BSR set to: 1
 17959                           
 17960                           ; BSR set to: 1
 17961  018C4E  511C               	movf	strcmp@r& (0+255),w,b
 17962  018C50  6F17               	movwf	?_strcmp& (0+255),b
 17963  018C52  6B18               	clrf	(?_strcmp+1)& (0+255),b
 17964  018C54  BF17               	btfsc	?_strcmp& (0+255),7,b
 17965  018C56  0718               	decf	(?_strcmp+1)& (0+255),f,b
 17966  018C58  0012               	return	
 17967  018C5A                     __end_of_strcmp:
 17968                           	opt stack 0
 17969                           tblptru	equ	0xFF8
 17970                           tblptrh	equ	0xFF7
 17971                           tblptrl	equ	0xFF6
 17972                           tablat	equ	0xFF5
 17973                           intcon	equ	0xFF2
 17974                           indf0	equ	0xFEF
 17975                           postinc0	equ	0xFEE
 17976                           fsr0h	equ	0xFEA
 17977                           fsr0l	equ	0xFE9
 17978                           wreg	equ	0xFE8
 17979                           indf1	equ	0xFE7
 17980                           postdec1	equ	0xFE5
 17981                           fsr1h	equ	0xFE2
 17982                           fsr1l	equ	0xFE1
 17983                           indf2	equ	0xFDF
 17984                           postinc2	equ	0xFDE
 17985                           fsr2h	equ	0xFDA
 17986                           fsr2l	equ	0xFD9
 17987                           status	equ	0xFD8
 17988                           
 17989 ;; *************** function _getUserID *****************
 17990 ;; Defined at:
 17991 ;;		line 65 in file "device_IDs.c"
 17992 ;; Parameters:    Size  Location     Type
 17993 ;;  inputUserID     1    wreg     unsigned char 
 17994 ;; Auto vars:     Size  Location     Type
 17995 ;;  inputUserID     1   36[BANK1 ] unsigned char 
 17996 ;;  initialOffse    4   37[BANK1 ] unsigned long 
 17997 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 17998 ;; Return value:  Size  Location     Type
 17999 ;;                  2   34[BANK1 ] unsigned int 
 18000 ;; Registers used:
 18001 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18002 ;; Tracked objects:
 18003 ;;		On entry : 0/0
 18004 ;;		On exit  : 0/0
 18005 ;;		Unchanged: 0/0
 18006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18007 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18008 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18010 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18011 ;;Total ram usage:        8 bytes
 18012 ;; Hardware stack levels used:    1
 18013 ;; Hardware stack levels required when called:   15
 18014 ;; This function calls:
 18015 ;;		_FLASH_ReadWord
 18016 ;; This function is called by:
 18017 ;;		_ringBufferLUT
 18018 ;; This function uses a non-reentrant model
 18019 ;;
 18020                           
 18021                           	psect	text15
 18022  018F00                     __ptext15:
 18023                           	opt stack 0
 18024  018F00                     _getUserID:
 18025                           	opt stack 13
 18026                           
 18027                           ; BSR set to: 1
 18028                           ;incstack = 0
 18029                           ;getUserID@inputUserID stored from wreg
 18030  018F00  0101               	movlb	1	; () banked
 18031  018F02  6F24               	movwf	getUserID@inputUserID& (0+255),b
 18032                           
 18033                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 18034  018F04  0E00               	movlw	0
 18035  018F06  0101               	movlb	1	; () banked
 18036  018F08  6F25               	movwf	getUserID@initialOffset& (0+255),b
 18037  018F0A  0E00               	movlw	0
 18038  018F0C  6F26               	movwf	(getUserID@initialOffset+1)& (0+255),b
 18039  018F0E  0E20               	movlw	32
 18040  018F10  6F27               	movwf	(getUserID@initialOffset+2)& (0+255),b
 18041  018F12  0E00               	movlw	0
 18042  018F14  6F28               	movwf	(getUserID@initialOffset+3)& (0+255),b
 18043                           
 18044                           ; BSR set to: 1
 18045                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 18046  018F16  5124               	movf	getUserID@inputUserID& (0+255),w,b
 18047  018F18  0D02               	mullw	2
 18048  018F1A  CFF3 F129          	movff	prodl,getUserID@IDOffset
 18049                           
 18050                           ; BSR set to: 1
 18051                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 18052  018F1E  5129               	movf	getUserID@IDOffset& (0+255),w,b
 18053  018F20  2525               	addwf	getUserID@initialOffset& (0+255),w,b
 18054  018F22  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 18055  018F24  0E00               	movlw	0
 18056  018F26  2126               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 18057  018F28  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 18058  018F2A  0E00               	movlw	0
 18059  018F2C  2127               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 18060  018F2E  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 18061  018F30  0E00               	movlw	0
 18062  018F32  2128               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 18063  018F34  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 18064  018F36  ECA2  F0C7         	call	_FLASH_ReadWord	;wreg free
 18065  018F3A  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 18066  018F3E  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 18067  018F42  0012               	return	
 18068  018F44                     __end_of_getUserID:
 18069                           	opt stack 0
 18070                           tblptru	equ	0xFF8
 18071                           tblptrh	equ	0xFF7
 18072                           tblptrl	equ	0xFF6
 18073                           tablat	equ	0xFF5
 18074                           prodl	equ	0xFF3
 18075                           intcon	equ	0xFF2
 18076                           indf0	equ	0xFEF
 18077                           postinc0	equ	0xFEE
 18078                           fsr0h	equ	0xFEA
 18079                           fsr0l	equ	0xFE9
 18080                           wreg	equ	0xFE8
 18081                           indf1	equ	0xFE7
 18082                           postdec1	equ	0xFE5
 18083                           fsr1h	equ	0xFE2
 18084                           fsr1l	equ	0xFE1
 18085                           indf2	equ	0xFDF
 18086                           postinc2	equ	0xFDE
 18087                           fsr2h	equ	0xFDA
 18088                           fsr2l	equ	0xFD9
 18089                           status	equ	0xFD8
 18090                           
 18091 ;; *************** function _getMinorRevisionID *****************
 18092 ;; Defined at:
 18093 ;;		line 23 in file "device_IDs.c"
 18094 ;; Parameters:    Size  Location     Type
 18095 ;;		None
 18096 ;; Auto vars:     Size  Location     Type
 18097 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 18098 ;; Return value:  Size  Location     Type
 18099 ;;                  1    wreg      unsigned char 
 18100 ;; Registers used:
 18101 ;;		wreg, status,2, status,0, cstack
 18102 ;; Tracked objects:
 18103 ;;		On entry : 0/0
 18104 ;;		On exit  : 0/0
 18105 ;;		Unchanged: 0/0
 18106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18108 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18110 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18111 ;;Total ram usage:        2 bytes
 18112 ;; Hardware stack levels used:    1
 18113 ;; Hardware stack levels required when called:   15
 18114 ;; This function calls:
 18115 ;;		_FLASH_ReadWord
 18116 ;; This function is called by:
 18117 ;;		_ringBufferLUT
 18118 ;; This function uses a non-reentrant model
 18119 ;;
 18120                           
 18121                           	psect	text16
 18122  019388                     __ptext16:
 18123                           	opt stack 0
 18124  019388                     _getMinorRevisionID:
 18125                           	opt stack 13
 18126                           
 18127                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 18128                           
 18129                           ;incstack = 0
 18130  019388  0EFC               	movlw	252
 18131  01938A  0101               	movlb	1	; () banked
 18132  01938C  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 18133  01938E  0EFF               	movlw	255
 18134  019390  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 18135  019392  0E3F               	movlw	63
 18136  019394  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 18137  019396  0E00               	movlw	0
 18138  019398  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 18139  01939A  ECA2  F0C7         	call	_FLASH_ReadWord	;wreg free
 18140  01939E  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 18141  0193A2  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 18142                           
 18143                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 18144  0193A6  0101               	movlb	1	; () banked
 18145  0193A8  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 18146  0193AA  0B1F               	andlw	31
 18147  0193AC  0012               	return	
 18148  0193AE                     __end_of_getMinorRevisionID:
 18149                           	opt stack 0
 18150                           tblptru	equ	0xFF8
 18151                           tblptrh	equ	0xFF7
 18152                           tblptrl	equ	0xFF6
 18153                           tablat	equ	0xFF5
 18154                           prodl	equ	0xFF3
 18155                           intcon	equ	0xFF2
 18156                           indf0	equ	0xFEF
 18157                           postinc0	equ	0xFEE
 18158                           fsr0h	equ	0xFEA
 18159                           fsr0l	equ	0xFE9
 18160                           wreg	equ	0xFE8
 18161                           indf1	equ	0xFE7
 18162                           postdec1	equ	0xFE5
 18163                           fsr1h	equ	0xFE2
 18164                           fsr1l	equ	0xFE1
 18165                           indf2	equ	0xFDF
 18166                           postinc2	equ	0xFDE
 18167                           fsr2h	equ	0xFDA
 18168                           fsr2l	equ	0xFD9
 18169                           status	equ	0xFD8
 18170                           
 18171 ;; *************** function _getMajorRevisionID *****************
 18172 ;; Defined at:
 18173 ;;		line 12 in file "device_IDs.c"
 18174 ;; Parameters:    Size  Location     Type
 18175 ;;		None
 18176 ;; Auto vars:     Size  Location     Type
 18177 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 18178 ;; Return value:  Size  Location     Type
 18179 ;;                  1    wreg      unsigned char 
 18180 ;; Registers used:
 18181 ;;		wreg, status,2, status,0, cstack
 18182 ;; Tracked objects:
 18183 ;;		On entry : 0/0
 18184 ;;		On exit  : 0/0
 18185 ;;		Unchanged: 0/0
 18186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18188 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18189 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18190 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18191 ;;Total ram usage:        5 bytes
 18192 ;; Hardware stack levels used:    1
 18193 ;; Hardware stack levels required when called:   15
 18194 ;; This function calls:
 18195 ;;		_FLASH_ReadWord
 18196 ;; This function is called by:
 18197 ;;		_ringBufferLUT
 18198 ;; This function uses a non-reentrant model
 18199 ;;
 18200                           
 18201                           	psect	text17
 18202  019004                     __ptext17:
 18203                           	opt stack 0
 18204  019004                     _getMajorRevisionID:
 18205                           	opt stack 13
 18206                           
 18207                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 18208                           
 18209                           ; BSR set to: 1
 18210                           ;incstack = 0
 18211  019004  0EFC               	movlw	252
 18212  019006  0101               	movlb	1	; () banked
 18213  019008  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 18214  01900A  0EFF               	movlw	255
 18215  01900C  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 18216  01900E  0E3F               	movlw	63
 18217  019010  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 18218  019012  0E00               	movlw	0
 18219  019014  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 18220  019016  ECA2  F0C7         	call	_FLASH_ReadWord	;wreg free
 18221  01901A  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 18222  01901E  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 18223                           
 18224                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 18225  019022  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 18226  019026  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 18227  01902A  0E06               	movlw	6
 18228  01902C  0101               	movlb	1	; () banked
 18229  01902E  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 18230  019030                     u26095:
 18231  019030  90D8               	bcf	status,0,c
 18232  019032  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 18233  019034  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 18234  019036  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 18235  019038  D7FB               	goto	u26095
 18236  01903A  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 18237  01903C  0B1F               	andlw	31
 18238  01903E  0012               	return	
 18239  019040                     __end_of_getMajorRevisionID:
 18240                           	opt stack 0
 18241                           tblptru	equ	0xFF8
 18242                           tblptrh	equ	0xFF7
 18243                           tblptrl	equ	0xFF6
 18244                           tablat	equ	0xFF5
 18245                           prodl	equ	0xFF3
 18246                           intcon	equ	0xFF2
 18247                           indf0	equ	0xFEF
 18248                           postinc0	equ	0xFEE
 18249                           fsr0h	equ	0xFEA
 18250                           fsr0l	equ	0xFE9
 18251                           wreg	equ	0xFE8
 18252                           indf1	equ	0xFE7
 18253                           postdec1	equ	0xFE5
 18254                           fsr1h	equ	0xFE2
 18255                           fsr1l	equ	0xFE1
 18256                           indf2	equ	0xFDF
 18257                           postinc2	equ	0xFDE
 18258                           fsr2h	equ	0xFDA
 18259                           fsr2l	equ	0xFD9
 18260                           status	equ	0xFD8
 18261                           
 18262 ;; *************** function _getDeviceIDString *****************
 18263 ;; Defined at:
 18264 ;;		line 34 in file "device_IDs.c"
 18265 ;; Parameters:    Size  Location     Type
 18266 ;;  inputDevID      2   36[BANK1 ] unsigned int 
 18267 ;; Auto vars:     Size  Location     Type
 18268 ;;  strings         6   40[BANK1 ] PTR const unsigned char 
 18269 ;;		 -> STR_155(10), STR_154(13), STR_153(12), 
 18270 ;; Return value:  Size  Location     Type
 18271 ;;                  2   36[BANK1 ] PTR inline unsigned char
 18272 ;; Registers used:
 18273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18279 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18280 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18281 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18282 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18283 ;;Total ram usage:       10 bytes
 18284 ;; Hardware stack levels used:    1
 18285 ;; Hardware stack levels required when called:   13
 18286 ;; This function calls:
 18287 ;;		Nothing
 18288 ;; This function is called by:
 18289 ;;		_ringBufferLUT
 18290 ;; This function uses a non-reentrant model
 18291 ;;
 18292                           
 18293                           	psect	text18
 18294  0189FA                     __ptext18:
 18295                           	opt stack 0
 18296  0189FA                     _getDeviceIDString:
 18297                           	opt stack 15
 18298                           
 18299                           ;device_IDs.c: 37: const char *strings[] = {
 18300                           ;device_IDs.c: 39: "PIC18F67K40",
 18301                           ;device_IDs.c: 40: "PIC18LF67K40",
 18302                           ;device_IDs.c: 41: "Undefined"
 18303                           ;device_IDs.c: 43: };
 18304                           
 18305                           ; BSR set to: 1
 18306                           ;incstack = 0
 18307  0189FA  EE22  F0EC         	lfsr	2,getDeviceIDString@F17550
 18308  0189FE  EE11  F028         	lfsr	1,getDeviceIDString@strings
 18309  018A02  0E05               	movlw	5
 18310  018A04                     u26081:
 18311  018A04  CFDB FFE3          	movff	plusw2,plusw1
 18312  018A08  06E8               	decf	wreg,f,c
 18313  018A0A  E2FC               	bc	u26081
 18314                           
 18315                           ;device_IDs.c: 47: switch (inputDevID) {
 18316  018A0C  D00F               	goto	l1431
 18317  018A0E                     
 18318                           ;device_IDs.c: 50: return strings[0];
 18319  018A0E  C128  F124         	movff	getDeviceIDString@strings,?_getDeviceIDString
 18320  018A12  C129  F125         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 18321                           
 18322                           ;device_IDs.c: 51: break;
 18323  018A16  0012               	return	
 18324  018A18                     
 18325                           ;device_IDs.c: 54: return strings[1];
 18326  018A18  C12A  F124         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 18327  018A1C  C12B  F125         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 18328                           
 18329                           ;device_IDs.c: 55: break;
 18330  018A20  0012               	return	
 18331  018A22                     
 18332                           ;device_IDs.c: 58: return strings[2];
 18333  018A22  C12C  F124         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 18334  018A26  C12D  F125         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 18335                           
 18336                           ;device_IDs.c: 61: }
 18337                           
 18338                           ;device_IDs.c: 59: break;
 18339  018A2A  0012               	return	
 18340  018A2C                     l1431:
 18341  018A2C  C124  F126         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 18342  018A30  C125  F127         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 18343                           
 18344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 18345                           ; Switch size 1, requested type "space"
 18346                           ; Number of cases is 2, Range of values is 106 to 107
 18347                           ; switch strategies available:
 18348                           ; Name         Instructions Cycles
 18349                           ; simple_byte            7     4 (average)
 18350                           ;	Chosen strategy is simple_byte
 18351  018A34  0101               	movlb	1	; () banked
 18352  018A36  5127               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 18353  018A38  0A6A               	xorlw	106	; case 106
 18354  018A3A  B4D8               	btfsc	status,2,c
 18355  018A3C  D004               	goto	l20556
 18356  018A3E  0A01               	xorlw	1	; case 107
 18357  018A40  B4D8               	btfsc	status,2,c
 18358  018A42  D006               	goto	l20558
 18359  018A44  D7EE               	goto	l1436
 18360  018A46                     l20556:
 18361                           
 18362                           ; BSR set to: 1
 18363                           ; Switch size 1, requested type "space"
 18364                           ; Number of cases is 1, Range of values is 192 to 192
 18365                           ; switch strategies available:
 18366                           ; Name         Instructions Cycles
 18367                           ; simple_byte            4     3 (average)
 18368                           ;	Chosen strategy is simple_byte
 18369  018A46  5126               	movf	??_getDeviceIDString& (0+255),w,b
 18370  018A48  0AC0               	xorlw	192	; case 192
 18371  018A4A  B4D8               	btfsc	status,2,c
 18372  018A4C  D7E0               	goto	l1432
 18373  018A4E  D7E9               	goto	l1436
 18374  018A50                     l20558:
 18375                           
 18376                           ; BSR set to: 1
 18377                           ; Switch size 1, requested type "space"
 18378                           ; Number of cases is 1, Range of values is 32 to 32
 18379                           ; switch strategies available:
 18380                           ; Name         Instructions Cycles
 18381                           ; simple_byte            4     3 (average)
 18382                           ;	Chosen strategy is simple_byte
 18383  018A50  5126               	movf	??_getDeviceIDString& (0+255),w,b
 18384  018A52  0A20               	xorlw	32	; case 32
 18385  018A54  B4D8               	btfsc	status,2,c
 18386  018A56  D7E0               	goto	l1435
 18387  018A58  D7E4               	goto	l1436
 18388  018A5A                     __end_of_getDeviceIDString:
 18389                           	opt stack 0
 18390                           tblptru	equ	0xFF8
 18391                           tblptrh	equ	0xFF7
 18392                           tblptrl	equ	0xFF6
 18393                           tablat	equ	0xFF5
 18394                           prodl	equ	0xFF3
 18395                           intcon	equ	0xFF2
 18396                           indf0	equ	0xFEF
 18397                           postinc0	equ	0xFEE
 18398                           fsr0h	equ	0xFEA
 18399                           fsr0l	equ	0xFE9
 18400                           wreg	equ	0xFE8
 18401                           indf1	equ	0xFE7
 18402                           postdec1	equ	0xFE5
 18403                           plusw1	equ	0xFE3
 18404                           fsr1h	equ	0xFE2
 18405                           fsr1l	equ	0xFE1
 18406                           indf2	equ	0xFDF
 18407                           postinc2	equ	0xFDE
 18408                           plusw2	equ	0xFDB
 18409                           fsr2h	equ	0xFDA
 18410                           fsr2l	equ	0xFD9
 18411                           status	equ	0xFD8
 18412                           
 18413 ;; *************** function _getDeviceID *****************
 18414 ;; Defined at:
 18415 ;;		line 4 in file "device_IDs.c"
 18416 ;; Parameters:    Size  Location     Type
 18417 ;;		None
 18418 ;; Auto vars:     Size  Location     Type
 18419 ;;		None
 18420 ;; Return value:  Size  Location     Type
 18421 ;;                  2   34[BANK1 ] unsigned int 
 18422 ;; Registers used:
 18423 ;;		wreg, status,2, status,0, cstack
 18424 ;; Tracked objects:
 18425 ;;		On entry : 0/0
 18426 ;;		On exit  : 0/0
 18427 ;;		Unchanged: 0/0
 18428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18429 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18432 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18433 ;;Total ram usage:        2 bytes
 18434 ;; Hardware stack levels used:    1
 18435 ;; Hardware stack levels required when called:   15
 18436 ;; This function calls:
 18437 ;;		_FLASH_ReadWord
 18438 ;; This function is called by:
 18439 ;;		_ringBufferLUT
 18440 ;; This function uses a non-reentrant model
 18441 ;;
 18442                           
 18443                           	psect	text19
 18444  019464                     __ptext19:
 18445                           	opt stack 0
 18446  019464                     _getDeviceID:
 18447                           	opt stack 13
 18448                           
 18449                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 18450                           
 18451                           ;incstack = 0
 18452  019464  0EFE               	movlw	254
 18453  019466  0101               	movlb	1	; () banked
 18454  019468  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 18455  01946A  0EFF               	movlw	255
 18456  01946C  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 18457  01946E  0E3F               	movlw	63
 18458  019470  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 18459  019472  0E00               	movlw	0
 18460  019474  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 18461  019476  ECA2  F0C7         	call	_FLASH_ReadWord	;wreg free
 18462  01947A  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 18463  01947E  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 18464  019482  0012               	return	
 18465  019484                     __end_of_getDeviceID:
 18466                           	opt stack 0
 18467                           tblptru	equ	0xFF8
 18468                           tblptrh	equ	0xFF7
 18469                           tblptrl	equ	0xFF6
 18470                           tablat	equ	0xFF5
 18471                           prodl	equ	0xFF3
 18472                           intcon	equ	0xFF2
 18473                           indf0	equ	0xFEF
 18474                           postinc0	equ	0xFEE
 18475                           fsr0h	equ	0xFEA
 18476                           fsr0l	equ	0xFE9
 18477                           wreg	equ	0xFE8
 18478                           indf1	equ	0xFE7
 18479                           postdec1	equ	0xFE5
 18480                           plusw1	equ	0xFE3
 18481                           fsr1h	equ	0xFE2
 18482                           fsr1l	equ	0xFE1
 18483                           indf2	equ	0xFDF
 18484                           postinc2	equ	0xFDE
 18485                           plusw2	equ	0xFDB
 18486                           fsr2h	equ	0xFDA
 18487                           fsr2l	equ	0xFD9
 18488                           status	equ	0xFD8
 18489                           
 18490 ;; *************** function _FLASH_ReadWord *****************
 18491 ;; Defined at:
 18492 ;;		line 71 in file "mcc_generated_files/memory.c"
 18493 ;; Parameters:    Size  Location     Type
 18494 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 18495 ;; Auto vars:     Size  Location     Type
 18496 ;;		None
 18497 ;; Return value:  Size  Location     Type
 18498 ;;                  2   27[BANK1 ] unsigned int 
 18499 ;; Registers used:
 18500 ;;		wreg, status,2, status,0, cstack
 18501 ;; Tracked objects:
 18502 ;;		On entry : 0/0
 18503 ;;		On exit  : 0/0
 18504 ;;		Unchanged: 0/0
 18505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18506 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18508 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18509 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18510 ;;Total ram usage:        7 bytes
 18511 ;; Hardware stack levels used:    1
 18512 ;; Hardware stack levels required when called:   14
 18513 ;; This function calls:
 18514 ;;		_FLASH_ReadByte
 18515 ;; This function is called by:
 18516 ;;		_getDeviceID
 18517 ;;		_getMajorRevisionID
 18518 ;;		_getMinorRevisionID
 18519 ;;		_getUserID
 18520 ;; This function uses a non-reentrant model
 18521 ;;
 18522                           
 18523                           	psect	text20
 18524  018F44                     __ptext20:
 18525                           	opt stack 0
 18526  018F44                     _FLASH_ReadWord:
 18527                           	opt stack 13
 18528                           
 18529                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 18530                           
 18531                           ;incstack = 0
 18532  018F44  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 18533  018F48  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 18534  018F4C  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 18535  018F50  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 18536  018F54  EC8A  F0CA         	call	_FLASH_ReadByte	;wreg free
 18537  018F58  0101               	movlb	1	; () banked
 18538  018F5A  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 18539  018F5C  0E01               	movlw	1
 18540  018F5E  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 18541  018F60  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 18542  018F62  0E00               	movlw	0
 18543  018F64  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 18544  018F66  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 18545  018F68  0E00               	movlw	0
 18546  018F6A  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 18547  018F6C  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 18548  018F6E  0E00               	movlw	0
 18549  018F70  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 18550  018F72  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 18551  018F74  EC8A  F0CA         	call	_FLASH_ReadByte	;wreg free
 18552  018F78  0101               	movlb	1	; () banked
 18553  018F7A  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 18554  018F7C  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 18555  018F7E  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 18556  018F80  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 18557  018F84  0012               	return	
 18558  018F86                     __end_of_FLASH_ReadWord:
 18559                           	opt stack 0
 18560                           tblptru	equ	0xFF8
 18561                           tblptrh	equ	0xFF7
 18562                           tblptrl	equ	0xFF6
 18563                           tablat	equ	0xFF5
 18564                           prodl	equ	0xFF3
 18565                           intcon	equ	0xFF2
 18566                           indf0	equ	0xFEF
 18567                           postinc0	equ	0xFEE
 18568                           fsr0h	equ	0xFEA
 18569                           fsr0l	equ	0xFE9
 18570                           wreg	equ	0xFE8
 18571                           indf1	equ	0xFE7
 18572                           postdec1	equ	0xFE5
 18573                           plusw1	equ	0xFE3
 18574                           fsr1h	equ	0xFE2
 18575                           fsr1l	equ	0xFE1
 18576                           indf2	equ	0xFDF
 18577                           postinc2	equ	0xFDE
 18578                           plusw2	equ	0xFDB
 18579                           fsr2h	equ	0xFDA
 18580                           fsr2l	equ	0xFD9
 18581                           status	equ	0xFD8
 18582                           
 18583 ;; *************** function _FLASH_ReadByte *****************
 18584 ;; Defined at:
 18585 ;;		line 59 in file "mcc_generated_files/memory.c"
 18586 ;; Parameters:    Size  Location     Type
 18587 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 18588 ;; Auto vars:     Size  Location     Type
 18589 ;;		None
 18590 ;; Return value:  Size  Location     Type
 18591 ;;                  1    wreg      unsigned char 
 18592 ;; Registers used:
 18593 ;;		wreg, status,2
 18594 ;; Tracked objects:
 18595 ;;		On entry : 0/0
 18596 ;;		On exit  : 0/0
 18597 ;;		Unchanged: 0/0
 18598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18599 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18602 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18603 ;;Total ram usage:        4 bytes
 18604 ;; Hardware stack levels used:    1
 18605 ;; Hardware stack levels required when called:   13
 18606 ;; This function calls:
 18607 ;;		Nothing
 18608 ;; This function is called by:
 18609 ;;		_FLASH_ReadWord
 18610 ;;		_FLASH_WriteByte
 18611 ;; This function uses a non-reentrant model
 18612 ;;
 18613                           
 18614                           	psect	text21
 18615  019514                     __ptext21:
 18616                           	opt stack 0
 18617  019514                     _FLASH_ReadByte:
 18618                           	opt stack 13
 18619                           
 18620                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 18621                           
 18622                           ; BSR set to: 1
 18623                           ;incstack = 0
 18624  019514  5077               	movf	3959,w,c	;volsfr
 18625  019516  0B3F               	andlw	-193
 18626  019518  0980               	iorlw	128
 18627  01951A  6E77               	movwf	3959,c	;volsfr
 18628                           
 18629                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 18630  01951C  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 18631                           
 18632                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 18633  019520  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 18634                           
 18635                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 18636  019524  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 18637  019528  0008               	tblrd		*	;# 
 18638                           
 18639                           ;memory.c: 68: return (TABLAT);
 18640  01952A  50F5               	movf	tablat,w,c	;volatile
 18641  01952C  0012               	return	
 18642  01952E                     __end_of_FLASH_ReadByte:
 18643                           	opt stack 0
 18644                           tblptru	equ	0xFF8
 18645                           tblptrh	equ	0xFF7
 18646                           tblptrl	equ	0xFF6
 18647                           tablat	equ	0xFF5
 18648                           prodl	equ	0xFF3
 18649                           intcon	equ	0xFF2
 18650                           indf0	equ	0xFEF
 18651                           postinc0	equ	0xFEE
 18652                           fsr0h	equ	0xFEA
 18653                           fsr0l	equ	0xFE9
 18654                           wreg	equ	0xFE8
 18655                           indf1	equ	0xFE7
 18656                           postdec1	equ	0xFE5
 18657                           plusw1	equ	0xFE3
 18658                           fsr1h	equ	0xFE2
 18659                           fsr1l	equ	0xFE1
 18660                           indf2	equ	0xFDF
 18661                           postinc2	equ	0xFDE
 18662                           plusw2	equ	0xFDB
 18663                           fsr2h	equ	0xFDA
 18664                           fsr2l	equ	0xFD9
 18665                           status	equ	0xFD8
 18666                           
 18667 ;; *************** function _getCauseOfResetString *****************
 18668 ;; Defined at:
 18669 ;;		line 81 in file "cause_of_reset.c"
 18670 ;; Parameters:    Size  Location     Type
 18671 ;;  r               1    wreg     enum E17455
 18672 ;; Auto vars:     Size  Location     Type
 18673 ;;  r               1   25[BANK1 ] enum E17455
 18674 ;; Return value:  Size  Location     Type
 18675 ;;                  2   23[BANK1 ] PTR inline unsigned char
 18676 ;; Registers used:
 18677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18678 ;; Tracked objects:
 18679 ;;		On entry : 0/0
 18680 ;;		On exit  : 0/0
 18681 ;;		Unchanged: 0/0
 18682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18683 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18684 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18686 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18687 ;;Total ram usage:        3 bytes
 18688 ;; Hardware stack levels used:    1
 18689 ;; Hardware stack levels required when called:   13
 18690 ;; This function calls:
 18691 ;;		Nothing
 18692 ;; This function is called by:
 18693 ;;		_ringBufferLUT
 18694 ;; This function uses a non-reentrant model
 18695 ;;
 18696                           
 18697                           	psect	text22
 18698  019258                     __ptext22:
 18699                           	opt stack 0
 18700  019258                     _getCauseOfResetString:
 18701                           	opt stack 15
 18702                           
 18703                           ;incstack = 0
 18704                           ;getCauseOfResetString@r stored from wreg
 18705  019258  0101               	movlb	1	; () banked
 18706  01925A  6F19               	movwf	getCauseOfResetString@r& (0+255),b
 18707                           
 18708                           ;cause_of_reset.c: 84: static char *strings[] = {
 18709                           ;cause_of_reset.c: 85: "Undefined Reset",
 18710                           ;cause_of_reset.c: 86: "Power On Reset",
 18711                           ;cause_of_reset.c: 87: "Brown Out Reset",
 18712                           ;cause_of_reset.c: 88: "Master Clear Reset",
 18713                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 18714                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 18715                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 18716                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 18717                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 18718                           ;cause_of_reset.c: 94: };
 18719  01925C  0E09               	movlw	9
 18720  01925E  0101               	movlb	1	; () banked
 18721  019260  6119               	cpfslt	getCauseOfResetString@r& (0+255),b
 18722  019262  D00D               	goto	l1463
 18723                           
 18724                           ; BSR set to: 1
 18725                           ;cause_of_reset.c: 99: return strings[r];
 18726  019264  5119               	movf	getCauseOfResetString@r& (0+255),w,b
 18727  019266  0D02               	mullw	2
 18728  019268  0EDA               	movlw	low getCauseOfResetString@strings
 18729  01926A  24F3               	addwf	prodl,w,c
 18730  01926C  6ED9               	movwf	fsr2l,c
 18731  01926E  0E02               	movlw	high getCauseOfResetString@strings
 18732  019270  20F4               	addwfc	prodh,w,c
 18733  019272  6EDA               	movwf	fsr2h,c
 18734  019274  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 18735  019278  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 18736                           
 18737                           ; BSR set to: 1
 18738                           ;cause_of_reset.c: 101: }
 18739                           
 18740                           ; BSR set to: 1
 18741  01927C  0012               	return	
 18742  01927E                     l1463:
 18743                           
 18744                           ; BSR set to: 1
 18745                           ;cause_of_reset.c: 103: else {
 18746                           ;cause_of_reset.c: 105: return "Undefined Reset";
 18747                           
 18748                           ; BSR set to: 1
 18749  01927E  0EDD               	movlw	low STR_156
 18750  019280  6F17               	movwf	?_getCauseOfResetString& (0+255),b
 18751  019282  0EFD               	movlw	high STR_156
 18752  019284  6F18               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 18753                           
 18754                           ; BSR set to: 1
 18755  019286  0012               	return	
 18756  019288                     __end_of_getCauseOfResetString:
 18757                           	opt stack 0
 18758                           tblptru	equ	0xFF8
 18759                           tblptrh	equ	0xFF7
 18760                           tblptrl	equ	0xFF6
 18761                           tablat	equ	0xFF5
 18762                           prodh	equ	0xFF4
 18763                           prodl	equ	0xFF3
 18764                           intcon	equ	0xFF2
 18765                           indf0	equ	0xFEF
 18766                           postinc0	equ	0xFEE
 18767                           fsr0h	equ	0xFEA
 18768                           fsr0l	equ	0xFE9
 18769                           wreg	equ	0xFE8
 18770                           indf1	equ	0xFE7
 18771                           postdec1	equ	0xFE5
 18772                           plusw1	equ	0xFE3
 18773                           fsr1h	equ	0xFE2
 18774                           fsr1l	equ	0xFE1
 18775                           indf2	equ	0xFDF
 18776                           postinc2	equ	0xFDE
 18777                           postdec2	equ	0xFDD
 18778                           plusw2	equ	0xFDB
 18779                           fsr2h	equ	0xFDA
 18780                           fsr2l	equ	0xFD9
 18781                           status	equ	0xFD8
 18782                           
 18783 ;; *************** function _atoi *****************
 18784 ;; Defined at:
 18785 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 18786 ;; Parameters:    Size  Location     Type
 18787 ;;  s               2   29[BANK1 ] PTR const unsigned char 
 18788 ;;		 -> ringBufferLUT@arg_buff(3), 
 18789 ;; Auto vars:     Size  Location     Type
 18790 ;;  a               2   34[BANK1 ] int 
 18791 ;;  sign            1   33[BANK1 ] unsigned char 
 18792 ;; Return value:  Size  Location     Type
 18793 ;;                  2   29[BANK1 ] int 
 18794 ;; Registers used:
 18795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18796 ;; Tracked objects:
 18797 ;;		On entry : 0/0
 18798 ;;		On exit  : 0/0
 18799 ;;		Unchanged: 0/0
 18800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18801 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18802 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18803 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18804 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18805 ;;Total ram usage:        7 bytes
 18806 ;; Hardware stack levels used:    1
 18807 ;; Hardware stack levels required when called:   14
 18808 ;; This function calls:
 18809 ;;		___wmul
 18810 ;;		_isdigit
 18811 ;; This function is called by:
 18812 ;;		_ringBufferLUT
 18813 ;; This function uses a non-reentrant model
 18814 ;;
 18815                           
 18816                           	psect	text23
 18817  017F68                     __ptext23:
 18818                           	opt stack 0
 18819  017F68                     _atoi:
 18820                           	opt stack 14
 18821                           
 18822                           ; BSR set to: 1
 18823                           ;incstack = 0
 18824  017F68  D003               	goto	l1885
 18825  017F6A  0101               	movlb	1	; () banked
 18826  017F6C  4B1D               	infsnz	atoi@s& (0+255),f,b
 18827  017F6E  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 18828  017F70                     l1885:
 18829                           
 18830                           ; BSR set to: 1
 18831  017F70  C11D  FFD9         	movff	atoi@s,fsr2l
 18832  017F74  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18833  017F78  0E20               	movlw	32
 18834  017F7A  18DE               	xorwf	postinc2,w,c
 18835  017F7C  B4D8               	btfsc	status,2,c
 18836  017F7E  D7F5               	goto	l1886
 18837  017F80  C11D  FFD9         	movff	atoi@s,fsr2l
 18838  017F84  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18839  017F88  0E09               	movlw	9
 18840  017F8A  18DE               	xorwf	postinc2,w,c
 18841  017F8C  B4D8               	btfsc	status,2,c
 18842  017F8E  D7ED               	goto	l1886
 18843  017F90  0E00               	movlw	0
 18844  017F92  0101               	movlb	1	; () banked
 18845  017F94  6F23               	movwf	(atoi@a+1)& (0+255),b
 18846  017F96  0E00               	movlw	0
 18847  017F98  6F22               	movwf	atoi@a& (0+255),b
 18848  017F9A  0E00               	movlw	0
 18849  017F9C  6F21               	movwf	atoi@sign& (0+255),b
 18850                           
 18851                           ; BSR set to: 1
 18852  017F9E  C11D  FFD9         	movff	atoi@s,fsr2l
 18853  017FA2  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18854  017FA6  0E2D               	movlw	45
 18855  017FA8  18DE               	xorwf	postinc2,w,c
 18856  017FAA  A4D8               	btfss	status,2,c
 18857  017FAC  D002               	goto	l1888
 18858                           
 18859                           ; BSR set to: 1
 18860  017FAE  2B21               	incf	atoi@sign& (0+255),f,b
 18861  017FB0  D026               	goto	l19788
 18862  017FB2                     l1888:
 18863                           
 18864                           ; BSR set to: 1
 18865                           
 18866                           ; BSR set to: 1
 18867  017FB2  C11D  FFD9         	movff	atoi@s,fsr2l
 18868  017FB6  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18869  017FBA  0E2B               	movlw	43
 18870  017FBC  18DE               	xorwf	postinc2,w,c
 18871  017FBE  A4D8               	btfss	status,2,c
 18872  017FC0  D020               	goto	l1891
 18873  017FC2  D01D               	goto	l19788
 18874  017FC4                     
 18875                           ; BSR set to: 1
 18876  017FC4  C122  F117         	movff	atoi@a,___wmul@multiplier
 18877  017FC8  C123  F118         	movff	atoi@a+1,___wmul@multiplier+1
 18878  017FCC  0E00               	movlw	0
 18879  017FCE  0101               	movlb	1	; () banked
 18880  017FD0  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18881  017FD2  0E0A               	movlw	10
 18882  017FD4  6F19               	movwf	___wmul@multiplicand& (0+255),b
 18883  017FD6  EC88  F0C9         	call	___wmul	;wreg free
 18884  017FDA  C11D  FFD9         	movff	atoi@s,fsr2l
 18885  017FDE  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18886  017FE2  50DF               	movf	indf2,w,c
 18887  017FE4  0101               	movlb	1	; () banked
 18888  017FE6  6F1F               	movwf	??_atoi& (0+255),b
 18889  017FE8  6B20               	clrf	(??_atoi+1)& (0+255),b
 18890  017FEA  5117               	movf	?___wmul& (0+255),w,b
 18891  017FEC  271F               	addwf	??_atoi& (0+255),f,b
 18892  017FEE  5118               	movf	(?___wmul+1)& (0+255),w,b
 18893  017FF0  2320               	addwfc	(??_atoi+1)& (0+255),f,b
 18894  017FF2  0ED0               	movlw	208
 18895  017FF4  251F               	addwf	??_atoi& (0+255),w,b
 18896  017FF6  6F22               	movwf	atoi@a& (0+255),b
 18897  017FF8  0EFF               	movlw	255
 18898  017FFA  2120               	addwfc	(??_atoi+1)& (0+255),w,b
 18899  017FFC  6F23               	movwf	(atoi@a+1)& (0+255),b
 18900  017FFE                     l19788:
 18901                           
 18902                           ; BSR set to: 1
 18903  017FFE  4B1D               	infsnz	atoi@s& (0+255),f,b
 18904  018000  2B1E               	incf	(atoi@s+1)& (0+255),f,b
 18905  018002                     l1891:
 18906                           
 18907                           ; BSR set to: 1
 18908                           
 18909                           ; BSR set to: 1
 18910  018002  C11D  FFD9         	movff	atoi@s,fsr2l
 18911  018006  C11E  FFDA         	movff	atoi@s+1,fsr2h
 18912  01800A  50DF               	movf	indf2,w,c
 18913  01800C  EC21  F0CA         	call	_isdigit
 18914  018010  B0D8               	btfsc	status,0,c
 18915  018012  D7D8               	goto	l1892
 18916  018014  0101               	movlb	1	; () banked
 18917  018016  5121               	movf	atoi@sign& (0+255),w,b
 18918  018018  B4D8               	btfsc	status,2,c
 18919  01801A  D00D               	goto	l1894
 18920                           
 18921                           ; BSR set to: 1
 18922  01801C  C122  F11F         	movff	atoi@a,??_atoi
 18923  018020  C123  F120         	movff	atoi@a+1,??_atoi+1
 18924  018024  1F1F               	comf	??_atoi& (0+255),f,b
 18925  018026  1F20               	comf	(??_atoi+1)& (0+255),f,b
 18926  018028  4B1F               	infsnz	??_atoi& (0+255),f,b
 18927  01802A  2B20               	incf	(??_atoi+1)& (0+255),f,b
 18928  01802C  C11F  F11D         	movff	??_atoi,?_atoi
 18929  018030  C120  F11E         	movff	??_atoi+1,?_atoi+1
 18930  018034  0012               	return	
 18931  018036                     l1894:
 18932                           
 18933                           ; BSR set to: 1
 18934  018036  C122  F11D         	movff	atoi@a,?_atoi
 18935  01803A  C123  F11E         	movff	atoi@a+1,?_atoi+1
 18936                           
 18937                           ; BSR set to: 1
 18938  01803E  0012               	return		;funcret
 18939  018040                     __end_of_atoi:
 18940                           	opt stack 0
 18941                           tblptru	equ	0xFF8
 18942                           tblptrh	equ	0xFF7
 18943                           tblptrl	equ	0xFF6
 18944                           tablat	equ	0xFF5
 18945                           prodh	equ	0xFF4
 18946                           prodl	equ	0xFF3
 18947                           intcon	equ	0xFF2
 18948                           indf0	equ	0xFEF
 18949                           postinc0	equ	0xFEE
 18950                           fsr0h	equ	0xFEA
 18951                           fsr0l	equ	0xFE9
 18952                           wreg	equ	0xFE8
 18953                           indf1	equ	0xFE7
 18954                           postdec1	equ	0xFE5
 18955                           plusw1	equ	0xFE3
 18956                           fsr1h	equ	0xFE2
 18957                           fsr1l	equ	0xFE1
 18958                           indf2	equ	0xFDF
 18959                           postinc2	equ	0xFDE
 18960                           postdec2	equ	0xFDD
 18961                           plusw2	equ	0xFDB
 18962                           fsr2h	equ	0xFDA
 18963                           fsr2l	equ	0xFD9
 18964                           status	equ	0xFD8
 18965                           
 18966 ;; *************** function ___fldiv *****************
 18967 ;; Defined at:
 18968 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 18969 ;; Parameters:    Size  Location     Type
 18970 ;;  b               4   61[BANK1 ] int 
 18971 ;;  a               4   65[BANK1 ] int 
 18972 ;; Auto vars:     Size  Location     Type
 18973 ;;  grs             4   80[BANK1 ] unsigned long 
 18974 ;;  rem             4   74[BANK1 ] unsigned long 
 18975 ;;  new_exp         2   78[BANK1 ] int 
 18976 ;;  aexp            1   85[BANK1 ] unsigned char 
 18977 ;;  bexp            1   84[BANK1 ] unsigned char 
 18978 ;;  sign            1   73[BANK1 ] unsigned char 
 18979 ;; Return value:  Size  Location     Type
 18980 ;;                  4   61[BANK1 ] unsigned char 
 18981 ;; Registers used:
 18982 ;;		wreg, status,2, status,0
 18983 ;; Tracked objects:
 18984 ;;		On entry : 0/0
 18985 ;;		On exit  : 0/0
 18986 ;;		Unchanged: 0/0
 18987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18988 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18989 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18990 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18991 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18992 ;;Total ram usage:       25 bytes
 18993 ;; Hardware stack levels used:    1
 18994 ;; Hardware stack levels required when called:   13
 18995 ;; This function calls:
 18996 ;;		Nothing
 18997 ;; This function is called by:
 18998 ;;		_ringBufferLUT
 18999 ;; This function uses a non-reentrant model
 19000 ;;
 19001                           
 19002                           	psect	text24
 19003  015FC0                     __ptext24:
 19004                           	opt stack 0
 19005  015FC0                     ___fldiv:
 19006                           	opt stack 15
 19007                           
 19008                           ; BSR set to: 1
 19009                           ;incstack = 0
 19010  015FC0  0101               	movlb	1	; () banked
 19011  015FC2  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 19012  015FC4  0B80               	andlw	128
 19013  015FC6  6F49               	movwf	___fldiv@sign& (0+255),b
 19014  015FC8  5140               	movf	(___fldiv@b+3)& (0+255),w,b
 19015  015FCA  2540               	addwf	(___fldiv@b+3)& (0+255),w,b
 19016  015FCC  6F54               	movwf	___fldiv@bexp& (0+255),b
 19017                           
 19018                           ; BSR set to: 1
 19019  015FCE  BF3F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 19020                           
 19021                           ; BSR set to: 1
 19022  015FD0  8154               	bsf	___fldiv@bexp& (0+255),0,b
 19023                           
 19024                           ; BSR set to: 1
 19025                           
 19026                           ; BSR set to: 1
 19027  015FD2  5154               	movf	___fldiv@bexp& (0+255),w,b
 19028  015FD4  B4D8               	btfsc	status,2,c
 19029  015FD6  D00D               	goto	l2292
 19030                           
 19031                           ; BSR set to: 1
 19032  015FD8  2954               	incf	___fldiv@bexp& (0+255),w,b
 19033  015FDA  A4D8               	btfss	status,2,c
 19034  015FDC  D008               	goto	l2293
 19035                           
 19036                           ; BSR set to: 1
 19037  015FDE  0E00               	movlw	0
 19038  015FE0  6F3D               	movwf	___fldiv@b& (0+255),b
 19039  015FE2  0E00               	movlw	0
 19040  015FE4  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19041  015FE6  0E00               	movlw	0
 19042  015FE8  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19043  015FEA  0E00               	movlw	0
 19044  015FEC  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19045  015FEE                     l2293:
 19046                           
 19047                           ; BSR set to: 1
 19048                           
 19049                           ; BSR set to: 1
 19050  015FEE  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 19051  015FF0  D006               	goto	L1
 19052  015FF2                     l2292:
 19053                           
 19054                           ; BSR set to: 1
 19055                           
 19056                           ; BSR set to: 1
 19057  015FF2  0E00               	movlw	0
 19058  015FF4  6F3D               	movwf	___fldiv@b& (0+255),b
 19059  015FF6  0E00               	movlw	0
 19060  015FF8  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19061  015FFA  0E00               	movlw	0
 19062  015FFC  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19063  015FFE                     L1:
 19064  015FFE  0E00               	movlw	0
 19065  016000  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19066                           
 19067                           ; BSR set to: 1
 19068                           
 19069                           ; BSR set to: 1
 19070  016002  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 19071  016004  0B80               	andlw	128
 19072  016006  1B49               	xorwf	___fldiv@sign& (0+255),f,b
 19073                           
 19074                           ; BSR set to: 1
 19075  016008  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 19076  01600A  2544               	addwf	(___fldiv@a+3)& (0+255),w,b
 19077  01600C  6F55               	movwf	___fldiv@aexp& (0+255),b
 19078                           
 19079                           ; BSR set to: 1
 19080  01600E  BF43               	btfsc	(___fldiv@a+2)& (0+255),7,b
 19081                           
 19082                           ; BSR set to: 1
 19083  016010  8155               	bsf	___fldiv@aexp& (0+255),0,b
 19084                           
 19085                           ; BSR set to: 1
 19086                           
 19087                           ; BSR set to: 1
 19088  016012  5155               	movf	___fldiv@aexp& (0+255),w,b
 19089  016014  B4D8               	btfsc	status,2,c
 19090  016016  D00D               	goto	l2296
 19091                           
 19092                           ; BSR set to: 1
 19093  016018  2955               	incf	___fldiv@aexp& (0+255),w,b
 19094  01601A  A4D8               	btfss	status,2,c
 19095  01601C  D008               	goto	l2297
 19096                           
 19097                           ; BSR set to: 1
 19098  01601E  0E00               	movlw	0
 19099  016020  6F41               	movwf	___fldiv@a& (0+255),b
 19100  016022  0E00               	movlw	0
 19101  016024  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 19102  016026  0E00               	movlw	0
 19103  016028  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 19104  01602A  0E00               	movlw	0
 19105  01602C  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 19106  01602E                     l2297:
 19107                           
 19108                           ; BSR set to: 1
 19109                           
 19110                           ; BSR set to: 1
 19111  01602E  8F43               	bsf	(___fldiv@a+2)& (0+255),7,b
 19112  016030  D006               	goto	L2
 19113  016032                     l2296:
 19114                           
 19115                           ; BSR set to: 1
 19116                           
 19117                           ; BSR set to: 1
 19118  016032  0E00               	movlw	0
 19119  016034  6F41               	movwf	___fldiv@a& (0+255),b
 19120  016036  0E00               	movlw	0
 19121  016038  6F42               	movwf	(___fldiv@a+1)& (0+255),b
 19122  01603A  0E00               	movlw	0
 19123  01603C  6F43               	movwf	(___fldiv@a+2)& (0+255),b
 19124  01603E                     L2:
 19125  01603E  0E00               	movlw	0
 19126  016040  6F44               	movwf	(___fldiv@a+3)& (0+255),b
 19127                           
 19128                           ; BSR set to: 1
 19129                           
 19130                           ; BSR set to: 1
 19131  016042  5141               	movf	___fldiv@a& (0+255),w,b
 19132  016044  1142               	iorwf	(___fldiv@a+1)& (0+255),w,b
 19133  016046  1143               	iorwf	(___fldiv@a+2)& (0+255),w,b
 19134  016048  1144               	iorwf	(___fldiv@a+3)& (0+255),w,b
 19135  01604A  A4D8               	btfss	status,2,c
 19136  01604C  D015               	goto	l2299
 19137                           
 19138                           ; BSR set to: 1
 19139  01604E  0E00               	movlw	0
 19140  016050  6F3D               	movwf	___fldiv@b& (0+255),b
 19141  016052  0E00               	movlw	0
 19142  016054  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19143  016056  0E00               	movlw	0
 19144  016058  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19145  01605A  0E00               	movlw	0
 19146  01605C  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19147                           
 19148                           ; BSR set to: 1
 19149  01605E  0E80               	movlw	128
 19150  016060  133F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 19151  016062  0E7F               	movlw	127
 19152  016064  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 19153                           
 19154                           ; BSR set to: 1
 19155  016066  C13D  F13D         	movff	___fldiv@b,?___fldiv
 19156  01606A  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 19157  01606E  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 19158  016072  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 19159                           
 19160                           ; BSR set to: 1
 19161  016076  0012               	return	
 19162  016078                     l2299:
 19163                           
 19164                           ; BSR set to: 1
 19165                           
 19166                           ; BSR set to: 1
 19167  016078  5154               	movf	___fldiv@bexp& (0+255),w,b
 19168  01607A  A4D8               	btfss	status,2,c
 19169  01607C  D011               	goto	l2301
 19170                           
 19171                           ; BSR set to: 1
 19172  01607E  0E00               	movlw	0
 19173  016080  6F3D               	movwf	___fldiv@b& (0+255),b
 19174  016082  0E00               	movlw	0
 19175  016084  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19176  016086  0E00               	movlw	0
 19177  016088  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19178  01608A  0E00               	movlw	0
 19179  01608C  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19180                           
 19181                           ; BSR set to: 1
 19182  01608E  C13D  F13D         	movff	___fldiv@b,?___fldiv
 19183  016092  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 19184  016096  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 19185  01609A  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 19186                           
 19187                           ; BSR set to: 1
 19188  01609E  0012               	return	
 19189  0160A0                     l2301:
 19190                           
 19191                           ; BSR set to: 1
 19192                           
 19193                           ; BSR set to: 1
 19194  0160A0  5155               	movf	___fldiv@aexp& (0+255),w,b
 19195  0160A2  6F45               	movwf	??___fldiv& (0+255),b
 19196  0160A4  6B46               	clrf	(??___fldiv+1)& (0+255),b
 19197  0160A6  1F45               	comf	??___fldiv& (0+255),f,b
 19198  0160A8  1F46               	comf	(??___fldiv+1)& (0+255),f,b
 19199  0160AA  4B45               	infsnz	??___fldiv& (0+255),f,b
 19200  0160AC  2B46               	incf	(??___fldiv+1)& (0+255),f,b
 19201  0160AE  5154               	movf	___fldiv@bexp& (0+255),w,b
 19202  0160B0  6F47               	movwf	(??___fldiv+2)& (0+255),b
 19203  0160B2  6B48               	clrf	(??___fldiv+3)& (0+255),b
 19204  0160B4  5145               	movf	??___fldiv& (0+255),w,b
 19205  0160B6  2747               	addwf	(??___fldiv+2)& (0+255),f,b
 19206  0160B8  5146               	movf	(??___fldiv+1)& (0+255),w,b
 19207  0160BA  2348               	addwfc	(??___fldiv+3)& (0+255),f,b
 19208  0160BC  0E7F               	movlw	127
 19209  0160BE  2547               	addwf	(??___fldiv+2)& (0+255),w,b
 19210  0160C0  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 19211  0160C2  0E00               	movlw	0
 19212  0160C4  2148               	addwfc	(??___fldiv+3)& (0+255),w,b
 19213  0160C6  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19214                           
 19215                           ; BSR set to: 1
 19216  0160C8  C13D  F14A         	movff	___fldiv@b,___fldiv@rem
 19217  0160CC  C13E  F14B         	movff	___fldiv@b+1,___fldiv@rem+1
 19218  0160D0  C13F  F14C         	movff	___fldiv@b+2,___fldiv@rem+2
 19219  0160D4  C140  F14D         	movff	___fldiv@b+3,___fldiv@rem+3
 19220                           
 19221                           ; BSR set to: 1
 19222  0160D8  0E00               	movlw	0
 19223  0160DA  6F3D               	movwf	___fldiv@b& (0+255),b
 19224  0160DC  0E00               	movlw	0
 19225  0160DE  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19226  0160E0  0E00               	movlw	0
 19227  0160E2  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19228  0160E4  0E00               	movlw	0
 19229  0160E6  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19230                           
 19231                           ; BSR set to: 1
 19232  0160E8  0E00               	movlw	0
 19233  0160EA  6F50               	movwf	___fldiv@grs& (0+255),b
 19234  0160EC  0E00               	movlw	0
 19235  0160EE  6F51               	movwf	(___fldiv@grs+1)& (0+255),b
 19236  0160F0  0E00               	movlw	0
 19237  0160F2  6F52               	movwf	(___fldiv@grs+2)& (0+255),b
 19238  0160F4  0E00               	movlw	0
 19239  0160F6  6F53               	movwf	(___fldiv@grs+3)& (0+255),b
 19240                           
 19241                           ; BSR set to: 1
 19242  0160F8  0E00               	movlw	0
 19243  0160FA  6F55               	movwf	___fldiv@aexp& (0+255),b
 19244  0160FC  D028               	goto	l2302
 19245  0160FE                     
 19246                           ; BSR set to: 1
 19247                           
 19248                           ; BSR set to: 1
 19249  0160FE  5155               	movf	___fldiv@aexp& (0+255),w,b
 19250  016100  B4D8               	btfsc	status,2,c
 19251  016102  D011               	goto	l2304
 19252                           
 19253                           ; BSR set to: 1
 19254  016104  90D8               	bcf	status,0,c
 19255  016106  374A               	rlcf	___fldiv@rem& (0+255),f,b
 19256  016108  374B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 19257  01610A  374C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 19258  01610C  374D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 19259  01610E  90D8               	bcf	status,0,c
 19260  016110  373D               	rlcf	___fldiv@b& (0+255),f,b
 19261  016112  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 19262  016114  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 19263  016116  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 19264                           
 19265                           ; BSR set to: 1
 19266  016118  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 19267                           
 19268                           ; BSR set to: 1
 19269  01611A  813D               	bsf	___fldiv@b& (0+255),0,b
 19270                           
 19271                           ; BSR set to: 1
 19272  01611C  90D8               	bcf	status,0,c
 19273  01611E  3750               	rlcf	___fldiv@grs& (0+255),f,b
 19274  016120  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19275  016122  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19276  016124  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19277  016126                     l2304:
 19278                           
 19279                           ; BSR set to: 1
 19280                           
 19281                           ; BSR set to: 1
 19282  016126  5141               	movf	___fldiv@a& (0+255),w,b
 19283  016128  5D4A               	subwf	___fldiv@rem& (0+255),w,b
 19284  01612A  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 19285  01612C  594B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 19286  01612E  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 19287  016130  594C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 19288  016132  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 19289  016134  594D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 19290  016136  A0D8               	btfss	status,0,c
 19291  016138  D009               	goto	l2306
 19292                           
 19293                           ; BSR set to: 1
 19294  01613A  8D53               	bsf	(___fldiv@grs+3)& (0+255),6,b
 19295                           
 19296                           ; BSR set to: 1
 19297  01613C  5141               	movf	___fldiv@a& (0+255),w,b
 19298  01613E  5F4A               	subwf	___fldiv@rem& (0+255),f,b
 19299  016140  5142               	movf	(___fldiv@a+1)& (0+255),w,b
 19300  016142  5B4B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 19301  016144  5143               	movf	(___fldiv@a+2)& (0+255),w,b
 19302  016146  5B4C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 19303  016148  5144               	movf	(___fldiv@a+3)& (0+255),w,b
 19304  01614A  5B4D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 19305  01614C                     l2306:
 19306                           
 19307                           ; BSR set to: 1
 19308                           
 19309                           ; BSR set to: 1
 19310  01614C  2B55               	incf	___fldiv@aexp& (0+255),f,b
 19311  01614E                     l2302:
 19312                           
 19313                           ; BSR set to: 1
 19314  01614E  0E19               	movlw	25
 19315  016150  6555               	cpfsgt	___fldiv@aexp& (0+255),b
 19316  016152  D7D5               	goto	l2303
 19317                           
 19318                           ; BSR set to: 1
 19319                           
 19320                           ; BSR set to: 1
 19321  016154  514A               	movf	___fldiv@rem& (0+255),w,b
 19322  016156  114B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 19323  016158  114C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 19324  01615A  114D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 19325  01615C  B4D8               	btfsc	status,2,c
 19326  01615E  D011               	goto	l2309
 19327                           
 19328                           ; BSR set to: 1
 19329  016160  8150               	bsf	___fldiv@grs& (0+255),0,b
 19330                           
 19331                           ; BSR set to: 1
 19332  016162  D00F               	goto	l2309
 19333  016164                     
 19334                           ; BSR set to: 1
 19335                           
 19336                           ; BSR set to: 1
 19337  016164  90D8               	bcf	status,0,c
 19338  016166  373D               	rlcf	___fldiv@b& (0+255),f,b
 19339  016168  373E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 19340  01616A  373F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 19341  01616C  3740               	rlcf	(___fldiv@b+3)& (0+255),f,b
 19342                           
 19343                           ; BSR set to: 1
 19344  01616E  BF53               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 19345                           
 19346                           ; BSR set to: 1
 19347  016170  813D               	bsf	___fldiv@b& (0+255),0,b
 19348                           
 19349                           ; BSR set to: 1
 19350  016172  90D8               	bcf	status,0,c
 19351  016174  3750               	rlcf	___fldiv@grs& (0+255),f,b
 19352  016176  3751               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19353  016178  3752               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19354  01617A  3753               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19355  01617C  074E               	decf	___fldiv@new_exp& (0+255),f,b
 19356  01617E  A0D8               	btfss	status,0,c
 19357  016180  074F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 19358  016182                     l2309:
 19359                           
 19360                           ; BSR set to: 1
 19361                           
 19362                           ; BSR set to: 1
 19363  016182  AF3F               	btfss	(___fldiv@b+2)& (0+255),7,b
 19364  016184  D7EF               	goto	l2310
 19365                           
 19366                           ; BSR set to: 1
 19367                           
 19368                           ; BSR set to: 1
 19369  016186  0E00               	movlw	0
 19370  016188  6F55               	movwf	___fldiv@aexp& (0+255),b
 19371                           
 19372                           ; BSR set to: 1
 19373  01618A  AF53               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19374  01618C  D016               	goto	l2316
 19375                           
 19376                           ; BSR set to: 1
 19377  01618E  0EFF               	movlw	255
 19378  016190  1550               	andwf	___fldiv@grs& (0+255),w,b
 19379  016192  6F45               	movwf	??___fldiv& (0+255),b
 19380  016194  0EFF               	movlw	255
 19381  016196  1551               	andwf	(___fldiv@grs+1)& (0+255),w,b
 19382  016198  6F46               	movwf	(??___fldiv+1)& (0+255),b
 19383  01619A  0EFF               	movlw	255
 19384  01619C  1552               	andwf	(___fldiv@grs+2)& (0+255),w,b
 19385  01619E  6F47               	movwf	(??___fldiv+2)& (0+255),b
 19386  0161A0  0E7F               	movlw	127
 19387  0161A2  1553               	andwf	(___fldiv@grs+3)& (0+255),w,b
 19388  0161A4  6F48               	movwf	(??___fldiv+3)& (0+255),b
 19389  0161A6  5145               	movf	??___fldiv& (0+255),w,b
 19390  0161A8  1146               	iorwf	(??___fldiv+1)& (0+255),w,b
 19391  0161AA  1147               	iorwf	(??___fldiv+2)& (0+255),w,b
 19392  0161AC  1148               	iorwf	(??___fldiv+3)& (0+255),w,b
 19393  0161AE  A4D8               	btfss	status,2,c
 19394  0161B0  D002               	goto	u26370
 19395                           
 19396                           ; BSR set to: 1
 19397                           
 19398                           ; BSR set to: 1
 19399  0161B2  A13D               	btfss	___fldiv@b& (0+255),0,b
 19400  0161B4  D002               	goto	l2316
 19401  0161B6                     u26370:
 19402                           
 19403                           ; BSR set to: 1
 19404  0161B6  0E01               	movlw	1
 19405  0161B8  6F55               	movwf	___fldiv@aexp& (0+255),b
 19406  0161BA                     l2316:
 19407                           
 19408                           ; BSR set to: 1
 19409                           
 19410                           ; BSR set to: 1
 19411                           
 19412                           ; BSR set to: 1
 19413  0161BA  5155               	movf	___fldiv@aexp& (0+255),w,b
 19414  0161BC  B4D8               	btfsc	status,2,c
 19415  0161BE  D01F               	goto	l2318
 19416                           
 19417                           ; BSR set to: 1
 19418  0161C0  0E01               	movlw	1
 19419  0161C2  273D               	addwf	___fldiv@b& (0+255),f,b
 19420  0161C4  0E00               	movlw	0
 19421  0161C6  233E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 19422  0161C8  233F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 19423  0161CA  2340               	addwfc	(___fldiv@b+3)& (0+255),f,b
 19424                           
 19425                           ; BSR set to: 1
 19426  0161CC  A140               	btfss	(___fldiv@b+3)& (0+255),0,b
 19427  0161CE  D017               	goto	l2318
 19428                           
 19429                           ; BSR set to: 1
 19430  0161D0  C13D  F145         	movff	___fldiv@b,??___fldiv
 19431  0161D4  C13E  F146         	movff	___fldiv@b+1,??___fldiv+1
 19432  0161D8  C13F  F147         	movff	___fldiv@b+2,??___fldiv+2
 19433  0161DC  C140  F148         	movff	___fldiv@b+3,??___fldiv+3
 19434  0161E0  3548               	rlcf	(??___fldiv+3)& (0+255),w,b
 19435  0161E2  3348               	rrcf	(??___fldiv+3)& (0+255),f,b
 19436  0161E4  3347               	rrcf	(??___fldiv+2)& (0+255),f,b
 19437  0161E6  3346               	rrcf	(??___fldiv+1)& (0+255),f,b
 19438  0161E8  3345               	rrcf	??___fldiv& (0+255),f,b
 19439  0161EA  C145  F13D         	movff	??___fldiv,___fldiv@b
 19440  0161EE  C146  F13E         	movff	??___fldiv+1,___fldiv@b+1
 19441  0161F2  C147  F13F         	movff	??___fldiv+2,___fldiv@b+2
 19442  0161F6  C148  F140         	movff	??___fldiv+3,___fldiv@b+3
 19443                           
 19444                           ; BSR set to: 1
 19445  0161FA  4B4E               	infsnz	___fldiv@new_exp& (0+255),f,b
 19446  0161FC  2B4F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 19447  0161FE                     l2318:
 19448                           
 19449                           ; BSR set to: 1
 19450                           
 19451                           ; BSR set to: 1
 19452                           
 19453                           ; BSR set to: 1
 19454  0161FE  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19455  016200  D010               	goto	l2319
 19456  016202  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19457  016204  E103               	bnz	u26400
 19458  016206  294E               	incf	___fldiv@new_exp& (0+255),w,b
 19459  016208  A0D8               	btfss	status,0,c
 19460  01620A  D00B               	goto	l2319
 19461  01620C                     u26400:
 19462                           
 19463                           ; BSR set to: 1
 19464  01620C  0E00               	movlw	0
 19465  01620E  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19466  016210  694E               	setf	___fldiv@new_exp& (0+255),b
 19467  016212  0E00               	movlw	0
 19468  016214  6F3D               	movwf	___fldiv@b& (0+255),b
 19469  016216  0E00               	movlw	0
 19470  016218  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19471  01621A  0E00               	movlw	0
 19472  01621C  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19473  01621E  0E00               	movlw	0
 19474  016220  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19475  016222                     l2319:
 19476                           
 19477                           ; BSR set to: 1
 19478                           
 19479                           ; BSR set to: 1
 19480  016222  BF4F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19481  016224  D005               	goto	u26410
 19482  016226  514F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19483  016228  E111               	bnz	l19916
 19484  01622A  054E               	decf	___fldiv@new_exp& (0+255),w,b
 19485  01622C  B0D8               	btfsc	status,0,c
 19486  01622E  D00E               	goto	l2320
 19487  016230                     u26410:
 19488                           
 19489                           ; BSR set to: 1
 19490  016230  0E00               	movlw	0
 19491  016232  6F4F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19492  016234  0E00               	movlw	0
 19493  016236  6F4E               	movwf	___fldiv@new_exp& (0+255),b
 19494  016238  0E00               	movlw	0
 19495  01623A  6F3D               	movwf	___fldiv@b& (0+255),b
 19496  01623C  0E00               	movlw	0
 19497  01623E  6F3E               	movwf	(___fldiv@b+1)& (0+255),b
 19498  016240  0E00               	movlw	0
 19499  016242  6F3F               	movwf	(___fldiv@b+2)& (0+255),b
 19500  016244  0E00               	movlw	0
 19501  016246  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19502  016248  0E00               	movlw	0
 19503  01624A  6F49               	movwf	___fldiv@sign& (0+255),b
 19504  01624C                     l2320:
 19505  01624C                     l19916:
 19506                           
 19507                           ; BSR set to: 1
 19508  01624C  C14E  F154         	movff	___fldiv@new_exp,___fldiv@bexp
 19509                           
 19510                           ; BSR set to: 1
 19511  016250  A154               	btfss	___fldiv@bexp& (0+255),0,b
 19512  016252  D002               	goto	l2321
 19513                           
 19514                           ; BSR set to: 1
 19515  016254  8F3F               	bsf	(___fldiv@b+2)& (0+255),7,b
 19516  016256  D001               	goto	l2322
 19517  016258                     l2321:
 19518                           
 19519                           ; BSR set to: 1
 19520                           
 19521                           ; BSR set to: 1
 19522  016258  9F3F               	bcf	(___fldiv@b+2)& (0+255),7,b
 19523  01625A                     l2322:
 19524                           
 19525                           ; BSR set to: 1
 19526                           
 19527                           ; BSR set to: 1
 19528  01625A  90D8               	bcf	status,0,c
 19529  01625C  3154               	rrcf	___fldiv@bexp& (0+255),w,b
 19530  01625E  6F40               	movwf	(___fldiv@b+3)& (0+255),b
 19531                           
 19532                           ; BSR set to: 1
 19533  016260  5149               	movf	___fldiv@sign& (0+255),w,b
 19534  016262  1340               	iorwf	(___fldiv@b+3)& (0+255),f,b
 19535                           
 19536                           ; BSR set to: 1
 19537  016264  C13D  F13D         	movff	___fldiv@b,?___fldiv
 19538  016268  C13E  F13E         	movff	___fldiv@b+1,?___fldiv+1
 19539  01626C  C13F  F13F         	movff	___fldiv@b+2,?___fldiv+2
 19540  016270  C140  F140         	movff	___fldiv@b+3,?___fldiv+3
 19541  016274  0012               	return	
 19542  016276                     __end_of___fldiv:
 19543                           	opt stack 0
 19544                           tblptru	equ	0xFF8
 19545                           tblptrh	equ	0xFF7
 19546                           tblptrl	equ	0xFF6
 19547                           tablat	equ	0xFF5
 19548                           prodh	equ	0xFF4
 19549                           prodl	equ	0xFF3
 19550                           intcon	equ	0xFF2
 19551                           indf0	equ	0xFEF
 19552                           postinc0	equ	0xFEE
 19553                           fsr0h	equ	0xFEA
 19554                           fsr0l	equ	0xFE9
 19555                           wreg	equ	0xFE8
 19556                           indf1	equ	0xFE7
 19557                           postdec1	equ	0xFE5
 19558                           plusw1	equ	0xFE3
 19559                           fsr1h	equ	0xFE2
 19560                           fsr1l	equ	0xFE1
 19561                           indf2	equ	0xFDF
 19562                           postinc2	equ	0xFDE
 19563                           postdec2	equ	0xFDD
 19564                           plusw2	equ	0xFDB
 19565                           fsr2h	equ	0xFDA
 19566                           fsr2l	equ	0xFD9
 19567                           status	equ	0xFD8
 19568                           
 19569 ;; *************** function _TMR7_StopTimer *****************
 19570 ;; Defined at:
 19571 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 19572 ;; Parameters:    Size  Location     Type
 19573 ;;		None
 19574 ;; Auto vars:     Size  Location     Type
 19575 ;;		None
 19576 ;; Return value:  Size  Location     Type
 19577 ;;                  1    wreg      void 
 19578 ;; Registers used:
 19579 ;;		None
 19580 ;; Tracked objects:
 19581 ;;		On entry : 0/0
 19582 ;;		On exit  : 0/0
 19583 ;;		Unchanged: 0/0
 19584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19589 ;;Total ram usage:        0 bytes
 19590 ;; Hardware stack levels used:    1
 19591 ;; Hardware stack levels required when called:   13
 19592 ;; This function calls:
 19593 ;;		Nothing
 19594 ;; This function is called by:
 19595 ;;		_ringBufferLUT
 19596 ;; This function uses a non-reentrant model
 19597 ;;
 19598                           
 19599                           	psect	text25
 19600  0196C2                     __ptext25:
 19601                           	opt stack 0
 19602  0196C2                     _TMR7_StopTimer:
 19603                           	opt stack 15
 19604                           
 19605                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 19606                           
 19607                           ; BSR set to: 1
 19608                           ;incstack = 0
 19609  0196C2  010F               	movlb	15	; () banked
 19610  0196C4  9130               	bcf	48,0,b	;volatile
 19611                           
 19612                           ; BSR set to: 15
 19613  0196C6  0012               	return		;funcret
 19614  0196C8                     __end_of_TMR7_StopTimer:
 19615                           	opt stack 0
 19616                           tblptru	equ	0xFF8
 19617                           tblptrh	equ	0xFF7
 19618                           tblptrl	equ	0xFF6
 19619                           tablat	equ	0xFF5
 19620                           prodh	equ	0xFF4
 19621                           prodl	equ	0xFF3
 19622                           intcon	equ	0xFF2
 19623                           indf0	equ	0xFEF
 19624                           postinc0	equ	0xFEE
 19625                           fsr0h	equ	0xFEA
 19626                           fsr0l	equ	0xFE9
 19627                           wreg	equ	0xFE8
 19628                           indf1	equ	0xFE7
 19629                           postdec1	equ	0xFE5
 19630                           plusw1	equ	0xFE3
 19631                           fsr1h	equ	0xFE2
 19632                           fsr1l	equ	0xFE1
 19633                           indf2	equ	0xFDF
 19634                           postinc2	equ	0xFDE
 19635                           postdec2	equ	0xFDD
 19636                           plusw2	equ	0xFDB
 19637                           fsr2h	equ	0xFDA
 19638                           fsr2l	equ	0xFD9
 19639                           status	equ	0xFD8
 19640                           
 19641 ;; *************** function _TMR5_StopTimer *****************
 19642 ;; Defined at:
 19643 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 19644 ;; Parameters:    Size  Location     Type
 19645 ;;		None
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;		None
 19648 ;; Return value:  Size  Location     Type
 19649 ;;                  1    wreg      void 
 19650 ;; Registers used:
 19651 ;;		None
 19652 ;; Tracked objects:
 19653 ;;		On entry : 0/0
 19654 ;;		On exit  : 0/0
 19655 ;;		Unchanged: 0/0
 19656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19661 ;;Total ram usage:        0 bytes
 19662 ;; Hardware stack levels used:    1
 19663 ;; Hardware stack levels required when called:   13
 19664 ;; This function calls:
 19665 ;;		Nothing
 19666 ;; This function is called by:
 19667 ;;		_main
 19668 ;;		_ringBufferLUT
 19669 ;; This function uses a non-reentrant model
 19670 ;;
 19671                           
 19672                           	psect	text26
 19673  0196D4                     __ptext26:
 19674                           	opt stack 0
 19675  0196D4                     _TMR5_StopTimer:
 19676                           	opt stack 15
 19677                           
 19678                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 19679                           
 19680                           ; BSR set to: 15
 19681                           ;incstack = 0
 19682  0196D4  90C3               	bcf	4035,0,c	;volatile
 19683  0196D6  0012               	return		;funcret
 19684  0196D8                     __end_of_TMR5_StopTimer:
 19685                           	opt stack 0
 19686                           tblptru	equ	0xFF8
 19687                           tblptrh	equ	0xFF7
 19688                           tblptrl	equ	0xFF6
 19689                           tablat	equ	0xFF5
 19690                           prodh	equ	0xFF4
 19691                           prodl	equ	0xFF3
 19692                           intcon	equ	0xFF2
 19693                           indf0	equ	0xFEF
 19694                           postinc0	equ	0xFEE
 19695                           fsr0h	equ	0xFEA
 19696                           fsr0l	equ	0xFE9
 19697                           wreg	equ	0xFE8
 19698                           indf1	equ	0xFE7
 19699                           postdec1	equ	0xFE5
 19700                           plusw1	equ	0xFE3
 19701                           fsr1h	equ	0xFE2
 19702                           fsr1l	equ	0xFE1
 19703                           indf2	equ	0xFDF
 19704                           postinc2	equ	0xFDE
 19705                           postdec2	equ	0xFDD
 19706                           plusw2	equ	0xFDB
 19707                           fsr2h	equ	0xFDA
 19708                           fsr2l	equ	0xFD9
 19709                           status	equ	0xFD8
 19710                           
 19711 ;; *************** function _EUSART2_Read *****************
 19712 ;; Defined at:
 19713 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 19714 ;; Parameters:    Size  Location     Type
 19715 ;;		None
 19716 ;; Auto vars:     Size  Location     Type
 19717 ;;  readValue       1   23[BANK1 ] unsigned char 
 19718 ;; Return value:  Size  Location     Type
 19719 ;;                  1    wreg      unsigned char 
 19720 ;; Registers used:
 19721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19722 ;; Tracked objects:
 19723 ;;		On entry : 0/0
 19724 ;;		On exit  : 0/0
 19725 ;;		Unchanged: 0/0
 19726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19728 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19730 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19731 ;;Total ram usage:        1 bytes
 19732 ;; Hardware stack levels used:    1
 19733 ;; Hardware stack levels required when called:   13
 19734 ;; This function calls:
 19735 ;;		Nothing
 19736 ;; This function is called by:
 19737 ;;		_terminal_ringBufferPull
 19738 ;;		_getch
 19739 ;; This function uses a non-reentrant model
 19740 ;;
 19741                           
 19742                           	psect	text27
 19743  018E28                     __ptext27:
 19744                           	opt stack 0
 19745  018E28                     _EUSART2_Read:
 19746                           	opt stack 16
 19747                           
 19748                           ;eusart2.c: 139: uint8_t readValue = 0;
 19749                           
 19750                           ;incstack = 0
 19751  018E28  0E00               	movlw	0
 19752  018E2A  0101               	movlb	1	; () banked
 19753  018E2C  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 19754                           
 19755                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 19756  018E2E  D002               	goto	l395
 19757  018E30                     l396:
 19758                           
 19759                           ; BSR set to: 1
 19760  018E30  0004               	clrwdt		;# 
 19761                           
 19762                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 19763  018E32  827E               	bsf	3966,1,c	;volatile
 19764  018E34                     l395:
 19765  018E34  0101               	movlb	1	; () banked
 19766  018E36  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 19767  018E38  B4D8               	btfsc	status,2,c
 19768  018E3A  D7FA               	goto	l396
 19769                           
 19770                           ; BSR set to: 1
 19771                           ;eusart2.c: 145: }
 19772                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 19773  018E3C  927E               	bcf	3966,1,c	;volatile
 19774                           
 19775                           ; BSR set to: 1
 19776                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 19777  018E3E  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 19778  018E40  0D01               	mullw	1
 19779  018E42  0E80               	movlw	low _eusart2RxBuffer
 19780  018E44  24F3               	addwf	prodl,w,c
 19781  018E46  6ED9               	movwf	fsr2l,c
 19782  018E48  0E03               	movlw	high _eusart2RxBuffer
 19783  018E4A  20F4               	addwfc	prodh,w,c
 19784  018E4C  6EDA               	movwf	fsr2h,c
 19785  018E4E  50DF               	movf	indf2,w,c
 19786  018E50  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 19787                           
 19788                           ; BSR set to: 1
 19789  018E52  2BE0               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 19790                           
 19791                           ; BSR set to: 1
 19792                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 19793  018E54  0E3F               	movlw	63
 19794  018E56  65E0               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 19795  018E58  D002               	goto	l398
 19796                           
 19797                           ; BSR set to: 1
 19798                           ;eusart2.c: 151: {
 19799                           ;eusart2.c: 152: eusart2RxTail = 0;
 19800  018E5A  0E00               	movlw	0
 19801  018E5C  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 19802  018E5E                     l398:
 19803                           
 19804                           ; BSR set to: 1
 19805                           ;eusart2.c: 153: }
 19806                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 19807                           
 19808                           ; BSR set to: 1
 19809  018E5E  010E               	movlb	14	; () banked
 19810  018E60  9F2C               	bcf	44,7,b	;volatile
 19811                           
 19812                           ; BSR set to: 14
 19813                           ;eusart2.c: 155: eusart2RxCount--;
 19814  018E62  0101               	movlb	1	; () banked
 19815  018E64  07DF               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 19816                           
 19817                           ; BSR set to: 1
 19818                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 19819  018E66  010E               	movlb	14	; () banked
 19820  018E68  8F2C               	bsf	44,7,b	;volatile
 19821                           
 19822                           ; BSR set to: 14
 19823                           ;eusart2.c: 158: return readValue;
 19824  018E6A  0101               	movlb	1	; () banked
 19825  018E6C  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 19826  018E6E  0012               	return	
 19827  018E70                     __end_of_EUSART2_Read:
 19828                           	opt stack 0
 19829                           tblptru	equ	0xFF8
 19830                           tblptrh	equ	0xFF7
 19831                           tblptrl	equ	0xFF6
 19832                           tablat	equ	0xFF5
 19833                           prodh	equ	0xFF4
 19834                           prodl	equ	0xFF3
 19835                           intcon	equ	0xFF2
 19836                           indf0	equ	0xFEF
 19837                           postinc0	equ	0xFEE
 19838                           fsr0h	equ	0xFEA
 19839                           fsr0l	equ	0xFE9
 19840                           wreg	equ	0xFE8
 19841                           indf1	equ	0xFE7
 19842                           postdec1	equ	0xFE5
 19843                           plusw1	equ	0xFE3
 19844                           fsr1h	equ	0xFE2
 19845                           fsr1l	equ	0xFE1
 19846                           indf2	equ	0xFDF
 19847                           postinc2	equ	0xFDE
 19848                           postdec2	equ	0xFDD
 19849                           plusw2	equ	0xFDB
 19850                           fsr2h	equ	0xFDA
 19851                           fsr2l	equ	0xFD9
 19852                           status	equ	0xFD8
 19853                           
 19854 ;; *************** function _terminal_clearTerminal *****************
 19855 ;; Defined at:
 19856 ;;		line 80 in file "ring_buffer_interface.c"
 19857 ;; Parameters:    Size  Location     Type
 19858 ;;		None
 19859 ;; Auto vars:     Size  Location     Type
 19860 ;;		None
 19861 ;; Return value:  Size  Location     Type
 19862 ;;                  1    wreg      void 
 19863 ;; Registers used:
 19864 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19865 ;; Tracked objects:
 19866 ;;		On entry : 0/0
 19867 ;;		On exit  : 0/0
 19868 ;;		Unchanged: 0/0
 19869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19874 ;;Total ram usage:        0 bytes
 19875 ;; Hardware stack levels used:    1
 19876 ;; Hardware stack levels required when called:   16
 19877 ;; This function calls:
 19878 ;;		_printf
 19879 ;; This function is called by:
 19880 ;;		_main
 19881 ;; This function uses a non-reentrant model
 19882 ;;
 19883                           
 19884                           	psect	text28
 19885  0195E2                     __ptext28:
 19886                           	opt stack 0
 19887  0195E2                     _terminal_clearTerminal:
 19888                           	opt stack 14
 19889                           
 19890                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 19891                           
 19892                           ; BSR set to: 1
 19893                           ;incstack = 0
 19894  0195E2  0EAF               	movlw	low STR_2
 19895  0195E4  0101               	movlb	1	; () banked
 19896  0195E6  6F82               	movwf	printf@f& (0+255),b
 19897  0195E8  0EFF               	movlw	high STR_2
 19898  0195EA  6F83               	movwf	(printf@f+1)& (0+255),b
 19899  0195EC  EC0F  F08A         	call	_printf	;wreg free
 19900  0195F0  0012               	return		;funcret
 19901  0195F2                     __end_of_terminal_clearTerminal:
 19902                           	opt stack 0
 19903                           tblptru	equ	0xFF8
 19904                           tblptrh	equ	0xFF7
 19905                           tblptrl	equ	0xFF6
 19906                           tablat	equ	0xFF5
 19907                           prodh	equ	0xFF4
 19908                           prodl	equ	0xFF3
 19909                           intcon	equ	0xFF2
 19910                           indf0	equ	0xFEF
 19911                           postinc0	equ	0xFEE
 19912                           fsr0h	equ	0xFEA
 19913                           fsr0l	equ	0xFE9
 19914                           wreg	equ	0xFE8
 19915                           indf1	equ	0xFE7
 19916                           postdec1	equ	0xFE5
 19917                           plusw1	equ	0xFE3
 19918                           fsr1h	equ	0xFE2
 19919                           fsr1l	equ	0xFE1
 19920                           indf2	equ	0xFDF
 19921                           postinc2	equ	0xFDE
 19922                           postdec2	equ	0xFDD
 19923                           plusw2	equ	0xFDB
 19924                           fsr2h	equ	0xFDA
 19925                           fsr2l	equ	0xFD9
 19926                           status	equ	0xFD8
 19927                           
 19928 ;; *************** function _printf *****************
 19929 ;; Defined at:
 19930 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19931 ;; Parameters:    Size  Location     Type
 19932 ;;  f               2  130[BANK1 ] PTR const unsigned char 
 19933 ;;		 -> STR_152(30), STR_151(46), STR_150(39), STR_149(62), 
 19934 ;;		 -> STR_148(55), STR_147(470), STR_145(2974), STR_143(492), 
 19935 ;;		 -> STR_141(688), STR_139(720), STR_137(922), STR_135(54), 
 19936 ;;		 -> STR_133(54), STR_131(45), STR_129(51), STR_127(52), 
 19937 ;;		 -> STR_125(46), STR_123(51), STR_121(53), STR_119(58), 
 19938 ;;		 -> STR_117(71), STR_116(63), STR_115(37), STR_114(46), 
 19939 ;;		 -> STR_113(102), STR_112(86), STR_110(25), STR_108(42), 
 19940 ;;		 -> STR_107(53), STR_106(31), STR_104(29), STR_103(28), 
 19941 ;;		 -> STR_101(42), STR_99(41), STR_97(40), STR_95(73), 
 19942 ;;		 -> STR_93(56), STR_91(34), STR_89(34), STR_87(32), 
 19943 ;;		 -> STR_85(37), STR_83(58), STR_81(36), STR_79(36), 
 19944 ;;		 -> STR_77(37), STR_75(45), STR_74(66), STR_72(21), 
 19945 ;;		 -> STR_70(24), STR_69(48), STR_59(54), STR_58(64), 
 19946 ;;		 -> STR_56(59), STR_54(85), STR_52(47), STR_51(17), 
 19947 ;;		 -> STR_48(52), STR_46(4), STR_45(5), STR_43(4), 
 19948 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 19949 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 19950 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 19951 ;;		 -> STR_1(4), 
 19952 ;; Auto vars:     Size  Location     Type
 19953 ;;  idx             1  150[BANK1 ] unsigned char 
 19954 ;;  val             4  167[BANK1 ] unsigned long 
 19955 ;;  fval            4  163[BANK1 ] unsigned long 
 19956 ;;  tmpval          4  157[BANK1 ] struct .
 19957 ;;  prec            2  175[BANK1 ] int 
 19958 ;;  width           2  173[BANK1 ] int 
 19959 ;;  flag            2  171[BANK1 ] unsigned short 
 19960 ;;  exp             2  161[BANK1 ] int 
 19961 ;;  ap              2  155[BANK1 ] PTR void [1]
 19962 ;;		 -> ?i2_printf(2), ?_printf(2), 
 19963 ;;  len             2  153[BANK1 ] unsigned int 
 19964 ;;  cp              2  151[BANK1 ] PTR const unsigned char 
 19965 ;;		 -> STR_166(7), printf@c(1), STR_165(16), STR_164(22), 
 19966 ;;		 -> STR_163(21), STR_162(27), STR_161(41), STR_160(32), 
 19967 ;;		 -> STR_159(19), STR_158(16), STR_157(15), STR_156(16), 
 19968 ;;		 -> STR_155(10), STR_154(13), STR_153(12), ringBufferLUT@channel_name(22), 
 19969 ;;		 -> TRIAC_Firing_Angle(4), 
 19970 ;;  c               1  177[BANK1 ] char 
 19971 ;;  d               1    0        unsigned char 
 19972 ;; Return value:  Size  Location     Type
 19973 ;;                  2  130[BANK1 ] int 
 19974 ;; Registers used:
 19975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19976 ;; Tracked objects:
 19977 ;;		On entry : 0/0
 19978 ;;		On exit  : 0/0
 19979 ;;		Unchanged: 0/0
 19980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19981 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19982 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19983 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19984 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19985 ;;Total ram usage:       48 bytes
 19986 ;; Hardware stack levels used:    1
 19987 ;; Hardware stack levels required when called:   15
 19988 ;; This function calls:
 19989 ;;		___awdiv
 19990 ;;		___fladd
 19991 ;;		___flge
 19992 ;;		___flmul
 19993 ;;		___flneg
 19994 ;;		___flsub
 19995 ;;		___fltol
 19996 ;;		___lldiv
 19997 ;;		___llmod
 19998 ;;		___wmul
 19999 ;;		___xxtofl
 20000 ;;		__div_to_l_
 20001 ;;		__tdiv_to_l_
 20002 ;;		_fround
 20003 ;;		_isdigit
 20004 ;;		_putch
 20005 ;;		_scale
 20006 ;; This function is called by:
 20007 ;;		_terminal_clearTerminal
 20008 ;;		_terminal_setCursorHome
 20009 ;;		_terminal_textAttributes
 20010 ;;		_terminal_printNewline
 20011 ;;		_ringBufferLUT
 20012 ;;		_terminal_printResetMessage
 20013 ;;		_terminal_clearLine
 20014 ;;		_terminal_saveCursor
 20015 ;;		_terminal_returnCursor
 20016 ;; This function uses a non-reentrant model
 20017 ;;
 20018                           
 20019                           	psect	text29
 20020  01141E                     __ptext29:
 20021                           	opt stack 0
 20022  01141E                     _printf:
 20023                           	opt stack 13
 20024                           
 20025                           ;doprnt.c: 466: va_list ap;
 20026                           ;doprnt.c: 499: signed char c;
 20027                           ;doprnt.c: 501: int width;
 20028                           ;doprnt.c: 504: int prec;
 20029                           ;doprnt.c: 508: unsigned short flag;
 20030                           ;doprnt.c: 515: char d;
 20031                           ;doprnt.c: 516: double fval;
 20032                           ;doprnt.c: 517: int exp;
 20033                           ;doprnt.c: 523: union {
 20034                           ;doprnt.c: 524: unsigned long vd;
 20035                           ;doprnt.c: 525: double integ;
 20036                           ;doprnt.c: 526: } tmpval;
 20037                           ;doprnt.c: 528: unsigned long val;
 20038                           ;doprnt.c: 529: unsigned len;
 20039                           ;doprnt.c: 530: const char * cp;
 20040                           ;doprnt.c: 533: *ap = __va_start();
 20041                           
 20042                           ;incstack = 0
 20043  01141E  0E84               	movlw	low (?_printf+2)
 20044  011420  0101               	movlb	1	; () banked
 20045  011422  6F9B               	movwf	printf@ap& (0+255),b
 20046  011424  0E01               	movlw	high (?_printf+2)
 20047  011426  6F9C               	movwf	(printf@ap+1)& (0+255),b
 20048                           
 20049                           ;doprnt.c: 536: while(c = *f++) {
 20050  011428  EFD7  F090         	goto	u25840
 20051  01142C                     
 20052                           ; BSR set to: 1
 20053                           ;doprnt.c: 538: if(c != '%')
 20054                           
 20055                           ; BSR set to: 1
 20056  01142C  0E25               	movlw	37
 20057  01142E  19B1               	xorwf	printf@c& (0+255),w,b
 20058  011430  B4D8               	btfsc	status,2,c
 20059  011432  D005               	goto	l1546
 20060                           
 20061                           ; BSR set to: 1
 20062                           ;doprnt.c: 540: {
 20063                           ;doprnt.c: 541: (putch(c) );
 20064  011434  51B1               	movf	printf@c& (0+255),w,b
 20065  011436  EC01  F0CB         	call	_putch
 20066                           
 20067                           ;doprnt.c: 542: continue;
 20068  01143A  EFD7  F090         	goto	u25840
 20069  01143E                     l1546:
 20070                           
 20071                           ;doprnt.c: 543: }
 20072                           ;doprnt.c: 546: width = 0;
 20073  01143E  0E00               	movlw	0
 20074  011440  0101               	movlb	1	; () banked
 20075  011442  6FAE               	movwf	(printf@width+1)& (0+255),b
 20076  011444  0E00               	movlw	0
 20077  011446  6FAD               	movwf	printf@width& (0+255),b
 20078                           
 20079                           ;doprnt.c: 548: flag = 0;
 20080  011448  0E00               	movlw	0
 20081  01144A  6FAC               	movwf	(printf@flag+1)& (0+255),b
 20082  01144C  0E00               	movlw	0
 20083  01144E  6FAB               	movwf	printf@flag& (0+255),b
 20084                           
 20085                           ; BSR set to: 1
 20086                           ;doprnt.c: 551: switch(*f) {
 20087                           
 20088                           ;doprnt.c: 550: for(;;) {
 20089  011450  D004               	goto	l1548
 20090  011452                     
 20091                           ;doprnt.c: 580: flag |= 0x04;
 20092                           
 20093                           ; BSR set to: 1
 20094  011452  0101               	movlb	1	; () banked
 20095  011454  85AB               	bsf	printf@flag& (0+255),2,b
 20096                           
 20097                           ;doprnt.c: 581: f++;
 20098  011456  4B82               	infsnz	printf@f& (0+255),f,b
 20099  011458  2B83               	incf	(printf@f+1)& (0+255),f,b
 20100  01145A                     l1548:
 20101                           
 20102                           ; BSR set to: 1
 20103  01145A  C182  FFF6         	movff	printf@f,tblptrl
 20104  01145E  C183  FFF7         	movff	printf@f+1,tblptrh
 20105  011462  0E00               	movlw	low (__mediumconst shr (0+16))
 20106  011464  6EF8               	movwf	tblptru,c
 20107  011466  0E0D               	movlw	(high __ramtop+-1)
 20108  011468  64F7               	cpfsgt	tblptrh,c
 20109  01146A  D003               	bra	u25107
 20110  01146C  0008               	tblrd		*
 20111  01146E  50F5               	movf	tablat,w,c
 20112  011470  D005               	bra	u25100
 20113  011472                     u25107:
 20114  011472  CFF6 FFE9          	movff	tblptrl,fsr0l
 20115  011476  CFF7 FFEA          	movff	tblptrh,fsr0h
 20116  01147A  50EF               	movf	indf0,w,c
 20117  01147C                     u25100:
 20118                           
 20119                           ; Switch size 1, requested type "space"
 20120                           ; Number of cases is 1, Range of values is 48 to 48
 20121                           ; switch strategies available:
 20122                           ; Name         Instructions Cycles
 20123                           ; simple_byte            4     3 (average)
 20124                           ;	Chosen strategy is simple_byte
 20125  01147C  0A30               	xorlw	48	; case 48
 20126  01147E  B4D8               	btfsc	status,2,c
 20127  011480  D7E8               	goto	l1549
 20128                           
 20129                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 20130                           
 20131                           ;doprnt.c: 586: }
 20132                           
 20133                           ;doprnt.c: 585: break;
 20134  011482  C182  FFF6         	movff	printf@f,tblptrl
 20135  011486  C183  FFF7         	movff	printf@f+1,tblptrh
 20136  01148A  0E00               	movlw	low (__mediumconst shr (0+16))
 20137  01148C  6EF8               	movwf	tblptru,c
 20138  01148E  0E0D               	movlw	(high __ramtop+-1)
 20139  011490  64F7               	cpfsgt	tblptrh,c
 20140  011492  D003               	bra	u25117
 20141  011494  0008               	tblrd		*
 20142  011496  50F5               	movf	tablat,w,c
 20143  011498  D005               	bra	u25110
 20144  01149A                     u25117:
 20145  01149A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20146  01149E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20147  0114A2  50EF               	movf	indf0,w,c
 20148  0114A4                     u25110:
 20149  0114A4  EC21  F0CA         	call	_isdigit
 20150  0114A8  A0D8               	btfss	status,0,c
 20151  0114AA  D04C               	goto	u25150
 20152                           
 20153                           ;doprnt.c: 598: width = 0;
 20154  0114AC  0E00               	movlw	0
 20155  0114AE  0101               	movlb	1	; () banked
 20156  0114B0  6FAE               	movwf	(printf@width+1)& (0+255),b
 20157  0114B2  0E00               	movlw	0
 20158  0114B4  6FAD               	movwf	printf@width& (0+255),b
 20159  0114B6                     
 20160                           ;doprnt.c: 600: width *= 10;
 20161                           
 20162                           ; BSR set to: 1
 20163  0114B6  C1AD  F117         	movff	printf@width,___wmul@multiplier
 20164  0114BA  C1AE  F118         	movff	printf@width+1,___wmul@multiplier+1
 20165  0114BE  0E00               	movlw	0
 20166  0114C0  0101               	movlb	1	; () banked
 20167  0114C2  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20168  0114C4  0E0A               	movlw	10
 20169  0114C6  6F19               	movwf	___wmul@multiplicand& (0+255),b
 20170  0114C8  EC88  F0C9         	call	___wmul	;wreg free
 20171  0114CC  C117  F1AD         	movff	?___wmul,printf@width
 20172  0114D0  C118  F1AE         	movff	?___wmul+1,printf@width+1
 20173                           
 20174                           ;doprnt.c: 601: width += *f++ - '0';
 20175  0114D4  0ED0               	movlw	208
 20176  0114D6  0101               	movlb	1	; () banked
 20177  0114D8  6F8C               	movwf	??_printf& (0+255),b
 20178  0114DA  0EFF               	movlw	255
 20179  0114DC  6F8D               	movwf	(??_printf+1)& (0+255),b
 20180  0114DE  C182  FFF6         	movff	printf@f,tblptrl
 20181  0114E2  C183  FFF7         	movff	printf@f+1,tblptrh
 20182  0114E6  0E00               	movlw	low (__mediumconst shr (0+16))
 20183  0114E8  6EF8               	movwf	tblptru,c
 20184  0114EA  0E0D               	movlw	(high __ramtop+-1)
 20185  0114EC  64F7               	cpfsgt	tblptrh,c
 20186  0114EE  D003               	bra	u25137
 20187  0114F0  0008               	tblrd		*
 20188  0114F2  50F5               	movf	tablat,w,c
 20189  0114F4  D005               	bra	u25130
 20190  0114F6                     u25137:
 20191  0114F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 20192  0114FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 20193  0114FE  50EF               	movf	indf0,w,c
 20194  011500                     u25130:
 20195  011500  0101               	movlb	1	; () banked
 20196  011502  6F8E               	movwf	(??_printf+2)& (0+255),b
 20197  011504  6B8F               	clrf	(??_printf+3)& (0+255),b
 20198  011506  518C               	movf	??_printf& (0+255),w,b
 20199  011508  278E               	addwf	(??_printf+2)& (0+255),f,b
 20200  01150A  518D               	movf	(??_printf+1)& (0+255),w,b
 20201  01150C  238F               	addwfc	(??_printf+3)& (0+255),f,b
 20202  01150E  518E               	movf	(??_printf+2)& (0+255),w,b
 20203  011510  27AD               	addwf	printf@width& (0+255),f,b
 20204  011512  518F               	movf	(??_printf+3)& (0+255),w,b
 20205  011514  23AE               	addwfc	(printf@width+1)& (0+255),f,b
 20206                           
 20207                           ; BSR set to: 1
 20208  011516  4B82               	infsnz	printf@f& (0+255),f,b
 20209  011518  2B83               	incf	(printf@f+1)& (0+255),f,b
 20210                           
 20211                           ; BSR set to: 1
 20212                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20213  01151A  C182  FFF6         	movff	printf@f,tblptrl
 20214  01151E  C183  FFF7         	movff	printf@f+1,tblptrh
 20215  011522  0E00               	movlw	low (__mediumconst shr (0+16))
 20216  011524  6EF8               	movwf	tblptru,c
 20217  011526  0E0D               	movlw	(high __ramtop+-1)
 20218  011528  64F7               	cpfsgt	tblptrh,c
 20219  01152A  D003               	bra	u25147
 20220  01152C  0008               	tblrd		*
 20221  01152E  50F5               	movf	tablat,w,c
 20222  011530  D005               	bra	u25140
 20223  011532                     u25147:
 20224  011532  CFF6 FFE9          	movff	tblptrl,fsr0l
 20225  011536  CFF7 FFEA          	movff	tblptrh,fsr0h
 20226  01153A  50EF               	movf	indf0,w,c
 20227  01153C                     u25140:
 20228  01153C  EC21  F0CA         	call	_isdigit
 20229  011540  B0D8               	btfsc	status,0,c
 20230  011542  D7B9               	goto	l1554
 20231  011544                     u25150:
 20232                           
 20233                           ;doprnt.c: 608: }
 20234                           ;doprnt.c: 611: if(*f == '.') {
 20235  011544  C182  FFF6         	movff	printf@f,tblptrl
 20236  011548  C183  FFF7         	movff	printf@f+1,tblptrh
 20237  01154C  0E00               	movlw	low (__mediumconst shr (0+16))
 20238  01154E  6EF8               	movwf	tblptru,c
 20239  011550  0E0D               	movlw	(high __ramtop+-1)
 20240  011552  64F7               	cpfsgt	tblptrh,c
 20241  011554  D003               	bra	u25167
 20242  011556  0008               	tblrd		*
 20243  011558  50F5               	movf	tablat,w,c
 20244  01155A  D005               	bra	u25160
 20245  01155C                     u25167:
 20246  01155C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20247  011560  CFF7 FFEA          	movff	tblptrh,fsr0h
 20248  011564  50EF               	movf	indf0,w,c
 20249  011566                     u25160:
 20250  011566  0A2E               	xorlw	46
 20251  011568  A4D8               	btfss	status,2,c
 20252  01156A  D049               	goto	l1556
 20253                           
 20254                           ;doprnt.c: 612: flag |= 0x4000;
 20255  01156C  0101               	movlb	1	; () banked
 20256  01156E  8DAC               	bsf	(printf@flag+1)& (0+255),6,b
 20257                           
 20258                           ;doprnt.c: 613: f++;
 20259  011570  4B82               	infsnz	printf@f& (0+255),f,b
 20260  011572  2B83               	incf	(printf@f+1)& (0+255),f,b
 20261                           
 20262                           ; BSR set to: 1
 20263                           ;doprnt.c: 620: {
 20264                           ;doprnt.c: 621: prec = 0;
 20265  011574  0E00               	movlw	0
 20266  011576  6FB0               	movwf	(printf@prec+1)& (0+255),b
 20267  011578  0E00               	movlw	0
 20268  01157A  6FAF               	movwf	printf@prec& (0+255),b
 20269                           
 20270                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 20271  01157C  D02A               	goto	l1557
 20272  01157E                     
 20273                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 20274                           
 20275                           ; BSR set to: 1
 20276  01157E  C1AF  F117         	movff	printf@prec,___wmul@multiplier
 20277  011582  C1B0  F118         	movff	printf@prec+1,___wmul@multiplier+1
 20278  011586  0E00               	movlw	0
 20279  011588  0101               	movlb	1	; () banked
 20280  01158A  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20281  01158C  0E0A               	movlw	10
 20282  01158E  6F19               	movwf	___wmul@multiplicand& (0+255),b
 20283  011590  EC88  F0C9         	call	___wmul	;wreg free
 20284  011594  C182  FFF6         	movff	printf@f,tblptrl
 20285  011598  C183  FFF7         	movff	printf@f+1,tblptrh
 20286  01159C  0E00               	movlw	low (__mediumconst shr (0+16))
 20287  01159E  6EF8               	movwf	tblptru,c
 20288  0115A0  0E0D               	movlw	(high __ramtop+-1)
 20289  0115A2  64F7               	cpfsgt	tblptrh,c
 20290  0115A4  D003               	bra	u25187
 20291  0115A6  0008               	tblrd		*
 20292  0115A8  50F5               	movf	tablat,w,c
 20293  0115AA  D005               	bra	u25180
 20294  0115AC                     u25187:
 20295  0115AC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20296  0115B0  CFF7 FFEA          	movff	tblptrh,fsr0h
 20297  0115B4  50EF               	movf	indf0,w,c
 20298  0115B6                     u25180:
 20299  0115B6  0101               	movlb	1	; () banked
 20300  0115B8  6F8C               	movwf	??_printf& (0+255),b
 20301  0115BA  518C               	movf	??_printf& (0+255),w,b
 20302  0115BC  2717               	addwf	?___wmul& (0+255),f,b
 20303  0115BE  0E00               	movlw	0
 20304  0115C0  2318               	addwfc	(?___wmul+1)& (0+255),f,b
 20305  0115C2  0ED0               	movlw	208
 20306  0115C4  2517               	addwf	?___wmul& (0+255),w,b
 20307  0115C6  6FAF               	movwf	printf@prec& (0+255),b
 20308  0115C8  0EFF               	movlw	255
 20309  0115CA  2118               	addwfc	(?___wmul+1)& (0+255),w,b
 20310  0115CC  6FB0               	movwf	(printf@prec+1)& (0+255),b
 20311                           
 20312                           ; BSR set to: 1
 20313  0115CE  4B82               	infsnz	printf@f& (0+255),f,b
 20314  0115D0  2B83               	incf	(printf@f+1)& (0+255),f,b
 20315  0115D2                     l1557:
 20316                           
 20317                           ; BSR set to: 1
 20318                           
 20319                           ; BSR set to: 1
 20320  0115D2  C182  FFF6         	movff	printf@f,tblptrl
 20321  0115D6  C183  FFF7         	movff	printf@f+1,tblptrh
 20322  0115DA  0E00               	movlw	low (__mediumconst shr (0+16))
 20323  0115DC  6EF8               	movwf	tblptru,c
 20324  0115DE  0E0D               	movlw	(high __ramtop+-1)
 20325  0115E0  64F7               	cpfsgt	tblptrh,c
 20326  0115E2  D003               	bra	u25197
 20327  0115E4  0008               	tblrd		*
 20328  0115E6  50F5               	movf	tablat,w,c
 20329  0115E8  D005               	bra	u25190
 20330  0115EA                     u25197:
 20331  0115EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 20332  0115EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 20333  0115F2  50EF               	movf	indf0,w,c
 20334  0115F4                     u25190:
 20335  0115F4  EC21  F0CA         	call	_isdigit
 20336  0115F8  A0D8               	btfss	status,0,c
 20337  0115FA  D0A4               	goto	l1561
 20338  0115FC  D7C0               	goto	l1558
 20339  0115FE                     l1556:
 20340                           
 20341                           ;doprnt.c: 626: prec = 0;
 20342  0115FE  0E00               	movlw	0
 20343  011600  0101               	movlb	1	; () banked
 20344  011602  6FB0               	movwf	(printf@prec+1)& (0+255),b
 20345  011604  0E00               	movlw	0
 20346  011606  6FAF               	movwf	printf@prec& (0+255),b
 20347                           
 20348                           ; BSR set to: 1
 20349                           ;doprnt.c: 628: flag |= 0x1000;
 20350  011608  89AC               	bsf	(printf@flag+1)& (0+255),4,b
 20351                           
 20352                           ; BSR set to: 1
 20353                           ;doprnt.c: 630: }
 20354                           ;doprnt.c: 635: switch(c = *f++) {
 20355  01160A  D09C               	goto	l1561
 20356  01160C                     
 20357                           ; BSR set to: 1
 20358                           ;doprnt.c: 663: flag |= 0x400;
 20359                           
 20360                           ; BSR set to: 1
 20361  01160C  85AC               	bsf	(printf@flag+1)& (0+255),2,b
 20362                           
 20363                           ; BSR set to: 1
 20364                           ;doprnt.c: 698: case 'i':
 20365                           ;doprnt.c: 699: break;
 20366                           
 20367                           ; BSR set to: 1
 20368                           
 20369                           ;doprnt.c: 697: case 'd':
 20370                           
 20371                           ;doprnt.c: 664: break;
 20372  01160E  D0D1               	goto	l1565
 20373  011610                     
 20374                           ; BSR set to: 1
 20375                           ;doprnt.c: 718: case 'x':
 20376                           ;doprnt.c: 721: flag |= 0x80;
 20377                           
 20378                           ; BSR set to: 1
 20379                           
 20380                           ; BSR set to: 1
 20381  011610  8FAB               	bsf	printf@flag& (0+255),7,b
 20382                           
 20383                           ;doprnt.c: 723: break;
 20384  011612  D0CF               	goto	l1565
 20385  011614                     
 20386                           ; BSR set to: 1
 20387                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 20388                           
 20389                           ; BSR set to: 1
 20390  011614  C19B  FFD9         	movff	printf@ap,fsr2l
 20391  011618  C19C  FFDA         	movff	printf@ap+1,fsr2h
 20392  01161C  CFDE F197          	movff	postinc2,printf@cp
 20393  011620  CFDD F198          	movff	postdec2,printf@cp+1
 20394                           
 20395                           ; BSR set to: 1
 20396  011624  0E02               	movlw	2
 20397  011626  279B               	addwf	printf@ap& (0+255),f,b
 20398  011628  0E00               	movlw	0
 20399  01162A  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 20400                           
 20401                           ; BSR set to: 1
 20402                           ;doprnt.c: 740: if(!cp)
 20403  01162C  5197               	movf	printf@cp& (0+255),w,b
 20404  01162E  1198               	iorwf	(printf@cp+1)& (0+255),w,b
 20405  011630  A4D8               	btfss	status,2,c
 20406  011632  D004               	goto	l1571
 20407                           
 20408                           ; BSR set to: 1
 20409                           ;doprnt.c: 741: cp = "(null)";
 20410  011634  0E85               	movlw	low STR_166
 20411  011636  6F97               	movwf	printf@cp& (0+255),b
 20412  011638  0EFF               	movlw	high STR_166
 20413  01163A  6F98               	movwf	(printf@cp+1)& (0+255),b
 20414  01163C                     l1571:
 20415                           
 20416                           ; BSR set to: 1
 20417                           ;doprnt.c: 745: len = 0;
 20418                           
 20419                           ; BSR set to: 1
 20420  01163C  0E00               	movlw	0
 20421  01163E  6F9A               	movwf	(printf@len+1)& (0+255),b
 20422  011640  0E00               	movlw	0
 20423  011642  6F99               	movwf	printf@len& (0+255),b
 20424                           
 20425                           ;doprnt.c: 746: while(cp[len])
 20426  011644  D003               	goto	l1572
 20427  011646                     
 20428                           ;doprnt.c: 747: len++;
 20429                           
 20430                           ; BSR set to: 1
 20431  011646  0101               	movlb	1	; () banked
 20432  011648  4B99               	infsnz	printf@len& (0+255),f,b
 20433  01164A  2B9A               	incf	(printf@len+1)& (0+255),f,b
 20434  01164C                     l1572:
 20435                           
 20436                           ; BSR set to: 1
 20437                           
 20438                           ; BSR set to: 1
 20439  01164C  5199               	movf	printf@len& (0+255),w,b
 20440  01164E  2597               	addwf	printf@cp& (0+255),w,b
 20441  011650  6F8C               	movwf	??_printf& (0+255),b
 20442  011652  519A               	movf	(printf@len+1)& (0+255),w,b
 20443  011654  2198               	addwfc	(printf@cp+1)& (0+255),w,b
 20444  011656  6F8D               	movwf	(??_printf+1)& (0+255),b
 20445  011658  C18C  FFF6         	movff	??_printf,tblptrl
 20446  01165C  C18D  FFF7         	movff	??_printf+1,tblptrh
 20447  011660  0E00               	movlw	low (__mediumconst shr (0+16))
 20448  011662  6EF8               	movwf	tblptru,c
 20449  011664  0E0D               	movlw	(high __ramtop+-1)
 20450  011666  64F7               	cpfsgt	tblptrh,c
 20451  011668  D003               	bra	u25227
 20452  01166A  0008               	tblrd		*
 20453  01166C  50F5               	movf	tablat,w,c
 20454  01166E  D005               	bra	u25220
 20455  011670                     u25227:
 20456  011670  CFF6 FFE9          	movff	tblptrl,fsr0l
 20457  011674  CFF7 FFEA          	movff	tblptrh,fsr0h
 20458  011678  50EF               	movf	indf0,w,c
 20459  01167A                     u25220:
 20460  01167A  0900               	iorlw	0
 20461  01167C  A4D8               	btfss	status,2,c
 20462  01167E  D7E3               	goto	l1573
 20463  011680                     u25230:
 20464                           
 20465                           ;doprnt.c: 753: if(prec && prec < len)
 20466                           
 20467                           ;doprnt.c: 750: dostring:
 20468  011680  0101               	movlb	1	; () banked
 20469  011682  51AF               	movf	printf@prec& (0+255),w,b
 20470  011684  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 20471  011686  B4D8               	btfsc	status,2,c
 20472  011688  D00A               	goto	l1576
 20473                           
 20474                           ; BSR set to: 1
 20475  01168A  5199               	movf	printf@len& (0+255),w,b
 20476  01168C  5DAF               	subwf	printf@prec& (0+255),w,b
 20477  01168E  519A               	movf	(printf@len+1)& (0+255),w,b
 20478  011690  59B0               	subwfb	(printf@prec+1)& (0+255),w,b
 20479  011692  B0D8               	btfsc	status,0,c
 20480  011694  D004               	goto	l1576
 20481                           
 20482                           ; BSR set to: 1
 20483                           ;doprnt.c: 754: len = prec;
 20484  011696  C1AF  F199         	movff	printf@prec,printf@len
 20485  01169A  C1B0  F19A         	movff	printf@prec+1,printf@len+1
 20486  01169E                     l1576:
 20487                           
 20488                           ; BSR set to: 1
 20489                           ;doprnt.c: 757: if(width > len)
 20490                           
 20491                           ; BSR set to: 1
 20492  01169E  51AD               	movf	printf@width& (0+255),w,b
 20493  0116A0  5D99               	subwf	printf@len& (0+255),w,b
 20494  0116A2  51AE               	movf	(printf@width+1)& (0+255),w,b
 20495  0116A4  599A               	subwfb	(printf@len+1)& (0+255),w,b
 20496  0116A6  B0D8               	btfsc	status,0,c
 20497  0116A8  D005               	goto	l1577
 20498                           
 20499                           ; BSR set to: 1
 20500                           ;doprnt.c: 758: width -= len;
 20501  0116AA  5199               	movf	printf@len& (0+255),w,b
 20502  0116AC  5FAD               	subwf	printf@width& (0+255),f,b
 20503  0116AE  519A               	movf	(printf@len+1)& (0+255),w,b
 20504  0116B0  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 20505  0116B2  D008               	goto	l1579
 20506  0116B4                     l1577:
 20507                           
 20508                           ; BSR set to: 1
 20509                           ;doprnt.c: 759: else
 20510                           ;doprnt.c: 760: width = 0;
 20511                           
 20512                           ; BSR set to: 1
 20513  0116B4  0E00               	movlw	0
 20514  0116B6  6FAE               	movwf	(printf@width+1)& (0+255),b
 20515  0116B8  0E00               	movlw	0
 20516  0116BA  6FAD               	movwf	printf@width& (0+255),b
 20517                           
 20518                           ; BSR set to: 1
 20519                           ;doprnt.c: 764: while(width--)
 20520  0116BC  D003               	goto	l1579
 20521  0116BE                     l19136:
 20522                           
 20523                           ; BSR set to: 1
 20524                           ;doprnt.c: 765: (putch(' ') );
 20525  0116BE  0E20               	movlw	32
 20526  0116C0  EC01  F0CB         	call	_putch
 20527  0116C4                     l1579:
 20528  0116C4  0101               	movlb	1	; () banked
 20529  0116C6  07AD               	decf	printf@width& (0+255),f,b
 20530  0116C8  A0D8               	btfss	status,0,c
 20531  0116CA  07AE               	decf	(printf@width+1)& (0+255),f,b
 20532  0116CC  29AD               	incf	printf@width& (0+255),w,b
 20533  0116CE  E1F7               	bnz	l19136
 20534  0116D0  29AE               	incf	(printf@width+1)& (0+255),w,b
 20535  0116D2  B4D8               	btfsc	status,2,c
 20536  0116D4  D017               	goto	l1582
 20537  0116D6  D7F3               	goto	l1580
 20538  0116D8                     l19140:
 20539                           
 20540                           ; BSR set to: 1
 20541                           ;doprnt.c: 768: (putch(*cp++) );
 20542  0116D8  C197  FFF6         	movff	printf@cp,tblptrl
 20543  0116DC  C198  FFF7         	movff	printf@cp+1,tblptrh
 20544  0116E0  0E00               	movlw	low (__mediumconst shr (0+16))
 20545  0116E2  6EF8               	movwf	tblptru,c
 20546  0116E4  0E0D               	movlw	(high __ramtop+-1)
 20547  0116E6  64F7               	cpfsgt	tblptrh,c
 20548  0116E8  D003               	bra	u25287
 20549  0116EA  0008               	tblrd		*
 20550  0116EC  50F5               	movf	tablat,w,c
 20551  0116EE  D005               	bra	u25280
 20552  0116F0                     u25287:
 20553  0116F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 20554  0116F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 20555  0116F8  50EF               	movf	indf0,w,c
 20556  0116FA                     u25280:
 20557  0116FA  EC01  F0CB         	call	_putch
 20558  0116FE  0101               	movlb	1	; () banked
 20559  011700  4B97               	infsnz	printf@cp& (0+255),f,b
 20560  011702  2B98               	incf	(printf@cp+1)& (0+255),f,b
 20561  011704                     l1582:
 20562                           
 20563                           ; BSR set to: 1
 20564                           
 20565                           ; BSR set to: 1
 20566  011704  0799               	decf	printf@len& (0+255),f,b
 20567  011706  A0D8               	btfss	status,0,c
 20568  011708  079A               	decf	(printf@len+1)& (0+255),f,b
 20569  01170A  2999               	incf	printf@len& (0+255),w,b
 20570  01170C  E1E5               	bnz	l19140
 20571  01170E  299A               	incf	(printf@len+1)& (0+255),w,b
 20572  011710  B4D8               	btfsc	status,2,c
 20573  011712  EFD7  F090         	goto	u25840
 20574  011716  D7E0               	goto	l1583
 20575  011718                     
 20576                           ; BSR set to: 1
 20577                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20578                           
 20579                           ; BSR set to: 1
 20580  011718  C19B  FFD9         	movff	printf@ap,fsr2l
 20581  01171C  C19C  FFDA         	movff	printf@ap+1,fsr2h
 20582  011720  50DF               	movf	indf2,w,c
 20583  011722  6FB1               	movwf	printf@c& (0+255),b
 20584                           
 20585                           ; BSR set to: 1
 20586  011724  0E02               	movlw	2
 20587  011726  279B               	addwf	printf@ap& (0+255),f,b
 20588  011728  0E00               	movlw	0
 20589  01172A  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 20590  01172C                     
 20591                           ; BSR set to: 1
 20592                           ;doprnt.c: 805: cp = (char *)&c;
 20593                           
 20594                           ; BSR set to: 1
 20595  01172C  0EB1               	movlw	low printf@c
 20596  01172E  6F97               	movwf	printf@cp& (0+255),b
 20597  011730  0E01               	movlw	high printf@c
 20598  011732  6F98               	movwf	(printf@cp+1)& (0+255),b
 20599                           
 20600                           ; BSR set to: 1
 20601                           ;doprnt.c: 806: len = 1;
 20602  011734  0E00               	movlw	0
 20603  011736  6F9A               	movwf	(printf@len+1)& (0+255),b
 20604  011738  0E01               	movlw	1
 20605  01173A  6F99               	movwf	printf@len& (0+255),b
 20606                           
 20607                           ;doprnt.c: 807: goto dostring;
 20608  01173C  D7A1               	goto	u25230
 20609  01173E                     
 20610                           ; BSR set to: 1
 20611                           ;doprnt.c: 818: flag |= 0xC0;
 20612                           
 20613                           ; BSR set to: 1
 20614  01173E  0EC0               	movlw	192
 20615  011740  13AB               	iorwf	printf@flag& (0+255),f,b
 20616                           
 20617                           ; BSR set to: 1
 20618                           ;doprnt.c: 822: }
 20619                           
 20620                           ;doprnt.c: 819: break;
 20621  011742  D037               	goto	l1565
 20622  011744                     l1561:
 20623                           
 20624                           ; BSR set to: 1
 20625  011744  0101               	movlb	1	; () banked
 20626  011746  5182               	movf	printf@f& (0+255),w,b
 20627  011748  6F8C               	movwf	??_printf& (0+255),b
 20628  01174A  5183               	movf	(printf@f+1)& (0+255),w,b
 20629  01174C  6F8D               	movwf	(??_printf+1)& (0+255),b
 20630  01174E  4B82               	infsnz	printf@f& (0+255),f,b
 20631  011750  2B83               	incf	(printf@f+1)& (0+255),f,b
 20632  011752  C18C  FFF6         	movff	??_printf,tblptrl
 20633  011756  C18D  FFF7         	movff	??_printf+1,tblptrh
 20634  01175A  0E00               	movlw	low (__mediumconst shr (0+16))
 20635  01175C  6EF8               	movwf	tblptru,c
 20636  01175E  0E0D               	movlw	(high __ramtop+-1)
 20637  011760  64F7               	cpfsgt	tblptrh,c
 20638  011762  D003               	bra	u25307
 20639  011764  0008               	tblrd		*
 20640  011766  50F5               	movf	tablat,w,c
 20641  011768  D005               	bra	u25300
 20642  01176A                     u25307:
 20643  01176A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20644  01176E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20645  011772  50EF               	movf	indf0,w,c
 20646  011774                     u25300:
 20647  011774  0101               	movlb	1	; () banked
 20648  011776  6FB1               	movwf	printf@c& (0+255),b
 20649  011778  51B1               	movf	printf@c& (0+255),w,b
 20650                           
 20651                           ; Switch size 1, requested type "space"
 20652                           ; Number of cases is 9, Range of values is 0 to 120
 20653                           ; switch strategies available:
 20654                           ; Name         Instructions Cycles
 20655                           ; simple_byte           28    15 (average)
 20656                           ;	Chosen strategy is simple_byte
 20657  01177A  0A00               	xorlw	0	; case 0
 20658  01177C  B4D8               	btfsc	status,2,c
 20659  01177E  0012               	return	
 20660  011780  0A58               	xorlw	88	; case 88
 20661  011782  B4D8               	btfsc	status,2,c
 20662  011784  D745               	goto	l1568
 20663  011786  0A3B               	xorlw	59	; case 99
 20664  011788  B4D8               	btfsc	status,2,c
 20665  01178A  D7C6               	goto	l1585
 20666  01178C  0A07               	xorlw	7	; case 100
 20667  01178E  B4D8               	btfsc	status,2,c
 20668  011790  D010               	goto	l1565
 20669  011792  0A02               	xorlw	2	; case 102
 20670  011794  B4D8               	btfsc	status,2,c
 20671  011796  D73A               	goto	l1564
 20672  011798  0A0F               	xorlw	15	; case 105
 20673  01179A  B4D8               	btfsc	status,2,c
 20674  01179C  D00A               	goto	l1565
 20675  01179E  0A1A               	xorlw	26	; case 115
 20676  0117A0  B4D8               	btfsc	status,2,c
 20677  0117A2  D738               	goto	l1570
 20678  0117A4  0A06               	xorlw	6	; case 117
 20679  0117A6  B4D8               	btfsc	status,2,c
 20680  0117A8  D7CA               	goto	l1587
 20681  0117AA  0A0D               	xorlw	13	; case 120
 20682  0117AC  B4D8               	btfsc	status,2,c
 20683  0117AE  D730               	goto	l1568
 20684  0117B0  D7BD               	goto	l1586
 20685  0117B2                     l1565:
 20686                           
 20687                           ; BSR set to: 1
 20688                           ;doprnt.c: 825: if(flag & (0x700)) {
 20689                           
 20690                           ; BSR set to: 1
 20691  0117B2  0E07               	movlw	7
 20692  0117B4  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 20693  0117B6  B4D8               	btfsc	status,2,c
 20694  0117B8  D33D               	goto	l1588
 20695                           
 20696                           ; BSR set to: 1
 20697                           ;doprnt.c: 827: if(flag & 0x1000)
 20698  0117BA  A9AC               	btfss	(printf@flag+1)& (0+255),4,b
 20699  0117BC  D004               	goto	l1589
 20700                           
 20701                           ; BSR set to: 1
 20702                           ;doprnt.c: 829: prec = 6;
 20703  0117BE  0E00               	movlw	0
 20704  0117C0  6FB0               	movwf	(printf@prec+1)& (0+255),b
 20705  0117C2  0E06               	movlw	6
 20706  0117C4  6FAF               	movwf	printf@prec& (0+255),b
 20707  0117C6                     l1589:
 20708                           
 20709                           ; BSR set to: 1
 20710                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 20711                           
 20712                           ; BSR set to: 1
 20713  0117C6  C19B  FFD9         	movff	printf@ap,fsr2l
 20714  0117CA  C19C  FFDA         	movff	printf@ap+1,fsr2h
 20715  0117CE  CFDE F1A3          	movff	postinc2,printf@fval
 20716  0117D2  CFDE F1A4          	movff	postinc2,printf@fval+1
 20717  0117D6  CFDE F1A5          	movff	postinc2,printf@fval+2
 20718  0117DA  CFDE F1A6          	movff	postinc2,printf@fval+3
 20719                           
 20720                           ; BSR set to: 1
 20721  0117DE  0E04               	movlw	4
 20722  0117E0  279B               	addwf	printf@ap& (0+255),f,b
 20723  0117E2  0E00               	movlw	0
 20724  0117E4  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 20725                           
 20726                           ; BSR set to: 1
 20727                           ;doprnt.c: 831: if(fval < 0.0) {
 20728  0117E6  AFA6               	btfss	(printf@fval+3)& (0+255),7,b
 20729  0117E8  D015               	goto	l1590
 20730                           
 20731                           ; BSR set to: 1
 20732                           ;doprnt.c: 832: fval = -fval;
 20733  0117EA  C1A3  F125         	movff	printf@fval,___flneg@f1
 20734  0117EE  C1A4  F126         	movff	printf@fval+1,___flneg@f1+1
 20735  0117F2  C1A5  F127         	movff	printf@fval+2,___flneg@f1+2
 20736  0117F6  C1A6  F128         	movff	printf@fval+3,___flneg@f1+3
 20737  0117FA  EC44  F0C9         	call	___flneg	;wreg free
 20738  0117FE  C125  F1A3         	movff	?___flneg,printf@fval
 20739  011802  C126  F1A4         	movff	?___flneg+1,printf@fval+1
 20740  011806  C127  F1A5         	movff	?___flneg+2,printf@fval+2
 20741  01180A  C128  F1A6         	movff	?___flneg+3,printf@fval+3
 20742                           
 20743                           ;doprnt.c: 833: flag |= 0x03;
 20744  01180E  0E03               	movlw	3
 20745  011810  0101               	movlb	1	; () banked
 20746  011812  13AB               	iorwf	printf@flag& (0+255),f,b
 20747  011814                     l1590:
 20748                           
 20749                           ; BSR set to: 1
 20750                           ;doprnt.c: 834: }
 20751                           ;doprnt.c: 835: exp = 0;
 20752                           
 20753                           ; BSR set to: 1
 20754  011814  0E00               	movlw	0
 20755  011816  6FA2               	movwf	(printf@exp+1)& (0+255),b
 20756  011818  0E00               	movlw	0
 20757  01181A  6FA1               	movwf	printf@exp& (0+255),b
 20758                           
 20759                           ; BSR set to: 1
 20760                           ;doprnt.c: 836: if( fval!=0) {
 20761  01181C  51A3               	movf	printf@fval& (0+255),w,b
 20762  01181E  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 20763  011820  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 20764  011822  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 20765  011824  B4D8               	btfsc	status,2,c
 20766  011826  D084               	goto	l1595
 20767                           
 20768                           ; BSR set to: 1
 20769                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 20770  011828  35A5               	rlcf	(printf@fval+2)& (0+255),w,b
 20771  01182A  35A6               	rlcf	(printf@fval+3)& (0+255),w,b
 20772  01182C  0F82               	addlw	130
 20773  01182E  6FA1               	movwf	printf@exp& (0+255),b
 20774  011830  6BA2               	clrf	(printf@exp+1)& (0+255),b
 20775  011832  0EFF               	movlw	255
 20776  011834  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 20777                           
 20778                           ; BSR set to: 1
 20779                           ;doprnt.c: 838: exp--;
 20780  011836  07A1               	decf	printf@exp& (0+255),f,b
 20781  011838  A0D8               	btfss	status,0,c
 20782  01183A  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20783                           
 20784                           ; BSR set to: 1
 20785                           ;doprnt.c: 839: exp *= 3;
 20786  01183C  C1A1  F117         	movff	printf@exp,___wmul@multiplier
 20787  011840  C1A2  F118         	movff	printf@exp+1,___wmul@multiplier+1
 20788  011844  0E00               	movlw	0
 20789  011846  6F1A               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20790  011848  0E03               	movlw	3
 20791  01184A  6F19               	movwf	___wmul@multiplicand& (0+255),b
 20792  01184C  EC88  F0C9         	call	___wmul	;wreg free
 20793  011850  C117  F1A1         	movff	?___wmul,printf@exp
 20794  011854  C118  F1A2         	movff	?___wmul+1,printf@exp+1
 20795                           
 20796                           ;doprnt.c: 840: exp /= 10;
 20797  011858  C1A1  F11D         	movff	printf@exp,___awdiv@dividend
 20798  01185C  C1A2  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 20799  011860  0E00               	movlw	0
 20800  011862  0101               	movlb	1	; () banked
 20801  011864  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 20802  011866  0E0A               	movlw	10
 20803  011868  6F1F               	movwf	___awdiv@divisor& (0+255),b
 20804  01186A  EC02  F0C2         	call	___awdiv	;wreg free
 20805  01186E  C11D  F1A1         	movff	?___awdiv,printf@exp
 20806  011872  C11E  F1A2         	movff	?___awdiv+1,printf@exp+1
 20807                           
 20808                           ;doprnt.c: 841: if(exp < 0)
 20809  011876  0101               	movlb	1	; () banked
 20810  011878  AFA2               	btfss	(printf@exp+1)& (0+255),7,b
 20811  01187A  D003               	goto	l1592
 20812                           
 20813                           ; BSR set to: 1
 20814                           ;doprnt.c: 842: exp--;
 20815  01187C  07A1               	decf	printf@exp& (0+255),f,b
 20816  01187E  A0D8               	btfss	status,0,c
 20817  011880  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20818  011882                     l1592:
 20819                           
 20820                           ; BSR set to: 1
 20821                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 20822                           
 20823                           ; BSR set to: 1
 20824  011882  51A1               	movf	printf@exp& (0+255),w,b
 20825  011884  0800               	sublw	0
 20826  011886  EC45  F09D         	call	_scale
 20827  01188A  C16F  F19D         	movff	?_scale,printf@tmpval
 20828  01188E  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 20829  011892  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 20830  011896  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 20831                           
 20832                           ;doprnt.c: 847: tmpval.integ *= fval;
 20833  01189A  C19D  F156         	movff	printf@tmpval,___flmul@b
 20834  01189E  C19E  F157         	movff	printf@tmpval+1,___flmul@b+1
 20835  0118A2  C19F  F158         	movff	printf@tmpval+2,___flmul@b+2
 20836  0118A6  C1A0  F159         	movff	printf@tmpval+3,___flmul@b+3
 20837  0118AA  C1A3  F15A         	movff	printf@fval,___flmul@a
 20838  0118AE  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 20839  0118B2  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 20840  0118B6  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 20841  0118BA  EC8B  F0A3         	call	___flmul	;wreg free
 20842  0118BE  C156  F19D         	movff	?___flmul,printf@tmpval
 20843  0118C2  C157  F19E         	movff	?___flmul+1,printf@tmpval+1
 20844  0118C6  C158  F19F         	movff	?___flmul+2,printf@tmpval+2
 20845  0118CA  C159  F1A0         	movff	?___flmul+3,printf@tmpval+3
 20846                           
 20847                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 20848  0118CE  C19D  F117         	movff	printf@tmpval,___flge@ff1
 20849  0118D2  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 20850  0118D6  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 20851  0118DA  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 20852  0118DE  0E00               	movlw	0
 20853  0118E0  0101               	movlb	1	; () banked
 20854  0118E2  6F1B               	movwf	___flge@ff2& (0+255),b
 20855  0118E4  0E00               	movlw	0
 20856  0118E6  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20857  0118E8  0E80               	movlw	128
 20858  0118EA  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20859  0118EC  0E3F               	movlw	63
 20860  0118EE  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20861  0118F0  EC3A  F0BC         	call	___flge	;wreg free
 20862  0118F4  0101               	movlb	1	; () banked
 20863  0118F6  B0D8               	btfsc	status,0,c
 20864  0118F8  D004               	goto	l1593
 20865                           
 20866                           ; BSR set to: 1
 20867                           ;doprnt.c: 849: exp--;
 20868  0118FA  07A1               	decf	printf@exp& (0+255),f,b
 20869  0118FC  A0D8               	btfss	status,0,c
 20870  0118FE  07A2               	decf	(printf@exp+1)& (0+255),f,b
 20871  011900  D017               	goto	l1595
 20872  011902                     l1593:
 20873                           
 20874                           ; BSR set to: 1
 20875                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 20876                           
 20877                           ; BSR set to: 1
 20878  011902  C19D  F117         	movff	printf@tmpval,___flge@ff1
 20879  011906  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 20880  01190A  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 20881  01190E  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 20882  011912  0E00               	movlw	0
 20883  011914  6F1B               	movwf	___flge@ff2& (0+255),b
 20884  011916  0E00               	movlw	0
 20885  011918  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20886  01191A  0E20               	movlw	32
 20887  01191C  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20888  01191E  0E41               	movlw	65
 20889  011920  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20890  011922  EC3A  F0BC         	call	___flge	;wreg free
 20891  011926  0101               	movlb	1	; () banked
 20892  011928  A0D8               	btfss	status,0,c
 20893  01192A  D002               	goto	l1595
 20894                           
 20895                           ; BSR set to: 1
 20896                           ;doprnt.c: 851: exp++;
 20897  01192C  4BA1               	infsnz	printf@exp& (0+255),f,b
 20898  01192E  2BA2               	incf	(printf@exp+1)& (0+255),f,b
 20899  011930                     l1595:
 20900                           
 20901                           ; BSR set to: 1
 20902                           ;doprnt.c: 852: }
 20903                           ;doprnt.c: 1112: if(prec <= 12)
 20904                           
 20905                           ; BSR set to: 1
 20906                           
 20907                           ; BSR set to: 1
 20908                           
 20909                           ; BSR set to: 1
 20910  011930  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 20911  011932  D006               	goto	u25380
 20912  011934  51B0               	movf	(printf@prec+1)& (0+255),w,b
 20913  011936  E121               	bnz	l19208
 20914  011938  0E0D               	movlw	13
 20915  01193A  5DAF               	subwf	printf@prec& (0+255),w,b
 20916  01193C  B0D8               	btfsc	status,0,c
 20917  01193E  D01D               	goto	l1596
 20918  011940                     u25380:
 20919                           
 20920                           ; BSR set to: 1
 20921                           ;doprnt.c: 1113: fval += fround(prec);
 20922  011940  C1A3  F129         	movff	printf@fval,___fladd@b
 20923  011944  C1A4  F12A         	movff	printf@fval+1,___fladd@b+1
 20924  011948  C1A5  F12B         	movff	printf@fval+2,___fladd@b+2
 20925  01194C  C1A6  F12C         	movff	printf@fval+3,___fladd@b+3
 20926  011950  51AF               	movf	printf@prec& (0+255),w,b
 20927  011952  EC7D  F0AE         	call	_fround
 20928  011956  C16F  F12D         	movff	?_fround,___fladd@a
 20929  01195A  C170  F12E         	movff	?_fround+1,___fladd@a+1
 20930  01195E  C171  F12F         	movff	?_fround+2,___fladd@a+2
 20931  011962  C172  F130         	movff	?_fround+3,___fladd@a+3
 20932  011966  ECDC  F0A6         	call	___fladd	;wreg free
 20933  01196A  C129  F1A3         	movff	?___fladd,printf@fval
 20934  01196E  C12A  F1A4         	movff	?___fladd+1,printf@fval+1
 20935  011972  C12B  F1A5         	movff	?___fladd+2,printf@fval+2
 20936  011976  C12C  F1A6         	movff	?___fladd+3,printf@fval+3
 20937  01197A                     l1596:
 20938  01197A                     l19208:
 20939                           
 20940                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 20941  01197A  0101               	movlb	1	; () banked
 20942  01197C  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 20943  01197E  D006               	goto	u25390
 20944  011980  51A2               	movf	(printf@exp+1)& (0+255),w,b
 20945  011982  E122               	bnz	l19216
 20946  011984  0E0A               	movlw	10
 20947  011986  5DA1               	subwf	printf@exp& (0+255),w,b
 20948  011988  B0D8               	btfsc	status,0,c
 20949  01198A  D01E               	goto	u25420
 20950  01198C                     u25390:
 20951                           
 20952                           ; BSR set to: 1
 20953  01198C  51A3               	movf	printf@fval& (0+255),w,b
 20954  01198E  11A4               	iorwf	(printf@fval+1)& (0+255),w,b
 20955  011990  11A5               	iorwf	(printf@fval+2)& (0+255),w,b
 20956  011992  11A6               	iorwf	(printf@fval+3)& (0+255),w,b
 20957  011994  B4D8               	btfsc	status,2,c
 20958  011996  D062               	goto	l1597
 20959                           
 20960                           ; BSR set to: 1
 20961  011998  C1A3  F178         	movff	printf@fval,___fltol@f1
 20962  01199C  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 20963  0119A0  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 20964  0119A4  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 20965  0119A8  ECD6  F0BE         	call	___fltol	;wreg free
 20966  0119AC  0101               	movlb	1	; () banked
 20967  0119AE  5178               	movf	?___fltol& (0+255),w,b
 20968  0119B0  1179               	iorwf	(?___fltol+1)& (0+255),w,b
 20969  0119B2  117A               	iorwf	(?___fltol+2)& (0+255),w,b
 20970  0119B4  117B               	iorwf	(?___fltol+3)& (0+255),w,b
 20971  0119B6  B4D8               	btfsc	status,2,c
 20972                           
 20973                           ; BSR set to: 1
 20974  0119B8  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 20975  0119BA  D050               	goto	l1597
 20976  0119BC  51A2               	movf	(printf@exp+1)& (0+255),w,b
 20977  0119BE  E104               	bnz	l19216
 20978  0119C0  0E02               	movlw	2
 20979  0119C2  5DA1               	subwf	printf@exp& (0+255),w,b
 20980  0119C4  A0D8               	btfss	status,0,c
 20981  0119C6  D04A               	goto	l1597
 20982  0119C8                     u25420:
 20983  0119C8                     l19216:
 20984                           
 20985                           ; BSR set to: 1
 20986                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 20987  0119C8  C19D  F117         	movff	printf@tmpval,___flge@ff1
 20988  0119CC  C19E  F118         	movff	printf@tmpval+1,___flge@ff1+1
 20989  0119D0  C19F  F119         	movff	printf@tmpval+2,___flge@ff1+2
 20990  0119D4  C1A0  F11A         	movff	printf@tmpval+3,___flge@ff1+3
 20991  0119D8  0E5F               	movlw	95
 20992  0119DA  6F1B               	movwf	___flge@ff2& (0+255),b
 20993  0119DC  0E70               	movlw	112
 20994  0119DE  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 20995  0119E0  0E89               	movlw	137
 20996  0119E2  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 20997  0119E4  0E40               	movlw	64
 20998  0119E6  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 20999  0119E8  EC3A  F0BC         	call	___flge	;wreg free
 21000  0119EC  0101               	movlb	1	; () banked
 21001  0119EE  B0D8               	btfsc	status,0,c
 21002  0119F0  D002               	goto	l1600
 21003                           
 21004                           ; BSR set to: 1
 21005                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 21006  0119F2  0EF7               	movlw	247
 21007  0119F4  D001               	goto	L3
 21008  0119F6                     l1600:
 21009                           
 21010                           ; BSR set to: 1
 21011                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 21012                           
 21013                           ; BSR set to: 1
 21014  0119F6  0EF8               	movlw	248
 21015  0119F8                     L3:
 21016  0119F8  27A1               	addwf	printf@exp& (0+255),f,b
 21017  0119FA  0EFF               	movlw	255
 21018  0119FC  23A2               	addwfc	(printf@exp+1)& (0+255),f,b
 21019                           
 21020                           ; BSR set to: 1
 21021                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 21022                           
 21023                           ; BSR set to: 1
 21024  0119FE  51A1               	movf	printf@exp& (0+255),w,b
 21025  011A00  EC45  F09D         	call	_scale
 21026  011A04  C16F  F19D         	movff	?_scale,printf@tmpval
 21027  011A08  C170  F19E         	movff	?_scale+1,printf@tmpval+1
 21028  011A0C  C171  F19F         	movff	?_scale+2,printf@tmpval+2
 21029  011A10  C172  F1A0         	movff	?_scale+3,printf@tmpval+3
 21030  011A14  C1A3  F117         	movff	printf@fval,__div_to_l_@f1
 21031  011A18  C1A4  F118         	movff	printf@fval+1,__div_to_l_@f1+1
 21032  011A1C  C1A5  F119         	movff	printf@fval+2,__div_to_l_@f1+2
 21033  011A20  C1A6  F11A         	movff	printf@fval+3,__div_to_l_@f1+3
 21034  011A24  C19D  F11B         	movff	printf@tmpval,__div_to_l_@f2
 21035  011A28  C19E  F11C         	movff	printf@tmpval+1,__div_to_l_@f2+1
 21036  011A2C  C19F  F11D         	movff	printf@tmpval+2,__div_to_l_@f2+2
 21037  011A30  C1A0  F11E         	movff	printf@tmpval+3,__div_to_l_@f2+3
 21038  011A34  EC7F  F0BA         	call	__div_to_l_	;wreg free
 21039  011A38  C117  F1A7         	movff	?__div_to_l_,printf@val
 21040  011A3C  C118  F1A8         	movff	?__div_to_l_+1,printf@val+1
 21041  011A40  C119  F1A9         	movff	?__div_to_l_+2,printf@val+2
 21042  011A44  C11A  F1AA         	movff	?__div_to_l_+3,printf@val+3
 21043                           
 21044                           ;doprnt.c: 1129: fval = 0.0;
 21045  011A48  0E00               	movlw	0
 21046  011A4A  0101               	movlb	1	; () banked
 21047  011A4C  6FA3               	movwf	printf@fval& (0+255),b
 21048  011A4E  0E00               	movlw	0
 21049  011A50  6FA4               	movwf	(printf@fval+1)& (0+255),b
 21050  011A52  0E00               	movlw	0
 21051  011A54  6FA5               	movwf	(printf@fval+2)& (0+255),b
 21052  011A56  0E00               	movlw	0
 21053  011A58  6FA6               	movwf	(printf@fval+3)& (0+255),b
 21054                           
 21055                           ;doprnt.c: 1130: } else {
 21056  011A5A  D03C               	goto	l1606
 21057  011A5C                     l1597:
 21058                           
 21059                           ; BSR set to: 1
 21060                           ;doprnt.c: 1131: val = (unsigned long)fval;
 21061                           
 21062                           ; BSR set to: 1
 21063  011A5C  C1A3  F178         	movff	printf@fval,___fltol@f1
 21064  011A60  C1A4  F179         	movff	printf@fval+1,___fltol@f1+1
 21065  011A64  C1A5  F17A         	movff	printf@fval+2,___fltol@f1+2
 21066  011A68  C1A6  F17B         	movff	printf@fval+3,___fltol@f1+3
 21067  011A6C  ECD6  F0BE         	call	___fltol	;wreg free
 21068  011A70  C178  F1A7         	movff	?___fltol,printf@val
 21069  011A74  C179  F1A8         	movff	?___fltol+1,printf@val+1
 21070  011A78  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 21071  011A7C  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 21072                           
 21073                           ;doprnt.c: 1132: fval -= (double)val;
 21074  011A80  C1A3  F13D         	movff	printf@fval,___flsub@b
 21075  011A84  C1A4  F13E         	movff	printf@fval+1,___flsub@b+1
 21076  011A88  C1A5  F13F         	movff	printf@fval+2,___flsub@b+2
 21077  011A8C  C1A6  F140         	movff	printf@fval+3,___flsub@b+3
 21078  011A90  C1A7  F117         	movff	printf@val,___xxtofl@val
 21079  011A94  C1A8  F118         	movff	printf@val+1,___xxtofl@val+1
 21080  011A98  C1A9  F119         	movff	printf@val+2,___xxtofl@val+2
 21081  011A9C  C1AA  F11A         	movff	printf@val+3,___xxtofl@val+3
 21082  011AA0  0E00               	movlw	0
 21083  011AA2  EC5F  F0B7         	call	___xxtofl
 21084  011AA6  C117  F141         	movff	?___xxtofl,___flsub@a
 21085  011AAA  C118  F142         	movff	?___xxtofl+1,___flsub@a+1
 21086  011AAE  C119  F143         	movff	?___xxtofl+2,___flsub@a+2
 21087  011AB2  C11A  F144         	movff	?___xxtofl+3,___flsub@a+3
 21088  011AB6  EC38  F0C7         	call	___flsub	;wreg free
 21089  011ABA  C13D  F1A3         	movff	?___flsub,printf@fval
 21090  011ABE  C13E  F1A4         	movff	?___flsub+1,printf@fval+1
 21091  011AC2  C13F  F1A5         	movff	?___flsub+2,printf@fval+2
 21092  011AC6  C140  F1A6         	movff	?___flsub+3,printf@fval+3
 21093                           
 21094                           ;doprnt.c: 1133: exp = 0;
 21095  011ACA  0E00               	movlw	0
 21096  011ACC  0101               	movlb	1	; () banked
 21097  011ACE  6FA2               	movwf	(printf@exp+1)& (0+255),b
 21098  011AD0  0E00               	movlw	0
 21099  011AD2  6FA1               	movwf	printf@exp& (0+255),b
 21100  011AD4                     l1606:
 21101                           
 21102                           ; BSR set to: 1
 21103                           ;doprnt.c: 1134: }
 21104                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 21105                           
 21106                           ; BSR set to: 1
 21107  011AD4  0E01               	movlw	1
 21108  011AD6  6FB1               	movwf	printf@c& (0+255),b
 21109  011AD8                     l19236:
 21110                           
 21111                           ; BSR set to: 1
 21112  011AD8  0E0A               	movlw	10
 21113  011ADA  19B1               	xorwf	printf@c& (0+255),w,b
 21114  011ADC  B4D8               	btfsc	status,2,c
 21115  011ADE  D01B               	goto	u25460
 21116                           
 21117                           ; BSR set to: 1
 21118                           ;doprnt.c: 1137: if(val < dpowers[c])
 21119                           
 21120                           ; BSR set to: 1
 21121                           
 21122                           ; BSR set to: 1
 21123  011AE0  51B1               	movf	printf@c& (0+255),w,b
 21124  011AE2  0D04               	mullw	4
 21125  011AE4  0EA9               	movlw	low _dpowers
 21126  011AE6  24F3               	addwf	prodl,w,c
 21127  011AE8  6EF6               	movwf	tblptrl,c
 21128  011AEA  0ED7               	movlw	high _dpowers
 21129  011AEC  20F4               	addwfc	prodh,w,c
 21130  011AEE  6EF7               	movwf	tblptrh,c
 21131  011AF0                     	if	1	;There are 3 active tblptr bytes
 21132  011AF0  6AF8               	clrf	tblptru,c
 21133  011AF2  0E00               	movlw	low (__mediumconst shr (0+16))
 21134  011AF4  22F8               	addwfc	tblptru,f,c
 21135  011AF6                     	endif
 21136  011AF6  0009               	tblrd		*+
 21137  011AF8  50F5               	movf	tablat,w,c
 21138  011AFA  5DA7               	subwf	printf@val& (0+255),w,b
 21139  011AFC  0009               	tblrd		*+
 21140  011AFE  50F5               	movf	tablat,w,c
 21141  011B00  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 21142  011B02  0009               	tblrd		*+
 21143  011B04  50F5               	movf	tablat,w,c
 21144  011B06  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 21145  011B08  0009               	tblrd		*+
 21146  011B0A  50F5               	movf	tablat,w,c
 21147  011B0C  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 21148  011B0E  A0D8               	btfss	status,0,c
 21149  011B10  D002               	goto	u25460
 21150                           
 21151                           ; BSR set to: 1
 21152                           
 21153                           ; BSR set to: 1
 21154                           
 21155                           ; BSR set to: 1
 21156                           ;doprnt.c: 1138: break;
 21157  011B12  2BB1               	incf	printf@c& (0+255),f,b
 21158  011B14  D7E1               	goto	l19236
 21159  011B16                     u25460:
 21160                           
 21161                           ; BSR set to: 1
 21162                           ;doprnt.c: 1142: width -= prec + c + exp;
 21163                           
 21164                           ; BSR set to: 1
 21165  011B16  C1B1  F18C         	movff	printf@c,??_printf
 21166  011B1A  6B8D               	clrf	(??_printf+1)& (0+255),b
 21167  011B1C  BF8C               	btfsc	??_printf& (0+255),7,b
 21168  011B1E  078D               	decf	(??_printf+1)& (0+255),f,b
 21169  011B20  51AF               	movf	printf@prec& (0+255),w,b
 21170  011B22  278C               	addwf	??_printf& (0+255),f,b
 21171  011B24  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21172  011B26  238D               	addwfc	(??_printf+1)& (0+255),f,b
 21173  011B28  51A1               	movf	printf@exp& (0+255),w,b
 21174  011B2A  278C               	addwf	??_printf& (0+255),f,b
 21175  011B2C  51A2               	movf	(printf@exp+1)& (0+255),w,b
 21176  011B2E  238D               	addwfc	(??_printf+1)& (0+255),f,b
 21177  011B30  518C               	movf	??_printf& (0+255),w,b
 21178  011B32  5FAD               	subwf	printf@width& (0+255),f,b
 21179  011B34  518D               	movf	(??_printf+1)& (0+255),w,b
 21180  011B36  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 21181                           
 21182                           ;doprnt.c: 1143: if(
 21183                           ;doprnt.c: 1147: prec)
 21184  011B38  51AF               	movf	printf@prec& (0+255),w,b
 21185  011B3A  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 21186  011B3C  B4D8               	btfsc	status,2,c
 21187  011B3E  D003               	goto	l1610
 21188                           
 21189                           ; BSR set to: 1
 21190                           ;doprnt.c: 1148: width--;
 21191  011B40  07AD               	decf	printf@width& (0+255),f,b
 21192  011B42  A0D8               	btfss	status,0,c
 21193  011B44  07AE               	decf	(printf@width+1)& (0+255),f,b
 21194  011B46                     l1610:
 21195                           
 21196                           ; BSR set to: 1
 21197                           ;doprnt.c: 1149: if(flag & 0x03)
 21198                           
 21199                           ; BSR set to: 1
 21200  011B46  0E03               	movlw	3
 21201  011B48  15AB               	andwf	printf@flag& (0+255),w,b
 21202  011B4A  6F8C               	movwf	??_printf& (0+255),b
 21203  011B4C  0E00               	movlw	0
 21204  011B4E  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21205  011B50  6F8D               	movwf	(??_printf+1)& (0+255),b
 21206  011B52  518C               	movf	??_printf& (0+255),w,b
 21207  011B54  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21208  011B56  B4D8               	btfsc	status,2,c
 21209  011B58  D003               	goto	l1611
 21210                           
 21211                           ; BSR set to: 1
 21212                           ;doprnt.c: 1150: width--;
 21213  011B5A  07AD               	decf	printf@width& (0+255),f,b
 21214  011B5C  A0D8               	btfss	status,0,c
 21215  011B5E  07AE               	decf	(printf@width+1)& (0+255),f,b
 21216  011B60                     l1611:
 21217                           
 21218                           ; BSR set to: 1
 21219                           ;doprnt.c: 1153: if(flag & 0x04) {
 21220                           
 21221                           ; BSR set to: 1
 21222  011B60  A5AB               	btfss	printf@flag& (0+255),2,b
 21223  011B62  D025               	goto	l1618
 21224                           
 21225                           ; BSR set to: 1
 21226                           ;doprnt.c: 1157: if(flag & 0x03)
 21227  011B64  0E03               	movlw	3
 21228  011B66  15AB               	andwf	printf@flag& (0+255),w,b
 21229  011B68  6F8C               	movwf	??_printf& (0+255),b
 21230  011B6A  0E00               	movlw	0
 21231  011B6C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21232  011B6E  6F8D               	movwf	(??_printf+1)& (0+255),b
 21233  011B70  518C               	movf	??_printf& (0+255),w,b
 21234  011B72  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21235  011B74  B4D8               	btfsc	status,2,c
 21236  011B76  D00B               	goto	l1614
 21237                           
 21238                           ; BSR set to: 1
 21239                           ;doprnt.c: 1159: (putch('-') );
 21240  011B78  0E2D               	movlw	45
 21241  011B7A  EC01  F0CB         	call	_putch
 21242                           
 21243                           ;doprnt.c: 1168: while(width > 0) {
 21244  011B7E  D007               	goto	l1614
 21245  011B80                     l19262:
 21246                           
 21247                           ;doprnt.c: 1169: (putch('0') );
 21248  011B80  0E30               	movlw	48
 21249  011B82  EC01  F0CB         	call	_putch
 21250                           
 21251                           ;doprnt.c: 1170: width--;
 21252  011B86  0101               	movlb	1	; () banked
 21253  011B88  07AD               	decf	printf@width& (0+255),f,b
 21254  011B8A  A0D8               	btfss	status,0,c
 21255  011B8C  07AE               	decf	(printf@width+1)& (0+255),f,b
 21256  011B8E                     l1614:
 21257                           
 21258                           ; BSR set to: 1
 21259  011B8E  0101               	movlb	1	; () banked
 21260  011B90  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 21261  011B92  D06C               	goto	l1622
 21262  011B94  51AE               	movf	(printf@width+1)& (0+255),w,b
 21263  011B96  E1F4               	bnz	l19262
 21264  011B98  05AD               	decf	printf@width& (0+255),w,b
 21265  011B9A  A0D8               	btfss	status,0,c
 21266  011B9C  D067               	goto	l1622
 21267  011B9E  D7F0               	goto	l1615
 21268  011BA0                     l19268:
 21269                           
 21270                           ; BSR set to: 1
 21271                           ;doprnt.c: 1181: (putch(' ') );
 21272  011BA0  0E20               	movlw	32
 21273  011BA2  EC01  F0CB         	call	_putch
 21274                           
 21275                           ;doprnt.c: 1182: width--;
 21276  011BA6  0101               	movlb	1	; () banked
 21277  011BA8  07AD               	decf	printf@width& (0+255),f,b
 21278  011BAA  A0D8               	btfss	status,0,c
 21279  011BAC  07AE               	decf	(printf@width+1)& (0+255),f,b
 21280  011BAE                     l1618:
 21281                           
 21282                           ; BSR set to: 1
 21283                           
 21284                           ; BSR set to: 1
 21285  011BAE  BFAE               	btfsc	(printf@width+1)& (0+255),7,b
 21286  011BB0  D005               	goto	u25520
 21287  011BB2  51AE               	movf	(printf@width+1)& (0+255),w,b
 21288  011BB4  E1F5               	bnz	l19268
 21289  011BB6  05AD               	decf	printf@width& (0+255),w,b
 21290  011BB8  B0D8               	btfsc	status,0,c
 21291  011BBA  D7F2               	goto	l1619
 21292  011BBC                     u25520:
 21293                           
 21294                           ; BSR set to: 1
 21295                           ;doprnt.c: 1183: }
 21296                           ;doprnt.c: 1188: if(flag & 0x03)
 21297                           
 21298                           ; BSR set to: 1
 21299  011BBC  0E03               	movlw	3
 21300  011BBE  15AB               	andwf	printf@flag& (0+255),w,b
 21301  011BC0  6F8C               	movwf	??_printf& (0+255),b
 21302  011BC2  0E00               	movlw	0
 21303  011BC4  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21304  011BC6  6F8D               	movwf	(??_printf+1)& (0+255),b
 21305  011BC8  518C               	movf	??_printf& (0+255),w,b
 21306  011BCA  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21307  011BCC  B4D8               	btfsc	status,2,c
 21308  011BCE  D04E               	goto	l1622
 21309                           
 21310                           ; BSR set to: 1
 21311                           ;doprnt.c: 1190: (putch('-') );
 21312  011BD0  0E2D               	movlw	45
 21313  011BD2  EC01  F0CB         	call	_putch
 21314                           
 21315                           ;doprnt.c: 1195: }
 21316                           ;doprnt.c: 1196: while(c--) {
 21317  011BD6  D04A               	goto	l1622
 21318  011BD8                     
 21319                           ;doprnt.c: 1200: {
 21320                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 21321  011BD8  C1A7  F117         	movff	printf@val,___lldiv@dividend
 21322  011BDC  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 21323  011BE0  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 21324  011BE4  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 21325  011BE8  0101               	movlb	1	; () banked
 21326  011BEA  51B1               	movf	printf@c& (0+255),w,b
 21327  011BEC  0D04               	mullw	4
 21328  011BEE  0EA9               	movlw	low _dpowers
 21329  011BF0  24F3               	addwf	prodl,w,c
 21330  011BF2  6EF6               	movwf	tblptrl,c
 21331  011BF4  0ED7               	movlw	high _dpowers
 21332  011BF6  20F4               	addwfc	prodh,w,c
 21333  011BF8  6EF7               	movwf	tblptrh,c
 21334  011BFA                     	if	1	;There are 3 active tblptr bytes
 21335  011BFA  6AF8               	clrf	tblptru,c
 21336  011BFC  0E00               	movlw	low (__mediumconst shr (0+16))
 21337  011BFE  22F8               	addwfc	tblptru,f,c
 21338  011C00                     	endif
 21339  011C00  0009               	tblrd		*+
 21340  011C02  CFF5 F11B          	movff	tablat,___lldiv@divisor
 21341  011C06  0009               	tblrd		*+
 21342  011C08  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 21343  011C0C  0009               	tblrd		*+
 21344  011C0E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 21345  011C12  000A               	tblrd		*-
 21346  011C14  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 21347  011C18  EC45  F0C2         	call	___lldiv	;wreg free
 21348  011C1C  C117  F19D         	movff	?___lldiv,printf@tmpval
 21349  011C20  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 21350  011C24  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 21351  011C28  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 21352                           
 21353                           ;doprnt.c: 1202: tmpval.vd %= 10;
 21354  011C2C  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 21355  011C30  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 21356  011C34  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 21357  011C38  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 21358  011C3C  0E0A               	movlw	10
 21359  011C3E  0101               	movlb	1	; () banked
 21360  011C40  6F28               	movwf	___llmod@divisor& (0+255),b
 21361  011C42  0E00               	movlw	0
 21362  011C44  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 21363  011C46  0E00               	movlw	0
 21364  011C48  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 21365  011C4A  0E00               	movlw	0
 21366  011C4C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 21367  011C4E  EC96  F0C4         	call	___llmod	;wreg free
 21368  011C52  C124  F19D         	movff	?___llmod,printf@tmpval
 21369  011C56  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 21370  011C5A  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 21371  011C5E  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 21372                           
 21373                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 21374  011C62  0101               	movlb	1	; () banked
 21375  011C64  519D               	movf	printf@tmpval& (0+255),w,b
 21376  011C66  0F30               	addlw	48
 21377  011C68  EC01  F0CB         	call	_putch
 21378  011C6C                     l1622:
 21379  011C6C  0101               	movlb	1	; () banked
 21380  011C6E  07B1               	decf	printf@c& (0+255),f,b
 21381  011C70  29B1               	incf	printf@c& (0+255),w,b
 21382  011C72  B4D8               	btfsc	status,2,c
 21383  011C74  D008               	goto	l1625
 21384  011C76  D7B0               	goto	l1623
 21385  011C78                     l19286:
 21386                           
 21387                           ; BSR set to: 1
 21388                           ;doprnt.c: 1208: (putch('0') );
 21389  011C78  0E30               	movlw	48
 21390  011C7A  EC01  F0CB         	call	_putch
 21391                           
 21392                           ;doprnt.c: 1209: exp--;
 21393  011C7E  0101               	movlb	1	; () banked
 21394  011C80  07A1               	decf	printf@exp& (0+255),f,b
 21395  011C82  A0D8               	btfss	status,0,c
 21396  011C84  07A2               	decf	(printf@exp+1)& (0+255),f,b
 21397  011C86                     l1625:
 21398                           
 21399                           ; BSR set to: 1
 21400                           
 21401                           ; BSR set to: 1
 21402  011C86  BFA2               	btfsc	(printf@exp+1)& (0+255),7,b
 21403  011C88  D005               	goto	u25550
 21404  011C8A  51A2               	movf	(printf@exp+1)& (0+255),w,b
 21405  011C8C  E1F5               	bnz	l19286
 21406  011C8E  05A1               	decf	printf@exp& (0+255),w,b
 21407  011C90  B0D8               	btfsc	status,0,c
 21408  011C92  D7F2               	goto	l1626
 21409  011C94                     u25550:
 21410                           
 21411                           ; BSR set to: 1
 21412                           ;doprnt.c: 1210: }
 21413                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 21414                           
 21415                           ; BSR set to: 1
 21416  011C94  BFB0               	btfsc	(printf@prec+1)& (0+255),7,b
 21417  011C96  D009               	goto	l1628
 21418  011C98  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21419  011C9A  E104               	bnz	u25560
 21420  011C9C  0E09               	movlw	9
 21421  011C9E  5DAF               	subwf	printf@prec& (0+255),w,b
 21422  011CA0  A0D8               	btfss	status,0,c
 21423  011CA2  D003               	goto	l1628
 21424  011CA4                     u25560:
 21425                           
 21426                           ; BSR set to: 1
 21427                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 21428  011CA4  0E08               	movlw	8
 21429  011CA6  6FB1               	movwf	printf@c& (0+255),b
 21430  011CA8  D002               	goto	l1629
 21431  011CAA                     l1628:
 21432                           
 21433                           ; BSR set to: 1
 21434                           ;doprnt.c: 1213: else
 21435                           ;doprnt.c: 1214: c = prec;
 21436  011CAA  C1AF  F1B1         	movff	printf@prec,printf@c
 21437  011CAE                     l1629:
 21438                           
 21439                           ; BSR set to: 1
 21440                           ;doprnt.c: 1215: prec -= c;
 21441                           
 21442                           ; BSR set to: 1
 21443  011CAE  51B1               	movf	printf@c& (0+255),w,b
 21444  011CB0  5FAF               	subwf	printf@prec& (0+255),f,b
 21445  011CB2  0E00               	movlw	0
 21446  011CB4  BFB1               	btfsc	printf@c& (0+255),7,b
 21447  011CB6  0EFF               	movlw	255
 21448  011CB8  5BB0               	subwfb	(printf@prec+1)& (0+255),f,b
 21449                           
 21450                           ; BSR set to: 1
 21451                           ;doprnt.c: 1219: if(c)
 21452  011CBA  51B1               	movf	printf@c& (0+255),w,b
 21453  011CBC  B4D8               	btfsc	status,2,c
 21454  011CBE  D003               	goto	l1630
 21455                           
 21456                           ; BSR set to: 1
 21457                           ;doprnt.c: 1221: (putch('.') );
 21458  011CC0  0E2E               	movlw	46
 21459  011CC2  EC01  F0CB         	call	_putch
 21460  011CC6                     l1630:
 21461                           
 21462                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 21463  011CC6  0101               	movlb	1	; () banked
 21464  011CC8  51B1               	movf	printf@c& (0+255),w,b
 21465  011CCA  EC45  F09D         	call	_scale
 21466  011CCE  C16F  F192         	movff	?_scale,_printf$4177
 21467  011CD2  C170  F193         	movff	?_scale+1,_printf$4177+1
 21468  011CD6  C171  F194         	movff	?_scale+2,_printf$4177+2
 21469  011CDA  C172  F195         	movff	?_scale+3,_printf$4177+3
 21470                           
 21471                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 21472  011CDE  C1A3  F15A         	movff	printf@fval,___flmul@a
 21473  011CE2  C1A4  F15B         	movff	printf@fval+1,___flmul@a+1
 21474  011CE6  C1A5  F15C         	movff	printf@fval+2,___flmul@a+2
 21475  011CEA  C1A6  F15D         	movff	printf@fval+3,___flmul@a+3
 21476  011CEE  C192  F156         	movff	_printf$4177,___flmul@b
 21477  011CF2  C193  F157         	movff	_printf$4177+1,___flmul@b+1
 21478  011CF6  C194  F158         	movff	_printf$4177+2,___flmul@b+2
 21479  011CFA  C195  F159         	movff	_printf$4177+3,___flmul@b+3
 21480  011CFE  EC8B  F0A3         	call	___flmul	;wreg free
 21481  011D02  C156  F178         	movff	?___flmul,___fltol@f1
 21482  011D06  C157  F179         	movff	?___flmul+1,___fltol@f1+1
 21483  011D0A  C158  F17A         	movff	?___flmul+2,___fltol@f1+2
 21484  011D0E  C159  F17B         	movff	?___flmul+3,___fltol@f1+3
 21485  011D12  ECD6  F0BE         	call	___fltol	;wreg free
 21486  011D16  C178  F1A7         	movff	?___fltol,printf@val
 21487  011D1A  C179  F1A8         	movff	?___fltol+1,printf@val+1
 21488  011D1E  C17A  F1A9         	movff	?___fltol+2,printf@val+2
 21489  011D22  C17B  F1AA         	movff	?___fltol+3,printf@val+3
 21490                           
 21491                           ;doprnt.c: 1228: while(c--) {
 21492  011D26  D074               	goto	l1631
 21493  011D28                     
 21494                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 21495  011D28  C1A7  F117         	movff	printf@val,___lldiv@dividend
 21496  011D2C  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 21497  011D30  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 21498  011D34  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 21499  011D38  0101               	movlb	1	; () banked
 21500  011D3A  51B1               	movf	printf@c& (0+255),w,b
 21501  011D3C  0D04               	mullw	4
 21502  011D3E  0EA9               	movlw	low _dpowers
 21503  011D40  24F3               	addwf	prodl,w,c
 21504  011D42  6EF6               	movwf	tblptrl,c
 21505  011D44  0ED7               	movlw	high _dpowers
 21506  011D46  20F4               	addwfc	prodh,w,c
 21507  011D48  6EF7               	movwf	tblptrh,c
 21508  011D4A                     	if	1	;There are 3 active tblptr bytes
 21509  011D4A  6AF8               	clrf	tblptru,c
 21510  011D4C  0E00               	movlw	low (__mediumconst shr (0+16))
 21511  011D4E  22F8               	addwfc	tblptru,f,c
 21512  011D50                     	endif
 21513  011D50  0009               	tblrd		*+
 21514  011D52  CFF5 F11B          	movff	tablat,___lldiv@divisor
 21515  011D56  0009               	tblrd		*+
 21516  011D58  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 21517  011D5C  0009               	tblrd		*+
 21518  011D5E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 21519  011D62  000A               	tblrd		*-
 21520  011D64  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 21521  011D68  EC45  F0C2         	call	___lldiv	;wreg free
 21522  011D6C  C117  F19D         	movff	?___lldiv,printf@tmpval
 21523  011D70  C118  F19E         	movff	?___lldiv+1,printf@tmpval+1
 21524  011D74  C119  F19F         	movff	?___lldiv+2,printf@tmpval+2
 21525  011D78  C11A  F1A0         	movff	?___lldiv+3,printf@tmpval+3
 21526                           
 21527                           ;doprnt.c: 1230: tmpval.vd %= 10;
 21528  011D7C  C19D  F124         	movff	printf@tmpval,___llmod@dividend
 21529  011D80  C19E  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 21530  011D84  C19F  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 21531  011D88  C1A0  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 21532  011D8C  0E0A               	movlw	10
 21533  011D8E  0101               	movlb	1	; () banked
 21534  011D90  6F28               	movwf	___llmod@divisor& (0+255),b
 21535  011D92  0E00               	movlw	0
 21536  011D94  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 21537  011D96  0E00               	movlw	0
 21538  011D98  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 21539  011D9A  0E00               	movlw	0
 21540  011D9C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 21541  011D9E  EC96  F0C4         	call	___llmod	;wreg free
 21542  011DA2  C124  F19D         	movff	?___llmod,printf@tmpval
 21543  011DA6  C125  F19E         	movff	?___llmod+1,printf@tmpval+1
 21544  011DAA  C126  F19F         	movff	?___llmod+2,printf@tmpval+2
 21545  011DAE  C127  F1A0         	movff	?___llmod+3,printf@tmpval+3
 21546                           
 21547                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 21548  011DB2  0101               	movlb	1	; () banked
 21549  011DB4  519D               	movf	printf@tmpval& (0+255),w,b
 21550  011DB6  0F30               	addlw	48
 21551  011DB8  EC01  F0CB         	call	_putch
 21552                           
 21553                           ;doprnt.c: 1232: val %= dpowers[c];
 21554  011DBC  C1A7  F124         	movff	printf@val,___llmod@dividend
 21555  011DC0  C1A8  F125         	movff	printf@val+1,___llmod@dividend+1
 21556  011DC4  C1A9  F126         	movff	printf@val+2,___llmod@dividend+2
 21557  011DC8  C1AA  F127         	movff	printf@val+3,___llmod@dividend+3
 21558  011DCC  0101               	movlb	1	; () banked
 21559  011DCE  51B1               	movf	printf@c& (0+255),w,b
 21560  011DD0  0D04               	mullw	4
 21561  011DD2  0EA9               	movlw	low _dpowers
 21562  011DD4  24F3               	addwf	prodl,w,c
 21563  011DD6  6EF6               	movwf	tblptrl,c
 21564  011DD8  0ED7               	movlw	high _dpowers
 21565  011DDA  20F4               	addwfc	prodh,w,c
 21566  011DDC  6EF7               	movwf	tblptrh,c
 21567  011DDE                     	if	1	;There are 3 active tblptr bytes
 21568  011DDE  6AF8               	clrf	tblptru,c
 21569  011DE0  0E00               	movlw	low (__mediumconst shr (0+16))
 21570  011DE2  22F8               	addwfc	tblptru,f,c
 21571  011DE4                     	endif
 21572  011DE4  0009               	tblrd		*+
 21573  011DE6  CFF5 F128          	movff	tablat,___llmod@divisor
 21574  011DEA  0009               	tblrd		*+
 21575  011DEC  CFF5 F129          	movff	tablat,___llmod@divisor+1
 21576  011DF0  0009               	tblrd		*+
 21577  011DF2  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 21578  011DF6  000A               	tblrd		*-
 21579  011DF8  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 21580  011DFC  EC96  F0C4         	call	___llmod	;wreg free
 21581  011E00  C124  F1A7         	movff	?___llmod,printf@val
 21582  011E04  C125  F1A8         	movff	?___llmod+1,printf@val+1
 21583  011E08  C126  F1A9         	movff	?___llmod+2,printf@val+2
 21584  011E0C  C127  F1AA         	movff	?___llmod+3,printf@val+3
 21585  011E10                     l1631:
 21586  011E10  0101               	movlb	1	; () banked
 21587  011E12  07B1               	decf	printf@c& (0+255),f,b
 21588  011E14  29B1               	incf	printf@c& (0+255),w,b
 21589  011E16  B4D8               	btfsc	status,2,c
 21590  011E18  D008               	goto	l1634
 21591  011E1A  D786               	goto	l1632
 21592  011E1C                     
 21593                           ; BSR set to: 1
 21594                           ;doprnt.c: 1236: (putch('0') );
 21595                           
 21596                           ; BSR set to: 1
 21597  011E1C  0E30               	movlw	48
 21598  011E1E  EC01  F0CB         	call	_putch
 21599                           
 21600                           ;doprnt.c: 1237: prec--;
 21601  011E22  0101               	movlb	1	; () banked
 21602  011E24  07AF               	decf	printf@prec& (0+255),f,b
 21603  011E26  A0D8               	btfss	status,0,c
 21604  011E28  07B0               	decf	(printf@prec+1)& (0+255),f,b
 21605  011E2A                     l1634:
 21606                           
 21607                           ; BSR set to: 1
 21608                           
 21609                           ; BSR set to: 1
 21610  011E2A  51AF               	movf	printf@prec& (0+255),w,b
 21611  011E2C  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 21612  011E2E  B4D8               	btfsc	status,2,c
 21613  011E30  D1BE               	goto	u25840
 21614  011E32  D7F4               	goto	l1635
 21615  011E34                     l1588:
 21616                           
 21617                           ; BSR set to: 1
 21618                           ;doprnt.c: 1246: }
 21619                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 21620                           
 21621                           ; BSR set to: 1
 21622  011E34  0EC0               	movlw	192
 21623  011E36  15AB               	andwf	printf@flag& (0+255),w,b
 21624  011E38  6F8C               	movwf	??_printf& (0+255),b
 21625  011E3A  0E00               	movlw	0
 21626  011E3C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21627  011E3E  6F8D               	movwf	(??_printf+1)& (0+255),b
 21628  011E40  518C               	movf	??_printf& (0+255),w,b
 21629  011E42  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21630  011E44  A4D8               	btfss	status,2,c
 21631  011E46  D01E               	goto	l1637
 21632                           
 21633                           ; BSR set to: 1
 21634                           ;doprnt.c: 1253: {
 21635                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 21636  011E48  C19B  FFD9         	movff	printf@ap,fsr2l
 21637  011E4C  C19C  FFDA         	movff	printf@ap+1,fsr2h
 21638  011E50  CFDE F1A7          	movff	postinc2,printf@val
 21639  011E54  CFDD F1A8          	movff	postdec2,printf@val+1
 21640  011E58  0E00               	movlw	0
 21641  011E5A  BFA8               	btfsc	(printf@val+1)& (0+255),7,b
 21642  011E5C  0EFF               	movlw	-1
 21643  011E5E  6FA9               	movwf	(printf@val+2)& (0+255),b
 21644  011E60  6FAA               	movwf	(printf@val+3)& (0+255),b
 21645                           
 21646                           ; BSR set to: 1
 21647  011E62  0E02               	movlw	2
 21648  011E64  279B               	addwf	printf@ap& (0+255),f,b
 21649  011E66  0E00               	movlw	0
 21650  011E68  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 21651                           
 21652                           ; BSR set to: 1
 21653                           ;doprnt.c: 1261: if((long)val < 0) {
 21654  011E6A  AFAA               	btfss	(printf@val+3)& (0+255),7,b
 21655  011E6C  D01D               	goto	l1639
 21656                           
 21657                           ; BSR set to: 1
 21658                           ;doprnt.c: 1262: flag |= 0x03;
 21659  011E6E  0E03               	movlw	3
 21660  011E70  13AB               	iorwf	printf@flag& (0+255),f,b
 21661                           
 21662                           ; BSR set to: 1
 21663                           ;doprnt.c: 1263: val = -val;
 21664  011E72  1FAA               	comf	(printf@val+3)& (0+255),f,b
 21665  011E74  1FA9               	comf	(printf@val+2)& (0+255),f,b
 21666  011E76  1FA8               	comf	(printf@val+1)& (0+255),f,b
 21667  011E78  6DA7               	negf	printf@val& (0+255),b
 21668  011E7A  0E00               	movlw	0
 21669  011E7C  23A8               	addwfc	(printf@val+1)& (0+255),f,b
 21670  011E7E  23A9               	addwfc	(printf@val+2)& (0+255),f,b
 21671  011E80  23AA               	addwfc	(printf@val+3)& (0+255),f,b
 21672                           
 21673                           ; BSR set to: 1
 21674                           ;doprnt.c: 1264: }
 21675                           ;doprnt.c: 1266: }
 21676  011E82  D012               	goto	l1639
 21677  011E84                     l1637:
 21678                           
 21679                           ; BSR set to: 1
 21680                           ;doprnt.c: 1268: else
 21681                           ;doprnt.c: 1273: {
 21682                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 21683                           
 21684                           ; BSR set to: 1
 21685  011E84  C19B  FFD9         	movff	printf@ap,fsr2l
 21686  011E88  C19C  FFDA         	movff	printf@ap+1,fsr2h
 21687  011E8C  CFDE F18C          	movff	postinc2,??_printf
 21688  011E90  CFDD F18D          	movff	postdec2,??_printf+1
 21689  011E94  C18C  F1A7         	movff	??_printf,printf@val
 21690  011E98  C18D  F1A8         	movff	??_printf+1,printf@val+1
 21691  011E9C  6BA9               	clrf	(printf@val+2)& (0+255),b
 21692  011E9E  6BAA               	clrf	(printf@val+3)& (0+255),b
 21693                           
 21694                           ; BSR set to: 1
 21695  011EA0  0E02               	movlw	2
 21696  011EA2  279B               	addwf	printf@ap& (0+255),f,b
 21697  011EA4  0E00               	movlw	0
 21698  011EA6  239C               	addwfc	(printf@ap+1)& (0+255),f,b
 21699  011EA8                     l1639:
 21700                           
 21701                           ; BSR set to: 1
 21702                           ;doprnt.c: 1287: }
 21703                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 21704                           
 21705                           ; BSR set to: 1
 21706  011EA8  51AF               	movf	printf@prec& (0+255),w,b
 21707  011EAA  11B0               	iorwf	(printf@prec+1)& (0+255),w,b
 21708  011EAC  A4D8               	btfss	status,2,c
 21709  011EAE  D04B               	goto	l1641
 21710                           
 21711                           ; BSR set to: 1
 21712  011EB0  51A7               	movf	printf@val& (0+255),w,b
 21713  011EB2  11A8               	iorwf	(printf@val+1)& (0+255),w,b
 21714  011EB4  11A9               	iorwf	(printf@val+2)& (0+255),w,b
 21715  011EB6  11AA               	iorwf	(printf@val+3)& (0+255),w,b
 21716  011EB8  A4D8               	btfss	status,2,c
 21717  011EBA  D045               	goto	l1641
 21718                           
 21719                           ; BSR set to: 1
 21720                           ;doprnt.c: 1291: prec++;
 21721  011EBC  4BAF               	infsnz	printf@prec& (0+255),f,b
 21722  011EBE  2BB0               	incf	(printf@prec+1)& (0+255),f,b
 21723                           
 21724                           ; BSR set to: 1
 21725                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 21726  011EC0  D042               	goto	l1641
 21727  011EC2                     
 21728                           ; BSR set to: 1
 21729                           ;doprnt.c: 1302: case 0xC0:
 21730                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 21731                           
 21732                           ; BSR set to: 1
 21733                           
 21734                           ; BSR set to: 1
 21735  011EC2  0E01               	movlw	1
 21736  011EC4  6FB1               	movwf	printf@c& (0+255),b
 21737  011EC6                     l19346:
 21738                           
 21739                           ; BSR set to: 1
 21740  011EC6  0E0A               	movlw	10
 21741  011EC8  19B1               	xorwf	printf@c& (0+255),w,b
 21742  011ECA  B4D8               	btfsc	status,2,c
 21743  011ECC  D047               	goto	l1647
 21744                           
 21745                           ; BSR set to: 1
 21746                           ;doprnt.c: 1306: if(val < dpowers[c])
 21747                           
 21748                           ; BSR set to: 1
 21749                           
 21750                           ; BSR set to: 1
 21751  011ECE  51B1               	movf	printf@c& (0+255),w,b
 21752  011ED0  0D04               	mullw	4
 21753  011ED2  0EA9               	movlw	low _dpowers
 21754  011ED4  24F3               	addwf	prodl,w,c
 21755  011ED6  6EF6               	movwf	tblptrl,c
 21756  011ED8  0ED7               	movlw	high _dpowers
 21757  011EDA  20F4               	addwfc	prodh,w,c
 21758  011EDC  6EF7               	movwf	tblptrh,c
 21759  011EDE                     	if	1	;There are 3 active tblptr bytes
 21760  011EDE  6AF8               	clrf	tblptru,c
 21761  011EE0  0E00               	movlw	low (__mediumconst shr (0+16))
 21762  011EE2  22F8               	addwfc	tblptru,f,c
 21763  011EE4                     	endif
 21764  011EE4  0009               	tblrd		*+
 21765  011EE6  50F5               	movf	tablat,w,c
 21766  011EE8  5DA7               	subwf	printf@val& (0+255),w,b
 21767  011EEA  0009               	tblrd		*+
 21768  011EEC  50F5               	movf	tablat,w,c
 21769  011EEE  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 21770  011EF0  0009               	tblrd		*+
 21771  011EF2  50F5               	movf	tablat,w,c
 21772  011EF4  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 21773  011EF6  0009               	tblrd		*+
 21774  011EF8  50F5               	movf	tablat,w,c
 21775  011EFA  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 21776  011EFC  A0D8               	btfss	status,0,c
 21777  011EFE  D02E               	goto	l1647
 21778                           
 21779                           ; BSR set to: 1
 21780                           
 21781                           ; BSR set to: 1
 21782                           
 21783                           ; BSR set to: 1
 21784                           ;doprnt.c: 1307: break;
 21785  011F00  2BB1               	incf	printf@c& (0+255),f,b
 21786  011F02  D7E1               	goto	l19346
 21787  011F04                     
 21788                           ; BSR set to: 1
 21789                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 21790                           
 21791                           ; BSR set to: 1
 21792  011F04  0E01               	movlw	1
 21793  011F06  6FB1               	movwf	printf@c& (0+255),b
 21794  011F08                     l19360:
 21795                           
 21796                           ; BSR set to: 1
 21797  011F08  0E08               	movlw	8
 21798  011F0A  19B1               	xorwf	printf@c& (0+255),w,b
 21799  011F0C  B4D8               	btfsc	status,2,c
 21800  011F0E  D026               	goto	l1647
 21801                           
 21802                           ; BSR set to: 1
 21803                           ;doprnt.c: 1317: if(val < hexpowers[c])
 21804                           
 21805                           ; BSR set to: 1
 21806                           
 21807                           ; BSR set to: 1
 21808  011F10  51B1               	movf	printf@c& (0+255),w,b
 21809  011F12  0D04               	mullw	4
 21810  011F14  0ED1               	movlw	low _hexpowers
 21811  011F16  24F3               	addwf	prodl,w,c
 21812  011F18  6EF6               	movwf	tblptrl,c
 21813  011F1A  0ED7               	movlw	high _hexpowers
 21814  011F1C  20F4               	addwfc	prodh,w,c
 21815  011F1E  6EF7               	movwf	tblptrh,c
 21816  011F20                     	if	1	;There are 3 active tblptr bytes
 21817  011F20  6AF8               	clrf	tblptru,c
 21818  011F22  0E00               	movlw	low (__mediumconst shr (0+16))
 21819  011F24  22F8               	addwfc	tblptru,f,c
 21820  011F26                     	endif
 21821  011F26  0009               	tblrd		*+
 21822  011F28  50F5               	movf	tablat,w,c
 21823  011F2A  5DA7               	subwf	printf@val& (0+255),w,b
 21824  011F2C  0009               	tblrd		*+
 21825  011F2E  50F5               	movf	tablat,w,c
 21826  011F30  59A8               	subwfb	(printf@val+1)& (0+255),w,b
 21827  011F32  0009               	tblrd		*+
 21828  011F34  50F5               	movf	tablat,w,c
 21829  011F36  59A9               	subwfb	(printf@val+2)& (0+255),w,b
 21830  011F38  0009               	tblrd		*+
 21831  011F3A  50F5               	movf	tablat,w,c
 21832  011F3C  59AA               	subwfb	(printf@val+3)& (0+255),w,b
 21833  011F3E  A0D8               	btfss	status,0,c
 21834  011F40  D00D               	goto	l1647
 21835                           
 21836                           ; BSR set to: 1
 21837                           
 21838                           ; BSR set to: 1
 21839                           
 21840                           ; BSR set to: 1
 21841                           ;doprnt.c: 1318: break;
 21842  011F42  2BB1               	incf	printf@c& (0+255),f,b
 21843  011F44  D7E1               	goto	l19360
 21844  011F46                     l1641:
 21845                           
 21846                           ; BSR set to: 1
 21847                           
 21848                           ; BSR set to: 1
 21849  011F46  51AB               	movf	printf@flag& (0+255),w,b
 21850  011F48  0BC0               	andlw	192
 21851                           
 21852                           ; Switch size 1, requested type "space"
 21853                           ; Number of cases is 3, Range of values is 0 to 192
 21854                           ; switch strategies available:
 21855                           ; Name         Instructions Cycles
 21856                           ; simple_byte           10     6 (average)
 21857                           ;	Chosen strategy is simple_byte
 21858  011F4A  0A00               	xorlw	0	; case 0
 21859  011F4C  B4D8               	btfsc	status,2,c
 21860  011F4E  D7B9               	goto	l1642
 21861  011F50  0A80               	xorlw	128	; case 128
 21862  011F52  B4D8               	btfsc	status,2,c
 21863  011F54  D7D7               	goto	l1648
 21864  011F56  0A40               	xorlw	64	; case 192
 21865  011F58  B4D8               	btfsc	status,2,c
 21866  011F5A  D7B3               	goto	l1642
 21867  011F5C                     l1647:
 21868                           
 21869                           ; BSR set to: 1
 21870                           ;doprnt.c: 1339: if(c < prec)
 21871                           
 21872                           ; BSR set to: 1
 21873  011F5C  0E80               	movlw	128
 21874  011F5E  BFB1               	btfsc	printf@c& (0+255),7,b
 21875  011F60  0E7F               	movlw	127
 21876  011F62  6F8C               	movwf	??_printf& (0+255),b
 21877  011F64  51AF               	movf	printf@prec& (0+255),w,b
 21878  011F66  5DB1               	subwf	printf@c& (0+255),w,b
 21879  011F68  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21880  011F6A  0A80               	xorlw	128
 21881  011F6C  598C               	subwfb	??_printf& (0+255),w,b
 21882  011F6E  B0D8               	btfsc	status,0,c
 21883  011F70  D003               	goto	l1652
 21884                           
 21885                           ; BSR set to: 1
 21886                           ;doprnt.c: 1340: c = prec;
 21887  011F72  C1AF  F1B1         	movff	printf@prec,printf@c
 21888  011F76  D010               	goto	l1654
 21889  011F78                     l1652:
 21890                           
 21891                           ; BSR set to: 1
 21892                           ;doprnt.c: 1341: else if(prec < c)
 21893                           
 21894                           ; BSR set to: 1
 21895  011F78  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21896  011F7A  0A80               	xorlw	128
 21897  011F7C  6F8C               	movwf	??_printf& (0+255),b
 21898  011F7E  51B1               	movf	printf@c& (0+255),w,b
 21899  011F80  5DAF               	subwf	printf@prec& (0+255),w,b
 21900  011F82  0E80               	movlw	128
 21901  011F84  BFB1               	btfsc	printf@c& (0+255),7,b
 21902  011F86  0E7F               	movlw	127
 21903  011F88  598C               	subwfb	??_printf& (0+255),w,b
 21904  011F8A  B0D8               	btfsc	status,0,c
 21905  011F8C  D005               	goto	l1654
 21906                           
 21907                           ; BSR set to: 1
 21908                           ;doprnt.c: 1342: prec = c;
 21909  011F8E  51B1               	movf	printf@c& (0+255),w,b
 21910  011F90  6FAF               	movwf	printf@prec& (0+255),b
 21911  011F92  6BB0               	clrf	(printf@prec+1)& (0+255),b
 21912  011F94  BFAF               	btfsc	printf@prec& (0+255),7,b
 21913  011F96  07B0               	decf	(printf@prec+1)& (0+255),f,b
 21914  011F98                     l1654:
 21915                           
 21916                           ; BSR set to: 1
 21917                           ;doprnt.c: 1345: if(width && flag & 0x03)
 21918                           
 21919                           ; BSR set to: 1
 21920                           
 21921                           ; BSR set to: 1
 21922  011F98  51AD               	movf	printf@width& (0+255),w,b
 21923  011F9A  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 21924  011F9C  B4D8               	btfsc	status,2,c
 21925  011F9E  D00D               	goto	l1655
 21926                           
 21927                           ; BSR set to: 1
 21928  011FA0  0E03               	movlw	3
 21929  011FA2  15AB               	andwf	printf@flag& (0+255),w,b
 21930  011FA4  6F8C               	movwf	??_printf& (0+255),b
 21931  011FA6  0E00               	movlw	0
 21932  011FA8  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 21933  011FAA  6F8D               	movwf	(??_printf+1)& (0+255),b
 21934  011FAC  518C               	movf	??_printf& (0+255),w,b
 21935  011FAE  118D               	iorwf	(??_printf+1)& (0+255),w,b
 21936  011FB0  B4D8               	btfsc	status,2,c
 21937  011FB2  D003               	goto	l1655
 21938                           
 21939                           ; BSR set to: 1
 21940                           ;doprnt.c: 1346: width--;
 21941  011FB4  07AD               	decf	printf@width& (0+255),f,b
 21942  011FB6  A0D8               	btfss	status,0,c
 21943  011FB8  07AE               	decf	(printf@width+1)& (0+255),f,b
 21944  011FBA                     l1655:
 21945                           
 21946                           ; BSR set to: 1
 21947                           ;doprnt.c: 1348: if(flag & 0x4000) {
 21948                           
 21949                           ; BSR set to: 1
 21950  011FBA  ADAC               	btfss	(printf@flag+1)& (0+255),6,b
 21951  011FBC  D013               	goto	l1658
 21952                           
 21953                           ; BSR set to: 1
 21954                           ;doprnt.c: 1349: if(width > prec)
 21955  011FBE  51AD               	movf	printf@width& (0+255),w,b
 21956  011FC0  5DAF               	subwf	printf@prec& (0+255),w,b
 21957  011FC2  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21958  011FC4  0A80               	xorlw	128
 21959  011FC6  6F8C               	movwf	??_printf& (0+255),b
 21960  011FC8  51AE               	movf	(printf@width+1)& (0+255),w,b
 21961  011FCA  0A80               	xorlw	128
 21962  011FCC  598C               	subwfb	??_printf& (0+255),w,b
 21963  011FCE  B0D8               	btfsc	status,0,c
 21964  011FD0  D005               	goto	l1657
 21965                           
 21966                           ; BSR set to: 1
 21967                           ;doprnt.c: 1350: width -= prec;
 21968  011FD2  51AF               	movf	printf@prec& (0+255),w,b
 21969  011FD4  5FAD               	subwf	printf@width& (0+255),f,b
 21970  011FD6  51B0               	movf	(printf@prec+1)& (0+255),w,b
 21971  011FD8  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 21972  011FDA  D004               	goto	l1658
 21973  011FDC                     l1657:
 21974                           
 21975                           ; BSR set to: 1
 21976                           ;doprnt.c: 1351: else
 21977                           ;doprnt.c: 1352: width = 0;
 21978                           
 21979                           ; BSR set to: 1
 21980  011FDC  0E00               	movlw	0
 21981  011FDE  6FAE               	movwf	(printf@width+1)& (0+255),b
 21982  011FE0  0E00               	movlw	0
 21983  011FE2  6FAD               	movwf	printf@width& (0+255),b
 21984  011FE4                     l1658:
 21985                           
 21986                           ; BSR set to: 1
 21987                           ;doprnt.c: 1353: }
 21988                           ;doprnt.c: 1381: if(width > c)
 21989                           
 21990                           ; BSR set to: 1
 21991                           
 21992                           ; BSR set to: 1
 21993  011FE4  0E80               	movlw	128
 21994  011FE6  BFB1               	btfsc	printf@c& (0+255),7,b
 21995  011FE8  0E7F               	movlw	127
 21996  011FEA  6F8C               	movwf	??_printf& (0+255),b
 21997  011FEC  51AD               	movf	printf@width& (0+255),w,b
 21998  011FEE  5DB1               	subwf	printf@c& (0+255),w,b
 21999  011FF0  51AE               	movf	(printf@width+1)& (0+255),w,b
 22000  011FF2  0A80               	xorlw	128
 22001  011FF4  598C               	subwfb	??_printf& (0+255),w,b
 22002  011FF6  B0D8               	btfsc	status,0,c
 22003  011FF8  D007               	goto	l1659
 22004                           
 22005                           ; BSR set to: 1
 22006                           ;doprnt.c: 1382: width -= c;
 22007  011FFA  51B1               	movf	printf@c& (0+255),w,b
 22008  011FFC  5FAD               	subwf	printf@width& (0+255),f,b
 22009  011FFE  0E00               	movlw	0
 22010  012000  BFB1               	btfsc	printf@c& (0+255),7,b
 22011  012002  0EFF               	movlw	255
 22012  012004  5BAE               	subwfb	(printf@width+1)& (0+255),f,b
 22013  012006  D004               	goto	l1660
 22014  012008                     l1659:
 22015                           
 22016                           ; BSR set to: 1
 22017                           ;doprnt.c: 1383: else
 22018                           ;doprnt.c: 1384: width = 0;
 22019                           
 22020                           ; BSR set to: 1
 22021  012008  0E00               	movlw	0
 22022  01200A  6FAE               	movwf	(printf@width+1)& (0+255),b
 22023  01200C  0E00               	movlw	0
 22024  01200E  6FAD               	movwf	printf@width& (0+255),b
 22025  012010                     l1660:
 22026                           
 22027                           ; BSR set to: 1
 22028                           ;doprnt.c: 1387: if(flag & 0x04) {
 22029                           
 22030                           ; BSR set to: 1
 22031  012010  A5AB               	btfss	printf@flag& (0+255),2,b
 22032  012012  D01A               	goto	l1661
 22033                           
 22034                           ; BSR set to: 1
 22035                           ;doprnt.c: 1392: if(flag & 0x03)
 22036  012014  0E03               	movlw	3
 22037  012016  15AB               	andwf	printf@flag& (0+255),w,b
 22038  012018  6F8C               	movwf	??_printf& (0+255),b
 22039  01201A  0E00               	movlw	0
 22040  01201C  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 22041  01201E  6F8D               	movwf	(??_printf+1)& (0+255),b
 22042  012020  518C               	movf	??_printf& (0+255),w,b
 22043  012022  118D               	iorwf	(??_printf+1)& (0+255),w,b
 22044  012024  B4D8               	btfsc	status,2,c
 22045  012026  D003               	goto	l1662
 22046                           
 22047                           ; BSR set to: 1
 22048                           ;doprnt.c: 1393: (putch('-') );
 22049  012028  0E2D               	movlw	45
 22050  01202A  EC01  F0CB         	call	_putch
 22051  01202E                     l1662:
 22052                           
 22053                           ;doprnt.c: 1415: if(width)
 22054  01202E  0101               	movlb	1	; () banked
 22055  012030  51AD               	movf	printf@width& (0+255),w,b
 22056  012032  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 22057  012034  B4D8               	btfsc	status,2,c
 22058  012036  D0B2               	goto	l1671
 22059                           
 22060                           ; BSR set to: 1
 22061                           ;doprnt.c: 1417: (putch('0') );
 22062                           
 22063                           ; BSR set to: 1
 22064                           
 22065                           ;doprnt.c: 1416: do
 22066  012038  0E30               	movlw	48
 22067  01203A  EC01  F0CB         	call	_putch
 22068                           
 22069                           ;doprnt.c: 1418: while(--width);
 22070  01203E  0101               	movlb	1	; () banked
 22071  012040  07AD               	decf	printf@width& (0+255),f,b
 22072  012042  A0D8               	btfss	status,0,c
 22073  012044  07AE               	decf	(printf@width+1)& (0+255),f,b
 22074  012046  D7F4               	goto	L25
 22075  012048                     l1661:
 22076                           
 22077                           ; BSR set to: 1
 22078                           ;doprnt.c: 1422: {
 22079                           ;doprnt.c: 1424: if(width
 22080                           ;doprnt.c: 1428: )
 22081                           
 22082                           ; BSR set to: 1
 22083  012048  51AD               	movf	printf@width& (0+255),w,b
 22084  01204A  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 22085  01204C  B4D8               	btfsc	status,2,c
 22086  01204E  D00B               	goto	u25820
 22087  012050                     u25810:
 22088                           
 22089                           ; BSR set to: 1
 22090                           ;doprnt.c: 1430: (putch(' ') );
 22091                           
 22092                           ; BSR set to: 1
 22093                           
 22094                           ;doprnt.c: 1429: do
 22095  012050  0E20               	movlw	32
 22096  012052  EC01  F0CB         	call	_putch
 22097                           
 22098                           ;doprnt.c: 1431: while(--width);
 22099  012056  0101               	movlb	1	; () banked
 22100  012058  07AD               	decf	printf@width& (0+255),f,b
 22101  01205A  A0D8               	btfss	status,0,c
 22102  01205C  07AE               	decf	(printf@width+1)& (0+255),f,b
 22103  01205E  51AD               	movf	printf@width& (0+255),w,b
 22104  012060  11AE               	iorwf	(printf@width+1)& (0+255),w,b
 22105  012062  A4D8               	btfss	status,2,c
 22106  012064  D7F5               	goto	u25810
 22107  012066                     u25820:
 22108                           
 22109                           ; BSR set to: 1
 22110                           ;doprnt.c: 1438: if(flag & 0x03)
 22111                           
 22112                           ; BSR set to: 1
 22113                           
 22114                           ; BSR set to: 1
 22115  012066  0E03               	movlw	3
 22116  012068  15AB               	andwf	printf@flag& (0+255),w,b
 22117  01206A  6F8C               	movwf	??_printf& (0+255),b
 22118  01206C  0E00               	movlw	0
 22119  01206E  15AC               	andwf	(printf@flag+1)& (0+255),w,b
 22120  012070  6F8D               	movwf	(??_printf+1)& (0+255),b
 22121  012072  518C               	movf	??_printf& (0+255),w,b
 22122  012074  118D               	iorwf	(??_printf+1)& (0+255),w,b
 22123  012076  B4D8               	btfsc	status,2,c
 22124  012078  D091               	goto	l1671
 22125                           
 22126                           ; BSR set to: 1
 22127                           ;doprnt.c: 1439: (putch('-') );
 22128  01207A  0E2D               	movlw	45
 22129  01207C  EC01  F0CB         	call	_putch
 22130                           
 22131                           ;doprnt.c: 1469: }
 22132                           ;doprnt.c: 1474: while(prec--) {
 22133  012080  D08D               	goto	l1671
 22134  012082                     
 22135                           ;doprnt.c: 1486: case 0xC0:
 22136                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 22137  012082  C1AF  F18C         	movff	printf@prec,??_printf
 22138  012086  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 22139  01208A  0101               	movlb	1	; () banked
 22140  01208C  90D8               	bcf	status,0,c
 22141  01208E  378C               	rlcf	??_printf& (0+255),f,b
 22142  012090  378D               	rlcf	(??_printf+1)& (0+255),f,b
 22143  012092  90D8               	bcf	status,0,c
 22144  012094  378C               	rlcf	??_printf& (0+255),f,b
 22145  012096  378D               	rlcf	(??_printf+1)& (0+255),f,b
 22146  012098  0EA9               	movlw	low _dpowers
 22147  01209A  258C               	addwf	??_printf& (0+255),w,b
 22148  01209C  6EF6               	movwf	tblptrl,c
 22149  01209E  0ED7               	movlw	high _dpowers
 22150  0120A0  218D               	addwfc	(??_printf+1)& (0+255),w,b
 22151  0120A2  6EF7               	movwf	tblptrh,c
 22152  0120A4                     	if	1	;There are 3 active tblptr bytes
 22153  0120A4  6AF8               	clrf	tblptru,c
 22154  0120A6  0E00               	movlw	low (__mediumconst shr (0+16))
 22155  0120A8  22F8               	addwfc	tblptru,f,c
 22156  0120AA                     	endif
 22157  0120AA  0009               	tblrd		*+
 22158  0120AC  CFF5 F11B          	movff	tablat,___lldiv@divisor
 22159  0120B0  0009               	tblrd		*+
 22160  0120B2  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 22161  0120B6  0009               	tblrd		*+
 22162  0120B8  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 22163  0120BC  000A               	tblrd		*-
 22164  0120BE  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 22165  0120C2  C1A7  F117         	movff	printf@val,___lldiv@dividend
 22166  0120C6  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 22167  0120CA  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 22168  0120CE  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 22169  0120D2  EC45  F0C2         	call	___lldiv	;wreg free
 22170  0120D6  C117  F124         	movff	?___lldiv,___llmod@dividend
 22171  0120DA  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 22172  0120DE  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 22173  0120E2  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 22174  0120E6  0E0A               	movlw	10
 22175  0120E8  0101               	movlb	1	; () banked
 22176  0120EA  6F28               	movwf	___llmod@divisor& (0+255),b
 22177  0120EC  0E00               	movlw	0
 22178  0120EE  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 22179  0120F0  0E00               	movlw	0
 22180  0120F2  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 22181  0120F4  0E00               	movlw	0
 22182  0120F6  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 22183  0120F8  EC96  F0C4         	call	___llmod	;wreg free
 22184  0120FC  0101               	movlb	1	; () banked
 22185  0120FE  5124               	movf	?___llmod& (0+255),w,b
 22186  012100  0F30               	addlw	48
 22187  012102  6FB1               	movwf	printf@c& (0+255),b
 22188                           
 22189                           ;doprnt.c: 1491: break;
 22190  012104  D048               	goto	l1676
 22191  012106                     
 22192                           ; BSR set to: 1
 22193                           ;doprnt.c: 1499: {
 22194                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 22195                           
 22196                           ; BSR set to: 1
 22197  012106  C1A7  F117         	movff	printf@val,___lldiv@dividend
 22198  01210A  C1A8  F118         	movff	printf@val+1,___lldiv@dividend+1
 22199  01210E  C1A9  F119         	movff	printf@val+2,___lldiv@dividend+2
 22200  012112  C1AA  F11A         	movff	printf@val+3,___lldiv@dividend+3
 22201  012116  C1AF  F18C         	movff	printf@prec,??_printf
 22202  01211A  C1B0  F18D         	movff	printf@prec+1,??_printf+1
 22203  01211E  90D8               	bcf	status,0,c
 22204  012120  378C               	rlcf	??_printf& (0+255),f,b
 22205  012122  378D               	rlcf	(??_printf+1)& (0+255),f,b
 22206  012124  90D8               	bcf	status,0,c
 22207  012126  378C               	rlcf	??_printf& (0+255),f,b
 22208  012128  378D               	rlcf	(??_printf+1)& (0+255),f,b
 22209  01212A  0ED1               	movlw	low _hexpowers
 22210  01212C  258C               	addwf	??_printf& (0+255),w,b
 22211  01212E  6EF6               	movwf	tblptrl,c
 22212  012130  0ED7               	movlw	high _hexpowers
 22213  012132  218D               	addwfc	(??_printf+1)& (0+255),w,b
 22214  012134  6EF7               	movwf	tblptrh,c
 22215  012136                     	if	1	;There are 3 active tblptr bytes
 22216  012136  6AF8               	clrf	tblptru,c
 22217  012138  0E00               	movlw	low (__mediumconst shr (0+16))
 22218  01213A  22F8               	addwfc	tblptru,f,c
 22219  01213C                     	endif
 22220  01213C  0009               	tblrd		*+
 22221  01213E  CFF5 F11B          	movff	tablat,___lldiv@divisor
 22222  012142  0009               	tblrd		*+
 22223  012144  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 22224  012148  0009               	tblrd		*+
 22225  01214A  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 22226  01214E  000A               	tblrd		*-
 22227  012150  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 22228  012154  EC45  F0C2         	call	___lldiv	;wreg free
 22229  012158  0101               	movlb	1	; () banked
 22230  01215A  5117               	movf	?___lldiv& (0+255),w,b
 22231  01215C  0B0F               	andlw	15
 22232  01215E  6F96               	movwf	printf@idx& (0+255),b
 22233                           
 22234                           ; BSR set to: 1
 22235                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 22236  012160  5196               	movf	printf@idx& (0+255),w,b
 22237  012162  0D01               	mullw	1
 22238  012164  0E66               	movlw	low STR_167
 22239  012166  24F3               	addwf	prodl,w,c
 22240  012168  6EF6               	movwf	tblptrl,c
 22241  01216A  0EFD               	movlw	high STR_167
 22242  01216C  20F4               	addwfc	prodh,w,c
 22243  01216E  6EF7               	movwf	tblptrh,c
 22244  012170                     	if	1	;There are 3 active tblptr bytes
 22245  012170  6AF8               	clrf	tblptru,c
 22246  012172  0E00               	movlw	low (__mediumconst shr (0+16))
 22247  012174  22F8               	addwfc	tblptru,f,c
 22248  012176                     	endif
 22249  012176  0008               	tblrd		*
 22250  012178  CFF5 F1B1          	movff	tablat,printf@c
 22251                           
 22252                           ; BSR set to: 1
 22253                           ;doprnt.c: 1523: }
 22254                           
 22255                           ;doprnt.c: 1508: }
 22256                           ;doprnt.c: 1510: break;
 22257  01217C  D00C               	goto	l1676
 22258  01217E                     l19434:
 22259  01217E  0101               	movlb	1	; () banked
 22260  012180  51AB               	movf	printf@flag& (0+255),w,b
 22261  012182  0BC0               	andlw	192
 22262                           
 22263                           ; Switch size 1, requested type "space"
 22264                           ; Number of cases is 3, Range of values is 0 to 192
 22265                           ; switch strategies available:
 22266                           ; Name         Instructions Cycles
 22267                           ; simple_byte           10     6 (average)
 22268                           ;	Chosen strategy is simple_byte
 22269  012184  0A00               	xorlw	0	; case 0
 22270  012186  B4D8               	btfsc	status,2,c
 22271  012188  D77C               	goto	l1674
 22272  01218A  0A80               	xorlw	128	; case 128
 22273  01218C  B4D8               	btfsc	status,2,c
 22274  01218E  D7BB               	goto	l1677
 22275  012190  0A40               	xorlw	64	; case 192
 22276  012192  B4D8               	btfsc	status,2,c
 22277  012194  D776               	goto	l1674
 22278  012196                     l1676:
 22279                           
 22280                           ; BSR set to: 1
 22281                           ;doprnt.c: 1524: (putch(c) );
 22282                           
 22283                           ; BSR set to: 1
 22284  012196  51B1               	movf	printf@c& (0+255),w,b
 22285  012198  EC01  F0CB         	call	_putch
 22286  01219C                     l1671:
 22287  01219C  0101               	movlb	1	; () banked
 22288  01219E  07AF               	decf	printf@prec& (0+255),f,b
 22289  0121A0  A0D8               	btfss	status,0,c
 22290  0121A2  07B0               	decf	(printf@prec+1)& (0+255),f,b
 22291  0121A4  29AF               	incf	printf@prec& (0+255),w,b
 22292  0121A6  E1EB               	bnz	l19434
 22293  0121A8  29B0               	incf	(printf@prec+1)& (0+255),w,b
 22294  0121AA  A4D8               	btfss	status,2,c
 22295  0121AC  D7E8               	goto	l1673
 22296  0121AE                     u25840:
 22297                           
 22298                           ; BSR set to: 1
 22299                           
 22300                           ; BSR set to: 1
 22301  0121AE  0101               	movlb	1	; () banked
 22302  0121B0  5182               	movf	printf@f& (0+255),w,b
 22303  0121B2  6F8C               	movwf	??_printf& (0+255),b
 22304  0121B4  5183               	movf	(printf@f+1)& (0+255),w,b
 22305  0121B6  6F8D               	movwf	(??_printf+1)& (0+255),b
 22306  0121B8  4B82               	infsnz	printf@f& (0+255),f,b
 22307  0121BA  2B83               	incf	(printf@f+1)& (0+255),f,b
 22308  0121BC  C18C  FFF6         	movff	??_printf,tblptrl
 22309  0121C0  C18D  FFF7         	movff	??_printf+1,tblptrh
 22310  0121C4  0E00               	movlw	low (__mediumconst shr (0+16))
 22311  0121C6  6EF8               	movwf	tblptru,c
 22312  0121C8  0E0D               	movlw	(high __ramtop+-1)
 22313  0121CA  64F7               	cpfsgt	tblptrh,c
 22314  0121CC  D003               	bra	u25857
 22315  0121CE  0008               	tblrd		*
 22316  0121D0  50F5               	movf	tablat,w,c
 22317  0121D2  D005               	bra	u25850
 22318  0121D4                     u25857:
 22319  0121D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 22320  0121D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 22321  0121DC  50EF               	movf	indf0,w,c
 22322  0121DE                     u25850:
 22323  0121DE  0101               	movlb	1	; () banked
 22324  0121E0  6FB1               	movwf	printf@c& (0+255),b
 22325  0121E2  51B1               	movf	printf@c& (0+255),w,b
 22326  0121E4  B4D8               	btfsc	status,2,c
 22327  0121E6  0012               	return	
 22328  0121E8  EF16  F08A         	goto	l1545
 22329  0121EC                     __end_of_printf:
 22330                           	opt stack 0
 22331                           tblptru	equ	0xFF8
 22332                           tblptrh	equ	0xFF7
 22333                           tblptrl	equ	0xFF6
 22334                           tablat	equ	0xFF5
 22335                           prodh	equ	0xFF4
 22336                           prodl	equ	0xFF3
 22337                           intcon	equ	0xFF2
 22338                           indf0	equ	0xFEF
 22339                           postinc0	equ	0xFEE
 22340                           fsr0h	equ	0xFEA
 22341                           fsr0l	equ	0xFE9
 22342                           wreg	equ	0xFE8
 22343                           indf1	equ	0xFE7
 22344                           postdec1	equ	0xFE5
 22345                           plusw1	equ	0xFE3
 22346                           fsr1h	equ	0xFE2
 22347                           fsr1l	equ	0xFE1
 22348                           indf2	equ	0xFDF
 22349                           postinc2	equ	0xFDE
 22350                           postdec2	equ	0xFDD
 22351                           plusw2	equ	0xFDB
 22352                           fsr2h	equ	0xFDA
 22353                           fsr2l	equ	0xFD9
 22354                           status	equ	0xFD8
 22355                           
 22356 ;; *************** function _scale *****************
 22357 ;; Defined at:
 22358 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 22359 ;; Parameters:    Size  Location     Type
 22360 ;;  scl             1    wreg     char 
 22361 ;; Auto vars:     Size  Location     Type
 22362 ;;  scl             1  119[BANK1 ] char 
 22363 ;; Return value:  Size  Location     Type
 22364 ;;                  4  111[BANK1 ] char 
 22365 ;; Registers used:
 22366 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22367 ;; Tracked objects:
 22368 ;;		On entry : 0/0
 22369 ;;		On exit  : 0/0
 22370 ;;		Unchanged: 0/0
 22371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22372 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22373 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22375 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22376 ;;Total ram usage:        9 bytes
 22377 ;; Hardware stack levels used:    1
 22378 ;; Hardware stack levels required when called:   14
 22379 ;; This function calls:
 22380 ;;		___awdiv
 22381 ;;		___awmod
 22382 ;;		___flmul
 22383 ;; This function is called by:
 22384 ;;		_printf
 22385 ;; This function uses a non-reentrant model
 22386 ;;
 22387                           
 22388                           	psect	text30
 22389  013A8A                     __ptext30:
 22390                           	opt stack 0
 22391  013A8A                     _scale:
 22392                           	opt stack 13
 22393                           
 22394                           ; BSR set to: 1
 22395                           ;incstack = 0
 22396                           ;scale@scl stored from wreg
 22397  013A8A  0101               	movlb	1	; () banked
 22398  013A8C  6F77               	movwf	scale@scl& (0+255),b
 22399                           
 22400                           ;doprnt.c: 428: if(scl < 0) {
 22401  013A8E  0101               	movlb	1	; () banked
 22402  013A90  AF77               	btfss	scale@scl& (0+255),7,b
 22403  013A92  D127               	goto	l1534
 22404                           
 22405                           ; BSR set to: 1
 22406                           ;doprnt.c: 429: scl = -scl;
 22407  013A94  6D77               	negf	scale@scl& (0+255),b
 22408                           
 22409                           ;doprnt.c: 430: if(scl>=110)
 22410  013A96  5177               	movf	scale@scl& (0+255),w,b
 22411  013A98  0A80               	xorlw	128
 22412  013A9A  0F12               	addlw	-238
 22413  013A9C  A0D8               	btfss	status,0,c
 22414  013A9E  D0A5               	goto	l1535
 22415                           
 22416                           ; BSR set to: 1
 22417                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 22418  013AA0  0E00               	movlw	0
 22419  013AA2  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22420  013AA4  0E0A               	movlw	10
 22421  013AA6  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22422  013AA8  0E00               	movlw	0
 22423  013AAA  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22424  013AAC  0E64               	movlw	100
 22425  013AAE  6F19               	movwf	___awmod@divisor& (0+255),b
 22426  013AB0  5177               	movf	scale@scl& (0+255),w,b
 22427  013AB2  6F17               	movwf	___awmod@dividend& (0+255),b
 22428  013AB4  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22429  013AB6  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22430  013AB8  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22431  013ABA  EC85  F0C3         	call	___awmod	;wreg free
 22432  013ABE  C117  F11D         	movff	?___awmod,___awdiv@dividend
 22433  013AC2  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 22434  013AC6  EC02  F0C2         	call	___awdiv	;wreg free
 22435  013ACA  0101               	movlb	1	; () banked
 22436  013ACC  90D8               	bcf	status,0,c
 22437  013ACE  371D               	rlcf	?___awdiv& (0+255),f,b
 22438  013AD0  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22439  013AD2  90D8               	bcf	status,0,c
 22440  013AD4  371D               	rlcf	?___awdiv& (0+255),f,b
 22441  013AD6  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22442  013AD8  0E24               	movlw	36
 22443  013ADA  271D               	addwf	?___awdiv& (0+255),f,b
 22444  013ADC  0E00               	movlw	0
 22445  013ADE  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22446  013AE0  0E75               	movlw	low __npowers_
 22447  013AE2  251D               	addwf	?___awdiv& (0+255),w,b
 22448  013AE4  6EF6               	movwf	tblptrl,c
 22449  013AE6  0ED7               	movlw	high __npowers_
 22450  013AE8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22451  013AEA  6EF7               	movwf	tblptrh,c
 22452  013AEC                     	if	1	;There are 3 active tblptr bytes
 22453  013AEC  6AF8               	clrf	tblptru,c
 22454  013AEE  0E00               	movlw	low (__mediumconst shr (0+16))
 22455  013AF0  22F8               	addwfc	tblptru,f,c
 22456  013AF2                     	endif
 22457  013AF2  0009               	tblrd		*+
 22458  013AF4  CFF5 F15A          	movff	tablat,___flmul@a
 22459  013AF8  0009               	tblrd		*+
 22460  013AFA  CFF5 F15B          	movff	tablat,___flmul@a+1
 22461  013AFE  0009               	tblrd		*+
 22462  013B00  CFF5 F15C          	movff	tablat,___flmul@a+2
 22463  013B04  000A               	tblrd		*-
 22464  013B06  CFF5 F15D          	movff	tablat,___flmul@a+3
 22465  013B0A  0E00               	movlw	0
 22466  013B0C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22467  013B0E  0E64               	movlw	100
 22468  013B10  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22469  013B12  5177               	movf	scale@scl& (0+255),w,b
 22470  013B14  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22471  013B16  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22472  013B18  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22473  013B1A  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22474  013B1C  EC02  F0C2         	call	___awdiv	;wreg free
 22475  013B20  0101               	movlb	1	; () banked
 22476  013B22  90D8               	bcf	status,0,c
 22477  013B24  371D               	rlcf	?___awdiv& (0+255),f,b
 22478  013B26  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22479  013B28  90D8               	bcf	status,0,c
 22480  013B2A  371D               	rlcf	?___awdiv& (0+255),f,b
 22481  013B2C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22482  013B2E  0E48               	movlw	72
 22483  013B30  271D               	addwf	?___awdiv& (0+255),f,b
 22484  013B32  0E00               	movlw	0
 22485  013B34  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22486  013B36  0E75               	movlw	low __npowers_
 22487  013B38  251D               	addwf	?___awdiv& (0+255),w,b
 22488  013B3A  6EF6               	movwf	tblptrl,c
 22489  013B3C  0ED7               	movlw	high __npowers_
 22490  013B3E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22491  013B40  6EF7               	movwf	tblptrh,c
 22492  013B42                     	if	1	;There are 3 active tblptr bytes
 22493  013B42  6AF8               	clrf	tblptru,c
 22494  013B44  0E00               	movlw	low (__mediumconst shr (0+16))
 22495  013B46  22F8               	addwfc	tblptru,f,c
 22496  013B48                     	endif
 22497  013B48  0009               	tblrd		*+
 22498  013B4A  CFF5 F156          	movff	tablat,___flmul@b
 22499  013B4E  0009               	tblrd		*+
 22500  013B50  CFF5 F157          	movff	tablat,___flmul@b+1
 22501  013B54  0009               	tblrd		*+
 22502  013B56  CFF5 F158          	movff	tablat,___flmul@b+2
 22503  013B5A  000A               	tblrd		*-
 22504  013B5C  CFF5 F159          	movff	tablat,___flmul@b+3
 22505  013B60  EC8B  F0A3         	call	___flmul	;wreg free
 22506  013B64  C156  F173         	movff	?___flmul,_scale$4176
 22507  013B68  C157  F174         	movff	?___flmul+1,_scale$4176+1
 22508  013B6C  C158  F175         	movff	?___flmul+2,_scale$4176+2
 22509  013B70  C159  F176         	movff	?___flmul+3,_scale$4176+3
 22510                           
 22511                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 22512  013B74  C173  F156         	movff	_scale$4176,___flmul@b
 22513  013B78  C174  F157         	movff	_scale$4176+1,___flmul@b+1
 22514  013B7C  C175  F158         	movff	_scale$4176+2,___flmul@b+2
 22515  013B80  C176  F159         	movff	_scale$4176+3,___flmul@b+3
 22516  013B84  0E00               	movlw	0
 22517  013B86  0101               	movlb	1	; () banked
 22518  013B88  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22519  013B8A  0E0A               	movlw	10
 22520  013B8C  6F19               	movwf	___awmod@divisor& (0+255),b
 22521  013B8E  5177               	movf	scale@scl& (0+255),w,b
 22522  013B90  6F17               	movwf	___awmod@dividend& (0+255),b
 22523  013B92  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22524  013B94  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22525  013B96  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22526  013B98  EC85  F0C3         	call	___awmod	;wreg free
 22527  013B9C  0101               	movlb	1	; () banked
 22528  013B9E  90D8               	bcf	status,0,c
 22529  013BA0  3717               	rlcf	?___awmod& (0+255),f,b
 22530  013BA2  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22531  013BA4  90D8               	bcf	status,0,c
 22532  013BA6  3717               	rlcf	?___awmod& (0+255),f,b
 22533  013BA8  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22534  013BAA  0E75               	movlw	low __npowers_
 22535  013BAC  2517               	addwf	?___awmod& (0+255),w,b
 22536  013BAE  6EF6               	movwf	tblptrl,c
 22537  013BB0  0ED7               	movlw	high __npowers_
 22538  013BB2  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22539  013BB4  6EF7               	movwf	tblptrh,c
 22540  013BB6                     	if	1	;There are 3 active tblptr bytes
 22541  013BB6  6AF8               	clrf	tblptru,c
 22542  013BB8  0E00               	movlw	low (__mediumconst shr (0+16))
 22543  013BBA  22F8               	addwfc	tblptru,f,c
 22544  013BBC                     	endif
 22545  013BBC  0009               	tblrd		*+
 22546  013BBE  CFF5 F15A          	movff	tablat,___flmul@a
 22547  013BC2  0009               	tblrd		*+
 22548  013BC4  CFF5 F15B          	movff	tablat,___flmul@a+1
 22549  013BC8  0009               	tblrd		*+
 22550  013BCA  CFF5 F15C          	movff	tablat,___flmul@a+2
 22551  013BCE  000A               	tblrd		*-
 22552  013BD0  CFF5 F15D          	movff	tablat,___flmul@a+3
 22553  013BD4  EC8B  F0A3         	call	___flmul	;wreg free
 22554  013BD8  C156  F16F         	movff	?___flmul,?_scale
 22555  013BDC  C157  F170         	movff	?___flmul+1,?_scale+1
 22556  013BE0  C158  F171         	movff	?___flmul+2,?_scale+2
 22557  013BE4  C159  F172         	movff	?___flmul+3,?_scale+3
 22558  013BE8  0012               	return	
 22559  013BEA                     l1535:
 22560                           
 22561                           ;doprnt.c: 432: else if(scl > 10)
 22562  013BEA  0101               	movlb	1	; () banked
 22563  013BEC  5177               	movf	scale@scl& (0+255),w,b
 22564  013BEE  0A80               	xorlw	128
 22565  013BF0  0F75               	addlw	-139
 22566  013BF2  A0D8               	btfss	status,0,c
 22567  013BF4  D05D               	goto	l1538
 22568                           
 22569                           ; BSR set to: 1
 22570                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 22571  013BF6  0E00               	movlw	0
 22572  013BF8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22573  013BFA  0E0A               	movlw	10
 22574  013BFC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22575  013BFE  5177               	movf	scale@scl& (0+255),w,b
 22576  013C00  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22577  013C02  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22578  013C04  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22579  013C06  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22580  013C08  EC02  F0C2         	call	___awdiv	;wreg free
 22581  013C0C  0101               	movlb	1	; () banked
 22582  013C0E  90D8               	bcf	status,0,c
 22583  013C10  371D               	rlcf	?___awdiv& (0+255),f,b
 22584  013C12  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22585  013C14  90D8               	bcf	status,0,c
 22586  013C16  371D               	rlcf	?___awdiv& (0+255),f,b
 22587  013C18  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22588  013C1A  0E24               	movlw	36
 22589  013C1C  271D               	addwf	?___awdiv& (0+255),f,b
 22590  013C1E  0E00               	movlw	0
 22591  013C20  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22592  013C22  0E75               	movlw	low __npowers_
 22593  013C24  251D               	addwf	?___awdiv& (0+255),w,b
 22594  013C26  6EF6               	movwf	tblptrl,c
 22595  013C28  0ED7               	movlw	high __npowers_
 22596  013C2A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22597  013C2C  6EF7               	movwf	tblptrh,c
 22598  013C2E                     	if	1	;There are 3 active tblptr bytes
 22599  013C2E  6AF8               	clrf	tblptru,c
 22600  013C30  0E00               	movlw	low (__mediumconst shr (0+16))
 22601  013C32  22F8               	addwfc	tblptru,f,c
 22602  013C34                     	endif
 22603  013C34  0009               	tblrd		*+
 22604  013C36  CFF5 F156          	movff	tablat,___flmul@b
 22605  013C3A  0009               	tblrd		*+
 22606  013C3C  CFF5 F157          	movff	tablat,___flmul@b+1
 22607  013C40  0009               	tblrd		*+
 22608  013C42  CFF5 F158          	movff	tablat,___flmul@b+2
 22609  013C46  000A               	tblrd		*-
 22610  013C48  CFF5 F159          	movff	tablat,___flmul@b+3
 22611  013C4C  0E00               	movlw	0
 22612  013C4E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22613  013C50  0E0A               	movlw	10
 22614  013C52  6F19               	movwf	___awmod@divisor& (0+255),b
 22615  013C54  5177               	movf	scale@scl& (0+255),w,b
 22616  013C56  6F17               	movwf	___awmod@dividend& (0+255),b
 22617  013C58  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22618  013C5A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22619  013C5C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22620  013C5E  EC85  F0C3         	call	___awmod	;wreg free
 22621  013C62  0101               	movlb	1	; () banked
 22622  013C64  90D8               	bcf	status,0,c
 22623  013C66  3717               	rlcf	?___awmod& (0+255),f,b
 22624  013C68  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22625  013C6A  90D8               	bcf	status,0,c
 22626  013C6C  3717               	rlcf	?___awmod& (0+255),f,b
 22627  013C6E  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22628  013C70  0E75               	movlw	low __npowers_
 22629  013C72  2517               	addwf	?___awmod& (0+255),w,b
 22630  013C74  6EF6               	movwf	tblptrl,c
 22631  013C76  0ED7               	movlw	high __npowers_
 22632  013C78  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22633  013C7A  6EF7               	movwf	tblptrh,c
 22634  013C7C                     	if	1	;There are 3 active tblptr bytes
 22635  013C7C  6AF8               	clrf	tblptru,c
 22636  013C7E  0E00               	movlw	low (__mediumconst shr (0+16))
 22637  013C80  22F8               	addwfc	tblptru,f,c
 22638  013C82                     	endif
 22639  013C82  0009               	tblrd		*+
 22640  013C84  CFF5 F15A          	movff	tablat,___flmul@a
 22641  013C88  0009               	tblrd		*+
 22642  013C8A  CFF5 F15B          	movff	tablat,___flmul@a+1
 22643  013C8E  0009               	tblrd		*+
 22644  013C90  CFF5 F15C          	movff	tablat,___flmul@a+2
 22645  013C94  000A               	tblrd		*-
 22646  013C96  CFF5 F15D          	movff	tablat,___flmul@a+3
 22647  013C9A  EC8B  F0A3         	call	___flmul	;wreg free
 22648  013C9E  C156  F16F         	movff	?___flmul,?_scale
 22649  013CA2  C157  F170         	movff	?___flmul+1,?_scale+1
 22650  013CA6  C158  F171         	movff	?___flmul+2,?_scale+2
 22651  013CAA  C159  F172         	movff	?___flmul+3,?_scale+3
 22652  013CAE  0012               	return	
 22653  013CB0                     l1538:
 22654                           
 22655                           ;doprnt.c: 434: return _npowers_[scl];
 22656  013CB0  0101               	movlb	1	; () banked
 22657  013CB2  5177               	movf	scale@scl& (0+255),w,b
 22658  013CB4  0D04               	mullw	4
 22659  013CB6  0E75               	movlw	low __npowers_
 22660  013CB8  24F3               	addwf	prodl,w,c
 22661  013CBA  6EF6               	movwf	tblptrl,c
 22662  013CBC  0ED7               	movlw	high __npowers_
 22663  013CBE  20F4               	addwfc	prodh,w,c
 22664  013CC0  6EF7               	movwf	tblptrh,c
 22665  013CC2                     	if	1	;There are 3 active tblptr bytes
 22666  013CC2  6AF8               	clrf	tblptru,c
 22667  013CC4  0E00               	movlw	low (__mediumconst shr (0+16))
 22668  013CC6  22F8               	addwfc	tblptru,f,c
 22669  013CC8                     	endif
 22670  013CC8  0009               	tblrd		*+
 22671  013CCA  CFF5 F16F          	movff	tablat,?_scale
 22672  013CCE  0009               	tblrd		*+
 22673  013CD0  CFF5 F170          	movff	tablat,?_scale+1
 22674  013CD4  0009               	tblrd		*+
 22675  013CD6  CFF5 F171          	movff	tablat,?_scale+2
 22676  013CDA  000A               	tblrd		*-
 22677  013CDC  CFF5 F172          	movff	tablat,?_scale+3
 22678                           
 22679                           ; BSR set to: 1
 22680  013CE0  0012               	return	
 22681  013CE2                     l1534:
 22682                           
 22683                           ; BSR set to: 1
 22684                           ;doprnt.c: 435: }
 22685                           ;doprnt.c: 436: if(scl>=110)
 22686                           
 22687                           ; BSR set to: 1
 22688  013CE2  5177               	movf	scale@scl& (0+255),w,b
 22689  013CE4  0A80               	xorlw	128
 22690  013CE6  0F12               	addlw	-238
 22691  013CE8  A0D8               	btfss	status,0,c
 22692  013CEA  D0A5               	goto	l1539
 22693                           
 22694                           ; BSR set to: 1
 22695                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 22696  013CEC  0E00               	movlw	0
 22697  013CEE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22698  013CF0  0E0A               	movlw	10
 22699  013CF2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22700  013CF4  0E00               	movlw	0
 22701  013CF6  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22702  013CF8  0E64               	movlw	100
 22703  013CFA  6F19               	movwf	___awmod@divisor& (0+255),b
 22704  013CFC  5177               	movf	scale@scl& (0+255),w,b
 22705  013CFE  6F17               	movwf	___awmod@dividend& (0+255),b
 22706  013D00  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22707  013D02  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22708  013D04  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22709  013D06  EC85  F0C3         	call	___awmod	;wreg free
 22710  013D0A  C117  F11D         	movff	?___awmod,___awdiv@dividend
 22711  013D0E  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 22712  013D12  EC02  F0C2         	call	___awdiv	;wreg free
 22713  013D16  0101               	movlb	1	; () banked
 22714  013D18  90D8               	bcf	status,0,c
 22715  013D1A  371D               	rlcf	?___awdiv& (0+255),f,b
 22716  013D1C  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22717  013D1E  90D8               	bcf	status,0,c
 22718  013D20  371D               	rlcf	?___awdiv& (0+255),f,b
 22719  013D22  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22720  013D24  0E24               	movlw	36
 22721  013D26  271D               	addwf	?___awdiv& (0+255),f,b
 22722  013D28  0E00               	movlw	0
 22723  013D2A  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22724  013D2C  0E41               	movlw	low __powers_
 22725  013D2E  251D               	addwf	?___awdiv& (0+255),w,b
 22726  013D30  6EF6               	movwf	tblptrl,c
 22727  013D32  0ED7               	movlw	high __powers_
 22728  013D34  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22729  013D36  6EF7               	movwf	tblptrh,c
 22730  013D38                     	if	1	;There are 3 active tblptr bytes
 22731  013D38  6AF8               	clrf	tblptru,c
 22732  013D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 22733  013D3C  22F8               	addwfc	tblptru,f,c
 22734  013D3E                     	endif
 22735  013D3E  0009               	tblrd		*+
 22736  013D40  CFF5 F15A          	movff	tablat,___flmul@a
 22737  013D44  0009               	tblrd		*+
 22738  013D46  CFF5 F15B          	movff	tablat,___flmul@a+1
 22739  013D4A  0009               	tblrd		*+
 22740  013D4C  CFF5 F15C          	movff	tablat,___flmul@a+2
 22741  013D50  000A               	tblrd		*-
 22742  013D52  CFF5 F15D          	movff	tablat,___flmul@a+3
 22743  013D56  0E00               	movlw	0
 22744  013D58  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22745  013D5A  0E64               	movlw	100
 22746  013D5C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22747  013D5E  5177               	movf	scale@scl& (0+255),w,b
 22748  013D60  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22749  013D62  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22750  013D64  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22751  013D66  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22752  013D68  EC02  F0C2         	call	___awdiv	;wreg free
 22753  013D6C  0101               	movlb	1	; () banked
 22754  013D6E  90D8               	bcf	status,0,c
 22755  013D70  371D               	rlcf	?___awdiv& (0+255),f,b
 22756  013D72  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22757  013D74  90D8               	bcf	status,0,c
 22758  013D76  371D               	rlcf	?___awdiv& (0+255),f,b
 22759  013D78  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22760  013D7A  0E48               	movlw	72
 22761  013D7C  271D               	addwf	?___awdiv& (0+255),f,b
 22762  013D7E  0E00               	movlw	0
 22763  013D80  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22764  013D82  0E41               	movlw	low __powers_
 22765  013D84  251D               	addwf	?___awdiv& (0+255),w,b
 22766  013D86  6EF6               	movwf	tblptrl,c
 22767  013D88  0ED7               	movlw	high __powers_
 22768  013D8A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22769  013D8C  6EF7               	movwf	tblptrh,c
 22770  013D8E                     	if	1	;There are 3 active tblptr bytes
 22771  013D8E  6AF8               	clrf	tblptru,c
 22772  013D90  0E00               	movlw	low (__mediumconst shr (0+16))
 22773  013D92  22F8               	addwfc	tblptru,f,c
 22774  013D94                     	endif
 22775  013D94  0009               	tblrd		*+
 22776  013D96  CFF5 F156          	movff	tablat,___flmul@b
 22777  013D9A  0009               	tblrd		*+
 22778  013D9C  CFF5 F157          	movff	tablat,___flmul@b+1
 22779  013DA0  0009               	tblrd		*+
 22780  013DA2  CFF5 F158          	movff	tablat,___flmul@b+2
 22781  013DA6  000A               	tblrd		*-
 22782  013DA8  CFF5 F159          	movff	tablat,___flmul@b+3
 22783  013DAC  EC8B  F0A3         	call	___flmul	;wreg free
 22784  013DB0  C156  F173         	movff	?___flmul,_scale$4176
 22785  013DB4  C157  F174         	movff	?___flmul+1,_scale$4176+1
 22786  013DB8  C158  F175         	movff	?___flmul+2,_scale$4176+2
 22787  013DBC  C159  F176         	movff	?___flmul+3,_scale$4176+3
 22788                           
 22789                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 22790  013DC0  C173  F156         	movff	_scale$4176,___flmul@b
 22791  013DC4  C174  F157         	movff	_scale$4176+1,___flmul@b+1
 22792  013DC8  C175  F158         	movff	_scale$4176+2,___flmul@b+2
 22793  013DCC  C176  F159         	movff	_scale$4176+3,___flmul@b+3
 22794  013DD0  0E00               	movlw	0
 22795  013DD2  0101               	movlb	1	; () banked
 22796  013DD4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22797  013DD6  0E0A               	movlw	10
 22798  013DD8  6F19               	movwf	___awmod@divisor& (0+255),b
 22799  013DDA  5177               	movf	scale@scl& (0+255),w,b
 22800  013DDC  6F17               	movwf	___awmod@dividend& (0+255),b
 22801  013DDE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22802  013DE0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22803  013DE2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22804  013DE4  EC85  F0C3         	call	___awmod	;wreg free
 22805  013DE8  0101               	movlb	1	; () banked
 22806  013DEA  90D8               	bcf	status,0,c
 22807  013DEC  3717               	rlcf	?___awmod& (0+255),f,b
 22808  013DEE  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22809  013DF0  90D8               	bcf	status,0,c
 22810  013DF2  3717               	rlcf	?___awmod& (0+255),f,b
 22811  013DF4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22812  013DF6  0E41               	movlw	low __powers_
 22813  013DF8  2517               	addwf	?___awmod& (0+255),w,b
 22814  013DFA  6EF6               	movwf	tblptrl,c
 22815  013DFC  0ED7               	movlw	high __powers_
 22816  013DFE  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22817  013E00  6EF7               	movwf	tblptrh,c
 22818  013E02                     	if	1	;There are 3 active tblptr bytes
 22819  013E02  6AF8               	clrf	tblptru,c
 22820  013E04  0E00               	movlw	low (__mediumconst shr (0+16))
 22821  013E06  22F8               	addwfc	tblptru,f,c
 22822  013E08                     	endif
 22823  013E08  0009               	tblrd		*+
 22824  013E0A  CFF5 F15A          	movff	tablat,___flmul@a
 22825  013E0E  0009               	tblrd		*+
 22826  013E10  CFF5 F15B          	movff	tablat,___flmul@a+1
 22827  013E14  0009               	tblrd		*+
 22828  013E16  CFF5 F15C          	movff	tablat,___flmul@a+2
 22829  013E1A  000A               	tblrd		*-
 22830  013E1C  CFF5 F15D          	movff	tablat,___flmul@a+3
 22831  013E20  EC8B  F0A3         	call	___flmul	;wreg free
 22832  013E24  C156  F16F         	movff	?___flmul,?_scale
 22833  013E28  C157  F170         	movff	?___flmul+1,?_scale+1
 22834  013E2C  C158  F171         	movff	?___flmul+2,?_scale+2
 22835  013E30  C159  F172         	movff	?___flmul+3,?_scale+3
 22836  013E34  0012               	return	
 22837  013E36                     l1539:
 22838                           
 22839                           ;doprnt.c: 438: else if(scl > 10)
 22840  013E36  0101               	movlb	1	; () banked
 22841  013E38  5177               	movf	scale@scl& (0+255),w,b
 22842  013E3A  0A80               	xorlw	128
 22843  013E3C  0F75               	addlw	-139
 22844  013E3E  A0D8               	btfss	status,0,c
 22845  013E40  D05D               	goto	l1541
 22846                           
 22847                           ; BSR set to: 1
 22848                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 22849  013E42  0E00               	movlw	0
 22850  013E44  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 22851  013E46  0E0A               	movlw	10
 22852  013E48  6F1F               	movwf	___awdiv@divisor& (0+255),b
 22853  013E4A  5177               	movf	scale@scl& (0+255),w,b
 22854  013E4C  6F1D               	movwf	___awdiv@dividend& (0+255),b
 22855  013E4E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 22856  013E50  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 22857  013E52  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 22858  013E54  EC02  F0C2         	call	___awdiv	;wreg free
 22859  013E58  0101               	movlb	1	; () banked
 22860  013E5A  90D8               	bcf	status,0,c
 22861  013E5C  371D               	rlcf	?___awdiv& (0+255),f,b
 22862  013E5E  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22863  013E60  90D8               	bcf	status,0,c
 22864  013E62  371D               	rlcf	?___awdiv& (0+255),f,b
 22865  013E64  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 22866  013E66  0E24               	movlw	36
 22867  013E68  271D               	addwf	?___awdiv& (0+255),f,b
 22868  013E6A  0E00               	movlw	0
 22869  013E6C  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 22870  013E6E  0E41               	movlw	low __powers_
 22871  013E70  251D               	addwf	?___awdiv& (0+255),w,b
 22872  013E72  6EF6               	movwf	tblptrl,c
 22873  013E74  0ED7               	movlw	high __powers_
 22874  013E76  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 22875  013E78  6EF7               	movwf	tblptrh,c
 22876  013E7A                     	if	1	;There are 3 active tblptr bytes
 22877  013E7A  6AF8               	clrf	tblptru,c
 22878  013E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 22879  013E7E  22F8               	addwfc	tblptru,f,c
 22880  013E80                     	endif
 22881  013E80  0009               	tblrd		*+
 22882  013E82  CFF5 F156          	movff	tablat,___flmul@b
 22883  013E86  0009               	tblrd		*+
 22884  013E88  CFF5 F157          	movff	tablat,___flmul@b+1
 22885  013E8C  0009               	tblrd		*+
 22886  013E8E  CFF5 F158          	movff	tablat,___flmul@b+2
 22887  013E92  000A               	tblrd		*-
 22888  013E94  CFF5 F159          	movff	tablat,___flmul@b+3
 22889  013E98  0E00               	movlw	0
 22890  013E9A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 22891  013E9C  0E0A               	movlw	10
 22892  013E9E  6F19               	movwf	___awmod@divisor& (0+255),b
 22893  013EA0  5177               	movf	scale@scl& (0+255),w,b
 22894  013EA2  6F17               	movwf	___awmod@dividend& (0+255),b
 22895  013EA4  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 22896  013EA6  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 22897  013EA8  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 22898  013EAA  EC85  F0C3         	call	___awmod	;wreg free
 22899  013EAE  0101               	movlb	1	; () banked
 22900  013EB0  90D8               	bcf	status,0,c
 22901  013EB2  3717               	rlcf	?___awmod& (0+255),f,b
 22902  013EB4  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22903  013EB6  90D8               	bcf	status,0,c
 22904  013EB8  3717               	rlcf	?___awmod& (0+255),f,b
 22905  013EBA  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 22906  013EBC  0E41               	movlw	low __powers_
 22907  013EBE  2517               	addwf	?___awmod& (0+255),w,b
 22908  013EC0  6EF6               	movwf	tblptrl,c
 22909  013EC2  0ED7               	movlw	high __powers_
 22910  013EC4  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 22911  013EC6  6EF7               	movwf	tblptrh,c
 22912  013EC8                     	if	1	;There are 3 active tblptr bytes
 22913  013EC8  6AF8               	clrf	tblptru,c
 22914  013ECA  0E00               	movlw	low (__mediumconst shr (0+16))
 22915  013ECC  22F8               	addwfc	tblptru,f,c
 22916  013ECE                     	endif
 22917  013ECE  0009               	tblrd		*+
 22918  013ED0  CFF5 F15A          	movff	tablat,___flmul@a
 22919  013ED4  0009               	tblrd		*+
 22920  013ED6  CFF5 F15B          	movff	tablat,___flmul@a+1
 22921  013EDA  0009               	tblrd		*+
 22922  013EDC  CFF5 F15C          	movff	tablat,___flmul@a+2
 22923  013EE0  000A               	tblrd		*-
 22924  013EE2  CFF5 F15D          	movff	tablat,___flmul@a+3
 22925  013EE6  EC8B  F0A3         	call	___flmul	;wreg free
 22926  013EEA  C156  F16F         	movff	?___flmul,?_scale
 22927  013EEE  C157  F170         	movff	?___flmul+1,?_scale+1
 22928  013EF2  C158  F171         	movff	?___flmul+2,?_scale+2
 22929  013EF6  C159  F172         	movff	?___flmul+3,?_scale+3
 22930  013EFA  0012               	return	
 22931  013EFC                     l1541:
 22932                           
 22933                           ;doprnt.c: 440: return _powers_[scl];
 22934  013EFC  0101               	movlb	1	; () banked
 22935  013EFE  5177               	movf	scale@scl& (0+255),w,b
 22936  013F00  0D04               	mullw	4
 22937  013F02  0E41               	movlw	low __powers_
 22938  013F04  24F3               	addwf	prodl,w,c
 22939  013F06  6EF6               	movwf	tblptrl,c
 22940  013F08  0ED7               	movlw	high __powers_
 22941  013F0A  20F4               	addwfc	prodh,w,c
 22942  013F0C  6EF7               	movwf	tblptrh,c
 22943  013F0E                     	if	1	;There are 3 active tblptr bytes
 22944  013F0E  6AF8               	clrf	tblptru,c
 22945  013F10  0E00               	movlw	low (__mediumconst shr (0+16))
 22946  013F12  22F8               	addwfc	tblptru,f,c
 22947  013F14                     	endif
 22948  013F14  0009               	tblrd		*+
 22949  013F16  CFF5 F16F          	movff	tablat,?_scale
 22950  013F1A  0009               	tblrd		*+
 22951  013F1C  CFF5 F170          	movff	tablat,?_scale+1
 22952  013F20  0009               	tblrd		*+
 22953  013F22  CFF5 F171          	movff	tablat,?_scale+2
 22954  013F26  000A               	tblrd		*-
 22955  013F28  CFF5 F172          	movff	tablat,?_scale+3
 22956  013F2C  0012               	return	
 22957  013F2E                     __end_of_scale:
 22958                           	opt stack 0
 22959                           tblptru	equ	0xFF8
 22960                           tblptrh	equ	0xFF7
 22961                           tblptrl	equ	0xFF6
 22962                           tablat	equ	0xFF5
 22963                           prodh	equ	0xFF4
 22964                           prodl	equ	0xFF3
 22965                           intcon	equ	0xFF2
 22966                           indf0	equ	0xFEF
 22967                           postinc0	equ	0xFEE
 22968                           fsr0h	equ	0xFEA
 22969                           fsr0l	equ	0xFE9
 22970                           wreg	equ	0xFE8
 22971                           indf1	equ	0xFE7
 22972                           postdec1	equ	0xFE5
 22973                           plusw1	equ	0xFE3
 22974                           fsr1h	equ	0xFE2
 22975                           fsr1l	equ	0xFE1
 22976                           indf2	equ	0xFDF
 22977                           postinc2	equ	0xFDE
 22978                           postdec2	equ	0xFDD
 22979                           plusw2	equ	0xFDB
 22980                           fsr2h	equ	0xFDA
 22981                           fsr2l	equ	0xFD9
 22982                           status	equ	0xFD8
 22983                           
 22984 ;; *************** function _putch *****************
 22985 ;; Defined at:
 22986 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 22987 ;; Parameters:    Size  Location     Type
 22988 ;;  txData          1    wreg     unsigned char 
 22989 ;; Auto vars:     Size  Location     Type
 22990 ;;  txData          1   24[BANK1 ] unsigned char 
 22991 ;; Return value:  Size  Location     Type
 22992 ;;                  1    wreg      void 
 22993 ;; Registers used:
 22994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22995 ;; Tracked objects:
 22996 ;;		On entry : 0/0
 22997 ;;		On exit  : 0/0
 22998 ;;		Unchanged: 0/0
 22999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23001 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23003 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23004 ;;Total ram usage:        1 bytes
 23005 ;; Hardware stack levels used:    1
 23006 ;; Hardware stack levels required when called:   14
 23007 ;; This function calls:
 23008 ;;		_EUSART2_Write
 23009 ;; This function is called by:
 23010 ;;		_printf
 23011 ;; This function uses a non-reentrant model
 23012 ;;
 23013                           
 23014                           	psect	text31
 23015  019602                     __ptext31:
 23016                           	opt stack 0
 23017  019602                     _putch:
 23018                           	opt stack 13
 23019                           
 23020                           ;incstack = 0
 23021                           ;putch@txData stored from wreg
 23022  019602  0101               	movlb	1	; () banked
 23023  019604  6F18               	movwf	putch@txData& (0+255),b
 23024                           
 23025                           ;eusart2.c: 195: EUSART2_Write(txData);
 23026  019606  0101               	movlb	1	; () banked
 23027  019608  5118               	movf	putch@txData& (0+255),w,b
 23028  01960A  ECA3  F0C6         	call	_EUSART2_Write
 23029  01960E  0012               	return		;funcret
 23030  019610                     __end_of_putch:
 23031                           	opt stack 0
 23032                           tblptru	equ	0xFF8
 23033                           tblptrh	equ	0xFF7
 23034                           tblptrl	equ	0xFF6
 23035                           tablat	equ	0xFF5
 23036                           prodh	equ	0xFF4
 23037                           prodl	equ	0xFF3
 23038                           intcon	equ	0xFF2
 23039                           indf0	equ	0xFEF
 23040                           postinc0	equ	0xFEE
 23041                           fsr0h	equ	0xFEA
 23042                           fsr0l	equ	0xFE9
 23043                           wreg	equ	0xFE8
 23044                           indf1	equ	0xFE7
 23045                           postdec1	equ	0xFE5
 23046                           plusw1	equ	0xFE3
 23047                           fsr1h	equ	0xFE2
 23048                           fsr1l	equ	0xFE1
 23049                           indf2	equ	0xFDF
 23050                           postinc2	equ	0xFDE
 23051                           postdec2	equ	0xFDD
 23052                           plusw2	equ	0xFDB
 23053                           fsr2h	equ	0xFDA
 23054                           fsr2l	equ	0xFD9
 23055                           status	equ	0xFD8
 23056                           
 23057 ;; *************** function _EUSART2_Write *****************
 23058 ;; Defined at:
 23059 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 23060 ;; Parameters:    Size  Location     Type
 23061 ;;  txData          1    wreg     unsigned char 
 23062 ;; Auto vars:     Size  Location     Type
 23063 ;;  txData          1   23[BANK1 ] unsigned char 
 23064 ;; Return value:  Size  Location     Type
 23065 ;;                  1    wreg      void 
 23066 ;; Registers used:
 23067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23068 ;; Tracked objects:
 23069 ;;		On entry : 0/0
 23070 ;;		On exit  : 0/0
 23071 ;;		Unchanged: 0/0
 23072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23074 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23076 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23077 ;;Total ram usage:        1 bytes
 23078 ;; Hardware stack levels used:    1
 23079 ;; Hardware stack levels required when called:   13
 23080 ;; This function calls:
 23081 ;;		Nothing
 23082 ;; This function is called by:
 23083 ;;		_putch
 23084 ;; This function uses a non-reentrant model
 23085 ;;
 23086                           
 23087                           	psect	text32
 23088  018D46                     __ptext32:
 23089                           	opt stack 0
 23090  018D46                     _EUSART2_Write:
 23091                           	opt stack 13
 23092                           
 23093                           ;incstack = 0
 23094                           ;EUSART2_Write@txData stored from wreg
 23095  018D46  0101               	movlb	1	; () banked
 23096  018D48  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 23097                           
 23098                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 23099  018D4A  D002               	goto	l402
 23100  018D4C                     l403:
 23101                           
 23102                           ; BSR set to: 1
 23103  018D4C  0004               	clrwdt		;# 
 23104                           
 23105                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 23106  018D4E  827E               	bsf	3966,1,c	;volatile
 23107  018D50                     l402:
 23108  018D50  0101               	movlb	1	; () banked
 23109  018D52  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 23110  018D54  B4D8               	btfsc	status,2,c
 23111  018D56  D7FA               	goto	l403
 23112                           
 23113                           ; BSR set to: 1
 23114                           ;eusart2.c: 167: }
 23115                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 23116  018D58  927E               	bcf	3966,1,c	;volatile
 23117                           
 23118                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 23119  018D5A  010E               	movlb	14	; () banked
 23120  018D5C  BD2C               	btfsc	44,6,b	;volatile
 23121  018D5E  D003               	goto	l405
 23122                           
 23123                           ; BSR set to: 14
 23124                           ;eusart2.c: 172: {
 23125                           ;eusart2.c: 173: TX2REG = txData;
 23126  018D60  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 23127                           
 23128                           ;eusart2.c: 174: }
 23129  018D64  D013               	goto	l406
 23130  018D66                     l405:
 23131                           
 23132                           ; BSR set to: 14
 23133                           ;eusart2.c: 175: else
 23134                           ;eusart2.c: 176: {
 23135                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 23136  018D66  9D2C               	bcf	44,6,b	;volatile
 23137                           
 23138                           ; BSR set to: 14
 23139                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 23140  018D68  0101               	movlb	1	; () banked
 23141  018D6A  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 23142  018D6C  0D01               	mullw	1
 23143  018D6E  0E00               	movlw	low _eusart2TxBuffer
 23144  018D70  24F3               	addwf	prodl,w,c
 23145  018D72  6ED9               	movwf	fsr2l,c
 23146  018D74  0E03               	movlw	high _eusart2TxBuffer
 23147  018D76  20F4               	addwfc	prodh,w,c
 23148  018D78  6EDA               	movwf	fsr2h,c
 23149  018D7A  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 23150                           
 23151                           ; BSR set to: 1
 23152  018D7E  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 23153                           
 23154                           ; BSR set to: 1
 23155                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 23156  018D80  0E7F               	movlw	127
 23157  018D82  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 23158  018D84  D002               	goto	l407
 23159                           
 23160                           ; BSR set to: 1
 23161                           ;eusart2.c: 180: {
 23162                           ;eusart2.c: 181: eusart2TxHead = 0;
 23163  018D86  0E00               	movlw	0
 23164  018D88  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 23165  018D8A                     l407:
 23166                           
 23167                           ; BSR set to: 1
 23168                           ;eusart2.c: 182: }
 23169                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 23170                           
 23171                           ; BSR set to: 1
 23172  018D8A  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 23173  018D8C                     l406:
 23174                           
 23175                           ;eusart2.c: 184: }
 23176                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 23177                           
 23178                           ; BSR set to: 1
 23179  018D8C  010E               	movlb	14	; () banked
 23180  018D8E  8D2C               	bsf	44,6,b	;volatile
 23181                           
 23182                           ; BSR set to: 14
 23183  018D90  0012               	return		;funcret
 23184  018D92                     __end_of_EUSART2_Write:
 23185                           	opt stack 0
 23186                           tblptru	equ	0xFF8
 23187                           tblptrh	equ	0xFF7
 23188                           tblptrl	equ	0xFF6
 23189                           tablat	equ	0xFF5
 23190                           prodh	equ	0xFF4
 23191                           prodl	equ	0xFF3
 23192                           intcon	equ	0xFF2
 23193                           indf0	equ	0xFEF
 23194                           postinc0	equ	0xFEE
 23195                           fsr0h	equ	0xFEA
 23196                           fsr0l	equ	0xFE9
 23197                           wreg	equ	0xFE8
 23198                           indf1	equ	0xFE7
 23199                           postdec1	equ	0xFE5
 23200                           plusw1	equ	0xFE3
 23201                           fsr1h	equ	0xFE2
 23202                           fsr1l	equ	0xFE1
 23203                           indf2	equ	0xFDF
 23204                           postinc2	equ	0xFDE
 23205                           postdec2	equ	0xFDD
 23206                           plusw2	equ	0xFDB
 23207                           fsr2h	equ	0xFDA
 23208                           fsr2l	equ	0xFD9
 23209                           status	equ	0xFD8
 23210                           
 23211 ;; *************** function _isdigit *****************
 23212 ;; Defined at:
 23213 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 23214 ;; Parameters:    Size  Location     Type
 23215 ;;  c               1    wreg     unsigned char 
 23216 ;; Auto vars:     Size  Location     Type
 23217 ;;  c               1   25[BANK1 ] unsigned char 
 23218 ;; Return value:  Size  Location     Type
 23219 ;;		None               void
 23220 ;; Registers used:
 23221 ;;		wreg, status,2, status,0
 23222 ;; Tracked objects:
 23223 ;;		On entry : 0/0
 23224 ;;		On exit  : 0/0
 23225 ;;		Unchanged: 0/0
 23226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23228 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23229 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23230 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23231 ;;Total ram usage:        3 bytes
 23232 ;; Hardware stack levels used:    1
 23233 ;; Hardware stack levels required when called:   13
 23234 ;; This function calls:
 23235 ;;		Nothing
 23236 ;; This function is called by:
 23237 ;;		_printf
 23238 ;;		_atoi
 23239 ;; This function uses a non-reentrant model
 23240 ;;
 23241                           
 23242                           	psect	text33
 23243  019442                     __ptext33:
 23244                           	opt stack 0
 23245  019442                     _isdigit:
 23246                           	opt stack 14
 23247                           
 23248                           ; BSR set to: 14
 23249                           ;incstack = 0
 23250                           ;isdigit@c stored from wreg
 23251  019442  0101               	movlb	1	; () banked
 23252  019444  6F19               	movwf	isdigit@c& (0+255),b
 23253  019446  0E00               	movlw	0
 23254  019448  0101               	movlb	1	; () banked
 23255  01944A  6F18               	movwf	_isdigit$3451& (0+255),b
 23256                           
 23257                           ; BSR set to: 1
 23258  01944C  0E3A               	movlw	58
 23259  01944E  6119               	cpfslt	isdigit@c& (0+255),b
 23260  019450  D005               	goto	l2112
 23261                           
 23262                           ; BSR set to: 1
 23263  019452  0E2F               	movlw	47
 23264  019454  6519               	cpfsgt	isdigit@c& (0+255),b
 23265  019456  D002               	goto	l2112
 23266                           
 23267                           ; BSR set to: 1
 23268  019458  0E01               	movlw	1
 23269  01945A  6F18               	movwf	_isdigit$3451& (0+255),b
 23270  01945C                     l2112:
 23271                           
 23272                           ; BSR set to: 1
 23273                           
 23274                           ; BSR set to: 1
 23275  01945C  C118  F117         	movff	_isdigit$3451,??_isdigit
 23276  019460  3117               	rrcf	??_isdigit& (0+255),w,b
 23277  019462  0012               	return	
 23278  019464                     __end_of_isdigit:
 23279                           	opt stack 0
 23280                           tblptru	equ	0xFF8
 23281                           tblptrh	equ	0xFF7
 23282                           tblptrl	equ	0xFF6
 23283                           tablat	equ	0xFF5
 23284                           prodh	equ	0xFF4
 23285                           prodl	equ	0xFF3
 23286                           intcon	equ	0xFF2
 23287                           indf0	equ	0xFEF
 23288                           postinc0	equ	0xFEE
 23289                           fsr0h	equ	0xFEA
 23290                           fsr0l	equ	0xFE9
 23291                           wreg	equ	0xFE8
 23292                           indf1	equ	0xFE7
 23293                           postdec1	equ	0xFE5
 23294                           plusw1	equ	0xFE3
 23295                           fsr1h	equ	0xFE2
 23296                           fsr1l	equ	0xFE1
 23297                           indf2	equ	0xFDF
 23298                           postinc2	equ	0xFDE
 23299                           postdec2	equ	0xFDD
 23300                           plusw2	equ	0xFDB
 23301                           fsr2h	equ	0xFDA
 23302                           fsr2l	equ	0xFD9
 23303                           status	equ	0xFD8
 23304                           
 23305 ;; *************** function _fround *****************
 23306 ;; Defined at:
 23307 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23308 ;; Parameters:    Size  Location     Type
 23309 ;;  prec            1    wreg     unsigned char 
 23310 ;; Auto vars:     Size  Location     Type
 23311 ;;  prec            1  123[BANK1 ] unsigned char 
 23312 ;; Return value:  Size  Location     Type
 23313 ;;                  4  111[BANK1 ] unsigned char 
 23314 ;; Registers used:
 23315 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23316 ;; Tracked objects:
 23317 ;;		On entry : 0/0
 23318 ;;		On exit  : 0/0
 23319 ;;		Unchanged: 0/0
 23320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23321 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23322 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23324 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23325 ;;Total ram usage:       13 bytes
 23326 ;; Hardware stack levels used:    1
 23327 ;; Hardware stack levels required when called:   14
 23328 ;; This function calls:
 23329 ;;		___awdiv
 23330 ;;		___awmod
 23331 ;;		___flmul
 23332 ;; This function is called by:
 23333 ;;		_printf
 23334 ;; This function uses a non-reentrant model
 23335 ;;
 23336                           
 23337                           	psect	text34
 23338  015CFA                     __ptext34:
 23339                           	opt stack 0
 23340  015CFA                     _fround:
 23341                           	opt stack 13
 23342                           
 23343                           ; BSR set to: 1
 23344                           ;incstack = 0
 23345                           ;fround@prec stored from wreg
 23346  015CFA  0101               	movlb	1	; () banked
 23347  015CFC  6F7B               	movwf	fround@prec& (0+255),b
 23348                           
 23349                           ;doprnt.c: 413: if(prec>=110)
 23350  015CFE  0E6D               	movlw	109
 23351  015D00  0101               	movlb	1	; () banked
 23352  015D02  657B               	cpfsgt	fround@prec& (0+255),b
 23353  015D04  D0BA               	goto	l1528
 23354                           
 23355                           ; BSR set to: 1
 23356                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23357  015D06  0E00               	movlw	0
 23358  015D08  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23359  015D0A  0E0A               	movlw	10
 23360  015D0C  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23361  015D0E  0E00               	movlw	0
 23362  015D10  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23363  015D12  0E64               	movlw	100
 23364  015D14  6F19               	movwf	___awmod@divisor& (0+255),b
 23365  015D16  C17B  F117         	movff	fround@prec,___awmod@dividend
 23366  015D1A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23367  015D1C  EC85  F0C3         	call	___awmod	;wreg free
 23368  015D20  C117  F11D         	movff	?___awmod,___awdiv@dividend
 23369  015D24  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 23370  015D28  EC02  F0C2         	call	___awdiv	;wreg free
 23371  015D2C  0101               	movlb	1	; () banked
 23372  015D2E  90D8               	bcf	status,0,c
 23373  015D30  371D               	rlcf	?___awdiv& (0+255),f,b
 23374  015D32  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23375  015D34  90D8               	bcf	status,0,c
 23376  015D36  371D               	rlcf	?___awdiv& (0+255),f,b
 23377  015D38  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23378  015D3A  0E24               	movlw	36
 23379  015D3C  271D               	addwf	?___awdiv& (0+255),f,b
 23380  015D3E  0E00               	movlw	0
 23381  015D40  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23382  015D42  0E75               	movlw	low __npowers_
 23383  015D44  251D               	addwf	?___awdiv& (0+255),w,b
 23384  015D46  6EF6               	movwf	tblptrl,c
 23385  015D48  0ED7               	movlw	high __npowers_
 23386  015D4A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23387  015D4C  6EF7               	movwf	tblptrh,c
 23388  015D4E                     	if	1	;There are 3 active tblptr bytes
 23389  015D4E  6AF8               	clrf	tblptru,c
 23390  015D50  0E00               	movlw	low (__mediumconst shr (0+16))
 23391  015D52  22F8               	addwfc	tblptru,f,c
 23392  015D54                     	endif
 23393  015D54  0009               	tblrd		*+
 23394  015D56  CFF5 F15A          	movff	tablat,___flmul@a
 23395  015D5A  0009               	tblrd		*+
 23396  015D5C  CFF5 F15B          	movff	tablat,___flmul@a+1
 23397  015D60  0009               	tblrd		*+
 23398  015D62  CFF5 F15C          	movff	tablat,___flmul@a+2
 23399  015D66  000A               	tblrd		*-
 23400  015D68  CFF5 F15D          	movff	tablat,___flmul@a+3
 23401  015D6C  0E00               	movlw	0
 23402  015D6E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23403  015D70  0E64               	movlw	100
 23404  015D72  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23405  015D74  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 23406  015D78  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 23407  015D7A  EC02  F0C2         	call	___awdiv	;wreg free
 23408  015D7E  0101               	movlb	1	; () banked
 23409  015D80  90D8               	bcf	status,0,c
 23410  015D82  371D               	rlcf	?___awdiv& (0+255),f,b
 23411  015D84  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23412  015D86  90D8               	bcf	status,0,c
 23413  015D88  371D               	rlcf	?___awdiv& (0+255),f,b
 23414  015D8A  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23415  015D8C  0E48               	movlw	72
 23416  015D8E  271D               	addwf	?___awdiv& (0+255),f,b
 23417  015D90  0E00               	movlw	0
 23418  015D92  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23419  015D94  0E75               	movlw	low __npowers_
 23420  015D96  251D               	addwf	?___awdiv& (0+255),w,b
 23421  015D98  6EF6               	movwf	tblptrl,c
 23422  015D9A  0ED7               	movlw	high __npowers_
 23423  015D9C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23424  015D9E  6EF7               	movwf	tblptrh,c
 23425  015DA0                     	if	1	;There are 3 active tblptr bytes
 23426  015DA0  6AF8               	clrf	tblptru,c
 23427  015DA2  0E00               	movlw	low (__mediumconst shr (0+16))
 23428  015DA4  22F8               	addwfc	tblptru,f,c
 23429  015DA6                     	endif
 23430  015DA6  0009               	tblrd		*+
 23431  015DA8  CFF5 F156          	movff	tablat,___flmul@b
 23432  015DAC  0009               	tblrd		*+
 23433  015DAE  CFF5 F157          	movff	tablat,___flmul@b+1
 23434  015DB2  0009               	tblrd		*+
 23435  015DB4  CFF5 F158          	movff	tablat,___flmul@b+2
 23436  015DB8  000A               	tblrd		*-
 23437  015DBA  CFF5 F159          	movff	tablat,___flmul@b+3
 23438  015DBE  EC8B  F0A3         	call	___flmul	;wreg free
 23439  015DC2  C156  F177         	movff	?___flmul,_fround$4174
 23440  015DC6  C157  F178         	movff	?___flmul+1,_fround$4174+1
 23441  015DCA  C158  F179         	movff	?___flmul+2,_fround$4174+2
 23442  015DCE  C159  F17A         	movff	?___flmul+3,_fround$4174+3
 23443                           
 23444                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23445  015DD2  0E00               	movlw	0
 23446  015DD4  0101               	movlb	1	; () banked
 23447  015DD6  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23448  015DD8  0E0A               	movlw	10
 23449  015DDA  6F19               	movwf	___awmod@divisor& (0+255),b
 23450  015DDC  C17B  F117         	movff	fround@prec,___awmod@dividend
 23451  015DE0  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23452  015DE2  EC85  F0C3         	call	___awmod	;wreg free
 23453  015DE6  0101               	movlb	1	; () banked
 23454  015DE8  90D8               	bcf	status,0,c
 23455  015DEA  3717               	rlcf	?___awmod& (0+255),f,b
 23456  015DEC  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23457  015DEE  90D8               	bcf	status,0,c
 23458  015DF0  3717               	rlcf	?___awmod& (0+255),f,b
 23459  015DF2  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23460  015DF4  0E75               	movlw	low __npowers_
 23461  015DF6  2517               	addwf	?___awmod& (0+255),w,b
 23462  015DF8  6EF6               	movwf	tblptrl,c
 23463  015DFA  0ED7               	movlw	high __npowers_
 23464  015DFC  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 23465  015DFE  6EF7               	movwf	tblptrh,c
 23466  015E00                     	if	1	;There are 3 active tblptr bytes
 23467  015E00  6AF8               	clrf	tblptru,c
 23468  015E02  0E00               	movlw	low (__mediumconst shr (0+16))
 23469  015E04  22F8               	addwfc	tblptru,f,c
 23470  015E06                     	endif
 23471  015E06  0009               	tblrd		*+
 23472  015E08  CFF5 F15A          	movff	tablat,___flmul@a
 23473  015E0C  0009               	tblrd		*+
 23474  015E0E  CFF5 F15B          	movff	tablat,___flmul@a+1
 23475  015E12  0009               	tblrd		*+
 23476  015E14  CFF5 F15C          	movff	tablat,___flmul@a+2
 23477  015E18  000A               	tblrd		*-
 23478  015E1A  CFF5 F15D          	movff	tablat,___flmul@a+3
 23479  015E1E  C177  F156         	movff	_fround$4174,___flmul@b
 23480  015E22  C178  F157         	movff	_fround$4174+1,___flmul@b+1
 23481  015E26  C179  F158         	movff	_fround$4174+2,___flmul@b+2
 23482  015E2A  C17A  F159         	movff	_fround$4174+3,___flmul@b+3
 23483  015E2E  EC8B  F0A3         	call	___flmul	;wreg free
 23484  015E32  C156  F173         	movff	?___flmul,_fround$4175
 23485  015E36  C157  F174         	movff	?___flmul+1,_fround$4175+1
 23486  015E3A  C158  F175         	movff	?___flmul+2,_fround$4175+2
 23487  015E3E  C159  F176         	movff	?___flmul+3,_fround$4175+3
 23488                           
 23489                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23490  015E42  C173  F156         	movff	_fround$4175,___flmul@b
 23491  015E46  C174  F157         	movff	_fround$4175+1,___flmul@b+1
 23492  015E4A  C175  F158         	movff	_fround$4175+2,___flmul@b+2
 23493  015E4E  C176  F159         	movff	_fround$4175+3,___flmul@b+3
 23494  015E52  0E00               	movlw	0
 23495  015E54  0101               	movlb	1	; () banked
 23496  015E56  6F5A               	movwf	___flmul@a& (0+255),b
 23497  015E58  0E00               	movlw	0
 23498  015E5A  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23499  015E5C  0E00               	movlw	0
 23500  015E5E  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23501  015E60  0E3F               	movlw	63
 23502  015E62  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23503  015E64  EC8B  F0A3         	call	___flmul	;wreg free
 23504  015E68  C156  F16F         	movff	?___flmul,?_fround
 23505  015E6C  C157  F170         	movff	?___flmul+1,?_fround+1
 23506  015E70  C158  F171         	movff	?___flmul+2,?_fround+2
 23507  015E74  C159  F172         	movff	?___flmul+3,?_fround+3
 23508  015E78  0012               	return	
 23509  015E7A                     l1528:
 23510                           
 23511                           ;doprnt.c: 415: else if(prec > 10)
 23512  015E7A  0E0A               	movlw	10
 23513  015E7C  0101               	movlb	1	; () banked
 23514  015E7E  657B               	cpfsgt	fround@prec& (0+255),b
 23515  015E80  D074               	goto	l1531
 23516                           
 23517                           ; BSR set to: 1
 23518                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 23519  015E82  0E00               	movlw	0
 23520  015E84  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 23521  015E86  0E0A               	movlw	10
 23522  015E88  6F19               	movwf	___awmod@divisor& (0+255),b
 23523  015E8A  C17B  F117         	movff	fround@prec,___awmod@dividend
 23524  015E8E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 23525  015E90  EC85  F0C3         	call	___awmod	;wreg free
 23526  015E94  0101               	movlb	1	; () banked
 23527  015E96  90D8               	bcf	status,0,c
 23528  015E98  3717               	rlcf	?___awmod& (0+255),f,b
 23529  015E9A  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23530  015E9C  90D8               	bcf	status,0,c
 23531  015E9E  3717               	rlcf	?___awmod& (0+255),f,b
 23532  015EA0  3718               	rlcf	(?___awmod+1)& (0+255),f,b
 23533  015EA2  0E75               	movlw	low __npowers_
 23534  015EA4  2517               	addwf	?___awmod& (0+255),w,b
 23535  015EA6  6EF6               	movwf	tblptrl,c
 23536  015EA8  0ED7               	movlw	high __npowers_
 23537  015EAA  2118               	addwfc	(?___awmod+1)& (0+255),w,b
 23538  015EAC  6EF7               	movwf	tblptrh,c
 23539  015EAE                     	if	1	;There are 3 active tblptr bytes
 23540  015EAE  6AF8               	clrf	tblptru,c
 23541  015EB0  0E00               	movlw	low (__mediumconst shr (0+16))
 23542  015EB2  22F8               	addwfc	tblptru,f,c
 23543  015EB4                     	endif
 23544  015EB4  0009               	tblrd		*+
 23545  015EB6  CFF5 F15A          	movff	tablat,___flmul@a
 23546  015EBA  0009               	tblrd		*+
 23547  015EBC  CFF5 F15B          	movff	tablat,___flmul@a+1
 23548  015EC0  0009               	tblrd		*+
 23549  015EC2  CFF5 F15C          	movff	tablat,___flmul@a+2
 23550  015EC6  000A               	tblrd		*-
 23551  015EC8  CFF5 F15D          	movff	tablat,___flmul@a+3
 23552  015ECC  0E00               	movlw	0
 23553  015ECE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 23554  015ED0  0E0A               	movlw	10
 23555  015ED2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 23556  015ED4  C17B  F11D         	movff	fround@prec,___awdiv@dividend
 23557  015ED8  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 23558  015EDA  EC02  F0C2         	call	___awdiv	;wreg free
 23559  015EDE  0101               	movlb	1	; () banked
 23560  015EE0  90D8               	bcf	status,0,c
 23561  015EE2  371D               	rlcf	?___awdiv& (0+255),f,b
 23562  015EE4  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23563  015EE6  90D8               	bcf	status,0,c
 23564  015EE8  371D               	rlcf	?___awdiv& (0+255),f,b
 23565  015EEA  371E               	rlcf	(?___awdiv+1)& (0+255),f,b
 23566  015EEC  0E24               	movlw	36
 23567  015EEE  271D               	addwf	?___awdiv& (0+255),f,b
 23568  015EF0  0E00               	movlw	0
 23569  015EF2  231E               	addwfc	(?___awdiv+1)& (0+255),f,b
 23570  015EF4  0E75               	movlw	low __npowers_
 23571  015EF6  251D               	addwf	?___awdiv& (0+255),w,b
 23572  015EF8  6EF6               	movwf	tblptrl,c
 23573  015EFA  0ED7               	movlw	high __npowers_
 23574  015EFC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 23575  015EFE  6EF7               	movwf	tblptrh,c
 23576  015F00                     	if	1	;There are 3 active tblptr bytes
 23577  015F00  6AF8               	clrf	tblptru,c
 23578  015F02  0E00               	movlw	low (__mediumconst shr (0+16))
 23579  015F04  22F8               	addwfc	tblptru,f,c
 23580  015F06                     	endif
 23581  015F06  0009               	tblrd		*+
 23582  015F08  CFF5 F156          	movff	tablat,___flmul@b
 23583  015F0C  0009               	tblrd		*+
 23584  015F0E  CFF5 F157          	movff	tablat,___flmul@b+1
 23585  015F12  0009               	tblrd		*+
 23586  015F14  CFF5 F158          	movff	tablat,___flmul@b+2
 23587  015F18  000A               	tblrd		*-
 23588  015F1A  CFF5 F159          	movff	tablat,___flmul@b+3
 23589  015F1E  EC8B  F0A3         	call	___flmul	;wreg free
 23590  015F22  C156  F177         	movff	?___flmul,_fround$4174
 23591  015F26  C157  F178         	movff	?___flmul+1,_fround$4174+1
 23592  015F2A  C158  F179         	movff	?___flmul+2,_fround$4174+2
 23593  015F2E  C159  F17A         	movff	?___flmul+3,_fround$4174+3
 23594                           
 23595                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 23596  015F32  C177  F156         	movff	_fround$4174,___flmul@b
 23597  015F36  C178  F157         	movff	_fround$4174+1,___flmul@b+1
 23598  015F3A  C179  F158         	movff	_fround$4174+2,___flmul@b+2
 23599  015F3E  C17A  F159         	movff	_fround$4174+3,___flmul@b+3
 23600  015F42  0E00               	movlw	0
 23601  015F44  0101               	movlb	1	; () banked
 23602  015F46  6F5A               	movwf	___flmul@a& (0+255),b
 23603  015F48  0E00               	movlw	0
 23604  015F4A  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23605  015F4C  0E00               	movlw	0
 23606  015F4E  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23607  015F50  0E3F               	movlw	63
 23608  015F52  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23609  015F54  EC8B  F0A3         	call	___flmul	;wreg free
 23610  015F58  C156  F16F         	movff	?___flmul,?_fround
 23611  015F5C  C157  F170         	movff	?___flmul+1,?_fround+1
 23612  015F60  C158  F171         	movff	?___flmul+2,?_fround+2
 23613  015F64  C159  F172         	movff	?___flmul+3,?_fround+3
 23614  015F68  0012               	return	
 23615  015F6A                     l1531:
 23616                           
 23617                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 23618  015F6A  0101               	movlb	1	; () banked
 23619  015F6C  517B               	movf	fround@prec& (0+255),w,b
 23620  015F6E  0D04               	mullw	4
 23621  015F70  0E75               	movlw	low __npowers_
 23622  015F72  24F3               	addwf	prodl,w,c
 23623  015F74  6EF6               	movwf	tblptrl,c
 23624  015F76  0ED7               	movlw	high __npowers_
 23625  015F78  20F4               	addwfc	prodh,w,c
 23626  015F7A  6EF7               	movwf	tblptrh,c
 23627  015F7C                     	if	1	;There are 3 active tblptr bytes
 23628  015F7C  6AF8               	clrf	tblptru,c
 23629  015F7E  0E00               	movlw	low (__mediumconst shr (0+16))
 23630  015F80  22F8               	addwfc	tblptru,f,c
 23631  015F82                     	endif
 23632  015F82  0009               	tblrd		*+
 23633  015F84  CFF5 F156          	movff	tablat,___flmul@b
 23634  015F88  0009               	tblrd		*+
 23635  015F8A  CFF5 F157          	movff	tablat,___flmul@b+1
 23636  015F8E  0009               	tblrd		*+
 23637  015F90  CFF5 F158          	movff	tablat,___flmul@b+2
 23638  015F94  000A               	tblrd		*-
 23639  015F96  CFF5 F159          	movff	tablat,___flmul@b+3
 23640  015F9A  0E00               	movlw	0
 23641  015F9C  6F5A               	movwf	___flmul@a& (0+255),b
 23642  015F9E  0E00               	movlw	0
 23643  015FA0  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23644  015FA2  0E00               	movlw	0
 23645  015FA4  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23646  015FA6  0E3F               	movlw	63
 23647  015FA8  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23648  015FAA  EC8B  F0A3         	call	___flmul	;wreg free
 23649  015FAE  C156  F16F         	movff	?___flmul,?_fround
 23650  015FB2  C157  F170         	movff	?___flmul+1,?_fround+1
 23651  015FB6  C158  F171         	movff	?___flmul+2,?_fround+2
 23652  015FBA  C159  F172         	movff	?___flmul+3,?_fround+3
 23653  015FBE  0012               	return	
 23654  015FC0                     __end_of_fround:
 23655                           	opt stack 0
 23656                           tblptru	equ	0xFF8
 23657                           tblptrh	equ	0xFF7
 23658                           tblptrl	equ	0xFF6
 23659                           tablat	equ	0xFF5
 23660                           prodh	equ	0xFF4
 23661                           prodl	equ	0xFF3
 23662                           intcon	equ	0xFF2
 23663                           indf0	equ	0xFEF
 23664                           postinc0	equ	0xFEE
 23665                           fsr0h	equ	0xFEA
 23666                           fsr0l	equ	0xFE9
 23667                           wreg	equ	0xFE8
 23668                           indf1	equ	0xFE7
 23669                           postdec1	equ	0xFE5
 23670                           plusw1	equ	0xFE3
 23671                           fsr1h	equ	0xFE2
 23672                           fsr1l	equ	0xFE1
 23673                           indf2	equ	0xFDF
 23674                           postinc2	equ	0xFDE
 23675                           postdec2	equ	0xFDD
 23676                           plusw2	equ	0xFDB
 23677                           fsr2h	equ	0xFDA
 23678                           fsr2l	equ	0xFD9
 23679                           status	equ	0xFD8
 23680                           
 23681 ;; *************** function ___flmul *****************
 23682 ;; Defined at:
 23683 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 23684 ;; Parameters:    Size  Location     Type
 23685 ;;  b               4   86[BANK1 ] unsigned char 
 23686 ;;  a               4   90[BANK1 ] unsigned char 
 23687 ;; Auto vars:     Size  Location     Type
 23688 ;;  prod            4  105[BANK1 ] struct .
 23689 ;;  grs             4  101[BANK1 ] unsigned long 
 23690 ;;  temp            2  109[BANK1 ] struct .
 23691 ;;  bexp            1  100[BANK1 ] unsigned char 
 23692 ;;  aexp            1   99[BANK1 ] unsigned char 
 23693 ;;  sign            1   98[BANK1 ] unsigned char 
 23694 ;; Return value:  Size  Location     Type
 23695 ;;                  4   86[BANK1 ] unsigned char 
 23696 ;; Registers used:
 23697 ;;		wreg, status,2, status,0, prodl, prodh
 23698 ;; Tracked objects:
 23699 ;;		On entry : 0/0
 23700 ;;		On exit  : 0/0
 23701 ;;		Unchanged: 0/0
 23702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23703 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23704 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23705 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23706 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23707 ;;Total ram usage:       25 bytes
 23708 ;; Hardware stack levels used:    1
 23709 ;; Hardware stack levels required when called:   13
 23710 ;; This function calls:
 23711 ;;		Nothing
 23712 ;; This function is called by:
 23713 ;;		_ringBufferLUT
 23714 ;;		_fround
 23715 ;;		_scale
 23716 ;;		_printf
 23717 ;; This function uses a non-reentrant model
 23718 ;;
 23719                           
 23720                           	psect	text35
 23721  014716                     __ptext35:
 23722                           	opt stack 0
 23723  014716                     ___flmul:
 23724                           	opt stack 13
 23725                           
 23726                           ;incstack = 0
 23727  014716  0101               	movlb	1	; () banked
 23728  014718  5159               	movf	(___flmul@b+3)& (0+255),w,b
 23729  01471A  0B80               	andlw	128
 23730  01471C  6F62               	movwf	___flmul@sign& (0+255),b
 23731  01471E  5159               	movf	(___flmul@b+3)& (0+255),w,b
 23732  014720  2559               	addwf	(___flmul@b+3)& (0+255),w,b
 23733  014722  6F64               	movwf	___flmul@bexp& (0+255),b
 23734                           
 23735                           ; BSR set to: 1
 23736  014724  BF58               	btfsc	(___flmul@b+2)& (0+255),7,b
 23737                           
 23738                           ; BSR set to: 1
 23739  014726  8164               	bsf	___flmul@bexp& (0+255),0,b
 23740                           
 23741                           ; BSR set to: 1
 23742                           
 23743                           ; BSR set to: 1
 23744  014728  5164               	movf	___flmul@bexp& (0+255),w,b
 23745  01472A  B4D8               	btfsc	status,2,c
 23746  01472C  D00D               	goto	l2326
 23747                           
 23748                           ; BSR set to: 1
 23749  01472E  2964               	incf	___flmul@bexp& (0+255),w,b
 23750  014730  A4D8               	btfss	status,2,c
 23751  014732  D008               	goto	l2327
 23752                           
 23753                           ; BSR set to: 1
 23754  014734  0E00               	movlw	0
 23755  014736  6F56               	movwf	___flmul@b& (0+255),b
 23756  014738  0E00               	movlw	0
 23757  01473A  6F57               	movwf	(___flmul@b+1)& (0+255),b
 23758  01473C  0E00               	movlw	0
 23759  01473E  6F58               	movwf	(___flmul@b+2)& (0+255),b
 23760  014740  0E00               	movlw	0
 23761  014742  6F59               	movwf	(___flmul@b+3)& (0+255),b
 23762  014744                     l2327:
 23763                           
 23764                           ; BSR set to: 1
 23765                           
 23766                           ; BSR set to: 1
 23767  014744  8F58               	bsf	(___flmul@b+2)& (0+255),7,b
 23768  014746  D008               	goto	l2328
 23769  014748                     l2326:
 23770                           
 23771                           ; BSR set to: 1
 23772                           
 23773                           ; BSR set to: 1
 23774  014748  0E00               	movlw	0
 23775  01474A  6F56               	movwf	___flmul@b& (0+255),b
 23776  01474C  0E00               	movlw	0
 23777  01474E  6F57               	movwf	(___flmul@b+1)& (0+255),b
 23778  014750  0E00               	movlw	0
 23779  014752  6F58               	movwf	(___flmul@b+2)& (0+255),b
 23780  014754  0E00               	movlw	0
 23781  014756  6F59               	movwf	(___flmul@b+3)& (0+255),b
 23782  014758                     l2328:
 23783                           
 23784                           ; BSR set to: 1
 23785                           
 23786                           ; BSR set to: 1
 23787  014758  515D               	movf	(___flmul@a+3)& (0+255),w,b
 23788  01475A  0B80               	andlw	128
 23789  01475C  1B62               	xorwf	___flmul@sign& (0+255),f,b
 23790                           
 23791                           ; BSR set to: 1
 23792  01475E  515D               	movf	(___flmul@a+3)& (0+255),w,b
 23793  014760  255D               	addwf	(___flmul@a+3)& (0+255),w,b
 23794  014762  6F63               	movwf	___flmul@aexp& (0+255),b
 23795                           
 23796                           ; BSR set to: 1
 23797  014764  BF5C               	btfsc	(___flmul@a+2)& (0+255),7,b
 23798                           
 23799                           ; BSR set to: 1
 23800  014766  8163               	bsf	___flmul@aexp& (0+255),0,b
 23801                           
 23802                           ; BSR set to: 1
 23803                           
 23804                           ; BSR set to: 1
 23805  014768  5163               	movf	___flmul@aexp& (0+255),w,b
 23806  01476A  B4D8               	btfsc	status,2,c
 23807  01476C  D00D               	goto	l2330
 23808                           
 23809                           ; BSR set to: 1
 23810  01476E  2963               	incf	___flmul@aexp& (0+255),w,b
 23811  014770  A4D8               	btfss	status,2,c
 23812  014772  D008               	goto	l2331
 23813                           
 23814                           ; BSR set to: 1
 23815  014774  0E00               	movlw	0
 23816  014776  6F5A               	movwf	___flmul@a& (0+255),b
 23817  014778  0E00               	movlw	0
 23818  01477A  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23819  01477C  0E00               	movlw	0
 23820  01477E  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23821  014780  0E00               	movlw	0
 23822  014782  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23823  014784                     l2331:
 23824                           
 23825                           ; BSR set to: 1
 23826                           
 23827                           ; BSR set to: 1
 23828  014784  8F5C               	bsf	(___flmul@a+2)& (0+255),7,b
 23829  014786  D008               	goto	l2332
 23830  014788                     l2330:
 23831                           
 23832                           ; BSR set to: 1
 23833                           
 23834                           ; BSR set to: 1
 23835  014788  0E00               	movlw	0
 23836  01478A  6F5A               	movwf	___flmul@a& (0+255),b
 23837  01478C  0E00               	movlw	0
 23838  01478E  6F5B               	movwf	(___flmul@a+1)& (0+255),b
 23839  014790  0E00               	movlw	0
 23840  014792  6F5C               	movwf	(___flmul@a+2)& (0+255),b
 23841  014794  0E00               	movlw	0
 23842  014796  6F5D               	movwf	(___flmul@a+3)& (0+255),b
 23843  014798                     l2332:
 23844                           
 23845                           ; BSR set to: 1
 23846  014798  5163               	movf	___flmul@aexp& (0+255),w,b
 23847  01479A  B4D8               	btfsc	status,2,c
 23848  01479C  D003               	goto	u24310
 23849                           
 23850                           ; BSR set to: 1
 23851  01479E  5164               	movf	___flmul@bexp& (0+255),w,b
 23852  0147A0  A4D8               	btfss	status,2,c
 23853  0147A2  D009               	goto	l2333
 23854  0147A4                     u24310:
 23855                           
 23856                           ; BSR set to: 1
 23857                           
 23858                           ; BSR set to: 1
 23859  0147A4  0E00               	movlw	0
 23860  0147A6  6F56               	movwf	?___flmul& (0+255),b
 23861  0147A8  0E00               	movlw	0
 23862  0147AA  6F57               	movwf	(?___flmul+1)& (0+255),b
 23863  0147AC  0E00               	movlw	0
 23864  0147AE  6F58               	movwf	(?___flmul+2)& (0+255),b
 23865  0147B0  0E00               	movlw	0
 23866  0147B2  6F59               	movwf	(?___flmul+3)& (0+255),b
 23867                           
 23868                           ; BSR set to: 1
 23869  0147B4  0012               	return	
 23870  0147B6                     l2333:
 23871                           
 23872                           ; BSR set to: 1
 23873                           
 23874                           ; BSR set to: 1
 23875  0147B6  515C               	movf	(___flmul@a+2)& (0+255),w,b
 23876  0147B8  0356               	mulwf	___flmul@b& (0+255),b
 23877  0147BA  CFF3 F16D          	movff	prodl,___flmul@temp
 23878  0147BE  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23879                           
 23880                           ; BSR set to: 1
 23881  0147C2  516D               	movf	___flmul@temp& (0+255),w,b
 23882  0147C4  6F65               	movwf	___flmul@grs& (0+255),b
 23883  0147C6  6B66               	clrf	(___flmul@grs+1)& (0+255),b
 23884  0147C8  6B67               	clrf	(___flmul@grs+2)& (0+255),b
 23885  0147CA  6B68               	clrf	(___flmul@grs+3)& (0+255),b
 23886                           
 23887                           ; BSR set to: 1
 23888  0147CC  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23889  0147CE  6F69               	movwf	___flmul@prod& (0+255),b
 23890  0147D0  6B6A               	clrf	(___flmul@prod+1)& (0+255),b
 23891  0147D2  6B6B               	clrf	(___flmul@prod+2)& (0+255),b
 23892  0147D4  6B6C               	clrf	(___flmul@prod+3)& (0+255),b
 23893  0147D6  515B               	movf	(___flmul@a+1)& (0+255),w,b
 23894  0147D8  0357               	mulwf	(___flmul@b+1)& (0+255),b
 23895  0147DA  CFF3 F16D          	movff	prodl,___flmul@temp
 23896  0147DE  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23897                           
 23898                           ; BSR set to: 1
 23899  0147E2  516D               	movf	___flmul@temp& (0+255),w,b
 23900  0147E4  2765               	addwf	___flmul@grs& (0+255),f,b
 23901  0147E6  0E00               	movlw	0
 23902  0147E8  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23903  0147EA  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23904  0147EC  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23905                           
 23906                           ; BSR set to: 1
 23907  0147EE  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23908  0147F0  2769               	addwf	___flmul@prod& (0+255),f,b
 23909  0147F2  0E00               	movlw	0
 23910  0147F4  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23911  0147F6  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23912  0147F8  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23913  0147FA  515A               	movf	___flmul@a& (0+255),w,b
 23914  0147FC  0358               	mulwf	(___flmul@b+2)& (0+255),b
 23915  0147FE  CFF3 F16D          	movff	prodl,___flmul@temp
 23916  014802  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23917                           
 23918                           ; BSR set to: 1
 23919  014806  516D               	movf	___flmul@temp& (0+255),w,b
 23920  014808  2765               	addwf	___flmul@grs& (0+255),f,b
 23921  01480A  0E00               	movlw	0
 23922  01480C  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23923  01480E  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23924  014810  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23925                           
 23926                           ; BSR set to: 1
 23927  014812  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23928  014814  2769               	addwf	___flmul@prod& (0+255),f,b
 23929  014816  0E00               	movlw	0
 23930  014818  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23931  01481A  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23932  01481C  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23933                           
 23934                           ; BSR set to: 1
 23935  01481E  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 23936  014822  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 23937  014826  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 23938  01482A  6B65               	clrf	___flmul@grs& (0+255),b
 23939                           
 23940                           ; BSR set to: 1
 23941  01482C  515A               	movf	___flmul@a& (0+255),w,b
 23942  01482E  0357               	mulwf	(___flmul@b+1)& (0+255),b
 23943  014830  CFF3 F16D          	movff	prodl,___flmul@temp
 23944  014834  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23945                           
 23946                           ; BSR set to: 1
 23947  014838  516D               	movf	___flmul@temp& (0+255),w,b
 23948  01483A  2765               	addwf	___flmul@grs& (0+255),f,b
 23949  01483C  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23950  01483E  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23951  014840  0E00               	movlw	0
 23952  014842  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23953  014844  0E00               	movlw	0
 23954  014846  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23955                           
 23956                           ; BSR set to: 1
 23957  014848  515B               	movf	(___flmul@a+1)& (0+255),w,b
 23958  01484A  0356               	mulwf	___flmul@b& (0+255),b
 23959  01484C  CFF3 F16D          	movff	prodl,___flmul@temp
 23960  014850  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23961                           
 23962                           ; BSR set to: 1
 23963  014854  516D               	movf	___flmul@temp& (0+255),w,b
 23964  014856  2765               	addwf	___flmul@grs& (0+255),f,b
 23965  014858  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23966  01485A  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23967  01485C  0E00               	movlw	0
 23968  01485E  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23969  014860  0E00               	movlw	0
 23970  014862  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23971                           
 23972                           ; BSR set to: 1
 23973  014864  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 23974  014868  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 23975  01486C  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 23976  014870  6B65               	clrf	___flmul@grs& (0+255),b
 23977  014872  515A               	movf	___flmul@a& (0+255),w,b
 23978  014874  0356               	mulwf	___flmul@b& (0+255),b
 23979  014876  CFF3 F16D          	movff	prodl,___flmul@temp
 23980  01487A  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23981                           
 23982                           ; BSR set to: 1
 23983  01487E  516D               	movf	___flmul@temp& (0+255),w,b
 23984  014880  2765               	addwf	___flmul@grs& (0+255),f,b
 23985  014882  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 23986  014884  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23987  014886  0E00               	movlw	0
 23988  014888  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23989  01488A  0E00               	movlw	0
 23990  01488C  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23991                           
 23992                           ; BSR set to: 1
 23993  01488E  515C               	movf	(___flmul@a+2)& (0+255),w,b
 23994  014890  0357               	mulwf	(___flmul@b+1)& (0+255),b
 23995  014892  CFF3 F16D          	movff	prodl,___flmul@temp
 23996  014896  CFF4 F16E          	movff	prodh,___flmul@temp+1
 23997  01489A  516D               	movf	___flmul@temp& (0+255),w,b
 23998  01489C  2769               	addwf	___flmul@prod& (0+255),f,b
 23999  01489E  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24000  0148A0  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24001  0148A2  0E00               	movlw	0
 24002  0148A4  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24003  0148A6  0E00               	movlw	0
 24004  0148A8  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24005                           
 24006                           ; BSR set to: 1
 24007  0148AA  515B               	movf	(___flmul@a+1)& (0+255),w,b
 24008  0148AC  0358               	mulwf	(___flmul@b+2)& (0+255),b
 24009  0148AE  CFF3 F16D          	movff	prodl,___flmul@temp
 24010  0148B2  CFF4 F16E          	movff	prodh,___flmul@temp+1
 24011                           
 24012                           ; BSR set to: 1
 24013  0148B6  516D               	movf	___flmul@temp& (0+255),w,b
 24014  0148B8  2769               	addwf	___flmul@prod& (0+255),f,b
 24015  0148BA  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24016  0148BC  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24017  0148BE  0E00               	movlw	0
 24018  0148C0  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24019  0148C2  0E00               	movlw	0
 24020  0148C4  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24021  0148C6  515C               	movf	(___flmul@a+2)& (0+255),w,b
 24022  0148C8  0358               	mulwf	(___flmul@b+2)& (0+255),b
 24023  0148CA  CFF3 F16D          	movff	prodl,___flmul@temp
 24024  0148CE  CFF4 F16E          	movff	prodh,___flmul@temp+1
 24025                           
 24026                           ; BSR set to: 1
 24027  0148D2  516D               	movf	___flmul@temp& (0+255),w,b
 24028  0148D4  6F5E               	movwf	??___flmul& (0+255),b
 24029  0148D6  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24030  0148D8  6F5F               	movwf	(??___flmul+1)& (0+255),b
 24031  0148DA  6B60               	clrf	(??___flmul+2)& (0+255),b
 24032  0148DC  6B61               	clrf	(??___flmul+3)& (0+255),b
 24033  0148DE  C160  F161         	movff	??___flmul+2,??___flmul+3
 24034  0148E2  C15F  F160         	movff	??___flmul+1,??___flmul+2
 24035  0148E6  C15E  F15F         	movff	??___flmul,??___flmul+1
 24036  0148EA  6B5E               	clrf	??___flmul& (0+255),b
 24037  0148EC  515E               	movf	??___flmul& (0+255),w,b
 24038  0148EE  2769               	addwf	___flmul@prod& (0+255),f,b
 24039  0148F0  515F               	movf	(??___flmul+1)& (0+255),w,b
 24040  0148F2  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24041  0148F4  5160               	movf	(??___flmul+2)& (0+255),w,b
 24042  0148F6  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24043  0148F8  5161               	movf	(??___flmul+3)& (0+255),w,b
 24044  0148FA  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24045                           
 24046                           ; BSR set to: 1
 24047  0148FC  C165  F15E         	movff	___flmul@grs,??___flmul
 24048  014900  C166  F15F         	movff	___flmul@grs+1,??___flmul+1
 24049  014904  C167  F160         	movff	___flmul@grs+2,??___flmul+2
 24050  014908  C168  F161         	movff	___flmul@grs+3,??___flmul+3
 24051  01490C  0E19               	movlw	25
 24052  01490E  D005               	goto	u24320
 24053  014910                     u24325:
 24054  014910  90D8               	bcf	status,0,c
 24055  014912  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 24056  014914  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 24057  014916  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 24058  014918  335E               	rrcf	??___flmul& (0+255),f,b
 24059  01491A                     u24320:
 24060  01491A  2EE8               	decfsz	wreg,f,c
 24061  01491C  D7F9               	goto	u24325
 24062  01491E  515E               	movf	??___flmul& (0+255),w,b
 24063  014920  2769               	addwf	___flmul@prod& (0+255),f,b
 24064  014922  515F               	movf	(??___flmul+1)& (0+255),w,b
 24065  014924  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24066  014926  5160               	movf	(??___flmul+2)& (0+255),w,b
 24067  014928  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24068  01492A  5161               	movf	(??___flmul+3)& (0+255),w,b
 24069  01492C  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24070                           
 24071                           ; BSR set to: 1
 24072  01492E  C167  F168         	movff	___flmul@grs+2,___flmul@grs+3
 24073  014932  C166  F167         	movff	___flmul@grs+1,___flmul@grs+2
 24074  014936  C165  F166         	movff	___flmul@grs,___flmul@grs+1
 24075  01493A  6B65               	clrf	___flmul@grs& (0+255),b
 24076                           
 24077                           ; BSR set to: 1
 24078  01493C  5163               	movf	___flmul@aexp& (0+255),w,b
 24079  01493E  C164  F15E         	movff	___flmul@bexp,??___flmul
 24080  014942  6B5F               	clrf	(??___flmul+1)& (0+255),b
 24081  014944  275E               	addwf	??___flmul& (0+255),f,b
 24082  014946  0E00               	movlw	0
 24083  014948  235F               	addwfc	(??___flmul+1)& (0+255),f,b
 24084  01494A  0E82               	movlw	130
 24085  01494C  255E               	addwf	??___flmul& (0+255),w,b
 24086  01494E  6F6D               	movwf	___flmul@temp& (0+255),b
 24087  014950  0EFF               	movlw	255
 24088  014952  215F               	addwfc	(??___flmul+1)& (0+255),w,b
 24089  014954  6F6E               	movwf	(___flmul@temp+1)& (0+255),b
 24090  014956  D00F               	goto	l2337
 24091  014958                     
 24092                           ; BSR set to: 1
 24093                           
 24094                           ; BSR set to: 1
 24095  014958  90D8               	bcf	status,0,c
 24096  01495A  3769               	rlcf	___flmul@prod& (0+255),f,b
 24097  01495C  376A               	rlcf	(___flmul@prod+1)& (0+255),f,b
 24098  01495E  376B               	rlcf	(___flmul@prod+2)& (0+255),f,b
 24099  014960  376C               	rlcf	(___flmul@prod+3)& (0+255),f,b
 24100                           
 24101                           ; BSR set to: 1
 24102  014962  BF68               	btfsc	(___flmul@grs+3)& (0+255),7,b
 24103                           
 24104                           ; BSR set to: 1
 24105  014964  8169               	bsf	___flmul@prod& (0+255),0,b
 24106                           
 24107                           ; BSR set to: 1
 24108  014966  90D8               	bcf	status,0,c
 24109  014968  3765               	rlcf	___flmul@grs& (0+255),f,b
 24110  01496A  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
 24111  01496C  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
 24112  01496E  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
 24113  014970  076D               	decf	___flmul@temp& (0+255),f,b
 24114  014972  A0D8               	btfss	status,0,c
 24115  014974  076E               	decf	(___flmul@temp+1)& (0+255),f,b
 24116  014976                     l2337:
 24117                           
 24118                           ; BSR set to: 1
 24119                           
 24120                           ; BSR set to: 1
 24121  014976  AF6B               	btfss	(___flmul@prod+2)& (0+255),7,b
 24122  014978  D7EF               	goto	l2338
 24123                           
 24124                           ; BSR set to: 1
 24125                           
 24126                           ; BSR set to: 1
 24127  01497A  0E00               	movlw	0
 24128  01497C  6F63               	movwf	___flmul@aexp& (0+255),b
 24129                           
 24130                           ; BSR set to: 1
 24131  01497E  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
 24132  014980  D016               	goto	l2344
 24133                           
 24134                           ; BSR set to: 1
 24135  014982  0EFF               	movlw	255
 24136  014984  1565               	andwf	___flmul@grs& (0+255),w,b
 24137  014986  6F5E               	movwf	??___flmul& (0+255),b
 24138  014988  0EFF               	movlw	255
 24139  01498A  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
 24140  01498C  6F5F               	movwf	(??___flmul+1)& (0+255),b
 24141  01498E  0EFF               	movlw	255
 24142  014990  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
 24143  014992  6F60               	movwf	(??___flmul+2)& (0+255),b
 24144  014994  0E7F               	movlw	127
 24145  014996  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
 24146  014998  6F61               	movwf	(??___flmul+3)& (0+255),b
 24147  01499A  515E               	movf	??___flmul& (0+255),w,b
 24148  01499C  115F               	iorwf	(??___flmul+1)& (0+255),w,b
 24149  01499E  1160               	iorwf	(??___flmul+2)& (0+255),w,b
 24150  0149A0  1161               	iorwf	(??___flmul+3)& (0+255),w,b
 24151  0149A2  A4D8               	btfss	status,2,c
 24152  0149A4  D002               	goto	u24370
 24153                           
 24154                           ; BSR set to: 1
 24155                           
 24156                           ; BSR set to: 1
 24157  0149A6  A169               	btfss	___flmul@prod& (0+255),0,b
 24158  0149A8  D002               	goto	l2344
 24159  0149AA                     u24370:
 24160                           
 24161                           ; BSR set to: 1
 24162  0149AA  0E01               	movlw	1
 24163  0149AC  6F63               	movwf	___flmul@aexp& (0+255),b
 24164  0149AE                     l2344:
 24165                           
 24166                           ; BSR set to: 1
 24167                           
 24168                           ; BSR set to: 1
 24169                           
 24170                           ; BSR set to: 1
 24171  0149AE  5163               	movf	___flmul@aexp& (0+255),w,b
 24172  0149B0  B4D8               	btfsc	status,2,c
 24173  0149B2  D01F               	goto	l2346
 24174                           
 24175                           ; BSR set to: 1
 24176  0149B4  0E01               	movlw	1
 24177  0149B6  2769               	addwf	___flmul@prod& (0+255),f,b
 24178  0149B8  0E00               	movlw	0
 24179  0149BA  236A               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24180  0149BC  236B               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24181  0149BE  236C               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24182                           
 24183                           ; BSR set to: 1
 24184  0149C0  A16C               	btfss	(___flmul@prod+3)& (0+255),0,b
 24185  0149C2  D017               	goto	l2346
 24186                           
 24187                           ; BSR set to: 1
 24188  0149C4  C169  F15E         	movff	___flmul@prod,??___flmul
 24189  0149C8  C16A  F15F         	movff	___flmul@prod+1,??___flmul+1
 24190  0149CC  C16B  F160         	movff	___flmul@prod+2,??___flmul+2
 24191  0149D0  C16C  F161         	movff	___flmul@prod+3,??___flmul+3
 24192  0149D4  3561               	rlcf	(??___flmul+3)& (0+255),w,b
 24193  0149D6  3361               	rrcf	(??___flmul+3)& (0+255),f,b
 24194  0149D8  3360               	rrcf	(??___flmul+2)& (0+255),f,b
 24195  0149DA  335F               	rrcf	(??___flmul+1)& (0+255),f,b
 24196  0149DC  335E               	rrcf	??___flmul& (0+255),f,b
 24197  0149DE  C15E  F169         	movff	??___flmul,___flmul@prod
 24198  0149E2  C15F  F16A         	movff	??___flmul+1,___flmul@prod+1
 24199  0149E6  C160  F16B         	movff	??___flmul+2,___flmul@prod+2
 24200  0149EA  C161  F16C         	movff	??___flmul+3,___flmul@prod+3
 24201                           
 24202                           ; BSR set to: 1
 24203  0149EE  4B6D               	infsnz	___flmul@temp& (0+255),f,b
 24204  0149F0  2B6E               	incf	(___flmul@temp+1)& (0+255),f,b
 24205  0149F2                     l2346:
 24206                           
 24207                           ; BSR set to: 1
 24208                           
 24209                           ; BSR set to: 1
 24210                           
 24211                           ; BSR set to: 1
 24212  0149F2  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 24213  0149F4  D00D               	goto	l2347
 24214  0149F6  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24215  0149F8  E103               	bnz	u24400
 24216  0149FA  296D               	incf	___flmul@temp& (0+255),w,b
 24217  0149FC  A0D8               	btfss	status,0,c
 24218  0149FE  D008               	goto	l2347
 24219  014A00                     u24400:
 24220                           
 24221                           ; BSR set to: 1
 24222  014A00  0E00               	movlw	0
 24223  014A02  6F69               	movwf	___flmul@prod& (0+255),b
 24224  014A04  0E00               	movlw	0
 24225  014A06  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 24226  014A08  0E80               	movlw	128
 24227  014A0A  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 24228  014A0C  0E7F               	movlw	127
 24229  014A0E  D020               	goto	L4
 24230  014A10                     l2347:
 24231                           
 24232                           ; BSR set to: 1
 24233                           
 24234                           ; BSR set to: 1
 24235  014A10  BF6E               	btfsc	(___flmul@temp+1)& (0+255),7,b
 24236  014A12  D005               	goto	u24410
 24237  014A14  516E               	movf	(___flmul@temp+1)& (0+255),w,b
 24238  014A16  E10E               	bnz	l2349
 24239  014A18  056D               	decf	___flmul@temp& (0+255),w,b
 24240  014A1A  B0D8               	btfsc	status,0,c
 24241  014A1C  D00B               	goto	l2349
 24242  014A1E                     u24410:
 24243                           
 24244                           ; BSR set to: 1
 24245  014A1E  0E00               	movlw	0
 24246  014A20  6F69               	movwf	___flmul@prod& (0+255),b
 24247  014A22  0E00               	movlw	0
 24248  014A24  6F6A               	movwf	(___flmul@prod+1)& (0+255),b
 24249  014A26  0E00               	movlw	0
 24250  014A28  6F6B               	movwf	(___flmul@prod+2)& (0+255),b
 24251  014A2A  0E00               	movlw	0
 24252  014A2C  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 24253  014A2E  0E00               	movlw	0
 24254  014A30  6F62               	movwf	___flmul@sign& (0+255),b
 24255  014A32  D00F               	goto	l2350
 24256  014A34                     l2349:
 24257                           
 24258                           ; BSR set to: 1
 24259  014A34  C16D  F164         	movff	___flmul@temp,___flmul@bexp
 24260                           
 24261                           ; BSR set to: 1
 24262  014A38  0EFF               	movlw	255
 24263  014A3A  1769               	andwf	___flmul@prod& (0+255),f,b
 24264  014A3C  0EFF               	movlw	255
 24265  014A3E  176A               	andwf	(___flmul@prod+1)& (0+255),f,b
 24266  014A40  0E7F               	movlw	127
 24267  014A42  176B               	andwf	(___flmul@prod+2)& (0+255),f,b
 24268  014A44  0E00               	movlw	0
 24269  014A46  176C               	andwf	(___flmul@prod+3)& (0+255),f,b
 24270                           
 24271                           ; BSR set to: 1
 24272  014A48  B164               	btfsc	___flmul@bexp& (0+255),0,b
 24273                           
 24274                           ; BSR set to: 1
 24275  014A4A  8F6B               	bsf	(___flmul@prod+2)& (0+255),7,b
 24276                           
 24277                           ; BSR set to: 1
 24278                           
 24279                           ; BSR set to: 1
 24280  014A4C  90D8               	bcf	status,0,c
 24281  014A4E  3164               	rrcf	___flmul@bexp& (0+255),w,b
 24282  014A50                     L4:
 24283  014A50  6F6C               	movwf	(___flmul@prod+3)& (0+255),b
 24284  014A52                     l2350:
 24285                           
 24286                           ; BSR set to: 1
 24287                           
 24288                           ; BSR set to: 1
 24289                           
 24290                           ; BSR set to: 1
 24291  014A52  5162               	movf	___flmul@sign& (0+255),w,b
 24292  014A54  136C               	iorwf	(___flmul@prod+3)& (0+255),f,b
 24293                           
 24294                           ; BSR set to: 1
 24295  014A56  C169  F156         	movff	___flmul@prod,?___flmul
 24296  014A5A  C16A  F157         	movff	___flmul@prod+1,?___flmul+1
 24297  014A5E  C16B  F158         	movff	___flmul@prod+2,?___flmul+2
 24298  014A62  C16C  F159         	movff	___flmul@prod+3,?___flmul+3
 24299  014A66  0012               	return	
 24300  014A68                     __end_of___flmul:
 24301                           	opt stack 0
 24302                           tblptru	equ	0xFF8
 24303                           tblptrh	equ	0xFF7
 24304                           tblptrl	equ	0xFF6
 24305                           tablat	equ	0xFF5
 24306                           prodh	equ	0xFF4
 24307                           prodl	equ	0xFF3
 24308                           intcon	equ	0xFF2
 24309                           indf0	equ	0xFEF
 24310                           postinc0	equ	0xFEE
 24311                           fsr0h	equ	0xFEA
 24312                           fsr0l	equ	0xFE9
 24313                           wreg	equ	0xFE8
 24314                           indf1	equ	0xFE7
 24315                           postdec1	equ	0xFE5
 24316                           plusw1	equ	0xFE3
 24317                           fsr1h	equ	0xFE2
 24318                           fsr1l	equ	0xFE1
 24319                           indf2	equ	0xFDF
 24320                           postinc2	equ	0xFDE
 24321                           postdec2	equ	0xFDD
 24322                           plusw2	equ	0xFDB
 24323                           fsr2h	equ	0xFDA
 24324                           fsr2l	equ	0xFD9
 24325                           status	equ	0xFD8
 24326                           
 24327 ;; *************** function ___awmod *****************
 24328 ;; Defined at:
 24329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 24330 ;; Parameters:    Size  Location     Type
 24331 ;;  dividend        2   23[BANK1 ] int 
 24332 ;;  divisor         2   25[BANK1 ] int 
 24333 ;; Auto vars:     Size  Location     Type
 24334 ;;  sign            1   28[BANK1 ] unsigned char 
 24335 ;;  counter         1   27[BANK1 ] unsigned char 
 24336 ;; Return value:  Size  Location     Type
 24337 ;;                  2   23[BANK1 ] int 
 24338 ;; Registers used:
 24339 ;;		wreg, status,2, status,0
 24340 ;; Tracked objects:
 24341 ;;		On entry : 0/0
 24342 ;;		On exit  : 0/0
 24343 ;;		Unchanged: 0/0
 24344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24345 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24346 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24348 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24349 ;;Total ram usage:        6 bytes
 24350 ;; Hardware stack levels used:    1
 24351 ;; Hardware stack levels required when called:   13
 24352 ;; This function calls:
 24353 ;;		Nothing
 24354 ;; This function is called by:
 24355 ;;		_fround
 24356 ;;		_scale
 24357 ;; This function uses a non-reentrant model
 24358 ;;
 24359                           
 24360                           	psect	text36
 24361  01870A                     __ptext36:
 24362                           	opt stack 0
 24363  01870A                     ___awmod:
 24364                           	opt stack 13
 24365                           
 24366                           ; BSR set to: 1
 24367                           ;incstack = 0
 24368  01870A  0E00               	movlw	0
 24369  01870C  0101               	movlb	1	; () banked
 24370  01870E  6F1C               	movwf	___awmod@sign& (0+255),b
 24371                           
 24372                           ; BSR set to: 1
 24373  018710  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 24374  018712  D006               	goto	l1917
 24375                           
 24376                           ; BSR set to: 1
 24377  018714  6D17               	negf	___awmod@dividend& (0+255),b
 24378  018716  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 24379  018718  B0D8               	btfsc	status,0,c
 24380  01871A  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 24381                           
 24382                           ; BSR set to: 1
 24383  01871C  0E01               	movlw	1
 24384  01871E  6F1C               	movwf	___awmod@sign& (0+255),b
 24385  018720                     l1917:
 24386                           
 24387                           ; BSR set to: 1
 24388                           
 24389                           ; BSR set to: 1
 24390  018720  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24391  018722  D004               	goto	l1918
 24392                           
 24393                           ; BSR set to: 1
 24394  018724  6D19               	negf	___awmod@divisor& (0+255),b
 24395  018726  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 24396  018728  B0D8               	btfsc	status,0,c
 24397  01872A  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 24398  01872C                     l1918:
 24399                           
 24400                           ; BSR set to: 1
 24401                           
 24402                           ; BSR set to: 1
 24403  01872C  5119               	movf	___awmod@divisor& (0+255),w,b
 24404  01872E  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 24405  018730  B4D8               	btfsc	status,2,c
 24406  018732  D018               	goto	l1925
 24407                           
 24408                           ; BSR set to: 1
 24409  018734  0E01               	movlw	1
 24410  018736  6F1B               	movwf	___awmod@counter& (0+255),b
 24411  018738  D004               	goto	l1920
 24412  01873A                     
 24413                           ; BSR set to: 1
 24414                           
 24415                           ; BSR set to: 1
 24416  01873A  90D8               	bcf	status,0,c
 24417  01873C  3719               	rlcf	___awmod@divisor& (0+255),f,b
 24418  01873E  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 24419  018740  2B1B               	incf	___awmod@counter& (0+255),f,b
 24420  018742                     l1920:
 24421                           
 24422                           ; BSR set to: 1
 24423                           
 24424                           ; BSR set to: 1
 24425  018742  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24426  018744  D7FA               	goto	l1921
 24427  018746                     u24520:
 24428                           
 24429                           ; BSR set to: 1
 24430                           
 24431                           ; BSR set to: 1
 24432                           
 24433                           ; BSR set to: 1
 24434  018746  5119               	movf	___awmod@divisor& (0+255),w,b
 24435  018748  5D17               	subwf	___awmod@dividend& (0+255),w,b
 24436  01874A  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 24437  01874C  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 24438  01874E  A0D8               	btfss	status,0,c
 24439  018750  D004               	goto	l1924
 24440                           
 24441                           ; BSR set to: 1
 24442  018752  5119               	movf	___awmod@divisor& (0+255),w,b
 24443  018754  5F17               	subwf	___awmod@dividend& (0+255),f,b
 24444  018756  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 24445  018758  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 24446  01875A                     l1924:
 24447                           
 24448                           ; BSR set to: 1
 24449                           
 24450                           ; BSR set to: 1
 24451  01875A  90D8               	bcf	status,0,c
 24452  01875C  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 24453  01875E  3319               	rrcf	___awmod@divisor& (0+255),f,b
 24454                           
 24455                           ; BSR set to: 1
 24456  018760  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 24457  018762  D7F1               	goto	u24520
 24458  018764                     l1925:
 24459                           
 24460                           ; BSR set to: 1
 24461                           
 24462                           ; BSR set to: 1
 24463                           
 24464                           ; BSR set to: 1
 24465  018764  511C               	movf	___awmod@sign& (0+255),w,b
 24466  018766  B4D8               	btfsc	status,2,c
 24467  018768  D004               	goto	l1926
 24468                           
 24469                           ; BSR set to: 1
 24470  01876A  6D17               	negf	___awmod@dividend& (0+255),b
 24471  01876C  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 24472  01876E  B0D8               	btfsc	status,0,c
 24473  018770  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 24474  018772                     l1926:
 24475                           
 24476                           ; BSR set to: 1
 24477                           
 24478                           ; BSR set to: 1
 24479  018772  C117  F117         	movff	___awmod@dividend,?___awmod
 24480  018776  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 24481  01877A  0012               	return	
 24482  01877C                     __end_of___awmod:
 24483                           	opt stack 0
 24484                           tblptru	equ	0xFF8
 24485                           tblptrh	equ	0xFF7
 24486                           tblptrl	equ	0xFF6
 24487                           tablat	equ	0xFF5
 24488                           prodh	equ	0xFF4
 24489                           prodl	equ	0xFF3
 24490                           intcon	equ	0xFF2
 24491                           indf0	equ	0xFEF
 24492                           postinc0	equ	0xFEE
 24493                           fsr0h	equ	0xFEA
 24494                           fsr0l	equ	0xFE9
 24495                           wreg	equ	0xFE8
 24496                           indf1	equ	0xFE7
 24497                           postdec1	equ	0xFE5
 24498                           plusw1	equ	0xFE3
 24499                           fsr1h	equ	0xFE2
 24500                           fsr1l	equ	0xFE1
 24501                           indf2	equ	0xFDF
 24502                           postinc2	equ	0xFDE
 24503                           postdec2	equ	0xFDD
 24504                           plusw2	equ	0xFDB
 24505                           fsr2h	equ	0xFDA
 24506                           fsr2l	equ	0xFD9
 24507                           status	equ	0xFD8
 24508                           
 24509 ;; *************** function ___awdiv *****************
 24510 ;; Defined at:
 24511 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 24512 ;; Parameters:    Size  Location     Type
 24513 ;;  dividend        2   29[BANK1 ] int 
 24514 ;;  divisor         2   31[BANK1 ] int 
 24515 ;; Auto vars:     Size  Location     Type
 24516 ;;  quotient        2   35[BANK1 ] int 
 24517 ;;  sign            1   34[BANK1 ] unsigned char 
 24518 ;;  counter         1   33[BANK1 ] unsigned char 
 24519 ;; Return value:  Size  Location     Type
 24520 ;;                  2   29[BANK1 ] int 
 24521 ;; Registers used:
 24522 ;;		wreg, status,2, status,0
 24523 ;; Tracked objects:
 24524 ;;		On entry : 0/0
 24525 ;;		On exit  : 0/0
 24526 ;;		Unchanged: 0/0
 24527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24528 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24529 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24531 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24532 ;;Total ram usage:        8 bytes
 24533 ;; Hardware stack levels used:    1
 24534 ;; Hardware stack levels required when called:   13
 24535 ;; This function calls:
 24536 ;;		Nothing
 24537 ;; This function is called by:
 24538 ;;		_fround
 24539 ;;		_scale
 24540 ;;		_printf
 24541 ;; This function uses a non-reentrant model
 24542 ;;
 24543                           
 24544                           	psect	text37
 24545  018404                     __ptext37:
 24546                           	opt stack 0
 24547  018404                     ___awdiv:
 24548                           	opt stack 13
 24549                           
 24550                           ; BSR set to: 1
 24551                           ;incstack = 0
 24552  018404  0E00               	movlw	0
 24553  018406  0101               	movlb	1	; () banked
 24554  018408  6F22               	movwf	___awdiv@sign& (0+255),b
 24555                           
 24556                           ; BSR set to: 1
 24557  01840A  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24558  01840C  D006               	goto	l1904
 24559                           
 24560                           ; BSR set to: 1
 24561  01840E  6D1F               	negf	___awdiv@divisor& (0+255),b
 24562  018410  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 24563  018412  B0D8               	btfsc	status,0,c
 24564  018414  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 24565                           
 24566                           ; BSR set to: 1
 24567  018416  0E01               	movlw	1
 24568  018418  6F22               	movwf	___awdiv@sign& (0+255),b
 24569  01841A                     l1904:
 24570                           
 24571                           ; BSR set to: 1
 24572                           
 24573                           ; BSR set to: 1
 24574  01841A  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 24575  01841C  D006               	goto	l1905
 24576                           
 24577                           ; BSR set to: 1
 24578  01841E  6D1D               	negf	___awdiv@dividend& (0+255),b
 24579  018420  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 24580  018422  B0D8               	btfsc	status,0,c
 24581  018424  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 24582                           
 24583                           ; BSR set to: 1
 24584  018426  0E01               	movlw	1
 24585  018428  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 24586  01842A                     l1905:
 24587                           
 24588                           ; BSR set to: 1
 24589                           
 24590                           ; BSR set to: 1
 24591  01842A  0E00               	movlw	0
 24592  01842C  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 24593  01842E  0E00               	movlw	0
 24594  018430  6F23               	movwf	___awdiv@quotient& (0+255),b
 24595                           
 24596                           ; BSR set to: 1
 24597  018432  511F               	movf	___awdiv@divisor& (0+255),w,b
 24598  018434  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 24599  018436  B4D8               	btfsc	status,2,c
 24600  018438  D01C               	goto	l1912
 24601                           
 24602                           ; BSR set to: 1
 24603  01843A  0E01               	movlw	1
 24604  01843C  6F21               	movwf	___awdiv@counter& (0+255),b
 24605  01843E  D004               	goto	l1907
 24606  018440                     
 24607                           ; BSR set to: 1
 24608                           
 24609                           ; BSR set to: 1
 24610  018440  90D8               	bcf	status,0,c
 24611  018442  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 24612  018444  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 24613  018446  2B21               	incf	___awdiv@counter& (0+255),f,b
 24614  018448                     l1907:
 24615                           
 24616                           ; BSR set to: 1
 24617                           
 24618                           ; BSR set to: 1
 24619  018448  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 24620  01844A  D7FA               	goto	l1908
 24621  01844C                     u24460:
 24622                           
 24623                           ; BSR set to: 1
 24624                           
 24625                           ; BSR set to: 1
 24626                           
 24627                           ; BSR set to: 1
 24628  01844C  90D8               	bcf	status,0,c
 24629  01844E  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 24630  018450  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 24631                           
 24632                           ; BSR set to: 1
 24633  018452  511F               	movf	___awdiv@divisor& (0+255),w,b
 24634  018454  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 24635  018456  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24636  018458  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 24637  01845A  A0D8               	btfss	status,0,c
 24638  01845C  D005               	goto	l1911
 24639                           
 24640                           ; BSR set to: 1
 24641  01845E  511F               	movf	___awdiv@divisor& (0+255),w,b
 24642  018460  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 24643  018462  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 24644  018464  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 24645                           
 24646                           ; BSR set to: 1
 24647  018466  8123               	bsf	___awdiv@quotient& (0+255),0,b
 24648  018468                     l1911:
 24649                           
 24650                           ; BSR set to: 1
 24651                           
 24652                           ; BSR set to: 1
 24653  018468  90D8               	bcf	status,0,c
 24654  01846A  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 24655  01846C  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 24656                           
 24657                           ; BSR set to: 1
 24658  01846E  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 24659  018470  D7ED               	goto	u24460
 24660  018472                     l1912:
 24661                           
 24662                           ; BSR set to: 1
 24663                           
 24664                           ; BSR set to: 1
 24665                           
 24666                           ; BSR set to: 1
 24667  018472  5122               	movf	___awdiv@sign& (0+255),w,b
 24668  018474  B4D8               	btfsc	status,2,c
 24669  018476  D004               	goto	l1913
 24670                           
 24671                           ; BSR set to: 1
 24672  018478  6D23               	negf	___awdiv@quotient& (0+255),b
 24673  01847A  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 24674  01847C  B0D8               	btfsc	status,0,c
 24675  01847E  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 24676  018480                     l1913:
 24677                           
 24678                           ; BSR set to: 1
 24679                           
 24680                           ; BSR set to: 1
 24681  018480  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 24682  018484  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 24683  018488  0012               	return	
 24684  01848A                     __end_of___awdiv:
 24685                           	opt stack 0
 24686                           tblptru	equ	0xFF8
 24687                           tblptrh	equ	0xFF7
 24688                           tblptrl	equ	0xFF6
 24689                           tablat	equ	0xFF5
 24690                           prodh	equ	0xFF4
 24691                           prodl	equ	0xFF3
 24692                           intcon	equ	0xFF2
 24693                           indf0	equ	0xFEF
 24694                           postinc0	equ	0xFEE
 24695                           fsr0h	equ	0xFEA
 24696                           fsr0l	equ	0xFE9
 24697                           wreg	equ	0xFE8
 24698                           indf1	equ	0xFE7
 24699                           postdec1	equ	0xFE5
 24700                           plusw1	equ	0xFE3
 24701                           fsr1h	equ	0xFE2
 24702                           fsr1l	equ	0xFE1
 24703                           indf2	equ	0xFDF
 24704                           postinc2	equ	0xFDE
 24705                           postdec2	equ	0xFDD
 24706                           plusw2	equ	0xFDB
 24707                           fsr2h	equ	0xFDA
 24708                           fsr2l	equ	0xFD9
 24709                           status	equ	0xFD8
 24710                           
 24711 ;; *************** function __tdiv_to_l_ *****************
 24712 ;; Defined at:
 24713 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 24714 ;; Parameters:    Size  Location     Type
 24715 ;;  f1              3   23[BANK1 ] float 
 24716 ;;  f2              3   26[BANK1 ] float 
 24717 ;; Auto vars:     Size  Location     Type
 24718 ;;  quot            4   32[BANK1 ] unsigned long 
 24719 ;;  exp1            1   37[BANK1 ] unsigned char 
 24720 ;;  cntr            1   36[BANK1 ] unsigned char 
 24721 ;; Return value:  Size  Location     Type
 24722 ;;                  4   23[BANK1 ] unsigned long 
 24723 ;; Registers used:
 24724 ;;		wreg, status,2, status,0
 24725 ;; Tracked objects:
 24726 ;;		On entry : 0/0
 24727 ;;		On exit  : 0/0
 24728 ;;		Unchanged: 0/0
 24729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24730 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24731 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24732 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24733 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24734 ;;Total ram usage:       15 bytes
 24735 ;; Hardware stack levels used:    1
 24736 ;; Hardware stack levels required when called:   13
 24737 ;; This function calls:
 24738 ;;		Nothing
 24739 ;; This function is called by:
 24740 ;;		_printf
 24741 ;; This function uses a non-reentrant model
 24742 ;;
 24743                           
 24744                           	psect	text38
 24745  017298                     __ptext38:
 24746                           	opt stack 0
 24747  017298                     __tdiv_to_l_:
 24748                           	opt stack 14
 24749                           
 24750                           ; BSR set to: 1
 24751                           ;incstack = 0
 24752  017298  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 24753  01729C  0101               	movlb	1	; () banked
 24754  01729E  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 24755  0172A0  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 24756  0172A2  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 24757  0172A4  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 24758  0172A6  E301               	bnc	u24641
 24759  0172A8  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 24760  0172AA                     u24641:
 24761  0172AA  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 24762  0172AC  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 24763  0172AE  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24764  0172B0  A4D8               	btfss	status,2,c
 24765  0172B2  D009               	goto	l2052
 24766                           
 24767                           ; BSR set to: 1
 24768  0172B4  0E00               	movlw	0
 24769  0172B6  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24770  0172B8  0E00               	movlw	0
 24771  0172BA  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24772  0172BC  0E00               	movlw	0
 24773  0172BE  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24774  0172C0  0E00               	movlw	0
 24775  0172C2  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24776                           
 24777                           ; BSR set to: 1
 24778  0172C4  0012               	return	
 24779  0172C6                     l2052:
 24780                           
 24781                           ; BSR set to: 1
 24782                           
 24783                           ; BSR set to: 1
 24784  0172C6  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 24785  0172CA  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 24786  0172CC  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 24787  0172CE  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24788  0172D0  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 24789  0172D2  E301               	bnc	u24661
 24790  0172D4  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 24791  0172D6                     u24661:
 24792  0172D6  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 24793  0172D8  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 24794  0172DA  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 24795  0172DC  A4D8               	btfss	status,2,c
 24796  0172DE  D009               	goto	l2054
 24797                           
 24798                           ; BSR set to: 1
 24799  0172E0  0E00               	movlw	0
 24800  0172E2  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24801  0172E4  0E00               	movlw	0
 24802  0172E6  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24803  0172E8  0E00               	movlw	0
 24804  0172EA  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24805  0172EC  0E00               	movlw	0
 24806  0172EE  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24807                           
 24808                           ; BSR set to: 1
 24809  0172F0  0012               	return	
 24810  0172F2                     l2054:
 24811                           
 24812                           ; BSR set to: 1
 24813                           
 24814                           ; BSR set to: 1
 24815  0172F2  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 24816                           
 24817                           ; BSR set to: 1
 24818  0172F4  0EFF               	movlw	255
 24819  0172F6  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 24820  0172F8  0EFF               	movlw	255
 24821  0172FA  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24822  0172FC  0E00               	movlw	0
 24823  0172FE  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24824  017300  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 24825                           
 24826                           ; BSR set to: 1
 24827  017302  0EFF               	movlw	255
 24828  017304  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 24829  017306  0EFF               	movlw	255
 24830  017308  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 24831  01730A  0E00               	movlw	0
 24832  01730C  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 24833                           
 24834                           ; BSR set to: 1
 24835  01730E  0E00               	movlw	0
 24836  017310  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 24837  017312  0E00               	movlw	0
 24838  017314  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 24839  017316  0E00               	movlw	0
 24840  017318  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 24841  01731A  0E00               	movlw	0
 24842  01731C  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 24843                           
 24844                           ; BSR set to: 1
 24845  01731E  0E7F               	movlw	127
 24846  017320  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 24847                           
 24848                           ; BSR set to: 1
 24849  017322  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 24850  017324  0F98               	addlw	152
 24851  017326  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 24852                           
 24853                           ; BSR set to: 1
 24854  017328  0E18               	movlw	24
 24855  01732A  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 24856  01732C                     l2055:
 24857                           
 24858                           ; BSR set to: 1
 24859  01732C  90D8               	bcf	status,0,c
 24860  01732E  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 24861  017330  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24862  017332  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24863  017334  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24864                           
 24865                           ; BSR set to: 1
 24866  017336  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 24867  017338  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 24868  01733A  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24869  01733C  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 24870  01733E  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 24871  017340  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 24872  017342  A0D8               	btfss	status,0,c
 24873  017344  D007               	goto	l2056
 24874                           
 24875                           ; BSR set to: 1
 24876  017346  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 24877  017348  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 24878  01734A  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 24879  01734C  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24880  01734E  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 24881  017350  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24882                           
 24883                           ; BSR set to: 1
 24884  017352  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 24885  017354                     l2056:
 24886                           
 24887                           ; BSR set to: 1
 24888  017354  90D8               	bcf	status,0,c
 24889  017356  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 24890  017358  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 24891  01735A  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 24892                           
 24893                           ; BSR set to: 1
 24894  01735C  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 24895  01735E  D7E6               	goto	l2055
 24896                           
 24897                           ; BSR set to: 1
 24898                           
 24899                           ; BSR set to: 1
 24900  017360  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 24901  017362  D016               	goto	l2058
 24902                           
 24903                           ; BSR set to: 1
 24904  017364  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24905  017366  0A80               	xorlw	128
 24906  017368  0F97               	addlw	151
 24907  01736A  B0D8               	btfsc	status,0,c
 24908  01736C  D009               	goto	l2059
 24909                           
 24910                           ; BSR set to: 1
 24911  01736E  0E00               	movlw	0
 24912  017370  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24913  017372  0E00               	movlw	0
 24914  017374  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24915  017376  0E00               	movlw	0
 24916  017378  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24917  01737A  0E00               	movlw	0
 24918  01737C  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24919                           
 24920                           ; BSR set to: 1
 24921  01737E  0012               	return	
 24922  017380                     l2059:
 24923                           
 24924                           ; BSR set to: 1
 24925                           
 24926                           ; BSR set to: 1
 24927                           
 24928                           ; BSR set to: 1
 24929  017380  90D8               	bcf	status,0,c
 24930  017382  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24931  017384  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24932  017386  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24933  017388  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 24934                           
 24935                           ; BSR set to: 1
 24936  01738A  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 24937  01738C  D7F9               	goto	l2059
 24938                           
 24939                           ; BSR set to: 1
 24940  01738E  D015               	goto	u24720
 24941  017390                     l2058:
 24942                           
 24943                           ; BSR set to: 1
 24944                           
 24945                           ; BSR set to: 1
 24946  017390  0E17               	movlw	23
 24947  017392  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 24948  017394  D00F               	goto	l2064
 24949                           
 24950                           ; BSR set to: 1
 24951  017396  0E00               	movlw	0
 24952  017398  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 24953  01739A  0E00               	movlw	0
 24954  01739C  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 24955  01739E  0E00               	movlw	0
 24956  0173A0  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 24957  0173A2  0E00               	movlw	0
 24958  0173A4  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 24959                           
 24960                           ; BSR set to: 1
 24961  0173A6  0012               	return	
 24962  0173A8                     
 24963                           ; BSR set to: 1
 24964                           
 24965                           ; BSR set to: 1
 24966  0173A8  90D8               	bcf	status,0,c
 24967  0173AA  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 24968  0173AC  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 24969  0173AE  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 24970  0173B0  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 24971  0173B2  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 24972  0173B4                     l2064:
 24973                           
 24974                           ; BSR set to: 1
 24975                           
 24976                           ; BSR set to: 1
 24977  0173B4  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 24978  0173B6  A4D8               	btfss	status,2,c
 24979  0173B8  D7F7               	goto	l2065
 24980  0173BA                     u24720:
 24981                           
 24982                           ; BSR set to: 1
 24983                           
 24984                           ; BSR set to: 1
 24985  0173BA  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 24986  0173BE  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 24987  0173C2  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 24988  0173C6  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 24989                           
 24990                           ; BSR set to: 1
 24991  0173CA  0012               	return		;funcret
 24992  0173CC                     __end_of__tdiv_to_l_:
 24993                           	opt stack 0
 24994                           tblptru	equ	0xFF8
 24995                           tblptrh	equ	0xFF7
 24996                           tblptrl	equ	0xFF6
 24997                           tablat	equ	0xFF5
 24998                           prodh	equ	0xFF4
 24999                           prodl	equ	0xFF3
 25000                           intcon	equ	0xFF2
 25001                           indf0	equ	0xFEF
 25002                           postinc0	equ	0xFEE
 25003                           fsr0h	equ	0xFEA
 25004                           fsr0l	equ	0xFE9
 25005                           wreg	equ	0xFE8
 25006                           indf1	equ	0xFE7
 25007                           postdec1	equ	0xFE5
 25008                           plusw1	equ	0xFE3
 25009                           fsr1h	equ	0xFE2
 25010                           fsr1l	equ	0xFE1
 25011                           indf2	equ	0xFDF
 25012                           postinc2	equ	0xFDE
 25013                           postdec2	equ	0xFDD
 25014                           plusw2	equ	0xFDB
 25015                           fsr2h	equ	0xFDA
 25016                           fsr2l	equ	0xFD9
 25017                           status	equ	0xFD8
 25018                           
 25019 ;; *************** function __div_to_l_ *****************
 25020 ;; Defined at:
 25021 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 25022 ;; Parameters:    Size  Location     Type
 25023 ;;  f1              4   23[BANK1 ] unsigned long 
 25024 ;;  f2              4   27[BANK1 ] unsigned long 
 25025 ;; Auto vars:     Size  Location     Type
 25026 ;;  quot            4   31[BANK1 ] unsigned long 
 25027 ;;  exp1            1   36[BANK1 ] unsigned char 
 25028 ;;  cntr            1   35[BANK1 ] unsigned char 
 25029 ;; Return value:  Size  Location     Type
 25030 ;;                  4   23[BANK1 ] unsigned long 
 25031 ;; Registers used:
 25032 ;;		wreg, status,2, status,0
 25033 ;; Tracked objects:
 25034 ;;		On entry : 0/0
 25035 ;;		On exit  : 0/0
 25036 ;;		Unchanged: 0/0
 25037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25038 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25039 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25041 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25042 ;;Total ram usage:       14 bytes
 25043 ;; Hardware stack levels used:    1
 25044 ;; Hardware stack levels required when called:   13
 25045 ;; This function calls:
 25046 ;;		Nothing
 25047 ;; This function is called by:
 25048 ;;		_printf
 25049 ;; This function uses a non-reentrant model
 25050 ;;
 25051                           
 25052                           	psect	text39
 25053  0174FE                     __ptext39:
 25054                           	opt stack 0
 25055  0174FE                     __div_to_l_:
 25056                           	opt stack 14
 25057                           
 25058                           ; BSR set to: 1
 25059                           ;incstack = 0
 25060  0174FE  0101               	movlb	1	; () banked
 25061  017500  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 25062  017502  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 25063  017504  6F24               	movwf	__div_to_l_@exp1& (0+255),b
 25064  017506  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 25065  017508  A4D8               	btfss	status,2,c
 25066  01750A  D009               	goto	l1948
 25067                           
 25068                           ; BSR set to: 1
 25069  01750C  0E00               	movlw	0
 25070  01750E  6F17               	movwf	?__div_to_l_& (0+255),b
 25071  017510  0E00               	movlw	0
 25072  017512  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 25073  017514  0E00               	movlw	0
 25074  017516  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 25075  017518  0E00               	movlw	0
 25076  01751A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 25077                           
 25078                           ; BSR set to: 1
 25079  01751C  0012               	return	
 25080  01751E                     l1948:
 25081                           
 25082                           ; BSR set to: 1
 25083                           
 25084                           ; BSR set to: 1
 25085  01751E  351D               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 25086  017520  351E               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 25087  017522  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 25088  017524  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 25089  017526  A4D8               	btfss	status,2,c
 25090  017528  D009               	goto	l1950
 25091                           
 25092                           ; BSR set to: 1
 25093  01752A  0E00               	movlw	0
 25094  01752C  6F17               	movwf	?__div_to_l_& (0+255),b
 25095  01752E  0E00               	movlw	0
 25096  017530  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 25097  017532  0E00               	movlw	0
 25098  017534  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 25099  017536  0E00               	movlw	0
 25100  017538  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 25101                           
 25102                           ; BSR set to: 1
 25103  01753A  0012               	return	
 25104  01753C                     l1950:
 25105                           
 25106                           ; BSR set to: 1
 25107                           
 25108                           ; BSR set to: 1
 25109  01753C  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 25110                           
 25111                           ; BSR set to: 1
 25112  01753E  0EFF               	movlw	255
 25113  017540  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 25114  017542  0EFF               	movlw	255
 25115  017544  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 25116  017546  0EFF               	movlw	255
 25117  017548  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 25118  01754A  0E00               	movlw	0
 25119  01754C  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 25120                           
 25121                           ; BSR set to: 1
 25122  01754E  8F1D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 25123  017550  0EFF               	movlw	255
 25124  017552  171B               	andwf	__div_to_l_@f2& (0+255),f,b
 25125  017554  0EFF               	movlw	255
 25126  017556  171C               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 25127  017558  0EFF               	movlw	255
 25128  01755A  171D               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 25129  01755C  0E00               	movlw	0
 25130  01755E  171E               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 25131                           
 25132                           ; BSR set to: 1
 25133  017560  0E00               	movlw	0
 25134  017562  6F1F               	movwf	__div_to_l_@quot& (0+255),b
 25135  017564  0E00               	movlw	0
 25136  017566  6F20               	movwf	(__div_to_l_@quot+1)& (0+255),b
 25137  017568  0E00               	movlw	0
 25138  01756A  6F21               	movwf	(__div_to_l_@quot+2)& (0+255),b
 25139  01756C  0E00               	movlw	0
 25140  01756E  6F22               	movwf	(__div_to_l_@quot+3)& (0+255),b
 25141                           
 25142                           ; BSR set to: 1
 25143  017570  0E7F               	movlw	127
 25144  017572  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 25145                           
 25146                           ; BSR set to: 1
 25147  017574  5123               	movf	__div_to_l_@cntr& (0+255),w,b
 25148  017576  0FA0               	addlw	160
 25149  017578  5F24               	subwf	__div_to_l_@exp1& (0+255),f,b
 25150                           
 25151                           ; BSR set to: 1
 25152  01757A  0E20               	movlw	32
 25153  01757C  6F23               	movwf	__div_to_l_@cntr& (0+255),b
 25154  01757E                     
 25155                           ; BSR set to: 1
 25156                           
 25157                           ; BSR set to: 1
 25158  01757E  90D8               	bcf	status,0,c
 25159  017580  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 25160  017582  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 25161  017584  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 25162  017586  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 25163                           
 25164                           ; BSR set to: 1
 25165  017588  511B               	movf	__div_to_l_@f2& (0+255),w,b
 25166  01758A  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 25167  01758C  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 25168  01758E  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 25169  017590  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 25170  017592  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 25171  017594  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 25172  017596  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 25173  017598  A0D8               	btfss	status,0,c
 25174  01759A  D009               	goto	l1952
 25175                           
 25176                           ; BSR set to: 1
 25177  01759C  511B               	movf	__div_to_l_@f2& (0+255),w,b
 25178  01759E  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 25179  0175A0  511C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 25180  0175A2  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 25181  0175A4  511D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 25182  0175A6  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 25183  0175A8  511E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 25184  0175AA  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 25185                           
 25186                           ; BSR set to: 1
 25187  0175AC  811F               	bsf	__div_to_l_@quot& (0+255),0,b
 25188  0175AE                     l1952:
 25189                           
 25190                           ; BSR set to: 1
 25191                           
 25192                           ; BSR set to: 1
 25193  0175AE  90D8               	bcf	status,0,c
 25194  0175B0  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 25195  0175B2  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 25196  0175B4  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 25197  0175B6  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 25198                           
 25199                           ; BSR set to: 1
 25200  0175B8  2F23               	decfsz	__div_to_l_@cntr& (0+255),f,b
 25201  0175BA  D7E1               	goto	l1951
 25202                           
 25203                           ; BSR set to: 1
 25204                           
 25205                           ; BSR set to: 1
 25206  0175BC  AF24               	btfss	__div_to_l_@exp1& (0+255),7,b
 25207  0175BE  D016               	goto	l1954
 25208                           
 25209                           ; BSR set to: 1
 25210  0175C0  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 25211  0175C2  0A80               	xorlw	128
 25212  0175C4  0F9F               	addlw	159
 25213  0175C6  B0D8               	btfsc	status,0,c
 25214  0175C8  D009               	goto	l1955
 25215                           
 25216                           ; BSR set to: 1
 25217  0175CA  0E00               	movlw	0
 25218  0175CC  6F17               	movwf	?__div_to_l_& (0+255),b
 25219  0175CE  0E00               	movlw	0
 25220  0175D0  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 25221  0175D2  0E00               	movlw	0
 25222  0175D4  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 25223  0175D6  0E00               	movlw	0
 25224  0175D8  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 25225                           
 25226                           ; BSR set to: 1
 25227  0175DA  0012               	return	
 25228  0175DC                     l1955:
 25229                           
 25230                           ; BSR set to: 1
 25231                           
 25232                           ; BSR set to: 1
 25233                           
 25234                           ; BSR set to: 1
 25235  0175DC  90D8               	bcf	status,0,c
 25236  0175DE  3322               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 25237  0175E0  3321               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 25238  0175E2  3320               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 25239  0175E4  331F               	rrcf	__div_to_l_@quot& (0+255),f,b
 25240                           
 25241                           ; BSR set to: 1
 25242  0175E6  3F24               	incfsz	__div_to_l_@exp1& (0+255),f,b
 25243  0175E8  D7F9               	goto	l1955
 25244                           
 25245                           ; BSR set to: 1
 25246  0175EA  D015               	goto	u24790
 25247  0175EC                     l1954:
 25248                           
 25249                           ; BSR set to: 1
 25250                           
 25251                           ; BSR set to: 1
 25252  0175EC  0E1F               	movlw	31
 25253  0175EE  6524               	cpfsgt	__div_to_l_@exp1& (0+255),b
 25254  0175F0  D00F               	goto	l1960
 25255                           
 25256                           ; BSR set to: 1
 25257  0175F2  0E00               	movlw	0
 25258  0175F4  6F17               	movwf	?__div_to_l_& (0+255),b
 25259  0175F6  0E00               	movlw	0
 25260  0175F8  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 25261  0175FA  0E00               	movlw	0
 25262  0175FC  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 25263  0175FE  0E00               	movlw	0
 25264  017600  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 25265                           
 25266                           ; BSR set to: 1
 25267  017602  0012               	return	
 25268  017604                     
 25269                           ; BSR set to: 1
 25270                           
 25271                           ; BSR set to: 1
 25272  017604  90D8               	bcf	status,0,c
 25273  017606  371F               	rlcf	__div_to_l_@quot& (0+255),f,b
 25274  017608  3720               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 25275  01760A  3721               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 25276  01760C  3722               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 25277  01760E  0724               	decf	__div_to_l_@exp1& (0+255),f,b
 25278  017610                     l1960:
 25279                           
 25280                           ; BSR set to: 1
 25281                           
 25282                           ; BSR set to: 1
 25283  017610  5124               	movf	__div_to_l_@exp1& (0+255),w,b
 25284  017612  A4D8               	btfss	status,2,c
 25285  017614  D7F7               	goto	l1961
 25286  017616                     u24790:
 25287                           
 25288                           ; BSR set to: 1
 25289                           
 25290                           ; BSR set to: 1
 25291  017616  C11F  F117         	movff	__div_to_l_@quot,?__div_to_l_
 25292  01761A  C120  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 25293  01761E  C121  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 25294  017622  C122  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 25295                           
 25296                           ; BSR set to: 1
 25297  017626  0012               	return		;funcret
 25298  017628                     __end_of__div_to_l_:
 25299                           	opt stack 0
 25300                           tblptru	equ	0xFF8
 25301                           tblptrh	equ	0xFF7
 25302                           tblptrl	equ	0xFF6
 25303                           tablat	equ	0xFF5
 25304                           prodh	equ	0xFF4
 25305                           prodl	equ	0xFF3
 25306                           intcon	equ	0xFF2
 25307                           indf0	equ	0xFEF
 25308                           postinc0	equ	0xFEE
 25309                           fsr0h	equ	0xFEA
 25310                           fsr0l	equ	0xFE9
 25311                           wreg	equ	0xFE8
 25312                           indf1	equ	0xFE7
 25313                           postdec1	equ	0xFE5
 25314                           plusw1	equ	0xFE3
 25315                           fsr1h	equ	0xFE2
 25316                           fsr1l	equ	0xFE1
 25317                           indf2	equ	0xFDF
 25318                           postinc2	equ	0xFDE
 25319                           postdec2	equ	0xFDD
 25320                           plusw2	equ	0xFDB
 25321                           fsr2h	equ	0xFDA
 25322                           fsr2l	equ	0xFD9
 25323                           status	equ	0xFD8
 25324                           
 25325 ;; *************** function ___xxtofl *****************
 25326 ;; Defined at:
 25327 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 25328 ;; Parameters:    Size  Location     Type
 25329 ;;  sign            1    wreg     unsigned char 
 25330 ;;  val             4   23[BANK1 ] long 
 25331 ;; Auto vars:     Size  Location     Type
 25332 ;;  sign            1   31[BANK1 ] unsigned char 
 25333 ;;  arg             4   33[BANK1 ] unsigned long 
 25334 ;;  exp             1   32[BANK1 ] unsigned char 
 25335 ;; Return value:  Size  Location     Type
 25336 ;;                  4   23[BANK1 ] unsigned char 
 25337 ;; Registers used:
 25338 ;;		wreg, status,2, status,0
 25339 ;; Tracked objects:
 25340 ;;		On entry : 0/0
 25341 ;;		On exit  : 0/0
 25342 ;;		Unchanged: 0/0
 25343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25344 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25345 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25346 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25347 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25348 ;;Total ram usage:       14 bytes
 25349 ;; Hardware stack levels used:    1
 25350 ;; Hardware stack levels required when called:   13
 25351 ;; This function calls:
 25352 ;;		Nothing
 25353 ;; This function is called by:
 25354 ;;		_ringBufferLUT
 25355 ;;		_printf
 25356 ;; This function uses a non-reentrant model
 25357 ;;
 25358                           
 25359                           	psect	text40
 25360  016EBE                     __ptext40:
 25361                           	opt stack 0
 25362  016EBE                     ___xxtofl:
 25363                           	opt stack 14
 25364                           
 25365                           ; BSR set to: 1
 25366                           ;incstack = 0
 25367                           ;___xxtofl@sign stored from wreg
 25368  016EBE  0101               	movlb	1	; () banked
 25369  016EC0  6F1F               	movwf	___xxtofl@sign& (0+255),b
 25370  016EC2  0101               	movlb	1	; () banked
 25371  016EC4  511F               	movf	___xxtofl@sign& (0+255),w,b
 25372  016EC6  A4D8               	btfss	status,2,c
 25373                           
 25374                           ; BSR set to: 1
 25375  016EC8  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 25376  016ECA  D01A               	goto	l2428
 25377                           
 25378                           ; BSR set to: 1
 25379  016ECC  C117  F11B         	movff	___xxtofl@val,??___xxtofl
 25380  016ED0  C118  F11C         	movff	___xxtofl@val+1,??___xxtofl+1
 25381  016ED4  C119  F11D         	movff	___xxtofl@val+2,??___xxtofl+2
 25382  016ED8  C11A  F11E         	movff	___xxtofl@val+3,??___xxtofl+3
 25383  016EDC  1F1B               	comf	??___xxtofl& (0+255),f,b
 25384  016EDE  1F1C               	comf	(??___xxtofl+1)& (0+255),f,b
 25385  016EE0  1F1D               	comf	(??___xxtofl+2)& (0+255),f,b
 25386  016EE2  1F1E               	comf	(??___xxtofl+3)& (0+255),f,b
 25387  016EE4  2B1B               	incf	??___xxtofl& (0+255),f,b
 25388  016EE6  0E00               	movlw	0
 25389  016EE8  231C               	addwfc	(??___xxtofl+1)& (0+255),f,b
 25390  016EEA  231D               	addwfc	(??___xxtofl+2)& (0+255),f,b
 25391  016EEC  231E               	addwfc	(??___xxtofl+3)& (0+255),f,b
 25392  016EEE  C11B  F121         	movff	??___xxtofl,___xxtofl@arg
 25393  016EF2  C11C  F122         	movff	??___xxtofl+1,___xxtofl@arg+1
 25394  016EF6  C11D  F123         	movff	??___xxtofl+2,___xxtofl@arg+2
 25395  016EFA  C11E  F124         	movff	??___xxtofl+3,___xxtofl@arg+3
 25396  016EFE  D008               	goto	l2429
 25397  016F00                     l2428:
 25398                           
 25399                           ; BSR set to: 1
 25400  016F00  C117  F121         	movff	___xxtofl@val,___xxtofl@arg
 25401  016F04  C118  F122         	movff	___xxtofl@val+1,___xxtofl@arg+1
 25402  016F08  C119  F123         	movff	___xxtofl@val+2,___xxtofl@arg+2
 25403  016F0C  C11A  F124         	movff	___xxtofl@val+3,___xxtofl@arg+3
 25404  016F10                     l2429:
 25405                           
 25406                           ; BSR set to: 1
 25407                           
 25408                           ; BSR set to: 1
 25409  016F10  5117               	movf	___xxtofl@val& (0+255),w,b
 25410  016F12  1118               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 25411  016F14  1119               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 25412  016F16  111A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 25413  016F18  A4D8               	btfss	status,2,c
 25414  016F1A  D009               	goto	l2430
 25415                           
 25416                           ; BSR set to: 1
 25417  016F1C  0E00               	movlw	0
 25418  016F1E  6F17               	movwf	?___xxtofl& (0+255),b
 25419  016F20  0E00               	movlw	0
 25420  016F22  6F18               	movwf	(?___xxtofl+1)& (0+255),b
 25421  016F24  0E00               	movlw	0
 25422  016F26  6F19               	movwf	(?___xxtofl+2)& (0+255),b
 25423  016F28  0E00               	movlw	0
 25424  016F2A  6F1A               	movwf	(?___xxtofl+3)& (0+255),b
 25425                           
 25426                           ; BSR set to: 1
 25427  016F2C  0012               	return	
 25428  016F2E                     l2430:
 25429                           
 25430                           ; BSR set to: 1
 25431                           
 25432                           ; BSR set to: 1
 25433  016F2E  0E96               	movlw	150
 25434  016F30  6F20               	movwf	___xxtofl@exp& (0+255),b
 25435  016F32  D006               	goto	l2432
 25436  016F34                     
 25437                           ; BSR set to: 1
 25438                           
 25439                           ; BSR set to: 1
 25440  016F34  2B20               	incf	___xxtofl@exp& (0+255),f,b
 25441  016F36  90D8               	bcf	status,0,c
 25442  016F38  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 25443  016F3A  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 25444  016F3C  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 25445  016F3E  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 25446  016F40                     l2432:
 25447                           
 25448                           ; BSR set to: 1
 25449                           
 25450                           ; BSR set to: 1
 25451  016F40  0E00               	movlw	0
 25452  016F42  1521               	andwf	___xxtofl@arg& (0+255),w,b
 25453  016F44  6F1B               	movwf	??___xxtofl& (0+255),b
 25454  016F46  0E00               	movlw	0
 25455  016F48  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 25456  016F4A  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 25457  016F4C  0E00               	movlw	0
 25458  016F4E  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 25459  016F50  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 25460  016F52  0EFE               	movlw	254
 25461  016F54  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 25462  016F56  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 25463  016F58  511B               	movf	??___xxtofl& (0+255),w,b
 25464  016F5A  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 25465  016F5C  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 25466  016F5E  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 25467  016F60  B4D8               	btfsc	status,2,c
 25468  016F62  D00D               	goto	l2435
 25469  016F64  D7E7               	goto	l2433
 25470  016F66                     
 25471                           ; BSR set to: 1
 25472                           
 25473                           ; BSR set to: 1
 25474  016F66  2B20               	incf	___xxtofl@exp& (0+255),f,b
 25475                           
 25476                           ; BSR set to: 1
 25477  016F68  0E01               	movlw	1
 25478  016F6A  2721               	addwf	___xxtofl@arg& (0+255),f,b
 25479  016F6C  0E00               	movlw	0
 25480  016F6E  2322               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 25481  016F70  2323               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 25482  016F72  2324               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 25483                           
 25484                           ; BSR set to: 1
 25485  016F74  90D8               	bcf	status,0,c
 25486  016F76  3324               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 25487  016F78  3323               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 25488  016F7A  3322               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 25489  016F7C  3321               	rrcf	___xxtofl@arg& (0+255),f,b
 25490  016F7E                     l2435:
 25491                           
 25492                           ; BSR set to: 1
 25493  016F7E  0E00               	movlw	0
 25494  016F80  1521               	andwf	___xxtofl@arg& (0+255),w,b
 25495  016F82  6F1B               	movwf	??___xxtofl& (0+255),b
 25496  016F84  0E00               	movlw	0
 25497  016F86  1522               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 25498  016F88  6F1C               	movwf	(??___xxtofl+1)& (0+255),b
 25499  016F8A  0E00               	movlw	0
 25500  016F8C  1523               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 25501  016F8E  6F1D               	movwf	(??___xxtofl+2)& (0+255),b
 25502  016F90  0EFF               	movlw	255
 25503  016F92  1524               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 25504  016F94  6F1E               	movwf	(??___xxtofl+3)& (0+255),b
 25505  016F96  511B               	movf	??___xxtofl& (0+255),w,b
 25506  016F98  111C               	iorwf	(??___xxtofl+1)& (0+255),w,b
 25507  016F9A  111D               	iorwf	(??___xxtofl+2)& (0+255),w,b
 25508  016F9C  111E               	iorwf	(??___xxtofl+3)& (0+255),w,b
 25509  016F9E  B4D8               	btfsc	status,2,c
 25510  016FA0  D007               	goto	l2438
 25511  016FA2  D7E1               	goto	l2436
 25512  016FA4                     
 25513                           ; BSR set to: 1
 25514                           
 25515                           ; BSR set to: 1
 25516  016FA4  0720               	decf	___xxtofl@exp& (0+255),f,b
 25517  016FA6  90D8               	bcf	status,0,c
 25518  016FA8  3721               	rlcf	___xxtofl@arg& (0+255),f,b
 25519  016FAA  3722               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 25520  016FAC  3723               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 25521  016FAE  3724               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 25522  016FB0                     l2438:
 25523                           
 25524                           ; BSR set to: 1
 25525                           
 25526                           ; BSR set to: 1
 25527  016FB0  BF23               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 25528  016FB2  D003               	goto	u25050
 25529                           
 25530                           ; BSR set to: 1
 25531  016FB4  0E02               	movlw	2
 25532  016FB6  6120               	cpfslt	___xxtofl@exp& (0+255),b
 25533  016FB8  D7F5               	goto	l2439
 25534  016FBA                     u25050:
 25535                           
 25536                           ; BSR set to: 1
 25537                           
 25538                           ; BSR set to: 1
 25539  016FBA  B120               	btfsc	___xxtofl@exp& (0+255),0,b
 25540  016FBC  D008               	goto	l2443
 25541                           
 25542                           ; BSR set to: 1
 25543  016FBE  0EFF               	movlw	255
 25544  016FC0  1721               	andwf	___xxtofl@arg& (0+255),f,b
 25545  016FC2  0EFF               	movlw	255
 25546  016FC4  1722               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 25547  016FC6  0E7F               	movlw	127
 25548  016FC8  1723               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 25549  016FCA  0EFF               	movlw	255
 25550  016FCC  1724               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 25551  016FCE                     l2443:
 25552                           
 25553                           ; BSR set to: 1
 25554  016FCE  90D8               	bcf	status,0,c
 25555  016FD0  3320               	rrcf	___xxtofl@exp& (0+255),f,b
 25556  016FD2  C120  F11B         	movff	___xxtofl@exp,??___xxtofl
 25557  016FD6  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 25558  016FD8  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 25559  016FDA  6B1E               	clrf	(??___xxtofl+3)& (0+255),b
 25560  016FDC  C11B  F11E         	movff	??___xxtofl,??___xxtofl+3
 25561  016FE0  6B1D               	clrf	(??___xxtofl+2)& (0+255),b
 25562  016FE2  6B1C               	clrf	(??___xxtofl+1)& (0+255),b
 25563  016FE4  6B1B               	clrf	??___xxtofl& (0+255),b
 25564  016FE6  511B               	movf	??___xxtofl& (0+255),w,b
 25565  016FE8  1321               	iorwf	___xxtofl@arg& (0+255),f,b
 25566  016FEA  511C               	movf	(??___xxtofl+1)& (0+255),w,b
 25567  016FEC  1322               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 25568  016FEE  511D               	movf	(??___xxtofl+2)& (0+255),w,b
 25569  016FF0  1323               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 25570  016FF2  511E               	movf	(??___xxtofl+3)& (0+255),w,b
 25571  016FF4  1324               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 25572                           
 25573                           ; BSR set to: 1
 25574  016FF6  511F               	movf	___xxtofl@sign& (0+255),w,b
 25575  016FF8  A4D8               	btfss	status,2,c
 25576                           
 25577                           ; BSR set to: 1
 25578  016FFA  AF1A               	btfss	(___xxtofl@val+3)& (0+255),7,b
 25579  016FFC  D001               	goto	l2444
 25580                           
 25581                           ; BSR set to: 1
 25582  016FFE  8F24               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 25583  017000                     l2444:
 25584                           
 25585                           ; BSR set to: 1
 25586                           
 25587                           ; BSR set to: 1
 25588  017000  C121  F117         	movff	___xxtofl@arg,?___xxtofl
 25589  017004  C122  F118         	movff	___xxtofl@arg+1,?___xxtofl+1
 25590  017008  C123  F119         	movff	___xxtofl@arg+2,?___xxtofl+2
 25591  01700C  C124  F11A         	movff	___xxtofl@arg+3,?___xxtofl+3
 25592  017010  0012               	return	
 25593  017012                     __end_of___xxtofl:
 25594                           	opt stack 0
 25595                           tblptru	equ	0xFF8
 25596                           tblptrh	equ	0xFF7
 25597                           tblptrl	equ	0xFF6
 25598                           tablat	equ	0xFF5
 25599                           prodh	equ	0xFF4
 25600                           prodl	equ	0xFF3
 25601                           intcon	equ	0xFF2
 25602                           indf0	equ	0xFEF
 25603                           postinc0	equ	0xFEE
 25604                           fsr0h	equ	0xFEA
 25605                           fsr0l	equ	0xFE9
 25606                           wreg	equ	0xFE8
 25607                           indf1	equ	0xFE7
 25608                           postdec1	equ	0xFE5
 25609                           plusw1	equ	0xFE3
 25610                           fsr1h	equ	0xFE2
 25611                           fsr1l	equ	0xFE1
 25612                           indf2	equ	0xFDF
 25613                           postinc2	equ	0xFDE
 25614                           postdec2	equ	0xFDD
 25615                           plusw2	equ	0xFDB
 25616                           fsr2h	equ	0xFDA
 25617                           fsr2l	equ	0xFD9
 25618                           status	equ	0xFD8
 25619                           
 25620 ;; *************** function ___wmul *****************
 25621 ;; Defined at:
 25622 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 25623 ;; Parameters:    Size  Location     Type
 25624 ;;  multiplier      2   23[BANK1 ] unsigned int 
 25625 ;;  multiplicand    2   25[BANK1 ] unsigned int 
 25626 ;; Auto vars:     Size  Location     Type
 25627 ;;  product         2   27[BANK1 ] unsigned int 
 25628 ;; Return value:  Size  Location     Type
 25629 ;;                  2   23[BANK1 ] unsigned int 
 25630 ;; Registers used:
 25631 ;;		wreg, status,2, status,0, prodl, prodh
 25632 ;; Tracked objects:
 25633 ;;		On entry : 0/0
 25634 ;;		On exit  : 0/0
 25635 ;;		Unchanged: 0/0
 25636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25637 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25638 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25640 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25641 ;;Total ram usage:        6 bytes
 25642 ;; Hardware stack levels used:    1
 25643 ;; Hardware stack levels required when called:   13
 25644 ;; This function calls:
 25645 ;;		Nothing
 25646 ;; This function is called by:
 25647 ;;		_ringBufferLUT
 25648 ;;		_printf
 25649 ;;		_atoi
 25650 ;; This function uses a non-reentrant model
 25651 ;;
 25652                           
 25653                           	psect	text41
 25654  019310                     __ptext41:
 25655                           	opt stack 0
 25656  019310                     ___wmul:
 25657                           	opt stack 14
 25658                           
 25659                           ; BSR set to: 1
 25660                           ;incstack = 0
 25661  019310  0101               	movlb	1	; () banked
 25662  019312  5117               	movf	___wmul@multiplier& (0+255),w,b
 25663  019314  0319               	mulwf	___wmul@multiplicand& (0+255),b
 25664  019316  CFF3 F11B          	movff	prodl,___wmul@product
 25665  01931A  CFF4 F11C          	movff	prodh,___wmul@product+1
 25666  01931E  5117               	movf	___wmul@multiplier& (0+255),w,b
 25667  019320  031A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 25668  019322  50F3               	movf	prodl,w,c
 25669  019324  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 25670  019326  5118               	movf	(___wmul@multiplier+1)& (0+255),w,b
 25671  019328  0319               	mulwf	___wmul@multiplicand& (0+255),b
 25672  01932A  50F3               	movf	prodl,w,c
 25673  01932C  271C               	addwf	(___wmul@product+1)& (0+255),f,b
 25674                           
 25675                           ; BSR set to: 1
 25676  01932E  C11B  F117         	movff	___wmul@product,?___wmul
 25677  019332  C11C  F118         	movff	___wmul@product+1,?___wmul+1
 25678  019336  0012               	return	
 25679  019338                     __end_of___wmul:
 25680                           	opt stack 0
 25681                           tblptru	equ	0xFF8
 25682                           tblptrh	equ	0xFF7
 25683                           tblptrl	equ	0xFF6
 25684                           tablat	equ	0xFF5
 25685                           prodh	equ	0xFF4
 25686                           prodl	equ	0xFF3
 25687                           intcon	equ	0xFF2
 25688                           indf0	equ	0xFEF
 25689                           postinc0	equ	0xFEE
 25690                           fsr0h	equ	0xFEA
 25691                           fsr0l	equ	0xFE9
 25692                           wreg	equ	0xFE8
 25693                           indf1	equ	0xFE7
 25694                           postdec1	equ	0xFE5
 25695                           plusw1	equ	0xFE3
 25696                           fsr1h	equ	0xFE2
 25697                           fsr1l	equ	0xFE1
 25698                           indf2	equ	0xFDF
 25699                           postinc2	equ	0xFDE
 25700                           postdec2	equ	0xFDD
 25701                           plusw2	equ	0xFDB
 25702                           fsr2h	equ	0xFDA
 25703                           fsr2l	equ	0xFD9
 25704                           status	equ	0xFD8
 25705                           
 25706 ;; *************** function ___llmod *****************
 25707 ;; Defined at:
 25708 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 25709 ;; Parameters:    Size  Location     Type
 25710 ;;  dividend        4   36[BANK1 ] unsigned long 
 25711 ;;  divisor         4   40[BANK1 ] unsigned long 
 25712 ;; Auto vars:     Size  Location     Type
 25713 ;;  counter         1   44[BANK1 ] unsigned char 
 25714 ;; Return value:  Size  Location     Type
 25715 ;;                  4   36[BANK1 ] unsigned long 
 25716 ;; Registers used:
 25717 ;;		wreg, status,2, status,0
 25718 ;; Tracked objects:
 25719 ;;		On entry : 0/0
 25720 ;;		On exit  : 0/0
 25721 ;;		Unchanged: 0/0
 25722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25723 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25724 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25726 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25727 ;;Total ram usage:        9 bytes
 25728 ;; Hardware stack levels used:    1
 25729 ;; Hardware stack levels required when called:   13
 25730 ;; This function calls:
 25731 ;;		Nothing
 25732 ;; This function is called by:
 25733 ;;		_printf
 25734 ;; This function uses a non-reentrant model
 25735 ;;
 25736                           
 25737                           	psect	text42
 25738  01892C                     __ptext42:
 25739                           	opt stack 0
 25740  01892C                     ___llmod:
 25741                           	opt stack 14
 25742                           
 25743                           ; BSR set to: 1
 25744                           ;incstack = 0
 25745  01892C  0101               	movlb	1	; () banked
 25746  01892E  5128               	movf	___llmod@divisor& (0+255),w,b
 25747  018930  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 25748  018932  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 25749  018934  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 25750  018936  B4D8               	btfsc	status,2,c
 25751  018938  D024               	goto	l2153
 25752                           
 25753                           ; BSR set to: 1
 25754  01893A  0E01               	movlw	1
 25755  01893C  6F2C               	movwf	___llmod@counter& (0+255),b
 25756  01893E  D006               	goto	l2148
 25757  018940                     
 25758                           ; BSR set to: 1
 25759                           
 25760                           ; BSR set to: 1
 25761  018940  90D8               	bcf	status,0,c
 25762  018942  3728               	rlcf	___llmod@divisor& (0+255),f,b
 25763  018944  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 25764  018946  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 25765  018948  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 25766  01894A  2B2C               	incf	___llmod@counter& (0+255),f,b
 25767  01894C                     l2148:
 25768                           
 25769                           ; BSR set to: 1
 25770                           
 25771                           ; BSR set to: 1
 25772  01894C  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 25773  01894E  D7F8               	goto	l2149
 25774  018950                     u24970:
 25775                           
 25776                           ; BSR set to: 1
 25777                           
 25778                           ; BSR set to: 1
 25779                           
 25780                           ; BSR set to: 1
 25781  018950  5128               	movf	___llmod@divisor& (0+255),w,b
 25782  018952  5D24               	subwf	___llmod@dividend& (0+255),w,b
 25783  018954  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 25784  018956  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 25785  018958  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 25786  01895A  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 25787  01895C  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 25788  01895E  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 25789  018960  A0D8               	btfss	status,0,c
 25790  018962  D008               	goto	l2152
 25791                           
 25792                           ; BSR set to: 1
 25793  018964  5128               	movf	___llmod@divisor& (0+255),w,b
 25794  018966  5F24               	subwf	___llmod@dividend& (0+255),f,b
 25795  018968  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 25796  01896A  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 25797  01896C  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 25798  01896E  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 25799  018970  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 25800  018972  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 25801  018974                     l2152:
 25802                           
 25803                           ; BSR set to: 1
 25804                           
 25805                           ; BSR set to: 1
 25806  018974  90D8               	bcf	status,0,c
 25807  018976  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 25808  018978  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 25809  01897A  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 25810  01897C  3328               	rrcf	___llmod@divisor& (0+255),f,b
 25811                           
 25812                           ; BSR set to: 1
 25813  01897E  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 25814  018980  D7E7               	goto	u24970
 25815  018982                     l2153:
 25816                           
 25817                           ; BSR set to: 1
 25818                           
 25819                           ; BSR set to: 1
 25820  018982  C124  F124         	movff	___llmod@dividend,?___llmod
 25821  018986  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 25822  01898A  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 25823  01898E  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 25824                           
 25825                           ; BSR set to: 1
 25826  018992  0012               	return		;funcret
 25827  018994                     __end_of___llmod:
 25828                           	opt stack 0
 25829                           tblptru	equ	0xFF8
 25830                           tblptrh	equ	0xFF7
 25831                           tblptrl	equ	0xFF6
 25832                           tablat	equ	0xFF5
 25833                           prodh	equ	0xFF4
 25834                           prodl	equ	0xFF3
 25835                           intcon	equ	0xFF2
 25836                           indf0	equ	0xFEF
 25837                           postinc0	equ	0xFEE
 25838                           fsr0h	equ	0xFEA
 25839                           fsr0l	equ	0xFE9
 25840                           wreg	equ	0xFE8
 25841                           indf1	equ	0xFE7
 25842                           postdec1	equ	0xFE5
 25843                           plusw1	equ	0xFE3
 25844                           fsr1h	equ	0xFE2
 25845                           fsr1l	equ	0xFE1
 25846                           indf2	equ	0xFDF
 25847                           postinc2	equ	0xFDE
 25848                           postdec2	equ	0xFDD
 25849                           plusw2	equ	0xFDB
 25850                           fsr2h	equ	0xFDA
 25851                           fsr2l	equ	0xFD9
 25852                           status	equ	0xFD8
 25853                           
 25854 ;; *************** function ___lldiv *****************
 25855 ;; Defined at:
 25856 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 25857 ;; Parameters:    Size  Location     Type
 25858 ;;  dividend        4   23[BANK1 ] unsigned long 
 25859 ;;  divisor         4   27[BANK1 ] unsigned long 
 25860 ;; Auto vars:     Size  Location     Type
 25861 ;;  quotient        4   32[BANK1 ] unsigned long 
 25862 ;;  counter         1   31[BANK1 ] unsigned char 
 25863 ;; Return value:  Size  Location     Type
 25864 ;;                  4   23[BANK1 ] unsigned long 
 25865 ;; Registers used:
 25866 ;;		wreg, status,2, status,0
 25867 ;; Tracked objects:
 25868 ;;		On entry : 0/0
 25869 ;;		On exit  : 0/0
 25870 ;;		Unchanged: 0/0
 25871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25872 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25873 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25875 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25876 ;;Total ram usage:       13 bytes
 25877 ;; Hardware stack levels used:    1
 25878 ;; Hardware stack levels required when called:   13
 25879 ;; This function calls:
 25880 ;;		Nothing
 25881 ;; This function is called by:
 25882 ;;		_printf
 25883 ;; This function uses a non-reentrant model
 25884 ;;
 25885                           
 25886                           	psect	text43
 25887  01848A                     __ptext43:
 25888                           	opt stack 0
 25889  01848A                     ___lldiv:
 25890                           	opt stack 14
 25891                           
 25892                           ; BSR set to: 1
 25893                           ;incstack = 0
 25894  01848A  0E00               	movlw	0
 25895  01848C  0101               	movlb	1	; () banked
 25896  01848E  6F20               	movwf	___lldiv@quotient& (0+255),b
 25897  018490  0E00               	movlw	0
 25898  018492  6F21               	movwf	(___lldiv@quotient+1)& (0+255),b
 25899  018494  0E00               	movlw	0
 25900  018496  6F22               	movwf	(___lldiv@quotient+2)& (0+255),b
 25901  018498  0E00               	movlw	0
 25902  01849A  6F23               	movwf	(___lldiv@quotient+3)& (0+255),b
 25903                           
 25904                           ; BSR set to: 1
 25905  01849C  511B               	movf	___lldiv@divisor& (0+255),w,b
 25906  01849E  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 25907  0184A0  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 25908  0184A2  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 25909  0184A4  B4D8               	btfsc	status,2,c
 25910  0184A6  D02A               	goto	l2143
 25911                           
 25912                           ; BSR set to: 1
 25913  0184A8  0E01               	movlw	1
 25914  0184AA  6F1F               	movwf	___lldiv@counter& (0+255),b
 25915  0184AC  D006               	goto	l2138
 25916  0184AE                     
 25917                           ; BSR set to: 1
 25918                           
 25919                           ; BSR set to: 1
 25920  0184AE  90D8               	bcf	status,0,c
 25921  0184B0  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 25922  0184B2  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 25923  0184B4  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 25924  0184B6  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 25925  0184B8  2B1F               	incf	___lldiv@counter& (0+255),f,b
 25926  0184BA                     l2138:
 25927                           
 25928                           ; BSR set to: 1
 25929                           
 25930                           ; BSR set to: 1
 25931  0184BA  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 25932  0184BC  D7F8               	goto	l2139
 25933  0184BE                     u24940:
 25934                           
 25935                           ; BSR set to: 1
 25936                           
 25937                           ; BSR set to: 1
 25938                           
 25939                           ; BSR set to: 1
 25940  0184BE  90D8               	bcf	status,0,c
 25941  0184C0  3720               	rlcf	___lldiv@quotient& (0+255),f,b
 25942  0184C2  3721               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 25943  0184C4  3722               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 25944  0184C6  3723               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 25945                           
 25946                           ; BSR set to: 1
 25947  0184C8  511B               	movf	___lldiv@divisor& (0+255),w,b
 25948  0184CA  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 25949  0184CC  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25950  0184CE  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 25951  0184D0  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25952  0184D2  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 25953  0184D4  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25954  0184D6  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 25955  0184D8  A0D8               	btfss	status,0,c
 25956  0184DA  D009               	goto	l2142
 25957                           
 25958                           ; BSR set to: 1
 25959  0184DC  511B               	movf	___lldiv@divisor& (0+255),w,b
 25960  0184DE  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 25961  0184E0  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25962  0184E2  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 25963  0184E4  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25964  0184E6  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 25965  0184E8  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25966  0184EA  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 25967                           
 25968                           ; BSR set to: 1
 25969  0184EC  8120               	bsf	___lldiv@quotient& (0+255),0,b
 25970  0184EE                     l2142:
 25971                           
 25972                           ; BSR set to: 1
 25973                           
 25974                           ; BSR set to: 1
 25975  0184EE  90D8               	bcf	status,0,c
 25976  0184F0  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 25977  0184F2  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 25978  0184F4  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 25979  0184F6  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 25980                           
 25981                           ; BSR set to: 1
 25982  0184F8  2F1F               	decfsz	___lldiv@counter& (0+255),f,b
 25983  0184FA  D7E1               	goto	u24940
 25984  0184FC                     l2143:
 25985                           
 25986                           ; BSR set to: 1
 25987                           
 25988                           ; BSR set to: 1
 25989  0184FC  C120  F117         	movff	___lldiv@quotient,?___lldiv
 25990  018500  C121  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 25991  018504  C122  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 25992  018508  C123  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 25993                           
 25994                           ; BSR set to: 1
 25995  01850C  0012               	return		;funcret
 25996  01850E                     __end_of___lldiv:
 25997                           	opt stack 0
 25998                           tblptru	equ	0xFF8
 25999                           tblptrh	equ	0xFF7
 26000                           tblptrl	equ	0xFF6
 26001                           tablat	equ	0xFF5
 26002                           prodh	equ	0xFF4
 26003                           prodl	equ	0xFF3
 26004                           intcon	equ	0xFF2
 26005                           indf0	equ	0xFEF
 26006                           postinc0	equ	0xFEE
 26007                           fsr0h	equ	0xFEA
 26008                           fsr0l	equ	0xFE9
 26009                           wreg	equ	0xFE8
 26010                           indf1	equ	0xFE7
 26011                           postdec1	equ	0xFE5
 26012                           plusw1	equ	0xFE3
 26013                           fsr1h	equ	0xFE2
 26014                           fsr1l	equ	0xFE1
 26015                           indf2	equ	0xFDF
 26016                           postinc2	equ	0xFDE
 26017                           postdec2	equ	0xFDD
 26018                           plusw2	equ	0xFDB
 26019                           fsr2h	equ	0xFDA
 26020                           fsr2l	equ	0xFD9
 26021                           status	equ	0xFD8
 26022                           
 26023 ;; *************** function ___fltol *****************
 26024 ;; Defined at:
 26025 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 26026 ;; Parameters:    Size  Location     Type
 26027 ;;  f1              4  120[BANK1 ] unsigned long 
 26028 ;; Auto vars:     Size  Location     Type
 26029 ;;  exp1            1  129[BANK1 ] unsigned char 
 26030 ;;  sign1           1  128[BANK1 ] unsigned char 
 26031 ;; Return value:  Size  Location     Type
 26032 ;;                  4  120[BANK1 ] long 
 26033 ;; Registers used:
 26034 ;;		wreg, status,2, status,0
 26035 ;; Tracked objects:
 26036 ;;		On entry : 0/0
 26037 ;;		On exit  : 0/0
 26038 ;;		Unchanged: 0/0
 26039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26040 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26041 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26042 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26043 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26044 ;;Total ram usage:       10 bytes
 26045 ;; Hardware stack levels used:    1
 26046 ;; Hardware stack levels required when called:   13
 26047 ;; This function calls:
 26048 ;;		Nothing
 26049 ;; This function is called by:
 26050 ;;		_printf
 26051 ;; This function uses a non-reentrant model
 26052 ;;
 26053                           
 26054                           	psect	text44
 26055  017DAC                     __ptext44:
 26056                           	opt stack 0
 26057  017DAC                     ___fltol:
 26058                           	opt stack 14
 26059                           
 26060                           ; BSR set to: 1
 26061                           ;incstack = 0
 26062  017DAC  0101               	movlb	1	; () banked
 26063  017DAE  357A               	rlcf	(___fltol@f1+2)& (0+255),w,b
 26064  017DB0  357B               	rlcf	(___fltol@f1+3)& (0+255),w,b
 26065  017DB2  6F81               	movwf	___fltol@exp1& (0+255),b
 26066  017DB4  5181               	movf	___fltol@exp1& (0+255),w,b
 26067  017DB6  A4D8               	btfss	status,2,c
 26068  017DB8  D009               	goto	l1995
 26069                           
 26070                           ; BSR set to: 1
 26071  017DBA  0E00               	movlw	0
 26072  017DBC  6F78               	movwf	?___fltol& (0+255),b
 26073  017DBE  0E00               	movlw	0
 26074  017DC0  6F79               	movwf	(?___fltol+1)& (0+255),b
 26075  017DC2  0E00               	movlw	0
 26076  017DC4  6F7A               	movwf	(?___fltol+2)& (0+255),b
 26077  017DC6  0E00               	movlw	0
 26078  017DC8  6F7B               	movwf	(?___fltol+3)& (0+255),b
 26079                           
 26080                           ; BSR set to: 1
 26081  017DCA  0012               	return	
 26082  017DCC                     l1995:
 26083                           
 26084                           ; BSR set to: 1
 26085                           
 26086                           ; BSR set to: 1
 26087  017DCC  C178  F17C         	movff	___fltol@f1,??___fltol
 26088  017DD0  C179  F17D         	movff	___fltol@f1+1,??___fltol+1
 26089  017DD4  C17A  F17E         	movff	___fltol@f1+2,??___fltol+2
 26090  017DD8  C17B  F17F         	movff	___fltol@f1+3,??___fltol+3
 26091  017DDC  0E20               	movlw	32
 26092  017DDE  D005               	goto	u24870
 26093  017DE0                     u24875:
 26094  017DE0  90D8               	bcf	status,0,c
 26095  017DE2  337F               	rrcf	(??___fltol+3)& (0+255),f,b
 26096  017DE4  337E               	rrcf	(??___fltol+2)& (0+255),f,b
 26097  017DE6  337D               	rrcf	(??___fltol+1)& (0+255),f,b
 26098  017DE8  337C               	rrcf	??___fltol& (0+255),f,b
 26099  017DEA                     u24870:
 26100  017DEA  2EE8               	decfsz	wreg,f,c
 26101  017DEC  D7F9               	goto	u24875
 26102  017DEE  517C               	movf	??___fltol& (0+255),w,b
 26103  017DF0  6F80               	movwf	___fltol@sign1& (0+255),b
 26104                           
 26105                           ; BSR set to: 1
 26106  017DF2  8F7A               	bsf	(___fltol@f1+2)& (0+255),7,b
 26107                           
 26108                           ; BSR set to: 1
 26109  017DF4  0EFF               	movlw	255
 26110  017DF6  1778               	andwf	___fltol@f1& (0+255),f,b
 26111  017DF8  0EFF               	movlw	255
 26112  017DFA  1779               	andwf	(___fltol@f1+1)& (0+255),f,b
 26113  017DFC  0EFF               	movlw	255
 26114  017DFE  177A               	andwf	(___fltol@f1+2)& (0+255),f,b
 26115  017E00  0E00               	movlw	0
 26116  017E02  177B               	andwf	(___fltol@f1+3)& (0+255),f,b
 26117                           
 26118                           ; BSR set to: 1
 26119  017E04  0E96               	movlw	150
 26120  017E06  5F81               	subwf	___fltol@exp1& (0+255),f,b
 26121                           
 26122                           ; BSR set to: 1
 26123  017E08  AF81               	btfss	___fltol@exp1& (0+255),7,b
 26124  017E0A  D016               	goto	l1997
 26125                           
 26126                           ; BSR set to: 1
 26127  017E0C  5181               	movf	___fltol@exp1& (0+255),w,b
 26128  017E0E  0A80               	xorlw	128
 26129  017E10  0F97               	addlw	151
 26130  017E12  B0D8               	btfsc	status,0,c
 26131  017E14  D009               	goto	l1998
 26132                           
 26133                           ; BSR set to: 1
 26134  017E16  0E00               	movlw	0
 26135  017E18  6F78               	movwf	?___fltol& (0+255),b
 26136  017E1A  0E00               	movlw	0
 26137  017E1C  6F79               	movwf	(?___fltol+1)& (0+255),b
 26138  017E1E  0E00               	movlw	0
 26139  017E20  6F7A               	movwf	(?___fltol+2)& (0+255),b
 26140  017E22  0E00               	movlw	0
 26141  017E24  6F7B               	movwf	(?___fltol+3)& (0+255),b
 26142                           
 26143                           ; BSR set to: 1
 26144  017E26  0012               	return	
 26145  017E28                     l1998:
 26146                           
 26147                           ; BSR set to: 1
 26148                           
 26149                           ; BSR set to: 1
 26150                           
 26151                           ; BSR set to: 1
 26152  017E28  90D8               	bcf	status,0,c
 26153  017E2A  337B               	rrcf	(___fltol@f1+3)& (0+255),f,b
 26154  017E2C  337A               	rrcf	(___fltol@f1+2)& (0+255),f,b
 26155  017E2E  3379               	rrcf	(___fltol@f1+1)& (0+255),f,b
 26156  017E30  3378               	rrcf	___fltol@f1& (0+255),f,b
 26157                           
 26158                           ; BSR set to: 1
 26159  017E32  3F81               	incfsz	___fltol@exp1& (0+255),f,b
 26160  017E34  D7F9               	goto	l1998
 26161                           
 26162                           ; BSR set to: 1
 26163  017E36  D015               	goto	u24910
 26164  017E38                     l1997:
 26165                           
 26166                           ; BSR set to: 1
 26167                           
 26168                           ; BSR set to: 1
 26169  017E38  0E1F               	movlw	31
 26170  017E3A  6581               	cpfsgt	___fltol@exp1& (0+255),b
 26171  017E3C  D00F               	goto	l2003
 26172                           
 26173                           ; BSR set to: 1
 26174  017E3E  0E00               	movlw	0
 26175  017E40  6F78               	movwf	?___fltol& (0+255),b
 26176  017E42  0E00               	movlw	0
 26177  017E44  6F79               	movwf	(?___fltol+1)& (0+255),b
 26178  017E46  0E00               	movlw	0
 26179  017E48  6F7A               	movwf	(?___fltol+2)& (0+255),b
 26180  017E4A  0E00               	movlw	0
 26181  017E4C  6F7B               	movwf	(?___fltol+3)& (0+255),b
 26182                           
 26183                           ; BSR set to: 1
 26184  017E4E  0012               	return	
 26185  017E50                     
 26186                           ; BSR set to: 1
 26187                           
 26188                           ; BSR set to: 1
 26189  017E50  90D8               	bcf	status,0,c
 26190  017E52  3778               	rlcf	___fltol@f1& (0+255),f,b
 26191  017E54  3779               	rlcf	(___fltol@f1+1)& (0+255),f,b
 26192  017E56  377A               	rlcf	(___fltol@f1+2)& (0+255),f,b
 26193  017E58  377B               	rlcf	(___fltol@f1+3)& (0+255),f,b
 26194  017E5A  0781               	decf	___fltol@exp1& (0+255),f,b
 26195  017E5C                     l2003:
 26196                           
 26197                           ; BSR set to: 1
 26198                           
 26199                           ; BSR set to: 1
 26200  017E5C  5181               	movf	___fltol@exp1& (0+255),w,b
 26201  017E5E  A4D8               	btfss	status,2,c
 26202  017E60  D7F7               	goto	l2004
 26203  017E62                     u24910:
 26204                           
 26205                           ; BSR set to: 1
 26206                           
 26207                           ; BSR set to: 1
 26208                           
 26209                           ; BSR set to: 1
 26210  017E62  5180               	movf	___fltol@sign1& (0+255),w,b
 26211  017E64  B4D8               	btfsc	status,2,c
 26212  017E66  D008               	goto	l2006
 26213                           
 26214                           ; BSR set to: 1
 26215  017E68  1F7B               	comf	(___fltol@f1+3)& (0+255),f,b
 26216  017E6A  1F7A               	comf	(___fltol@f1+2)& (0+255),f,b
 26217  017E6C  1F79               	comf	(___fltol@f1+1)& (0+255),f,b
 26218  017E6E  6D78               	negf	___fltol@f1& (0+255),b
 26219  017E70  0E00               	movlw	0
 26220  017E72  2379               	addwfc	(___fltol@f1+1)& (0+255),f,b
 26221  017E74  237A               	addwfc	(___fltol@f1+2)& (0+255),f,b
 26222  017E76  237B               	addwfc	(___fltol@f1+3)& (0+255),f,b
 26223  017E78                     l2006:
 26224                           
 26225                           ; BSR set to: 1
 26226                           
 26227                           ; BSR set to: 1
 26228  017E78  C178  F178         	movff	___fltol@f1,?___fltol
 26229  017E7C  C179  F179         	movff	___fltol@f1+1,?___fltol+1
 26230  017E80  C17A  F17A         	movff	___fltol@f1+2,?___fltol+2
 26231  017E84  C17B  F17B         	movff	___fltol@f1+3,?___fltol+3
 26232  017E88  0012               	return	
 26233  017E8A                     __end_of___fltol:
 26234                           	opt stack 0
 26235                           tblptru	equ	0xFF8
 26236                           tblptrh	equ	0xFF7
 26237                           tblptrl	equ	0xFF6
 26238                           tablat	equ	0xFF5
 26239                           prodh	equ	0xFF4
 26240                           prodl	equ	0xFF3
 26241                           intcon	equ	0xFF2
 26242                           indf0	equ	0xFEF
 26243                           postinc0	equ	0xFEE
 26244                           fsr0h	equ	0xFEA
 26245                           fsr0l	equ	0xFE9
 26246                           wreg	equ	0xFE8
 26247                           indf1	equ	0xFE7
 26248                           postdec1	equ	0xFE5
 26249                           plusw1	equ	0xFE3
 26250                           fsr1h	equ	0xFE2
 26251                           fsr1l	equ	0xFE1
 26252                           indf2	equ	0xFDF
 26253                           postinc2	equ	0xFDE
 26254                           postdec2	equ	0xFDD
 26255                           plusw2	equ	0xFDB
 26256                           fsr2h	equ	0xFDA
 26257                           fsr2l	equ	0xFD9
 26258                           status	equ	0xFD8
 26259                           
 26260 ;; *************** function ___flsub *****************
 26261 ;; Defined at:
 26262 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 26263 ;; Parameters:    Size  Location     Type
 26264 ;;  b               4   61[BANK1 ] long 
 26265 ;;  a               4   65[BANK1 ] long 
 26266 ;; Auto vars:     Size  Location     Type
 26267 ;;		None
 26268 ;; Return value:  Size  Location     Type
 26269 ;;                  4   61[BANK1 ] long 
 26270 ;; Registers used:
 26271 ;;		wreg, status,2, status,0, cstack
 26272 ;; Tracked objects:
 26273 ;;		On entry : 0/0
 26274 ;;		On exit  : 0/0
 26275 ;;		Unchanged: 0/0
 26276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26277 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26280 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26281 ;;Total ram usage:        8 bytes
 26282 ;; Hardware stack levels used:    1
 26283 ;; Hardware stack levels required when called:   14
 26284 ;; This function calls:
 26285 ;;		___fladd
 26286 ;; This function is called by:
 26287 ;;		_printf
 26288 ;; This function uses a non-reentrant model
 26289 ;;
 26290                           
 26291                           	psect	text45
 26292  018E70                     __ptext45:
 26293                           	opt stack 0
 26294  018E70                     ___flsub:
 26295                           	opt stack 13
 26296                           
 26297                           ; BSR set to: 1
 26298                           ;incstack = 0
 26299  018E70  0E00               	movlw	0
 26300  018E72  0101               	movlb	1	; () banked
 26301  018E74  1B41               	xorwf	___flsub@a& (0+255),f,b
 26302  018E76  0E00               	movlw	0
 26303  018E78  1B42               	xorwf	(___flsub@a+1)& (0+255),f,b
 26304  018E7A  0E00               	movlw	0
 26305  018E7C  1B43               	xorwf	(___flsub@a+2)& (0+255),f,b
 26306  018E7E  0E80               	movlw	128
 26307  018E80  1B44               	xorwf	(___flsub@a+3)& (0+255),f,b
 26308                           
 26309                           ; BSR set to: 1
 26310  018E82  C13D  F129         	movff	___flsub@b,___fladd@b
 26311  018E86  C13E  F12A         	movff	___flsub@b+1,___fladd@b+1
 26312  018E8A  C13F  F12B         	movff	___flsub@b+2,___fladd@b+2
 26313  018E8E  C140  F12C         	movff	___flsub@b+3,___fladd@b+3
 26314  018E92  C141  F12D         	movff	___flsub@a,___fladd@a
 26315  018E96  C142  F12E         	movff	___flsub@a+1,___fladd@a+1
 26316  018E9A  C143  F12F         	movff	___flsub@a+2,___fladd@a+2
 26317  018E9E  C144  F130         	movff	___flsub@a+3,___fladd@a+3
 26318  018EA2  ECDC  F0A6         	call	___fladd	;wreg free
 26319  018EA6  C129  F13D         	movff	?___fladd,?___flsub
 26320  018EAA  C12A  F13E         	movff	?___fladd+1,?___flsub+1
 26321  018EAE  C12B  F13F         	movff	?___fladd+2,?___flsub+2
 26322  018EB2  C12C  F140         	movff	?___fladd+3,?___flsub+3
 26323  018EB6  0012               	return	
 26324  018EB8                     __end_of___flsub:
 26325                           	opt stack 0
 26326                           tblptru	equ	0xFF8
 26327                           tblptrh	equ	0xFF7
 26328                           tblptrl	equ	0xFF6
 26329                           tablat	equ	0xFF5
 26330                           prodh	equ	0xFF4
 26331                           prodl	equ	0xFF3
 26332                           intcon	equ	0xFF2
 26333                           indf0	equ	0xFEF
 26334                           postinc0	equ	0xFEE
 26335                           fsr0h	equ	0xFEA
 26336                           fsr0l	equ	0xFE9
 26337                           wreg	equ	0xFE8
 26338                           indf1	equ	0xFE7
 26339                           postdec1	equ	0xFE5
 26340                           plusw1	equ	0xFE3
 26341                           fsr1h	equ	0xFE2
 26342                           fsr1l	equ	0xFE1
 26343                           indf2	equ	0xFDF
 26344                           postinc2	equ	0xFDE
 26345                           postdec2	equ	0xFDD
 26346                           plusw2	equ	0xFDB
 26347                           fsr2h	equ	0xFDA
 26348                           fsr2l	equ	0xFD9
 26349                           status	equ	0xFD8
 26350                           
 26351 ;; *************** function ___fladd *****************
 26352 ;; Defined at:
 26353 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 26354 ;; Parameters:    Size  Location     Type
 26355 ;;  b               4   41[BANK1 ] long 
 26356 ;;  a               4   45[BANK1 ] long 
 26357 ;; Auto vars:     Size  Location     Type
 26358 ;;  grs             1   60[BANK1 ] unsigned char 
 26359 ;;  bexp            1   59[BANK1 ] unsigned char 
 26360 ;;  aexp            1   58[BANK1 ] unsigned char 
 26361 ;;  signs           1   57[BANK1 ] unsigned char 
 26362 ;; Return value:  Size  Location     Type
 26363 ;;                  4   41[BANK1 ] unsigned char 
 26364 ;; Registers used:
 26365 ;;		wreg, status,2, status,0
 26366 ;; Tracked objects:
 26367 ;;		On entry : 0/0
 26368 ;;		On exit  : 0/0
 26369 ;;		Unchanged: 0/0
 26370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26371 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26372 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26373 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26374 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26375 ;;Total ram usage:       20 bytes
 26376 ;; Hardware stack levels used:    1
 26377 ;; Hardware stack levels required when called:   13
 26378 ;; This function calls:
 26379 ;;		Nothing
 26380 ;; This function is called by:
 26381 ;;		_ringBufferLUT
 26382 ;;		_printf
 26383 ;;		___flsub
 26384 ;; This function uses a non-reentrant model
 26385 ;;
 26386                           
 26387                           	psect	text46
 26388  014DB8                     __ptext46:
 26389                           	opt stack 0
 26390  014DB8                     ___fladd:
 26391                           	opt stack 13
 26392                           
 26393                           ;incstack = 0
 26394  014DB8  0101               	movlb	1	; () banked
 26395  014DBA  512C               	movf	(___fladd@b+3)& (0+255),w,b
 26396  014DBC  0B80               	andlw	128
 26397  014DBE  6F39               	movwf	___fladd@signs& (0+255),b
 26398  014DC0  512C               	movf	(___fladd@b+3)& (0+255),w,b
 26399  014DC2  252C               	addwf	(___fladd@b+3)& (0+255),w,b
 26400  014DC4  6F3B               	movwf	___fladd@bexp& (0+255),b
 26401                           
 26402                           ; BSR set to: 1
 26403  014DC6  BF2B               	btfsc	(___fladd@b+2)& (0+255),7,b
 26404                           
 26405                           ; BSR set to: 1
 26406  014DC8  813B               	bsf	___fladd@bexp& (0+255),0,b
 26407                           
 26408                           ; BSR set to: 1
 26409                           
 26410                           ; BSR set to: 1
 26411  014DCA  513B               	movf	___fladd@bexp& (0+255),w,b
 26412  014DCC  B4D8               	btfsc	status,2,c
 26413  014DCE  D00D               	goto	l2235
 26414                           
 26415                           ; BSR set to: 1
 26416  014DD0  293B               	incf	___fladd@bexp& (0+255),w,b
 26417  014DD2  A4D8               	btfss	status,2,c
 26418  014DD4  D008               	goto	l2236
 26419                           
 26420                           ; BSR set to: 1
 26421  014DD6  0E00               	movlw	0
 26422  014DD8  6F29               	movwf	___fladd@b& (0+255),b
 26423  014DDA  0E00               	movlw	0
 26424  014DDC  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26425  014DDE  0E00               	movlw	0
 26426  014DE0  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26427  014DE2  0E00               	movlw	0
 26428  014DE4  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26429  014DE6                     l2236:
 26430                           
 26431                           ; BSR set to: 1
 26432                           
 26433                           ; BSR set to: 1
 26434  014DE6  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 26435  014DE8  D006               	goto	L5
 26436  014DEA                     l2235:
 26437                           
 26438                           ; BSR set to: 1
 26439                           
 26440                           ; BSR set to: 1
 26441  014DEA  0E00               	movlw	0
 26442  014DEC  6F29               	movwf	___fladd@b& (0+255),b
 26443  014DEE  0E00               	movlw	0
 26444  014DF0  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26445  014DF2  0E00               	movlw	0
 26446  014DF4  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26447  014DF6                     L5:
 26448  014DF6  0E00               	movlw	0
 26449  014DF8  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26450                           
 26451                           ; BSR set to: 1
 26452                           
 26453                           ; BSR set to: 1
 26454  014DFA  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26455  014DFC  0B80               	andlw	128
 26456  014DFE  6F3A               	movwf	___fladd@aexp& (0+255),b
 26457                           
 26458                           ; BSR set to: 1
 26459  014E00  5139               	movf	___fladd@signs& (0+255),w,b
 26460  014E02  193A               	xorwf	___fladd@aexp& (0+255),w,b
 26461  014E04  A4D8               	btfss	status,2,c
 26462                           
 26463                           ; BSR set to: 1
 26464  014E06  8D39               	bsf	___fladd@signs& (0+255),6,b
 26465                           
 26466                           ; BSR set to: 1
 26467                           
 26468                           ; BSR set to: 1
 26469  014E08  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26470  014E0A  2530               	addwf	(___fladd@a+3)& (0+255),w,b
 26471  014E0C  6F3A               	movwf	___fladd@aexp& (0+255),b
 26472                           
 26473                           ; BSR set to: 1
 26474  014E0E  BF2F               	btfsc	(___fladd@a+2)& (0+255),7,b
 26475                           
 26476                           ; BSR set to: 1
 26477  014E10  813A               	bsf	___fladd@aexp& (0+255),0,b
 26478                           
 26479                           ; BSR set to: 1
 26480                           
 26481                           ; BSR set to: 1
 26482  014E12  513A               	movf	___fladd@aexp& (0+255),w,b
 26483  014E14  B4D8               	btfsc	status,2,c
 26484  014E16  D00D               	goto	l2240
 26485                           
 26486                           ; BSR set to: 1
 26487  014E18  293A               	incf	___fladd@aexp& (0+255),w,b
 26488  014E1A  A4D8               	btfss	status,2,c
 26489  014E1C  D008               	goto	l2241
 26490                           
 26491                           ; BSR set to: 1
 26492  014E1E  0E00               	movlw	0
 26493  014E20  6F2D               	movwf	___fladd@a& (0+255),b
 26494  014E22  0E00               	movlw	0
 26495  014E24  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 26496  014E26  0E00               	movlw	0
 26497  014E28  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 26498  014E2A  0E00               	movlw	0
 26499  014E2C  6F30               	movwf	(___fladd@a+3)& (0+255),b
 26500  014E2E                     l2241:
 26501                           
 26502                           ; BSR set to: 1
 26503                           
 26504                           ; BSR set to: 1
 26505  014E2E  8F2F               	bsf	(___fladd@a+2)& (0+255),7,b
 26506  014E30  D006               	goto	L6
 26507  014E32                     l2240:
 26508                           
 26509                           ; BSR set to: 1
 26510                           
 26511                           ; BSR set to: 1
 26512  014E32  0E00               	movlw	0
 26513  014E34  6F2D               	movwf	___fladd@a& (0+255),b
 26514  014E36  0E00               	movlw	0
 26515  014E38  6F2E               	movwf	(___fladd@a+1)& (0+255),b
 26516  014E3A  0E00               	movlw	0
 26517  014E3C  6F2F               	movwf	(___fladd@a+2)& (0+255),b
 26518  014E3E                     L6:
 26519  014E3E  0E00               	movlw	0
 26520  014E40  6F30               	movwf	(___fladd@a+3)& (0+255),b
 26521                           
 26522                           ; BSR set to: 1
 26523                           
 26524                           ; BSR set to: 1
 26525  014E42  513B               	movf	___fladd@bexp& (0+255),w,b
 26526  014E44  5D3A               	subwf	___fladd@aexp& (0+255),w,b
 26527  014E46  B0D8               	btfsc	status,0,c
 26528  014E48  D022               	goto	l2243
 26529                           
 26530                           ; BSR set to: 1
 26531  014E4A  AD39               	btfss	___fladd@signs& (0+255),6,b
 26532  014E4C  D002               	goto	l2244
 26533                           
 26534                           ; BSR set to: 1
 26535  014E4E  0E80               	movlw	128
 26536  014E50  1B39               	xorwf	___fladd@signs& (0+255),f,b
 26537  014E52                     l2244:
 26538                           
 26539                           ; BSR set to: 1
 26540                           
 26541                           ; BSR set to: 1
 26542  014E52  C13B  F13C         	movff	___fladd@bexp,___fladd@grs
 26543                           
 26544                           ; BSR set to: 1
 26545  014E56  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 26546                           
 26547                           ; BSR set to: 1
 26548  014E5A  C13C  F13A         	movff	___fladd@grs,___fladd@aexp
 26549                           
 26550                           ; BSR set to: 1
 26551  014E5E  C129  F13C         	movff	___fladd@b,___fladd@grs
 26552                           
 26553                           ; BSR set to: 1
 26554  014E62  C12D  F129         	movff	___fladd@a,___fladd@b
 26555                           
 26556                           ; BSR set to: 1
 26557  014E66  C13C  F12D         	movff	___fladd@grs,___fladd@a
 26558                           
 26559                           ; BSR set to: 1
 26560  014E6A  C12A  F13C         	movff	___fladd@b+1,___fladd@grs
 26561                           
 26562                           ; BSR set to: 1
 26563  014E6E  C12E  F12A         	movff	___fladd@a+1,___fladd@b+1
 26564                           
 26565                           ; BSR set to: 1
 26566  014E72  C13C  F12E         	movff	___fladd@grs,___fladd@a+1
 26567                           
 26568                           ; BSR set to: 1
 26569  014E76  C12B  F13C         	movff	___fladd@b+2,___fladd@grs
 26570                           
 26571                           ; BSR set to: 1
 26572  014E7A  C12F  F12B         	movff	___fladd@a+2,___fladd@b+2
 26573                           
 26574                           ; BSR set to: 1
 26575  014E7E  C13C  F12F         	movff	___fladd@grs,___fladd@a+2
 26576                           
 26577                           ; BSR set to: 1
 26578  014E82  C12C  F13C         	movff	___fladd@b+3,___fladd@grs
 26579                           
 26580                           ; BSR set to: 1
 26581  014E86  C130  F12C         	movff	___fladd@a+3,___fladd@b+3
 26582                           
 26583                           ; BSR set to: 1
 26584  014E8A  C13C  F130         	movff	___fladd@grs,___fladd@a+3
 26585  014E8E                     l2243:
 26586                           
 26587                           ; BSR set to: 1
 26588                           
 26589                           ; BSR set to: 1
 26590  014E8E  0E00               	movlw	0
 26591  014E90  6F3C               	movwf	___fladd@grs& (0+255),b
 26592                           
 26593                           ; BSR set to: 1
 26594  014E92  513B               	movf	___fladd@bexp& (0+255),w,b
 26595  014E94  6F31               	movwf	??___fladd& (0+255),b
 26596  014E96  6B32               	clrf	(??___fladd+1)& (0+255),b
 26597  014E98  1F31               	comf	??___fladd& (0+255),f,b
 26598  014E9A  1F32               	comf	(??___fladd+1)& (0+255),f,b
 26599  014E9C  4B31               	infsnz	??___fladd& (0+255),f,b
 26600  014E9E  2B32               	incf	(??___fladd+1)& (0+255),f,b
 26601  014EA0  513A               	movf	___fladd@aexp& (0+255),w,b
 26602  014EA2  6F33               	movwf	(??___fladd+2)& (0+255),b
 26603  014EA4  6B34               	clrf	(??___fladd+3)& (0+255),b
 26604  014EA6  5131               	movf	??___fladd& (0+255),w,b
 26605  014EA8  2733               	addwf	(??___fladd+2)& (0+255),f,b
 26606  014EAA  5132               	movf	(??___fladd+1)& (0+255),w,b
 26607  014EAC  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 26608  014EAE  BF34               	btfsc	(??___fladd+3)& (0+255),7,b
 26609  014EB0  D02C               	goto	l2247
 26610  014EB2  5134               	movf	(??___fladd+3)& (0+255),w,b
 26611  014EB4  E104               	bnz	u23940
 26612  014EB6  0E1A               	movlw	26
 26613  014EB8  5D33               	subwf	(??___fladd+2)& (0+255),w,b
 26614  014EBA  A0D8               	btfss	status,0,c
 26615  014EBC  D026               	goto	l2247
 26616  014EBE                     u23940:
 26617                           
 26618                           ; BSR set to: 1
 26619  014EBE  5129               	movf	___fladd@b& (0+255),w,b
 26620  014EC0  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 26621  014EC2  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 26622  014EC4  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 26623  014EC6  B4D8               	btfsc	status,2,c
 26624  014EC8  D002               	goto	u23950
 26625  014ECA  0E01               	movlw	1
 26626  014ECC  D001               	goto	u23960
 26627  014ECE                     u23950:
 26628  014ECE  0E00               	movlw	0
 26629  014ED0                     u23960:
 26630  014ED0  6F3C               	movwf	___fladd@grs& (0+255),b
 26631                           
 26632                           ; BSR set to: 1
 26633  014ED2  0E00               	movlw	0
 26634  014ED4  6F29               	movwf	___fladd@b& (0+255),b
 26635  014ED6  0E00               	movlw	0
 26636  014ED8  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26637  014EDA  0E00               	movlw	0
 26638  014EDC  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26639  014EDE  0E00               	movlw	0
 26640  014EE0  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26641                           
 26642                           ; BSR set to: 1
 26643  014EE2  C13A  F13B         	movff	___fladd@aexp,___fladd@bexp
 26644  014EE6  D015               	goto	u23990
 26645  014EE8                     l2248:
 26646                           
 26647                           ; BSR set to: 1
 26648  014EE8  A13C               	btfss	___fladd@grs& (0+255),0,b
 26649  014EEA  D005               	goto	l2249
 26650                           
 26651                           ; BSR set to: 1
 26652  014EEC  90D8               	bcf	status,0,c
 26653  014EEE  313C               	rrcf	___fladd@grs& (0+255),w,b
 26654  014EF0  0901               	iorlw	1
 26655  014EF2  6F3C               	movwf	___fladd@grs& (0+255),b
 26656  014EF4  D002               	goto	l2250
 26657  014EF6                     l2249:
 26658                           
 26659                           ; BSR set to: 1
 26660                           
 26661                           ; BSR set to: 1
 26662  014EF6  90D8               	bcf	status,0,c
 26663  014EF8  333C               	rrcf	___fladd@grs& (0+255),f,b
 26664  014EFA                     l2250:
 26665                           
 26666                           ; BSR set to: 1
 26667                           
 26668                           ; BSR set to: 1
 26669  014EFA  B129               	btfsc	___fladd@b& (0+255),0,b
 26670                           
 26671                           ; BSR set to: 1
 26672  014EFC  8F3C               	bsf	___fladd@grs& (0+255),7,b
 26673                           
 26674                           ; BSR set to: 1
 26675                           
 26676                           ; BSR set to: 1
 26677  014EFE  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 26678  014F00  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 26679  014F02  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 26680  014F04  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 26681  014F06  3329               	rrcf	___fladd@b& (0+255),f,b
 26682                           
 26683                           ; BSR set to: 1
 26684  014F08  2B3B               	incf	___fladd@bexp& (0+255),f,b
 26685  014F0A                     l2247:
 26686                           
 26687                           ; BSR set to: 1
 26688  014F0A  513A               	movf	___fladd@aexp& (0+255),w,b
 26689  014F0C  5D3B               	subwf	___fladd@bexp& (0+255),w,b
 26690  014F0E  A0D8               	btfss	status,0,c
 26691  014F10  D7EB               	goto	l2248
 26692  014F12                     u23990:
 26693                           
 26694                           ; BSR set to: 1
 26695                           
 26696                           ; BSR set to: 1
 26697  014F12  BD39               	btfsc	___fladd@signs& (0+255),6,b
 26698  014F14  D029               	goto	l2253
 26699                           
 26700                           ; BSR set to: 1
 26701  014F16  513B               	movf	___fladd@bexp& (0+255),w,b
 26702  014F18  A4D8               	btfss	status,2,c
 26703  014F1A  D009               	goto	l2254
 26704                           
 26705                           ; BSR set to: 1
 26706  014F1C  0E00               	movlw	0
 26707  014F1E  6F29               	movwf	?___fladd& (0+255),b
 26708  014F20  0E00               	movlw	0
 26709  014F22  6F2A               	movwf	(?___fladd+1)& (0+255),b
 26710  014F24  0E00               	movlw	0
 26711  014F26  6F2B               	movwf	(?___fladd+2)& (0+255),b
 26712  014F28  0E00               	movlw	0
 26713  014F2A  6F2C               	movwf	(?___fladd+3)& (0+255),b
 26714                           
 26715                           ; BSR set to: 1
 26716  014F2C  0012               	return	
 26717  014F2E                     l2254:
 26718                           
 26719                           ; BSR set to: 1
 26720                           
 26721                           ; BSR set to: 1
 26722  014F2E  512D               	movf	___fladd@a& (0+255),w,b
 26723  014F30  2729               	addwf	___fladd@b& (0+255),f,b
 26724  014F32  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26725  014F34  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 26726  014F36  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26727  014F38  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 26728  014F3A  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26729  014F3C  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 26730                           
 26731                           ; BSR set to: 1
 26732  014F3E  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 26733  014F40  D083               	goto	u24120
 26734                           
 26735                           ; BSR set to: 1
 26736  014F42  A13C               	btfss	___fladd@grs& (0+255),0,b
 26737  014F44  D006               	goto	l2257
 26738                           
 26739                           ; BSR set to: 1
 26740  014F46  90D8               	bcf	status,0,c
 26741  014F48  333C               	rrcf	___fladd@grs& (0+255),f,b
 26742  014F4A  513C               	movf	___fladd@grs& (0+255),w,b
 26743  014F4C  0901               	iorlw	1
 26744  014F4E  6F3C               	movwf	___fladd@grs& (0+255),b
 26745  014F50  D002               	goto	l2258
 26746  014F52                     l2257:
 26747                           
 26748                           ; BSR set to: 1
 26749                           
 26750                           ; BSR set to: 1
 26751  014F52  90D8               	bcf	status,0,c
 26752  014F54  333C               	rrcf	___fladd@grs& (0+255),f,b
 26753  014F56                     l2258:
 26754                           
 26755                           ; BSR set to: 1
 26756                           
 26757                           ; BSR set to: 1
 26758  014F56  B129               	btfsc	___fladd@b& (0+255),0,b
 26759                           
 26760                           ; BSR set to: 1
 26761  014F58  8F3C               	bsf	___fladd@grs& (0+255),7,b
 26762                           
 26763                           ; BSR set to: 1
 26764                           
 26765                           ; BSR set to: 1
 26766  014F5A  352C               	rlcf	(___fladd@b+3)& (0+255),w,b
 26767  014F5C  332C               	rrcf	(___fladd@b+3)& (0+255),f,b
 26768  014F5E  332B               	rrcf	(___fladd@b+2)& (0+255),f,b
 26769  014F60  332A               	rrcf	(___fladd@b+1)& (0+255),f,b
 26770  014F62  3329               	rrcf	___fladd@b& (0+255),f,b
 26771                           
 26772                           ; BSR set to: 1
 26773  014F64  2B3B               	incf	___fladd@bexp& (0+255),f,b
 26774                           
 26775                           ; BSR set to: 1
 26776  014F66  D070               	goto	u24120
 26777  014F68                     l2253:
 26778                           
 26779                           ; BSR set to: 1
 26780                           
 26781                           ; BSR set to: 1
 26782  014F68  512D               	movf	___fladd@a& (0+255),w,b
 26783  014F6A  5D29               	subwf	___fladd@b& (0+255),w,b
 26784  014F6C  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26785  014F6E  592A               	subwfb	(___fladd@b+1)& (0+255),w,b
 26786  014F70  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26787  014F72  592B               	subwfb	(___fladd@b+2)& (0+255),w,b
 26788  014F74  512C               	movf	(___fladd@b+3)& (0+255),w,b
 26789  014F76  0A80               	xorlw	128
 26790  014F78  6F31               	movwf	??___fladd& (0+255),b
 26791  014F7A  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26792  014F7C  0A80               	xorlw	128
 26793  014F7E  5931               	subwfb	??___fladd& (0+255),w,b
 26794  014F80  B0D8               	btfsc	status,0,c
 26795  014F82  D036               	goto	l2261
 26796                           
 26797                           ; BSR set to: 1
 26798  014F84  C129  F131         	movff	___fladd@b,??___fladd
 26799  014F88  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 26800  014F8C  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 26801  014F90  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 26802  014F94  1F31               	comf	??___fladd& (0+255),f,b
 26803  014F96  1F32               	comf	(??___fladd+1)& (0+255),f,b
 26804  014F98  1F33               	comf	(??___fladd+2)& (0+255),f,b
 26805  014F9A  1F34               	comf	(??___fladd+3)& (0+255),f,b
 26806  014F9C  2B31               	incf	??___fladd& (0+255),f,b
 26807  014F9E  0E00               	movlw	0
 26808  014FA0  2332               	addwfc	(??___fladd+1)& (0+255),f,b
 26809  014FA2  2333               	addwfc	(??___fladd+2)& (0+255),f,b
 26810  014FA4  2334               	addwfc	(??___fladd+3)& (0+255),f,b
 26811  014FA6  512D               	movf	___fladd@a& (0+255),w,b
 26812  014FA8  2531               	addwf	??___fladd& (0+255),w,b
 26813  014FAA  6F35               	movwf	(??___fladd+4)& (0+255),b
 26814  014FAC  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26815  014FAE  2132               	addwfc	(??___fladd+1)& (0+255),w,b
 26816  014FB0  6F36               	movwf	(??___fladd+5)& (0+255),b
 26817  014FB2  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26818  014FB4  2133               	addwfc	(??___fladd+2)& (0+255),w,b
 26819  014FB6  6F37               	movwf	(??___fladd+6)& (0+255),b
 26820  014FB8  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26821  014FBA  2134               	addwfc	(??___fladd+3)& (0+255),w,b
 26822  014FBC  6F38               	movwf	(??___fladd+7)& (0+255),b
 26823  014FBE  0EFF               	movlw	255
 26824  014FC0  2535               	addwf	(??___fladd+4)& (0+255),w,b
 26825  014FC2  6F29               	movwf	___fladd@b& (0+255),b
 26826  014FC4  0EFF               	movlw	255
 26827  014FC6  2136               	addwfc	(??___fladd+5)& (0+255),w,b
 26828  014FC8  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 26829  014FCA  0EFF               	movlw	255
 26830  014FCC  2137               	addwfc	(??___fladd+6)& (0+255),w,b
 26831  014FCE  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 26832  014FD0  0EFF               	movlw	255
 26833  014FD2  2138               	addwfc	(??___fladd+7)& (0+255),w,b
 26834  014FD4  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 26835  014FD6  0E80               	movlw	128
 26836  014FD8  1B39               	xorwf	___fladd@signs& (0+255),f,b
 26837                           
 26838                           ; BSR set to: 1
 26839  014FDA  6D3C               	negf	___fladd@grs& (0+255),b
 26840                           
 26841                           ; BSR set to: 1
 26842  014FDC  513C               	movf	___fladd@grs& (0+255),w,b
 26843  014FDE  A4D8               	btfss	status,2,c
 26844  014FE0  D00F               	goto	l2263
 26845                           
 26846                           ; BSR set to: 1
 26847  014FE2  0E01               	movlw	1
 26848  014FE4  2729               	addwf	___fladd@b& (0+255),f,b
 26849  014FE6  0E00               	movlw	0
 26850  014FE8  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 26851  014FEA  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 26852  014FEC  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 26853                           
 26854                           ; BSR set to: 1
 26855  014FEE  D008               	goto	l2263
 26856  014FF0                     l2261:
 26857                           
 26858                           ; BSR set to: 1
 26859                           
 26860                           ; BSR set to: 1
 26861  014FF0  512D               	movf	___fladd@a& (0+255),w,b
 26862  014FF2  5F29               	subwf	___fladd@b& (0+255),f,b
 26863  014FF4  512E               	movf	(___fladd@a+1)& (0+255),w,b
 26864  014FF6  5B2A               	subwfb	(___fladd@b+1)& (0+255),f,b
 26865  014FF8  512F               	movf	(___fladd@a+2)& (0+255),w,b
 26866  014FFA  5B2B               	subwfb	(___fladd@b+2)& (0+255),f,b
 26867  014FFC  5130               	movf	(___fladd@a+3)& (0+255),w,b
 26868  014FFE  5B2C               	subwfb	(___fladd@b+3)& (0+255),f,b
 26869  015000                     l2263:
 26870                           
 26871                           ; BSR set to: 1
 26872  015000  5129               	movf	___fladd@b& (0+255),w,b
 26873  015002  112A               	iorwf	(___fladd@b+1)& (0+255),w,b
 26874  015004  112B               	iorwf	(___fladd@b+2)& (0+255),w,b
 26875  015006  112C               	iorwf	(___fladd@b+3)& (0+255),w,b
 26876  015008  A4D8               	btfss	status,2,c
 26877  01500A  D01C               	goto	l2270
 26878                           
 26879                           ; BSR set to: 1
 26880  01500C  513C               	movf	___fladd@grs& (0+255),w,b
 26881  01500E  A4D8               	btfss	status,2,c
 26882  015010  D019               	goto	l2270
 26883                           
 26884                           ; BSR set to: 1
 26885  015012  0E00               	movlw	0
 26886  015014  6F29               	movwf	?___fladd& (0+255),b
 26887  015016  0E00               	movlw	0
 26888  015018  6F2A               	movwf	(?___fladd+1)& (0+255),b
 26889  01501A  0E00               	movlw	0
 26890  01501C  6F2B               	movwf	(?___fladd+2)& (0+255),b
 26891  01501E  0E00               	movlw	0
 26892  015020  6F2C               	movwf	(?___fladd+3)& (0+255),b
 26893                           
 26894                           ; BSR set to: 1
 26895  015022  0012               	return	
 26896  015024                     
 26897                           ; BSR set to: 1
 26898                           
 26899                           ; BSR set to: 1
 26900  015024  90D8               	bcf	status,0,c
 26901  015026  3729               	rlcf	___fladd@b& (0+255),f,b
 26902  015028  372A               	rlcf	(___fladd@b+1)& (0+255),f,b
 26903  01502A  372B               	rlcf	(___fladd@b+2)& (0+255),f,b
 26904  01502C  372C               	rlcf	(___fladd@b+3)& (0+255),f,b
 26905                           
 26906                           ; BSR set to: 1
 26907  01502E  BF3C               	btfsc	___fladd@grs& (0+255),7,b
 26908                           
 26909                           ; BSR set to: 1
 26910  015030  8129               	bsf	___fladd@b& (0+255),0,b
 26911                           
 26912                           ; BSR set to: 1
 26913                           
 26914                           ; BSR set to: 1
 26915  015032  A13C               	btfss	___fladd@grs& (0+255),0,b
 26916  015034  D002               	goto	l2268
 26917                           
 26918                           ; BSR set to: 1
 26919  015036  80D8               	bsf	status,0,c
 26920  015038  D001               	goto	L7
 26921  01503A                     l2268:
 26922                           
 26923                           ; BSR set to: 1
 26924                           
 26925                           ; BSR set to: 1
 26926  01503A  90D8               	bcf	status,0,c
 26927  01503C                     L7:
 26928  01503C  373C               	rlcf	___fladd@grs& (0+255),f,b
 26929                           
 26930                           ; BSR set to: 1
 26931                           
 26932                           ; BSR set to: 1
 26933  01503E  513B               	movf	___fladd@bexp& (0+255),w,b
 26934  015040  A4D8               	btfss	status,2,c
 26935                           
 26936                           ; BSR set to: 1
 26937  015042  073B               	decf	___fladd@bexp& (0+255),f,b
 26938  015044                     l2270:
 26939                           
 26940                           ; BSR set to: 1
 26941                           
 26942                           ; BSR set to: 1
 26943                           
 26944                           ; BSR set to: 1
 26945  015044  AF2B               	btfss	(___fladd@b+2)& (0+255),7,b
 26946  015046  D7EE               	goto	l2266
 26947  015048                     u24120:
 26948                           
 26949                           ; BSR set to: 1
 26950                           
 26951                           ; BSR set to: 1
 26952                           
 26953                           ; BSR set to: 1
 26954  015048  0E00               	movlw	0
 26955  01504A  6F3A               	movwf	___fladd@aexp& (0+255),b
 26956                           
 26957                           ; BSR set to: 1
 26958  01504C  AF3C               	btfss	___fladd@grs& (0+255),7,b
 26959  01504E  D00A               	goto	l2275
 26960                           
 26961                           ; BSR set to: 1
 26962  015050  C13C  F131         	movff	___fladd@grs,??___fladd
 26963  015054  0E7F               	movlw	127
 26964  015056  1731               	andwf	??___fladd& (0+255),f,b
 26965  015058  A4D8               	btfss	status,2,c
 26966  01505A  D002               	goto	u24150
 26967                           
 26968                           ; BSR set to: 1
 26969                           
 26970                           ; BSR set to: 1
 26971  01505C  A129               	btfss	___fladd@b& (0+255),0,b
 26972  01505E  D002               	goto	l2275
 26973  015060                     u24150:
 26974                           
 26975                           ; BSR set to: 1
 26976  015060  0E01               	movlw	1
 26977  015062  6F3A               	movwf	___fladd@aexp& (0+255),b
 26978  015064                     l2275:
 26979                           
 26980                           ; BSR set to: 1
 26981                           
 26982                           ; BSR set to: 1
 26983                           
 26984                           ; BSR set to: 1
 26985  015064  513A               	movf	___fladd@aexp& (0+255),w,b
 26986  015066  B4D8               	btfsc	status,2,c
 26987  015068  D020               	goto	l2278
 26988                           
 26989                           ; BSR set to: 1
 26990  01506A  0E01               	movlw	1
 26991  01506C  2729               	addwf	___fladd@b& (0+255),f,b
 26992  01506E  0E00               	movlw	0
 26993  015070  232A               	addwfc	(___fladd@b+1)& (0+255),f,b
 26994  015072  232B               	addwfc	(___fladd@b+2)& (0+255),f,b
 26995  015074  232C               	addwfc	(___fladd@b+3)& (0+255),f,b
 26996                           
 26997                           ; BSR set to: 1
 26998  015076  A12C               	btfss	(___fladd@b+3)& (0+255),0,b
 26999  015078  D018               	goto	l2278
 27000                           
 27001                           ; BSR set to: 1
 27002  01507A  C129  F131         	movff	___fladd@b,??___fladd
 27003  01507E  C12A  F132         	movff	___fladd@b+1,??___fladd+1
 27004  015082  C12B  F133         	movff	___fladd@b+2,??___fladd+2
 27005  015086  C12C  F134         	movff	___fladd@b+3,??___fladd+3
 27006  01508A  3534               	rlcf	(??___fladd+3)& (0+255),w,b
 27007  01508C  3334               	rrcf	(??___fladd+3)& (0+255),f,b
 27008  01508E  3333               	rrcf	(??___fladd+2)& (0+255),f,b
 27009  015090  3332               	rrcf	(??___fladd+1)& (0+255),f,b
 27010  015092  3331               	rrcf	??___fladd& (0+255),f,b
 27011  015094  C131  F129         	movff	??___fladd,___fladd@b
 27012  015098  C132  F12A         	movff	??___fladd+1,___fladd@b+1
 27013  01509C  C133  F12B         	movff	??___fladd+2,___fladd@b+2
 27014  0150A0  C134  F12C         	movff	??___fladd+3,___fladd@b+3
 27015  0150A4  293B               	incf	___fladd@bexp& (0+255),w,b
 27016  0150A6  A4D8               	btfss	status,2,c
 27017                           
 27018                           ; BSR set to: 1
 27019  0150A8  2B3B               	incf	___fladd@bexp& (0+255),f,b
 27020  0150AA                     l2278:
 27021                           
 27022                           ; BSR set to: 1
 27023                           
 27024                           ; BSR set to: 1
 27025                           
 27026                           ; BSR set to: 1
 27027                           
 27028                           ; BSR set to: 1
 27029  0150AA  293B               	incf	___fladd@bexp& (0+255),w,b
 27030  0150AC  B4D8               	btfsc	status,2,c
 27031  0150AE  D003               	goto	u24200
 27032                           
 27033                           ; BSR set to: 1
 27034  0150B0  513B               	movf	___fladd@bexp& (0+255),w,b
 27035  0150B2  A4D8               	btfss	status,2,c
 27036  0150B4  D00D               	goto	l2282
 27037  0150B6                     u24200:
 27038                           
 27039                           ; BSR set to: 1
 27040                           
 27041                           ; BSR set to: 1
 27042  0150B6  0E00               	movlw	0
 27043  0150B8  6F29               	movwf	___fladd@b& (0+255),b
 27044  0150BA  0E00               	movlw	0
 27045  0150BC  6F2A               	movwf	(___fladd@b+1)& (0+255),b
 27046  0150BE  0E00               	movlw	0
 27047  0150C0  6F2B               	movwf	(___fladd@b+2)& (0+255),b
 27048  0150C2  0E00               	movlw	0
 27049  0150C4  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 27050  0150C6  513B               	movf	___fladd@bexp& (0+255),w,b
 27051  0150C8  A4D8               	btfss	status,2,c
 27052  0150CA  D002               	goto	l2282
 27053                           
 27054                           ; BSR set to: 1
 27055  0150CC  0E00               	movlw	0
 27056  0150CE  6F39               	movwf	___fladd@signs& (0+255),b
 27057  0150D0                     l2282:
 27058                           
 27059                           ; BSR set to: 1
 27060                           
 27061                           ; BSR set to: 1
 27062                           
 27063                           ; BSR set to: 1
 27064  0150D0  A13B               	btfss	___fladd@bexp& (0+255),0,b
 27065  0150D2  D002               	goto	l2283
 27066                           
 27067                           ; BSR set to: 1
 27068  0150D4  8F2B               	bsf	(___fladd@b+2)& (0+255),7,b
 27069  0150D6  D001               	goto	l2284
 27070  0150D8                     l2283:
 27071                           
 27072                           ; BSR set to: 1
 27073                           
 27074                           ; BSR set to: 1
 27075  0150D8  9F2B               	bcf	(___fladd@b+2)& (0+255),7,b
 27076  0150DA                     l2284:
 27077                           
 27078                           ; BSR set to: 1
 27079                           
 27080                           ; BSR set to: 1
 27081  0150DA  90D8               	bcf	status,0,c
 27082  0150DC  313B               	rrcf	___fladd@bexp& (0+255),w,b
 27083  0150DE  6F2C               	movwf	(___fladd@b+3)& (0+255),b
 27084                           
 27085                           ; BSR set to: 1
 27086  0150E0  BF39               	btfsc	___fladd@signs& (0+255),7,b
 27087                           
 27088                           ; BSR set to: 1
 27089  0150E2  8F2C               	bsf	(___fladd@b+3)& (0+255),7,b
 27090                           
 27091                           ; BSR set to: 1
 27092                           
 27093                           ; BSR set to: 1
 27094  0150E4  C129  F129         	movff	___fladd@b,?___fladd
 27095  0150E8  C12A  F12A         	movff	___fladd@b+1,?___fladd+1
 27096  0150EC  C12B  F12B         	movff	___fladd@b+2,?___fladd+2
 27097  0150F0  C12C  F12C         	movff	___fladd@b+3,?___fladd+3
 27098  0150F4  0012               	return	
 27099  0150F6                     __end_of___fladd:
 27100                           	opt stack 0
 27101                           tblptru	equ	0xFF8
 27102                           tblptrh	equ	0xFF7
 27103                           tblptrl	equ	0xFF6
 27104                           tablat	equ	0xFF5
 27105                           prodh	equ	0xFF4
 27106                           prodl	equ	0xFF3
 27107                           intcon	equ	0xFF2
 27108                           indf0	equ	0xFEF
 27109                           postinc0	equ	0xFEE
 27110                           fsr0h	equ	0xFEA
 27111                           fsr0l	equ	0xFE9
 27112                           wreg	equ	0xFE8
 27113                           indf1	equ	0xFE7
 27114                           postdec1	equ	0xFE5
 27115                           plusw1	equ	0xFE3
 27116                           fsr1h	equ	0xFE2
 27117                           fsr1l	equ	0xFE1
 27118                           indf2	equ	0xFDF
 27119                           postinc2	equ	0xFDE
 27120                           postdec2	equ	0xFDD
 27121                           plusw2	equ	0xFDB
 27122                           fsr2h	equ	0xFDA
 27123                           fsr2l	equ	0xFD9
 27124                           status	equ	0xFD8
 27125                           
 27126 ;; *************** function ___flneg *****************
 27127 ;; Defined at:
 27128 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 27129 ;; Parameters:    Size  Location     Type
 27130 ;;  f1              4   37[BANK1 ] unsigned char 
 27131 ;; Auto vars:     Size  Location     Type
 27132 ;;		None
 27133 ;; Return value:  Size  Location     Type
 27134 ;;                  4   37[BANK1 ] unsigned char 
 27135 ;; Registers used:
 27136 ;;		wreg, status,2, status,0
 27137 ;; Tracked objects:
 27138 ;;		On entry : 0/0
 27139 ;;		On exit  : 0/0
 27140 ;;		Unchanged: 0/0
 27141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27142 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27145 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27146 ;;Total ram usage:        4 bytes
 27147 ;; Hardware stack levels used:    1
 27148 ;; Hardware stack levels required when called:   13
 27149 ;; This function calls:
 27150 ;;		Nothing
 27151 ;; This function is called by:
 27152 ;;		_ringBufferLUT
 27153 ;;		_printf
 27154 ;; This function uses a non-reentrant model
 27155 ;;
 27156                           
 27157                           	psect	text47
 27158  019288                     __ptext47:
 27159                           	opt stack 0
 27160  019288                     ___flneg:
 27161                           	opt stack 14
 27162                           
 27163                           ; BSR set to: 1
 27164                           ;incstack = 0
 27165  019288  0101               	movlb	1	; () banked
 27166  01928A  5125               	movf	___flneg@f1& (0+255),w,b
 27167  01928C  1126               	iorwf	(___flneg@f1+1)& (0+255),w,b
 27168  01928E  1127               	iorwf	(___flneg@f1+2)& (0+255),w,b
 27169  019290  1128               	iorwf	(___flneg@f1+3)& (0+255),w,b
 27170  019292  B4D8               	btfsc	status,2,c
 27171  019294  D008               	goto	l1972
 27172                           
 27173                           ; BSR set to: 1
 27174  019296  0E00               	movlw	0
 27175  019298  1B25               	xorwf	___flneg@f1& (0+255),f,b
 27176  01929A  0E00               	movlw	0
 27177  01929C  1B26               	xorwf	(___flneg@f1+1)& (0+255),f,b
 27178  01929E  0E00               	movlw	0
 27179  0192A0  1B27               	xorwf	(___flneg@f1+2)& (0+255),f,b
 27180  0192A2  0E80               	movlw	128
 27181  0192A4  1B28               	xorwf	(___flneg@f1+3)& (0+255),f,b
 27182  0192A6                     l1972:
 27183                           
 27184                           ; BSR set to: 1
 27185                           
 27186                           ; BSR set to: 1
 27187  0192A6  C125  F125         	movff	___flneg@f1,?___flneg
 27188  0192AA  C126  F126         	movff	___flneg@f1+1,?___flneg+1
 27189  0192AE  C127  F127         	movff	___flneg@f1+2,?___flneg+2
 27190  0192B2  C128  F128         	movff	___flneg@f1+3,?___flneg+3
 27191  0192B6  0012               	return	
 27192  0192B8                     __end_of___flneg:
 27193                           	opt stack 0
 27194                           tblptru	equ	0xFF8
 27195                           tblptrh	equ	0xFF7
 27196                           tblptrl	equ	0xFF6
 27197                           tablat	equ	0xFF5
 27198                           prodh	equ	0xFF4
 27199                           prodl	equ	0xFF3
 27200                           intcon	equ	0xFF2
 27201                           indf0	equ	0xFEF
 27202                           postinc0	equ	0xFEE
 27203                           fsr0h	equ	0xFEA
 27204                           fsr0l	equ	0xFE9
 27205                           wreg	equ	0xFE8
 27206                           indf1	equ	0xFE7
 27207                           postdec1	equ	0xFE5
 27208                           plusw1	equ	0xFE3
 27209                           fsr1h	equ	0xFE2
 27210                           fsr1l	equ	0xFE1
 27211                           indf2	equ	0xFDF
 27212                           postinc2	equ	0xFDE
 27213                           postdec2	equ	0xFDD
 27214                           plusw2	equ	0xFDB
 27215                           fsr2h	equ	0xFDA
 27216                           fsr2l	equ	0xFD9
 27217                           status	equ	0xFD8
 27218                           
 27219 ;; *************** function _saveSRAMMaxToEEPROM *****************
 27220 ;; Defined at:
 27221 ;;		line 155 in file "main.c"
 27222 ;; Parameters:    Size  Location     Type
 27223 ;;		None
 27224 ;; Auto vars:     Size  Location     Type
 27225 ;;		None
 27226 ;; Return value:  Size  Location     Type
 27227 ;;                  1    wreg      void 
 27228 ;; Registers used:
 27229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27230 ;; Tracked objects:
 27231 ;;		On entry : 0/0
 27232 ;;		On exit  : 0/0
 27233 ;;		Unchanged: 0/0
 27234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27239 ;;Total ram usage:        0 bytes
 27240 ;; Hardware stack levels used:    1
 27241 ;; Hardware stack levels required when called:   15
 27242 ;; This function calls:
 27243 ;;		___flge
 27244 ;;		_writeDoubleToEEPROM
 27245 ;; This function is called by:
 27246 ;;		_main
 27247 ;; This function uses a non-reentrant model
 27248 ;;
 27249                           
 27250                           	psect	text48
 27251  0167D8                     __ptext48:
 27252                           	opt stack 0
 27253  0167D8                     _saveSRAMMaxToEEPROM:
 27254                           	opt stack 15
 27255                           
 27256                           ;main.c: 159: if (Irms > max_Irms) {
 27257                           
 27258                           ; BSR set to: 1
 27259                           ;incstack = 0
 27260  0167D8  C214  F117         	movff	_max_Irms,___flge@ff1	;volatile
 27261  0167DC  C215  F118         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 27262  0167E0  C216  F119         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 27263  0167E4  C217  F11A         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 27264  0167E8  C1C3  F11B         	movff	_Irms,___flge@ff2	;volatile
 27265  0167EC  C1C4  F11C         	movff	_Irms+1,___flge@ff2+1	;volatile
 27266  0167F0  C1C5  F11D         	movff	_Irms+2,___flge@ff2+2	;volatile
 27267  0167F4  C1C6  F11E         	movff	_Irms+3,___flge@ff2+3	;volatile
 27268  0167F8  EC3A  F0BC         	call	___flge	;wreg free
 27269  0167FC  0101               	movlb	1	; () banked
 27270  0167FE  B0D8               	btfsc	status,0,c
 27271  016800  D01E               	goto	l1015
 27272                           
 27273                           ; BSR set to: 1
 27274                           ;main.c: 160: writeDoubleToEEPROM(Irms, max_Irms_address);
 27275  016802  C1C3  F11B         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 27276  016806  C1C4  F11C         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 27277  01680A  C1C5  F11D         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 27278  01680E  C1C6  F11E         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 27279  016812  0EFB               	movlw	low _max_Irms_address
 27280  016814  6EF6               	movwf	tblptrl,c
 27281  016816                     	if	1	;There is more than 1 active tblptr byte
 27282  016816  0ED7               	movlw	high _max_Irms_address
 27283  016818  6EF7               	movwf	tblptrh,c
 27284  01681A                     	endif
 27285  01681A                     	if	1	;There are 3 active tblptr bytes
 27286  01681A  0E00               	movlw	low (_max_Irms_address shr (0+16))
 27287  01681C  6EF8               	movwf	tblptru,c
 27288  01681E                     	endif
 27289  01681E  0009               	tblrd		*+
 27290  016820  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27291  016824  000A               	tblrd		*-
 27292  016826  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27293  01682A  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 27294                           
 27295                           ;main.c: 161: max_Irms = Irms;
 27296  01682E  C1C3  F214         	movff	_Irms,_max_Irms	;volatile
 27297  016832  C1C4  F215         	movff	_Irms+1,_max_Irms+1	;volatile
 27298  016836  C1C5  F216         	movff	_Irms+2,_max_Irms+2	;volatile
 27299  01683A  C1C6  F217         	movff	_Irms+3,_max_Irms+3	;volatile
 27300  01683E                     l1015:
 27301                           
 27302                           ;main.c: 162: }
 27303                           ;main.c: 164: if (Avg_Power > max_Power) {
 27304  01683E  C210  F117         	movff	_max_Power,___flge@ff1	;volatile
 27305  016842  C211  F118         	movff	_max_Power+1,___flge@ff1+1	;volatile
 27306  016846  C212  F119         	movff	_max_Power+2,___flge@ff1+2	;volatile
 27307  01684A  C213  F11A         	movff	_max_Power+3,___flge@ff1+3	;volatile
 27308  01684E  C1BB  F11B         	movff	_Avg_Power,___flge@ff2	;volatile
 27309  016852  C1BC  F11C         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 27310  016856  C1BD  F11D         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 27311  01685A  C1BE  F11E         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 27312  01685E  EC3A  F0BC         	call	___flge	;wreg free
 27313  016862  0101               	movlb	1	; () banked
 27314  016864  B0D8               	btfsc	status,0,c
 27315  016866  D01E               	goto	l1016
 27316                           
 27317                           ; BSR set to: 1
 27318                           ;main.c: 165: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 27319  016868  C1BB  F11B         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 27320  01686C  C1BC  F11C         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 27321  016870  C1BD  F11D         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 27322  016874  C1BE  F11E         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 27323  016878  0EF9               	movlw	low _max_Power_address
 27324  01687A  6EF6               	movwf	tblptrl,c
 27325  01687C                     	if	1	;There is more than 1 active tblptr byte
 27326  01687C  0ED7               	movlw	high _max_Power_address
 27327  01687E  6EF7               	movwf	tblptrh,c
 27328  016880                     	endif
 27329  016880                     	if	1	;There are 3 active tblptr bytes
 27330  016880  0E00               	movlw	low (_max_Power_address shr (0+16))
 27331  016882  6EF8               	movwf	tblptru,c
 27332  016884                     	endif
 27333  016884  0009               	tblrd		*+
 27334  016886  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27335  01688A  000A               	tblrd		*-
 27336  01688C  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27337  016890  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 27338                           
 27339                           ;main.c: 166: max_Power = Avg_Power;
 27340  016894  C1BB  F210         	movff	_Avg_Power,_max_Power	;volatile
 27341  016898  C1BC  F211         	movff	_Avg_Power+1,_max_Power+1	;volatile
 27342  01689C  C1BD  F212         	movff	_Avg_Power+2,_max_Power+2	;volatile
 27343  0168A0  C1BE  F213         	movff	_Avg_Power+3,_max_Power+3	;volatile
 27344  0168A4                     l1016:
 27345                           
 27346                           ;main.c: 167: }
 27347                           ;main.c: 169: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 27348  0168A4  C20C  F117         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 27349  0168A8  C20D  F118         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 27350  0168AC  C20E  F119         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 27351  0168B0  C20F  F11A         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 27352  0168B4  C1D7  F11B         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 27353  0168B8  C1D8  F11C         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 27354  0168BC  C1D9  F11D         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 27355  0168C0  C1DA  F11E         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 27356  0168C4  EC3A  F0BC         	call	___flge	;wreg free
 27357  0168C8  0101               	movlb	1	; () banked
 27358  0168CA  B0D8               	btfsc	status,0,c
 27359  0168CC  D01E               	goto	l1017
 27360                           
 27361                           ; BSR set to: 1
 27362                           ;main.c: 170: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 27363  0168CE  C1D7  F11B         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 27364  0168D2  C1D8  F11C         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 27365  0168D6  C1D9  F11D         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 27366  0168DA  C1DA  F11E         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 27367  0168DE  0EF7               	movlw	low _max_POS3P3_ADC_Result_address
 27368  0168E0  6EF6               	movwf	tblptrl,c
 27369  0168E2                     	if	1	;There is more than 1 active tblptr byte
 27370  0168E2  0ED7               	movlw	high _max_POS3P3_ADC_Result_address
 27371  0168E4  6EF7               	movwf	tblptrh,c
 27372  0168E6                     	endif
 27373  0168E6                     	if	1	;There are 3 active tblptr bytes
 27374  0168E6  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 27375  0168E8  6EF8               	movwf	tblptru,c
 27376  0168EA                     	endif
 27377  0168EA  0009               	tblrd		*+
 27378  0168EC  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27379  0168F0  000A               	tblrd		*-
 27380  0168F2  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27381  0168F6  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 27382                           
 27383                           ;main.c: 171: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 27384  0168FA  C1D7  F20C         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 27385  0168FE  C1D8  F20D         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 27386  016902  C1D9  F20E         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 27387  016906  C1DA  F20F         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 27388  01690A                     l1017:
 27389                           
 27390                           ;main.c: 172: }
 27391                           ;main.c: 174: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 27392  01690A  C208  F117         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 27393  01690E  C209  F118         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 27394  016912  C20A  F119         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 27395  016916  C20B  F11A         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 27396  01691A  C1D3  F11B         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 27397  01691E  C1D4  F11C         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 27398  016922  C1D5  F11D         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 27399  016926  C1D6  F11E         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 27400  01692A  EC3A  F0BC         	call	___flge	;wreg free
 27401  01692E  0101               	movlb	1	; () banked
 27402  016930  B0D8               	btfsc	status,0,c
 27403  016932  D01E               	goto	l1018
 27404                           
 27405                           ; BSR set to: 1
 27406                           ;main.c: 175: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 27407  016934  C1D3  F11B         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 27408  016938  C1D4  F11C         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 27409  01693C  C1D5  F11D         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 27410  016940  C1D6  F11E         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 27411  016944  0EF5               	movlw	low _max_POS12_ADC_Result_address
 27412  016946  6EF6               	movwf	tblptrl,c
 27413  016948                     	if	1	;There is more than 1 active tblptr byte
 27414  016948  0ED7               	movlw	high _max_POS12_ADC_Result_address
 27415  01694A  6EF7               	movwf	tblptrh,c
 27416  01694C                     	endif
 27417  01694C                     	if	1	;There are 3 active tblptr bytes
 27418  01694C  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 27419  01694E  6EF8               	movwf	tblptru,c
 27420  016950                     	endif
 27421  016950  0009               	tblrd		*+
 27422  016952  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27423  016956  000A               	tblrd		*-
 27424  016958  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27425  01695C  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 27426                           
 27427                           ;main.c: 176: max_POS12_ADC_Result = POS12_ADC_Result;
 27428  016960  C1D3  F208         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 27429  016964  C1D4  F209         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 27430  016968  C1D5  F20A         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 27431  01696C  C1D6  F20B         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 27432  016970                     l1018:
 27433                           
 27434                           ;main.c: 177: }
 27435                           ;main.c: 179: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 27436  016970  C204  F117         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 27437  016974  C205  F118         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 27438  016978  C206  F119         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 27439  01697C  C207  F11A         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 27440  016980  C1CF  F11B         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 27441  016984  C1D0  F11C         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 27442  016988  C1D1  F11D         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 27443  01698C  C1D2  F11E         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 27444  016990  EC3A  F0BC         	call	___flge	;wreg free
 27445  016994  0101               	movlb	1	; () banked
 27446  016996  B0D8               	btfsc	status,0,c
 27447  016998  D01E               	goto	l1019
 27448                           
 27449                           ; BSR set to: 1
 27450                           ;main.c: 180: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 27451  01699A  C1CF  F11B         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 27452  01699E  C1D0  F11C         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 27453  0169A2  C1D1  F11D         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 27454  0169A6  C1D2  F11E         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 27455  0169AA  0EF3               	movlw	low _max_Temp_ADC_Result_address
 27456  0169AC  6EF6               	movwf	tblptrl,c
 27457  0169AE                     	if	1	;There is more than 1 active tblptr byte
 27458  0169AE  0ED7               	movlw	high _max_Temp_ADC_Result_address
 27459  0169B0  6EF7               	movwf	tblptrh,c
 27460  0169B2                     	endif
 27461  0169B2                     	if	1	;There are 3 active tblptr bytes
 27462  0169B2  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 27463  0169B4  6EF8               	movwf	tblptru,c
 27464  0169B6                     	endif
 27465  0169B6  0009               	tblrd		*+
 27466  0169B8  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27467  0169BC  000A               	tblrd		*-
 27468  0169BE  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27469  0169C2  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 27470                           
 27471                           ;main.c: 181: max_Temp_ADC_Result = Temp_ADC_Result;
 27472  0169C6  C1CF  F204         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 27473  0169CA  C1D0  F205         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 27474  0169CE  C1D1  F206         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 27475  0169D2  C1D2  F207         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 27476  0169D6                     l1019:
 27477                           
 27478                           ;main.c: 182: }
 27479                           ;main.c: 184: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 27480  0169D6  C200  F117         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 27481  0169DA  C201  F118         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 27482  0169DE  C202  F119         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 27483  0169E2  C203  F11A         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 27484  0169E6  C1E4  F11B         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 27485  0169EA  C1E5  F11C         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 27486  0169EE  C1E6  F11D         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 27487  0169F2  C1E7  F11E         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 27488  0169F6  EC3A  F0BC         	call	___flge	;wreg free
 27489  0169FA  0101               	movlb	1	; () banked
 27490  0169FC  B0D8               	btfsc	status,0,c
 27491  0169FE  0012               	return	
 27492                           
 27493                           ; BSR set to: 1
 27494                           ;main.c: 185: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 27495  016A00  C1E4  F11B         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 27496  016A04  C1E5  F11C         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 27497  016A08  C1E6  F11D         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 27498  016A0C  C1E7  F11E         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 27499  016A10  0EF1               	movlw	low _max_FVR_ADC_Result_address
 27500  016A12  6EF6               	movwf	tblptrl,c
 27501  016A14                     	if	1	;There is more than 1 active tblptr byte
 27502  016A14  0ED7               	movlw	high _max_FVR_ADC_Result_address
 27503  016A16  6EF7               	movwf	tblptrh,c
 27504  016A18                     	endif
 27505  016A18                     	if	1	;There are 3 active tblptr bytes
 27506  016A18  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 27507  016A1A  6EF8               	movwf	tblptru,c
 27508  016A1C                     	endif
 27509  016A1C  0009               	tblrd		*+
 27510  016A1E  CFF5 F11F          	movff	tablat,writeDoubleToEEPROM@starting_address
 27511  016A22  000A               	tblrd		*-
 27512  016A24  CFF5 F120          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 27513  016A28  EC2D  F0C6         	call	_writeDoubleToEEPROM	;wreg free
 27514                           
 27515                           ;main.c: 186: max_FVR_ADC_Result = FVR_ADC_Result;
 27516  016A2C  C1E4  F200         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 27517  016A30  C1E5  F201         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 27518  016A34  C1E6  F202         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 27519  016A38  C1E7  F203         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 27520  016A3C  0012               	return	
 27521  016A3E                     __end_of_saveSRAMMaxToEEPROM:
 27522                           	opt stack 0
 27523                           tblptru	equ	0xFF8
 27524                           tblptrh	equ	0xFF7
 27525                           tblptrl	equ	0xFF6
 27526                           tablat	equ	0xFF5
 27527                           prodh	equ	0xFF4
 27528                           prodl	equ	0xFF3
 27529                           intcon	equ	0xFF2
 27530                           indf0	equ	0xFEF
 27531                           postinc0	equ	0xFEE
 27532                           fsr0h	equ	0xFEA
 27533                           fsr0l	equ	0xFE9
 27534                           wreg	equ	0xFE8
 27535                           indf1	equ	0xFE7
 27536                           postdec1	equ	0xFE5
 27537                           plusw1	equ	0xFE3
 27538                           fsr1h	equ	0xFE2
 27539                           fsr1l	equ	0xFE1
 27540                           indf2	equ	0xFDF
 27541                           postinc2	equ	0xFDE
 27542                           postdec2	equ	0xFDD
 27543                           plusw2	equ	0xFDB
 27544                           fsr2h	equ	0xFDA
 27545                           fsr2l	equ	0xFD9
 27546                           status	equ	0xFD8
 27547                           
 27548 ;; *************** function _writeDoubleToEEPROM *****************
 27549 ;; Defined at:
 27550 ;;		line 6 in file "double_to_EEPROM.c"
 27551 ;; Parameters:    Size  Location     Type
 27552 ;;  input_double    4   27[BANK1 ] void 
 27553 ;;  starting_add    2   31[BANK1 ] unsigned int 
 27554 ;; Auto vars:     Size  Location     Type
 27555 ;;  byte_index      2   37[BANK1 ] int 
 27556 ;;  input_data      4   33[BANK1 ] struct .
 27557 ;; Return value:  Size  Location     Type
 27558 ;;                  1    wreg      void 
 27559 ;; Registers used:
 27560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27561 ;; Tracked objects:
 27562 ;;		On entry : 0/0
 27563 ;;		On exit  : 0/0
 27564 ;;		Unchanged: 0/0
 27565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27566 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27567 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27569 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27570 ;;Total ram usage:       12 bytes
 27571 ;; Hardware stack levels used:    1
 27572 ;; Hardware stack levels required when called:   14
 27573 ;; This function calls:
 27574 ;;		_DATAEE_WriteByte
 27575 ;; This function is called by:
 27576 ;;		_saveSRAMMaxToEEPROM
 27577 ;;		_ringBufferLUT
 27578 ;; This function uses a non-reentrant model
 27579 ;;
 27580                           
 27581                           	psect	text49
 27582  018C5A                     __ptext49:
 27583                           	opt stack 0
 27584  018C5A                     _writeDoubleToEEPROM:
 27585                           	opt stack 14
 27586                           
 27587                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 27588                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 27589                           
 27590                           ;incstack = 0
 27591  018C5A  C11B  F121         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 27592  018C5E  C11C  F122         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 27593  018C62  C11D  F123         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 27594  018C66  C11E  F124         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 27595                           
 27596                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 27597  018C6A  0E00               	movlw	0
 27598  018C6C  0101               	movlb	1	; () banked
 27599  018C6E  6F26               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 27600  018C70  0E00               	movlw	0
 27601  018C72  6F25               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 27602  018C74                     l19638:
 27603                           
 27604                           ; BSR set to: 1
 27605  018C74  5126               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 27606  018C76  E118               	bnz	l1474
 27607  018C78  0E04               	movlw	4
 27608  018C7A  5D25               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 27609  018C7C  B0D8               	btfsc	status,0,c
 27610  018C7E  0012               	return	
 27611                           
 27612                           ; BSR set to: 1
 27613                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 27614                           
 27615                           ; BSR set to: 1
 27616                           
 27617                           ; BSR set to: 1
 27618  018C80  511F               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 27619  018C82  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 27620  018C84  6F17               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 27621  018C86  5120               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 27622  018C88  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 27623  018C8A  6F18               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 27624  018C8C  0E21               	movlw	low writeDoubleToEEPROM@input_data
 27625  018C8E  2525               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 27626  018C90  6ED9               	movwf	fsr2l,c
 27627  018C92  0E01               	movlw	high writeDoubleToEEPROM@input_data
 27628  018C94  2126               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 27629  018C96  6EDA               	movwf	fsr2h,c
 27630  018C98  50DF               	movf	indf2,w,c
 27631  018C9A  6F19               	movwf	DATAEE_WriteByte@bData& (0+255),b
 27632  018C9C  ECE3  F0C7         	call	_DATAEE_WriteByte	;wreg free
 27633  018CA0  0101               	movlb	1	; () banked
 27634  018CA2  4B25               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 27635  018CA4  2B26               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 27636  018CA6  D7E6               	goto	l19638
 27637  018CA8                     l1474:
 27638                           
 27639                           ; BSR set to: 1
 27640  018CA8  0012               	return		;funcret
 27641  018CAA                     __end_of_writeDoubleToEEPROM:
 27642                           	opt stack 0
 27643                           tblptru	equ	0xFF8
 27644                           tblptrh	equ	0xFF7
 27645                           tblptrl	equ	0xFF6
 27646                           tablat	equ	0xFF5
 27647                           prodh	equ	0xFF4
 27648                           prodl	equ	0xFF3
 27649                           intcon	equ	0xFF2
 27650                           indf0	equ	0xFEF
 27651                           postinc0	equ	0xFEE
 27652                           fsr0h	equ	0xFEA
 27653                           fsr0l	equ	0xFE9
 27654                           wreg	equ	0xFE8
 27655                           indf1	equ	0xFE7
 27656                           postdec1	equ	0xFE5
 27657                           plusw1	equ	0xFE3
 27658                           fsr1h	equ	0xFE2
 27659                           fsr1l	equ	0xFE1
 27660                           indf2	equ	0xFDF
 27661                           postinc2	equ	0xFDE
 27662                           postdec2	equ	0xFDD
 27663                           plusw2	equ	0xFDB
 27664                           fsr2h	equ	0xFDA
 27665                           fsr2l	equ	0xFD9
 27666                           status	equ	0xFD8
 27667                           
 27668 ;; *************** function _DATAEE_WriteByte *****************
 27669 ;; Defined at:
 27670 ;;		line 168 in file "mcc_generated_files/memory.c"
 27671 ;; Parameters:    Size  Location     Type
 27672 ;;  bAdd            2   23[BANK1 ] unsigned int 
 27673 ;;  bData           1   25[BANK1 ] unsigned char 
 27674 ;; Auto vars:     Size  Location     Type
 27675 ;;  GIEBitValue     1   26[BANK1 ] unsigned char 
 27676 ;; Return value:  Size  Location     Type
 27677 ;;                  1    wreg      void 
 27678 ;; Registers used:
 27679 ;;		wreg, status,2, status,0
 27680 ;; Tracked objects:
 27681 ;;		On entry : 0/0
 27682 ;;		On exit  : 0/0
 27683 ;;		Unchanged: 0/0
 27684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27685 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27686 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27688 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27689 ;;Total ram usage:        4 bytes
 27690 ;; Hardware stack levels used:    1
 27691 ;; Hardware stack levels required when called:   13
 27692 ;; This function calls:
 27693 ;;		Nothing
 27694 ;; This function is called by:
 27695 ;;		_writeDoubleToEEPROM
 27696 ;; This function uses a non-reentrant model
 27697 ;;
 27698                           
 27699                           	psect	text50
 27700  018FC6                     __ptext50:
 27701                           	opt stack 0
 27702  018FC6                     _DATAEE_WriteByte:
 27703                           	opt stack 14
 27704                           
 27705                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 27706                           
 27707                           ; BSR set to: 1
 27708                           ;incstack = 0
 27709  018FC6  0E00               	movlw	0
 27710  018FC8  BEF2               	btfsc	intcon,7,c	;volatile
 27711  018FCA  0E01               	movlw	1
 27712  018FCC  0101               	movlb	1	; () banked
 27713  018FCE  6F1A               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 27714                           
 27715                           ; BSR set to: 1
 27716                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 27717  018FD0  5118               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 27718  018FD2  0B03               	andlw	3
 27719  018FD4  6E75               	movwf	3957,c	;volatile
 27720                           
 27721                           ; BSR set to: 1
 27722                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 27723  018FD6  C117  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 27724                           
 27725                           ; BSR set to: 1
 27726                           ;memory.c: 174: NVMDAT = bData;
 27727  018FDA  C119  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 27728                           
 27729                           ; BSR set to: 1
 27730                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 27731  018FDE  0E3F               	movlw	-193
 27732  018FE0  1677               	andwf	3959,f,c	;volsfr
 27733                           
 27734                           ; BSR set to: 1
 27735                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 27736  018FE2  8477               	bsf	3959,2,c	;volsfr
 27737                           
 27738                           ; BSR set to: 1
 27739                           ;memory.c: 177: INTCONbits.GIE = 0;
 27740  018FE4  9EF2               	bcf	intcon,7,c	;volatile
 27741                           
 27742                           ; BSR set to: 1
 27743                           ;memory.c: 178: NVMCON2 = 0x55;
 27744  018FE6  0E55               	movlw	85
 27745  018FE8  6E78               	movwf	3960,c	;volsfr
 27746                           
 27747                           ; BSR set to: 1
 27748                           ;memory.c: 179: NVMCON2 = 0xAA;
 27749  018FEA  0EAA               	movlw	170
 27750  018FEC  6E78               	movwf	3960,c	;volsfr
 27751                           
 27752                           ; BSR set to: 1
 27753                           ;memory.c: 180: NVMCON1bits.WR = 1;
 27754  018FEE  8277               	bsf	3959,1,c	;volsfr
 27755  018FF0                     
 27756                           ; BSR set to: 1
 27757                           ;memory.c: 183: {
 27758  018FF0  B277               	btfsc	3959,1,c	;volsfr
 27759  018FF2  D7FE               	goto	l803
 27760                           
 27761                           ;memory.c: 184: }
 27762                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 27763  018FF4  9477               	bcf	3959,2,c	;volsfr
 27764                           
 27765                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 27766  018FF6  0101               	movlb	1	; () banked
 27767  018FF8  B11A               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 27768  018FFA  D002               	bra	u25935
 27769  018FFC  9EF2               	bcf	intcon,7,c	;volatile
 27770  018FFE  D001               	bra	u25936
 27771  019000                     u25935:
 27772  019000  8EF2               	bsf	intcon,7,c	;volatile
 27773  019002                     u25936:
 27774  019002  0012               	return		;funcret
 27775  019004                     __end_of_DATAEE_WriteByte:
 27776                           	opt stack 0
 27777                           tblptru	equ	0xFF8
 27778                           tblptrh	equ	0xFF7
 27779                           tblptrl	equ	0xFF6
 27780                           tablat	equ	0xFF5
 27781                           prodh	equ	0xFF4
 27782                           prodl	equ	0xFF3
 27783                           intcon	equ	0xFF2
 27784                           indf0	equ	0xFEF
 27785                           postinc0	equ	0xFEE
 27786                           fsr0h	equ	0xFEA
 27787                           fsr0l	equ	0xFE9
 27788                           wreg	equ	0xFE8
 27789                           indf1	equ	0xFE7
 27790                           postdec1	equ	0xFE5
 27791                           plusw1	equ	0xFE3
 27792                           fsr1h	equ	0xFE2
 27793                           fsr1l	equ	0xFE1
 27794                           indf2	equ	0xFDF
 27795                           postinc2	equ	0xFDE
 27796                           postdec2	equ	0xFDD
 27797                           plusw2	equ	0xFDB
 27798                           fsr2h	equ	0xFDA
 27799                           fsr2l	equ	0xFD9
 27800                           status	equ	0xFD8
 27801                           
 27802 ;; *************** function ___flge *****************
 27803 ;; Defined at:
 27804 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 27805 ;; Parameters:    Size  Location     Type
 27806 ;;  ff1             4   23[BANK1 ] void 
 27807 ;;  ff2             4   27[BANK1 ] void 
 27808 ;; Auto vars:     Size  Location     Type
 27809 ;;		None
 27810 ;; Return value:  Size  Location     Type
 27811 ;;		None               void
 27812 ;; Registers used:
 27813 ;;		wreg, status,2, status,0
 27814 ;; Tracked objects:
 27815 ;;		On entry : 0/0
 27816 ;;		On exit  : 0/0
 27817 ;;		Unchanged: 0/0
 27818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27819 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27821 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27822 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27823 ;;Total ram usage:       12 bytes
 27824 ;; Hardware stack levels used:    1
 27825 ;; Hardware stack levels required when called:   13
 27826 ;; This function calls:
 27827 ;;		Nothing
 27828 ;; This function is called by:
 27829 ;;		_saveSRAMMaxToEEPROM
 27830 ;;		_printf
 27831 ;; This function uses a non-reentrant model
 27832 ;;
 27833                           
 27834                           	psect	text51
 27835  017874                     __ptext51:
 27836                           	opt stack 0
 27837  017874                     ___flge:
 27838                           	opt stack 14
 27839                           
 27840                           ;incstack = 0
 27841  017874  0E00               	movlw	0
 27842  017876  0101               	movlb	1	; () banked
 27843  017878  1517               	andwf	___flge@ff1& (0+255),w,b
 27844  01787A  6F1F               	movwf	??___flge& (0+255),b
 27845  01787C  0E00               	movlw	0
 27846  01787E  1518               	andwf	(___flge@ff1+1)& (0+255),w,b
 27847  017880  6F20               	movwf	(??___flge+1)& (0+255),b
 27848  017882  0E80               	movlw	128
 27849  017884  1519               	andwf	(___flge@ff1+2)& (0+255),w,b
 27850  017886  6F21               	movwf	(??___flge+2)& (0+255),b
 27851  017888  0E7F               	movlw	127
 27852  01788A  151A               	andwf	(___flge@ff1+3)& (0+255),w,b
 27853  01788C  6F22               	movwf	(??___flge+3)& (0+255),b
 27854  01788E  511F               	movf	??___flge& (0+255),w,b
 27855  017890  1120               	iorwf	(??___flge+1)& (0+255),w,b
 27856  017892  1121               	iorwf	(??___flge+2)& (0+255),w,b
 27857  017894  1122               	iorwf	(??___flge+3)& (0+255),w,b
 27858  017896  A4D8               	btfss	status,2,c
 27859  017898  D008               	goto	l1965
 27860                           
 27861                           ; BSR set to: 1
 27862  01789A  0E00               	movlw	0
 27863  01789C  6F17               	movwf	___flge@ff1& (0+255),b
 27864  01789E  0E00               	movlw	0
 27865  0178A0  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 27866  0178A2  0E00               	movlw	0
 27867  0178A4  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 27868  0178A6  0E00               	movlw	0
 27869  0178A8  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 27870  0178AA                     l1965:
 27871                           
 27872                           ; BSR set to: 1
 27873                           
 27874                           ; BSR set to: 1
 27875  0178AA  0E00               	movlw	0
 27876  0178AC  151B               	andwf	___flge@ff2& (0+255),w,b
 27877  0178AE  6F1F               	movwf	??___flge& (0+255),b
 27878  0178B0  0E00               	movlw	0
 27879  0178B2  151C               	andwf	(___flge@ff2+1)& (0+255),w,b
 27880  0178B4  6F20               	movwf	(??___flge+1)& (0+255),b
 27881  0178B6  0E80               	movlw	128
 27882  0178B8  151D               	andwf	(___flge@ff2+2)& (0+255),w,b
 27883  0178BA  6F21               	movwf	(??___flge+2)& (0+255),b
 27884  0178BC  0E7F               	movlw	127
 27885  0178BE  151E               	andwf	(___flge@ff2+3)& (0+255),w,b
 27886  0178C0  6F22               	movwf	(??___flge+3)& (0+255),b
 27887  0178C2  511F               	movf	??___flge& (0+255),w,b
 27888  0178C4  1120               	iorwf	(??___flge+1)& (0+255),w,b
 27889  0178C6  1121               	iorwf	(??___flge+2)& (0+255),w,b
 27890  0178C8  1122               	iorwf	(??___flge+3)& (0+255),w,b
 27891  0178CA  A4D8               	btfss	status,2,c
 27892  0178CC  D008               	goto	l1966
 27893                           
 27894                           ; BSR set to: 1
 27895  0178CE  0E00               	movlw	0
 27896  0178D0  6F1B               	movwf	___flge@ff2& (0+255),b
 27897  0178D2  0E00               	movlw	0
 27898  0178D4  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 27899  0178D6  0E00               	movlw	0
 27900  0178D8  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 27901  0178DA  0E00               	movlw	0
 27902  0178DC  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 27903  0178DE                     l1966:
 27904                           
 27905                           ; BSR set to: 1
 27906                           
 27907                           ; BSR set to: 1
 27908  0178DE  AF1A               	btfss	(___flge@ff1+3)& (0+255),7,b
 27909  0178E0  D01D               	goto	l1967
 27910                           
 27911                           ; BSR set to: 1
 27912  0178E2  C117  F11F         	movff	___flge@ff1,??___flge
 27913  0178E6  C118  F120         	movff	___flge@ff1+1,??___flge+1
 27914  0178EA  C119  F121         	movff	___flge@ff1+2,??___flge+2
 27915  0178EE  C11A  F122         	movff	___flge@ff1+3,??___flge+3
 27916  0178F2  1F1F               	comf	??___flge& (0+255),f,b
 27917  0178F4  1F20               	comf	(??___flge+1)& (0+255),f,b
 27918  0178F6  1F21               	comf	(??___flge+2)& (0+255),f,b
 27919  0178F8  1F22               	comf	(??___flge+3)& (0+255),f,b
 27920  0178FA  2B1F               	incf	??___flge& (0+255),f,b
 27921  0178FC  0E00               	movlw	0
 27922  0178FE  2320               	addwfc	(??___flge+1)& (0+255),f,b
 27923  017900  2321               	addwfc	(??___flge+2)& (0+255),f,b
 27924  017902  2322               	addwfc	(??___flge+3)& (0+255),f,b
 27925  017904  0E00               	movlw	0
 27926  017906  251F               	addwf	??___flge& (0+255),w,b
 27927  017908  6F17               	movwf	___flge@ff1& (0+255),b
 27928  01790A  0E00               	movlw	0
 27929  01790C  2120               	addwfc	(??___flge+1)& (0+255),w,b
 27930  01790E  6F18               	movwf	(___flge@ff1+1)& (0+255),b
 27931  017910  0E00               	movlw	0
 27932  017912  2121               	addwfc	(??___flge+2)& (0+255),w,b
 27933  017914  6F19               	movwf	(___flge@ff1+2)& (0+255),b
 27934  017916  0E80               	movlw	128
 27935  017918  2122               	addwfc	(??___flge+3)& (0+255),w,b
 27936  01791A  6F1A               	movwf	(___flge@ff1+3)& (0+255),b
 27937  01791C                     l1967:
 27938                           
 27939                           ; BSR set to: 1
 27940                           
 27941                           ; BSR set to: 1
 27942  01791C  AF1E               	btfss	(___flge@ff2+3)& (0+255),7,b
 27943  01791E  D01D               	goto	l1968
 27944                           
 27945                           ; BSR set to: 1
 27946  017920  C11B  F11F         	movff	___flge@ff2,??___flge
 27947  017924  C11C  F120         	movff	___flge@ff2+1,??___flge+1
 27948  017928  C11D  F121         	movff	___flge@ff2+2,??___flge+2
 27949  01792C  C11E  F122         	movff	___flge@ff2+3,??___flge+3
 27950  017930  1F1F               	comf	??___flge& (0+255),f,b
 27951  017932  1F20               	comf	(??___flge+1)& (0+255),f,b
 27952  017934  1F21               	comf	(??___flge+2)& (0+255),f,b
 27953  017936  1F22               	comf	(??___flge+3)& (0+255),f,b
 27954  017938  2B1F               	incf	??___flge& (0+255),f,b
 27955  01793A  0E00               	movlw	0
 27956  01793C  2320               	addwfc	(??___flge+1)& (0+255),f,b
 27957  01793E  2321               	addwfc	(??___flge+2)& (0+255),f,b
 27958  017940  2322               	addwfc	(??___flge+3)& (0+255),f,b
 27959  017942  0E00               	movlw	0
 27960  017944  251F               	addwf	??___flge& (0+255),w,b
 27961  017946  6F1B               	movwf	___flge@ff2& (0+255),b
 27962  017948  0E00               	movlw	0
 27963  01794A  2120               	addwfc	(??___flge+1)& (0+255),w,b
 27964  01794C  6F1C               	movwf	(___flge@ff2+1)& (0+255),b
 27965  01794E  0E00               	movlw	0
 27966  017950  2121               	addwfc	(??___flge+2)& (0+255),w,b
 27967  017952  6F1D               	movwf	(___flge@ff2+2)& (0+255),b
 27968  017954  0E80               	movlw	128
 27969  017956  2122               	addwfc	(??___flge+3)& (0+255),w,b
 27970  017958  6F1E               	movwf	(___flge@ff2+3)& (0+255),b
 27971  01795A                     l1968:
 27972                           
 27973                           ; BSR set to: 1
 27974  01795A  0E00               	movlw	0
 27975  01795C  1B17               	xorwf	___flge@ff1& (0+255),f,b
 27976  01795E  0E00               	movlw	0
 27977  017960  1B18               	xorwf	(___flge@ff1+1)& (0+255),f,b
 27978  017962  0E00               	movlw	0
 27979  017964  1B19               	xorwf	(___flge@ff1+2)& (0+255),f,b
 27980  017966  0E80               	movlw	128
 27981  017968  1B1A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 27982  01796A  0E00               	movlw	0
 27983  01796C  1B1B               	xorwf	___flge@ff2& (0+255),f,b
 27984  01796E  0E00               	movlw	0
 27985  017970  1B1C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 27986  017972  0E00               	movlw	0
 27987  017974  1B1D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 27988  017976  0E80               	movlw	128
 27989  017978  1B1E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 27990  01797A  511B               	movf	___flge@ff2& (0+255),w,b
 27991  01797C  5D17               	subwf	___flge@ff1& (0+255),w,b
 27992  01797E  511C               	movf	(___flge@ff2+1)& (0+255),w,b
 27993  017980  5918               	subwfb	(___flge@ff1+1)& (0+255),w,b
 27994  017982  511D               	movf	(___flge@ff2+2)& (0+255),w,b
 27995  017984  5919               	subwfb	(___flge@ff1+2)& (0+255),w,b
 27996  017986  511E               	movf	(___flge@ff2+3)& (0+255),w,b
 27997  017988  591A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 27998  01798A  B0D8               	btfsc	status,0,c
 27999  01798C  D002               	goto	l18274
 28000                           
 28001                           ; BSR set to: 1
 28002  01798E  90D8               	bcf	status,0,c
 28003  017990  0012               	return	
 28004  017992                     l18274:
 28005                           
 28006                           ; BSR set to: 1
 28007                           
 28008                           ; BSR set to: 1
 28009  017992  80D8               	bsf	status,0,c
 28010                           
 28011                           ; BSR set to: 1
 28012  017994  0012               	return	
 28013  017996                     __end_of___flge:
 28014                           	opt stack 0
 28015                           tblptru	equ	0xFF8
 28016                           tblptrh	equ	0xFF7
 28017                           tblptrl	equ	0xFF6
 28018                           tablat	equ	0xFF5
 28019                           prodh	equ	0xFF4
 28020                           prodl	equ	0xFF3
 28021                           intcon	equ	0xFF2
 28022                           indf0	equ	0xFEF
 28023                           postinc0	equ	0xFEE
 28024                           fsr0h	equ	0xFEA
 28025                           fsr0l	equ	0xFE9
 28026                           wreg	equ	0xFE8
 28027                           indf1	equ	0xFE7
 28028                           postdec1	equ	0xFE5
 28029                           plusw1	equ	0xFE3
 28030                           fsr1h	equ	0xFE2
 28031                           fsr1l	equ	0xFE1
 28032                           indf2	equ	0xFDF
 28033                           postinc2	equ	0xFDE
 28034                           postdec2	equ	0xFDD
 28035                           plusw2	equ	0xFDB
 28036                           fsr2h	equ	0xFDA
 28037                           fsr2l	equ	0xFD9
 28038                           status	equ	0xFD8
 28039                           
 28040 ;; *************** function _recoverSRAMMaxFromEEPROM *****************
 28041 ;; Defined at:
 28042 ;;		line 192 in file "main.c"
 28043 ;; Parameters:    Size  Location     Type
 28044 ;;		None
 28045 ;; Auto vars:     Size  Location     Type
 28046 ;;		None
 28047 ;; Return value:  Size  Location     Type
 28048 ;;                  1    wreg      void 
 28049 ;; Registers used:
 28050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28051 ;; Tracked objects:
 28052 ;;		On entry : 0/0
 28053 ;;		On exit  : 0/0
 28054 ;;		Unchanged: 0/0
 28055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28060 ;;Total ram usage:        0 bytes
 28061 ;; Hardware stack levels used:    1
 28062 ;; Hardware stack levels required when called:   15
 28063 ;; This function calls:
 28064 ;;		_readDoubleFromEEPROM
 28065 ;; This function is called by:
 28066 ;;		_main
 28067 ;; This function uses a non-reentrant model
 28068 ;;
 28069                           
 28070                           	psect	text52
 28071  017162                     __ptext52:
 28072                           	opt stack 0
 28073  017162                     _recoverSRAMMaxFromEEPROM:
 28074                           	opt stack 15
 28075                           
 28076                           ;main.c: 194: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 28077                           
 28078                           ; BSR set to: 1
 28079                           ;incstack = 0
 28080  017162  0EFB               	movlw	low _max_Irms_address
 28081  017164  6EF6               	movwf	tblptrl,c
 28082  017166                     	if	1	;There is more than 1 active tblptr byte
 28083  017166  0ED7               	movlw	high _max_Irms_address
 28084  017168  6EF7               	movwf	tblptrh,c
 28085  01716A                     	endif
 28086  01716A                     	if	1	;There are 3 active tblptr bytes
 28087  01716A  0E00               	movlw	low (_max_Irms_address shr (0+16))
 28088  01716C  6EF8               	movwf	tblptru,c
 28089  01716E                     	endif
 28090  01716E  0009               	tblrd		*+
 28091  017170  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 28092  017174  000A               	tblrd		*-
 28093  017176  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 28094  01717A  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 28095  01717E  C119  F214         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 28096  017182  C11A  F215         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 28097  017186  C11B  F216         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 28098  01718A  C11C  F217         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 28099                           
 28100                           ;main.c: 195: max_Power = readDoubleFromEEPROM(max_Power_address);
 28101  01718E  0EF9               	movlw	low _max_Power_address
 28102  017190  6EF6               	movwf	tblptrl,c
 28103  017192                     	if	1	;There is more than 1 active tblptr byte
 28104  017192  0ED7               	movlw	high _max_Power_address
 28105  017194  6EF7               	movwf	tblptrh,c
 28106  017196                     	endif
 28107  017196                     	if	1	;There are 3 active tblptr bytes
 28108  017196  0E00               	movlw	low (_max_Power_address shr (0+16))
 28109  017198  6EF8               	movwf	tblptru,c
 28110  01719A                     	endif
 28111  01719A  0009               	tblrd		*+
 28112  01719C  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 28113  0171A0  000A               	tblrd		*-
 28114  0171A2  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 28115  0171A6  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 28116  0171AA  C119  F210         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 28117  0171AE  C11A  F211         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 28118  0171B2  C11B  F212         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 28119  0171B6  C11C  F213         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 28120                           
 28121                           ;main.c: 196: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 28122  0171BA  0EF7               	movlw	low _max_POS3P3_ADC_Result_address
 28123  0171BC  6EF6               	movwf	tblptrl,c
 28124  0171BE                     	if	1	;There is more than 1 active tblptr byte
 28125  0171BE  0ED7               	movlw	high _max_POS3P3_ADC_Result_address
 28126  0171C0  6EF7               	movwf	tblptrh,c
 28127  0171C2                     	endif
 28128  0171C2                     	if	1	;There are 3 active tblptr bytes
 28129  0171C2  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 28130  0171C4  6EF8               	movwf	tblptru,c
 28131  0171C6                     	endif
 28132  0171C6  0009               	tblrd		*+
 28133  0171C8  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 28134  0171CC  000A               	tblrd		*-
 28135  0171CE  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 28136  0171D2  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 28137  0171D6  C119  F20C         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 28138  0171DA  C11A  F20D         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 28139  0171DE  C11B  F20E         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 28140  0171E2  C11C  F20F         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 28141                           
 28142                           ;main.c: 197: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 28143  0171E6  0EF5               	movlw	low _max_POS12_ADC_Result_address
 28144  0171E8  6EF6               	movwf	tblptrl,c
 28145  0171EA                     	if	1	;There is more than 1 active tblptr byte
 28146  0171EA  0ED7               	movlw	high _max_POS12_ADC_Result_address
 28147  0171EC  6EF7               	movwf	tblptrh,c
 28148  0171EE                     	endif
 28149  0171EE                     	if	1	;There are 3 active tblptr bytes
 28150  0171EE  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 28151  0171F0  6EF8               	movwf	tblptru,c
 28152  0171F2                     	endif
 28153  0171F2  0009               	tblrd		*+
 28154  0171F4  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 28155  0171F8  000A               	tblrd		*-
 28156  0171FA  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 28157  0171FE  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 28158  017202  C119  F208         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 28159  017206  C11A  F209         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 28160  01720A  C11B  F20A         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 28161  01720E  C11C  F20B         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 28162                           
 28163                           ;main.c: 198: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 28164  017212  0EF3               	movlw	low _max_Temp_ADC_Result_address
 28165  017214  6EF6               	movwf	tblptrl,c
 28166  017216                     	if	1	;There is more than 1 active tblptr byte
 28167  017216  0ED7               	movlw	high _max_Temp_ADC_Result_address
 28168  017218  6EF7               	movwf	tblptrh,c
 28169  01721A                     	endif
 28170  01721A                     	if	1	;There are 3 active tblptr bytes
 28171  01721A  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 28172  01721C  6EF8               	movwf	tblptru,c
 28173  01721E                     	endif
 28174  01721E  0009               	tblrd		*+
 28175  017220  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 28176  017224  000A               	tblrd		*-
 28177  017226  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 28178  01722A  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 28179  01722E  C119  F204         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 28180  017232  C11A  F205         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 28181  017236  C11B  F206         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 28182  01723A  C11C  F207         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 28183                           
 28184                           ;main.c: 199: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 28185  01723E  0EF1               	movlw	low _max_FVR_ADC_Result_address
 28186  017240  6EF6               	movwf	tblptrl,c
 28187  017242                     	if	1	;There is more than 1 active tblptr byte
 28188  017242  0ED7               	movlw	high _max_FVR_ADC_Result_address
 28189  017244  6EF7               	movwf	tblptrh,c
 28190  017246                     	endif
 28191  017246                     	if	1	;There are 3 active tblptr bytes
 28192  017246  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 28193  017248  6EF8               	movwf	tblptru,c
 28194  01724A                     	endif
 28195  01724A  0009               	tblrd		*+
 28196  01724C  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 28197  017250  000A               	tblrd		*-
 28198  017252  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 28199  017256  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 28200  01725A  C119  F200         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 28201  01725E  C11A  F201         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 28202  017262  C11B  F202         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 28203  017266  C11C  F203         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 28204                           
 28205                           ;main.c: 200: Total_Energy = readDoubleFromEEPROM(Total_Energy_address);
 28206  01726A  0EFD               	movlw	low _Total_Energy_address
 28207  01726C  6EF6               	movwf	tblptrl,c
 28208  01726E                     	if	1	;There is more than 1 active tblptr byte
 28209  01726E  0ED7               	movlw	high _Total_Energy_address
 28210  017270  6EF7               	movwf	tblptrh,c
 28211  017272                     	endif
 28212  017272                     	if	1	;There are 3 active tblptr bytes
 28213  017272  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 28214  017274  6EF8               	movwf	tblptru,c
 28215  017276                     	endif
 28216  017276  0009               	tblrd		*+
 28217  017278  CFF5 F119          	movff	tablat,readDoubleFromEEPROM@starting_address
 28218  01727C  000A               	tblrd		*-
 28219  01727E  CFF5 F11A          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 28220  017282  ECB3  F0C5         	call	_readDoubleFromEEPROM	;wreg free
 28221  017286  C119  F0F6         	movff	?_readDoubleFromEEPROM,_Total_Energy	;volatile
 28222  01728A  C11A  F0F7         	movff	?_readDoubleFromEEPROM+1,_Total_Energy+1	;volatile
 28223  01728E  C11B  F0F8         	movff	?_readDoubleFromEEPROM+2,_Total_Energy+2	;volatile
 28224  017292  C11C  F0F9         	movff	?_readDoubleFromEEPROM+3,_Total_Energy+3	;volatile
 28225  017296  0012               	return		;funcret
 28226  017298                     __end_of_recoverSRAMMaxFromEEPROM:
 28227                           	opt stack 0
 28228                           tblptru	equ	0xFF8
 28229                           tblptrh	equ	0xFF7
 28230                           tblptrl	equ	0xFF6
 28231                           tablat	equ	0xFF5
 28232                           prodh	equ	0xFF4
 28233                           prodl	equ	0xFF3
 28234                           intcon	equ	0xFF2
 28235                           indf0	equ	0xFEF
 28236                           postinc0	equ	0xFEE
 28237                           fsr0h	equ	0xFEA
 28238                           fsr0l	equ	0xFE9
 28239                           wreg	equ	0xFE8
 28240                           indf1	equ	0xFE7
 28241                           postdec1	equ	0xFE5
 28242                           plusw1	equ	0xFE3
 28243                           fsr1h	equ	0xFE2
 28244                           fsr1l	equ	0xFE1
 28245                           indf2	equ	0xFDF
 28246                           postinc2	equ	0xFDE
 28247                           postdec2	equ	0xFDD
 28248                           plusw2	equ	0xFDB
 28249                           fsr2h	equ	0xFDA
 28250                           fsr2l	equ	0xFD9
 28251                           status	equ	0xFD8
 28252                           
 28253 ;; *************** function _readDoubleFromEEPROM *****************
 28254 ;; Defined at:
 28255 ;;		line 22 in file "double_to_EEPROM.c"
 28256 ;; Parameters:    Size  Location     Type
 28257 ;;  starting_add    2   25[BANK1 ] unsigned int 
 28258 ;; Auto vars:     Size  Location     Type
 28259 ;;  byte_index      2   33[BANK1 ] int 
 28260 ;;  output_data     4   29[BANK1 ] struct .
 28261 ;; Return value:  Size  Location     Type
 28262 ;;                  4   25[BANK1 ] struct .
 28263 ;; Registers used:
 28264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28265 ;; Tracked objects:
 28266 ;;		On entry : 0/0
 28267 ;;		On exit  : 0/0
 28268 ;;		Unchanged: 0/0
 28269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28270 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28271 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28273 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28274 ;;Total ram usage:       10 bytes
 28275 ;; Hardware stack levels used:    1
 28276 ;; Hardware stack levels required when called:   14
 28277 ;; This function calls:
 28278 ;;		_DATAEE_ReadByte
 28279 ;; This function is called by:
 28280 ;;		_recoverSRAMMaxFromEEPROM
 28281 ;;		_ringBufferLUT
 28282 ;; This function uses a non-reentrant model
 28283 ;;
 28284                           
 28285                           	psect	text53
 28286  018B66                     __ptext53:
 28287                           	opt stack 0
 28288  018B66                     _readDoubleFromEEPROM:
 28289                           	opt stack 14
 28290                           
 28291                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 28292                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 28293                           
 28294                           ;incstack = 0
 28295  018B66  0E00               	movlw	0
 28296  018B68  0101               	movlb	1	; () banked
 28297  018B6A  6F22               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 28298  018B6C  0E00               	movlw	0
 28299  018B6E  6F21               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 28300                           
 28301                           ; BSR set to: 1
 28302  018B70  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 28303  018B72  E119               	bnz	l1478
 28304  018B74  D014               	goto	L8
 28305  018B76                     
 28306                           ; BSR set to: 1
 28307                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 28308                           
 28309                           ; BSR set to: 1
 28310  018B76  0E1D               	movlw	low readDoubleFromEEPROM@output_data
 28311  018B78  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 28312  018B7A  6ED9               	movwf	fsr2l,c
 28313  018B7C  0E01               	movlw	high readDoubleFromEEPROM@output_data
 28314  018B7E  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 28315  018B80  6EDA               	movwf	fsr2h,c
 28316  018B82  5119               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 28317  018B84  2521               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 28318  018B86  6F17               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 28319  018B88  511A               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 28320  018B8A  2122               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 28321  018B8C  6F18               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 28322  018B8E  EC97  F0CA         	call	_DATAEE_ReadByte	;wreg free
 28323  018B92  6EDF               	movwf	indf2,c
 28324  018B94  0101               	movlb	1	; () banked
 28325  018B96  4B21               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 28326  018B98  2B22               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 28327                           
 28328                           ; BSR set to: 1
 28329  018B9A  5122               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 28330  018B9C  E104               	bnz	u26040
 28331  018B9E                     L8:
 28332  018B9E  0E04               	movlw	4
 28333  018BA0  5D21               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 28334  018BA2  A0D8               	btfss	status,0,c
 28335  018BA4  D7E8               	goto	l1477
 28336  018BA6                     u26040:
 28337  018BA6                     l1478:
 28338                           
 28339                           ; BSR set to: 1
 28340                           ;double_to_EEPROM.c: 32: }
 28341                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 28342  018BA6  C11D  F119         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 28343  018BAA  C11E  F11A         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 28344  018BAE  C11F  F11B         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 28345  018BB2  C120  F11C         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 28346                           
 28347                           ; BSR set to: 1
 28348  018BB6  0012               	return		;funcret
 28349  018BB8                     __end_of_readDoubleFromEEPROM:
 28350                           	opt stack 0
 28351                           tblptru	equ	0xFF8
 28352                           tblptrh	equ	0xFF7
 28353                           tblptrl	equ	0xFF6
 28354                           tablat	equ	0xFF5
 28355                           prodh	equ	0xFF4
 28356                           prodl	equ	0xFF3
 28357                           intcon	equ	0xFF2
 28358                           indf0	equ	0xFEF
 28359                           postinc0	equ	0xFEE
 28360                           fsr0h	equ	0xFEA
 28361                           fsr0l	equ	0xFE9
 28362                           wreg	equ	0xFE8
 28363                           indf1	equ	0xFE7
 28364                           postdec1	equ	0xFE5
 28365                           plusw1	equ	0xFE3
 28366                           fsr1h	equ	0xFE2
 28367                           fsr1l	equ	0xFE1
 28368                           indf2	equ	0xFDF
 28369                           postinc2	equ	0xFDE
 28370                           postdec2	equ	0xFDD
 28371                           plusw2	equ	0xFDB
 28372                           fsr2h	equ	0xFDA
 28373                           fsr2l	equ	0xFD9
 28374                           status	equ	0xFD8
 28375                           
 28376 ;; *************** function _DATAEE_ReadByte *****************
 28377 ;; Defined at:
 28378 ;;		line 190 in file "mcc_generated_files/memory.c"
 28379 ;; Parameters:    Size  Location     Type
 28380 ;;  bAdd            2   23[BANK1 ] unsigned int 
 28381 ;; Auto vars:     Size  Location     Type
 28382 ;;		None
 28383 ;; Return value:  Size  Location     Type
 28384 ;;                  1    wreg      unsigned char 
 28385 ;; Registers used:
 28386 ;;		wreg, status,2, status,0
 28387 ;; Tracked objects:
 28388 ;;		On entry : 0/0
 28389 ;;		On exit  : 0/0
 28390 ;;		Unchanged: 0/0
 28391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28392 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28395 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28396 ;;Total ram usage:        2 bytes
 28397 ;; Hardware stack levels used:    1
 28398 ;; Hardware stack levels required when called:   13
 28399 ;; This function calls:
 28400 ;;		Nothing
 28401 ;; This function is called by:
 28402 ;;		_readDoubleFromEEPROM
 28403 ;; This function uses a non-reentrant model
 28404 ;;
 28405                           
 28406                           	psect	text54
 28407  01952E                     __ptext54:
 28408                           	opt stack 0
 28409  01952E                     _DATAEE_ReadByte:
 28410                           	opt stack 14
 28411                           
 28412                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 28413                           
 28414                           ; BSR set to: 1
 28415                           ;incstack = 0
 28416  01952E  0101               	movlb	1	; () banked
 28417  019530  5118               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 28418  019532  0B03               	andlw	3
 28419  019534  6E75               	movwf	3957,c	;volatile
 28420                           
 28421                           ; BSR set to: 1
 28422                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 28423  019536  C117  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 28424                           
 28425                           ; BSR set to: 1
 28426                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 28427  01953A  0E3F               	movlw	-193
 28428  01953C  1677               	andwf	3959,f,c	;volsfr
 28429                           
 28430                           ; BSR set to: 1
 28431                           ;memory.c: 195: NVMCON1bits.RD = 1;
 28432  01953E  8077               	bsf	3959,0,c	;volsfr
 28433                           
 28434                           ; BSR set to: 1
 28435                           ;memory.c: 196: __nop();
 28436  019540  F000               	nop	
 28437                           
 28438                           ;memory.c: 197: __nop();
 28439  019542  F000               	nop	
 28440                           
 28441                           ;memory.c: 199: return (NVMDAT);
 28442  019544  5076               	movf	3958,w,c	;volatile
 28443  019546  0012               	return	
 28444  019548                     __end_of_DATAEE_ReadByte:
 28445                           	opt stack 0
 28446                           tblptru	equ	0xFF8
 28447                           tblptrh	equ	0xFF7
 28448                           tblptrl	equ	0xFF6
 28449                           tablat	equ	0xFF5
 28450                           prodh	equ	0xFF4
 28451                           prodl	equ	0xFF3
 28452                           intcon	equ	0xFF2
 28453                           indf0	equ	0xFEF
 28454                           postinc0	equ	0xFEE
 28455                           fsr0h	equ	0xFEA
 28456                           fsr0l	equ	0xFE9
 28457                           wreg	equ	0xFE8
 28458                           indf1	equ	0xFE7
 28459                           postdec1	equ	0xFE5
 28460                           plusw1	equ	0xFE3
 28461                           fsr1h	equ	0xFE2
 28462                           fsr1l	equ	0xFE1
 28463                           indf2	equ	0xFDF
 28464                           postinc2	equ	0xFDE
 28465                           postdec2	equ	0xFDD
 28466                           plusw2	equ	0xFDB
 28467                           fsr2h	equ	0xFDA
 28468                           fsr2l	equ	0xFD9
 28469                           status	equ	0xFD8
 28470                           
 28471 ;; *************** function _getCauseOfReset *****************
 28472 ;; Defined at:
 28473 ;;		line 11 in file "cause_of_reset.c"
 28474 ;; Parameters:    Size  Location     Type
 28475 ;;		None
 28476 ;; Auto vars:     Size  Location     Type
 28477 ;;  return_reset    1   23[BANK1 ] enum E17455
 28478 ;; Return value:  Size  Location     Type
 28479 ;;                  1    wreg      enum E17974
 28480 ;; Registers used:
 28481 ;;		wreg, status,2
 28482 ;; Tracked objects:
 28483 ;;		On entry : 0/0
 28484 ;;		On exit  : 0/0
 28485 ;;		Unchanged: 0/0
 28486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28488 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28490 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28491 ;;Total ram usage:        1 bytes
 28492 ;; Hardware stack levels used:    1
 28493 ;; Hardware stack levels required when called:   13
 28494 ;; This function calls:
 28495 ;;		Nothing
 28496 ;; This function is called by:
 28497 ;;		_main
 28498 ;; This function uses a non-reentrant model
 28499 ;;
 28500                           
 28501                           	psect	text55
 28502  018BB8                     __ptext55:
 28503                           	opt stack 0
 28504  018BB8                     _getCauseOfReset:
 28505                           	opt stack 17
 28506                           
 28507                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 28508                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 28509                           
 28510                           ;incstack = 0
 28511  018BB8  AED7               	btfss	4055,7,c	;volatile
 28512  018BBA  D002               	goto	l1444
 28513                           
 28514                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 28515  018BBC  0E07               	movlw	7
 28516  018BBE  D019               	goto	L15
 28517  018BC0                     l1444:
 28518                           
 28519                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 28520  018BC0  ACD7               	btfss	4055,6,c	;volatile
 28521  018BC2  D002               	goto	l1446
 28522                           
 28523                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 28524  018BC4  0E08               	movlw	8
 28525  018BC6  D015               	goto	L15
 28526  018BC8                     l1446:
 28527                           
 28528                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 28529  018BC8  BAD7               	btfsc	4055,5,c	;volatile
 28530  018BCA  D002               	goto	l1448
 28531                           
 28532                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 28533  018BCC  0E05               	movlw	5
 28534  018BCE  D011               	goto	L15
 28535  018BD0                     l1448:
 28536                           
 28537                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 28538  018BD0  B6D7               	btfsc	4055,3,c	;volatile
 28539  018BD2  D002               	goto	l1450
 28540                           
 28541                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 28542  018BD4  0E03               	movlw	3
 28543  018BD6  D00D               	goto	L15
 28544  018BD8                     l1450:
 28545                           
 28546                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 28547  018BD8  B4D7               	btfsc	4055,2,c	;volatile
 28548  018BDA  D002               	goto	l1452
 28549                           
 28550                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 28551  018BDC  0E06               	movlw	6
 28552  018BDE  D009               	goto	L15
 28553  018BE0                     l1452:
 28554                           
 28555                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 28556  018BE0  B2D7               	btfsc	4055,1,c	;volatile
 28557  018BE2  D002               	goto	l1454
 28558                           
 28559                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 28560  018BE4  0E01               	movlw	1
 28561  018BE6  D005               	goto	L15
 28562  018BE8                     l1454:
 28563                           
 28564                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 28565  018BE8  B0D7               	btfsc	4055,0,c	;volatile
 28566  018BEA  D002               	goto	l1456
 28567                           
 28568                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 28569  018BEC  0E02               	movlw	2
 28570  018BEE  D001               	goto	L15
 28571  018BF0                     l1456:
 28572                           
 28573                           ;cause_of_reset.c: 60: else {
 28574                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 28575                           
 28576                           ; BSR set to: 1
 28577  018BF0  0E00               	movlw	0
 28578  018BF2                     L15:
 28579  018BF2  0101               	movlb	1	; () banked
 28580  018BF4  6F17               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 28581                           
 28582                           ; BSR set to: 1
 28583                           ;cause_of_reset.c: 64: }
 28584                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 28585                           
 28586                           ; BSR set to: 1
 28587                           
 28588                           ; BSR set to: 1
 28589                           
 28590                           ; BSR set to: 1
 28591                           
 28592                           ; BSR set to: 1
 28593                           
 28594                           ; BSR set to: 1
 28595                           
 28596                           ; BSR set to: 1
 28597                           
 28598                           ; BSR set to: 1
 28599  018BF6  9ED7               	bcf	4055,7,c	;volatile
 28600                           
 28601                           ; BSR set to: 1
 28602                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 28603  018BF8  9CD7               	bcf	4055,6,c	;volatile
 28604                           
 28605                           ; BSR set to: 1
 28606                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 28607  018BFA  8AD7               	bsf	4055,5,c	;volatile
 28608                           
 28609                           ; BSR set to: 1
 28610                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 28611  018BFC  88D7               	bsf	4055,4,c	;volatile
 28612                           
 28613                           ; BSR set to: 1
 28614                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 28615  018BFE  86D7               	bsf	4055,3,c	;volatile
 28616                           
 28617                           ; BSR set to: 1
 28618                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 28619  018C00  84D7               	bsf	4055,2,c	;volatile
 28620                           
 28621                           ; BSR set to: 1
 28622                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 28623  018C02  82D7               	bsf	4055,1,c	;volatile
 28624                           
 28625                           ; BSR set to: 1
 28626                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 28627  018C04  80D7               	bsf	4055,0,c	;volatile
 28628                           
 28629                           ;cause_of_reset.c: 76: return return_reset_cause;
 28630  018C06  5117               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 28631  018C08  0012               	return	
 28632  018C0A                     __end_of_getCauseOfReset:
 28633                           	opt stack 0
 28634                           tblptru	equ	0xFF8
 28635                           tblptrh	equ	0xFF7
 28636                           tblptrl	equ	0xFF6
 28637                           tablat	equ	0xFF5
 28638                           prodh	equ	0xFF4
 28639                           prodl	equ	0xFF3
 28640                           intcon	equ	0xFF2
 28641                           indf0	equ	0xFEF
 28642                           postinc0	equ	0xFEE
 28643                           fsr0h	equ	0xFEA
 28644                           fsr0l	equ	0xFE9
 28645                           wreg	equ	0xFE8
 28646                           indf1	equ	0xFE7
 28647                           postdec1	equ	0xFE5
 28648                           plusw1	equ	0xFE3
 28649                           fsr1h	equ	0xFE2
 28650                           fsr1l	equ	0xFE1
 28651                           indf2	equ	0xFDF
 28652                           postinc2	equ	0xFDE
 28653                           postdec2	equ	0xFDD
 28654                           plusw2	equ	0xFDB
 28655                           fsr2h	equ	0xFDA
 28656                           fsr2l	equ	0xFD9
 28657                           status	equ	0xFD8
 28658                           
 28659 ;; *************** function _SYSTEM_Initialize *****************
 28660 ;; Defined at:
 28661 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28662 ;; Parameters:    Size  Location     Type
 28663 ;;		None
 28664 ;; Auto vars:     Size  Location     Type
 28665 ;;		None
 28666 ;; Return value:  Size  Location     Type
 28667 ;;                  1    wreg      void 
 28668 ;; Registers used:
 28669 ;;		wreg, status,2, status,0, cstack
 28670 ;; Tracked objects:
 28671 ;;		On entry : 0/0
 28672 ;;		On exit  : 0/0
 28673 ;;		Unchanged: 0/0
 28674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28679 ;;Total ram usage:        0 bytes
 28680 ;; Hardware stack levels used:    1
 28681 ;; Hardware stack levels required when called:   15
 28682 ;; This function calls:
 28683 ;;		_ADCC_Initialize
 28684 ;;		_EUSART2_Initialize
 28685 ;;		_EXT_INT_Initialize
 28686 ;;		_FVR_Initialize
 28687 ;;		_HLVD_Initialize
 28688 ;;		_INTERRUPT_Initialize
 28689 ;;		_OSCILLATOR_Initialize
 28690 ;;		_PIN_MANAGER_Initialize
 28691 ;;		_PMD_Initialize
 28692 ;;		_TMR5_Initialize
 28693 ;;		_TMR6_Initialize
 28694 ;;		_TMR7_Initialize
 28695 ;; This function is called by:
 28696 ;;		_main
 28697 ;; This function uses a non-reentrant model
 28698 ;;
 28699                           
 28700                           	psect	text56
 28701  0191C2                     __ptext56:
 28702                           	opt stack 0
 28703  0191C2                     _SYSTEM_Initialize:
 28704                           	opt stack 15
 28705                           
 28706                           ;mcc.c: 52: INTERRUPT_Initialize();
 28707                           
 28708                           ; BSR set to: 1
 28709                           ;incstack = 0
 28710  0191C2  ECB0  F0CA         	call	_INTERRUPT_Initialize	;wreg free
 28711                           
 28712                           ;mcc.c: 53: PMD_Initialize();
 28713  0191C6  EC60  F0CA         	call	_PMD_Initialize	;wreg free
 28714                           
 28715                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 28716  0191CA  ECD5  F0C0         	call	_PIN_MANAGER_Initialize	;wreg free
 28717                           
 28718                           ;mcc.c: 55: OSCILLATOR_Initialize();
 28719  0191CE  EC6E  F0CA         	call	_OSCILLATOR_Initialize	;wreg free
 28720                           
 28721                           ;mcc.c: 56: HLVD_Initialize();
 28722  0191D2  ECF9  F0CA         	call	_HLVD_Initialize	;wreg free
 28723                           
 28724                           ;mcc.c: 57: FVR_Initialize();
 28725  0191D6  EC56  F0CB         	call	_FVR_Initialize	;wreg free
 28726                           
 28727                           ;mcc.c: 58: TMR7_Initialize();
 28728  0191DA  EC89  F0C5         	call	_TMR7_Initialize	;wreg free
 28729                           
 28730                           ;mcc.c: 59: TMR6_Initialize();
 28731  0191DE  ECFA  F0C8         	call	_TMR6_Initialize	;wreg free
 28732                           
 28733                           ;mcc.c: 60: ADCC_Initialize();
 28734  0191E2  EC2D  F0C5         	call	_ADCC_Initialize	;wreg free
 28735                           
 28736                           ;mcc.c: 61: TMR5_Initialize();
 28737  0191E6  EC55  F0C6         	call	_TMR5_Initialize	;wreg free
 28738                           
 28739                           ;mcc.c: 62: EXT_INT_Initialize();
 28740  0191EA  EC42  F0CA         	call	_EXT_INT_Initialize	;wreg free
 28741                           
 28742                           ;mcc.c: 63: EUSART2_Initialize();
 28743  0191EE  EC2D  F0C4         	call	_EUSART2_Initialize	;wreg free
 28744  0191F2  0012               	return		;funcret
 28745  0191F4                     __end_of_SYSTEM_Initialize:
 28746                           	opt stack 0
 28747                           tblptru	equ	0xFF8
 28748                           tblptrh	equ	0xFF7
 28749                           tblptrl	equ	0xFF6
 28750                           tablat	equ	0xFF5
 28751                           prodh	equ	0xFF4
 28752                           prodl	equ	0xFF3
 28753                           intcon	equ	0xFF2
 28754                           indf0	equ	0xFEF
 28755                           postinc0	equ	0xFEE
 28756                           fsr0h	equ	0xFEA
 28757                           fsr0l	equ	0xFE9
 28758                           wreg	equ	0xFE8
 28759                           indf1	equ	0xFE7
 28760                           postdec1	equ	0xFE5
 28761                           plusw1	equ	0xFE3
 28762                           fsr1h	equ	0xFE2
 28763                           fsr1l	equ	0xFE1
 28764                           indf2	equ	0xFDF
 28765                           postinc2	equ	0xFDE
 28766                           postdec2	equ	0xFDD
 28767                           plusw2	equ	0xFDB
 28768                           fsr2h	equ	0xFDA
 28769                           fsr2l	equ	0xFD9
 28770                           status	equ	0xFD8
 28771                           
 28772 ;; *************** function _TMR7_Initialize *****************
 28773 ;; Defined at:
 28774 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 28775 ;; Parameters:    Size  Location     Type
 28776 ;;		None
 28777 ;; Auto vars:     Size  Location     Type
 28778 ;;		None
 28779 ;; Return value:  Size  Location     Type
 28780 ;;                  1    wreg      void 
 28781 ;; Registers used:
 28782 ;;		wreg, status,2, status,0, cstack
 28783 ;; Tracked objects:
 28784 ;;		On entry : 0/0
 28785 ;;		On exit  : 0/0
 28786 ;;		Unchanged: 0/0
 28787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28790 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28791 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28792 ;;Total ram usage:        2 bytes
 28793 ;; Hardware stack levels used:    1
 28794 ;; Hardware stack levels required when called:   14
 28795 ;; This function calls:
 28796 ;;		_TMR7_SetInterruptHandler
 28797 ;; This function is called by:
 28798 ;;		_SYSTEM_Initialize
 28799 ;; This function uses a non-reentrant model
 28800 ;;
 28801                           
 28802                           	psect	text57
 28803  018B12                     __ptext57:
 28804                           	opt stack 0
 28805  018B12                     _TMR7_Initialize:
 28806                           	opt stack 15
 28807                           
 28808                           ;tmr7.c: 69: T7GCON = 0x00;
 28809                           
 28810                           ;incstack = 0
 28811  018B12  0E00               	movlw	0
 28812  018B14  010F               	movlb	15	; () banked
 28813  018B16  6F31               	movwf	49,b	;volatile
 28814                           
 28815                           ;tmr7.c: 72: T7GATE = 0x00;
 28816  018B18  0E00               	movlw	0
 28817  018B1A  6F32               	movwf	50,b	;volatile
 28818                           
 28819                           ;tmr7.c: 75: T7CLK = 0x03;
 28820  018B1C  0E03               	movlw	3
 28821  018B1E  6F33               	movwf	51,b	;volatile
 28822                           
 28823                           ;tmr7.c: 78: TMR7H = 0xEC;
 28824  018B20  0EEC               	movlw	236
 28825  018B22  6F2F               	movwf	47,b	;volatile
 28826                           
 28827                           ;tmr7.c: 81: TMR7L = 0x78;
 28828  018B24  0E78               	movlw	120
 28829  018B26  6F2E               	movwf	46,b	;volatile
 28830                           
 28831                           ; BSR set to: 15
 28832                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 28833  018B28  512E               	movf	46,w,b	;volatile
 28834  018B2A  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 28835  018B2E  0101               	movlb	1	; () banked
 28836  018B30  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 28837  018B32  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 28838  018B36  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 28839  018B38  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 28840  018B3A  0102               	movlb	2	; () banked
 28841  018B3C  6F41               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 28842  018B3E  0101               	movlb	1	; () banked
 28843  018B40  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 28844  018B42  0102               	movlb	2	; () banked
 28845  018B44  6F42               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 28846                           
 28847                           ; BSR set to: 2
 28848                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 28849  018B46  010E               	movlb	14	; () banked
 28850  018B48  9D38               	bcf	56,6,b	;volatile
 28851                           
 28852                           ; BSR set to: 14
 28853                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 28854  018B4A  8D2E               	bsf	46,6,b	;volatile
 28855                           
 28856                           ; BSR set to: 14
 28857                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 28858  018B4C  0EE4               	movlw	low _TMR7_DefaultInterruptHandler
 28859  018B4E  0101               	movlb	1	; () banked
 28860  018B50  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 28861  018B52  0E96               	movlw	high _TMR7_DefaultInterruptHandler
 28862  018B54  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 28863  018B56  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 28864  018B58  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 28865  018B5A  EC08  F0CB         	call	_TMR7_SetInterruptHandler	;wreg free
 28866                           
 28867                           ;tmr7.c: 96: T7CON = 0x31;
 28868  018B5E  0E31               	movlw	49
 28869  018B60  010F               	movlb	15	; () banked
 28870  018B62  6F30               	movwf	48,b	;volatile
 28871                           
 28872                           ; BSR set to: 15
 28873  018B64  0012               	return		;funcret
 28874  018B66                     __end_of_TMR7_Initialize:
 28875                           	opt stack 0
 28876                           tblptru	equ	0xFF8
 28877                           tblptrh	equ	0xFF7
 28878                           tblptrl	equ	0xFF6
 28879                           tablat	equ	0xFF5
 28880                           prodh	equ	0xFF4
 28881                           prodl	equ	0xFF3
 28882                           intcon	equ	0xFF2
 28883                           indf0	equ	0xFEF
 28884                           postinc0	equ	0xFEE
 28885                           fsr0h	equ	0xFEA
 28886                           fsr0l	equ	0xFE9
 28887                           wreg	equ	0xFE8
 28888                           indf1	equ	0xFE7
 28889                           postdec1	equ	0xFE5
 28890                           plusw1	equ	0xFE3
 28891                           fsr1h	equ	0xFE2
 28892                           fsr1l	equ	0xFE1
 28893                           indf2	equ	0xFDF
 28894                           postinc2	equ	0xFDE
 28895                           postdec2	equ	0xFDD
 28896                           plusw2	equ	0xFDB
 28897                           fsr2h	equ	0xFDA
 28898                           fsr2l	equ	0xFD9
 28899                           status	equ	0xFD8
 28900                           
 28901 ;; *************** function _TMR7_SetInterruptHandler *****************
 28902 ;; Defined at:
 28903 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 28904 ;; Parameters:    Size  Location     Type
 28905 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 28906 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 28907 ;; Auto vars:     Size  Location     Type
 28908 ;;		None
 28909 ;; Return value:  Size  Location     Type
 28910 ;;                  1    wreg      void 
 28911 ;; Registers used:
 28912 ;;		wreg, status,2, status,0
 28913 ;; Tracked objects:
 28914 ;;		On entry : 0/0
 28915 ;;		On exit  : 0/0
 28916 ;;		Unchanged: 0/0
 28917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28918 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28921 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28922 ;;Total ram usage:        3 bytes
 28923 ;; Hardware stack levels used:    1
 28924 ;; Hardware stack levels required when called:   13
 28925 ;; This function calls:
 28926 ;;		Nothing
 28927 ;; This function is called by:
 28928 ;;		_TMR7_Initialize
 28929 ;;		_main
 28930 ;; This function uses a non-reentrant model
 28931 ;;
 28932                           
 28933                           	psect	text58
 28934  019610                     __ptext58:
 28935                           	opt stack 0
 28936  019610                     _TMR7_SetInterruptHandler:
 28937                           	opt stack 17
 28938                           
 28939                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 28940                           
 28941                           ; BSR set to: 15
 28942                           ;incstack = 0
 28943  019610  C117  F22E         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 28944  019614  C118  F22F         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 28945  019618  C119  F230         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 28946  01961C  0012               	return		;funcret
 28947  01961E                     __end_of_TMR7_SetInterruptHandler:
 28948                           	opt stack 0
 28949                           tblptru	equ	0xFF8
 28950                           tblptrh	equ	0xFF7
 28951                           tblptrl	equ	0xFF6
 28952                           tablat	equ	0xFF5
 28953                           prodh	equ	0xFF4
 28954                           prodl	equ	0xFF3
 28955                           intcon	equ	0xFF2
 28956                           indf0	equ	0xFEF
 28957                           postinc0	equ	0xFEE
 28958                           fsr0h	equ	0xFEA
 28959                           fsr0l	equ	0xFE9
 28960                           wreg	equ	0xFE8
 28961                           indf1	equ	0xFE7
 28962                           postdec1	equ	0xFE5
 28963                           plusw1	equ	0xFE3
 28964                           fsr1h	equ	0xFE2
 28965                           fsr1l	equ	0xFE1
 28966                           indf2	equ	0xFDF
 28967                           postinc2	equ	0xFDE
 28968                           postdec2	equ	0xFDD
 28969                           plusw2	equ	0xFDB
 28970                           fsr2h	equ	0xFDA
 28971                           fsr2l	equ	0xFD9
 28972                           status	equ	0xFD8
 28973                           
 28974 ;; *************** function _TMR6_Initialize *****************
 28975 ;; Defined at:
 28976 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 28977 ;; Parameters:    Size  Location     Type
 28978 ;;		None
 28979 ;; Auto vars:     Size  Location     Type
 28980 ;;		None
 28981 ;; Return value:  Size  Location     Type
 28982 ;;                  1    wreg      void 
 28983 ;; Registers used:
 28984 ;;		wreg, status,2, status,0, cstack
 28985 ;; Tracked objects:
 28986 ;;		On entry : 0/0
 28987 ;;		On exit  : 0/0
 28988 ;;		Unchanged: 0/0
 28989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28994 ;;Total ram usage:        0 bytes
 28995 ;; Hardware stack levels used:    1
 28996 ;; Hardware stack levels required when called:   14
 28997 ;; This function calls:
 28998 ;;		_TMR6_SetInterruptHandler
 28999 ;; This function is called by:
 29000 ;;		_SYSTEM_Initialize
 29001 ;; This function uses a non-reentrant model
 29002 ;;
 29003                           
 29004                           	psect	text59
 29005  0191F4                     __ptext59:
 29006                           	opt stack 0
 29007  0191F4                     _TMR6_Initialize:
 29008                           	opt stack 15
 29009                           
 29010                           ;tmr6.c: 69: T6CLKCON = 0x04;
 29011                           
 29012                           ;incstack = 0
 29013  0191F4  0E04               	movlw	4
 29014  0191F6  6EB3               	movwf	4019,c	;volatile
 29015                           
 29016                           ;tmr6.c: 72: T6HLT = 0x20;
 29017  0191F8  0E20               	movlw	32
 29018  0191FA  6EB2               	movwf	4018,c	;volatile
 29019                           
 29020                           ;tmr6.c: 75: T6RST = 0x00;
 29021  0191FC  0E00               	movlw	0
 29022  0191FE  6EB4               	movwf	4020,c	;volatile
 29023                           
 29024                           ;tmr6.c: 78: T6PR = 0xF1;
 29025  019200  0EF1               	movlw	241
 29026  019202  6EB0               	movwf	4016,c	;volatile
 29027                           
 29028                           ;tmr6.c: 81: T6TMR = 0x00;
 29029  019204  0E00               	movlw	0
 29030  019206  6EAF               	movwf	4015,c	;volatile
 29031                           
 29032                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 29033  019208  010E               	movlb	14	; () banked
 29034  01920A  9B38               	bcf	56,5,b	;volatile
 29035                           
 29036                           ; BSR set to: 14
 29037                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 29038  01920C  8B2E               	bsf	46,5,b	;volatile
 29039                           
 29040                           ; BSR set to: 14
 29041                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 29042  01920E  0EE6               	movlw	low _TMR6_DefaultInterruptHandler
 29043  019210  0101               	movlb	1	; () banked
 29044  019212  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 29045  019214  0E96               	movlw	high _TMR6_DefaultInterruptHandler
 29046  019216  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 29047  019218  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29048  01921A  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 29049  01921C  EC0F  F0CB         	call	_TMR6_SetInterruptHandler	;wreg free
 29050                           
 29051                           ;tmr6.c: 93: T6CON = 0xBF;
 29052  019220  0EBF               	movlw	191
 29053  019222  6EB1               	movwf	4017,c	;volatile
 29054  019224  0012               	return		;funcret
 29055  019226                     __end_of_TMR6_Initialize:
 29056                           	opt stack 0
 29057                           tblptru	equ	0xFF8
 29058                           tblptrh	equ	0xFF7
 29059                           tblptrl	equ	0xFF6
 29060                           tablat	equ	0xFF5
 29061                           prodh	equ	0xFF4
 29062                           prodl	equ	0xFF3
 29063                           intcon	equ	0xFF2
 29064                           indf0	equ	0xFEF
 29065                           postinc0	equ	0xFEE
 29066                           fsr0h	equ	0xFEA
 29067                           fsr0l	equ	0xFE9
 29068                           wreg	equ	0xFE8
 29069                           indf1	equ	0xFE7
 29070                           postdec1	equ	0xFE5
 29071                           plusw1	equ	0xFE3
 29072                           fsr1h	equ	0xFE2
 29073                           fsr1l	equ	0xFE1
 29074                           indf2	equ	0xFDF
 29075                           postinc2	equ	0xFDE
 29076                           postdec2	equ	0xFDD
 29077                           plusw2	equ	0xFDB
 29078                           fsr2h	equ	0xFDA
 29079                           fsr2l	equ	0xFD9
 29080                           status	equ	0xFD8
 29081                           
 29082 ;; *************** function _TMR6_SetInterruptHandler *****************
 29083 ;; Defined at:
 29084 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 29085 ;; Parameters:    Size  Location     Type
 29086 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 29087 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 29088 ;; Auto vars:     Size  Location     Type
 29089 ;;		None
 29090 ;; Return value:  Size  Location     Type
 29091 ;;                  1    wreg      void 
 29092 ;; Registers used:
 29093 ;;		wreg, status,2, status,0
 29094 ;; Tracked objects:
 29095 ;;		On entry : 0/0
 29096 ;;		On exit  : 0/0
 29097 ;;		Unchanged: 0/0
 29098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29099 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29102 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29103 ;;Total ram usage:        3 bytes
 29104 ;; Hardware stack levels used:    1
 29105 ;; Hardware stack levels required when called:   13
 29106 ;; This function calls:
 29107 ;;		Nothing
 29108 ;; This function is called by:
 29109 ;;		_TMR6_Initialize
 29110 ;;		_main
 29111 ;; This function uses a non-reentrant model
 29112 ;;
 29113                           
 29114                           	psect	text60
 29115  01961E                     __ptext60:
 29116                           	opt stack 0
 29117  01961E                     _TMR6_SetInterruptHandler:
 29118                           	opt stack 17
 29119                           
 29120                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 29121                           
 29122                           ;incstack = 0
 29123  01961E  C117  F234         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 29124  019622  C118  F235         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 29125  019626  C119  F236         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 29126  01962A  0012               	return		;funcret
 29127  01962C                     __end_of_TMR6_SetInterruptHandler:
 29128                           	opt stack 0
 29129                           tblptru	equ	0xFF8
 29130                           tblptrh	equ	0xFF7
 29131                           tblptrl	equ	0xFF6
 29132                           tablat	equ	0xFF5
 29133                           prodh	equ	0xFF4
 29134                           prodl	equ	0xFF3
 29135                           intcon	equ	0xFF2
 29136                           indf0	equ	0xFEF
 29137                           postinc0	equ	0xFEE
 29138                           fsr0h	equ	0xFEA
 29139                           fsr0l	equ	0xFE9
 29140                           wreg	equ	0xFE8
 29141                           indf1	equ	0xFE7
 29142                           postdec1	equ	0xFE5
 29143                           plusw1	equ	0xFE3
 29144                           fsr1h	equ	0xFE2
 29145                           fsr1l	equ	0xFE1
 29146                           indf2	equ	0xFDF
 29147                           postinc2	equ	0xFDE
 29148                           postdec2	equ	0xFDD
 29149                           plusw2	equ	0xFDB
 29150                           fsr2h	equ	0xFDA
 29151                           fsr2l	equ	0xFD9
 29152                           status	equ	0xFD8
 29153                           
 29154 ;; *************** function _TMR5_Initialize *****************
 29155 ;; Defined at:
 29156 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 29157 ;; Parameters:    Size  Location     Type
 29158 ;;		None
 29159 ;; Auto vars:     Size  Location     Type
 29160 ;;		None
 29161 ;; Return value:  Size  Location     Type
 29162 ;;                  1    wreg      void 
 29163 ;; Registers used:
 29164 ;;		wreg, status,2, status,0, cstack
 29165 ;; Tracked objects:
 29166 ;;		On entry : 0/0
 29167 ;;		On exit  : 0/0
 29168 ;;		Unchanged: 0/0
 29169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29172 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29173 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29174 ;;Total ram usage:        2 bytes
 29175 ;; Hardware stack levels used:    1
 29176 ;; Hardware stack levels required when called:   14
 29177 ;; This function calls:
 29178 ;;		_TMR5_SetInterruptHandler
 29179 ;; This function is called by:
 29180 ;;		_SYSTEM_Initialize
 29181 ;; This function uses a non-reentrant model
 29182 ;;
 29183                           
 29184                           	psect	text61
 29185  018CAA                     __ptext61:
 29186                           	opt stack 0
 29187  018CAA                     _TMR5_Initialize:
 29188                           	opt stack 15
 29189                           
 29190                           ;tmr5.c: 69: T5GCON = 0x00;
 29191                           
 29192                           ;incstack = 0
 29193  018CAA  0E00               	movlw	0
 29194  018CAC  6EC4               	movwf	4036,c	;volatile
 29195                           
 29196                           ;tmr5.c: 72: T5GATE = 0x00;
 29197  018CAE  0E00               	movlw	0
 29198  018CB0  6EC5               	movwf	4037,c	;volatile
 29199                           
 29200                           ;tmr5.c: 75: T5CLK = 0x01;
 29201  018CB2  0E01               	movlw	1
 29202  018CB4  6EC6               	movwf	4038,c	;volatile
 29203                           
 29204                           ;tmr5.c: 78: TMR5H = 0x00;
 29205  018CB6  0E00               	movlw	0
 29206  018CB8  6EC2               	movwf	4034,c	;volatile
 29207                           
 29208                           ;tmr5.c: 81: TMR5L = 0x00;
 29209  018CBA  0E00               	movlw	0
 29210  018CBC  6EC1               	movwf	4033,c	;volatile
 29211                           
 29212                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 29213  018CBE  50C1               	movf	4033,w,c	;volatile
 29214  018CC0  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 29215  018CC4  0101               	movlb	1	; () banked
 29216  018CC6  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 29217  018CC8  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 29218  018CCC  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 29219  018CCE  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 29220  018CD0  0102               	movlb	2	; () banked
 29221  018CD2  6F3F               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 29222  018CD4  0101               	movlb	1	; () banked
 29223  018CD6  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 29224  018CD8  0102               	movlb	2	; () banked
 29225  018CDA  6F40               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 29226                           
 29227                           ; BSR set to: 2
 29228                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 29229  018CDC  010E               	movlb	14	; () banked
 29230  018CDE  9938               	bcf	56,4,b	;volatile
 29231                           
 29232                           ; BSR set to: 14
 29233                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 29234  018CE0  892E               	bsf	46,4,b	;volatile
 29235                           
 29236                           ; BSR set to: 14
 29237                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 29238  018CE2  0EE8               	movlw	low _TMR5_DefaultInterruptHandler
 29239  018CE4  0101               	movlb	1	; () banked
 29240  018CE6  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 29241  018CE8  0E96               	movlw	high _TMR5_DefaultInterruptHandler
 29242  018CEA  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 29243  018CEC  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29244  018CEE  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 29245  018CF0  EC16  F0CB         	call	_TMR5_SetInterruptHandler	;wreg free
 29246                           
 29247                           ;tmr5.c: 96: T5CON = 0x13;
 29248  018CF4  0E13               	movlw	19
 29249  018CF6  6EC3               	movwf	4035,c	;volatile
 29250  018CF8  0012               	return		;funcret
 29251  018CFA                     __end_of_TMR5_Initialize:
 29252                           	opt stack 0
 29253                           tblptru	equ	0xFF8
 29254                           tblptrh	equ	0xFF7
 29255                           tblptrl	equ	0xFF6
 29256                           tablat	equ	0xFF5
 29257                           prodh	equ	0xFF4
 29258                           prodl	equ	0xFF3
 29259                           intcon	equ	0xFF2
 29260                           indf0	equ	0xFEF
 29261                           postinc0	equ	0xFEE
 29262                           fsr0h	equ	0xFEA
 29263                           fsr0l	equ	0xFE9
 29264                           wreg	equ	0xFE8
 29265                           indf1	equ	0xFE7
 29266                           postdec1	equ	0xFE5
 29267                           plusw1	equ	0xFE3
 29268                           fsr1h	equ	0xFE2
 29269                           fsr1l	equ	0xFE1
 29270                           indf2	equ	0xFDF
 29271                           postinc2	equ	0xFDE
 29272                           postdec2	equ	0xFDD
 29273                           plusw2	equ	0xFDB
 29274                           fsr2h	equ	0xFDA
 29275                           fsr2l	equ	0xFD9
 29276                           status	equ	0xFD8
 29277                           
 29278 ;; *************** function _TMR5_SetInterruptHandler *****************
 29279 ;; Defined at:
 29280 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 29281 ;; Parameters:    Size  Location     Type
 29282 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 29283 ;;		 -> dimmingOnTimeCallback(1), TMR5_DefaultInterruptHandler(1), 
 29284 ;; Auto vars:     Size  Location     Type
 29285 ;;		None
 29286 ;; Return value:  Size  Location     Type
 29287 ;;                  1    wreg      void 
 29288 ;; Registers used:
 29289 ;;		wreg, status,2, status,0
 29290 ;; Tracked objects:
 29291 ;;		On entry : 0/0
 29292 ;;		On exit  : 0/0
 29293 ;;		Unchanged: 0/0
 29294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29295 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29298 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29299 ;;Total ram usage:        3 bytes
 29300 ;; Hardware stack levels used:    1
 29301 ;; Hardware stack levels required when called:   13
 29302 ;; This function calls:
 29303 ;;		Nothing
 29304 ;; This function is called by:
 29305 ;;		_TMR5_Initialize
 29306 ;;		_main
 29307 ;; This function uses a non-reentrant model
 29308 ;;
 29309                           
 29310                           	psect	text62
 29311  01962C                     __ptext62:
 29312                           	opt stack 0
 29313  01962C                     _TMR5_SetInterruptHandler:
 29314                           	opt stack 17
 29315                           
 29316                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 29317                           
 29318                           ;incstack = 0
 29319  01962C  C117  F22B         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 29320  019630  C118  F22C         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 29321  019634  C119  F22D         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 29322  019638  0012               	return		;funcret
 29323  01963A                     __end_of_TMR5_SetInterruptHandler:
 29324                           	opt stack 0
 29325                           tblptru	equ	0xFF8
 29326                           tblptrh	equ	0xFF7
 29327                           tblptrl	equ	0xFF6
 29328                           tablat	equ	0xFF5
 29329                           prodh	equ	0xFF4
 29330                           prodl	equ	0xFF3
 29331                           intcon	equ	0xFF2
 29332                           indf0	equ	0xFEF
 29333                           postinc0	equ	0xFEE
 29334                           fsr0h	equ	0xFEA
 29335                           fsr0l	equ	0xFE9
 29336                           wreg	equ	0xFE8
 29337                           indf1	equ	0xFE7
 29338                           postdec1	equ	0xFE5
 29339                           plusw1	equ	0xFE3
 29340                           fsr1h	equ	0xFE2
 29341                           fsr1l	equ	0xFE1
 29342                           indf2	equ	0xFDF
 29343                           postinc2	equ	0xFDE
 29344                           postdec2	equ	0xFDD
 29345                           plusw2	equ	0xFDB
 29346                           fsr2h	equ	0xFDA
 29347                           fsr2l	equ	0xFD9
 29348                           status	equ	0xFD8
 29349                           
 29350 ;; *************** function _PMD_Initialize *****************
 29351 ;; Defined at:
 29352 ;;		line 84 in file "mcc_generated_files/mcc.c"
 29353 ;; Parameters:    Size  Location     Type
 29354 ;;		None
 29355 ;; Auto vars:     Size  Location     Type
 29356 ;;		None
 29357 ;; Return value:  Size  Location     Type
 29358 ;;                  1    wreg      void 
 29359 ;; Registers used:
 29360 ;;		wreg, status,2
 29361 ;; Tracked objects:
 29362 ;;		On entry : 0/0
 29363 ;;		On exit  : 0/0
 29364 ;;		Unchanged: 0/0
 29365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29370 ;;Total ram usage:        0 bytes
 29371 ;; Hardware stack levels used:    1
 29372 ;; Hardware stack levels required when called:   13
 29373 ;; This function calls:
 29374 ;;		Nothing
 29375 ;; This function is called by:
 29376 ;;		_SYSTEM_Initialize
 29377 ;; This function uses a non-reentrant model
 29378 ;;
 29379                           
 29380                           	psect	text63
 29381  0194C0                     __ptext63:
 29382                           	opt stack 0
 29383  0194C0                     _PMD_Initialize:
 29384                           	opt stack 16
 29385                           
 29386                           ;mcc.c: 87: PMD0 = 0x00;
 29387                           
 29388                           ;incstack = 0
 29389  0194C0  0E00               	movlw	0
 29390  0194C2  010E               	movlb	14	; () banked
 29391  0194C4  6F4C               	movwf	76,b	;volatile
 29392                           
 29393                           ;mcc.c: 89: PMD1 = 0x00;
 29394  0194C6  0E00               	movlw	0
 29395  0194C8  6F4D               	movwf	77,b	;volatile
 29396                           
 29397                           ;mcc.c: 91: PMD2 = 0x00;
 29398  0194CA  0E00               	movlw	0
 29399  0194CC  6F4E               	movwf	78,b	;volatile
 29400                           
 29401                           ;mcc.c: 93: PMD3 = 0x00;
 29402  0194CE  0E00               	movlw	0
 29403  0194D0  6F4F               	movwf	79,b	;volatile
 29404                           
 29405                           ;mcc.c: 95: PMD4 = 0x00;
 29406  0194D2  0E00               	movlw	0
 29407  0194D4  6F50               	movwf	80,b	;volatile
 29408                           
 29409                           ;mcc.c: 97: PMD5 = 0x00;
 29410  0194D6  0E00               	movlw	0
 29411  0194D8  6F51               	movwf	81,b	;volatile
 29412                           
 29413                           ; BSR set to: 14
 29414  0194DA  0012               	return		;funcret
 29415  0194DC                     __end_of_PMD_Initialize:
 29416                           	opt stack 0
 29417                           tblptru	equ	0xFF8
 29418                           tblptrh	equ	0xFF7
 29419                           tblptrl	equ	0xFF6
 29420                           tablat	equ	0xFF5
 29421                           prodh	equ	0xFF4
 29422                           prodl	equ	0xFF3
 29423                           intcon	equ	0xFF2
 29424                           indf0	equ	0xFEF
 29425                           postinc0	equ	0xFEE
 29426                           fsr0h	equ	0xFEA
 29427                           fsr0l	equ	0xFE9
 29428                           wreg	equ	0xFE8
 29429                           indf1	equ	0xFE7
 29430                           postdec1	equ	0xFE5
 29431                           plusw1	equ	0xFE3
 29432                           fsr1h	equ	0xFE2
 29433                           fsr1l	equ	0xFE1
 29434                           indf2	equ	0xFDF
 29435                           postinc2	equ	0xFDE
 29436                           postdec2	equ	0xFDD
 29437                           plusw2	equ	0xFDB
 29438                           fsr2h	equ	0xFDA
 29439                           fsr2l	equ	0xFD9
 29440                           status	equ	0xFD8
 29441                           
 29442 ;; *************** function _PIN_MANAGER_Initialize *****************
 29443 ;; Defined at:
 29444 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29445 ;; Parameters:    Size  Location     Type
 29446 ;;		None
 29447 ;; Auto vars:     Size  Location     Type
 29448 ;;		None
 29449 ;; Return value:  Size  Location     Type
 29450 ;;                  1    wreg      void 
 29451 ;; Registers used:
 29452 ;;		wreg, status,2
 29453 ;; Tracked objects:
 29454 ;;		On entry : 0/0
 29455 ;;		On exit  : 0/0
 29456 ;;		Unchanged: 0/0
 29457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29462 ;;Total ram usage:        0 bytes
 29463 ;; Hardware stack levels used:    1
 29464 ;; Hardware stack levels required when called:   13
 29465 ;; This function calls:
 29466 ;;		Nothing
 29467 ;; This function is called by:
 29468 ;;		_SYSTEM_Initialize
 29469 ;; This function uses a non-reentrant model
 29470 ;;
 29471                           
 29472                           	psect	text64
 29473  0181AA                     __ptext64:
 29474                           	opt stack 0
 29475  0181AA                     _PIN_MANAGER_Initialize:
 29476                           	opt stack 16
 29477                           
 29478                           ;pin_manager.c: 62: LATE = 0x00;
 29479                           
 29480                           ; BSR set to: 14
 29481                           ;incstack = 0
 29482  0181AA  0E00               	movlw	0
 29483  0181AC  6E7D               	movwf	3965,c	;volatile
 29484                           
 29485                           ;pin_manager.c: 63: LATD = 0x00;
 29486  0181AE  0E00               	movlw	0
 29487  0181B0  6E7C               	movwf	3964,c	;volatile
 29488                           
 29489                           ;pin_manager.c: 64: LATA = 0x00;
 29490  0181B2  0E00               	movlw	0
 29491  0181B4  6E79               	movwf	3961,c	;volatile
 29492                           
 29493                           ;pin_manager.c: 65: LATF = 0x00;
 29494  0181B6  0E00               	movlw	0
 29495  0181B8  6E7E               	movwf	3966,c	;volatile
 29496                           
 29497                           ;pin_manager.c: 66: LATB = 0x00;
 29498  0181BA  0E00               	movlw	0
 29499  0181BC  6E7A               	movwf	3962,c	;volatile
 29500                           
 29501                           ;pin_manager.c: 67: LATG = 0x00;
 29502  0181BE  0E00               	movlw	0
 29503  0181C0  6E7F               	movwf	3967,c	;volatile
 29504                           
 29505                           ;pin_manager.c: 68: LATC = 0x00;
 29506  0181C2  0E00               	movlw	0
 29507  0181C4  6E7B               	movwf	3963,c	;volatile
 29508                           
 29509                           ;pin_manager.c: 69: LATH = 0x00;
 29510  0181C6  0E00               	movlw	0
 29511  0181C8  6E80               	movwf	3968,c	;volatile
 29512                           
 29513                           ;pin_manager.c: 74: TRISE = 0xFF;
 29514  0181CA  6885               	setf	3973,c	;volatile
 29515                           
 29516                           ;pin_manager.c: 75: TRISF = 0xF0;
 29517  0181CC  0EF0               	movlw	240
 29518  0181CE  6E86               	movwf	3974,c	;volatile
 29519                           
 29520                           ;pin_manager.c: 76: TRISA = 0xFF;
 29521  0181D0  6881               	setf	3969,c	;volatile
 29522                           
 29523                           ;pin_manager.c: 77: TRISG = 0x5C;
 29524  0181D2  0E5C               	movlw	92
 29525  0181D4  6E87               	movwf	3975,c	;volatile
 29526                           
 29527                           ;pin_manager.c: 78: TRISB = 0xFF;
 29528  0181D6  6882               	setf	3970,c	;volatile
 29529                           
 29530                           ;pin_manager.c: 79: TRISH = 0x0F;
 29531  0181D8  0E0F               	movlw	15
 29532  0181DA  6E88               	movwf	3976,c	;volatile
 29533                           
 29534                           ;pin_manager.c: 80: TRISC = 0xFF;
 29535  0181DC  6883               	setf	3971,c	;volatile
 29536                           
 29537                           ;pin_manager.c: 81: TRISD = 0xFF;
 29538  0181DE  6884               	setf	3972,c	;volatile
 29539                           
 29540                           ;pin_manager.c: 86: ANSELD = 0xFF;
 29541  0181E0  010E               	movlb	14	; () banked
 29542  0181E2  69A7               	setf	167,b	;volatile
 29543                           
 29544                           ; BSR set to: 14
 29545                           ;pin_manager.c: 87: ANSELB = 0xFF;
 29546  0181E4  699A               	setf	154,b	;volatile
 29547                           
 29548                           ; BSR set to: 14
 29549                           ;pin_manager.c: 88: ANSELE = 0xFF;
 29550  0181E6  69AF               	setf	175,b	;volatile
 29551                           
 29552                           ;pin_manager.c: 89: ANSELG = 0x3C;
 29553  0181E8  0E3C               	movlw	60
 29554  0181EA  6FBC               	movwf	188,b	;volatile
 29555                           
 29556                           ;pin_manager.c: 90: ANSELF = 0xF0;
 29557  0181EC  0EF0               	movlw	240
 29558  0181EE  6FB4               	movwf	180,b	;volatile
 29559                           
 29560                           ;pin_manager.c: 91: ANSELA = 0xDF;
 29561  0181F0  0EDF               	movlw	223
 29562  0181F2  6F92               	movwf	146,b	;volatile
 29563                           
 29564                           ;pin_manager.c: 96: WPUD = 0x00;
 29565  0181F4  0E00               	movlw	0
 29566  0181F6  6FA6               	movwf	166,b	;volatile
 29567                           
 29568                           ;pin_manager.c: 97: WPUF = 0x00;
 29569  0181F8  0E00               	movlw	0
 29570  0181FA  6FB3               	movwf	179,b	;volatile
 29571                           
 29572                           ;pin_manager.c: 98: WPUE = 0x00;
 29573  0181FC  0E00               	movlw	0
 29574  0181FE  6FAE               	movwf	174,b	;volatile
 29575                           
 29576                           ;pin_manager.c: 99: WPUB = 0x00;
 29577  018200  0E00               	movlw	0
 29578  018202  6F99               	movwf	153,b	;volatile
 29579                           
 29580                           ;pin_manager.c: 100: WPUG = 0x00;
 29581  018204  0E00               	movlw	0
 29582  018206  6FBB               	movwf	187,b	;volatile
 29583                           
 29584                           ;pin_manager.c: 101: WPUA = 0x00;
 29585  018208  0E00               	movlw	0
 29586  01820A  6F91               	movwf	145,b	;volatile
 29587                           
 29588                           ;pin_manager.c: 102: WPUC = 0x00;
 29589  01820C  0E00               	movlw	0
 29590  01820E  6FA1               	movwf	161,b	;volatile
 29591                           
 29592                           ;pin_manager.c: 103: WPUH = 0x00;
 29593  018210  0E00               	movlw	0
 29594  018212  6FC0               	movwf	192,b	;volatile
 29595                           
 29596                           ;pin_manager.c: 108: ODCONE = 0x00;
 29597  018214  0E00               	movlw	0
 29598  018216  6FAD               	movwf	173,b	;volatile
 29599                           
 29600                           ;pin_manager.c: 109: ODCONF = 0x01;
 29601  018218  0E01               	movlw	1
 29602  01821A  6FB2               	movwf	178,b	;volatile
 29603                           
 29604                           ;pin_manager.c: 110: ODCONA = 0x00;
 29605  01821C  0E00               	movlw	0
 29606  01821E  6F90               	movwf	144,b	;volatile
 29607                           
 29608                           ;pin_manager.c: 111: ODCONG = 0x00;
 29609  018220  0E00               	movlw	0
 29610  018222  6FBA               	movwf	186,b	;volatile
 29611                           
 29612                           ;pin_manager.c: 112: ODCONB = 0x00;
 29613  018224  0E00               	movlw	0
 29614  018226  6F98               	movwf	152,b	;volatile
 29615                           
 29616                           ;pin_manager.c: 113: ODCONH = 0x00;
 29617  018228  0E00               	movlw	0
 29618  01822A  6FBF               	movwf	191,b	;volatile
 29619                           
 29620                           ;pin_manager.c: 114: ODCONC = 0x00;
 29621  01822C  0E00               	movlw	0
 29622  01822E  6FA0               	movwf	160,b	;volatile
 29623                           
 29624                           ;pin_manager.c: 115: ODCOND = 0x00;
 29625  018230  0E00               	movlw	0
 29626  018232  6FA5               	movwf	165,b	;volatile
 29627                           
 29628                           ; BSR set to: 14
 29629                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 29630  018234  698F               	setf	143,b	;volatile
 29631                           
 29632                           ; BSR set to: 14
 29633                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 29634  018236  6997               	setf	151,b	;volatile
 29635                           
 29636                           ; BSR set to: 14
 29637                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 29638  018238  699F               	setf	159,b	;volatile
 29639                           
 29640                           ; BSR set to: 14
 29641                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 29642  01823A  69A4               	setf	164,b	;volatile
 29643                           
 29644                           ; BSR set to: 14
 29645                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 29646  01823C  69AC               	setf	172,b	;volatile
 29647                           
 29648                           ; BSR set to: 14
 29649                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 29650  01823E  69B1               	setf	177,b	;volatile
 29651                           
 29652                           ; BSR set to: 14
 29653                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 29654  018240  69B9               	setf	185,b	;volatile
 29655                           
 29656                           ; BSR set to: 14
 29657                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 29658  018242  69BE               	setf	190,b	;volatile
 29659                           
 29660                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 29661  018244  0E0E               	movlw	14
 29662  018246  6F89               	movwf	137,b	;volatile
 29663                           
 29664                           ;pin_manager.c: 137: INT0PPS = 0x05;
 29665  018248  0E05               	movlw	5
 29666  01824A  010D               	movlb	13	; () banked
 29667  01824C  6FF0               	movwf	240,b	;volatile
 29668                           
 29669                           ;pin_manager.c: 138: RX2PPS = 0x36;
 29670  01824E  0E36               	movlw	54
 29671  018250  010E               	movlb	14	; () banked
 29672  018252  6F11               	movwf	17,b	;volatile
 29673                           
 29674                           ; BSR set to: 14
 29675  018254  0012               	return		;funcret
 29676  018256                     __end_of_PIN_MANAGER_Initialize:
 29677                           	opt stack 0
 29678                           tblptru	equ	0xFF8
 29679                           tblptrh	equ	0xFF7
 29680                           tblptrl	equ	0xFF6
 29681                           tablat	equ	0xFF5
 29682                           prodh	equ	0xFF4
 29683                           prodl	equ	0xFF3
 29684                           intcon	equ	0xFF2
 29685                           indf0	equ	0xFEF
 29686                           postinc0	equ	0xFEE
 29687                           fsr0h	equ	0xFEA
 29688                           fsr0l	equ	0xFE9
 29689                           wreg	equ	0xFE8
 29690                           indf1	equ	0xFE7
 29691                           postdec1	equ	0xFE5
 29692                           plusw1	equ	0xFE3
 29693                           fsr1h	equ	0xFE2
 29694                           fsr1l	equ	0xFE1
 29695                           indf2	equ	0xFDF
 29696                           postinc2	equ	0xFDE
 29697                           postdec2	equ	0xFDD
 29698                           plusw2	equ	0xFDB
 29699                           fsr2h	equ	0xFDA
 29700                           fsr2l	equ	0xFD9
 29701                           status	equ	0xFD8
 29702                           
 29703 ;; *************** function _OSCILLATOR_Initialize *****************
 29704 ;; Defined at:
 29705 ;;		line 66 in file "mcc_generated_files/mcc.c"
 29706 ;; Parameters:    Size  Location     Type
 29707 ;;		None
 29708 ;; Auto vars:     Size  Location     Type
 29709 ;;		None
 29710 ;; Return value:  Size  Location     Type
 29711 ;;                  1    wreg      void 
 29712 ;; Registers used:
 29713 ;;		wreg, status,2
 29714 ;; Tracked objects:
 29715 ;;		On entry : 0/0
 29716 ;;		On exit  : 0/0
 29717 ;;		Unchanged: 0/0
 29718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29723 ;;Total ram usage:        0 bytes
 29724 ;; Hardware stack levels used:    1
 29725 ;; Hardware stack levels required when called:   13
 29726 ;; This function calls:
 29727 ;;		Nothing
 29728 ;; This function is called by:
 29729 ;;		_SYSTEM_Initialize
 29730 ;; This function uses a non-reentrant model
 29731 ;;
 29732                           
 29733                           	psect	text65
 29734  0194DC                     __ptext65:
 29735                           	opt stack 0
 29736  0194DC                     _OSCILLATOR_Initialize:
 29737                           	opt stack 16
 29738                           
 29739                           ;mcc.c: 69: OSCCON1 = 0x20;
 29740                           
 29741                           ; BSR set to: 14
 29742                           ;incstack = 0
 29743  0194DC  0E20               	movlw	32
 29744  0194DE  010E               	movlb	14	; () banked
 29745  0194E0  6F43               	movwf	67,b	;volatile
 29746                           
 29747                           ;mcc.c: 71: OSCCON3 = 0x00;
 29748  0194E2  0E00               	movlw	0
 29749  0194E4  6F45               	movwf	69,b	;volatile
 29750                           
 29751                           ;mcc.c: 73: OSCEN = 0x00;
 29752  0194E6  0E00               	movlw	0
 29753  0194E8  6F47               	movwf	71,b	;volatile
 29754                           
 29755                           ;mcc.c: 75: OSCFRQ = 0x02;
 29756  0194EA  0E02               	movlw	2
 29757  0194EC  6F49               	movwf	73,b	;volatile
 29758                           
 29759                           ;mcc.c: 77: OSCTUNE = 0x00;
 29760  0194EE  0E00               	movlw	0
 29761  0194F0  6F48               	movwf	72,b	;volatile
 29762  0194F2                     
 29763                           ; BSR set to: 14
 29764                           
 29765                           ; BSR set to: 14
 29766                           ;mcc.c: 80: {
 29767  0194F2  B146               	btfsc	70,0,b	;volatile
 29768  0194F4  0012               	return	
 29769  0194F6  D7FD               	goto	l59
 29770  0194F8                     __end_of_OSCILLATOR_Initialize:
 29771                           	opt stack 0
 29772                           tblptru	equ	0xFF8
 29773                           tblptrh	equ	0xFF7
 29774                           tblptrl	equ	0xFF6
 29775                           tablat	equ	0xFF5
 29776                           prodh	equ	0xFF4
 29777                           prodl	equ	0xFF3
 29778                           intcon	equ	0xFF2
 29779                           indf0	equ	0xFEF
 29780                           postinc0	equ	0xFEE
 29781                           fsr0h	equ	0xFEA
 29782                           fsr0l	equ	0xFE9
 29783                           wreg	equ	0xFE8
 29784                           indf1	equ	0xFE7
 29785                           postdec1	equ	0xFE5
 29786                           plusw1	equ	0xFE3
 29787                           fsr1h	equ	0xFE2
 29788                           fsr1l	equ	0xFE1
 29789                           indf2	equ	0xFDF
 29790                           postinc2	equ	0xFDE
 29791                           postdec2	equ	0xFDD
 29792                           plusw2	equ	0xFDB
 29793                           fsr2h	equ	0xFDA
 29794                           fsr2l	equ	0xFD9
 29795                           status	equ	0xFD8
 29796                           
 29797 ;; *************** function _INTERRUPT_Initialize *****************
 29798 ;; Defined at:
 29799 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 29800 ;; Parameters:    Size  Location     Type
 29801 ;;		None
 29802 ;; Auto vars:     Size  Location     Type
 29803 ;;		None
 29804 ;; Return value:  Size  Location     Type
 29805 ;;                  1    wreg      void 
 29806 ;; Registers used:
 29807 ;;		None
 29808 ;; Tracked objects:
 29809 ;;		On entry : 0/0
 29810 ;;		On exit  : 0/0
 29811 ;;		Unchanged: 0/0
 29812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29817 ;;Total ram usage:        0 bytes
 29818 ;; Hardware stack levels used:    1
 29819 ;; Hardware stack levels required when called:   13
 29820 ;; This function calls:
 29821 ;;		Nothing
 29822 ;; This function is called by:
 29823 ;;		_SYSTEM_Initialize
 29824 ;; This function uses a non-reentrant model
 29825 ;;
 29826                           
 29827                           	psect	text66
 29828  019560                     __ptext66:
 29829                           	opt stack 0
 29830  019560                     _INTERRUPT_Initialize:
 29831                           	opt stack 16
 29832                           
 29833                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 29834                           
 29835                           ; BSR set to: 14
 29836                           ;incstack = 0
 29837  019560  8AF2               	bsf	intcon,5,c	;volatile
 29838                           
 29839                           ;interrupt_manager.c: 60: IPR2bits.HLVDIP = 1;
 29840  019562  010E               	movlb	14	; () banked
 29841  019564  8F21               	bsf	33,7,b	;volatile
 29842                           
 29843                           ;interrupt_manager.c: 63: IPR0bits.INT0IP = 1;
 29844  019566  811F               	bsf	31,0,b	;volatile
 29845                           
 29846                           ;interrupt_manager.c: 66: IPR3bits.RC2IP = 1;
 29847  019568  8F22               	bsf	34,7,b	;volatile
 29848                           
 29849                           ;interrupt_manager.c: 69: IPR5bits.TMR5IP = 1;
 29850  01956A  8924               	bsf	36,4,b	;volatile
 29851                           
 29852                           ;interrupt_manager.c: 72: IPR1bits.ADTIP = 1;
 29853  01956C  8320               	bsf	32,1,b	;volatile
 29854                           
 29855                           ;interrupt_manager.c: 76: IPR5bits.TMR6IP = 0;
 29856  01956E  9B24               	bcf	36,5,b	;volatile
 29857                           
 29858                           ;interrupt_manager.c: 79: IPR3bits.TX2IP = 0;
 29859  019570  9D22               	bcf	34,6,b	;volatile
 29860                           
 29861                           ;interrupt_manager.c: 82: IPR5bits.TMR7IP = 0;
 29862  019572  9D24               	bcf	36,6,b	;volatile
 29863                           
 29864                           ; BSR set to: 14
 29865  019574  0012               	return		;funcret
 29866  019576                     __end_of_INTERRUPT_Initialize:
 29867                           	opt stack 0
 29868                           tblptru	equ	0xFF8
 29869                           tblptrh	equ	0xFF7
 29870                           tblptrl	equ	0xFF6
 29871                           tablat	equ	0xFF5
 29872                           prodh	equ	0xFF4
 29873                           prodl	equ	0xFF3
 29874                           intcon	equ	0xFF2
 29875                           indf0	equ	0xFEF
 29876                           postinc0	equ	0xFEE
 29877                           fsr0h	equ	0xFEA
 29878                           fsr0l	equ	0xFE9
 29879                           wreg	equ	0xFE8
 29880                           indf1	equ	0xFE7
 29881                           postdec1	equ	0xFE5
 29882                           plusw1	equ	0xFE3
 29883                           fsr1h	equ	0xFE2
 29884                           fsr1l	equ	0xFE1
 29885                           indf2	equ	0xFDF
 29886                           postinc2	equ	0xFDE
 29887                           postdec2	equ	0xFDD
 29888                           plusw2	equ	0xFDB
 29889                           fsr2h	equ	0xFDA
 29890                           fsr2l	equ	0xFD9
 29891                           status	equ	0xFD8
 29892                           
 29893 ;; *************** function _HLVD_Initialize *****************
 29894 ;; Defined at:
 29895 ;;		line 60 in file "mcc_generated_files/hlvd.c"
 29896 ;; Parameters:    Size  Location     Type
 29897 ;;		None
 29898 ;; Auto vars:     Size  Location     Type
 29899 ;;		None
 29900 ;; Return value:  Size  Location     Type
 29901 ;;                  1    wreg      void 
 29902 ;; Registers used:
 29903 ;;		wreg, status,2
 29904 ;; Tracked objects:
 29905 ;;		On entry : 0/0
 29906 ;;		On exit  : 0/0
 29907 ;;		Unchanged: 0/0
 29908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29913 ;;Total ram usage:        0 bytes
 29914 ;; Hardware stack levels used:    1
 29915 ;; Hardware stack levels required when called:   13
 29916 ;; This function calls:
 29917 ;;		Nothing
 29918 ;; This function is called by:
 29919 ;;		_SYSTEM_Initialize
 29920 ;; This function uses a non-reentrant model
 29921 ;;
 29922                           
 29923                           	psect	text67
 29924  0195F2                     __ptext67:
 29925                           	opt stack 0
 29926  0195F2                     _HLVD_Initialize:
 29927                           	opt stack 16
 29928                           
 29929                           ;hlvd.c: 64: HLVDCON1 = 0x07;
 29930                           
 29931                           ; BSR set to: 14
 29932                           ;incstack = 0
 29933  0195F2  0E07               	movlw	7
 29934  0195F4  010E               	movlb	14	; () banked
 29935  0195F6  6FC3               	movwf	195,b	;volatile
 29936                           
 29937                           ;hlvd.c: 66: HLVDCON0 = 0x81;
 29938  0195F8  0E81               	movlw	129
 29939  0195FA  6FC2               	movwf	194,b	;volatile
 29940                           
 29941                           ; BSR set to: 14
 29942                           ;hlvd.c: 68: PIR2bits.HLVDIF = 0;
 29943  0195FC  9F35               	bcf	53,7,b	;volatile
 29944                           
 29945                           ; BSR set to: 14
 29946                           ;hlvd.c: 70: PIE2bits.HLVDIE = 1;
 29947  0195FE  8F2B               	bsf	43,7,b	;volatile
 29948                           
 29949                           ; BSR set to: 14
 29950  019600  0012               	return		;funcret
 29951  019602                     __end_of_HLVD_Initialize:
 29952                           	opt stack 0
 29953                           tblptru	equ	0xFF8
 29954                           tblptrh	equ	0xFF7
 29955                           tblptrl	equ	0xFF6
 29956                           tablat	equ	0xFF5
 29957                           prodh	equ	0xFF4
 29958                           prodl	equ	0xFF3
 29959                           intcon	equ	0xFF2
 29960                           indf0	equ	0xFEF
 29961                           postinc0	equ	0xFEE
 29962                           fsr0h	equ	0xFEA
 29963                           fsr0l	equ	0xFE9
 29964                           wreg	equ	0xFE8
 29965                           indf1	equ	0xFE7
 29966                           postdec1	equ	0xFE5
 29967                           plusw1	equ	0xFE3
 29968                           fsr1h	equ	0xFE2
 29969                           fsr1l	equ	0xFE1
 29970                           indf2	equ	0xFDF
 29971                           postinc2	equ	0xFDE
 29972                           postdec2	equ	0xFDD
 29973                           plusw2	equ	0xFDB
 29974                           fsr2h	equ	0xFDA
 29975                           fsr2l	equ	0xFD9
 29976                           status	equ	0xFD8
 29977                           
 29978 ;; *************** function _FVR_Initialize *****************
 29979 ;; Defined at:
 29980 ;;		line 58 in file "mcc_generated_files/fvr.c"
 29981 ;; Parameters:    Size  Location     Type
 29982 ;;		None
 29983 ;; Auto vars:     Size  Location     Type
 29984 ;;		None
 29985 ;; Return value:  Size  Location     Type
 29986 ;;                  1    wreg      void 
 29987 ;; Registers used:
 29988 ;;		wreg, status,2
 29989 ;; Tracked objects:
 29990 ;;		On entry : 0/0
 29991 ;;		On exit  : 0/0
 29992 ;;		Unchanged: 0/0
 29993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29998 ;;Total ram usage:        0 bytes
 29999 ;; Hardware stack levels used:    1
 30000 ;; Hardware stack levels required when called:   13
 30001 ;; This function calls:
 30002 ;;		Nothing
 30003 ;; This function is called by:
 30004 ;;		_SYSTEM_Initialize
 30005 ;; This function uses a non-reentrant model
 30006 ;;
 30007                           
 30008                           	psect	text68
 30009  0196AC                     __ptext68:
 30010                           	opt stack 0
 30011  0196AC                     _FVR_Initialize:
 30012                           	opt stack 16
 30013                           
 30014                           ;fvr.c: 61: FVRCON = 0xA6;
 30015                           
 30016                           ; BSR set to: 14
 30017                           ;incstack = 0
 30018  0196AC  0EA6               	movlw	166
 30019  0196AE  010E               	movlb	14	; () banked
 30020  0196B0  6FC4               	movwf	196,b	;volatile
 30021                           
 30022                           ; BSR set to: 14
 30023  0196B2  0012               	return		;funcret
 30024  0196B4                     __end_of_FVR_Initialize:
 30025                           	opt stack 0
 30026                           tblptru	equ	0xFF8
 30027                           tblptrh	equ	0xFF7
 30028                           tblptrl	equ	0xFF6
 30029                           tablat	equ	0xFF5
 30030                           prodh	equ	0xFF4
 30031                           prodl	equ	0xFF3
 30032                           intcon	equ	0xFF2
 30033                           indf0	equ	0xFEF
 30034                           postinc0	equ	0xFEE
 30035                           fsr0h	equ	0xFEA
 30036                           fsr0l	equ	0xFE9
 30037                           wreg	equ	0xFE8
 30038                           indf1	equ	0xFE7
 30039                           postdec1	equ	0xFE5
 30040                           plusw1	equ	0xFE3
 30041                           fsr1h	equ	0xFE2
 30042                           fsr1l	equ	0xFE1
 30043                           indf2	equ	0xFDF
 30044                           postinc2	equ	0xFDE
 30045                           postdec2	equ	0xFDD
 30046                           plusw2	equ	0xFDB
 30047                           fsr2h	equ	0xFDA
 30048                           fsr2l	equ	0xFD9
 30049                           status	equ	0xFD8
 30050                           
 30051 ;; *************** function _EXT_INT_Initialize *****************
 30052 ;; Defined at:
 30053 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 30054 ;; Parameters:    Size  Location     Type
 30055 ;;		None
 30056 ;; Auto vars:     Size  Location     Type
 30057 ;;		None
 30058 ;; Return value:  Size  Location     Type
 30059 ;;                  1    wreg      void 
 30060 ;; Registers used:
 30061 ;;		wreg, status,2, status,0, cstack
 30062 ;; Tracked objects:
 30063 ;;		On entry : 0/0
 30064 ;;		On exit  : 0/0
 30065 ;;		Unchanged: 0/0
 30066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30071 ;;Total ram usage:        0 bytes
 30072 ;; Hardware stack levels used:    1
 30073 ;; Hardware stack levels required when called:   14
 30074 ;; This function calls:
 30075 ;;		_INT0_SetInterruptHandler
 30076 ;; This function is called by:
 30077 ;;		_SYSTEM_Initialize
 30078 ;; This function uses a non-reentrant model
 30079 ;;
 30080                           
 30081                           	psect	text69
 30082  019484                     __ptext69:
 30083                           	opt stack 0
 30084  019484                     _EXT_INT_Initialize:
 30085                           	opt stack 15
 30086                           
 30087                           ;ext_int.c: 64: (PIR0bits.INT0IF = 0);
 30088                           
 30089                           ; BSR set to: 14
 30090                           ;incstack = 0
 30091  019484  010E               	movlb	14	; () banked
 30092  019486  9133               	bcf	51,0,b	;volatile
 30093                           
 30094                           ;ext_int.c: 65: (INTCONbits.INT0EDG = 1);
 30095  019488  80F2               	bsf	intcon,0,c	;volatile
 30096                           
 30097                           ; BSR set to: 14
 30098                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 30099  01948A  0EEA               	movlw	low _INT0_DefaultInterruptHandler
 30100  01948C  0101               	movlb	1	; () banked
 30101  01948E  6F17               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 30102  019490  0E96               	movlw	high _INT0_DefaultInterruptHandler
 30103  019492  6F18               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 30104  019494  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30105  019496  6F19               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 30106  019498  EC1D  F0CB         	call	_INT0_SetInterruptHandler	;wreg free
 30107                           
 30108                           ;ext_int.c: 68: (PIE0bits.INT0IE = 1);
 30109  01949C  010E               	movlb	14	; () banked
 30110  01949E  8129               	bsf	41,0,b	;volatile
 30111                           
 30112                           ; BSR set to: 14
 30113  0194A0  0012               	return		;funcret
 30114  0194A2                     __end_of_EXT_INT_Initialize:
 30115                           	opt stack 0
 30116                           tblptru	equ	0xFF8
 30117                           tblptrh	equ	0xFF7
 30118                           tblptrl	equ	0xFF6
 30119                           tablat	equ	0xFF5
 30120                           prodh	equ	0xFF4
 30121                           prodl	equ	0xFF3
 30122                           intcon	equ	0xFF2
 30123                           indf0	equ	0xFEF
 30124                           postinc0	equ	0xFEE
 30125                           fsr0h	equ	0xFEA
 30126                           fsr0l	equ	0xFE9
 30127                           wreg	equ	0xFE8
 30128                           indf1	equ	0xFE7
 30129                           postdec1	equ	0xFE5
 30130                           plusw1	equ	0xFE3
 30131                           fsr1h	equ	0xFE2
 30132                           fsr1l	equ	0xFE1
 30133                           indf2	equ	0xFDF
 30134                           postinc2	equ	0xFDE
 30135                           postdec2	equ	0xFDD
 30136                           plusw2	equ	0xFDB
 30137                           fsr2h	equ	0xFDA
 30138                           fsr2l	equ	0xFD9
 30139                           status	equ	0xFD8
 30140                           
 30141 ;; *************** function _INT0_SetInterruptHandler *****************
 30142 ;; Defined at:
 30143 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 30144 ;; Parameters:    Size  Location     Type
 30145 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 30146 ;;		 -> INT0_DefaultInterruptHandler(1), dimmingOffTimeCallback(1), 
 30147 ;; Auto vars:     Size  Location     Type
 30148 ;;		None
 30149 ;; Return value:  Size  Location     Type
 30150 ;;                  1    wreg      void 
 30151 ;; Registers used:
 30152 ;;		wreg, status,2, status,0
 30153 ;; Tracked objects:
 30154 ;;		On entry : 0/0
 30155 ;;		On exit  : 0/0
 30156 ;;		Unchanged: 0/0
 30157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30158 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30161 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30162 ;;Total ram usage:        3 bytes
 30163 ;; Hardware stack levels used:    1
 30164 ;; Hardware stack levels required when called:   13
 30165 ;; This function calls:
 30166 ;;		Nothing
 30167 ;; This function is called by:
 30168 ;;		_main
 30169 ;;		_EXT_INT_Initialize
 30170 ;; This function uses a non-reentrant model
 30171 ;;
 30172                           
 30173                           	psect	text70
 30174  01963A                     __ptext70:
 30175                           	opt stack 0
 30176  01963A                     _INT0_SetInterruptHandler:
 30177                           	opt stack 15
 30178                           
 30179                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
 30180                           
 30181                           ; BSR set to: 14
 30182                           ;incstack = 0
 30183  01963A  C117  F228         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 30184  01963E  C118  F229         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 30185  019642  C119  F22A         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 30186  019646  0012               	return		;funcret
 30187  019648                     __end_of_INT0_SetInterruptHandler:
 30188                           	opt stack 0
 30189                           tblptru	equ	0xFF8
 30190                           tblptrh	equ	0xFF7
 30191                           tblptrl	equ	0xFF6
 30192                           tablat	equ	0xFF5
 30193                           prodh	equ	0xFF4
 30194                           prodl	equ	0xFF3
 30195                           intcon	equ	0xFF2
 30196                           indf0	equ	0xFEF
 30197                           postinc0	equ	0xFEE
 30198                           fsr0h	equ	0xFEA
 30199                           fsr0l	equ	0xFE9
 30200                           wreg	equ	0xFE8
 30201                           indf1	equ	0xFE7
 30202                           postdec1	equ	0xFE5
 30203                           plusw1	equ	0xFE3
 30204                           fsr1h	equ	0xFE2
 30205                           fsr1l	equ	0xFE1
 30206                           indf2	equ	0xFDF
 30207                           postinc2	equ	0xFDE
 30208                           postdec2	equ	0xFDD
 30209                           plusw2	equ	0xFDB
 30210                           fsr2h	equ	0xFDA
 30211                           fsr2l	equ	0xFD9
 30212                           status	equ	0xFD8
 30213                           
 30214 ;; *************** function _EUSART2_Initialize *****************
 30215 ;; Defined at:
 30216 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 30217 ;; Parameters:    Size  Location     Type
 30218 ;;		None
 30219 ;; Auto vars:     Size  Location     Type
 30220 ;;		None
 30221 ;; Return value:  Size  Location     Type
 30222 ;;                  1    wreg      void 
 30223 ;; Registers used:
 30224 ;;		wreg, status,2, status,0, cstack
 30225 ;; Tracked objects:
 30226 ;;		On entry : 0/0
 30227 ;;		On exit  : 0/0
 30228 ;;		Unchanged: 0/0
 30229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30234 ;;Total ram usage:        0 bytes
 30235 ;; Hardware stack levels used:    1
 30236 ;; Hardware stack levels required when called:   14
 30237 ;; This function calls:
 30238 ;;		_EUSART2_SetRxInterruptHandler
 30239 ;;		_EUSART2_SetTxInterruptHandler
 30240 ;; This function is called by:
 30241 ;;		_SYSTEM_Initialize
 30242 ;; This function uses a non-reentrant model
 30243 ;;
 30244                           
 30245                           	psect	text71
 30246  01885A                     __ptext71:
 30247                           	opt stack 0
 30248  01885A                     _EUSART2_Initialize:
 30249                           	opt stack 15
 30250                           
 30251                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 30252                           
 30253                           ;incstack = 0
 30254  01885A  827E               	bsf	3966,1,c	;volatile
 30255                           
 30256                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 30257  01885C  010E               	movlb	14	; () banked
 30258  01885E  9F2C               	bcf	44,7,b	;volatile
 30259                           
 30260                           ; BSR set to: 14
 30261                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 30262  018860  0EFC               	movlw	low _EUSART2_Receive_ISR
 30263  018862  0101               	movlb	1	; () banked
 30264  018864  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 30265  018866  0E80               	movlw	high _EUSART2_Receive_ISR
 30266  018868  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 30267  01886A  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 30268  01886C  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 30269  01886E  EC2B  F0CB         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 30270                           
 30271                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 30272  018872  010E               	movlb	14	; () banked
 30273  018874  9D2C               	bcf	44,6,b	;volatile
 30274                           
 30275                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 30276  018876  0E24               	movlw	low _EUSART2_Transmit_ISR
 30277  018878  0101               	movlb	1	; () banked
 30278  01887A  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 30279  01887C  0E91               	movlw	high _EUSART2_Transmit_ISR
 30280  01887E  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 30281  018880  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 30282  018882  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 30283  018884  EC24  F0CB         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 30284                           
 30285                           ;eusart2.c: 91: BAUD2CON = 0x08;
 30286  018888  0E08               	movlw	8
 30287  01888A  010E               	movlb	14	; () banked
 30288  01888C  6FF7               	movwf	247,b	;volatile
 30289                           
 30290                           ; BSR set to: 14
 30291                           ;eusart2.c: 94: RC2STA = 0x90;
 30292  01888E  0E90               	movlw	144
 30293  018890  6FF5               	movwf	245,b	;volatile
 30294                           
 30295                           ; BSR set to: 14
 30296                           ;eusart2.c: 97: TX2STA = 0x24;
 30297  018892  0E24               	movlw	36
 30298  018894  6FF6               	movwf	246,b	;volatile
 30299                           
 30300                           ; BSR set to: 14
 30301                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 30302  018896  0E8A               	movlw	138
 30303  018898  6FF3               	movwf	243,b	;volatile
 30304                           
 30305                           ; BSR set to: 14
 30306                           ;eusart2.c: 103: SP2BRGH = 0x00;
 30307  01889A  0E00               	movlw	0
 30308  01889C  6FF4               	movwf	244,b	;volatile
 30309                           
 30310                           ; BSR set to: 14
 30311                           ;eusart2.c: 107: eusart2TxHead = 0;
 30312  01889E  0E00               	movlw	0
 30313  0188A0  0101               	movlb	1	; () banked
 30314  0188A2  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 30315                           
 30316                           ; BSR set to: 1
 30317                           ;eusart2.c: 108: eusart2TxTail = 0;
 30318  0188A4  0E00               	movlw	0
 30319  0188A6  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 30320                           
 30321                           ; BSR set to: 1
 30322                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 30323  0188A8  0E80               	movlw	128
 30324  0188AA  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 30325                           
 30326                           ; BSR set to: 1
 30327                           ;eusart2.c: 111: eusart2RxHead = 0;
 30328  0188AC  0E00               	movlw	0
 30329  0188AE  0100               	movlb	0	; () banked
 30330  0188B0  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 30331                           
 30332                           ; BSR set to: 0
 30333                           ;eusart2.c: 112: eusart2RxTail = 0;
 30334  0188B2  0E00               	movlw	0
 30335  0188B4  0101               	movlb	1	; () banked
 30336  0188B6  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 30337                           
 30338                           ; BSR set to: 1
 30339                           ;eusart2.c: 113: eusart2RxCount = 0;
 30340  0188B8  0E00               	movlw	0
 30341  0188BA  6FDF               	movwf	_eusart2RxCount& (0+255),b	;volatile
 30342                           
 30343                           ; BSR set to: 1
 30344                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 30345  0188BC  010E               	movlb	14	; () banked
 30346  0188BE  8F2C               	bsf	44,7,b	;volatile
 30347                           
 30348                           ; BSR set to: 14
 30349                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 30350  0188C0  927E               	bcf	3966,1,c	;volatile
 30351                           
 30352                           ; BSR set to: 14
 30353  0188C2  0012               	return		;funcret
 30354  0188C4                     __end_of_EUSART2_Initialize:
 30355                           	opt stack 0
 30356                           tblptru	equ	0xFF8
 30357                           tblptrh	equ	0xFF7
 30358                           tblptrl	equ	0xFF6
 30359                           tablat	equ	0xFF5
 30360                           prodh	equ	0xFF4
 30361                           prodl	equ	0xFF3
 30362                           intcon	equ	0xFF2
 30363                           indf0	equ	0xFEF
 30364                           postinc0	equ	0xFEE
 30365                           fsr0h	equ	0xFEA
 30366                           fsr0l	equ	0xFE9
 30367                           wreg	equ	0xFE8
 30368                           indf1	equ	0xFE7
 30369                           postdec1	equ	0xFE5
 30370                           plusw1	equ	0xFE3
 30371                           fsr1h	equ	0xFE2
 30372                           fsr1l	equ	0xFE1
 30373                           indf2	equ	0xFDF
 30374                           postinc2	equ	0xFDE
 30375                           postdec2	equ	0xFDD
 30376                           plusw2	equ	0xFDB
 30377                           fsr2h	equ	0xFDA
 30378                           fsr2l	equ	0xFD9
 30379                           status	equ	0xFD8
 30380                           
 30381 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 30382 ;; Defined at:
 30383 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 30384 ;; Parameters:    Size  Location     Type
 30385 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 30386 ;;		 -> EUSART2_Transmit_ISR(1), 
 30387 ;; Auto vars:     Size  Location     Type
 30388 ;;		None
 30389 ;; Return value:  Size  Location     Type
 30390 ;;                  1    wreg      void 
 30391 ;; Registers used:
 30392 ;;		wreg, status,2, status,0
 30393 ;; Tracked objects:
 30394 ;;		On entry : 0/0
 30395 ;;		On exit  : 0/0
 30396 ;;		Unchanged: 0/0
 30397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30398 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30401 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30402 ;;Total ram usage:        3 bytes
 30403 ;; Hardware stack levels used:    1
 30404 ;; Hardware stack levels required when called:   13
 30405 ;; This function calls:
 30406 ;;		Nothing
 30407 ;; This function is called by:
 30408 ;;		_EUSART2_Initialize
 30409 ;; This function uses a non-reentrant model
 30410 ;;
 30411                           
 30412                           	psect	text72
 30413  019648                     __ptext72:
 30414                           	opt stack 0
 30415  019648                     _EUSART2_SetTxInterruptHandler:
 30416                           	opt stack 15
 30417                           
 30418                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 30419                           
 30420                           ; BSR set to: 14
 30421                           ;incstack = 0
 30422  019648  C117  F23A         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 30423  01964C  C118  F23B         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 30424  019650  C119  F23C         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 30425  019654  0012               	return		;funcret
 30426  019656                     __end_of_EUSART2_SetTxInterruptHandler:
 30427                           	opt stack 0
 30428                           tblptru	equ	0xFF8
 30429                           tblptrh	equ	0xFF7
 30430                           tblptrl	equ	0xFF6
 30431                           tablat	equ	0xFF5
 30432                           prodh	equ	0xFF4
 30433                           prodl	equ	0xFF3
 30434                           intcon	equ	0xFF2
 30435                           indf0	equ	0xFEF
 30436                           postinc0	equ	0xFEE
 30437                           fsr0h	equ	0xFEA
 30438                           fsr0l	equ	0xFE9
 30439                           wreg	equ	0xFE8
 30440                           indf1	equ	0xFE7
 30441                           postdec1	equ	0xFE5
 30442                           plusw1	equ	0xFE3
 30443                           fsr1h	equ	0xFE2
 30444                           fsr1l	equ	0xFE1
 30445                           indf2	equ	0xFDF
 30446                           postinc2	equ	0xFDE
 30447                           postdec2	equ	0xFDD
 30448                           plusw2	equ	0xFDB
 30449                           fsr2h	equ	0xFDA
 30450                           fsr2l	equ	0xFD9
 30451                           status	equ	0xFD8
 30452                           
 30453 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 30454 ;; Defined at:
 30455 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 30456 ;; Parameters:    Size  Location     Type
 30457 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 30458 ;;		 -> EUSART2_Receive_ISR(1), 
 30459 ;; Auto vars:     Size  Location     Type
 30460 ;;		None
 30461 ;; Return value:  Size  Location     Type
 30462 ;;                  1    wreg      void 
 30463 ;; Registers used:
 30464 ;;		wreg, status,2, status,0
 30465 ;; Tracked objects:
 30466 ;;		On entry : 0/0
 30467 ;;		On exit  : 0/0
 30468 ;;		Unchanged: 0/0
 30469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30470 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30473 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30474 ;;Total ram usage:        3 bytes
 30475 ;; Hardware stack levels used:    1
 30476 ;; Hardware stack levels required when called:   13
 30477 ;; This function calls:
 30478 ;;		Nothing
 30479 ;; This function is called by:
 30480 ;;		_EUSART2_Initialize
 30481 ;; This function uses a non-reentrant model
 30482 ;;
 30483                           
 30484                           	psect	text73
 30485  019656                     __ptext73:
 30486                           	opt stack 0
 30487  019656                     _EUSART2_SetRxInterruptHandler:
 30488                           	opt stack 15
 30489                           
 30490                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 30491                           
 30492                           ;incstack = 0
 30493  019656  C117  F237         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 30494  01965A  C118  F238         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 30495  01965E  C119  F239         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 30496  019662  0012               	return		;funcret
 30497  019664                     __end_of_EUSART2_SetRxInterruptHandler:
 30498                           	opt stack 0
 30499                           tblptru	equ	0xFF8
 30500                           tblptrh	equ	0xFF7
 30501                           tblptrl	equ	0xFF6
 30502                           tablat	equ	0xFF5
 30503                           prodh	equ	0xFF4
 30504                           prodl	equ	0xFF3
 30505                           intcon	equ	0xFF2
 30506                           indf0	equ	0xFEF
 30507                           postinc0	equ	0xFEE
 30508                           fsr0h	equ	0xFEA
 30509                           fsr0l	equ	0xFE9
 30510                           wreg	equ	0xFE8
 30511                           indf1	equ	0xFE7
 30512                           postdec1	equ	0xFE5
 30513                           plusw1	equ	0xFE3
 30514                           fsr1h	equ	0xFE2
 30515                           fsr1l	equ	0xFE1
 30516                           indf2	equ	0xFDF
 30517                           postinc2	equ	0xFDE
 30518                           postdec2	equ	0xFDD
 30519                           plusw2	equ	0xFDB
 30520                           fsr2h	equ	0xFDA
 30521                           fsr2l	equ	0xFD9
 30522                           status	equ	0xFD8
 30523                           
 30524 ;; *************** function _ADCC_Initialize *****************
 30525 ;; Defined at:
 30526 ;;		line 63 in file "mcc_generated_files/adcc.c"
 30527 ;; Parameters:    Size  Location     Type
 30528 ;;		None
 30529 ;; Auto vars:     Size  Location     Type
 30530 ;;		None
 30531 ;; Return value:  Size  Location     Type
 30532 ;;                  1    wreg      void 
 30533 ;; Registers used:
 30534 ;;		wreg, status,2, status,0, cstack
 30535 ;; Tracked objects:
 30536 ;;		On entry : 0/0
 30537 ;;		On exit  : 0/0
 30538 ;;		Unchanged: 0/0
 30539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30544 ;;Total ram usage:        0 bytes
 30545 ;; Hardware stack levels used:    1
 30546 ;; Hardware stack levels required when called:   14
 30547 ;; This function calls:
 30548 ;;		_ADCC_SetADTIInterruptHandler
 30549 ;; This function is called by:
 30550 ;;		_SYSTEM_Initialize
 30551 ;; This function uses a non-reentrant model
 30552 ;;
 30553                           
 30554                           	psect	text74
 30555  018A5A                     __ptext74:
 30556                           	opt stack 0
 30557  018A5A                     _ADCC_Initialize:
 30558                           	opt stack 15
 30559                           
 30560                           ;adcc.c: 67: ADLTHL = 0x00;
 30561                           
 30562                           ;incstack = 0
 30563  018A5A  0E00               	movlw	0
 30564  018A5C  6E6A               	movwf	3946,c	;volatile
 30565                           
 30566                           ;adcc.c: 69: ADLTHH = 0x00;
 30567  018A5E  0E00               	movlw	0
 30568  018A60  6E6B               	movwf	3947,c	;volatile
 30569                           
 30570                           ;adcc.c: 71: ADUTHL = 0x00;
 30571  018A62  0E00               	movlw	0
 30572  018A64  6E6C               	movwf	3948,c	;volatile
 30573                           
 30574                           ;adcc.c: 73: ADUTHH = 0x00;
 30575  018A66  0E00               	movlw	0
 30576  018A68  6E6D               	movwf	3949,c	;volatile
 30577                           
 30578                           ;adcc.c: 75: ADSTPTL = 0x00;
 30579  018A6A  0E00               	movlw	0
 30580  018A6C  6E68               	movwf	3944,c	;volatile
 30581                           
 30582                           ;adcc.c: 77: ADSTPTH = 0x00;
 30583  018A6E  0E00               	movlw	0
 30584  018A70  6E69               	movwf	3945,c	;volatile
 30585                           
 30586                           ;adcc.c: 79: ADRPT = 0xFF;
 30587  018A72  6866               	setf	3942,c	;volatile
 30588                           
 30589                           ;adcc.c: 81: ADPCH = 0x00;
 30590  018A74  0E00               	movlw	0
 30591  018A76  010F               	movlb	15	; () banked
 30592  018A78  6F5F               	movwf	95,b	;volatile
 30593                           
 30594                           ;adcc.c: 83: ADCAP = 0x00;
 30595  018A7A  0E00               	movlw	0
 30596  018A7C  6F5D               	movwf	93,b	;volatile
 30597                           
 30598                           ;adcc.c: 85: ADCON1 = 0x00;
 30599  018A7E  0E00               	movlw	0
 30600  018A80  6F59               	movwf	89,b	;volatile
 30601                           
 30602                           ;adcc.c: 87: ADCON2 = 0x04;
 30603  018A82  0E04               	movlw	4
 30604  018A84  6F5A               	movwf	90,b	;volatile
 30605                           
 30606                           ;adcc.c: 89: ADCON3 = 0x5F;
 30607  018A86  0E5F               	movlw	95
 30608  018A88  6F5B               	movwf	91,b	;volatile
 30609                           
 30610                           ;adcc.c: 91: ADSTAT = 0x00;
 30611  018A8A  0E00               	movlw	0
 30612  018A8C  6E65               	movwf	3941,c	;volatile
 30613                           
 30614                           ;adcc.c: 93: ADREF = 0x12;
 30615  018A8E  0E12               	movlw	18
 30616  018A90  6F58               	movwf	88,b	;volatile
 30617                           
 30618                           ;adcc.c: 95: ADACT = 0x00;
 30619  018A92  0E00               	movlw	0
 30620  018A94  6F56               	movwf	86,b	;volatile
 30621                           
 30622                           ;adcc.c: 97: ADCLK = 0x1F;
 30623  018A96  0E1F               	movlw	31
 30624  018A98  6F57               	movwf	87,b	;volatile
 30625                           
 30626                           ;adcc.c: 99: ADCON0 = 0xD4;
 30627  018A9A  0ED4               	movlw	212
 30628  018A9C  6E60               	movwf	3936,c	;volatile
 30629                           
 30630                           ; BSR set to: 15
 30631                           ;adcc.c: 101: ADACQ = 0xFF;
 30632  018A9E  695C               	setf	92,b	;volatile
 30633                           
 30634                           ; BSR set to: 15
 30635                           ;adcc.c: 105: PIR1bits.ADTIF = 0;
 30636  018AA0  010E               	movlb	14	; () banked
 30637  018AA2  9334               	bcf	52,1,b	;volatile
 30638                           
 30639                           ; BSR set to: 14
 30640                           ;adcc.c: 107: PIE1bits.ADTIE = 1;
 30641  018AA4  832A               	bsf	42,1,b	;volatile
 30642                           
 30643                           ; BSR set to: 14
 30644                           ;adcc.c: 109: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 30645  018AA6  0EEC               	movlw	low _ADCC_DefaultInterruptHandler
 30646  018AA8  0101               	movlb	1	; () banked
 30647  018AAA  6F17               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 30648  018AAC  0E96               	movlw	high _ADCC_DefaultInterruptHandler
 30649  018AAE  6F18               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 30650  018AB0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30651  018AB2  6F19               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 30652  018AB4  EC32  F0CB         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 30653  018AB8  0012               	return		;funcret
 30654  018ABA                     __end_of_ADCC_Initialize:
 30655                           	opt stack 0
 30656                           tblptru	equ	0xFF8
 30657                           tblptrh	equ	0xFF7
 30658                           tblptrl	equ	0xFF6
 30659                           tablat	equ	0xFF5
 30660                           prodh	equ	0xFF4
 30661                           prodl	equ	0xFF3
 30662                           intcon	equ	0xFF2
 30663                           indf0	equ	0xFEF
 30664                           postinc0	equ	0xFEE
 30665                           fsr0h	equ	0xFEA
 30666                           fsr0l	equ	0xFE9
 30667                           wreg	equ	0xFE8
 30668                           indf1	equ	0xFE7
 30669                           postdec1	equ	0xFE5
 30670                           plusw1	equ	0xFE3
 30671                           fsr1h	equ	0xFE2
 30672                           fsr1l	equ	0xFE1
 30673                           indf2	equ	0xFDF
 30674                           postinc2	equ	0xFDE
 30675                           postdec2	equ	0xFDD
 30676                           plusw2	equ	0xFDB
 30677                           fsr2h	equ	0xFDA
 30678                           fsr2l	equ	0xFD9
 30679                           status	equ	0xFD8
 30680                           
 30681 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 30682 ;; Defined at:
 30683 ;;		line 307 in file "mcc_generated_files/adcc.c"
 30684 ;; Parameters:    Size  Location     Type
 30685 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 30686 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 30687 ;; Auto vars:     Size  Location     Type
 30688 ;;		None
 30689 ;; Return value:  Size  Location     Type
 30690 ;;                  1    wreg      void 
 30691 ;; Registers used:
 30692 ;;		wreg, status,2, status,0
 30693 ;; Tracked objects:
 30694 ;;		On entry : 0/0
 30695 ;;		On exit  : 0/0
 30696 ;;		Unchanged: 0/0
 30697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30698 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30701 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30702 ;;Total ram usage:        3 bytes
 30703 ;; Hardware stack levels used:    1
 30704 ;; Hardware stack levels required when called:   13
 30705 ;; This function calls:
 30706 ;;		Nothing
 30707 ;; This function is called by:
 30708 ;;		_ADCC_Initialize
 30709 ;;		_main
 30710 ;; This function uses a non-reentrant model
 30711 ;;
 30712                           
 30713                           	psect	text75
 30714  019664                     __ptext75:
 30715                           	opt stack 0
 30716  019664                     _ADCC_SetADTIInterruptHandler:
 30717                           	opt stack 15
 30718                           
 30719                           ;adcc.c: 308: ADCC_ADTI_InterruptHandler = InterruptHandler;
 30720                           
 30721                           ;incstack = 0
 30722  019664  C117  F231         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 30723  019668  C118  F232         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 30724  01966C  C119  F233         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 30725  019670  0012               	return		;funcret
 30726  019672                     __end_of_ADCC_SetADTIInterruptHandler:
 30727                           	opt stack 0
 30728                           tblptru	equ	0xFF8
 30729                           tblptrh	equ	0xFF7
 30730                           tblptrl	equ	0xFF6
 30731                           tablat	equ	0xFF5
 30732                           prodh	equ	0xFF4
 30733                           prodl	equ	0xFF3
 30734                           intcon	equ	0xFF2
 30735                           indf0	equ	0xFEF
 30736                           postinc0	equ	0xFEE
 30737                           fsr0h	equ	0xFEA
 30738                           fsr0l	equ	0xFE9
 30739                           wreg	equ	0xFE8
 30740                           indf1	equ	0xFE7
 30741                           postdec1	equ	0xFE5
 30742                           plusw1	equ	0xFE3
 30743                           fsr1h	equ	0xFE2
 30744                           fsr1l	equ	0xFE1
 30745                           indf2	equ	0xFDF
 30746                           postinc2	equ	0xFDE
 30747                           postdec2	equ	0xFDD
 30748                           plusw2	equ	0xFDB
 30749                           fsr2h	equ	0xFDA
 30750                           fsr2l	equ	0xFD9
 30751                           status	equ	0xFD8
 30752                           
 30753 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 30754 ;; Defined at:
 30755 ;;		line 115 in file "mcc_generated_files/interrupt_manager.c"
 30756 ;; Parameters:    Size  Location     Type
 30757 ;;		None
 30758 ;; Auto vars:     Size  Location     Type
 30759 ;;		None
 30760 ;; Return value:  Size  Location     Type
 30761 ;;                  1    wreg      void 
 30762 ;; Registers used:
 30763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 30764 ;; Tracked objects:
 30765 ;;		On entry : 0/0
 30766 ;;		On exit  : 0/0
 30767 ;;		Unchanged: 0/0
 30768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30771 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30772 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30773 ;;Total ram usage:       21 bytes
 30774 ;; Hardware stack levels used:    1
 30775 ;; Hardware stack levels required when called:   12
 30776 ;; This function calls:
 30777 ;;		Absolute function
 30778 ;;		_EUSART2_Transmit_ISR
 30779 ;;		_TMR6_ISR
 30780 ;;		_TMR7_ISR
 30781 ;; This function is called by:
 30782 ;;		Interrupt level 1
 30783 ;; This function uses a non-reentrant model
 30784 ;;
 30785                           
 30786                           	psect	intcodelo
 30787  000018                     __pintcodelo:
 30788                           	opt stack 0
 30789  000018                     _INTERRUPT_InterruptManagerLow:
 30790                           	opt stack 11
 30791                           
 30792                           ;incstack = 0
 30793  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 30794  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 30795  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 30796  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 30797  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 30798  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 30799  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 30800  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 30801  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 30802  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 30803  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 30804  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 30805  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 30806  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 30807  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 30808  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 30809  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 30810  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 30811  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 30812  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 30813  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 30814  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 30815                           
 30816                           ;interrupt_manager.c: 118: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 30817  00006E  010E               	movlb	14	; () banked
 30818  000070  BB2E               	btfsc	46,5,b	;volatile
 30819                           
 30820                           ; BSR set to: 14
 30821  000072  AB38               	btfss	56,5,b	;volatile
 30822  000074  D003               	goto	i1l239
 30823                           
 30824                           ; BSR set to: 14
 30825                           ;interrupt_manager.c: 119: {
 30826                           ;interrupt_manager.c: 120: TMR6_ISR();
 30827  000076  EC9C  F0C9         	call	_TMR6_ISR	;wreg free
 30828                           
 30829                           ;interrupt_manager.c: 121: }
 30830  00007A  D015               	goto	i1l243
 30831  00007C                     i1l239:
 30832                           
 30833                           ; BSR set to: 14
 30834                           ;interrupt_manager.c: 122: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 30835  00007C  BD2C               	btfsc	44,6,b	;volatile
 30836                           
 30837                           ; BSR set to: 14
 30838  00007E  AD36               	btfss	54,6,b	;volatile
 30839  000080  D00D               	goto	i1l241
 30840                           
 30841                           ; BSR set to: 14
 30842                           ;interrupt_manager.c: 123: {
 30843                           ;interrupt_manager.c: 124: EUSART2_TxDefaultInterruptHandler();
 30844  000082  D801               	call	i1u2736_28
 30845  000084  D010               	goto	i1l243
 30846  000086                     i1u2736_28:
 30847  000086  0005               	push	
 30848  000088  6EFA               	movwf	pclath,c
 30849  00008A  0102               	movlb	2	; () banked
 30850  00008C  513A               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 30851  00008E  6EFD               	movwf	tosl,c
 30852  000090  513B               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 30853  000092  6EFE               	movwf	tosh,c
 30854  000094  513C               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 30855  000096  6EFF               	movwf	tosu,c
 30856  000098  50FA               	movf	pclath,w,c
 30857  00009A  0012               	return		;indir
 30858  00009C                     i1l241:
 30859                           
 30860                           ; BSR set to: 14
 30861                           ;interrupt_manager.c: 126: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 30862  00009C  BD2E               	btfsc	46,6,b	;volatile
 30863                           
 30864                           ; BSR set to: 14
 30865  00009E  AD38               	btfss	56,6,b	;volatile
 30866  0000A0  D002               	goto	i1l243
 30867                           
 30868                           ; BSR set to: 14
 30869                           ;interrupt_manager.c: 127: {
 30870                           ;interrupt_manager.c: 128: TMR7_ISR();
 30871  0000A2  ECAD  F0C8         	call	_TMR7_ISR	;wreg free
 30872  0000A6                     i1l243:
 30873                           
 30874                           ;interrupt_manager.c: 130: else
 30875                           ;interrupt_manager.c: 131: {
 30876  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 30877  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 30878  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 30879  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 30880  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 30881  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 30882  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 30883  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 30884  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 30885  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 30886  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 30887  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 30888  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 30889  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 30890  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 30891  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 30892  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 30893  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 30894  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 30895  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 30896  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 30897  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 30898  0000FC  0010               	retfie	
 30899  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 30900                           	opt stack 0
 30901                           tosu	equ	0xFFF
 30902                           tosh	equ	0xFFE
 30903                           tosl	equ	0xFFD
 30904                           pclatu	equ	0xFFB
 30905                           pclath	equ	0xFFA
 30906                           tblptru	equ	0xFF8
 30907                           tblptrh	equ	0xFF7
 30908                           tblptrl	equ	0xFF6
 30909                           tablat	equ	0xFF5
 30910                           prodh	equ	0xFF4
 30911                           prodl	equ	0xFF3
 30912                           intcon	equ	0xFF2
 30913                           indf0	equ	0xFEF
 30914                           postinc0	equ	0xFEE
 30915                           fsr0h	equ	0xFEA
 30916                           fsr0l	equ	0xFE9
 30917                           wreg	equ	0xFE8
 30918                           indf1	equ	0xFE7
 30919                           postdec1	equ	0xFE5
 30920                           plusw1	equ	0xFE3
 30921                           fsr1h	equ	0xFE2
 30922                           fsr1l	equ	0xFE1
 30923                           bsr	equ	0xFE0
 30924                           indf2	equ	0xFDF
 30925                           postinc2	equ	0xFDE
 30926                           postdec2	equ	0xFDD
 30927                           plusw2	equ	0xFDB
 30928                           fsr2h	equ	0xFDA
 30929                           fsr2l	equ	0xFD9
 30930                           status	equ	0xFD8
 30931                           
 30932 ;; *************** function _TMR7_ISR *****************
 30933 ;; Defined at:
 30934 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 30935 ;; Parameters:    Size  Location     Type
 30936 ;;		None
 30937 ;; Auto vars:     Size  Location     Type
 30938 ;;		None
 30939 ;; Return value:  Size  Location     Type
 30940 ;;                  1    wreg      void 
 30941 ;; Registers used:
 30942 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 30943 ;; Tracked objects:
 30944 ;;		On entry : 0/0
 30945 ;;		On exit  : 0/0
 30946 ;;		Unchanged: 0/0
 30947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30952 ;;Total ram usage:        0 bytes
 30953 ;; Hardware stack levels used:    1
 30954 ;; Hardware stack levels required when called:   11
 30955 ;; This function calls:
 30956 ;;		Absolute function
 30957 ;;		_TMR7_DefaultInterruptHandler
 30958 ;;		_TMR7_WriteTimer
 30959 ;;		_acquisitionTimerCallback
 30960 ;; This function is called by:
 30961 ;;		_INTERRUPT_InterruptManagerLow
 30962 ;; This function uses a non-reentrant model
 30963 ;;
 30964                           
 30965                           	psect	text77
 30966  01915A                     __ptext77:
 30967                           	opt stack 0
 30968  01915A                     _TMR7_ISR:
 30969                           	opt stack 11
 30970                           
 30971                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 30972                           
 30973                           ;incstack = 0
 30974  01915A  010E               	movlb	14	; () banked
 30975  01915C  9D38               	bcf	56,6,b	;volatile
 30976                           
 30977                           ; BSR set to: 14
 30978                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 30979  01915E  C241  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 30980  019162  C242  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 30981  019166  ECD7  F0C9         	call	_TMR7_WriteTimer	;wreg free
 30982                           
 30983                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 30984  01916A  0102               	movlb	2	; () banked
 30985  01916C  512E               	movf	_TMR7_InterruptHandler& (0+255),w,b
 30986  01916E  112F               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 30987  019170  1130               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 30988  019172  B4D8               	btfsc	status,2,c
 30989  019174  0012               	return	
 30990                           
 30991                           ; BSR set to: 2
 30992                           ;tmr7.c: 172: {
 30993                           ;tmr7.c: 173: TMR7_InterruptHandler();
 30994  019176  D801               	call	i1u2709_28
 30995  019178  0012               	return	
 30996  01917A                     i1u2709_28:
 30997  01917A  0005               	push	
 30998  01917C  6EFA               	movwf	pclath,c
 30999  01917E  512E               	movf	_TMR7_InterruptHandler& (0+255),w,b
 31000  019180  6EFD               	movwf	tosl,c
 31001  019182  512F               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 31002  019184  6EFE               	movwf	tosh,c
 31003  019186  5130               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 31004  019188  6EFF               	movwf	tosu,c
 31005  01918A  50FA               	movf	pclath,w,c
 31006  01918C  0012               	return		;indir
 31007  01918E                     __end_of_TMR7_ISR:
 31008                           	opt stack 0
 31009                           tosu	equ	0xFFF
 31010                           tosh	equ	0xFFE
 31011                           tosl	equ	0xFFD
 31012                           pclatu	equ	0xFFB
 31013                           pclath	equ	0xFFA
 31014                           tblptru	equ	0xFF8
 31015                           tblptrh	equ	0xFF7
 31016                           tblptrl	equ	0xFF6
 31017                           tablat	equ	0xFF5
 31018                           prodh	equ	0xFF4
 31019                           prodl	equ	0xFF3
 31020                           intcon	equ	0xFF2
 31021                           indf0	equ	0xFEF
 31022                           postinc0	equ	0xFEE
 31023                           fsr0h	equ	0xFEA
 31024                           fsr0l	equ	0xFE9
 31025                           wreg	equ	0xFE8
 31026                           indf1	equ	0xFE7
 31027                           postdec1	equ	0xFE5
 31028                           plusw1	equ	0xFE3
 31029                           fsr1h	equ	0xFE2
 31030                           fsr1l	equ	0xFE1
 31031                           bsr	equ	0xFE0
 31032                           indf2	equ	0xFDF
 31033                           postinc2	equ	0xFDE
 31034                           postdec2	equ	0xFDD
 31035                           plusw2	equ	0xFDB
 31036                           fsr2h	equ	0xFDA
 31037                           fsr2l	equ	0xFD9
 31038                           status	equ	0xFD8
 31039                           
 31040 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 31041 ;; Defined at:
 31042 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 31043 ;; Parameters:    Size  Location     Type
 31044 ;;		None
 31045 ;; Auto vars:     Size  Location     Type
 31046 ;;		None
 31047 ;; Return value:  Size  Location     Type
 31048 ;;                  1    wreg      void 
 31049 ;; Registers used:
 31050 ;;		None
 31051 ;; Tracked objects:
 31052 ;;		On entry : 0/0
 31053 ;;		On exit  : 0/0
 31054 ;;		Unchanged: 0/0
 31055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31060 ;;Total ram usage:        0 bytes
 31061 ;; Hardware stack levels used:    1
 31062 ;; Hardware stack levels required when called:    9
 31063 ;; This function calls:
 31064 ;;		Nothing
 31065 ;; This function is called by:
 31066 ;;		_TMR7_Initialize
 31067 ;;		_TMR7_ISR
 31068 ;; This function uses a non-reentrant model
 31069 ;;
 31070                           
 31071                           	psect	text78
 31072  0196E4                     __ptext78:
 31073                           	opt stack 0
 31074  0196E4                     _TMR7_DefaultInterruptHandler:
 31075                           	opt stack 12
 31076                           
 31077                           ;incstack = 0
 31078  0196E4  0012               	return		;funcret
 31079  0196E6                     __end_of_TMR7_DefaultInterruptHandler:
 31080                           	opt stack 0
 31081                           tosu	equ	0xFFF
 31082                           tosh	equ	0xFFE
 31083                           tosl	equ	0xFFD
 31084                           pclatu	equ	0xFFB
 31085                           pclath	equ	0xFFA
 31086                           tblptru	equ	0xFF8
 31087                           tblptrh	equ	0xFF7
 31088                           tblptrl	equ	0xFF6
 31089                           tablat	equ	0xFF5
 31090                           prodh	equ	0xFF4
 31091                           prodl	equ	0xFF3
 31092                           intcon	equ	0xFF2
 31093                           indf0	equ	0xFEF
 31094                           postinc0	equ	0xFEE
 31095                           fsr0h	equ	0xFEA
 31096                           fsr0l	equ	0xFE9
 31097                           wreg	equ	0xFE8
 31098                           indf1	equ	0xFE7
 31099                           postdec1	equ	0xFE5
 31100                           plusw1	equ	0xFE3
 31101                           fsr1h	equ	0xFE2
 31102                           fsr1l	equ	0xFE1
 31103                           bsr	equ	0xFE0
 31104                           indf2	equ	0xFDF
 31105                           postinc2	equ	0xFDE
 31106                           postdec2	equ	0xFDD
 31107                           plusw2	equ	0xFDB
 31108                           fsr2h	equ	0xFDA
 31109                           fsr2l	equ	0xFD9
 31110                           status	equ	0xFD8
 31111                           
 31112 ;; *************** function _acquisitionTimerCallback *****************
 31113 ;; Defined at:
 31114 ;;		line 431 in file "main.c"
 31115 ;; Parameters:    Size  Location     Type
 31116 ;;		None
 31117 ;; Auto vars:     Size  Location     Type
 31118 ;;		None
 31119 ;; Return value:  Size  Location     Type
 31120 ;;                  1    wreg      void 
 31121 ;; Registers used:
 31122 ;;		wreg, status,2, cstack
 31123 ;; Tracked objects:
 31124 ;;		On entry : 0/0
 31125 ;;		On exit  : 0/0
 31126 ;;		Unchanged: 0/0
 31127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31132 ;;Total ram usage:        0 bytes
 31133 ;; Hardware stack levels used:    1
 31134 ;; Hardware stack levels required when called:   10
 31135 ;; This function calls:
 31136 ;;		_ADCC_ClearAccumulator
 31137 ;;		_ADCC_DischargeSampleCapacitor
 31138 ;;		_ADCC_StartConversion
 31139 ;; This function is called by:
 31140 ;;		_main
 31141 ;;		_TMR7_ISR
 31142 ;; This function uses a non-reentrant model
 31143 ;;
 31144                           
 31145                           	psect	text79
 31146  0195B0                     __ptext79:
 31147                           	opt stack 0
 31148  0195B0                     _acquisitionTimerCallback:
 31149                           	opt stack 11
 31150                           
 31151                           ;main.c: 434: ADCC_DischargeSampleCapacitor();
 31152                           
 31153                           ;incstack = 0
 31154  0195B0  EC5A  F0CB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 31155                           
 31156                           ;main.c: 437: ADCC_ClearAccumulator();
 31157  0195B4  EC64  F0CB         	call	_ADCC_ClearAccumulator	;wreg free
 31158                           
 31159                           ;main.c: 440: ADCC_StartConversion(next_channel);
 31160  0195B8  0101               	movlb	1	; () banked
 31161  0195BA  51E8               	movf	_next_channel& (0+255),w,b
 31162  0195BC  EC39  F0CB         	call	_ADCC_StartConversion
 31163  0195C0  0012               	return		;funcret
 31164  0195C2                     __end_of_acquisitionTimerCallback:
 31165                           	opt stack 0
 31166                           tosu	equ	0xFFF
 31167                           tosh	equ	0xFFE
 31168                           tosl	equ	0xFFD
 31169                           pclatu	equ	0xFFB
 31170                           pclath	equ	0xFFA
 31171                           tblptru	equ	0xFF8
 31172                           tblptrh	equ	0xFF7
 31173                           tblptrl	equ	0xFF6
 31174                           tablat	equ	0xFF5
 31175                           prodh	equ	0xFF4
 31176                           prodl	equ	0xFF3
 31177                           intcon	equ	0xFF2
 31178                           indf0	equ	0xFEF
 31179                           postinc0	equ	0xFEE
 31180                           fsr0h	equ	0xFEA
 31181                           fsr0l	equ	0xFE9
 31182                           wreg	equ	0xFE8
 31183                           indf1	equ	0xFE7
 31184                           postdec1	equ	0xFE5
 31185                           plusw1	equ	0xFE3
 31186                           fsr1h	equ	0xFE2
 31187                           fsr1l	equ	0xFE1
 31188                           bsr	equ	0xFE0
 31189                           indf2	equ	0xFDF
 31190                           postinc2	equ	0xFDE
 31191                           postdec2	equ	0xFDD
 31192                           plusw2	equ	0xFDB
 31193                           fsr2h	equ	0xFDA
 31194                           fsr2l	equ	0xFD9
 31195                           status	equ	0xFD8
 31196                           
 31197 ;; *************** function _ADCC_StartConversion *****************
 31198 ;; Defined at:
 31199 ;;		line 112 in file "mcc_generated_files/adcc.c"
 31200 ;; Parameters:    Size  Location     Type
 31201 ;;  channel         1    wreg     enum E17310
 31202 ;; Auto vars:     Size  Location     Type
 31203 ;;  channel         1    0[BANK1 ] enum E17310
 31204 ;; Return value:  Size  Location     Type
 31205 ;;                  1    wreg      void 
 31206 ;; Registers used:
 31207 ;;		wreg
 31208 ;; Tracked objects:
 31209 ;;		On entry : 0/0
 31210 ;;		On exit  : 0/0
 31211 ;;		Unchanged: 0/0
 31212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31214 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31216 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31217 ;;Total ram usage:        1 bytes
 31218 ;; Hardware stack levels used:    1
 31219 ;; Hardware stack levels required when called:    9
 31220 ;; This function calls:
 31221 ;;		Nothing
 31222 ;; This function is called by:
 31223 ;;		_acquisitionTimerCallback
 31224 ;; This function uses a non-reentrant model
 31225 ;;
 31226                           
 31227                           	psect	text80
 31228  019672                     __ptext80:
 31229                           	opt stack 0
 31230  019672                     _ADCC_StartConversion:
 31231                           	opt stack 11
 31232                           
 31233                           ;incstack = 0
 31234                           ;ADCC_StartConversion@channel stored from wreg
 31235  019672  0101               	movlb	1	; () banked
 31236  019674  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 31237                           
 31238                           ;adcc.c: 115: ADPCH = channel;
 31239  019676  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 31240                           
 31241                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 31242  01967A  8E60               	bsf	3936,7,c	;volatile
 31243                           
 31244                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 31245  01967C  8060               	bsf	3936,0,c	;volatile
 31246  01967E  0012               	return		;funcret
 31247  019680                     __end_of_ADCC_StartConversion:
 31248                           	opt stack 0
 31249                           tosu	equ	0xFFF
 31250                           tosh	equ	0xFFE
 31251                           tosl	equ	0xFFD
 31252                           pclatu	equ	0xFFB
 31253                           pclath	equ	0xFFA
 31254                           tblptru	equ	0xFF8
 31255                           tblptrh	equ	0xFF7
 31256                           tblptrl	equ	0xFF6
 31257                           tablat	equ	0xFF5
 31258                           prodh	equ	0xFF4
 31259                           prodl	equ	0xFF3
 31260                           intcon	equ	0xFF2
 31261                           indf0	equ	0xFEF
 31262                           postinc0	equ	0xFEE
 31263                           fsr0h	equ	0xFEA
 31264                           fsr0l	equ	0xFE9
 31265                           wreg	equ	0xFE8
 31266                           indf1	equ	0xFE7
 31267                           postdec1	equ	0xFE5
 31268                           plusw1	equ	0xFE3
 31269                           fsr1h	equ	0xFE2
 31270                           fsr1l	equ	0xFE1
 31271                           bsr	equ	0xFE0
 31272                           indf2	equ	0xFDF
 31273                           postinc2	equ	0xFDE
 31274                           postdec2	equ	0xFDD
 31275                           plusw2	equ	0xFDB
 31276                           fsr2h	equ	0xFDA
 31277                           fsr2l	equ	0xFD9
 31278                           status	equ	0xFD8
 31279                           
 31280 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 31281 ;; Defined at:
 31282 ;;		line 174 in file "mcc_generated_files/adcc.c"
 31283 ;; Parameters:    Size  Location     Type
 31284 ;;		None
 31285 ;; Auto vars:     Size  Location     Type
 31286 ;;		None
 31287 ;; Return value:  Size  Location     Type
 31288 ;;                  1    wreg      void 
 31289 ;; Registers used:
 31290 ;;		wreg, status,2
 31291 ;; Tracked objects:
 31292 ;;		On entry : 0/0
 31293 ;;		On exit  : 0/0
 31294 ;;		Unchanged: 0/0
 31295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31300 ;;Total ram usage:        0 bytes
 31301 ;; Hardware stack levels used:    1
 31302 ;; Hardware stack levels required when called:    9
 31303 ;; This function calls:
 31304 ;;		Nothing
 31305 ;; This function is called by:
 31306 ;;		_acquisitionTimerCallback
 31307 ;; This function uses a non-reentrant model
 31308 ;;
 31309                           
 31310                           	psect	text81
 31311  0196B4                     __ptext81:
 31312                           	opt stack 0
 31313  0196B4                     _ADCC_DischargeSampleCapacitor:
 31314                           	opt stack 11
 31315                           
 31316                           ;adcc.c: 177: ADPCH = 0x3c;
 31317                           
 31318                           ;incstack = 0
 31319  0196B4  0E3C               	movlw	60
 31320  0196B6  010F               	movlb	15	; () banked
 31321  0196B8  6F5F               	movwf	95,b	;volatile
 31322                           
 31323                           ; BSR set to: 15
 31324  0196BA  0012               	return		;funcret
 31325  0196BC                     __end_of_ADCC_DischargeSampleCapacitor:
 31326                           	opt stack 0
 31327                           tosu	equ	0xFFF
 31328                           tosh	equ	0xFFE
 31329                           tosl	equ	0xFFD
 31330                           pclatu	equ	0xFFB
 31331                           pclath	equ	0xFFA
 31332                           tblptru	equ	0xFF8
 31333                           tblptrh	equ	0xFF7
 31334                           tblptrl	equ	0xFF6
 31335                           tablat	equ	0xFF5
 31336                           prodh	equ	0xFF4
 31337                           prodl	equ	0xFF3
 31338                           intcon	equ	0xFF2
 31339                           indf0	equ	0xFEF
 31340                           postinc0	equ	0xFEE
 31341                           fsr0h	equ	0xFEA
 31342                           fsr0l	equ	0xFE9
 31343                           wreg	equ	0xFE8
 31344                           indf1	equ	0xFE7
 31345                           postdec1	equ	0xFE5
 31346                           plusw1	equ	0xFE3
 31347                           fsr1h	equ	0xFE2
 31348                           fsr1l	equ	0xFE1
 31349                           bsr	equ	0xFE0
 31350                           indf2	equ	0xFDF
 31351                           postinc2	equ	0xFDE
 31352                           postdec2	equ	0xFDD
 31353                           plusw2	equ	0xFDB
 31354                           fsr2h	equ	0xFDA
 31355                           fsr2l	equ	0xFD9
 31356                           status	equ	0xFD8
 31357                           
 31358 ;; *************** function _ADCC_ClearAccumulator *****************
 31359 ;; Defined at:
 31360 ;;		line 204 in file "mcc_generated_files/adcc.c"
 31361 ;; Parameters:    Size  Location     Type
 31362 ;;		None
 31363 ;; Auto vars:     Size  Location     Type
 31364 ;;		None
 31365 ;; Return value:  Size  Location     Type
 31366 ;;                  1    wreg      void 
 31367 ;; Registers used:
 31368 ;;		None
 31369 ;; Tracked objects:
 31370 ;;		On entry : 0/0
 31371 ;;		On exit  : 0/0
 31372 ;;		Unchanged: 0/0
 31373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31378 ;;Total ram usage:        0 bytes
 31379 ;; Hardware stack levels used:    1
 31380 ;; Hardware stack levels required when called:    9
 31381 ;; This function calls:
 31382 ;;		Nothing
 31383 ;; This function is called by:
 31384 ;;		_acquisitionTimerCallback
 31385 ;; This function uses a non-reentrant model
 31386 ;;
 31387                           
 31388                           	psect	text82
 31389  0196C8                     __ptext82:
 31390                           	opt stack 0
 31391  0196C8                     _ADCC_ClearAccumulator:
 31392                           	opt stack 11
 31393                           
 31394                           ;adcc.c: 207: ADCON2bits.ADACLR = 1;
 31395                           
 31396                           ; BSR set to: 15
 31397                           ;incstack = 0
 31398  0196C8  010F               	movlb	15	; () banked
 31399  0196CA  875A               	bsf	90,3,b	;volatile
 31400                           
 31401                           ; BSR set to: 15
 31402  0196CC  0012               	return		;funcret
 31403  0196CE                     __end_of_ADCC_ClearAccumulator:
 31404                           	opt stack 0
 31405                           tosu	equ	0xFFF
 31406                           tosh	equ	0xFFE
 31407                           tosl	equ	0xFFD
 31408                           pclatu	equ	0xFFB
 31409                           pclath	equ	0xFFA
 31410                           tblptru	equ	0xFF8
 31411                           tblptrh	equ	0xFF7
 31412                           tblptrl	equ	0xFF6
 31413                           tablat	equ	0xFF5
 31414                           prodh	equ	0xFF4
 31415                           prodl	equ	0xFF3
 31416                           intcon	equ	0xFF2
 31417                           indf0	equ	0xFEF
 31418                           postinc0	equ	0xFEE
 31419                           fsr0h	equ	0xFEA
 31420                           fsr0l	equ	0xFE9
 31421                           wreg	equ	0xFE8
 31422                           indf1	equ	0xFE7
 31423                           postdec1	equ	0xFE5
 31424                           plusw1	equ	0xFE3
 31425                           fsr1h	equ	0xFE2
 31426                           fsr1l	equ	0xFE1
 31427                           bsr	equ	0xFE0
 31428                           indf2	equ	0xFDF
 31429                           postinc2	equ	0xFDE
 31430                           postdec2	equ	0xFDD
 31431                           plusw2	equ	0xFDB
 31432                           fsr2h	equ	0xFDA
 31433                           fsr2l	equ	0xFD9
 31434                           status	equ	0xFD8
 31435                           
 31436 ;; *************** function _TMR7_WriteTimer *****************
 31437 ;; Defined at:
 31438 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 31439 ;; Parameters:    Size  Location     Type
 31440 ;;  timerVal        2    0[BANK1 ] unsigned int 
 31441 ;; Auto vars:     Size  Location     Type
 31442 ;;		None
 31443 ;; Return value:  Size  Location     Type
 31444 ;;                  1    wreg      void 
 31445 ;; Registers used:
 31446 ;;		wreg, status,2
 31447 ;; Tracked objects:
 31448 ;;		On entry : 0/0
 31449 ;;		On exit  : 0/0
 31450 ;;		Unchanged: 0/0
 31451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31452 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31455 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31456 ;;Total ram usage:        2 bytes
 31457 ;; Hardware stack levels used:    1
 31458 ;; Hardware stack levels required when called:    9
 31459 ;; This function calls:
 31460 ;;		Nothing
 31461 ;; This function is called by:
 31462 ;;		_TMR7_ISR
 31463 ;;		_TMR7_Reload
 31464 ;; This function uses a non-reentrant model
 31465 ;;
 31466                           
 31467                           	psect	text83
 31468  0193AE                     __ptext83:
 31469                           	opt stack 0
 31470  0193AE                     _TMR7_WriteTimer:
 31471                           	opt stack 12
 31472                           
 31473                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 31474                           
 31475                           ; BSR set to: 15
 31476                           ;incstack = 0
 31477  0193AE  010F               	movlb	15	; () banked
 31478  0193B0  A530               	btfss	48,2,b	;volatile
 31479  0193B2  D009               	goto	i1l654
 31480                           
 31481                           ; BSR set to: 15
 31482                           ;tmr7.c: 130: {
 31483                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 31484  0193B4  9130               	bcf	48,0,b	;volatile
 31485                           
 31486                           ; BSR set to: 15
 31487                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 31488  0193B6  0101               	movlb	1	; () banked
 31489  0193B8  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 31490  0193BA  010F               	movlb	15	; () banked
 31491  0193BC  6F2F               	movwf	47,b	;volatile
 31492                           
 31493                           ; BSR set to: 15
 31494                           ;tmr7.c: 136: TMR7L = timerVal;
 31495  0193BE  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 31496                           
 31497                           ; BSR set to: 15
 31498                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 31499  0193C2  8130               	bsf	48,0,b	;volatile
 31500                           
 31501                           ;tmr7.c: 140: }
 31502  0193C4  0012               	return	
 31503  0193C6                     i1l654:
 31504                           
 31505                           ; BSR set to: 15
 31506                           ;tmr7.c: 141: else
 31507                           ;tmr7.c: 142: {
 31508                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 31509                           
 31510                           ; BSR set to: 15
 31511  0193C6  0101               	movlb	1	; () banked
 31512  0193C8  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 31513  0193CA  010F               	movlb	15	; () banked
 31514  0193CC  6F2F               	movwf	47,b	;volatile
 31515                           
 31516                           ; BSR set to: 15
 31517                           ;tmr7.c: 145: TMR7L = timerVal;
 31518  0193CE  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 31519  0193D2  0012               	return	
 31520  0193D4                     __end_of_TMR7_WriteTimer:
 31521                           	opt stack 0
 31522                           tosu	equ	0xFFF
 31523                           tosh	equ	0xFFE
 31524                           tosl	equ	0xFFD
 31525                           pclatu	equ	0xFFB
 31526                           pclath	equ	0xFFA
 31527                           tblptru	equ	0xFF8
 31528                           tblptrh	equ	0xFF7
 31529                           tblptrl	equ	0xFF6
 31530                           tablat	equ	0xFF5
 31531                           prodh	equ	0xFF4
 31532                           prodl	equ	0xFF3
 31533                           intcon	equ	0xFF2
 31534                           indf0	equ	0xFEF
 31535                           postinc0	equ	0xFEE
 31536                           fsr0h	equ	0xFEA
 31537                           fsr0l	equ	0xFE9
 31538                           wreg	equ	0xFE8
 31539                           indf1	equ	0xFE7
 31540                           postdec1	equ	0xFE5
 31541                           plusw1	equ	0xFE3
 31542                           fsr1h	equ	0xFE2
 31543                           fsr1l	equ	0xFE1
 31544                           bsr	equ	0xFE0
 31545                           indf2	equ	0xFDF
 31546                           postinc2	equ	0xFDE
 31547                           postdec2	equ	0xFDD
 31548                           plusw2	equ	0xFDB
 31549                           fsr2h	equ	0xFDA
 31550                           fsr2l	equ	0xFD9
 31551                           status	equ	0xFD8
 31552                           
 31553 ;; *************** function _TMR6_ISR *****************
 31554 ;; Defined at:
 31555 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 31556 ;; Parameters:    Size  Location     Type
 31557 ;;		None
 31558 ;; Auto vars:     Size  Location     Type
 31559 ;;		None
 31560 ;; Return value:  Size  Location     Type
 31561 ;;                  1    wreg      void 
 31562 ;; Registers used:
 31563 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 31564 ;; Tracked objects:
 31565 ;;		On entry : 0/0
 31566 ;;		On exit  : 0/0
 31567 ;;		Unchanged: 0/0
 31568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31573 ;;Total ram usage:        0 bytes
 31574 ;; Hardware stack levels used:    1
 31575 ;; Hardware stack levels required when called:   10
 31576 ;; This function calls:
 31577 ;;		Absolute function
 31578 ;;		_TMR6_DefaultInterruptHandler
 31579 ;;		_heartbeatTimerCallback
 31580 ;; This function is called by:
 31581 ;;		_INTERRUPT_InterruptManagerLow
 31582 ;; This function uses a non-reentrant model
 31583 ;;
 31584                           
 31585                           	psect	text84
 31586  019338                     __ptext84:
 31587                           	opt stack 0
 31588  019338                     _TMR6_ISR:
 31589                           	opt stack 12
 31590                           
 31591                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 31592                           
 31593                           ; BSR set to: 15
 31594                           ;incstack = 0
 31595  019338  010E               	movlb	14	; () banked
 31596  01933A  9B38               	bcf	56,5,b	;volatile
 31597                           
 31598                           ; BSR set to: 14
 31599                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 31600  01933C  0102               	movlb	2	; () banked
 31601  01933E  5134               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31602  019340  1135               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31603  019342  1136               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31604  019344  B4D8               	btfsc	status,2,c
 31605  019346  0012               	return	
 31606                           
 31607                           ; BSR set to: 2
 31608                           ;tmr6.c: 172: {
 31609                           ;tmr6.c: 173: TMR6_InterruptHandler();
 31610  019348  D801               	call	i1u2707_28
 31611  01934A  0012               	return	
 31612  01934C                     i1u2707_28:
 31613  01934C  0005               	push	
 31614  01934E  6EFA               	movwf	pclath,c
 31615  019350  5134               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31616  019352  6EFD               	movwf	tosl,c
 31617  019354  5135               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31618  019356  6EFE               	movwf	tosh,c
 31619  019358  5136               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31620  01935A  6EFF               	movwf	tosu,c
 31621  01935C  50FA               	movf	pclath,w,c
 31622  01935E  0012               	return		;indir
 31623  019360                     __end_of_TMR6_ISR:
 31624                           	opt stack 0
 31625                           tosu	equ	0xFFF
 31626                           tosh	equ	0xFFE
 31627                           tosl	equ	0xFFD
 31628                           pclatu	equ	0xFFB
 31629                           pclath	equ	0xFFA
 31630                           tblptru	equ	0xFF8
 31631                           tblptrh	equ	0xFF7
 31632                           tblptrl	equ	0xFF6
 31633                           tablat	equ	0xFF5
 31634                           prodh	equ	0xFF4
 31635                           prodl	equ	0xFF3
 31636                           intcon	equ	0xFF2
 31637                           indf0	equ	0xFEF
 31638                           postinc0	equ	0xFEE
 31639                           fsr0h	equ	0xFEA
 31640                           fsr0l	equ	0xFE9
 31641                           wreg	equ	0xFE8
 31642                           indf1	equ	0xFE7
 31643                           postdec1	equ	0xFE5
 31644                           plusw1	equ	0xFE3
 31645                           fsr1h	equ	0xFE2
 31646                           fsr1l	equ	0xFE1
 31647                           bsr	equ	0xFE0
 31648                           indf2	equ	0xFDF
 31649                           postinc2	equ	0xFDE
 31650                           postdec2	equ	0xFDD
 31651                           plusw2	equ	0xFDB
 31652                           fsr2h	equ	0xFDA
 31653                           fsr2l	equ	0xFD9
 31654                           status	equ	0xFD8
 31655                           
 31656 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 31657 ;; Defined at:
 31658 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31659 ;; Parameters:    Size  Location     Type
 31660 ;;		None
 31661 ;; Auto vars:     Size  Location     Type
 31662 ;;		None
 31663 ;; Return value:  Size  Location     Type
 31664 ;;                  1    wreg      void 
 31665 ;; Registers used:
 31666 ;;		None
 31667 ;; Tracked objects:
 31668 ;;		On entry : 0/0
 31669 ;;		On exit  : 0/0
 31670 ;;		Unchanged: 0/0
 31671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31676 ;;Total ram usage:        0 bytes
 31677 ;; Hardware stack levels used:    1
 31678 ;; Hardware stack levels required when called:    9
 31679 ;; This function calls:
 31680 ;;		Nothing
 31681 ;; This function is called by:
 31682 ;;		_TMR6_Initialize
 31683 ;;		_TMR6_ISR
 31684 ;; This function uses a non-reentrant model
 31685 ;;
 31686                           
 31687                           	psect	text85
 31688  0196E6                     __ptext85:
 31689                           	opt stack 0
 31690  0196E6                     _TMR6_DefaultInterruptHandler:
 31691                           	opt stack 12
 31692                           
 31693                           ;incstack = 0
 31694  0196E6  0012               	return		;funcret
 31695  0196E8                     __end_of_TMR6_DefaultInterruptHandler:
 31696                           	opt stack 0
 31697                           tosu	equ	0xFFF
 31698                           tosh	equ	0xFFE
 31699                           tosl	equ	0xFFD
 31700                           pclatu	equ	0xFFB
 31701                           pclath	equ	0xFFA
 31702                           tblptru	equ	0xFF8
 31703                           tblptrh	equ	0xFF7
 31704                           tblptrl	equ	0xFF6
 31705                           tablat	equ	0xFF5
 31706                           prodh	equ	0xFF4
 31707                           prodl	equ	0xFF3
 31708                           intcon	equ	0xFF2
 31709                           indf0	equ	0xFEF
 31710                           postinc0	equ	0xFEE
 31711                           fsr0h	equ	0xFEA
 31712                           fsr0l	equ	0xFE9
 31713                           wreg	equ	0xFE8
 31714                           indf1	equ	0xFE7
 31715                           postdec1	equ	0xFE5
 31716                           plusw1	equ	0xFE3
 31717                           fsr1h	equ	0xFE2
 31718                           fsr1l	equ	0xFE1
 31719                           bsr	equ	0xFE0
 31720                           indf2	equ	0xFDF
 31721                           postinc2	equ	0xFDE
 31722                           postdec2	equ	0xFDD
 31723                           plusw2	equ	0xFDB
 31724                           fsr2h	equ	0xFDA
 31725                           fsr2l	equ	0xFD9
 31726                           status	equ	0xFD8
 31727                           
 31728 ;; *************** function _heartbeatTimerCallback *****************
 31729 ;; Defined at:
 31730 ;;		line 210 in file "main.c"
 31731 ;; Parameters:    Size  Location     Type
 31732 ;;		None
 31733 ;; Auto vars:     Size  Location     Type
 31734 ;;		None
 31735 ;; Return value:  Size  Location     Type
 31736 ;;                  1    wreg      void 
 31737 ;; Registers used:
 31738 ;;		wreg, status,2, status,0
 31739 ;; Tracked objects:
 31740 ;;		On entry : 0/0
 31741 ;;		On exit  : 0/0
 31742 ;;		Unchanged: 0/0
 31743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31746 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31747 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31748 ;;Total ram usage:        1 bytes
 31749 ;; Hardware stack levels used:    1
 31750 ;; Hardware stack levels required when called:    9
 31751 ;; This function calls:
 31752 ;;		Nothing
 31753 ;; This function is called by:
 31754 ;;		_main
 31755 ;;		_TMR6_ISR
 31756 ;; This function uses a non-reentrant model
 31757 ;;
 31758                           
 31759                           	psect	text86
 31760  018F86                     __ptext86:
 31761                           	opt stack 0
 31762  018F86                     _heartbeatTimerCallback:
 31763                           	opt stack 12
 31764                           
 31765                           ;main.c: 213: LATFbits.LATF2 = !LATFbits.LATF2;
 31766                           
 31767                           ;incstack = 0
 31768  018F86  B47E               	btfsc	3966,2,c	;volatile
 31769  018F88  D004               	goto	i1u1129_20
 31770  018F8A  0101               	movlb	1	; () banked
 31771  018F8C  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 31772  018F8E  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 31773  018F90  D002               	goto	i1u1130_28
 31774  018F92                     i1u1129_20:
 31775  018F92  0101               	movlb	1	; () banked
 31776  018F94  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 31777  018F96                     i1u1130_28:
 31778  018F96  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 31779  018F98  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 31780  018F9A  507E               	movf	3966,w,c	;volatile
 31781  018F9C  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 31782  018F9E  0BFB               	andlw	-5
 31783  018FA0  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 31784  018FA2  6E7E               	movwf	3966,c	;volatile
 31785                           
 31786                           ;main.c: 216: dev_on_time++;
 31787  018FA4  0E01               	movlw	1
 31788  018FA6  0102               	movlb	2	; () banked
 31789  018FA8  271C               	addwf	_dev_on_time& (0+255),f,b	;volatile
 31790  018FAA  0E00               	movlw	0
 31791  018FAC  231D               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 31792  018FAE  231E               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 31793  018FB0  231F               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 31794                           
 31795                           ; BSR set to: 2
 31796                           ;main.c: 219: if (load_enable) {
 31797  018FB2  A45E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 31798  018FB4  D006               	goto	i1l1027
 31799                           
 31800                           ; BSR set to: 2
 31801                           ;main.c: 221: load_on_time++;
 31802  018FB6  0E01               	movlw	1
 31803  018FB8  2718               	addwf	_load_on_time& (0+255),f,b	;volatile
 31804  018FBA  0E00               	movlw	0
 31805  018FBC  2319               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 31806  018FBE  231A               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 31807  018FC0  231B               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 31808  018FC2                     i1l1027:
 31809                           
 31810                           ; BSR set to: 2
 31811  018FC2  0004               	clrwdt		;# 
 31812  018FC4  0012               	return		;funcret
 31813  018FC6                     __end_of_heartbeatTimerCallback:
 31814                           	opt stack 0
 31815                           tosu	equ	0xFFF
 31816                           tosh	equ	0xFFE
 31817                           tosl	equ	0xFFD
 31818                           pclatu	equ	0xFFB
 31819                           pclath	equ	0xFFA
 31820                           tblptru	equ	0xFF8
 31821                           tblptrh	equ	0xFF7
 31822                           tblptrl	equ	0xFF6
 31823                           tablat	equ	0xFF5
 31824                           prodh	equ	0xFF4
 31825                           prodl	equ	0xFF3
 31826                           intcon	equ	0xFF2
 31827                           indf0	equ	0xFEF
 31828                           postinc0	equ	0xFEE
 31829                           fsr0h	equ	0xFEA
 31830                           fsr0l	equ	0xFE9
 31831                           wreg	equ	0xFE8
 31832                           indf1	equ	0xFE7
 31833                           postdec1	equ	0xFE5
 31834                           plusw1	equ	0xFE3
 31835                           fsr1h	equ	0xFE2
 31836                           fsr1l	equ	0xFE1
 31837                           bsr	equ	0xFE0
 31838                           indf2	equ	0xFDF
 31839                           postinc2	equ	0xFDE
 31840                           postdec2	equ	0xFDD
 31841                           plusw2	equ	0xFDB
 31842                           fsr2h	equ	0xFDA
 31843                           fsr2l	equ	0xFD9
 31844                           status	equ	0xFD8
 31845                           
 31846 ;; *************** function _EUSART2_Transmit_ISR *****************
 31847 ;; Defined at:
 31848 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 31849 ;; Parameters:    Size  Location     Type
 31850 ;;		None
 31851 ;; Auto vars:     Size  Location     Type
 31852 ;;		None
 31853 ;; Return value:  Size  Location     Type
 31854 ;;                  1    wreg      void 
 31855 ;; Registers used:
 31856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31857 ;; Tracked objects:
 31858 ;;		On entry : 0/0
 31859 ;;		On exit  : 0/0
 31860 ;;		Unchanged: 0/0
 31861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31866 ;;Total ram usage:        0 bytes
 31867 ;; Hardware stack levels used:    1
 31868 ;; Hardware stack levels required when called:    9
 31869 ;; This function calls:
 31870 ;;		Nothing
 31871 ;; This function is called by:
 31872 ;;		_EUSART2_Initialize
 31873 ;;		_INTERRUPT_InterruptManagerLow
 31874 ;; This function uses a non-reentrant model
 31875 ;;
 31876                           
 31877                           	psect	text87
 31878  019124                     __ptext87:
 31879                           	opt stack 0
 31880  019124                     _EUSART2_Transmit_ISR:
 31881                           	opt stack 13
 31882                           
 31883                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 31884                           
 31885                           ;incstack = 0
 31886  019124  0E80               	movlw	128
 31887  019126  0101               	movlb	1	; () banked
 31888  019128  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 31889  01912A  D014               	goto	i1l417
 31890                           
 31891                           ; BSR set to: 1
 31892                           ;eusart2.c: 203: {
 31893                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 31894  01912C  51E2               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 31895  01912E  0D01               	mullw	1
 31896  019130  0E00               	movlw	low _eusart2TxBuffer
 31897  019132  24F3               	addwf	prodl,w,c
 31898  019134  6ED9               	movwf	fsr2l,c
 31899  019136  0E03               	movlw	high _eusart2TxBuffer
 31900  019138  20F4               	addwfc	prodh,w,c
 31901  01913A  6EDA               	movwf	fsr2h,c
 31902  01913C  50DF               	movf	indf2,w,c
 31903  01913E  010E               	movlb	14	; () banked
 31904  019140  6FF2               	movwf	242,b	;volatile
 31905                           
 31906                           ; BSR set to: 14
 31907  019142  0101               	movlb	1	; () banked
 31908  019144  2BE2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 31909                           
 31910                           ; BSR set to: 1
 31911                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 31912  019146  0E7F               	movlw	127
 31913  019148  65E2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 31914  01914A  D002               	goto	i1l418
 31915                           
 31916                           ; BSR set to: 1
 31917                           ;eusart2.c: 206: {
 31918                           ;eusart2.c: 207: eusart2TxTail = 0;
 31919  01914C  0E00               	movlw	0
 31920  01914E  6FE2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 31921  019150                     i1l418:
 31922                           
 31923                           ; BSR set to: 1
 31924                           ;eusart2.c: 208: }
 31925                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 31926                           
 31927                           ; BSR set to: 1
 31928  019150  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 31929                           
 31930                           ;eusart2.c: 210: }
 31931  019152  0012               	return	
 31932  019154                     i1l417:
 31933                           
 31934                           ; BSR set to: 1
 31935                           ;eusart2.c: 211: else
 31936                           ;eusart2.c: 212: {
 31937                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 31938  019154  010E               	movlb	14	; () banked
 31939  019156  9D2C               	bcf	44,6,b	;volatile
 31940  019158  0012               	return	
 31941  01915A                     __end_of_EUSART2_Transmit_ISR:
 31942                           	opt stack 0
 31943                           tosu	equ	0xFFF
 31944                           tosh	equ	0xFFE
 31945                           tosl	equ	0xFFD
 31946                           pclatu	equ	0xFFB
 31947                           pclath	equ	0xFFA
 31948                           tblptru	equ	0xFF8
 31949                           tblptrh	equ	0xFF7
 31950                           tblptrl	equ	0xFF6
 31951                           tablat	equ	0xFF5
 31952                           prodh	equ	0xFF4
 31953                           prodl	equ	0xFF3
 31954                           intcon	equ	0xFF2
 31955                           indf0	equ	0xFEF
 31956                           postinc0	equ	0xFEE
 31957                           fsr0h	equ	0xFEA
 31958                           fsr0l	equ	0xFE9
 31959                           wreg	equ	0xFE8
 31960                           indf1	equ	0xFE7
 31961                           postdec1	equ	0xFE5
 31962                           plusw1	equ	0xFE3
 31963                           fsr1h	equ	0xFE2
 31964                           fsr1l	equ	0xFE1
 31965                           bsr	equ	0xFE0
 31966                           indf2	equ	0xFDF
 31967                           postinc2	equ	0xFDE
 31968                           postdec2	equ	0xFDD
 31969                           plusw2	equ	0xFDB
 31970                           fsr2h	equ	0xFDA
 31971                           fsr2l	equ	0xFD9
 31972                           status	equ	0xFD8
 31973                           
 31974 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 31975 ;; Defined at:
 31976 ;;		line 86 in file "mcc_generated_files/interrupt_manager.c"
 31977 ;; Parameters:    Size  Location     Type
 31978 ;;		None
 31979 ;; Auto vars:     Size  Location     Type
 31980 ;;		None
 31981 ;; Return value:  Size  Location     Type
 31982 ;;                  1    wreg      void 
 31983 ;; Registers used:
 31984 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31985 ;; Tracked objects:
 31986 ;;		On entry : 0/0
 31987 ;;		On exit  : 0/0
 31988 ;;		Unchanged: 0/0
 31989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31992 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31993 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31994 ;;Total ram usage:       18 bytes
 31995 ;; Hardware stack levels used:    1
 31996 ;; Hardware stack levels required when called:    8
 31997 ;; This function calls:
 31998 ;;		Absolute function
 31999 ;;		_ADCC_ThresholdISR
 32000 ;;		_EUSART2_Receive_ISR
 32001 ;;		_HLVD_ISR
 32002 ;;		_INT0_ISR
 32003 ;;		_TMR5_ISR
 32004 ;; This function is called by:
 32005 ;;		Interrupt level 2
 32006 ;; This function uses a non-reentrant model
 32007 ;;
 32008                           
 32009                           	psect	intcode
 32010  000008                     __pintcode:
 32011                           	opt stack 0
 32012  000008                     _INTERRUPT_InterruptManagerHigh:
 32013                           	opt stack 11
 32014                           
 32015                           ;incstack = 0
 32016  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32017  00000A  EF64  F0BE         	goto	int_func
 32018                           tosu	equ	0xFFF
 32019                           tosh	equ	0xFFE
 32020                           tosl	equ	0xFFD
 32021                           pclatu	equ	0xFFB
 32022                           pclath	equ	0xFFA
 32023                           tblptru	equ	0xFF8
 32024                           tblptrh	equ	0xFF7
 32025                           tblptrl	equ	0xFF6
 32026                           tablat	equ	0xFF5
 32027                           prodh	equ	0xFF4
 32028                           prodl	equ	0xFF3
 32029                           intcon	equ	0xFF2
 32030                           indf0	equ	0xFEF
 32031                           postinc0	equ	0xFEE
 32032                           fsr0h	equ	0xFEA
 32033                           fsr0l	equ	0xFE9
 32034                           wreg	equ	0xFE8
 32035                           indf1	equ	0xFE7
 32036                           postdec1	equ	0xFE5
 32037                           plusw1	equ	0xFE3
 32038                           fsr1h	equ	0xFE2
 32039                           fsr1l	equ	0xFE1
 32040                           bsr	equ	0xFE0
 32041                           indf2	equ	0xFDF
 32042                           postinc2	equ	0xFDE
 32043                           postdec2	equ	0xFDD
 32044                           plusw2	equ	0xFDB
 32045                           fsr2h	equ	0xFDA
 32046                           fsr2l	equ	0xFD9
 32047                           status	equ	0xFD8
 32048                           
 32049                           	psect	intcode_body
 32050  017CC8                     __pintcode_body:
 32051                           	opt stack 11
 32052  017CC8                     int_func:
 32053                           	opt stack 11
 32054  017CC8  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 32055  017CCC  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 32056  017CD0  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 32057  017CD4  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 32058  017CD8  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 32059  017CDC  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 32060  017CE0  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 32061  017CE4  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 32062  017CE8  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 32063  017CEC  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 32064  017CF0  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 32065  017CF4  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 32066  017CF8  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 32067  017CFC  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 32068  017D00  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 32069  017D04  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 32070  017D08  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 32071  017D0C  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 32072                           
 32073                           ;interrupt_manager.c: 89: if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 32074  017D10  010E               	movlb	14	; () banked
 32075  017D12  BF2B               	btfsc	43,7,b	;volatile
 32076                           
 32077                           ; BSR set to: 14
 32078  017D14  AF35               	btfss	53,7,b	;volatile
 32079  017D16  D003               	goto	i2l224
 32080                           
 32081                           ; BSR set to: 14
 32082                           ;interrupt_manager.c: 90: {
 32083                           ;interrupt_manager.c: 91: HLVD_ISR();
 32084  017D18  EC13  F0C9         	call	_HLVD_ISR	;wreg free
 32085                           
 32086                           ;interrupt_manager.c: 92: }
 32087  017D1C  D021               	goto	i2l232
 32088  017D1E                     i2l224:
 32089                           
 32090                           ; BSR set to: 14
 32091                           ;interrupt_manager.c: 93: else if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
 32092  017D1E  B129               	btfsc	41,0,b	;volatile
 32093                           
 32094                           ; BSR set to: 14
 32095  017D20  A133               	btfss	51,0,b	;volatile
 32096  017D22  D003               	goto	i2l226
 32097                           
 32098                           ; BSR set to: 14
 32099                           ;interrupt_manager.c: 94: {
 32100                           ;interrupt_manager.c: 95: INT0_ISR();
 32101  017D24  EC4C  F0CB         	call	_INT0_ISR	;wreg free
 32102                           
 32103                           ;interrupt_manager.c: 96: }
 32104  017D28  D01B               	goto	i2l232
 32105  017D2A                     i2l226:
 32106                           
 32107                           ; BSR set to: 14
 32108                           ;interrupt_manager.c: 97: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 32109  017D2A  BF2C               	btfsc	44,7,b	;volatile
 32110                           
 32111                           ; BSR set to: 14
 32112  017D2C  AF36               	btfss	54,7,b	;volatile
 32113  017D2E  D00D               	goto	i2l228
 32114                           
 32115                           ; BSR set to: 14
 32116                           ;interrupt_manager.c: 98: {
 32117                           ;interrupt_manager.c: 99: EUSART2_RxDefaultInterruptHandler();
 32118  017D30  D801               	call	i2u2727_48
 32119  017D32  D016               	goto	i2l232
 32120  017D34                     i2u2727_48:
 32121  017D34  0005               	push	
 32122  017D36  6EFA               	movwf	pclath,c
 32123  017D38  0102               	movlb	2	; () banked
 32124  017D3A  5137               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 32125  017D3C  6EFD               	movwf	tosl,c
 32126  017D3E  5138               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 32127  017D40  6EFE               	movwf	tosh,c
 32128  017D42  5139               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 32129  017D44  6EFF               	movwf	tosu,c
 32130  017D46  50FA               	movf	pclath,w,c
 32131  017D48  0012               	return		;indir
 32132  017D4A                     i2l228:
 32133                           
 32134                           ; BSR set to: 14
 32135                           ;interrupt_manager.c: 101: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 32136  017D4A  B92E               	btfsc	46,4,b	;volatile
 32137                           
 32138                           ; BSR set to: 14
 32139  017D4C  A938               	btfss	56,4,b	;volatile
 32140  017D4E  D003               	goto	i2l230
 32141                           
 32142                           ; BSR set to: 14
 32143                           ;interrupt_manager.c: 102: {
 32144                           ;interrupt_manager.c: 103: TMR5_ISR();
 32145  017D50  ECC7  F0C8         	call	_TMR5_ISR	;wreg free
 32146                           
 32147                           ;interrupt_manager.c: 104: }
 32148  017D54  D005               	goto	i2l232
 32149  017D56                     i2l230:
 32150                           
 32151                           ; BSR set to: 14
 32152                           ;interrupt_manager.c: 105: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 32153  017D56  B32A               	btfsc	42,1,b	;volatile
 32154                           
 32155                           ; BSR set to: 14
 32156  017D58  A334               	btfss	52,1,b	;volatile
 32157  017D5A  D002               	goto	i2l232
 32158                           
 32159                           ; BSR set to: 14
 32160                           ;interrupt_manager.c: 106: {
 32161                           ;interrupt_manager.c: 107: ADCC_ThresholdISR();
 32162  017D5C  ECB0  F0C9         	call	_ADCC_ThresholdISR	;wreg free
 32163  017D60                     i2l232:
 32164                           
 32165                           ;interrupt_manager.c: 109: else
 32166                           ;interrupt_manager.c: 110: {
 32167  017D60  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 32168  017D64  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 32169  017D68  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 32170  017D6C  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 32171  017D70  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 32172  017D74  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 32173  017D78  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 32174  017D7C  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 32175  017D80  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 32176  017D84  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 32177  017D88  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 32178  017D8C  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 32179  017D90  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 32180  017D94  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 32181  017D98  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 32182  017D9C  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 32183  017DA0  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 32184  017DA4  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 32185  017DA8  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 32186  017DAA  0011               	retfie		f
 32187  017DAC                     __end_of_INTERRUPT_InterruptManagerHigh:
 32188                           	opt stack 0
 32189                           tosu	equ	0xFFF
 32190                           tosh	equ	0xFFE
 32191                           tosl	equ	0xFFD
 32192                           pclatu	equ	0xFFB
 32193                           pclath	equ	0xFFA
 32194                           tblptru	equ	0xFF8
 32195                           tblptrh	equ	0xFF7
 32196                           tblptrl	equ	0xFF6
 32197                           tablat	equ	0xFF5
 32198                           prodh	equ	0xFF4
 32199                           prodl	equ	0xFF3
 32200                           intcon	equ	0xFF2
 32201                           indf0	equ	0xFEF
 32202                           postinc0	equ	0xFEE
 32203                           fsr0h	equ	0xFEA
 32204                           fsr0l	equ	0xFE9
 32205                           wreg	equ	0xFE8
 32206                           indf1	equ	0xFE7
 32207                           postdec1	equ	0xFE5
 32208                           plusw1	equ	0xFE3
 32209                           fsr1h	equ	0xFE2
 32210                           fsr1l	equ	0xFE1
 32211                           bsr	equ	0xFE0
 32212                           indf2	equ	0xFDF
 32213                           postinc2	equ	0xFDE
 32214                           postdec2	equ	0xFDD
 32215                           plusw2	equ	0xFDB
 32216                           fsr2h	equ	0xFDA
 32217                           fsr2l	equ	0xFD9
 32218                           status	equ	0xFD8
 32219                           
 32220 ;; *************** function _TMR5_ISR *****************
 32221 ;; Defined at:
 32222 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 32223 ;; Parameters:    Size  Location     Type
 32224 ;;		None
 32225 ;; Auto vars:     Size  Location     Type
 32226 ;;		None
 32227 ;; Return value:  Size  Location     Type
 32228 ;;                  1    wreg      void 
 32229 ;; Registers used:
 32230 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32231 ;; Tracked objects:
 32232 ;;		On entry : 0/0
 32233 ;;		On exit  : 0/0
 32234 ;;		Unchanged: 0/0
 32235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32240 ;;Total ram usage:        0 bytes
 32241 ;; Hardware stack levels used:    1
 32242 ;; Hardware stack levels required when called:    2
 32243 ;; This function calls:
 32244 ;;		Absolute function
 32245 ;;		_TMR5_DefaultInterruptHandler
 32246 ;;		_TMR5_WriteTimer
 32247 ;;		_dimmingOnTimeCallback
 32248 ;; This function is called by:
 32249 ;;		_INTERRUPT_InterruptManagerHigh
 32250 ;; This function uses a non-reentrant model
 32251 ;;
 32252                           
 32253                           	psect	text89
 32254  01918E                     __ptext89:
 32255                           	opt stack 0
 32256  01918E                     _TMR5_ISR:
 32257                           	opt stack 16
 32258                           
 32259                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 32260                           
 32261                           ;incstack = 0
 32262  01918E  010E               	movlb	14	; () banked
 32263  019190  9938               	bcf	56,4,b	;volatile
 32264                           
 32265                           ; BSR set to: 14
 32266                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 32267  019192  C23F  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 32268  019196  C240  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 32269  01919A  EC7C  F0CA         	call	_TMR5_WriteTimer	;wreg free
 32270                           
 32271                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 32272  01919E  0102               	movlb	2	; () banked
 32273  0191A0  512B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32274  0191A2  112C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32275  0191A4  112D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32276  0191A6  B4D8               	btfsc	status,2,c
 32277  0191A8  0012               	return	
 32278                           
 32279                           ; BSR set to: 2
 32280                           ;tmr5.c: 172: {
 32281                           ;tmr5.c: 173: TMR5_InterruptHandler();
 32282  0191AA  D801               	call	i2u2703_48
 32283  0191AC  0012               	return	
 32284  0191AE                     i2u2703_48:
 32285  0191AE  0005               	push	
 32286  0191B0  6EFA               	movwf	pclath,c
 32287  0191B2  512B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32288  0191B4  6EFD               	movwf	tosl,c
 32289  0191B6  512C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32290  0191B8  6EFE               	movwf	tosh,c
 32291  0191BA  512D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32292  0191BC  6EFF               	movwf	tosu,c
 32293  0191BE  50FA               	movf	pclath,w,c
 32294  0191C0  0012               	return		;indir
 32295  0191C2                     __end_of_TMR5_ISR:
 32296                           	opt stack 0
 32297                           tosu	equ	0xFFF
 32298                           tosh	equ	0xFFE
 32299                           tosl	equ	0xFFD
 32300                           pclatu	equ	0xFFB
 32301                           pclath	equ	0xFFA
 32302                           tblptru	equ	0xFF8
 32303                           tblptrh	equ	0xFF7
 32304                           tblptrl	equ	0xFF6
 32305                           tablat	equ	0xFF5
 32306                           prodh	equ	0xFF4
 32307                           prodl	equ	0xFF3
 32308                           intcon	equ	0xFF2
 32309                           indf0	equ	0xFEF
 32310                           postinc0	equ	0xFEE
 32311                           fsr0h	equ	0xFEA
 32312                           fsr0l	equ	0xFE9
 32313                           wreg	equ	0xFE8
 32314                           indf1	equ	0xFE7
 32315                           postdec1	equ	0xFE5
 32316                           plusw1	equ	0xFE3
 32317                           fsr1h	equ	0xFE2
 32318                           fsr1l	equ	0xFE1
 32319                           bsr	equ	0xFE0
 32320                           indf2	equ	0xFDF
 32321                           postinc2	equ	0xFDE
 32322                           postdec2	equ	0xFDD
 32323                           plusw2	equ	0xFDB
 32324                           fsr2h	equ	0xFDA
 32325                           fsr2l	equ	0xFD9
 32326                           status	equ	0xFD8
 32327                           
 32328 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32329 ;; Defined at:
 32330 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 32331 ;; Parameters:    Size  Location     Type
 32332 ;;		None
 32333 ;; Auto vars:     Size  Location     Type
 32334 ;;		None
 32335 ;; Return value:  Size  Location     Type
 32336 ;;                  1    wreg      void 
 32337 ;; Registers used:
 32338 ;;		None
 32339 ;; Tracked objects:
 32340 ;;		On entry : 0/0
 32341 ;;		On exit  : 0/0
 32342 ;;		Unchanged: 0/0
 32343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32348 ;;Total ram usage:        0 bytes
 32349 ;; Hardware stack levels used:    1
 32350 ;; This function calls:
 32351 ;;		Nothing
 32352 ;; This function is called by:
 32353 ;;		_TMR5_Initialize
 32354 ;;		_TMR5_ISR
 32355 ;; This function uses a non-reentrant model
 32356 ;;
 32357                           
 32358                           	psect	text90
 32359  0196E8                     __ptext90:
 32360                           	opt stack 0
 32361  0196E8                     _TMR5_DefaultInterruptHandler:
 32362                           	opt stack 17
 32363                           
 32364                           ;incstack = 0
 32365  0196E8  0012               	return		;funcret
 32366  0196EA                     __end_of_TMR5_DefaultInterruptHandler:
 32367                           	opt stack 0
 32368                           tosu	equ	0xFFF
 32369                           tosh	equ	0xFFE
 32370                           tosl	equ	0xFFD
 32371                           pclatu	equ	0xFFB
 32372                           pclath	equ	0xFFA
 32373                           tblptru	equ	0xFF8
 32374                           tblptrh	equ	0xFF7
 32375                           tblptrl	equ	0xFF6
 32376                           tablat	equ	0xFF5
 32377                           prodh	equ	0xFF4
 32378                           prodl	equ	0xFF3
 32379                           intcon	equ	0xFF2
 32380                           indf0	equ	0xFEF
 32381                           postinc0	equ	0xFEE
 32382                           fsr0h	equ	0xFEA
 32383                           fsr0l	equ	0xFE9
 32384                           wreg	equ	0xFE8
 32385                           indf1	equ	0xFE7
 32386                           postdec1	equ	0xFE5
 32387                           plusw1	equ	0xFE3
 32388                           fsr1h	equ	0xFE2
 32389                           fsr1l	equ	0xFE1
 32390                           bsr	equ	0xFE0
 32391                           indf2	equ	0xFDF
 32392                           postinc2	equ	0xFDE
 32393                           postdec2	equ	0xFDD
 32394                           plusw2	equ	0xFDB
 32395                           fsr2h	equ	0xFDA
 32396                           fsr2l	equ	0xFD9
 32397                           status	equ	0xFD8
 32398                           
 32399 ;; *************** function _dimmingOnTimeCallback *****************
 32400 ;; Defined at:
 32401 ;;		line 460 in file "main.c"
 32402 ;; Parameters:    Size  Location     Type
 32403 ;;		None
 32404 ;; Auto vars:     Size  Location     Type
 32405 ;;		None
 32406 ;; Return value:  Size  Location     Type
 32407 ;;                  1    wreg      void 
 32408 ;; Registers used:
 32409 ;;		cstack
 32410 ;; Tracked objects:
 32411 ;;		On entry : 0/0
 32412 ;;		On exit  : 0/0
 32413 ;;		Unchanged: 0/0
 32414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32419 ;;Total ram usage:        0 bytes
 32420 ;; Hardware stack levels used:    1
 32421 ;; Hardware stack levels required when called:    1
 32422 ;; This function calls:
 32423 ;;		i2_TMR5_StopTimer
 32424 ;; This function is called by:
 32425 ;;		_main
 32426 ;;		_TMR5_ISR
 32427 ;; This function uses a non-reentrant model
 32428 ;;
 32429                           
 32430                           	psect	text91
 32431  019680                     __ptext91:
 32432                           	opt stack 0
 32433  019680                     _dimmingOnTimeCallback:
 32434                           	opt stack 16
 32435                           
 32436                           ;main.c: 463: LATGbits.LATG1 = 1;
 32437                           
 32438                           ;incstack = 0
 32439  019680  827F               	bsf	3967,1,c	;volatile
 32440                           
 32441                           ;main.c: 466: TMR5_StopTimer();
 32442  019682  EC6C  F0CB         	call	i2_TMR5_StopTimer	;wreg free
 32443                           
 32444                           ;main.c: 469: PIE5bits.TMR5IE = 0;
 32445  019686  010E               	movlb	14	; () banked
 32446  019688  992E               	bcf	46,4,b	;volatile
 32447                           
 32448                           ; BSR set to: 14
 32449  01968A  0012               	return		;funcret
 32450  01968C                     __end_of_dimmingOnTimeCallback:
 32451                           	opt stack 0
 32452                           tosu	equ	0xFFF
 32453                           tosh	equ	0xFFE
 32454                           tosl	equ	0xFFD
 32455                           pclatu	equ	0xFFB
 32456                           pclath	equ	0xFFA
 32457                           tblptru	equ	0xFF8
 32458                           tblptrh	equ	0xFF7
 32459                           tblptrl	equ	0xFF6
 32460                           tablat	equ	0xFF5
 32461                           prodh	equ	0xFF4
 32462                           prodl	equ	0xFF3
 32463                           intcon	equ	0xFF2
 32464                           indf0	equ	0xFEF
 32465                           postinc0	equ	0xFEE
 32466                           fsr0h	equ	0xFEA
 32467                           fsr0l	equ	0xFE9
 32468                           wreg	equ	0xFE8
 32469                           indf1	equ	0xFE7
 32470                           postdec1	equ	0xFE5
 32471                           plusw1	equ	0xFE3
 32472                           fsr1h	equ	0xFE2
 32473                           fsr1l	equ	0xFE1
 32474                           bsr	equ	0xFE0
 32475                           indf2	equ	0xFDF
 32476                           postinc2	equ	0xFDE
 32477                           postdec2	equ	0xFDD
 32478                           plusw2	equ	0xFDB
 32479                           fsr2h	equ	0xFDA
 32480                           fsr2l	equ	0xFD9
 32481                           status	equ	0xFD8
 32482                           
 32483 ;; *************** function i2_TMR5_StopTimer *****************
 32484 ;; Defined at:
 32485 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 32486 ;; Parameters:    Size  Location     Type
 32487 ;;		None
 32488 ;; Auto vars:     Size  Location     Type
 32489 ;;		None
 32490 ;; Return value:  Size  Location     Type
 32491 ;;                  1    wreg      void 
 32492 ;; Registers used:
 32493 ;;		None
 32494 ;; Tracked objects:
 32495 ;;		On entry : 0/0
 32496 ;;		On exit  : 0/0
 32497 ;;		Unchanged: 0/0
 32498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32503 ;;Total ram usage:        0 bytes
 32504 ;; Hardware stack levels used:    1
 32505 ;; This function calls:
 32506 ;;		Nothing
 32507 ;; This function is called by:
 32508 ;;		_dimmingOnTimeCallback
 32509 ;; This function uses a non-reentrant model
 32510 ;;
 32511                           
 32512                           	psect	text92
 32513  0196D8                     __ptext92:
 32514                           	opt stack 0
 32515  0196D8                     i2_TMR5_StopTimer:
 32516                           	opt stack 16
 32517                           
 32518                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 32519                           
 32520                           ; BSR set to: 14
 32521                           ;incstack = 0
 32522  0196D8  90C3               	bcf	4035,0,c	;volatile
 32523  0196DA  0012               	return		;funcret
 32524  0196DC                     __end_ofi2_TMR5_StopTimer:
 32525                           	opt stack 0
 32526                           tosu	equ	0xFFF
 32527                           tosh	equ	0xFFE
 32528                           tosl	equ	0xFFD
 32529                           pclatu	equ	0xFFB
 32530                           pclath	equ	0xFFA
 32531                           tblptru	equ	0xFF8
 32532                           tblptrh	equ	0xFF7
 32533                           tblptrl	equ	0xFF6
 32534                           tablat	equ	0xFF5
 32535                           prodh	equ	0xFF4
 32536                           prodl	equ	0xFF3
 32537                           intcon	equ	0xFF2
 32538                           indf0	equ	0xFEF
 32539                           postinc0	equ	0xFEE
 32540                           fsr0h	equ	0xFEA
 32541                           fsr0l	equ	0xFE9
 32542                           wreg	equ	0xFE8
 32543                           indf1	equ	0xFE7
 32544                           postdec1	equ	0xFE5
 32545                           plusw1	equ	0xFE3
 32546                           fsr1h	equ	0xFE2
 32547                           fsr1l	equ	0xFE1
 32548                           bsr	equ	0xFE0
 32549                           indf2	equ	0xFDF
 32550                           postinc2	equ	0xFDE
 32551                           postdec2	equ	0xFDD
 32552                           plusw2	equ	0xFDB
 32553                           fsr2h	equ	0xFDA
 32554                           fsr2l	equ	0xFD9
 32555                           status	equ	0xFD8
 32556                           
 32557 ;; *************** function _INT0_ISR *****************
 32558 ;; Defined at:
 32559 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 32560 ;; Parameters:    Size  Location     Type
 32561 ;;		None
 32562 ;; Auto vars:     Size  Location     Type
 32563 ;;		None
 32564 ;; Return value:  Size  Location     Type
 32565 ;;                  1    wreg      void 
 32566 ;; Registers used:
 32567 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32568 ;; Tracked objects:
 32569 ;;		On entry : 0/0
 32570 ;;		On exit  : 0/0
 32571 ;;		Unchanged: 0/0
 32572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32577 ;;Total ram usage:        0 bytes
 32578 ;; Hardware stack levels used:    1
 32579 ;; Hardware stack levels required when called:    3
 32580 ;; This function calls:
 32581 ;;		_INT0_CallBack
 32582 ;; This function is called by:
 32583 ;;		_INTERRUPT_InterruptManagerHigh
 32584 ;; This function uses a non-reentrant model
 32585 ;;
 32586                           
 32587                           	psect	text93
 32588  019698                     __ptext93:
 32589                           	opt stack 0
 32590  019698                     _INT0_ISR:
 32591                           	opt stack 15
 32592                           
 32593                           ;ext_int.c: 34: (PIR0bits.INT0IF = 0);
 32594                           
 32595                           ;incstack = 0
 32596  019698  010E               	movlb	14	; () banked
 32597  01969A  9133               	bcf	51,0,b	;volatile
 32598                           
 32599                           ; BSR set to: 14
 32600                           ;ext_int.c: 37: INT0_CallBack();
 32601  01969C  EC0F  F0CA         	call	_INT0_CallBack	;wreg free
 32602  0196A0  0012               	return		;funcret
 32603  0196A2                     __end_of_INT0_ISR:
 32604                           	opt stack 0
 32605                           tosu	equ	0xFFF
 32606                           tosh	equ	0xFFE
 32607                           tosl	equ	0xFFD
 32608                           pclatu	equ	0xFFB
 32609                           pclath	equ	0xFFA
 32610                           tblptru	equ	0xFF8
 32611                           tblptrh	equ	0xFF7
 32612                           tblptrl	equ	0xFF6
 32613                           tablat	equ	0xFF5
 32614                           prodh	equ	0xFF4
 32615                           prodl	equ	0xFF3
 32616                           intcon	equ	0xFF2
 32617                           indf0	equ	0xFEF
 32618                           postinc0	equ	0xFEE
 32619                           fsr0h	equ	0xFEA
 32620                           fsr0l	equ	0xFE9
 32621                           wreg	equ	0xFE8
 32622                           indf1	equ	0xFE7
 32623                           postdec1	equ	0xFE5
 32624                           plusw1	equ	0xFE3
 32625                           fsr1h	equ	0xFE2
 32626                           fsr1l	equ	0xFE1
 32627                           bsr	equ	0xFE0
 32628                           indf2	equ	0xFDF
 32629                           postinc2	equ	0xFDE
 32630                           postdec2	equ	0xFDD
 32631                           plusw2	equ	0xFDB
 32632                           fsr2h	equ	0xFDA
 32633                           fsr2l	equ	0xFD9
 32634                           status	equ	0xFD8
 32635                           
 32636 ;; *************** function _INT0_CallBack *****************
 32637 ;; Defined at:
 32638 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 32639 ;; Parameters:    Size  Location     Type
 32640 ;;		None
 32641 ;; Auto vars:     Size  Location     Type
 32642 ;;		None
 32643 ;; Return value:  Size  Location     Type
 32644 ;;                  1    wreg      void 
 32645 ;; Registers used:
 32646 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32647 ;; Tracked objects:
 32648 ;;		On entry : 0/0
 32649 ;;		On exit  : 0/0
 32650 ;;		Unchanged: 0/0
 32651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32656 ;;Total ram usage:        0 bytes
 32657 ;; Hardware stack levels used:    1
 32658 ;; Hardware stack levels required when called:    2
 32659 ;; This function calls:
 32660 ;;		Absolute function
 32661 ;;		_INT0_DefaultInterruptHandler
 32662 ;;		_dimmingOffTimeCallback
 32663 ;; This function is called by:
 32664 ;;		_INT0_ISR
 32665 ;; This function uses a non-reentrant model
 32666 ;;
 32667                           
 32668                           	psect	text94
 32669  01941E                     __ptext94:
 32670                           	opt stack 0
 32671  01941E                     _INT0_CallBack:
 32672                           	opt stack 15
 32673                           
 32674                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 32675                           
 32676                           ;incstack = 0
 32677  01941E  0102               	movlb	2	; () banked
 32678  019420  5128               	movf	_INT0_InterruptHandler& (0+255),w,b
 32679  019422  1129               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32680  019424  112A               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32681  019426  B4D8               	btfsc	status,2,c
 32682  019428  0012               	return	
 32683                           
 32684                           ; BSR set to: 2
 32685                           ;ext_int.c: 45: {
 32686                           ;ext_int.c: 46: INT0_InterruptHandler();
 32687  01942A  D801               	call	i2u2701_48
 32688  01942C  0012               	return	
 32689  01942E                     i2u2701_48:
 32690  01942E  0005               	push	
 32691  019430  6EFA               	movwf	pclath,c
 32692  019432  5128               	movf	_INT0_InterruptHandler& (0+255),w,b
 32693  019434  6EFD               	movwf	tosl,c
 32694  019436  5129               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32695  019438  6EFE               	movwf	tosh,c
 32696  01943A  512A               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32697  01943C  6EFF               	movwf	tosu,c
 32698  01943E  50FA               	movf	pclath,w,c
 32699  019440  0012               	return		;indir
 32700  019442                     __end_of_INT0_CallBack:
 32701                           	opt stack 0
 32702                           tosu	equ	0xFFF
 32703                           tosh	equ	0xFFE
 32704                           tosl	equ	0xFFD
 32705                           pclatu	equ	0xFFB
 32706                           pclath	equ	0xFFA
 32707                           tblptru	equ	0xFF8
 32708                           tblptrh	equ	0xFF7
 32709                           tblptrl	equ	0xFF6
 32710                           tablat	equ	0xFF5
 32711                           prodh	equ	0xFF4
 32712                           prodl	equ	0xFF3
 32713                           intcon	equ	0xFF2
 32714                           indf0	equ	0xFEF
 32715                           postinc0	equ	0xFEE
 32716                           fsr0h	equ	0xFEA
 32717                           fsr0l	equ	0xFE9
 32718                           wreg	equ	0xFE8
 32719                           indf1	equ	0xFE7
 32720                           postdec1	equ	0xFE5
 32721                           plusw1	equ	0xFE3
 32722                           fsr1h	equ	0xFE2
 32723                           fsr1l	equ	0xFE1
 32724                           bsr	equ	0xFE0
 32725                           indf2	equ	0xFDF
 32726                           postinc2	equ	0xFDE
 32727                           postdec2	equ	0xFDD
 32728                           plusw2	equ	0xFDB
 32729                           fsr2h	equ	0xFDA
 32730                           fsr2l	equ	0xFD9
 32731                           status	equ	0xFD8
 32732                           
 32733 ;; *************** function _INT0_DefaultInterruptHandler *****************
 32734 ;; Defined at:
 32735 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 32736 ;; Parameters:    Size  Location     Type
 32737 ;;		None
 32738 ;; Auto vars:     Size  Location     Type
 32739 ;;		None
 32740 ;; Return value:  Size  Location     Type
 32741 ;;                  1    wreg      void 
 32742 ;; Registers used:
 32743 ;;		None
 32744 ;; Tracked objects:
 32745 ;;		On entry : 0/0
 32746 ;;		On exit  : 0/0
 32747 ;;		Unchanged: 0/0
 32748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32753 ;;Total ram usage:        0 bytes
 32754 ;; Hardware stack levels used:    1
 32755 ;; This function calls:
 32756 ;;		Nothing
 32757 ;; This function is called by:
 32758 ;;		_EXT_INT_Initialize
 32759 ;;		_INT0_CallBack
 32760 ;; This function uses a non-reentrant model
 32761 ;;
 32762                           
 32763                           	psect	text95
 32764  0196EA                     __ptext95:
 32765                           	opt stack 0
 32766  0196EA                     _INT0_DefaultInterruptHandler:
 32767                           	opt stack 16
 32768                           
 32769                           ;incstack = 0
 32770  0196EA  0012               	return		;funcret
 32771  0196EC                     __end_of_INT0_DefaultInterruptHandler:
 32772                           	opt stack 0
 32773                           tosu	equ	0xFFF
 32774                           tosh	equ	0xFFE
 32775                           tosl	equ	0xFFD
 32776                           pclatu	equ	0xFFB
 32777                           pclath	equ	0xFFA
 32778                           tblptru	equ	0xFF8
 32779                           tblptrh	equ	0xFF7
 32780                           tblptrl	equ	0xFF6
 32781                           tablat	equ	0xFF5
 32782                           prodh	equ	0xFF4
 32783                           prodl	equ	0xFF3
 32784                           intcon	equ	0xFF2
 32785                           indf0	equ	0xFEF
 32786                           postinc0	equ	0xFEE
 32787                           fsr0h	equ	0xFEA
 32788                           fsr0l	equ	0xFE9
 32789                           wreg	equ	0xFE8
 32790                           indf1	equ	0xFE7
 32791                           postdec1	equ	0xFE5
 32792                           plusw1	equ	0xFE3
 32793                           fsr1h	equ	0xFE2
 32794                           fsr1l	equ	0xFE1
 32795                           bsr	equ	0xFE0
 32796                           indf2	equ	0xFDF
 32797                           postinc2	equ	0xFDE
 32798                           postdec2	equ	0xFDD
 32799                           plusw2	equ	0xFDB
 32800                           fsr2h	equ	0xFDA
 32801                           fsr2l	equ	0xFD9
 32802                           status	equ	0xFD8
 32803                           
 32804 ;; *************** function _dimmingOffTimeCallback *****************
 32805 ;; Defined at:
 32806 ;;		line 445 in file "main.c"
 32807 ;; Parameters:    Size  Location     Type
 32808 ;;		None
 32809 ;; Auto vars:     Size  Location     Type
 32810 ;;		None
 32811 ;; Return value:  Size  Location     Type
 32812 ;;                  1    wreg      void 
 32813 ;; Registers used:
 32814 ;;		wreg, status,2, cstack
 32815 ;; Tracked objects:
 32816 ;;		On entry : 0/0
 32817 ;;		On exit  : 0/0
 32818 ;;		Unchanged: 0/0
 32819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32824 ;;Total ram usage:        0 bytes
 32825 ;; Hardware stack levels used:    1
 32826 ;; Hardware stack levels required when called:    1
 32827 ;; This function calls:
 32828 ;;		_TMR5_StartTimer
 32829 ;;		_TMR5_WriteTimer
 32830 ;; This function is called by:
 32831 ;;		_main
 32832 ;;		_INT0_CallBack
 32833 ;; This function uses a non-reentrant model
 32834 ;;
 32835                           
 32836                           	psect	text96
 32837  019548                     __ptext96:
 32838                           	opt stack 0
 32839  019548                     _dimmingOffTimeCallback:
 32840                           	opt stack 15
 32841                           
 32842                           ;main.c: 448: LATGbits.LATG1 = 0;
 32843                           
 32844                           ;incstack = 0
 32845  019548  927F               	bcf	3967,1,c	;volatile
 32846                           
 32847                           ;main.c: 451: TMR5_WriteTimer(dimming_period);
 32848  01954A  C0F0  F001         	movff	_dimming_period,TMR5_WriteTimer@timerVal	;volatile
 32849  01954E  C0F1  F002         	movff	_dimming_period+1,TMR5_WriteTimer@timerVal+1	;volatile
 32850  019552  EC7C  F0CA         	call	_TMR5_WriteTimer	;wreg free
 32851                           
 32852                           ;main.c: 452: TMR5_StartTimer();
 32853  019556  EC6E  F0CB         	call	_TMR5_StartTimer	;wreg free
 32854                           
 32855                           ;main.c: 455: PIE5bits.TMR5IE = 1;
 32856  01955A  010E               	movlb	14	; () banked
 32857  01955C  892E               	bsf	46,4,b	;volatile
 32858                           
 32859                           ; BSR set to: 14
 32860  01955E  0012               	return		;funcret
 32861  019560                     __end_of_dimmingOffTimeCallback:
 32862                           	opt stack 0
 32863                           tosu	equ	0xFFF
 32864                           tosh	equ	0xFFE
 32865                           tosl	equ	0xFFD
 32866                           pclatu	equ	0xFFB
 32867                           pclath	equ	0xFFA
 32868                           tblptru	equ	0xFF8
 32869                           tblptrh	equ	0xFF7
 32870                           tblptrl	equ	0xFF6
 32871                           tablat	equ	0xFF5
 32872                           prodh	equ	0xFF4
 32873                           prodl	equ	0xFF3
 32874                           intcon	equ	0xFF2
 32875                           indf0	equ	0xFEF
 32876                           postinc0	equ	0xFEE
 32877                           fsr0h	equ	0xFEA
 32878                           fsr0l	equ	0xFE9
 32879                           wreg	equ	0xFE8
 32880                           indf1	equ	0xFE7
 32881                           postdec1	equ	0xFE5
 32882                           plusw1	equ	0xFE3
 32883                           fsr1h	equ	0xFE2
 32884                           fsr1l	equ	0xFE1
 32885                           bsr	equ	0xFE0
 32886                           indf2	equ	0xFDF
 32887                           postinc2	equ	0xFDE
 32888                           postdec2	equ	0xFDD
 32889                           plusw2	equ	0xFDB
 32890                           fsr2h	equ	0xFDA
 32891                           fsr2l	equ	0xFD9
 32892                           status	equ	0xFD8
 32893                           
 32894 ;; *************** function _TMR5_WriteTimer *****************
 32895 ;; Defined at:
 32896 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 32897 ;; Parameters:    Size  Location     Type
 32898 ;;  timerVal        2    0[COMRAM] unsigned int 
 32899 ;; Auto vars:     Size  Location     Type
 32900 ;;		None
 32901 ;; Return value:  Size  Location     Type
 32902 ;;                  1    wreg      void 
 32903 ;; Registers used:
 32904 ;;		wreg, status,2
 32905 ;; Tracked objects:
 32906 ;;		On entry : 0/0
 32907 ;;		On exit  : 0/0
 32908 ;;		Unchanged: 0/0
 32909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32914 ;;Total ram usage:        2 bytes
 32915 ;; Hardware stack levels used:    1
 32916 ;; This function calls:
 32917 ;;		Nothing
 32918 ;; This function is called by:
 32919 ;;		_TMR5_ISR
 32920 ;;		_dimmingOffTimeCallback
 32921 ;;		_TMR5_Reload
 32922 ;; This function uses a non-reentrant model
 32923 ;;
 32924                           
 32925                           	psect	text97
 32926  0194F8                     __ptext97:
 32927                           	opt stack 0
 32928  0194F8                     _TMR5_WriteTimer:
 32929                           	opt stack 17
 32930                           
 32931                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 32932                           
 32933                           ; BSR set to: 14
 32934                           ;incstack = 0
 32935  0194F8  A4C3               	btfss	4035,2,c	;volatile
 32936  0194FA  D007               	goto	i2l728
 32937                           
 32938                           ;tmr5.c: 130: {
 32939                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 32940  0194FC  90C3               	bcf	4035,0,c	;volatile
 32941                           
 32942                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 32943  0194FE  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 32944  019500  6EC2               	movwf	4034,c	;volatile
 32945                           
 32946                           ;tmr5.c: 136: TMR5L = timerVal;
 32947  019502  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 32948                           
 32949                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 32950  019506  80C3               	bsf	4035,0,c	;volatile
 32951                           
 32952                           ;tmr5.c: 140: }
 32953  019508  0012               	return	
 32954  01950A                     i2l728:
 32955                           
 32956                           ;tmr5.c: 141: else
 32957                           ;tmr5.c: 142: {
 32958                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 32959  01950A  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 32960  01950C  6EC2               	movwf	4034,c	;volatile
 32961                           
 32962                           ;tmr5.c: 145: TMR5L = timerVal;
 32963  01950E  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 32964  019512  0012               	return	
 32965  019514                     __end_of_TMR5_WriteTimer:
 32966                           	opt stack 0
 32967                           tosu	equ	0xFFF
 32968                           tosh	equ	0xFFE
 32969                           tosl	equ	0xFFD
 32970                           pclatu	equ	0xFFB
 32971                           pclath	equ	0xFFA
 32972                           tblptru	equ	0xFF8
 32973                           tblptrh	equ	0xFF7
 32974                           tblptrl	equ	0xFF6
 32975                           tablat	equ	0xFF5
 32976                           prodh	equ	0xFF4
 32977                           prodl	equ	0xFF3
 32978                           intcon	equ	0xFF2
 32979                           indf0	equ	0xFEF
 32980                           postinc0	equ	0xFEE
 32981                           fsr0h	equ	0xFEA
 32982                           fsr0l	equ	0xFE9
 32983                           wreg	equ	0xFE8
 32984                           indf1	equ	0xFE7
 32985                           postdec1	equ	0xFE5
 32986                           plusw1	equ	0xFE3
 32987                           fsr1h	equ	0xFE2
 32988                           fsr1l	equ	0xFE1
 32989                           bsr	equ	0xFE0
 32990                           indf2	equ	0xFDF
 32991                           postinc2	equ	0xFDE
 32992                           postdec2	equ	0xFDD
 32993                           plusw2	equ	0xFDB
 32994                           fsr2h	equ	0xFDA
 32995                           fsr2l	equ	0xFD9
 32996                           status	equ	0xFD8
 32997                           
 32998 ;; *************** function _TMR5_StartTimer *****************
 32999 ;; Defined at:
 33000 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 33001 ;; Parameters:    Size  Location     Type
 33002 ;;		None
 33003 ;; Auto vars:     Size  Location     Type
 33004 ;;		None
 33005 ;; Return value:  Size  Location     Type
 33006 ;;                  1    wreg      void 
 33007 ;; Registers used:
 33008 ;;		None
 33009 ;; Tracked objects:
 33010 ;;		On entry : 0/0
 33011 ;;		On exit  : 0/0
 33012 ;;		Unchanged: 0/0
 33013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33018 ;;Total ram usage:        0 bytes
 33019 ;; Hardware stack levels used:    1
 33020 ;; This function calls:
 33021 ;;		Nothing
 33022 ;; This function is called by:
 33023 ;;		_dimmingOffTimeCallback
 33024 ;; This function uses a non-reentrant model
 33025 ;;
 33026                           
 33027                           	psect	text98
 33028  0196DC                     __ptext98:
 33029                           	opt stack 0
 33030  0196DC                     _TMR5_StartTimer:
 33031                           	opt stack 15
 33032                           
 33033                           ;tmr5.c: 102: T5CONbits.TMR5ON = 1;
 33034                           
 33035                           ;incstack = 0
 33036  0196DC  80C3               	bsf	4035,0,c	;volatile
 33037  0196DE  0012               	return		;funcret
 33038  0196E0                     __end_of_TMR5_StartTimer:
 33039                           	opt stack 0
 33040                           tosu	equ	0xFFF
 33041                           tosh	equ	0xFFE
 33042                           tosl	equ	0xFFD
 33043                           pclatu	equ	0xFFB
 33044                           pclath	equ	0xFFA
 33045                           tblptru	equ	0xFF8
 33046                           tblptrh	equ	0xFF7
 33047                           tblptrl	equ	0xFF6
 33048                           tablat	equ	0xFF5
 33049                           prodh	equ	0xFF4
 33050                           prodl	equ	0xFF3
 33051                           intcon	equ	0xFF2
 33052                           indf0	equ	0xFEF
 33053                           postinc0	equ	0xFEE
 33054                           fsr0h	equ	0xFEA
 33055                           fsr0l	equ	0xFE9
 33056                           wreg	equ	0xFE8
 33057                           indf1	equ	0xFE7
 33058                           postdec1	equ	0xFE5
 33059                           plusw1	equ	0xFE3
 33060                           fsr1h	equ	0xFE2
 33061                           fsr1l	equ	0xFE1
 33062                           bsr	equ	0xFE0
 33063                           indf2	equ	0xFDF
 33064                           postinc2	equ	0xFDE
 33065                           postdec2	equ	0xFDD
 33066                           plusw2	equ	0xFDB
 33067                           fsr2h	equ	0xFDA
 33068                           fsr2l	equ	0xFD9
 33069                           status	equ	0xFD8
 33070                           
 33071 ;; *************** function _HLVD_ISR *****************
 33072 ;; Defined at:
 33073 ;;		line 120 in file "mcc_generated_files/hlvd.c"
 33074 ;; Parameters:    Size  Location     Type
 33075 ;;		None
 33076 ;; Auto vars:     Size  Location     Type
 33077 ;;		None
 33078 ;; Return value:  Size  Location     Type
 33079 ;;                  1    wreg      void 
 33080 ;; Registers used:
 33081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33082 ;; Tracked objects:
 33083 ;;		On entry : 0/0
 33084 ;;		On exit  : 0/0
 33085 ;;		Unchanged: 0/0
 33086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33091 ;;Total ram usage:        0 bytes
 33092 ;; Hardware stack levels used:    1
 33093 ;; Hardware stack levels required when called:    2
 33094 ;; This function calls:
 33095 ;;		i2_writeDoubleToEEPROM
 33096 ;; This function is called by:
 33097 ;;		_INTERRUPT_InterruptManagerHigh
 33098 ;; This function uses a non-reentrant model
 33099 ;;
 33100                           
 33101                           	psect	text99
 33102  019226                     __ptext99:
 33103                           	opt stack 0
 33104  019226                     _HLVD_ISR:
 33105                           	opt stack 16
 33106                           
 33107                           ;hlvd.c: 124: PIR2bits.HLVDIF = 0;
 33108                           
 33109                           ;incstack = 0
 33110  019226  010E               	movlb	14	; () banked
 33111  019228  9F35               	bcf	53,7,b	;volatile
 33112                           
 33113                           ; BSR set to: 14
 33114                           ;hlvd.c: 126: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 33115  01922A  C0F6  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 33116  01922E  C0F7  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 33117  019232  C0F8  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 33118  019236  C0F9  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 33119  01923A  0EFD               	movlw	low _Total_Energy_address
 33120  01923C  6EF6               	movwf	tblptrl,c
 33121  01923E                     	if	1	;There is more than 1 active tblptr byte
 33122  01923E  0ED7               	movlw	high _Total_Energy_address
 33123  019240  6EF7               	movwf	tblptrh,c
 33124  019242                     	endif
 33125  019242                     	if	1	;There are 3 active tblptr bytes
 33126  019242  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 33127  019244  6EF8               	movwf	tblptru,c
 33128  019246                     	endif
 33129  019246  0009               	tblrd		*+
 33130  019248  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 33131  01924C  000A               	tblrd		*-
 33132  01924E  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 33133  019252  ECC9  F0C6         	call	i2_writeDoubleToEEPROM	;wreg free
 33134  019256  0012               	return		;funcret
 33135  019258                     __end_of_HLVD_ISR:
 33136                           	opt stack 0
 33137                           tosu	equ	0xFFF
 33138                           tosh	equ	0xFFE
 33139                           tosl	equ	0xFFD
 33140                           pclatu	equ	0xFFB
 33141                           pclath	equ	0xFFA
 33142                           tblptru	equ	0xFF8
 33143                           tblptrh	equ	0xFF7
 33144                           tblptrl	equ	0xFF6
 33145                           tablat	equ	0xFF5
 33146                           prodh	equ	0xFF4
 33147                           prodl	equ	0xFF3
 33148                           intcon	equ	0xFF2
 33149                           indf0	equ	0xFEF
 33150                           postinc0	equ	0xFEE
 33151                           fsr0h	equ	0xFEA
 33152                           fsr0l	equ	0xFE9
 33153                           wreg	equ	0xFE8
 33154                           indf1	equ	0xFE7
 33155                           postdec1	equ	0xFE5
 33156                           plusw1	equ	0xFE3
 33157                           fsr1h	equ	0xFE2
 33158                           fsr1l	equ	0xFE1
 33159                           bsr	equ	0xFE0
 33160                           indf2	equ	0xFDF
 33161                           postinc2	equ	0xFDE
 33162                           postdec2	equ	0xFDD
 33163                           plusw2	equ	0xFDB
 33164                           fsr2h	equ	0xFDA
 33165                           fsr2l	equ	0xFD9
 33166                           status	equ	0xFD8
 33167                           
 33168 ;; *************** function i2_writeDoubleToEEPROM *****************
 33169 ;; Defined at:
 33170 ;;		line 6 in file "double_to_EEPROM.c"
 33171 ;; Parameters:    Size  Location     Type
 33172 ;;  input_double    4    4[COMRAM] void 
 33173 ;;  starting_add    2    8[COMRAM] unsigned int 
 33174 ;; Auto vars:     Size  Location     Type
 33175 ;;  writeDoubleT    4   10[COMRAM] struct .
 33176 ;;  writeDoubleT    2   14[COMRAM] int 
 33177 ;; Return value:  Size  Location     Type
 33178 ;;                  1    wreg      void 
 33179 ;; Registers used:
 33180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33181 ;; Tracked objects:
 33182 ;;		On entry : 0/0
 33183 ;;		On exit  : 0/0
 33184 ;;		Unchanged: 0/0
 33185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33186 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33187 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33189 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33190 ;;Total ram usage:       12 bytes
 33191 ;; Hardware stack levels used:    1
 33192 ;; Hardware stack levels required when called:    1
 33193 ;; This function calls:
 33194 ;;		i2_DATAEE_WriteByte
 33195 ;; This function is called by:
 33196 ;;		_HLVD_ISR
 33197 ;; This function uses a non-reentrant model
 33198 ;;
 33199                           
 33200                           	psect	text100
 33201  018D92                     __ptext100:
 33202                           	opt stack 0
 33203  018D92                     i2_writeDoubleToEEPROM:
 33204                           	opt stack 16
 33205                           
 33206                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 33207                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 33208                           
 33209                           ;incstack = 0
 33210  018D92  C005  F00B         	movff	i2writeDoubleToEEPROM@input_double,i2writeDoubleToEEPROM@input_data
 33211  018D96  C006  F00C         	movff	i2writeDoubleToEEPROM@input_double+1,i2writeDoubleToEEPROM@input_data+1
 33212  018D9A  C007  F00D         	movff	i2writeDoubleToEEPROM@input_double+2,i2writeDoubleToEEPROM@input_data+2
 33213  018D9E  C008  F00E         	movff	i2writeDoubleToEEPROM@input_double+3,i2writeDoubleToEEPROM@input_data+3
 33214                           
 33215                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 33216  018DA2  0E00               	movlw	0
 33217  018DA4  6E10               	movwf	i2writeDoubleToEEPROM@byte_index+1,c
 33218  018DA6  0E00               	movlw	0
 33219  018DA8  6E0F               	movwf	i2writeDoubleToEEPROM@byte_index,c
 33220  018DAA                     i2l10830:
 33221  018DAA  5010               	movf	i2writeDoubleToEEPROM@byte_index+1,w,c
 33222  018DAC  E117               	bnz	i2l1474
 33223  018DAE  0E04               	movlw	4
 33224  018DB0  5C0F               	subwf	i2writeDoubleToEEPROM@byte_index,w,c
 33225  018DB2  B0D8               	btfsc	status,0,c
 33226  018DB4  0012               	return	
 33227                           
 33228                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 33229  018DB6  5009               	movf	i2writeDoubleToEEPROM@starting_address,w,c
 33230  018DB8  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 33231  018DBA  6E01               	movwf	i2DATAEE_WriteByte@bAdd,c
 33232  018DBC  500A               	movf	i2writeDoubleToEEPROM@starting_address+1,w,c
 33233  018DBE  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 33234  018DC0  6E02               	movwf	i2DATAEE_WriteByte@bAdd+1,c
 33235  018DC2  0E0B               	movlw	low i2writeDoubleToEEPROM@input_data
 33236  018DC4  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 33237  018DC6  6ED9               	movwf	fsr2l,c
 33238  018DC8  0E00               	movlw	high i2writeDoubleToEEPROM@input_data
 33239  018DCA  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 33240  018DCC  6EDA               	movwf	fsr2h,c
 33241  018DCE  50DF               	movf	indf2,w,c
 33242  018DD0  6E03               	movwf	i2DATAEE_WriteByte@bData,c
 33243  018DD2  EC3E  F0C8         	call	i2_DATAEE_WriteByte	;wreg free
 33244  018DD6  4A0F               	infsnz	i2writeDoubleToEEPROM@byte_index,f,c
 33245  018DD8  2A10               	incf	i2writeDoubleToEEPROM@byte_index+1,f,c
 33246  018DDA  D7E7               	goto	i2l10830
 33247  018DDC                     i2l1474:
 33248  018DDC  0012               	return		;funcret
 33249  018DDE                     __end_ofi2_writeDoubleToEEPROM:
 33250                           	opt stack 0
 33251                           tosu	equ	0xFFF
 33252                           tosh	equ	0xFFE
 33253                           tosl	equ	0xFFD
 33254                           pclatu	equ	0xFFB
 33255                           pclath	equ	0xFFA
 33256                           tblptru	equ	0xFF8
 33257                           tblptrh	equ	0xFF7
 33258                           tblptrl	equ	0xFF6
 33259                           tablat	equ	0xFF5
 33260                           prodh	equ	0xFF4
 33261                           prodl	equ	0xFF3
 33262                           intcon	equ	0xFF2
 33263                           indf0	equ	0xFEF
 33264                           postinc0	equ	0xFEE
 33265                           fsr0h	equ	0xFEA
 33266                           fsr0l	equ	0xFE9
 33267                           wreg	equ	0xFE8
 33268                           indf1	equ	0xFE7
 33269                           postdec1	equ	0xFE5
 33270                           plusw1	equ	0xFE3
 33271                           fsr1h	equ	0xFE2
 33272                           fsr1l	equ	0xFE1
 33273                           bsr	equ	0xFE0
 33274                           indf2	equ	0xFDF
 33275                           postinc2	equ	0xFDE
 33276                           postdec2	equ	0xFDD
 33277                           plusw2	equ	0xFDB
 33278                           fsr2h	equ	0xFDA
 33279                           fsr2l	equ	0xFD9
 33280                           status	equ	0xFD8
 33281                           
 33282 ;; *************** function i2_DATAEE_WriteByte *****************
 33283 ;; Defined at:
 33284 ;;		line 168 in file "mcc_generated_files/memory.c"
 33285 ;; Parameters:    Size  Location     Type
 33286 ;;  bAdd            2    0[COMRAM] unsigned int 
 33287 ;;  bData           1    2[COMRAM] unsigned char 
 33288 ;; Auto vars:     Size  Location     Type
 33289 ;;  DATAEE_Write    1    3[COMRAM] unsigned char 
 33290 ;; Return value:  Size  Location     Type
 33291 ;;                  1    wreg      void 
 33292 ;; Registers used:
 33293 ;;		wreg, status,2, status,0
 33294 ;; Tracked objects:
 33295 ;;		On entry : 0/0
 33296 ;;		On exit  : 0/0
 33297 ;;		Unchanged: 0/0
 33298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33299 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33302 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33303 ;;Total ram usage:        4 bytes
 33304 ;; Hardware stack levels used:    1
 33305 ;; This function calls:
 33306 ;;		Nothing
 33307 ;; This function is called by:
 33308 ;;		i2_writeDoubleToEEPROM
 33309 ;; This function uses a non-reentrant model
 33310 ;;
 33311                           
 33312                           	psect	text101
 33313  01907C                     __ptext101:
 33314                           	opt stack 0
 33315  01907C                     i2_DATAEE_WriteByte:
 33316                           	opt stack 16
 33317                           
 33318                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 33319                           
 33320                           ;incstack = 0
 33321  01907C  0E00               	movlw	0
 33322  01907E  BEF2               	btfsc	intcon,7,c	;volatile
 33323  019080  0E01               	movlw	1
 33324  019082  6E04               	movwf	i2DATAEE_WriteByte@GIEBitValue,c
 33325                           
 33326                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 33327  019084  5002               	movf	i2DATAEE_WriteByte@bAdd+1,w,c
 33328  019086  0B03               	andlw	3
 33329  019088  6E75               	movwf	3957,c	;volatile
 33330                           
 33331                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 33332  01908A  C001  FF74         	movff	i2DATAEE_WriteByte@bAdd,3956	;volatile
 33333                           
 33334                           ;memory.c: 174: NVMDAT = bData;
 33335  01908E  C003  FF76         	movff	i2DATAEE_WriteByte@bData,3958	;volatile
 33336                           
 33337                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 33338  019092  0E3F               	movlw	-193
 33339  019094  1677               	andwf	3959,f,c	;volsfr
 33340                           
 33341                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 33342  019096  8477               	bsf	3959,2,c	;volsfr
 33343                           
 33344                           ;memory.c: 177: INTCONbits.GIE = 0;
 33345  019098  9EF2               	bcf	intcon,7,c	;volatile
 33346                           
 33347                           ;memory.c: 178: NVMCON2 = 0x55;
 33348  01909A  0E55               	movlw	85
 33349  01909C  6E78               	movwf	3960,c	;volsfr
 33350                           
 33351                           ;memory.c: 179: NVMCON2 = 0xAA;
 33352  01909E  0EAA               	movlw	170
 33353  0190A0  6E78               	movwf	3960,c	;volsfr
 33354                           
 33355                           ;memory.c: 180: NVMCON1bits.WR = 1;
 33356  0190A2  8277               	bsf	3959,1,c	;volsfr
 33357  0190A4                     
 33358                           ;memory.c: 183: {
 33359  0190A4  B277               	btfsc	3959,1,c	;volsfr
 33360  0190A6  D7FE               	goto	i2l803
 33361                           
 33362                           ;memory.c: 184: }
 33363                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 33364  0190A8  9477               	bcf	3959,2,c	;volsfr
 33365                           
 33366                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 33367  0190AA  B004               	btfsc	i2DATAEE_WriteByte@GIEBitValue,0,c
 33368  0190AC  D002               	bra	i2u1093_45
 33369  0190AE  9EF2               	bcf	intcon,7,c	;volatile
 33370  0190B0  D001               	bra	i2u1093_46
 33371  0190B2                     i2u1093_45:
 33372  0190B2  8EF2               	bsf	intcon,7,c	;volatile
 33373  0190B4                     i2u1093_46:
 33374  0190B4  0012               	return		;funcret
 33375  0190B6                     __end_ofi2_DATAEE_WriteByte:
 33376                           	opt stack 0
 33377                           tosu	equ	0xFFF
 33378                           tosh	equ	0xFFE
 33379                           tosl	equ	0xFFD
 33380                           pclatu	equ	0xFFB
 33381                           pclath	equ	0xFFA
 33382                           tblptru	equ	0xFF8
 33383                           tblptrh	equ	0xFF7
 33384                           tblptrl	equ	0xFF6
 33385                           tablat	equ	0xFF5
 33386                           prodh	equ	0xFF4
 33387                           prodl	equ	0xFF3
 33388                           intcon	equ	0xFF2
 33389                           indf0	equ	0xFEF
 33390                           postinc0	equ	0xFEE
 33391                           fsr0h	equ	0xFEA
 33392                           fsr0l	equ	0xFE9
 33393                           wreg	equ	0xFE8
 33394                           indf1	equ	0xFE7
 33395                           postdec1	equ	0xFE5
 33396                           plusw1	equ	0xFE3
 33397                           fsr1h	equ	0xFE2
 33398                           fsr1l	equ	0xFE1
 33399                           bsr	equ	0xFE0
 33400                           indf2	equ	0xFDF
 33401                           postinc2	equ	0xFDE
 33402                           postdec2	equ	0xFDD
 33403                           plusw2	equ	0xFDB
 33404                           fsr2h	equ	0xFDA
 33405                           fsr2l	equ	0xFD9
 33406                           status	equ	0xFD8
 33407                           
 33408 ;; *************** function _EUSART2_Receive_ISR *****************
 33409 ;; Defined at:
 33410 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 33411 ;; Parameters:    Size  Location     Type
 33412 ;;		None
 33413 ;; Auto vars:     Size  Location     Type
 33414 ;;		None
 33415 ;; Return value:  Size  Location     Type
 33416 ;;                  1    wreg      void 
 33417 ;; Registers used:
 33418 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33419 ;; Tracked objects:
 33420 ;;		On entry : 0/0
 33421 ;;		On exit  : 0/0
 33422 ;;		Unchanged: 0/0
 33423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33428 ;;Total ram usage:        0 bytes
 33429 ;; Hardware stack levels used:    1
 33430 ;; Hardware stack levels required when called:    3
 33431 ;; This function calls:
 33432 ;;		i2_printf
 33433 ;; This function is called by:
 33434 ;;		_EUSART2_Initialize
 33435 ;;		_INTERRUPT_InterruptManagerHigh
 33436 ;; This function uses a non-reentrant model
 33437 ;;
 33438                           
 33439                           	psect	text102
 33440  0180FC                     __ptext102:
 33441                           	opt stack 0
 33442  0180FC                     _EUSART2_Receive_ISR:
 33443                           	opt stack 15
 33444                           
 33445                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 33446                           
 33447                           ;incstack = 0
 33448  0180FC  010E               	movlb	14	; () banked
 33449  0180FE  A3F5               	btfss	245,1,b	;volatile
 33450  018100  D003               	goto	i2l423
 33451                           
 33452                           ; BSR set to: 14
 33453                           ;eusart2.c: 221: {
 33454                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 33455  018102  99F5               	bcf	245,4,b	;volatile
 33456                           
 33457                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 33458  018104  89F5               	bsf	245,4,b	;volatile
 33459                           
 33460                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 33461  018106  827E               	bsf	3966,1,c	;volatile
 33462  018108                     i2l423:
 33463                           
 33464                           ; BSR set to: 14
 33465                           ;eusart2.c: 227: }
 33466                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 33467  018108  927E               	bcf	3966,1,c	;volatile
 33468                           
 33469                           ; BSR set to: 14
 33470                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 33471  01810A  0100               	movlb	0	; () banked
 33472  01810C  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 33473  01810E  0D01               	mullw	1
 33474  018110  0E80               	movlw	low _eusart2RxBuffer
 33475  018112  24F3               	addwf	prodl,w,c
 33476  018114  6ED9               	movwf	fsr2l,c
 33477  018116  0E03               	movlw	high _eusart2RxBuffer
 33478  018118  20F4               	addwfc	prodh,w,c
 33479  01811A  6EDA               	movwf	fsr2h,c
 33480  01811C  CEF1 FFDF          	movff	3825,indf2	;volatile
 33481                           
 33482                           ; BSR set to: 0
 33483  018120  2BFA               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 33484                           
 33485                           ; BSR set to: 0
 33486                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 33487  018122  0E3F               	movlw	63
 33488  018124  65FA               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 33489  018126  D002               	goto	i2l424
 33490                           
 33491                           ; BSR set to: 0
 33492                           ;eusart2.c: 234: {
 33493                           ;eusart2.c: 235: eusart2RxHead = 0;
 33494  018128  0E00               	movlw	0
 33495  01812A  6FFA               	movwf	_eusart2RxHead& (0+255),b	;volatile
 33496  01812C                     i2l424:
 33497                           
 33498                           ; BSR set to: 0
 33499                           ;eusart2.c: 236: }
 33500                           ;eusart2.c: 237: eusart2RxCount++;
 33501                           
 33502                           ; BSR set to: 0
 33503  01812C  0101               	movlb	1	; () banked
 33504  01812E  2BDF               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 33505                           
 33506                           ; BSR set to: 1
 33507                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 33508  018130  0E0A               	movlw	10
 33509  018132  010E               	movlb	14	; () banked
 33510  018134  19F1               	xorwf	241,w,b	;volatile
 33511  018136  B4D8               	btfsc	status,2,c
 33512  018138  D004               	goto	i2u1952_40
 33513                           
 33514                           ; BSR set to: 14
 33515  01813A  0E0D               	movlw	13
 33516  01813C  19F1               	xorwf	241,w,b	;volatile
 33517  01813E  A4D8               	btfss	status,2,c
 33518  018140  D006               	goto	i2l425
 33519  018142                     i2u1952_40:
 33520                           
 33521                           ; BSR set to: 14
 33522                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 33523  018142  0100               	movlb	0	; () banked
 33524  018144  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 33525                           
 33526                           ; BSR set to: 0
 33527                           ;eusart2.c: 248: RC2REG = 0;
 33528  018146  0E00               	movlw	0
 33529  018148  010E               	movlb	14	; () banked
 33530  01814A  6FF1               	movwf	241,b	;volatile
 33531                           
 33532                           ;eusart2.c: 250: }
 33533  01814C  D002               	goto	i2l428
 33534  01814E                     i2l425:
 33535                           
 33536                           ; BSR set to: 14
 33537                           ;eusart2.c: 252: else {
 33538                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 33539  01814E  0100               	movlb	0	; () banked
 33540  018150  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 33541  018152                     i2l428:
 33542                           
 33543                           ;eusart2.c: 256: }
 33544                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 33545                           
 33546                           ; BSR set to: 0
 33547  018152  0E08               	movlw	8
 33548  018154  010E               	movlb	14	; () banked
 33549  018156  19F1               	xorwf	241,w,b	;volatile
 33550  018158  A4D8               	btfss	status,2,c
 33551  01815A  0012               	return	
 33552                           
 33553                           ; BSR set to: 14
 33554                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 33555  01815C  0100               	movlb	0	; () banked
 33556  01815E  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 33557  018160  0D01               	mullw	1
 33558  018162  0E80               	movlw	low _eusart2RxBuffer
 33559  018164  24F3               	addwf	prodl,w,c
 33560  018166  6ED9               	movwf	fsr2l,c
 33561  018168  0E03               	movlw	high _eusart2RxBuffer
 33562  01816A  20F4               	addwfc	prodh,w,c
 33563  01816C  6EDA               	movwf	fsr2h,c
 33564  01816E  0E00               	movlw	0
 33565  018170  6EDF               	movwf	indf2,c
 33566                           
 33567                           ; BSR set to: 0
 33568                           ;eusart2.c: 262: eusart2RxHead--;
 33569  018172  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 33570                           
 33571                           ; BSR set to: 0
 33572                           ;eusart2.c: 265: printf("\033[K");
 33573  018174  0EC4               	movlw	low STR_1
 33574  018176  6F88               	movwf	i2printf@f& (0+255),b
 33575  018178  0EFF               	movlw	high STR_1
 33576  01817A  6F89               	movwf	(i2printf@f+1)& (0+255),b
 33577  01817C  ECF6  F090         	call	i2_printf	;wreg free
 33578                           
 33579                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 33580  018180  0101               	movlb	1	; () banked
 33581  018182  51E0               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 33582  018184  0100               	movlb	0	; () banked
 33583  018186  19FA               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 33584  018188  B4D8               	btfsc	status,2,c
 33585  01818A  D00B               	goto	i2l430
 33586                           
 33587                           ; BSR set to: 0
 33588                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 33589  01818C  51FA               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 33590  01818E  0D01               	mullw	1
 33591  018190  0E80               	movlw	low _eusart2RxBuffer
 33592  018192  24F3               	addwf	prodl,w,c
 33593  018194  6ED9               	movwf	fsr2l,c
 33594  018196  0E03               	movlw	high _eusart2RxBuffer
 33595  018198  20F4               	addwfc	prodh,w,c
 33596  01819A  6EDA               	movwf	fsr2h,c
 33597  01819C  0E00               	movlw	0
 33598  01819E  6EDF               	movwf	indf2,c
 33599                           
 33600                           ; BSR set to: 0
 33601                           ;eusart2.c: 270: eusart2RxHead--;
 33602  0181A0  07FA               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 33603  0181A2                     i2l430:
 33604                           
 33605                           ; BSR set to: 0
 33606                           ;eusart2.c: 272: }
 33607                           ;eusart2.c: 274: RC2REG = 0;
 33608                           
 33609                           ; BSR set to: 0
 33610  0181A2  0E00               	movlw	0
 33611  0181A4  010E               	movlb	14	; () banked
 33612  0181A6  6FF1               	movwf	241,b	;volatile
 33613  0181A8  0012               	return	
 33614  0181AA                     __end_of_EUSART2_Receive_ISR:
 33615                           	opt stack 0
 33616                           tosu	equ	0xFFF
 33617                           tosh	equ	0xFFE
 33618                           tosl	equ	0xFFD
 33619                           pclatu	equ	0xFFB
 33620                           pclath	equ	0xFFA
 33621                           tblptru	equ	0xFF8
 33622                           tblptrh	equ	0xFF7
 33623                           tblptrl	equ	0xFF6
 33624                           tablat	equ	0xFF5
 33625                           prodh	equ	0xFF4
 33626                           prodl	equ	0xFF3
 33627                           intcon	equ	0xFF2
 33628                           indf0	equ	0xFEF
 33629                           postinc0	equ	0xFEE
 33630                           fsr0h	equ	0xFEA
 33631                           fsr0l	equ	0xFE9
 33632                           wreg	equ	0xFE8
 33633                           indf1	equ	0xFE7
 33634                           postdec1	equ	0xFE5
 33635                           plusw1	equ	0xFE3
 33636                           fsr1h	equ	0xFE2
 33637                           fsr1l	equ	0xFE1
 33638                           bsr	equ	0xFE0
 33639                           indf2	equ	0xFDF
 33640                           postinc2	equ	0xFDE
 33641                           postdec2	equ	0xFDD
 33642                           plusw2	equ	0xFDB
 33643                           fsr2h	equ	0xFDA
 33644                           fsr2l	equ	0xFD9
 33645                           status	equ	0xFD8
 33646                           
 33647 ;; *************** function i2_printf *****************
 33648 ;; Defined at:
 33649 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 33650 ;; Parameters:    Size  Location     Type
 33651 ;;  f               2   40[BANK0 ] PTR const unsigned char 
 33652 ;;		 -> STR_152(30), STR_151(46), STR_150(39), STR_149(62), 
 33653 ;;		 -> STR_148(55), STR_147(470), STR_145(2974), STR_143(492), 
 33654 ;;		 -> STR_141(688), STR_139(720), STR_137(922), STR_135(54), 
 33655 ;;		 -> STR_133(54), STR_131(45), STR_129(51), STR_127(52), 
 33656 ;;		 -> STR_125(46), STR_123(51), STR_121(53), STR_119(58), 
 33657 ;;		 -> STR_117(71), STR_116(63), STR_115(37), STR_114(46), 
 33658 ;;		 -> STR_113(102), STR_112(86), STR_110(25), STR_108(42), 
 33659 ;;		 -> STR_107(53), STR_106(31), STR_104(29), STR_103(28), 
 33660 ;;		 -> STR_101(42), STR_99(41), STR_97(40), STR_95(73), 
 33661 ;;		 -> STR_93(56), STR_91(34), STR_89(34), STR_87(32), 
 33662 ;;		 -> STR_85(37), STR_83(58), STR_81(36), STR_79(36), 
 33663 ;;		 -> STR_77(37), STR_75(45), STR_74(66), STR_72(21), 
 33664 ;;		 -> STR_70(24), STR_69(48), STR_59(54), STR_58(64), 
 33665 ;;		 -> STR_56(59), STR_54(85), STR_52(47), STR_51(17), 
 33666 ;;		 -> STR_48(52), STR_46(4), STR_45(5), STR_43(4), 
 33667 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 33668 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 33669 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 33670 ;;		 -> STR_1(4), 
 33671 ;; Auto vars:     Size  Location     Type
 33672 ;;  printf          4   69[BANK0 ] PTR const unsigned char 
 33673 ;;  printf          4   65[BANK0 ] unsigned long 
 33674 ;;  printf          4   59[BANK0 ] struct .
 33675 ;;  printf          2   77[BANK0 ] int 
 33676 ;;  printf          2   75[BANK0 ] int 
 33677 ;;  printf          2   73[BANK0 ] unsigned short 
 33678 ;;  printf          2   63[BANK0 ] int 
 33679 ;;  printf          2   57[BANK0 ] PTR void [1]
 33680 ;;		 -> ?i2_printf(2), ?_printf(2), 
 33681 ;;  printf          2   55[BANK0 ] unsigned int 
 33682 ;;  printf          2   53[BANK0 ] PTR const unsigned char 
 33683 ;;		 -> STR_166(7), printf@c(1), STR_165(16), STR_164(22), 
 33684 ;;		 -> STR_163(21), STR_162(27), STR_161(41), STR_160(32), 
 33685 ;;		 -> STR_159(19), STR_158(16), STR_157(15), STR_156(16), 
 33686 ;;		 -> STR_155(10), STR_154(13), STR_153(12), ringBufferLUT@channel_name(22), 
 33687 ;;		 -> TRIAC_Firing_Angle(4), 
 33688 ;;  printf          1   79[BANK0 ] char 
 33689 ;;  printf          1   52[BANK0 ] unsigned char 
 33690 ;;  printf          1    0        unsigned char 
 33691 ;; Return value:  Size  Location     Type
 33692 ;;                  2   40[BANK0 ] int 
 33693 ;; Registers used:
 33694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33695 ;; Tracked objects:
 33696 ;;		On entry : 0/0
 33697 ;;		On exit  : 0/0
 33698 ;;		Unchanged: 0/0
 33699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33701 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33702 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33703 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33704 ;;Total ram usage:       40 bytes
 33705 ;; Hardware stack levels used:    1
 33706 ;; Hardware stack levels required when called:    2
 33707 ;; This function calls:
 33708 ;;		i2___awdiv
 33709 ;;		i2___fladd
 33710 ;;		i2___flge
 33711 ;;		i2___flmul
 33712 ;;		i2___flneg
 33713 ;;		i2___flsub
 33714 ;;		i2___fltol
 33715 ;;		i2___lldiv
 33716 ;;		i2___llmod
 33717 ;;		i2___wmul
 33718 ;;		i2___xxtofl
 33719 ;;		i2__div_to_l_
 33720 ;;		i2__tdiv_to_l_
 33721 ;;		i2_fround
 33722 ;;		i2_isdigit
 33723 ;;		i2_putch
 33724 ;;		i2_scale
 33725 ;; This function is called by:
 33726 ;;		_EUSART2_Receive_ISR
 33727 ;; This function uses a non-reentrant model
 33728 ;;
 33729                           
 33730                           	psect	text103
 33731  0121EC                     __ptext103:
 33732                           	opt stack 0
 33733  0121EC                     i2_printf:
 33734                           	opt stack 15
 33735                           
 33736                           ;doprnt.c: 466: va_list ap;
 33737                           ;doprnt.c: 499: signed char c;
 33738                           ;doprnt.c: 501: int width;
 33739                           ;doprnt.c: 504: int prec;
 33740                           ;doprnt.c: 508: unsigned short flag;
 33741                           ;doprnt.c: 515: char d;
 33742                           ;doprnt.c: 516: double fval;
 33743                           ;doprnt.c: 517: int exp;
 33744                           ;doprnt.c: 523: union {
 33745                           ;doprnt.c: 524: unsigned long vd;
 33746                           ;doprnt.c: 525: double integ;
 33747                           ;doprnt.c: 526: } tmpval;
 33748                           ;doprnt.c: 528: unsigned long val;
 33749                           ;doprnt.c: 529: unsigned len;
 33750                           ;doprnt.c: 530: const char * cp;
 33751                           ;doprnt.c: 533: *ap = __va_start();
 33752                           
 33753                           ; BSR set to: 14
 33754                           ;incstack = 0
 33755  0121EC  0E8A               	movlw	low (?i2_printf+2)
 33756  0121EE  0100               	movlb	0	; () banked
 33757  0121F0  6F99               	movwf	i2printf@ap& (0+255),b
 33758  0121F2  0E00               	movlw	high (?i2_printf+2)
 33759  0121F4  6F9A               	movwf	(i2printf@ap+1)& (0+255),b
 33760                           
 33761                           ;doprnt.c: 536: while(c = *f++) {
 33762  0121F6  EFB9  F097         	goto	i2u1938_40
 33763  0121FA                     
 33764                           ; BSR set to: 0
 33765                           ;doprnt.c: 538: if(c != '%')
 33766                           
 33767                           ; BSR set to: 0
 33768  0121FA  0E25               	movlw	37
 33769  0121FC  19AF               	xorwf	i2printf@c& (0+255),w,b
 33770  0121FE  B4D8               	btfsc	status,2,c
 33771  012200  D005               	goto	i2l1546
 33772                           
 33773                           ; BSR set to: 0
 33774                           ;doprnt.c: 540: {
 33775                           ;doprnt.c: 541: (putch(c) );
 33776  012202  51AF               	movf	i2printf@c& (0+255),w,b
 33777  012204  EC51  F0CB         	call	i2_putch
 33778                           
 33779                           ;doprnt.c: 542: continue;
 33780  012208  EFB9  F097         	goto	i2u1938_40
 33781  01220C                     i2l1546:
 33782                           
 33783                           ;doprnt.c: 543: }
 33784                           ;doprnt.c: 546: width = 0;
 33785  01220C  0E00               	movlw	0
 33786  01220E  0100               	movlb	0	; () banked
 33787  012210  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 33788  012212  0E00               	movlw	0
 33789  012214  6FAB               	movwf	i2printf@width& (0+255),b
 33790                           
 33791                           ;doprnt.c: 548: flag = 0;
 33792  012216  0E00               	movlw	0
 33793  012218  6FAA               	movwf	(i2printf@flag+1)& (0+255),b
 33794  01221A  0E00               	movlw	0
 33795  01221C  6FA9               	movwf	i2printf@flag& (0+255),b
 33796                           
 33797                           ; BSR set to: 0
 33798                           ;doprnt.c: 551: switch(*f) {
 33799                           
 33800                           ;doprnt.c: 550: for(;;) {
 33801  01221E  D004               	goto	i2l1548
 33802  012220                     
 33803                           ;doprnt.c: 580: flag |= 0x04;
 33804                           
 33805                           ; BSR set to: 0
 33806  012220  0100               	movlb	0	; () banked
 33807  012222  85A9               	bsf	i2printf@flag& (0+255),2,b
 33808                           
 33809                           ;doprnt.c: 581: f++;
 33810  012224  4B88               	infsnz	i2printf@f& (0+255),f,b
 33811  012226  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 33812  012228                     i2l1548:
 33813                           
 33814                           ; BSR set to: 0
 33815  012228  C088  FFF6         	movff	i2printf@f,tblptrl
 33816  01222C  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33817  012230  0E00               	movlw	low (__mediumconst shr (0+16))
 33818  012232  6EF8               	movwf	tblptru,c
 33819  012234  0E0D               	movlw	(high __ramtop+-1)
 33820  012236  64F7               	cpfsgt	tblptrh,c
 33821  012238  D003               	bra	i2u1864_47
 33822  01223A  0008               	tblrd		*
 33823  01223C  50F5               	movf	tablat,w,c
 33824  01223E  D005               	bra	i2u1864_40
 33825  012240                     i2u1864_47:
 33826  012240  CFF6 FFE9          	movff	tblptrl,fsr0l
 33827  012244  CFF7 FFEA          	movff	tblptrh,fsr0h
 33828  012248  50EF               	movf	indf0,w,c
 33829  01224A                     i2u1864_40:
 33830                           
 33831                           ; Switch size 1, requested type "space"
 33832                           ; Number of cases is 1, Range of values is 48 to 48
 33833                           ; switch strategies available:
 33834                           ; Name         Instructions Cycles
 33835                           ; simple_byte            4     3 (average)
 33836                           ;	Chosen strategy is simple_byte
 33837  01224A  0A30               	xorlw	48	; case 48
 33838  01224C  B4D8               	btfsc	status,2,c
 33839  01224E  D7E8               	goto	i2l1549
 33840                           
 33841                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 33842                           
 33843                           ;doprnt.c: 586: }
 33844                           
 33845                           ;doprnt.c: 585: break;
 33846  012250  C088  FFF6         	movff	i2printf@f,tblptrl
 33847  012254  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33848  012258  0E00               	movlw	low (__mediumconst shr (0+16))
 33849  01225A  6EF8               	movwf	tblptru,c
 33850  01225C  0E0D               	movlw	(high __ramtop+-1)
 33851  01225E  64F7               	cpfsgt	tblptrh,c
 33852  012260  D003               	bra	i2u1865_47
 33853  012262  0008               	tblrd		*
 33854  012264  50F5               	movf	tablat,w,c
 33855  012266  D005               	bra	i2u1865_40
 33856  012268                     i2u1865_47:
 33857  012268  CFF6 FFE9          	movff	tblptrl,fsr0l
 33858  01226C  CFF7 FFEA          	movff	tblptrh,fsr0h
 33859  012270  50EF               	movf	indf0,w,c
 33860  012272                     i2u1865_40:
 33861  012272  EC51  F0CA         	call	i2_isdigit
 33862  012276  A0D8               	btfss	status,0,c
 33863  012278  D04B               	goto	i2u1869_40
 33864                           
 33865                           ;doprnt.c: 598: width = 0;
 33866  01227A  0E00               	movlw	0
 33867  01227C  0100               	movlb	0	; () banked
 33868  01227E  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 33869  012280  0E00               	movlw	0
 33870  012282  6FAB               	movwf	i2printf@width& (0+255),b
 33871  012284                     
 33872                           ;doprnt.c: 600: width *= 10;
 33873                           
 33874                           ; BSR set to: 0
 33875  012284  C0AB  F001         	movff	i2printf@width,i2___wmul@multiplier
 33876  012288  C0AC  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 33877  01228C  0E00               	movlw	0
 33878  01228E  6E04               	movwf	i2___wmul@multiplicand+1,c
 33879  012290  0E0A               	movlw	10
 33880  012292  6E03               	movwf	i2___wmul@multiplicand,c
 33881  012294  ECEA  F0C9         	call	i2___wmul	;wreg free
 33882  012298  C001  F0AB         	movff	?i2___wmul,i2printf@width
 33883  01229C  C002  F0AC         	movff	?i2___wmul+1,i2printf@width+1
 33884                           
 33885                           ;doprnt.c: 601: width += *f++ - '0';
 33886  0122A0  0ED0               	movlw	208
 33887  0122A2  0100               	movlb	0	; () banked
 33888  0122A4  6F8A               	movwf	??i2_printf& (0+255),b
 33889  0122A6  0EFF               	movlw	255
 33890  0122A8  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 33891  0122AA  C088  FFF6         	movff	i2printf@f,tblptrl
 33892  0122AE  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33893  0122B2  0E00               	movlw	low (__mediumconst shr (0+16))
 33894  0122B4  6EF8               	movwf	tblptru,c
 33895  0122B6  0E0D               	movlw	(high __ramtop+-1)
 33896  0122B8  64F7               	cpfsgt	tblptrh,c
 33897  0122BA  D003               	bra	i2u1867_47
 33898  0122BC  0008               	tblrd		*
 33899  0122BE  50F5               	movf	tablat,w,c
 33900  0122C0  D005               	bra	i2u1867_40
 33901  0122C2                     i2u1867_47:
 33902  0122C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 33903  0122C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 33904  0122CA  50EF               	movf	indf0,w,c
 33905  0122CC                     i2u1867_40:
 33906  0122CC  0100               	movlb	0	; () banked
 33907  0122CE  6F8C               	movwf	(??i2_printf+2)& (0+255),b
 33908  0122D0  6B8D               	clrf	(??i2_printf+3)& (0+255),b
 33909  0122D2  518A               	movf	??i2_printf& (0+255),w,b
 33910  0122D4  278C               	addwf	(??i2_printf+2)& (0+255),f,b
 33911  0122D6  518B               	movf	(??i2_printf+1)& (0+255),w,b
 33912  0122D8  238D               	addwfc	(??i2_printf+3)& (0+255),f,b
 33913  0122DA  518C               	movf	(??i2_printf+2)& (0+255),w,b
 33914  0122DC  27AB               	addwf	i2printf@width& (0+255),f,b
 33915  0122DE  518D               	movf	(??i2_printf+3)& (0+255),w,b
 33916  0122E0  23AC               	addwfc	(i2printf@width+1)& (0+255),f,b
 33917                           
 33918                           ; BSR set to: 0
 33919  0122E2  4B88               	infsnz	i2printf@f& (0+255),f,b
 33920  0122E4  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 33921                           
 33922                           ; BSR set to: 0
 33923                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 33924  0122E6  C088  FFF6         	movff	i2printf@f,tblptrl
 33925  0122EA  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33926  0122EE  0E00               	movlw	low (__mediumconst shr (0+16))
 33927  0122F0  6EF8               	movwf	tblptru,c
 33928  0122F2  0E0D               	movlw	(high __ramtop+-1)
 33929  0122F4  64F7               	cpfsgt	tblptrh,c
 33930  0122F6  D003               	bra	i2u1868_47
 33931  0122F8  0008               	tblrd		*
 33932  0122FA  50F5               	movf	tablat,w,c
 33933  0122FC  D005               	bra	i2u1868_40
 33934  0122FE                     i2u1868_47:
 33935  0122FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 33936  012302  CFF7 FFEA          	movff	tblptrh,fsr0h
 33937  012306  50EF               	movf	indf0,w,c
 33938  012308                     i2u1868_40:
 33939  012308  EC51  F0CA         	call	i2_isdigit
 33940  01230C  B0D8               	btfsc	status,0,c
 33941  01230E  D7BA               	goto	i2l1554
 33942  012310                     i2u1869_40:
 33943                           
 33944                           ;doprnt.c: 608: }
 33945                           ;doprnt.c: 611: if(*f == '.') {
 33946  012310  C088  FFF6         	movff	i2printf@f,tblptrl
 33947  012314  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33948  012318  0E00               	movlw	low (__mediumconst shr (0+16))
 33949  01231A  6EF8               	movwf	tblptru,c
 33950  01231C  0E0D               	movlw	(high __ramtop+-1)
 33951  01231E  64F7               	cpfsgt	tblptrh,c
 33952  012320  D003               	bra	i2u1870_47
 33953  012322  0008               	tblrd		*
 33954  012324  50F5               	movf	tablat,w,c
 33955  012326  D005               	bra	i2u1870_40
 33956  012328                     i2u1870_47:
 33957  012328  CFF6 FFE9          	movff	tblptrl,fsr0l
 33958  01232C  CFF7 FFEA          	movff	tblptrh,fsr0h
 33959  012330  50EF               	movf	indf0,w,c
 33960  012332                     i2u1870_40:
 33961  012332  0A2E               	xorlw	46
 33962  012334  A4D8               	btfss	status,2,c
 33963  012336  D048               	goto	i2l1556
 33964                           
 33965                           ;doprnt.c: 612: flag |= 0x4000;
 33966  012338  0100               	movlb	0	; () banked
 33967  01233A  8DAA               	bsf	(i2printf@flag+1)& (0+255),6,b
 33968                           
 33969                           ;doprnt.c: 613: f++;
 33970  01233C  4B88               	infsnz	i2printf@f& (0+255),f,b
 33971  01233E  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 33972                           
 33973                           ; BSR set to: 0
 33974                           ;doprnt.c: 620: {
 33975                           ;doprnt.c: 621: prec = 0;
 33976  012340  0E00               	movlw	0
 33977  012342  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 33978  012344  0E00               	movlw	0
 33979  012346  6FAD               	movwf	i2printf@prec& (0+255),b
 33980                           
 33981                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 33982  012348  D029               	goto	i2l1557
 33983  01234A                     
 33984                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 33985                           
 33986                           ; BSR set to: 0
 33987  01234A  C0AD  F001         	movff	i2printf@prec,i2___wmul@multiplier
 33988  01234E  C0AE  F002         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 33989  012352  0E00               	movlw	0
 33990  012354  6E04               	movwf	i2___wmul@multiplicand+1,c
 33991  012356  0E0A               	movlw	10
 33992  012358  6E03               	movwf	i2___wmul@multiplicand,c
 33993  01235A  ECEA  F0C9         	call	i2___wmul	;wreg free
 33994  01235E  C088  FFF6         	movff	i2printf@f,tblptrl
 33995  012362  C089  FFF7         	movff	i2printf@f+1,tblptrh
 33996  012366  0E00               	movlw	low (__mediumconst shr (0+16))
 33997  012368  6EF8               	movwf	tblptru,c
 33998  01236A  0E0D               	movlw	(high __ramtop+-1)
 33999  01236C  64F7               	cpfsgt	tblptrh,c
 34000  01236E  D003               	bra	i2u1872_47
 34001  012370  0008               	tblrd		*
 34002  012372  50F5               	movf	tablat,w,c
 34003  012374  D005               	bra	i2u1872_40
 34004  012376                     i2u1872_47:
 34005  012376  CFF6 FFE9          	movff	tblptrl,fsr0l
 34006  01237A  CFF7 FFEA          	movff	tblptrh,fsr0h
 34007  01237E  50EF               	movf	indf0,w,c
 34008  012380                     i2u1872_40:
 34009  012380  0100               	movlb	0	; () banked
 34010  012382  6F8A               	movwf	??i2_printf& (0+255),b
 34011  012384  518A               	movf	??i2_printf& (0+255),w,b
 34012  012386  2601               	addwf	?i2___wmul,f,c
 34013  012388  0E00               	movlw	0
 34014  01238A  2202               	addwfc	?i2___wmul+1,f,c
 34015  01238C  0ED0               	movlw	208
 34016  01238E  2401               	addwf	?i2___wmul,w,c
 34017  012390  6FAD               	movwf	i2printf@prec& (0+255),b
 34018  012392  0EFF               	movlw	255
 34019  012394  2002               	addwfc	?i2___wmul+1,w,c
 34020  012396  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 34021                           
 34022                           ; BSR set to: 0
 34023  012398  4B88               	infsnz	i2printf@f& (0+255),f,b
 34024  01239A  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 34025  01239C                     i2l1557:
 34026                           
 34027                           ; BSR set to: 0
 34028                           
 34029                           ; BSR set to: 0
 34030  01239C  C088  FFF6         	movff	i2printf@f,tblptrl
 34031  0123A0  C089  FFF7         	movff	i2printf@f+1,tblptrh
 34032  0123A4  0E00               	movlw	low (__mediumconst shr (0+16))
 34033  0123A6  6EF8               	movwf	tblptru,c
 34034  0123A8  0E0D               	movlw	(high __ramtop+-1)
 34035  0123AA  64F7               	cpfsgt	tblptrh,c
 34036  0123AC  D003               	bra	i2u1873_47
 34037  0123AE  0008               	tblrd		*
 34038  0123B0  50F5               	movf	tablat,w,c
 34039  0123B2  D005               	bra	i2u1873_40
 34040  0123B4                     i2u1873_47:
 34041  0123B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 34042  0123B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 34043  0123BC  50EF               	movf	indf0,w,c
 34044  0123BE                     i2u1873_40:
 34045  0123BE  EC51  F0CA         	call	i2_isdigit
 34046  0123C2  A0D8               	btfss	status,0,c
 34047  0123C4  D0A4               	goto	i2l1561
 34048  0123C6  D7C1               	goto	i2l1558
 34049  0123C8                     i2l1556:
 34050                           
 34051                           ;doprnt.c: 626: prec = 0;
 34052  0123C8  0E00               	movlw	0
 34053  0123CA  0100               	movlb	0	; () banked
 34054  0123CC  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 34055  0123CE  0E00               	movlw	0
 34056  0123D0  6FAD               	movwf	i2printf@prec& (0+255),b
 34057                           
 34058                           ; BSR set to: 0
 34059                           ;doprnt.c: 628: flag |= 0x1000;
 34060  0123D2  89AA               	bsf	(i2printf@flag+1)& (0+255),4,b
 34061                           
 34062                           ; BSR set to: 0
 34063                           ;doprnt.c: 630: }
 34064                           ;doprnt.c: 635: switch(c = *f++) {
 34065  0123D4  D09C               	goto	i2l1561
 34066  0123D6                     
 34067                           ; BSR set to: 0
 34068                           ;doprnt.c: 663: flag |= 0x400;
 34069                           
 34070                           ; BSR set to: 0
 34071  0123D6  85AA               	bsf	(i2printf@flag+1)& (0+255),2,b
 34072                           
 34073                           ; BSR set to: 0
 34074                           ;doprnt.c: 698: case 'i':
 34075                           ;doprnt.c: 699: break;
 34076                           
 34077                           ; BSR set to: 0
 34078                           
 34079                           ;doprnt.c: 697: case 'd':
 34080                           
 34081                           ;doprnt.c: 664: break;
 34082  0123D8  D0D1               	goto	i2l1565
 34083  0123DA                     
 34084                           ; BSR set to: 0
 34085                           ;doprnt.c: 718: case 'x':
 34086                           ;doprnt.c: 721: flag |= 0x80;
 34087                           
 34088                           ; BSR set to: 0
 34089                           
 34090                           ; BSR set to: 0
 34091  0123DA  8FA9               	bsf	i2printf@flag& (0+255),7,b
 34092                           
 34093                           ;doprnt.c: 723: break;
 34094  0123DC  D0CF               	goto	i2l1565
 34095  0123DE                     
 34096                           ; BSR set to: 0
 34097                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 34098                           
 34099                           ; BSR set to: 0
 34100  0123DE  C099  FFD9         	movff	i2printf@ap,fsr2l
 34101  0123E2  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 34102  0123E6  CFDE F095          	movff	postinc2,i2printf@cp
 34103  0123EA  CFDD F096          	movff	postdec2,i2printf@cp+1
 34104                           
 34105                           ; BSR set to: 0
 34106  0123EE  0E02               	movlw	2
 34107  0123F0  2799               	addwf	i2printf@ap& (0+255),f,b
 34108  0123F2  0E00               	movlw	0
 34109  0123F4  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 34110                           
 34111                           ; BSR set to: 0
 34112                           ;doprnt.c: 740: if(!cp)
 34113  0123F6  5195               	movf	i2printf@cp& (0+255),w,b
 34114  0123F8  1196               	iorwf	(i2printf@cp+1)& (0+255),w,b
 34115  0123FA  A4D8               	btfss	status,2,c
 34116  0123FC  D004               	goto	i2l1571
 34117                           
 34118                           ; BSR set to: 0
 34119                           ;doprnt.c: 741: cp = "(null)";
 34120  0123FE  0E85               	movlw	low STR_166
 34121  012400  6F95               	movwf	i2printf@cp& (0+255),b
 34122  012402  0EFF               	movlw	high STR_166
 34123  012404  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 34124  012406                     i2l1571:
 34125                           
 34126                           ; BSR set to: 0
 34127                           ;doprnt.c: 745: len = 0;
 34128                           
 34129                           ; BSR set to: 0
 34130  012406  0E00               	movlw	0
 34131  012408  6F98               	movwf	(i2printf@len+1)& (0+255),b
 34132  01240A  0E00               	movlw	0
 34133  01240C  6F97               	movwf	i2printf@len& (0+255),b
 34134                           
 34135                           ;doprnt.c: 746: while(cp[len])
 34136  01240E  D003               	goto	i2l1572
 34137  012410                     
 34138                           ;doprnt.c: 747: len++;
 34139                           
 34140                           ; BSR set to: 0
 34141  012410  0100               	movlb	0	; () banked
 34142  012412  4B97               	infsnz	i2printf@len& (0+255),f,b
 34143  012414  2B98               	incf	(i2printf@len+1)& (0+255),f,b
 34144  012416                     i2l1572:
 34145                           
 34146                           ; BSR set to: 0
 34147                           
 34148                           ; BSR set to: 0
 34149  012416  5197               	movf	i2printf@len& (0+255),w,b
 34150  012418  2595               	addwf	i2printf@cp& (0+255),w,b
 34151  01241A  6F8A               	movwf	??i2_printf& (0+255),b
 34152  01241C  5198               	movf	(i2printf@len+1)& (0+255),w,b
 34153  01241E  2196               	addwfc	(i2printf@cp+1)& (0+255),w,b
 34154  012420  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34155  012422  C08A  FFF6         	movff	??i2_printf,tblptrl
 34156  012426  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 34157  01242A  0E00               	movlw	low (__mediumconst shr (0+16))
 34158  01242C  6EF8               	movwf	tblptru,c
 34159  01242E  0E0D               	movlw	(high __ramtop+-1)
 34160  012430  64F7               	cpfsgt	tblptrh,c
 34161  012432  D003               	bra	i2u1876_47
 34162  012434  0008               	tblrd		*
 34163  012436  50F5               	movf	tablat,w,c
 34164  012438  D005               	bra	i2u1876_40
 34165  01243A                     i2u1876_47:
 34166  01243A  CFF6 FFE9          	movff	tblptrl,fsr0l
 34167  01243E  CFF7 FFEA          	movff	tblptrh,fsr0h
 34168  012442  50EF               	movf	indf0,w,c
 34169  012444                     i2u1876_40:
 34170  012444  0900               	iorlw	0
 34171  012446  A4D8               	btfss	status,2,c
 34172  012448  D7E3               	goto	i2l1573
 34173  01244A                     i2u1877_40:
 34174                           
 34175                           ;doprnt.c: 753: if(prec && prec < len)
 34176                           
 34177                           ;doprnt.c: 750: dostring:
 34178  01244A  0100               	movlb	0	; () banked
 34179  01244C  51AD               	movf	i2printf@prec& (0+255),w,b
 34180  01244E  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 34181  012450  B4D8               	btfsc	status,2,c
 34182  012452  D00A               	goto	i2l1576
 34183                           
 34184                           ; BSR set to: 0
 34185  012454  5197               	movf	i2printf@len& (0+255),w,b
 34186  012456  5DAD               	subwf	i2printf@prec& (0+255),w,b
 34187  012458  5198               	movf	(i2printf@len+1)& (0+255),w,b
 34188  01245A  59AE               	subwfb	(i2printf@prec+1)& (0+255),w,b
 34189  01245C  B0D8               	btfsc	status,0,c
 34190  01245E  D004               	goto	i2l1576
 34191                           
 34192                           ; BSR set to: 0
 34193                           ;doprnt.c: 754: len = prec;
 34194  012460  C0AD  F097         	movff	i2printf@prec,i2printf@len
 34195  012464  C0AE  F098         	movff	i2printf@prec+1,i2printf@len+1
 34196  012468                     i2l1576:
 34197                           
 34198                           ; BSR set to: 0
 34199                           ;doprnt.c: 757: if(width > len)
 34200                           
 34201                           ; BSR set to: 0
 34202  012468  51AB               	movf	i2printf@width& (0+255),w,b
 34203  01246A  5D97               	subwf	i2printf@len& (0+255),w,b
 34204  01246C  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 34205  01246E  5998               	subwfb	(i2printf@len+1)& (0+255),w,b
 34206  012470  B0D8               	btfsc	status,0,c
 34207  012472  D005               	goto	i2l1577
 34208                           
 34209                           ; BSR set to: 0
 34210                           ;doprnt.c: 758: width -= len;
 34211  012474  5197               	movf	i2printf@len& (0+255),w,b
 34212  012476  5FAB               	subwf	i2printf@width& (0+255),f,b
 34213  012478  5198               	movf	(i2printf@len+1)& (0+255),w,b
 34214  01247A  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 34215  01247C  D008               	goto	i2l1579
 34216  01247E                     i2l1577:
 34217                           
 34218                           ; BSR set to: 0
 34219                           ;doprnt.c: 759: else
 34220                           ;doprnt.c: 760: width = 0;
 34221                           
 34222                           ; BSR set to: 0
 34223  01247E  0E00               	movlw	0
 34224  012480  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 34225  012482  0E00               	movlw	0
 34226  012484  6FAB               	movwf	i2printf@width& (0+255),b
 34227                           
 34228                           ; BSR set to: 0
 34229                           ;doprnt.c: 764: while(width--)
 34230  012486  D003               	goto	i2l1579
 34231  012488                     i2l15224:
 34232                           
 34233                           ; BSR set to: 0
 34234                           ;doprnt.c: 765: (putch(' ') );
 34235  012488  0E20               	movlw	32
 34236  01248A  EC51  F0CB         	call	i2_putch
 34237  01248E                     i2l1579:
 34238  01248E  0100               	movlb	0	; () banked
 34239  012490  07AB               	decf	i2printf@width& (0+255),f,b
 34240  012492  A0D8               	btfss	status,0,c
 34241  012494  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34242  012496  29AB               	incf	i2printf@width& (0+255),w,b
 34243  012498  E1F7               	bnz	i2l15224
 34244  01249A  29AC               	incf	(i2printf@width+1)& (0+255),w,b
 34245  01249C  B4D8               	btfsc	status,2,c
 34246  01249E  D017               	goto	i2l1582
 34247  0124A0  D7F3               	goto	i2l1580
 34248  0124A2                     i2l15228:
 34249                           
 34250                           ; BSR set to: 0
 34251                           ;doprnt.c: 768: (putch(*cp++) );
 34252  0124A2  C095  FFF6         	movff	i2printf@cp,tblptrl
 34253  0124A6  C096  FFF7         	movff	i2printf@cp+1,tblptrh
 34254  0124AA  0E00               	movlw	low (__mediumconst shr (0+16))
 34255  0124AC  6EF8               	movwf	tblptru,c
 34256  0124AE  0E0D               	movlw	(high __ramtop+-1)
 34257  0124B0  64F7               	cpfsgt	tblptrh,c
 34258  0124B2  D003               	bra	i2u1882_47
 34259  0124B4  0008               	tblrd		*
 34260  0124B6  50F5               	movf	tablat,w,c
 34261  0124B8  D005               	bra	i2u1882_40
 34262  0124BA                     i2u1882_47:
 34263  0124BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 34264  0124BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 34265  0124C2  50EF               	movf	indf0,w,c
 34266  0124C4                     i2u1882_40:
 34267  0124C4  EC51  F0CB         	call	i2_putch
 34268  0124C8  0100               	movlb	0	; () banked
 34269  0124CA  4B95               	infsnz	i2printf@cp& (0+255),f,b
 34270  0124CC  2B96               	incf	(i2printf@cp+1)& (0+255),f,b
 34271  0124CE                     i2l1582:
 34272                           
 34273                           ; BSR set to: 0
 34274                           
 34275                           ; BSR set to: 0
 34276  0124CE  0797               	decf	i2printf@len& (0+255),f,b
 34277  0124D0  A0D8               	btfss	status,0,c
 34278  0124D2  0798               	decf	(i2printf@len+1)& (0+255),f,b
 34279  0124D4  2997               	incf	i2printf@len& (0+255),w,b
 34280  0124D6  E1E5               	bnz	i2l15228
 34281  0124D8  2998               	incf	(i2printf@len+1)& (0+255),w,b
 34282  0124DA  B4D8               	btfsc	status,2,c
 34283  0124DC  EFB9  F097         	goto	i2u1938_40
 34284  0124E0  D7E0               	goto	i2l1583
 34285  0124E2                     
 34286                           ; BSR set to: 0
 34287                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 34288                           
 34289                           ; BSR set to: 0
 34290  0124E2  C099  FFD9         	movff	i2printf@ap,fsr2l
 34291  0124E6  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 34292  0124EA  50DF               	movf	indf2,w,c
 34293  0124EC  6FAF               	movwf	i2printf@c& (0+255),b
 34294                           
 34295                           ; BSR set to: 0
 34296  0124EE  0E02               	movlw	2
 34297  0124F0  2799               	addwf	i2printf@ap& (0+255),f,b
 34298  0124F2  0E00               	movlw	0
 34299  0124F4  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 34300  0124F6                     
 34301                           ; BSR set to: 0
 34302                           ;doprnt.c: 805: cp = (char *)&c;
 34303                           
 34304                           ; BSR set to: 0
 34305  0124F6  0EAF               	movlw	low i2printf@c
 34306  0124F8  6F95               	movwf	i2printf@cp& (0+255),b
 34307  0124FA  0E00               	movlw	high i2printf@c
 34308  0124FC  6F96               	movwf	(i2printf@cp+1)& (0+255),b
 34309                           
 34310                           ; BSR set to: 0
 34311                           ;doprnt.c: 806: len = 1;
 34312  0124FE  0E00               	movlw	0
 34313  012500  6F98               	movwf	(i2printf@len+1)& (0+255),b
 34314  012502  0E01               	movlw	1
 34315  012504  6F97               	movwf	i2printf@len& (0+255),b
 34316                           
 34317                           ;doprnt.c: 807: goto dostring;
 34318  012506  D7A1               	goto	i2u1877_40
 34319  012508                     
 34320                           ; BSR set to: 0
 34321                           ;doprnt.c: 818: flag |= 0xC0;
 34322                           
 34323                           ; BSR set to: 0
 34324  012508  0EC0               	movlw	192
 34325  01250A  13A9               	iorwf	i2printf@flag& (0+255),f,b
 34326                           
 34327                           ; BSR set to: 0
 34328                           ;doprnt.c: 822: }
 34329                           
 34330                           ;doprnt.c: 819: break;
 34331  01250C  D037               	goto	i2l1565
 34332  01250E                     i2l1561:
 34333                           
 34334                           ; BSR set to: 0
 34335  01250E  0100               	movlb	0	; () banked
 34336  012510  5188               	movf	i2printf@f& (0+255),w,b
 34337  012512  6F8A               	movwf	??i2_printf& (0+255),b
 34338  012514  5189               	movf	(i2printf@f+1)& (0+255),w,b
 34339  012516  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34340  012518  4B88               	infsnz	i2printf@f& (0+255),f,b
 34341  01251A  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 34342  01251C  C08A  FFF6         	movff	??i2_printf,tblptrl
 34343  012520  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 34344  012524  0E00               	movlw	low (__mediumconst shr (0+16))
 34345  012526  6EF8               	movwf	tblptru,c
 34346  012528  0E0D               	movlw	(high __ramtop+-1)
 34347  01252A  64F7               	cpfsgt	tblptrh,c
 34348  01252C  D003               	bra	i2u1884_47
 34349  01252E  0008               	tblrd		*
 34350  012530  50F5               	movf	tablat,w,c
 34351  012532  D005               	bra	i2u1884_40
 34352  012534                     i2u1884_47:
 34353  012534  CFF6 FFE9          	movff	tblptrl,fsr0l
 34354  012538  CFF7 FFEA          	movff	tblptrh,fsr0h
 34355  01253C  50EF               	movf	indf0,w,c
 34356  01253E                     i2u1884_40:
 34357  01253E  0100               	movlb	0	; () banked
 34358  012540  6FAF               	movwf	i2printf@c& (0+255),b
 34359  012542  51AF               	movf	i2printf@c& (0+255),w,b
 34360                           
 34361                           ; Switch size 1, requested type "space"
 34362                           ; Number of cases is 9, Range of values is 0 to 120
 34363                           ; switch strategies available:
 34364                           ; Name         Instructions Cycles
 34365                           ; simple_byte           28    15 (average)
 34366                           ;	Chosen strategy is simple_byte
 34367  012544  0A00               	xorlw	0	; case 0
 34368  012546  B4D8               	btfsc	status,2,c
 34369  012548  0012               	return	
 34370  01254A  0A58               	xorlw	88	; case 88
 34371  01254C  B4D8               	btfsc	status,2,c
 34372  01254E  D745               	goto	i2l1568
 34373  012550  0A3B               	xorlw	59	; case 99
 34374  012552  B4D8               	btfsc	status,2,c
 34375  012554  D7C6               	goto	i2l1585
 34376  012556  0A07               	xorlw	7	; case 100
 34377  012558  B4D8               	btfsc	status,2,c
 34378  01255A  D010               	goto	i2l1565
 34379  01255C  0A02               	xorlw	2	; case 102
 34380  01255E  B4D8               	btfsc	status,2,c
 34381  012560  D73A               	goto	i2l1564
 34382  012562  0A0F               	xorlw	15	; case 105
 34383  012564  B4D8               	btfsc	status,2,c
 34384  012566  D00A               	goto	i2l1565
 34385  012568  0A1A               	xorlw	26	; case 115
 34386  01256A  B4D8               	btfsc	status,2,c
 34387  01256C  D738               	goto	i2l1570
 34388  01256E  0A06               	xorlw	6	; case 117
 34389  012570  B4D8               	btfsc	status,2,c
 34390  012572  D7CA               	goto	i2l1587
 34391  012574  0A0D               	xorlw	13	; case 120
 34392  012576  B4D8               	btfsc	status,2,c
 34393  012578  D730               	goto	i2l1568
 34394  01257A  D7BD               	goto	i2l1586
 34395  01257C                     i2l1565:
 34396                           
 34397                           ; BSR set to: 0
 34398                           ;doprnt.c: 825: if(flag & (0x700)) {
 34399                           
 34400                           ; BSR set to: 0
 34401  01257C  0E07               	movlw	7
 34402  01257E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34403  012580  B4D8               	btfsc	status,2,c
 34404  012582  D33B               	goto	i2l1588
 34405                           
 34406                           ; BSR set to: 0
 34407                           ;doprnt.c: 827: if(flag & 0x1000)
 34408  012584  A9AA               	btfss	(i2printf@flag+1)& (0+255),4,b
 34409  012586  D004               	goto	i2l1589
 34410                           
 34411                           ; BSR set to: 0
 34412                           ;doprnt.c: 829: prec = 6;
 34413  012588  0E00               	movlw	0
 34414  01258A  6FAE               	movwf	(i2printf@prec+1)& (0+255),b
 34415  01258C  0E06               	movlw	6
 34416  01258E  6FAD               	movwf	i2printf@prec& (0+255),b
 34417  012590                     i2l1589:
 34418                           
 34419                           ; BSR set to: 0
 34420                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 34421                           
 34422                           ; BSR set to: 0
 34423  012590  C099  FFD9         	movff	i2printf@ap,fsr2l
 34424  012594  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 34425  012598  CFDE F0A5          	movff	postinc2,i2printf@fval
 34426  01259C  CFDE F0A6          	movff	postinc2,i2printf@fval+1
 34427  0125A0  CFDE F0A7          	movff	postinc2,i2printf@fval+2
 34428  0125A4  CFDE F0A8          	movff	postinc2,i2printf@fval+3
 34429                           
 34430                           ; BSR set to: 0
 34431  0125A8  0E04               	movlw	4
 34432  0125AA  2799               	addwf	i2printf@ap& (0+255),f,b
 34433  0125AC  0E00               	movlw	0
 34434  0125AE  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 34435                           
 34436                           ; BSR set to: 0
 34437                           ;doprnt.c: 831: if(fval < 0.0) {
 34438  0125B0  AFA8               	btfss	(i2printf@fval+3)& (0+255),7,b
 34439  0125B2  D015               	goto	i2l1590
 34440                           
 34441                           ; BSR set to: 0
 34442                           ;doprnt.c: 832: fval = -fval;
 34443  0125B4  C0A5  F02C         	movff	i2printf@fval,i2___flneg@f1
 34444  0125B8  C0A6  F02D         	movff	i2printf@fval+1,i2___flneg@f1+1
 34445  0125BC  C0A7  F02E         	movff	i2printf@fval+2,i2___flneg@f1+2
 34446  0125C0  C0A8  F02F         	movff	i2printf@fval+3,i2___flneg@f1+3
 34447  0125C4  EC5C  F0C9         	call	i2___flneg	;wreg free
 34448  0125C8  C02C  F0A5         	movff	?i2___flneg,i2printf@fval
 34449  0125CC  C02D  F0A6         	movff	?i2___flneg+1,i2printf@fval+1
 34450  0125D0  C02E  F0A7         	movff	?i2___flneg+2,i2printf@fval+2
 34451  0125D4  C02F  F0A8         	movff	?i2___flneg+3,i2printf@fval+3
 34452                           
 34453                           ;doprnt.c: 833: flag |= 0x03;
 34454  0125D8  0E03               	movlw	3
 34455  0125DA  0100               	movlb	0	; () banked
 34456  0125DC  13A9               	iorwf	i2printf@flag& (0+255),f,b
 34457  0125DE                     i2l1590:
 34458                           
 34459                           ; BSR set to: 0
 34460                           ;doprnt.c: 834: }
 34461                           ;doprnt.c: 835: exp = 0;
 34462                           
 34463                           ; BSR set to: 0
 34464  0125DE  0E00               	movlw	0
 34465  0125E0  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 34466  0125E2  0E00               	movlw	0
 34467  0125E4  6F9F               	movwf	i2printf@exp& (0+255),b
 34468                           
 34469                           ; BSR set to: 0
 34470                           ;doprnt.c: 836: if( fval!=0) {
 34471  0125E6  51A5               	movf	i2printf@fval& (0+255),w,b
 34472  0125E8  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 34473  0125EA  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 34474  0125EC  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 34475  0125EE  B4D8               	btfsc	status,2,c
 34476  0125F0  D082               	goto	i2l1595
 34477                           
 34478                           ; BSR set to: 0
 34479                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 34480  0125F2  35A7               	rlcf	(i2printf@fval+2)& (0+255),w,b
 34481  0125F4  35A8               	rlcf	(i2printf@fval+3)& (0+255),w,b
 34482  0125F6  0F82               	addlw	130
 34483  0125F8  6F9F               	movwf	i2printf@exp& (0+255),b
 34484  0125FA  6BA0               	clrf	(i2printf@exp+1)& (0+255),b
 34485  0125FC  0EFF               	movlw	255
 34486  0125FE  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 34487                           
 34488                           ; BSR set to: 0
 34489                           ;doprnt.c: 838: exp--;
 34490  012600  079F               	decf	i2printf@exp& (0+255),f,b
 34491  012602  A0D8               	btfss	status,0,c
 34492  012604  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 34493                           
 34494                           ; BSR set to: 0
 34495                           ;doprnt.c: 839: exp *= 3;
 34496  012606  C09F  F001         	movff	i2printf@exp,i2___wmul@multiplier
 34497  01260A  C0A0  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 34498  01260E  0E00               	movlw	0
 34499  012610  6E04               	movwf	i2___wmul@multiplicand+1,c
 34500  012612  0E03               	movlw	3
 34501  012614  6E03               	movwf	i2___wmul@multiplicand,c
 34502  012616  ECEA  F0C9         	call	i2___wmul	;wreg free
 34503  01261A  C001  F09F         	movff	?i2___wmul,i2printf@exp
 34504  01261E  C002  F0A0         	movff	?i2___wmul+1,i2printf@exp+1
 34505                           
 34506                           ;doprnt.c: 840: exp /= 10;
 34507  012622  C09F  F007         	movff	i2printf@exp,i2___awdiv@dividend
 34508  012626  C0A0  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 34509  01262A  0E00               	movlw	0
 34510  01262C  6E0A               	movwf	i2___awdiv@divisor+1,c
 34511  01262E  0E0A               	movlw	10
 34512  012630  6E09               	movwf	i2___awdiv@divisor,c
 34513  012632  EC87  F0C2         	call	i2___awdiv	;wreg free
 34514  012636  C007  F09F         	movff	?i2___awdiv,i2printf@exp
 34515  01263A  C008  F0A0         	movff	?i2___awdiv+1,i2printf@exp+1
 34516                           
 34517                           ;doprnt.c: 841: if(exp < 0)
 34518  01263E  0100               	movlb	0	; () banked
 34519  012640  AFA0               	btfss	(i2printf@exp+1)& (0+255),7,b
 34520  012642  D003               	goto	i2l1592
 34521                           
 34522                           ; BSR set to: 0
 34523                           ;doprnt.c: 842: exp--;
 34524  012644  079F               	decf	i2printf@exp& (0+255),f,b
 34525  012646  A0D8               	btfss	status,0,c
 34526  012648  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 34527  01264A                     i2l1592:
 34528                           
 34529                           ; BSR set to: 0
 34530                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 34531                           
 34532                           ; BSR set to: 0
 34533  01264A  519F               	movf	i2printf@exp& (0+255),w,b
 34534  01264C  0800               	sublw	0
 34535  01264E  EC97  F09F         	call	i2_scale
 34536  012652  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 34537  012656  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 34538  01265A  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 34539  01265E  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 34540                           
 34541                           ;doprnt.c: 847: tmpval.integ *= fval;
 34542  012662  C09B  F030         	movff	i2printf@tmpval,i2___flmul@b
 34543  012666  C09C  F031         	movff	i2printf@tmpval+1,i2___flmul@b+1
 34544  01266A  C09D  F032         	movff	i2printf@tmpval+2,i2___flmul@b+2
 34545  01266E  C09E  F033         	movff	i2printf@tmpval+3,i2___flmul@b+3
 34546  012672  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 34547  012676  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 34548  01267A  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 34549  01267E  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 34550  012682  EC34  F0A5         	call	i2___flmul	;wreg free
 34551  012686  C030  F09B         	movff	?i2___flmul,i2printf@tmpval
 34552  01268A  C031  F09C         	movff	?i2___flmul+1,i2printf@tmpval+1
 34553  01268E  C032  F09D         	movff	?i2___flmul+2,i2printf@tmpval+2
 34554  012692  C033  F09E         	movff	?i2___flmul+3,i2printf@tmpval+3
 34555                           
 34556                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 34557  012696  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 34558  01269A  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 34559  01269E  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 34560  0126A2  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 34561  0126A6  0E00               	movlw	0
 34562  0126A8  6E38               	movwf	i2___flge@ff2,c
 34563  0126AA  0E00               	movlw	0
 34564  0126AC  6E39               	movwf	i2___flge@ff2+1,c
 34565  0126AE  0E80               	movlw	128
 34566  0126B0  6E3A               	movwf	i2___flge@ff2+2,c
 34567  0126B2  0E3F               	movlw	63
 34568  0126B4  6E3B               	movwf	i2___flge@ff2+3,c
 34569  0126B6  ECCB  F0BC         	call	i2___flge	;wreg free
 34570  0126BA  B0D8               	btfsc	status,0,c
 34571  0126BC  D005               	goto	i2l1593
 34572                           
 34573                           ;doprnt.c: 849: exp--;
 34574  0126BE  0100               	movlb	0	; () banked
 34575  0126C0  079F               	decf	i2printf@exp& (0+255),f,b
 34576  0126C2  A0D8               	btfss	status,0,c
 34577  0126C4  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 34578  0126C6  D017               	goto	i2l1595
 34579  0126C8                     i2l1593:
 34580                           
 34581                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 34582                           
 34583                           ; BSR set to: 0
 34584  0126C8  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 34585  0126CC  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 34586  0126D0  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 34587  0126D4  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 34588  0126D8  0E00               	movlw	0
 34589  0126DA  6E38               	movwf	i2___flge@ff2,c
 34590  0126DC  0E00               	movlw	0
 34591  0126DE  6E39               	movwf	i2___flge@ff2+1,c
 34592  0126E0  0E20               	movlw	32
 34593  0126E2  6E3A               	movwf	i2___flge@ff2+2,c
 34594  0126E4  0E41               	movlw	65
 34595  0126E6  6E3B               	movwf	i2___flge@ff2+3,c
 34596  0126E8  ECCB  F0BC         	call	i2___flge	;wreg free
 34597  0126EC  A0D8               	btfss	status,0,c
 34598  0126EE  D003               	goto	i2l1595
 34599                           
 34600                           ;doprnt.c: 851: exp++;
 34601  0126F0  0100               	movlb	0	; () banked
 34602  0126F2  4B9F               	infsnz	i2printf@exp& (0+255),f,b
 34603  0126F4  2BA0               	incf	(i2printf@exp+1)& (0+255),f,b
 34604  0126F6                     i2l1595:
 34605                           
 34606                           ;doprnt.c: 852: }
 34607                           ;doprnt.c: 1112: if(prec <= 12)
 34608                           
 34609                           ; BSR set to: 0
 34610                           
 34611                           ; BSR set to: 0
 34612                           
 34613                           ; BSR set to: 0
 34614  0126F6  0100               	movlb	0	; () banked
 34615  0126F8  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 34616  0126FA  D006               	goto	i2u1892_40
 34617  0126FC  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34618  0126FE  E121               	bnz	i2l15296
 34619  012700  0E0D               	movlw	13
 34620  012702  5DAD               	subwf	i2printf@prec& (0+255),w,b
 34621  012704  B0D8               	btfsc	status,0,c
 34622  012706  D01D               	goto	i2l1596
 34623  012708                     i2u1892_40:
 34624                           
 34625                           ; BSR set to: 0
 34626                           ;doprnt.c: 1113: fval += fround(prec);
 34627  012708  C0A5  F056         	movff	i2printf@fval,i2___fladd@b
 34628  01270C  C0A6  F057         	movff	i2printf@fval+1,i2___fladd@b+1
 34629  012710  C0A7  F058         	movff	i2printf@fval+2,i2___fladd@b+2
 34630  012714  C0A8  F059         	movff	i2printf@fval+3,i2___fladd@b+3
 34631  012718  51AD               	movf	i2printf@prec& (0+255),w,b
 34632  01271A  EC95  F0B2         	call	i2_fround
 34633  01271E  C049  F05A         	movff	?i2_fround,i2___fladd@a
 34634  012722  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 34635  012726  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 34636  01272A  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 34637  01272E  EC7B  F0A8         	call	i2___fladd	;wreg free
 34638  012732  C056  F0A5         	movff	?i2___fladd,i2printf@fval
 34639  012736  C057  F0A6         	movff	?i2___fladd+1,i2printf@fval+1
 34640  01273A  C058  F0A7         	movff	?i2___fladd+2,i2printf@fval+2
 34641  01273E  C059  F0A8         	movff	?i2___fladd+3,i2printf@fval+3
 34642  012742                     i2l1596:
 34643  012742                     i2l15296:
 34644                           
 34645                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 34646  012742  0100               	movlb	0	; () banked
 34647  012744  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 34648  012746  D006               	goto	i2u1893_40
 34649  012748  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 34650  01274A  E122               	bnz	i2l15304
 34651  01274C  0E0A               	movlw	10
 34652  01274E  5D9F               	subwf	i2printf@exp& (0+255),w,b
 34653  012750  B0D8               	btfsc	status,0,c
 34654  012752  D01E               	goto	i2u1896_40
 34655  012754                     i2u1893_40:
 34656                           
 34657                           ; BSR set to: 0
 34658  012754  51A5               	movf	i2printf@fval& (0+255),w,b
 34659  012756  11A6               	iorwf	(i2printf@fval+1)& (0+255),w,b
 34660  012758  11A7               	iorwf	(i2printf@fval+2)& (0+255),w,b
 34661  01275A  11A8               	iorwf	(i2printf@fval+3)& (0+255),w,b
 34662  01275C  B4D8               	btfsc	status,2,c
 34663  01275E  D063               	goto	i2l1597
 34664                           
 34665                           ; BSR set to: 0
 34666  012760  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 34667  012764  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 34668  012768  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 34669  01276C  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 34670  012770  EC45  F0BF         	call	i2___fltol	;wreg free
 34671  012774  0100               	movlb	0	; () banked
 34672  012776  516C               	movf	?i2___fltol& (0+255),w,b
 34673  012778  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 34674  01277A  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 34675  01277C  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 34676  01277E  B4D8               	btfsc	status,2,c
 34677                           
 34678                           ; BSR set to: 0
 34679  012780  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 34680  012782  D051               	goto	i2l1597
 34681  012784  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 34682  012786  E104               	bnz	i2l15304
 34683  012788  0E02               	movlw	2
 34684  01278A  5D9F               	subwf	i2printf@exp& (0+255),w,b
 34685  01278C  A0D8               	btfss	status,0,c
 34686  01278E  D04B               	goto	i2l1597
 34687  012790                     i2u1896_40:
 34688  012790                     i2l15304:
 34689                           
 34690                           ; BSR set to: 0
 34691                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 34692  012790  C09B  F034         	movff	i2printf@tmpval,i2___flge@ff1
 34693  012794  C09C  F035         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 34694  012798  C09D  F036         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 34695  01279C  C09E  F037         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 34696  0127A0  0E5F               	movlw	95
 34697  0127A2  6E38               	movwf	i2___flge@ff2,c
 34698  0127A4  0E70               	movlw	112
 34699  0127A6  6E39               	movwf	i2___flge@ff2+1,c
 34700  0127A8  0E89               	movlw	137
 34701  0127AA  6E3A               	movwf	i2___flge@ff2+2,c
 34702  0127AC  0E40               	movlw	64
 34703  0127AE  6E3B               	movwf	i2___flge@ff2+3,c
 34704  0127B0  ECCB  F0BC         	call	i2___flge	;wreg free
 34705  0127B4  B0D8               	btfsc	status,0,c
 34706  0127B6  D003               	goto	i2l1600
 34707                           
 34708                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 34709  0127B8  0100               	movlb	0	; () banked
 34710  0127BA  0EF7               	movlw	247
 34711  0127BC  D002               	goto	L16
 34712  0127BE                     i2l1600:
 34713                           
 34714                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 34715                           
 34716                           ; BSR set to: 0
 34717  0127BE  0100               	movlb	0	; () banked
 34718  0127C0  0EF8               	movlw	248
 34719  0127C2                     L16:
 34720  0127C2  279F               	addwf	i2printf@exp& (0+255),f,b
 34721  0127C4  0EFF               	movlw	255
 34722  0127C6  23A0               	addwfc	(i2printf@exp+1)& (0+255),f,b
 34723                           
 34724                           ; BSR set to: 0
 34725                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 34726                           
 34727                           ; BSR set to: 0
 34728  0127C8  519F               	movf	i2printf@exp& (0+255),w,b
 34729  0127CA  EC97  F09F         	call	i2_scale
 34730  0127CE  C049  F09B         	movff	?i2_scale,i2printf@tmpval
 34731  0127D2  C04A  F09C         	movff	?i2_scale+1,i2printf@tmpval+1
 34732  0127D6  C04B  F09D         	movff	?i2_scale+2,i2printf@tmpval+2
 34733  0127DA  C04C  F09E         	movff	?i2_scale+3,i2printf@tmpval+3
 34734  0127DE  C0A5  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 34735  0127E2  C0A6  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 34736  0127E6  C0A7  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 34737  0127EA  C0A8  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 34738  0127EE  C09B  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 34739  0127F2  C09C  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 34740  0127F6  C09D  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 34741  0127FA  C09E  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 34742  0127FE  EC14  F0BB         	call	i2__div_to_l_	;wreg free
 34743  012802  C001  F0A1         	movff	?i2__div_to_l_,i2printf@val
 34744  012806  C002  F0A2         	movff	?i2__div_to_l_+1,i2printf@val+1
 34745  01280A  C003  F0A3         	movff	?i2__div_to_l_+2,i2printf@val+2
 34746  01280E  C004  F0A4         	movff	?i2__div_to_l_+3,i2printf@val+3
 34747                           
 34748                           ;doprnt.c: 1129: fval = 0.0;
 34749  012812  0E00               	movlw	0
 34750  012814  0100               	movlb	0	; () banked
 34751  012816  6FA5               	movwf	i2printf@fval& (0+255),b
 34752  012818  0E00               	movlw	0
 34753  01281A  6FA6               	movwf	(i2printf@fval+1)& (0+255),b
 34754  01281C  0E00               	movlw	0
 34755  01281E  6FA7               	movwf	(i2printf@fval+2)& (0+255),b
 34756  012820  0E00               	movlw	0
 34757  012822  6FA8               	movwf	(i2printf@fval+3)& (0+255),b
 34758                           
 34759                           ;doprnt.c: 1130: } else {
 34760  012824  D03C               	goto	i2l1606
 34761  012826                     i2l1597:
 34762                           
 34763                           ; BSR set to: 0
 34764                           ;doprnt.c: 1131: val = (unsigned long)fval;
 34765                           
 34766                           ; BSR set to: 0
 34767  012826  C0A5  F06C         	movff	i2printf@fval,i2___fltol@f1
 34768  01282A  C0A6  F06D         	movff	i2printf@fval+1,i2___fltol@f1+1
 34769  01282E  C0A7  F06E         	movff	i2printf@fval+2,i2___fltol@f1+2
 34770  012832  C0A8  F06F         	movff	i2printf@fval+3,i2___fltol@f1+3
 34771  012836  EC45  F0BF         	call	i2___fltol	;wreg free
 34772  01283A  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 34773  01283E  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 34774  012842  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 34775  012846  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 34776                           
 34777                           ;doprnt.c: 1132: fval -= (double)val;
 34778  01284A  C0A5  F080         	movff	i2printf@fval,i2___flsub@b
 34779  01284E  C0A6  F081         	movff	i2printf@fval+1,i2___flsub@b+1
 34780  012852  C0A7  F082         	movff	i2printf@fval+2,i2___flsub@b+2
 34781  012856  C0A8  F083         	movff	i2printf@fval+3,i2___flsub@b+3
 34782  01285A  C0A1  F005         	movff	i2printf@val,i2___xxtofl@val
 34783  01285E  C0A2  F006         	movff	i2printf@val+1,i2___xxtofl@val+1
 34784  012862  C0A3  F007         	movff	i2printf@val+2,i2___xxtofl@val+2
 34785  012866  C0A4  F008         	movff	i2printf@val+3,i2___xxtofl@val+3
 34786  01286A  0E00               	movlw	0
 34787  01286C  EC09  F0B8         	call	i2___xxtofl
 34788  012870  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 34789  012874  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 34790  012878  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 34791  01287C  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 34792  012880  EC5C  F0C7         	call	i2___flsub	;wreg free
 34793  012884  C080  F0A5         	movff	?i2___flsub,i2printf@fval
 34794  012888  C081  F0A6         	movff	?i2___flsub+1,i2printf@fval+1
 34795  01288C  C082  F0A7         	movff	?i2___flsub+2,i2printf@fval+2
 34796  012890  C083  F0A8         	movff	?i2___flsub+3,i2printf@fval+3
 34797                           
 34798                           ;doprnt.c: 1133: exp = 0;
 34799  012894  0E00               	movlw	0
 34800  012896  0100               	movlb	0	; () banked
 34801  012898  6FA0               	movwf	(i2printf@exp+1)& (0+255),b
 34802  01289A  0E00               	movlw	0
 34803  01289C  6F9F               	movwf	i2printf@exp& (0+255),b
 34804  01289E                     i2l1606:
 34805                           
 34806                           ; BSR set to: 0
 34807                           ;doprnt.c: 1134: }
 34808                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 34809                           
 34810                           ; BSR set to: 0
 34811  01289E  0E01               	movlw	1
 34812  0128A0  6FAF               	movwf	i2printf@c& (0+255),b
 34813  0128A2                     i2l15324:
 34814                           
 34815                           ; BSR set to: 0
 34816  0128A2  0E0A               	movlw	10
 34817  0128A4  19AF               	xorwf	i2printf@c& (0+255),w,b
 34818  0128A6  B4D8               	btfsc	status,2,c
 34819  0128A8  D01B               	goto	i2u1900_40
 34820                           
 34821                           ; BSR set to: 0
 34822                           ;doprnt.c: 1137: if(val < dpowers[c])
 34823                           
 34824                           ; BSR set to: 0
 34825                           
 34826                           ; BSR set to: 0
 34827  0128AA  51AF               	movf	i2printf@c& (0+255),w,b
 34828  0128AC  0D04               	mullw	4
 34829  0128AE  0EA9               	movlw	low _dpowers
 34830  0128B0  24F3               	addwf	prodl,w,c
 34831  0128B2  6EF6               	movwf	tblptrl,c
 34832  0128B4  0ED7               	movlw	high _dpowers
 34833  0128B6  20F4               	addwfc	prodh,w,c
 34834  0128B8  6EF7               	movwf	tblptrh,c
 34835  0128BA                     	if	1	;There are 3 active tblptr bytes
 34836  0128BA  6AF8               	clrf	tblptru,c
 34837  0128BC  0E00               	movlw	low (__mediumconst shr (0+16))
 34838  0128BE  22F8               	addwfc	tblptru,f,c
 34839  0128C0                     	endif
 34840  0128C0  0009               	tblrd		*+
 34841  0128C2  50F5               	movf	tablat,w,c
 34842  0128C4  5DA1               	subwf	i2printf@val& (0+255),w,b
 34843  0128C6  0009               	tblrd		*+
 34844  0128C8  50F5               	movf	tablat,w,c
 34845  0128CA  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 34846  0128CC  0009               	tblrd		*+
 34847  0128CE  50F5               	movf	tablat,w,c
 34848  0128D0  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 34849  0128D2  0009               	tblrd		*+
 34850  0128D4  50F5               	movf	tablat,w,c
 34851  0128D6  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 34852  0128D8  A0D8               	btfss	status,0,c
 34853  0128DA  D002               	goto	i2u1900_40
 34854                           
 34855                           ; BSR set to: 0
 34856                           
 34857                           ; BSR set to: 0
 34858                           
 34859                           ; BSR set to: 0
 34860                           ;doprnt.c: 1138: break;
 34861  0128DC  2BAF               	incf	i2printf@c& (0+255),f,b
 34862  0128DE  D7E1               	goto	i2l15324
 34863  0128E0                     i2u1900_40:
 34864                           
 34865                           ; BSR set to: 0
 34866                           ;doprnt.c: 1142: width -= prec + c + exp;
 34867                           
 34868                           ; BSR set to: 0
 34869  0128E0  C0AF  F08A         	movff	i2printf@c,??i2_printf
 34870  0128E4  6B8B               	clrf	(??i2_printf+1)& (0+255),b
 34871  0128E6  BF8A               	btfsc	??i2_printf& (0+255),7,b
 34872  0128E8  078B               	decf	(??i2_printf+1)& (0+255),f,b
 34873  0128EA  51AD               	movf	i2printf@prec& (0+255),w,b
 34874  0128EC  278A               	addwf	??i2_printf& (0+255),f,b
 34875  0128EE  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 34876  0128F0  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 34877  0128F2  519F               	movf	i2printf@exp& (0+255),w,b
 34878  0128F4  278A               	addwf	??i2_printf& (0+255),f,b
 34879  0128F6  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 34880  0128F8  238B               	addwfc	(??i2_printf+1)& (0+255),f,b
 34881  0128FA  518A               	movf	??i2_printf& (0+255),w,b
 34882  0128FC  5FAB               	subwf	i2printf@width& (0+255),f,b
 34883  0128FE  518B               	movf	(??i2_printf+1)& (0+255),w,b
 34884  012900  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 34885                           
 34886                           ;doprnt.c: 1143: if(
 34887                           ;doprnt.c: 1147: prec)
 34888  012902  51AD               	movf	i2printf@prec& (0+255),w,b
 34889  012904  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 34890  012906  B4D8               	btfsc	status,2,c
 34891  012908  D003               	goto	i2l1610
 34892                           
 34893                           ; BSR set to: 0
 34894                           ;doprnt.c: 1148: width--;
 34895  01290A  07AB               	decf	i2printf@width& (0+255),f,b
 34896  01290C  A0D8               	btfss	status,0,c
 34897  01290E  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34898  012910                     i2l1610:
 34899                           
 34900                           ; BSR set to: 0
 34901                           ;doprnt.c: 1149: if(flag & 0x03)
 34902                           
 34903                           ; BSR set to: 0
 34904  012910  0E03               	movlw	3
 34905  012912  15A9               	andwf	i2printf@flag& (0+255),w,b
 34906  012914  6F8A               	movwf	??i2_printf& (0+255),b
 34907  012916  0E00               	movlw	0
 34908  012918  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34909  01291A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34910  01291C  518A               	movf	??i2_printf& (0+255),w,b
 34911  01291E  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 34912  012920  B4D8               	btfsc	status,2,c
 34913  012922  D003               	goto	i2l1611
 34914                           
 34915                           ; BSR set to: 0
 34916                           ;doprnt.c: 1150: width--;
 34917  012924  07AB               	decf	i2printf@width& (0+255),f,b
 34918  012926  A0D8               	btfss	status,0,c
 34919  012928  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34920  01292A                     i2l1611:
 34921                           
 34922                           ; BSR set to: 0
 34923                           ;doprnt.c: 1153: if(flag & 0x04) {
 34924                           
 34925                           ; BSR set to: 0
 34926  01292A  A5A9               	btfss	i2printf@flag& (0+255),2,b
 34927  01292C  D025               	goto	i2l1618
 34928                           
 34929                           ; BSR set to: 0
 34930                           ;doprnt.c: 1157: if(flag & 0x03)
 34931  01292E  0E03               	movlw	3
 34932  012930  15A9               	andwf	i2printf@flag& (0+255),w,b
 34933  012932  6F8A               	movwf	??i2_printf& (0+255),b
 34934  012934  0E00               	movlw	0
 34935  012936  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 34936  012938  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 34937  01293A  518A               	movf	??i2_printf& (0+255),w,b
 34938  01293C  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 34939  01293E  B4D8               	btfsc	status,2,c
 34940  012940  D00B               	goto	i2l1614
 34941                           
 34942                           ; BSR set to: 0
 34943                           ;doprnt.c: 1159: (putch('-') );
 34944  012942  0E2D               	movlw	45
 34945  012944  EC51  F0CB         	call	i2_putch
 34946                           
 34947                           ;doprnt.c: 1168: while(width > 0) {
 34948  012948  D007               	goto	i2l1614
 34949  01294A                     i2l15350:
 34950                           
 34951                           ;doprnt.c: 1169: (putch('0') );
 34952  01294A  0E30               	movlw	48
 34953  01294C  EC51  F0CB         	call	i2_putch
 34954                           
 34955                           ;doprnt.c: 1170: width--;
 34956  012950  0100               	movlb	0	; () banked
 34957  012952  07AB               	decf	i2printf@width& (0+255),f,b
 34958  012954  A0D8               	btfss	status,0,c
 34959  012956  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34960  012958                     i2l1614:
 34961                           
 34962                           ; BSR set to: 0
 34963  012958  0100               	movlb	0	; () banked
 34964  01295A  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 34965  01295C  D06B               	goto	i2l1622
 34966  01295E  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 34967  012960  E1F4               	bnz	i2l15350
 34968  012962  05AB               	decf	i2printf@width& (0+255),w,b
 34969  012964  A0D8               	btfss	status,0,c
 34970  012966  D066               	goto	i2l1622
 34971  012968  D7F0               	goto	i2l1615
 34972  01296A                     i2l15356:
 34973                           
 34974                           ; BSR set to: 0
 34975                           ;doprnt.c: 1181: (putch(' ') );
 34976  01296A  0E20               	movlw	32
 34977  01296C  EC51  F0CB         	call	i2_putch
 34978                           
 34979                           ;doprnt.c: 1182: width--;
 34980  012970  0100               	movlb	0	; () banked
 34981  012972  07AB               	decf	i2printf@width& (0+255),f,b
 34982  012974  A0D8               	btfss	status,0,c
 34983  012976  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 34984  012978                     i2l1618:
 34985                           
 34986                           ; BSR set to: 0
 34987                           
 34988                           ; BSR set to: 0
 34989  012978  BFAC               	btfsc	(i2printf@width+1)& (0+255),7,b
 34990  01297A  D005               	goto	i2u1906_40
 34991  01297C  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 34992  01297E  E1F5               	bnz	i2l15356
 34993  012980  05AB               	decf	i2printf@width& (0+255),w,b
 34994  012982  B0D8               	btfsc	status,0,c
 34995  012984  D7F2               	goto	i2l1619
 34996  012986                     i2u1906_40:
 34997                           
 34998                           ; BSR set to: 0
 34999                           ;doprnt.c: 1183: }
 35000                           ;doprnt.c: 1188: if(flag & 0x03)
 35001                           
 35002                           ; BSR set to: 0
 35003  012986  0E03               	movlw	3
 35004  012988  15A9               	andwf	i2printf@flag& (0+255),w,b
 35005  01298A  6F8A               	movwf	??i2_printf& (0+255),b
 35006  01298C  0E00               	movlw	0
 35007  01298E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 35008  012990  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35009  012992  518A               	movf	??i2_printf& (0+255),w,b
 35010  012994  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 35011  012996  B4D8               	btfsc	status,2,c
 35012  012998  D04D               	goto	i2l1622
 35013                           
 35014                           ; BSR set to: 0
 35015                           ;doprnt.c: 1190: (putch('-') );
 35016  01299A  0E2D               	movlw	45
 35017  01299C  EC51  F0CB         	call	i2_putch
 35018                           
 35019                           ;doprnt.c: 1195: }
 35020                           ;doprnt.c: 1196: while(c--) {
 35021  0129A0  D049               	goto	i2l1622
 35022  0129A2                     
 35023                           ;doprnt.c: 1200: {
 35024                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 35025  0129A2  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 35026  0129A6  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 35027  0129AA  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 35028  0129AE  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 35029  0129B2  0100               	movlb	0	; () banked
 35030  0129B4  51AF               	movf	i2printf@c& (0+255),w,b
 35031  0129B6  0D04               	mullw	4
 35032  0129B8  0EA9               	movlw	low _dpowers
 35033  0129BA  24F3               	addwf	prodl,w,c
 35034  0129BC  6EF6               	movwf	tblptrl,c
 35035  0129BE  0ED7               	movlw	high _dpowers
 35036  0129C0  20F4               	addwfc	prodh,w,c
 35037  0129C2  6EF7               	movwf	tblptrh,c
 35038  0129C4                     	if	1	;There are 3 active tblptr bytes
 35039  0129C4  6AF8               	clrf	tblptru,c
 35040  0129C6  0E00               	movlw	low (__mediumconst shr (0+16))
 35041  0129C8  22F8               	addwfc	tblptru,f,c
 35042  0129CA                     	endif
 35043  0129CA  0009               	tblrd		*+
 35044  0129CC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 35045  0129D0  0009               	tblrd		*+
 35046  0129D2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 35047  0129D6  0009               	tblrd		*+
 35048  0129D8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 35049  0129DC  000A               	tblrd		*-
 35050  0129DE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 35051  0129E2  ECC9  F0C2         	call	i2___lldiv	;wreg free
 35052  0129E6  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 35053  0129EA  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 35054  0129EE  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 35055  0129F2  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 35056                           
 35057                           ;doprnt.c: 1202: tmpval.vd %= 10;
 35058  0129F6  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 35059  0129FA  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 35060  0129FE  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 35061  012A02  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 35062  012A06  0E0A               	movlw	10
 35063  012A08  6E12               	movwf	i2___llmod@divisor,c
 35064  012A0A  0E00               	movlw	0
 35065  012A0C  6E13               	movwf	i2___llmod@divisor+1,c
 35066  012A0E  0E00               	movlw	0
 35067  012A10  6E14               	movwf	i2___llmod@divisor+2,c
 35068  012A12  0E00               	movlw	0
 35069  012A14  6E15               	movwf	i2___llmod@divisor+3,c
 35070  012A16  ECCA  F0C4         	call	i2___llmod	;wreg free
 35071  012A1A  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 35072  012A1E  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 35073  012A22  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 35074  012A26  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 35075                           
 35076                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 35077  012A2A  0100               	movlb	0	; () banked
 35078  012A2C  519B               	movf	i2printf@tmpval& (0+255),w,b
 35079  012A2E  0F30               	addlw	48
 35080  012A30  EC51  F0CB         	call	i2_putch
 35081  012A34                     i2l1622:
 35082  012A34  0100               	movlb	0	; () banked
 35083  012A36  07AF               	decf	i2printf@c& (0+255),f,b
 35084  012A38  29AF               	incf	i2printf@c& (0+255),w,b
 35085  012A3A  B4D8               	btfsc	status,2,c
 35086  012A3C  D008               	goto	i2l1625
 35087  012A3E  D7B1               	goto	i2l1623
 35088  012A40                     i2l15374:
 35089                           
 35090                           ; BSR set to: 0
 35091                           ;doprnt.c: 1208: (putch('0') );
 35092  012A40  0E30               	movlw	48
 35093  012A42  EC51  F0CB         	call	i2_putch
 35094                           
 35095                           ;doprnt.c: 1209: exp--;
 35096  012A46  0100               	movlb	0	; () banked
 35097  012A48  079F               	decf	i2printf@exp& (0+255),f,b
 35098  012A4A  A0D8               	btfss	status,0,c
 35099  012A4C  07A0               	decf	(i2printf@exp+1)& (0+255),f,b
 35100  012A4E                     i2l1625:
 35101                           
 35102                           ; BSR set to: 0
 35103                           
 35104                           ; BSR set to: 0
 35105  012A4E  BFA0               	btfsc	(i2printf@exp+1)& (0+255),7,b
 35106  012A50  D005               	goto	i2u1909_40
 35107  012A52  51A0               	movf	(i2printf@exp+1)& (0+255),w,b
 35108  012A54  E1F5               	bnz	i2l15374
 35109  012A56  059F               	decf	i2printf@exp& (0+255),w,b
 35110  012A58  B0D8               	btfsc	status,0,c
 35111  012A5A  D7F2               	goto	i2l1626
 35112  012A5C                     i2u1909_40:
 35113                           
 35114                           ; BSR set to: 0
 35115                           ;doprnt.c: 1210: }
 35116                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 35117                           
 35118                           ; BSR set to: 0
 35119  012A5C  BFAE               	btfsc	(i2printf@prec+1)& (0+255),7,b
 35120  012A5E  D009               	goto	i2l1628
 35121  012A60  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 35122  012A62  E104               	bnz	i2u1910_40
 35123  012A64  0E09               	movlw	9
 35124  012A66  5DAD               	subwf	i2printf@prec& (0+255),w,b
 35125  012A68  A0D8               	btfss	status,0,c
 35126  012A6A  D003               	goto	i2l1628
 35127  012A6C                     i2u1910_40:
 35128                           
 35129                           ; BSR set to: 0
 35130                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 35131  012A6C  0E08               	movlw	8
 35132  012A6E  6FAF               	movwf	i2printf@c& (0+255),b
 35133  012A70  D002               	goto	i2l1629
 35134  012A72                     i2l1628:
 35135                           
 35136                           ; BSR set to: 0
 35137                           ;doprnt.c: 1213: else
 35138                           ;doprnt.c: 1214: c = prec;
 35139  012A72  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 35140  012A76                     i2l1629:
 35141                           
 35142                           ; BSR set to: 0
 35143                           ;doprnt.c: 1215: prec -= c;
 35144                           
 35145                           ; BSR set to: 0
 35146  012A76  51AF               	movf	i2printf@c& (0+255),w,b
 35147  012A78  5FAD               	subwf	i2printf@prec& (0+255),f,b
 35148  012A7A  0E00               	movlw	0
 35149  012A7C  BFAF               	btfsc	i2printf@c& (0+255),7,b
 35150  012A7E  0EFF               	movlw	255
 35151  012A80  5BAE               	subwfb	(i2printf@prec+1)& (0+255),f,b
 35152                           
 35153                           ; BSR set to: 0
 35154                           ;doprnt.c: 1219: if(c)
 35155  012A82  51AF               	movf	i2printf@c& (0+255),w,b
 35156  012A84  B4D8               	btfsc	status,2,c
 35157  012A86  D003               	goto	i2l1630
 35158                           
 35159                           ; BSR set to: 0
 35160                           ;doprnt.c: 1221: (putch('.') );
 35161  012A88  0E2E               	movlw	46
 35162  012A8A  EC51  F0CB         	call	i2_putch
 35163  012A8E                     i2l1630:
 35164                           
 35165                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 35166  012A8E  0100               	movlb	0	; () banked
 35167  012A90  51AF               	movf	i2printf@c& (0+255),w,b
 35168  012A92  EC97  F09F         	call	i2_scale
 35169  012A96  C049  F090         	movff	?i2_scale,i2_printf$4399
 35170  012A9A  C04A  F091         	movff	?i2_scale+1,i2_printf$4399+1
 35171  012A9E  C04B  F092         	movff	?i2_scale+2,i2_printf$4399+2
 35172  012AA2  C04C  F093         	movff	?i2_scale+3,i2_printf$4399+3
 35173                           
 35174                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 35175  012AA6  C0A5  F034         	movff	i2printf@fval,i2___flmul@a
 35176  012AAA  C0A6  F035         	movff	i2printf@fval+1,i2___flmul@a+1
 35177  012AAE  C0A7  F036         	movff	i2printf@fval+2,i2___flmul@a+2
 35178  012AB2  C0A8  F037         	movff	i2printf@fval+3,i2___flmul@a+3
 35179  012AB6  C090  F030         	movff	i2_printf$4399,i2___flmul@b
 35180  012ABA  C091  F031         	movff	i2_printf$4399+1,i2___flmul@b+1
 35181  012ABE  C092  F032         	movff	i2_printf$4399+2,i2___flmul@b+2
 35182  012AC2  C093  F033         	movff	i2_printf$4399+3,i2___flmul@b+3
 35183  012AC6  EC34  F0A5         	call	i2___flmul	;wreg free
 35184  012ACA  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 35185  012ACE  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 35186  012AD2  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 35187  012AD6  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 35188  012ADA  EC45  F0BF         	call	i2___fltol	;wreg free
 35189  012ADE  C06C  F0A1         	movff	?i2___fltol,i2printf@val
 35190  012AE2  C06D  F0A2         	movff	?i2___fltol+1,i2printf@val+1
 35191  012AE6  C06E  F0A3         	movff	?i2___fltol+2,i2printf@val+2
 35192  012AEA  C06F  F0A4         	movff	?i2___fltol+3,i2printf@val+3
 35193                           
 35194                           ;doprnt.c: 1228: while(c--) {
 35195  012AEE  D073               	goto	i2l1631
 35196  012AF0                     
 35197                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 35198  012AF0  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 35199  012AF4  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 35200  012AF8  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 35201  012AFC  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 35202  012B00  0100               	movlb	0	; () banked
 35203  012B02  51AF               	movf	i2printf@c& (0+255),w,b
 35204  012B04  0D04               	mullw	4
 35205  012B06  0EA9               	movlw	low _dpowers
 35206  012B08  24F3               	addwf	prodl,w,c
 35207  012B0A  6EF6               	movwf	tblptrl,c
 35208  012B0C  0ED7               	movlw	high _dpowers
 35209  012B0E  20F4               	addwfc	prodh,w,c
 35210  012B10  6EF7               	movwf	tblptrh,c
 35211  012B12                     	if	1	;There are 3 active tblptr bytes
 35212  012B12  6AF8               	clrf	tblptru,c
 35213  012B14  0E00               	movlw	low (__mediumconst shr (0+16))
 35214  012B16  22F8               	addwfc	tblptru,f,c
 35215  012B18                     	endif
 35216  012B18  0009               	tblrd		*+
 35217  012B1A  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 35218  012B1E  0009               	tblrd		*+
 35219  012B20  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 35220  012B24  0009               	tblrd		*+
 35221  012B26  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 35222  012B2A  000A               	tblrd		*-
 35223  012B2C  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 35224  012B30  ECC9  F0C2         	call	i2___lldiv	;wreg free
 35225  012B34  C001  F09B         	movff	?i2___lldiv,i2printf@tmpval
 35226  012B38  C002  F09C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 35227  012B3C  C003  F09D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 35228  012B40  C004  F09E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 35229                           
 35230                           ;doprnt.c: 1230: tmpval.vd %= 10;
 35231  012B44  C09B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 35232  012B48  C09C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 35233  012B4C  C09D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 35234  012B50  C09E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 35235  012B54  0E0A               	movlw	10
 35236  012B56  6E12               	movwf	i2___llmod@divisor,c
 35237  012B58  0E00               	movlw	0
 35238  012B5A  6E13               	movwf	i2___llmod@divisor+1,c
 35239  012B5C  0E00               	movlw	0
 35240  012B5E  6E14               	movwf	i2___llmod@divisor+2,c
 35241  012B60  0E00               	movlw	0
 35242  012B62  6E15               	movwf	i2___llmod@divisor+3,c
 35243  012B64  ECCA  F0C4         	call	i2___llmod	;wreg free
 35244  012B68  C00E  F09B         	movff	?i2___llmod,i2printf@tmpval
 35245  012B6C  C00F  F09C         	movff	?i2___llmod+1,i2printf@tmpval+1
 35246  012B70  C010  F09D         	movff	?i2___llmod+2,i2printf@tmpval+2
 35247  012B74  C011  F09E         	movff	?i2___llmod+3,i2printf@tmpval+3
 35248                           
 35249                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 35250  012B78  0100               	movlb	0	; () banked
 35251  012B7A  519B               	movf	i2printf@tmpval& (0+255),w,b
 35252  012B7C  0F30               	addlw	48
 35253  012B7E  EC51  F0CB         	call	i2_putch
 35254                           
 35255                           ;doprnt.c: 1232: val %= dpowers[c];
 35256  012B82  C0A1  F00E         	movff	i2printf@val,i2___llmod@dividend
 35257  012B86  C0A2  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 35258  012B8A  C0A3  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 35259  012B8E  C0A4  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 35260  012B92  0100               	movlb	0	; () banked
 35261  012B94  51AF               	movf	i2printf@c& (0+255),w,b
 35262  012B96  0D04               	mullw	4
 35263  012B98  0EA9               	movlw	low _dpowers
 35264  012B9A  24F3               	addwf	prodl,w,c
 35265  012B9C  6EF6               	movwf	tblptrl,c
 35266  012B9E  0ED7               	movlw	high _dpowers
 35267  012BA0  20F4               	addwfc	prodh,w,c
 35268  012BA2  6EF7               	movwf	tblptrh,c
 35269  012BA4                     	if	1	;There are 3 active tblptr bytes
 35270  012BA4  6AF8               	clrf	tblptru,c
 35271  012BA6  0E00               	movlw	low (__mediumconst shr (0+16))
 35272  012BA8  22F8               	addwfc	tblptru,f,c
 35273  012BAA                     	endif
 35274  012BAA  0009               	tblrd		*+
 35275  012BAC  CFF5 F012          	movff	tablat,i2___llmod@divisor
 35276  012BB0  0009               	tblrd		*+
 35277  012BB2  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 35278  012BB6  0009               	tblrd		*+
 35279  012BB8  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 35280  012BBC  000A               	tblrd		*-
 35281  012BBE  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 35282  012BC2  ECCA  F0C4         	call	i2___llmod	;wreg free
 35283  012BC6  C00E  F0A1         	movff	?i2___llmod,i2printf@val
 35284  012BCA  C00F  F0A2         	movff	?i2___llmod+1,i2printf@val+1
 35285  012BCE  C010  F0A3         	movff	?i2___llmod+2,i2printf@val+2
 35286  012BD2  C011  F0A4         	movff	?i2___llmod+3,i2printf@val+3
 35287  012BD6                     i2l1631:
 35288  012BD6  0100               	movlb	0	; () banked
 35289  012BD8  07AF               	decf	i2printf@c& (0+255),f,b
 35290  012BDA  29AF               	incf	i2printf@c& (0+255),w,b
 35291  012BDC  B4D8               	btfsc	status,2,c
 35292  012BDE  D008               	goto	i2l1634
 35293  012BE0  D787               	goto	i2l1632
 35294  012BE2                     
 35295                           ; BSR set to: 0
 35296                           ;doprnt.c: 1236: (putch('0') );
 35297                           
 35298                           ; BSR set to: 0
 35299  012BE2  0E30               	movlw	48
 35300  012BE4  EC51  F0CB         	call	i2_putch
 35301                           
 35302                           ;doprnt.c: 1237: prec--;
 35303  012BE8  0100               	movlb	0	; () banked
 35304  012BEA  07AD               	decf	i2printf@prec& (0+255),f,b
 35305  012BEC  A0D8               	btfss	status,0,c
 35306  012BEE  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 35307  012BF0                     i2l1634:
 35308                           
 35309                           ; BSR set to: 0
 35310                           
 35311                           ; BSR set to: 0
 35312  012BF0  51AD               	movf	i2printf@prec& (0+255),w,b
 35313  012BF2  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 35314  012BF4  B4D8               	btfsc	status,2,c
 35315  012BF6  D1BD               	goto	i2u1938_40
 35316  012BF8  D7F4               	goto	i2l1635
 35317  012BFA                     i2l1588:
 35318                           
 35319                           ; BSR set to: 0
 35320                           ;doprnt.c: 1246: }
 35321                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 35322                           
 35323                           ; BSR set to: 0
 35324  012BFA  0EC0               	movlw	192
 35325  012BFC  15A9               	andwf	i2printf@flag& (0+255),w,b
 35326  012BFE  6F8A               	movwf	??i2_printf& (0+255),b
 35327  012C00  0E00               	movlw	0
 35328  012C02  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 35329  012C04  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35330  012C06  518A               	movf	??i2_printf& (0+255),w,b
 35331  012C08  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 35332  012C0A  A4D8               	btfss	status,2,c
 35333  012C0C  D01E               	goto	i2l1637
 35334                           
 35335                           ; BSR set to: 0
 35336                           ;doprnt.c: 1253: {
 35337                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 35338  012C0E  C099  FFD9         	movff	i2printf@ap,fsr2l
 35339  012C12  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 35340  012C16  CFDE F0A1          	movff	postinc2,i2printf@val
 35341  012C1A  CFDD F0A2          	movff	postdec2,i2printf@val+1
 35342  012C1E  0E00               	movlw	0
 35343  012C20  BFA2               	btfsc	(i2printf@val+1)& (0+255),7,b
 35344  012C22  0EFF               	movlw	-1
 35345  012C24  6FA3               	movwf	(i2printf@val+2)& (0+255),b
 35346  012C26  6FA4               	movwf	(i2printf@val+3)& (0+255),b
 35347                           
 35348                           ; BSR set to: 0
 35349  012C28  0E02               	movlw	2
 35350  012C2A  2799               	addwf	i2printf@ap& (0+255),f,b
 35351  012C2C  0E00               	movlw	0
 35352  012C2E  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 35353                           
 35354                           ; BSR set to: 0
 35355                           ;doprnt.c: 1261: if((long)val < 0) {
 35356  012C30  AFA4               	btfss	(i2printf@val+3)& (0+255),7,b
 35357  012C32  D01D               	goto	i2l1639
 35358                           
 35359                           ; BSR set to: 0
 35360                           ;doprnt.c: 1262: flag |= 0x03;
 35361  012C34  0E03               	movlw	3
 35362  012C36  13A9               	iorwf	i2printf@flag& (0+255),f,b
 35363                           
 35364                           ; BSR set to: 0
 35365                           ;doprnt.c: 1263: val = -val;
 35366  012C38  1FA4               	comf	(i2printf@val+3)& (0+255),f,b
 35367  012C3A  1FA3               	comf	(i2printf@val+2)& (0+255),f,b
 35368  012C3C  1FA2               	comf	(i2printf@val+1)& (0+255),f,b
 35369  012C3E  6DA1               	negf	i2printf@val& (0+255),b
 35370  012C40  0E00               	movlw	0
 35371  012C42  23A2               	addwfc	(i2printf@val+1)& (0+255),f,b
 35372  012C44  23A3               	addwfc	(i2printf@val+2)& (0+255),f,b
 35373  012C46  23A4               	addwfc	(i2printf@val+3)& (0+255),f,b
 35374                           
 35375                           ; BSR set to: 0
 35376                           ;doprnt.c: 1264: }
 35377                           ;doprnt.c: 1266: }
 35378  012C48  D012               	goto	i2l1639
 35379  012C4A                     i2l1637:
 35380                           
 35381                           ; BSR set to: 0
 35382                           ;doprnt.c: 1268: else
 35383                           ;doprnt.c: 1273: {
 35384                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 35385                           
 35386                           ; BSR set to: 0
 35387  012C4A  C099  FFD9         	movff	i2printf@ap,fsr2l
 35388  012C4E  C09A  FFDA         	movff	i2printf@ap+1,fsr2h
 35389  012C52  CFDE F08A          	movff	postinc2,??i2_printf
 35390  012C56  CFDD F08B          	movff	postdec2,??i2_printf+1
 35391  012C5A  C08A  F0A1         	movff	??i2_printf,i2printf@val
 35392  012C5E  C08B  F0A2         	movff	??i2_printf+1,i2printf@val+1
 35393  012C62  6BA3               	clrf	(i2printf@val+2)& (0+255),b
 35394  012C64  6BA4               	clrf	(i2printf@val+3)& (0+255),b
 35395                           
 35396                           ; BSR set to: 0
 35397  012C66  0E02               	movlw	2
 35398  012C68  2799               	addwf	i2printf@ap& (0+255),f,b
 35399  012C6A  0E00               	movlw	0
 35400  012C6C  239A               	addwfc	(i2printf@ap+1)& (0+255),f,b
 35401  012C6E                     i2l1639:
 35402                           
 35403                           ; BSR set to: 0
 35404                           ;doprnt.c: 1287: }
 35405                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 35406                           
 35407                           ; BSR set to: 0
 35408  012C6E  51AD               	movf	i2printf@prec& (0+255),w,b
 35409  012C70  11AE               	iorwf	(i2printf@prec+1)& (0+255),w,b
 35410  012C72  A4D8               	btfss	status,2,c
 35411  012C74  D04B               	goto	i2l1641
 35412                           
 35413                           ; BSR set to: 0
 35414  012C76  51A1               	movf	i2printf@val& (0+255),w,b
 35415  012C78  11A2               	iorwf	(i2printf@val+1)& (0+255),w,b
 35416  012C7A  11A3               	iorwf	(i2printf@val+2)& (0+255),w,b
 35417  012C7C  11A4               	iorwf	(i2printf@val+3)& (0+255),w,b
 35418  012C7E  A4D8               	btfss	status,2,c
 35419  012C80  D045               	goto	i2l1641
 35420                           
 35421                           ; BSR set to: 0
 35422                           ;doprnt.c: 1291: prec++;
 35423  012C82  4BAD               	infsnz	i2printf@prec& (0+255),f,b
 35424  012C84  2BAE               	incf	(i2printf@prec+1)& (0+255),f,b
 35425                           
 35426                           ; BSR set to: 0
 35427                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 35428  012C86  D042               	goto	i2l1641
 35429  012C88                     
 35430                           ; BSR set to: 0
 35431                           ;doprnt.c: 1302: case 0xC0:
 35432                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 35433                           
 35434                           ; BSR set to: 0
 35435                           
 35436                           ; BSR set to: 0
 35437  012C88  0E01               	movlw	1
 35438  012C8A  6FAF               	movwf	i2printf@c& (0+255),b
 35439  012C8C                     i2l15434:
 35440                           
 35441                           ; BSR set to: 0
 35442  012C8C  0E0A               	movlw	10
 35443  012C8E  19AF               	xorwf	i2printf@c& (0+255),w,b
 35444  012C90  B4D8               	btfsc	status,2,c
 35445  012C92  D047               	goto	i2l1647
 35446                           
 35447                           ; BSR set to: 0
 35448                           ;doprnt.c: 1306: if(val < dpowers[c])
 35449                           
 35450                           ; BSR set to: 0
 35451                           
 35452                           ; BSR set to: 0
 35453  012C94  51AF               	movf	i2printf@c& (0+255),w,b
 35454  012C96  0D04               	mullw	4
 35455  012C98  0EA9               	movlw	low _dpowers
 35456  012C9A  24F3               	addwf	prodl,w,c
 35457  012C9C  6EF6               	movwf	tblptrl,c
 35458  012C9E  0ED7               	movlw	high _dpowers
 35459  012CA0  20F4               	addwfc	prodh,w,c
 35460  012CA2  6EF7               	movwf	tblptrh,c
 35461  012CA4                     	if	1	;There are 3 active tblptr bytes
 35462  012CA4  6AF8               	clrf	tblptru,c
 35463  012CA6  0E00               	movlw	low (__mediumconst shr (0+16))
 35464  012CA8  22F8               	addwfc	tblptru,f,c
 35465  012CAA                     	endif
 35466  012CAA  0009               	tblrd		*+
 35467  012CAC  50F5               	movf	tablat,w,c
 35468  012CAE  5DA1               	subwf	i2printf@val& (0+255),w,b
 35469  012CB0  0009               	tblrd		*+
 35470  012CB2  50F5               	movf	tablat,w,c
 35471  012CB4  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 35472  012CB6  0009               	tblrd		*+
 35473  012CB8  50F5               	movf	tablat,w,c
 35474  012CBA  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 35475  012CBC  0009               	tblrd		*+
 35476  012CBE  50F5               	movf	tablat,w,c
 35477  012CC0  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 35478  012CC2  A0D8               	btfss	status,0,c
 35479  012CC4  D02E               	goto	i2l1647
 35480                           
 35481                           ; BSR set to: 0
 35482                           
 35483                           ; BSR set to: 0
 35484                           
 35485                           ; BSR set to: 0
 35486                           ;doprnt.c: 1307: break;
 35487  012CC6  2BAF               	incf	i2printf@c& (0+255),f,b
 35488  012CC8  D7E1               	goto	i2l15434
 35489  012CCA                     
 35490                           ; BSR set to: 0
 35491                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 35492                           
 35493                           ; BSR set to: 0
 35494  012CCA  0E01               	movlw	1
 35495  012CCC  6FAF               	movwf	i2printf@c& (0+255),b
 35496  012CCE                     i2l15448:
 35497                           
 35498                           ; BSR set to: 0
 35499  012CCE  0E08               	movlw	8
 35500  012CD0  19AF               	xorwf	i2printf@c& (0+255),w,b
 35501  012CD2  B4D8               	btfsc	status,2,c
 35502  012CD4  D026               	goto	i2l1647
 35503                           
 35504                           ; BSR set to: 0
 35505                           ;doprnt.c: 1317: if(val < hexpowers[c])
 35506                           
 35507                           ; BSR set to: 0
 35508                           
 35509                           ; BSR set to: 0
 35510  012CD6  51AF               	movf	i2printf@c& (0+255),w,b
 35511  012CD8  0D04               	mullw	4
 35512  012CDA  0ED1               	movlw	low _hexpowers
 35513  012CDC  24F3               	addwf	prodl,w,c
 35514  012CDE  6EF6               	movwf	tblptrl,c
 35515  012CE0  0ED7               	movlw	high _hexpowers
 35516  012CE2  20F4               	addwfc	prodh,w,c
 35517  012CE4  6EF7               	movwf	tblptrh,c
 35518  012CE6                     	if	1	;There are 3 active tblptr bytes
 35519  012CE6  6AF8               	clrf	tblptru,c
 35520  012CE8  0E00               	movlw	low (__mediumconst shr (0+16))
 35521  012CEA  22F8               	addwfc	tblptru,f,c
 35522  012CEC                     	endif
 35523  012CEC  0009               	tblrd		*+
 35524  012CEE  50F5               	movf	tablat,w,c
 35525  012CF0  5DA1               	subwf	i2printf@val& (0+255),w,b
 35526  012CF2  0009               	tblrd		*+
 35527  012CF4  50F5               	movf	tablat,w,c
 35528  012CF6  59A2               	subwfb	(i2printf@val+1)& (0+255),w,b
 35529  012CF8  0009               	tblrd		*+
 35530  012CFA  50F5               	movf	tablat,w,c
 35531  012CFC  59A3               	subwfb	(i2printf@val+2)& (0+255),w,b
 35532  012CFE  0009               	tblrd		*+
 35533  012D00  50F5               	movf	tablat,w,c
 35534  012D02  59A4               	subwfb	(i2printf@val+3)& (0+255),w,b
 35535  012D04  A0D8               	btfss	status,0,c
 35536  012D06  D00D               	goto	i2l1647
 35537                           
 35538                           ; BSR set to: 0
 35539                           
 35540                           ; BSR set to: 0
 35541                           
 35542                           ; BSR set to: 0
 35543                           ;doprnt.c: 1318: break;
 35544  012D08  2BAF               	incf	i2printf@c& (0+255),f,b
 35545  012D0A  D7E1               	goto	i2l15448
 35546  012D0C                     i2l1641:
 35547                           
 35548                           ; BSR set to: 0
 35549                           
 35550                           ; BSR set to: 0
 35551  012D0C  51A9               	movf	i2printf@flag& (0+255),w,b
 35552  012D0E  0BC0               	andlw	192
 35553                           
 35554                           ; Switch size 1, requested type "space"
 35555                           ; Number of cases is 3, Range of values is 0 to 192
 35556                           ; switch strategies available:
 35557                           ; Name         Instructions Cycles
 35558                           ; simple_byte           10     6 (average)
 35559                           ;	Chosen strategy is simple_byte
 35560  012D10  0A00               	xorlw	0	; case 0
 35561  012D12  B4D8               	btfsc	status,2,c
 35562  012D14  D7B9               	goto	i2l1642
 35563  012D16  0A80               	xorlw	128	; case 128
 35564  012D18  B4D8               	btfsc	status,2,c
 35565  012D1A  D7D7               	goto	i2l1648
 35566  012D1C  0A40               	xorlw	64	; case 192
 35567  012D1E  B4D8               	btfsc	status,2,c
 35568  012D20  D7B3               	goto	i2l1642
 35569  012D22                     i2l1647:
 35570                           
 35571                           ; BSR set to: 0
 35572                           ;doprnt.c: 1339: if(c < prec)
 35573                           
 35574                           ; BSR set to: 0
 35575  012D22  0E80               	movlw	128
 35576  012D24  BFAF               	btfsc	i2printf@c& (0+255),7,b
 35577  012D26  0E7F               	movlw	127
 35578  012D28  6F8A               	movwf	??i2_printf& (0+255),b
 35579  012D2A  51AD               	movf	i2printf@prec& (0+255),w,b
 35580  012D2C  5DAF               	subwf	i2printf@c& (0+255),w,b
 35581  012D2E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 35582  012D30  0A80               	xorlw	128
 35583  012D32  598A               	subwfb	??i2_printf& (0+255),w,b
 35584  012D34  B0D8               	btfsc	status,0,c
 35585  012D36  D003               	goto	i2l1652
 35586                           
 35587                           ; BSR set to: 0
 35588                           ;doprnt.c: 1340: c = prec;
 35589  012D38  C0AD  F0AF         	movff	i2printf@prec,i2printf@c
 35590  012D3C  D010               	goto	i2l1654
 35591  012D3E                     i2l1652:
 35592                           
 35593                           ; BSR set to: 0
 35594                           ;doprnt.c: 1341: else if(prec < c)
 35595                           
 35596                           ; BSR set to: 0
 35597  012D3E  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 35598  012D40  0A80               	xorlw	128
 35599  012D42  6F8A               	movwf	??i2_printf& (0+255),b
 35600  012D44  51AF               	movf	i2printf@c& (0+255),w,b
 35601  012D46  5DAD               	subwf	i2printf@prec& (0+255),w,b
 35602  012D48  0E80               	movlw	128
 35603  012D4A  BFAF               	btfsc	i2printf@c& (0+255),7,b
 35604  012D4C  0E7F               	movlw	127
 35605  012D4E  598A               	subwfb	??i2_printf& (0+255),w,b
 35606  012D50  B0D8               	btfsc	status,0,c
 35607  012D52  D005               	goto	i2l1654
 35608                           
 35609                           ; BSR set to: 0
 35610                           ;doprnt.c: 1342: prec = c;
 35611  012D54  51AF               	movf	i2printf@c& (0+255),w,b
 35612  012D56  6FAD               	movwf	i2printf@prec& (0+255),b
 35613  012D58  6BAE               	clrf	(i2printf@prec+1)& (0+255),b
 35614  012D5A  BFAD               	btfsc	i2printf@prec& (0+255),7,b
 35615  012D5C  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 35616  012D5E                     i2l1654:
 35617                           
 35618                           ; BSR set to: 0
 35619                           ;doprnt.c: 1345: if(width && flag & 0x03)
 35620                           
 35621                           ; BSR set to: 0
 35622                           
 35623                           ; BSR set to: 0
 35624  012D5E  51AB               	movf	i2printf@width& (0+255),w,b
 35625  012D60  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 35626  012D62  B4D8               	btfsc	status,2,c
 35627  012D64  D00D               	goto	i2l1655
 35628                           
 35629                           ; BSR set to: 0
 35630  012D66  0E03               	movlw	3
 35631  012D68  15A9               	andwf	i2printf@flag& (0+255),w,b
 35632  012D6A  6F8A               	movwf	??i2_printf& (0+255),b
 35633  012D6C  0E00               	movlw	0
 35634  012D6E  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 35635  012D70  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35636  012D72  518A               	movf	??i2_printf& (0+255),w,b
 35637  012D74  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 35638  012D76  B4D8               	btfsc	status,2,c
 35639  012D78  D003               	goto	i2l1655
 35640                           
 35641                           ; BSR set to: 0
 35642                           ;doprnt.c: 1346: width--;
 35643  012D7A  07AB               	decf	i2printf@width& (0+255),f,b
 35644  012D7C  A0D8               	btfss	status,0,c
 35645  012D7E  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 35646  012D80                     i2l1655:
 35647                           
 35648                           ; BSR set to: 0
 35649                           ;doprnt.c: 1348: if(flag & 0x4000) {
 35650                           
 35651                           ; BSR set to: 0
 35652  012D80  ADAA               	btfss	(i2printf@flag+1)& (0+255),6,b
 35653  012D82  D013               	goto	i2l1658
 35654                           
 35655                           ; BSR set to: 0
 35656                           ;doprnt.c: 1349: if(width > prec)
 35657  012D84  51AB               	movf	i2printf@width& (0+255),w,b
 35658  012D86  5DAD               	subwf	i2printf@prec& (0+255),w,b
 35659  012D88  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 35660  012D8A  0A80               	xorlw	128
 35661  012D8C  6F8A               	movwf	??i2_printf& (0+255),b
 35662  012D8E  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 35663  012D90  0A80               	xorlw	128
 35664  012D92  598A               	subwfb	??i2_printf& (0+255),w,b
 35665  012D94  B0D8               	btfsc	status,0,c
 35666  012D96  D005               	goto	i2l1657
 35667                           
 35668                           ; BSR set to: 0
 35669                           ;doprnt.c: 1350: width -= prec;
 35670  012D98  51AD               	movf	i2printf@prec& (0+255),w,b
 35671  012D9A  5FAB               	subwf	i2printf@width& (0+255),f,b
 35672  012D9C  51AE               	movf	(i2printf@prec+1)& (0+255),w,b
 35673  012D9E  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 35674  012DA0  D004               	goto	i2l1658
 35675  012DA2                     i2l1657:
 35676                           
 35677                           ; BSR set to: 0
 35678                           ;doprnt.c: 1351: else
 35679                           ;doprnt.c: 1352: width = 0;
 35680                           
 35681                           ; BSR set to: 0
 35682  012DA2  0E00               	movlw	0
 35683  012DA4  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 35684  012DA6  0E00               	movlw	0
 35685  012DA8  6FAB               	movwf	i2printf@width& (0+255),b
 35686  012DAA                     i2l1658:
 35687                           
 35688                           ; BSR set to: 0
 35689                           ;doprnt.c: 1353: }
 35690                           ;doprnt.c: 1381: if(width > c)
 35691                           
 35692                           ; BSR set to: 0
 35693                           
 35694                           ; BSR set to: 0
 35695  012DAA  0E80               	movlw	128
 35696  012DAC  BFAF               	btfsc	i2printf@c& (0+255),7,b
 35697  012DAE  0E7F               	movlw	127
 35698  012DB0  6F8A               	movwf	??i2_printf& (0+255),b
 35699  012DB2  51AB               	movf	i2printf@width& (0+255),w,b
 35700  012DB4  5DAF               	subwf	i2printf@c& (0+255),w,b
 35701  012DB6  51AC               	movf	(i2printf@width+1)& (0+255),w,b
 35702  012DB8  0A80               	xorlw	128
 35703  012DBA  598A               	subwfb	??i2_printf& (0+255),w,b
 35704  012DBC  B0D8               	btfsc	status,0,c
 35705  012DBE  D007               	goto	i2l1659
 35706                           
 35707                           ; BSR set to: 0
 35708                           ;doprnt.c: 1382: width -= c;
 35709  012DC0  51AF               	movf	i2printf@c& (0+255),w,b
 35710  012DC2  5FAB               	subwf	i2printf@width& (0+255),f,b
 35711  012DC4  0E00               	movlw	0
 35712  012DC6  BFAF               	btfsc	i2printf@c& (0+255),7,b
 35713  012DC8  0EFF               	movlw	255
 35714  012DCA  5BAC               	subwfb	(i2printf@width+1)& (0+255),f,b
 35715  012DCC  D004               	goto	i2l1660
 35716  012DCE                     i2l1659:
 35717                           
 35718                           ; BSR set to: 0
 35719                           ;doprnt.c: 1383: else
 35720                           ;doprnt.c: 1384: width = 0;
 35721                           
 35722                           ; BSR set to: 0
 35723  012DCE  0E00               	movlw	0
 35724  012DD0  6FAC               	movwf	(i2printf@width+1)& (0+255),b
 35725  012DD2  0E00               	movlw	0
 35726  012DD4  6FAB               	movwf	i2printf@width& (0+255),b
 35727  012DD6                     i2l1660:
 35728                           
 35729                           ; BSR set to: 0
 35730                           ;doprnt.c: 1387: if(flag & 0x04) {
 35731                           
 35732                           ; BSR set to: 0
 35733  012DD6  A5A9               	btfss	i2printf@flag& (0+255),2,b
 35734  012DD8  D01A               	goto	i2l1661
 35735                           
 35736                           ; BSR set to: 0
 35737                           ;doprnt.c: 1392: if(flag & 0x03)
 35738  012DDA  0E03               	movlw	3
 35739  012DDC  15A9               	andwf	i2printf@flag& (0+255),w,b
 35740  012DDE  6F8A               	movwf	??i2_printf& (0+255),b
 35741  012DE0  0E00               	movlw	0
 35742  012DE2  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 35743  012DE4  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35744  012DE6  518A               	movf	??i2_printf& (0+255),w,b
 35745  012DE8  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 35746  012DEA  B4D8               	btfsc	status,2,c
 35747  012DEC  D003               	goto	i2l1662
 35748                           
 35749                           ; BSR set to: 0
 35750                           ;doprnt.c: 1393: (putch('-') );
 35751  012DEE  0E2D               	movlw	45
 35752  012DF0  EC51  F0CB         	call	i2_putch
 35753  012DF4                     i2l1662:
 35754                           
 35755                           ;doprnt.c: 1415: if(width)
 35756  012DF4  0100               	movlb	0	; () banked
 35757  012DF6  51AB               	movf	i2printf@width& (0+255),w,b
 35758  012DF8  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 35759  012DFA  B4D8               	btfsc	status,2,c
 35760  012DFC  D0B1               	goto	i2l1671
 35761                           
 35762                           ; BSR set to: 0
 35763                           ;doprnt.c: 1417: (putch('0') );
 35764                           
 35765                           ; BSR set to: 0
 35766                           
 35767                           ;doprnt.c: 1416: do
 35768  012DFE  0E30               	movlw	48
 35769  012E00  EC51  F0CB         	call	i2_putch
 35770                           
 35771                           ;doprnt.c: 1418: while(--width);
 35772  012E04  0100               	movlb	0	; () banked
 35773  012E06  07AB               	decf	i2printf@width& (0+255),f,b
 35774  012E08  A0D8               	btfss	status,0,c
 35775  012E0A  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 35776  012E0C  D7F4               	goto	L26
 35777  012E0E                     i2l1661:
 35778                           
 35779                           ; BSR set to: 0
 35780                           ;doprnt.c: 1422: {
 35781                           ;doprnt.c: 1424: if(width
 35782                           ;doprnt.c: 1428: )
 35783                           
 35784                           ; BSR set to: 0
 35785  012E0E  51AB               	movf	i2printf@width& (0+255),w,b
 35786  012E10  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 35787  012E12  B4D8               	btfsc	status,2,c
 35788  012E14  D00B               	goto	i2u1936_40
 35789  012E16                     i2u1935_40:
 35790                           
 35791                           ; BSR set to: 0
 35792                           ;doprnt.c: 1430: (putch(' ') );
 35793                           
 35794                           ; BSR set to: 0
 35795                           
 35796                           ;doprnt.c: 1429: do
 35797  012E16  0E20               	movlw	32
 35798  012E18  EC51  F0CB         	call	i2_putch
 35799                           
 35800                           ;doprnt.c: 1431: while(--width);
 35801  012E1C  0100               	movlb	0	; () banked
 35802  012E1E  07AB               	decf	i2printf@width& (0+255),f,b
 35803  012E20  A0D8               	btfss	status,0,c
 35804  012E22  07AC               	decf	(i2printf@width+1)& (0+255),f,b
 35805  012E24  51AB               	movf	i2printf@width& (0+255),w,b
 35806  012E26  11AC               	iorwf	(i2printf@width+1)& (0+255),w,b
 35807  012E28  A4D8               	btfss	status,2,c
 35808  012E2A  D7F5               	goto	i2u1935_40
 35809  012E2C                     i2u1936_40:
 35810                           
 35811                           ; BSR set to: 0
 35812                           ;doprnt.c: 1438: if(flag & 0x03)
 35813                           
 35814                           ; BSR set to: 0
 35815                           
 35816                           ; BSR set to: 0
 35817  012E2C  0E03               	movlw	3
 35818  012E2E  15A9               	andwf	i2printf@flag& (0+255),w,b
 35819  012E30  6F8A               	movwf	??i2_printf& (0+255),b
 35820  012E32  0E00               	movlw	0
 35821  012E34  15AA               	andwf	(i2printf@flag+1)& (0+255),w,b
 35822  012E36  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 35823  012E38  518A               	movf	??i2_printf& (0+255),w,b
 35824  012E3A  118B               	iorwf	(??i2_printf+1)& (0+255),w,b
 35825  012E3C  B4D8               	btfsc	status,2,c
 35826  012E3E  D090               	goto	i2l1671
 35827                           
 35828                           ; BSR set to: 0
 35829                           ;doprnt.c: 1439: (putch('-') );
 35830  012E40  0E2D               	movlw	45
 35831  012E42  EC51  F0CB         	call	i2_putch
 35832                           
 35833                           ;doprnt.c: 1469: }
 35834                           ;doprnt.c: 1474: while(prec--) {
 35835  012E46  D08C               	goto	i2l1671
 35836  012E48                     
 35837                           ;doprnt.c: 1486: case 0xC0:
 35838                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 35839  012E48  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 35840  012E4C  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 35841  012E50  0100               	movlb	0	; () banked
 35842  012E52  90D8               	bcf	status,0,c
 35843  012E54  378A               	rlcf	??i2_printf& (0+255),f,b
 35844  012E56  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 35845  012E58  90D8               	bcf	status,0,c
 35846  012E5A  378A               	rlcf	??i2_printf& (0+255),f,b
 35847  012E5C  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 35848  012E5E  0EA9               	movlw	low _dpowers
 35849  012E60  258A               	addwf	??i2_printf& (0+255),w,b
 35850  012E62  6EF6               	movwf	tblptrl,c
 35851  012E64  0ED7               	movlw	high _dpowers
 35852  012E66  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 35853  012E68  6EF7               	movwf	tblptrh,c
 35854  012E6A                     	if	1	;There are 3 active tblptr bytes
 35855  012E6A  6AF8               	clrf	tblptru,c
 35856  012E6C  0E00               	movlw	low (__mediumconst shr (0+16))
 35857  012E6E  22F8               	addwfc	tblptru,f,c
 35858  012E70                     	endif
 35859  012E70  0009               	tblrd		*+
 35860  012E72  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 35861  012E76  0009               	tblrd		*+
 35862  012E78  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 35863  012E7C  0009               	tblrd		*+
 35864  012E7E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 35865  012E82  000A               	tblrd		*-
 35866  012E84  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 35867  012E88  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 35868  012E8C  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 35869  012E90  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 35870  012E94  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 35871  012E98  ECC9  F0C2         	call	i2___lldiv	;wreg free
 35872  012E9C  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 35873  012EA0  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 35874  012EA4  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 35875  012EA8  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 35876  012EAC  0E0A               	movlw	10
 35877  012EAE  6E12               	movwf	i2___llmod@divisor,c
 35878  012EB0  0E00               	movlw	0
 35879  012EB2  6E13               	movwf	i2___llmod@divisor+1,c
 35880  012EB4  0E00               	movlw	0
 35881  012EB6  6E14               	movwf	i2___llmod@divisor+2,c
 35882  012EB8  0E00               	movlw	0
 35883  012EBA  6E15               	movwf	i2___llmod@divisor+3,c
 35884  012EBC  ECCA  F0C4         	call	i2___llmod	;wreg free
 35885  012EC0  500E               	movf	?i2___llmod,w,c
 35886  012EC2  0F30               	addlw	48
 35887  012EC4  0100               	movlb	0	; () banked
 35888  012EC6  6FAF               	movwf	i2printf@c& (0+255),b
 35889                           
 35890                           ;doprnt.c: 1491: break;
 35891  012EC8  D048               	goto	i2l1676
 35892  012ECA                     
 35893                           ; BSR set to: 0
 35894                           ;doprnt.c: 1499: {
 35895                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 35896                           
 35897                           ; BSR set to: 0
 35898  012ECA  C0A1  F001         	movff	i2printf@val,i2___lldiv@dividend
 35899  012ECE  C0A2  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 35900  012ED2  C0A3  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 35901  012ED6  C0A4  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 35902  012EDA  C0AD  F08A         	movff	i2printf@prec,??i2_printf
 35903  012EDE  C0AE  F08B         	movff	i2printf@prec+1,??i2_printf+1
 35904  012EE2  90D8               	bcf	status,0,c
 35905  012EE4  378A               	rlcf	??i2_printf& (0+255),f,b
 35906  012EE6  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 35907  012EE8  90D8               	bcf	status,0,c
 35908  012EEA  378A               	rlcf	??i2_printf& (0+255),f,b
 35909  012EEC  378B               	rlcf	(??i2_printf+1)& (0+255),f,b
 35910  012EEE  0ED1               	movlw	low _hexpowers
 35911  012EF0  258A               	addwf	??i2_printf& (0+255),w,b
 35912  012EF2  6EF6               	movwf	tblptrl,c
 35913  012EF4  0ED7               	movlw	high _hexpowers
 35914  012EF6  218B               	addwfc	(??i2_printf+1)& (0+255),w,b
 35915  012EF8  6EF7               	movwf	tblptrh,c
 35916  012EFA                     	if	1	;There are 3 active tblptr bytes
 35917  012EFA  6AF8               	clrf	tblptru,c
 35918  012EFC  0E00               	movlw	low (__mediumconst shr (0+16))
 35919  012EFE  22F8               	addwfc	tblptru,f,c
 35920  012F00                     	endif
 35921  012F00  0009               	tblrd		*+
 35922  012F02  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 35923  012F06  0009               	tblrd		*+
 35924  012F08  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 35925  012F0C  0009               	tblrd		*+
 35926  012F0E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 35927  012F12  000A               	tblrd		*-
 35928  012F14  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 35929  012F18  ECC9  F0C2         	call	i2___lldiv	;wreg free
 35930  012F1C  5001               	movf	?i2___lldiv,w,c
 35931  012F1E  0B0F               	andlw	15
 35932  012F20  0100               	movlb	0	; () banked
 35933  012F22  6F94               	movwf	i2printf@idx& (0+255),b
 35934                           
 35935                           ; BSR set to: 0
 35936                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 35937  012F24  5194               	movf	i2printf@idx& (0+255),w,b
 35938  012F26  0D01               	mullw	1
 35939  012F28  0E66               	movlw	low STR_167
 35940  012F2A  24F3               	addwf	prodl,w,c
 35941  012F2C  6EF6               	movwf	tblptrl,c
 35942  012F2E  0EFD               	movlw	high STR_167
 35943  012F30  20F4               	addwfc	prodh,w,c
 35944  012F32  6EF7               	movwf	tblptrh,c
 35945  012F34                     	if	1	;There are 3 active tblptr bytes
 35946  012F34  6AF8               	clrf	tblptru,c
 35947  012F36  0E00               	movlw	low (__mediumconst shr (0+16))
 35948  012F38  22F8               	addwfc	tblptru,f,c
 35949  012F3A                     	endif
 35950  012F3A  0008               	tblrd		*
 35951  012F3C  CFF5 F0AF          	movff	tablat,i2printf@c
 35952                           
 35953                           ; BSR set to: 0
 35954                           ;doprnt.c: 1523: }
 35955                           
 35956                           ;doprnt.c: 1508: }
 35957                           ;doprnt.c: 1510: break;
 35958  012F40  D00C               	goto	i2l1676
 35959  012F42                     i2l15522:
 35960  012F42  0100               	movlb	0	; () banked
 35961  012F44  51A9               	movf	i2printf@flag& (0+255),w,b
 35962  012F46  0BC0               	andlw	192
 35963                           
 35964                           ; Switch size 1, requested type "space"
 35965                           ; Number of cases is 3, Range of values is 0 to 192
 35966                           ; switch strategies available:
 35967                           ; Name         Instructions Cycles
 35968                           ; simple_byte           10     6 (average)
 35969                           ;	Chosen strategy is simple_byte
 35970  012F48  0A00               	xorlw	0	; case 0
 35971  012F4A  B4D8               	btfsc	status,2,c
 35972  012F4C  D77D               	goto	i2l1674
 35973  012F4E  0A80               	xorlw	128	; case 128
 35974  012F50  B4D8               	btfsc	status,2,c
 35975  012F52  D7BB               	goto	i2l1677
 35976  012F54  0A40               	xorlw	64	; case 192
 35977  012F56  B4D8               	btfsc	status,2,c
 35978  012F58  D777               	goto	i2l1674
 35979  012F5A                     i2l1676:
 35980                           
 35981                           ; BSR set to: 0
 35982                           ;doprnt.c: 1524: (putch(c) );
 35983                           
 35984                           ; BSR set to: 0
 35985  012F5A  51AF               	movf	i2printf@c& (0+255),w,b
 35986  012F5C  EC51  F0CB         	call	i2_putch
 35987  012F60                     i2l1671:
 35988  012F60  0100               	movlb	0	; () banked
 35989  012F62  07AD               	decf	i2printf@prec& (0+255),f,b
 35990  012F64  A0D8               	btfss	status,0,c
 35991  012F66  07AE               	decf	(i2printf@prec+1)& (0+255),f,b
 35992  012F68  29AD               	incf	i2printf@prec& (0+255),w,b
 35993  012F6A  E1EB               	bnz	i2l15522
 35994  012F6C  29AE               	incf	(i2printf@prec+1)& (0+255),w,b
 35995  012F6E  A4D8               	btfss	status,2,c
 35996  012F70  D7E8               	goto	i2l1673
 35997  012F72                     i2u1938_40:
 35998                           
 35999                           ; BSR set to: 0
 36000                           
 36001                           ; BSR set to: 0
 36002  012F72  0100               	movlb	0	; () banked
 36003  012F74  5188               	movf	i2printf@f& (0+255),w,b
 36004  012F76  6F8A               	movwf	??i2_printf& (0+255),b
 36005  012F78  5189               	movf	(i2printf@f+1)& (0+255),w,b
 36006  012F7A  6F8B               	movwf	(??i2_printf+1)& (0+255),b
 36007  012F7C  4B88               	infsnz	i2printf@f& (0+255),f,b
 36008  012F7E  2B89               	incf	(i2printf@f+1)& (0+255),f,b
 36009  012F80  C08A  FFF6         	movff	??i2_printf,tblptrl
 36010  012F84  C08B  FFF7         	movff	??i2_printf+1,tblptrh
 36011  012F88  0E00               	movlw	low (__mediumconst shr (0+16))
 36012  012F8A  6EF8               	movwf	tblptru,c
 36013  012F8C  0E0D               	movlw	(high __ramtop+-1)
 36014  012F8E  64F7               	cpfsgt	tblptrh,c
 36015  012F90  D003               	bra	i2u1939_47
 36016  012F92  0008               	tblrd		*
 36017  012F94  50F5               	movf	tablat,w,c
 36018  012F96  D005               	bra	i2u1939_40
 36019  012F98                     i2u1939_47:
 36020  012F98  CFF6 FFE9          	movff	tblptrl,fsr0l
 36021  012F9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 36022  012FA0  50EF               	movf	indf0,w,c
 36023  012FA2                     i2u1939_40:
 36024  012FA2  0100               	movlb	0	; () banked
 36025  012FA4  6FAF               	movwf	i2printf@c& (0+255),b
 36026  012FA6  51AF               	movf	i2printf@c& (0+255),w,b
 36027  012FA8  B4D8               	btfsc	status,2,c
 36028  012FAA  0012               	return	
 36029  012FAC  EFFD  F090         	goto	i2l1545
 36030  012FB0                     __end_ofi2_printf:
 36031                           	opt stack 0
 36032                           tosu	equ	0xFFF
 36033                           tosh	equ	0xFFE
 36034                           tosl	equ	0xFFD
 36035                           pclatu	equ	0xFFB
 36036                           pclath	equ	0xFFA
 36037                           tblptru	equ	0xFF8
 36038                           tblptrh	equ	0xFF7
 36039                           tblptrl	equ	0xFF6
 36040                           tablat	equ	0xFF5
 36041                           prodh	equ	0xFF4
 36042                           prodl	equ	0xFF3
 36043                           intcon	equ	0xFF2
 36044                           indf0	equ	0xFEF
 36045                           postinc0	equ	0xFEE
 36046                           fsr0h	equ	0xFEA
 36047                           fsr0l	equ	0xFE9
 36048                           wreg	equ	0xFE8
 36049                           indf1	equ	0xFE7
 36050                           postdec1	equ	0xFE5
 36051                           plusw1	equ	0xFE3
 36052                           fsr1h	equ	0xFE2
 36053                           fsr1l	equ	0xFE1
 36054                           bsr	equ	0xFE0
 36055                           indf2	equ	0xFDF
 36056                           postinc2	equ	0xFDE
 36057                           postdec2	equ	0xFDD
 36058                           plusw2	equ	0xFDB
 36059                           fsr2h	equ	0xFDA
 36060                           fsr2l	equ	0xFD9
 36061                           status	equ	0xFD8
 36062                           
 36063 ;; *************** function i2_scale *****************
 36064 ;; Defined at:
 36065 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 36066 ;; Parameters:    Size  Location     Type
 36067 ;;  scl             1    wreg     char 
 36068 ;; Auto vars:     Size  Location     Type
 36069 ;;  scl             1   80[COMRAM] char 
 36070 ;; Return value:  Size  Location     Type
 36071 ;;                  4   72[COMRAM] char 
 36072 ;; Registers used:
 36073 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36074 ;; Tracked objects:
 36075 ;;		On entry : 0/0
 36076 ;;		On exit  : 0/0
 36077 ;;		Unchanged: 0/0
 36078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36080 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36082 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36083 ;;Total ram usage:        9 bytes
 36084 ;; Hardware stack levels used:    1
 36085 ;; Hardware stack levels required when called:    1
 36086 ;; This function calls:
 36087 ;;		i2___awdiv
 36088 ;;		i2___awmod
 36089 ;;		i2___flmul
 36090 ;; This function is called by:
 36091 ;;		i2_printf
 36092 ;; This function uses a non-reentrant model
 36093 ;;
 36094                           
 36095                           	psect	text104
 36096  013F2E                     __ptext104:
 36097                           	opt stack 0
 36098  013F2E                     i2_scale:
 36099                           	opt stack 15
 36100                           
 36101                           ; BSR set to: 0
 36102                           ;incstack = 0
 36103                           ;i2scale@scl stored from wreg
 36104  013F2E  6E51               	movwf	i2scale@scl,c
 36105                           
 36106                           ;doprnt.c: 428: if(scl < 0) {
 36107  013F30  AE51               	btfss	i2scale@scl,7,c
 36108  013F32  D11F               	goto	i2l1534
 36109                           
 36110                           ;doprnt.c: 429: scl = -scl;
 36111  013F34  6C51               	negf	i2scale@scl,c
 36112                           
 36113                           ;doprnt.c: 430: if(scl>=110)
 36114  013F36  5051               	movf	i2scale@scl,w,c
 36115  013F38  0A80               	xorlw	128
 36116  013F3A  0F12               	addlw	-238
 36117  013F3C  A0D8               	btfss	status,0,c
 36118  013F3E  D0A1               	goto	i2l1535
 36119                           
 36120                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 36121  013F40  0E00               	movlw	0
 36122  013F42  6E0A               	movwf	i2___awdiv@divisor+1,c
 36123  013F44  0E0A               	movlw	10
 36124  013F46  6E09               	movwf	i2___awdiv@divisor,c
 36125  013F48  0E00               	movlw	0
 36126  013F4A  6E04               	movwf	i2___awmod@divisor+1,c
 36127  013F4C  0E64               	movlw	100
 36128  013F4E  6E03               	movwf	i2___awmod@divisor,c
 36129  013F50  5051               	movf	i2scale@scl,w,c
 36130  013F52  6E01               	movwf	i2___awmod@dividend,c
 36131  013F54  6A02               	clrf	i2___awmod@dividend+1,c
 36132  013F56  BE01               	btfsc	i2___awmod@dividend,7,c
 36133  013F58  0602               	decf	i2___awmod@dividend+1,f,c
 36134  013F5A  ECBE  F0C3         	call	i2___awmod	;wreg free
 36135  013F5E  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 36136  013F62  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 36137  013F66  EC87  F0C2         	call	i2___awdiv	;wreg free
 36138  013F6A  90D8               	bcf	status,0,c
 36139  013F6C  3607               	rlcf	?i2___awdiv,f,c
 36140  013F6E  3608               	rlcf	?i2___awdiv+1,f,c
 36141  013F70  90D8               	bcf	status,0,c
 36142  013F72  3607               	rlcf	?i2___awdiv,f,c
 36143  013F74  3608               	rlcf	?i2___awdiv+1,f,c
 36144  013F76  0E24               	movlw	36
 36145  013F78  2607               	addwf	?i2___awdiv,f,c
 36146  013F7A  0E00               	movlw	0
 36147  013F7C  2208               	addwfc	?i2___awdiv+1,f,c
 36148  013F7E  0E75               	movlw	low __npowers_
 36149  013F80  2407               	addwf	?i2___awdiv,w,c
 36150  013F82  6EF6               	movwf	tblptrl,c
 36151  013F84  0ED7               	movlw	high __npowers_
 36152  013F86  2008               	addwfc	?i2___awdiv+1,w,c
 36153  013F88  6EF7               	movwf	tblptrh,c
 36154  013F8A                     	if	1	;There are 3 active tblptr bytes
 36155  013F8A  6AF8               	clrf	tblptru,c
 36156  013F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 36157  013F8E  22F8               	addwfc	tblptru,f,c
 36158  013F90                     	endif
 36159  013F90  0009               	tblrd		*+
 36160  013F92  CFF5 F034          	movff	tablat,i2___flmul@a
 36161  013F96  0009               	tblrd		*+
 36162  013F98  CFF5 F035          	movff	tablat,i2___flmul@a+1
 36163  013F9C  0009               	tblrd		*+
 36164  013F9E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 36165  013FA2  000A               	tblrd		*-
 36166  013FA4  CFF5 F037          	movff	tablat,i2___flmul@a+3
 36167  013FA8  0E00               	movlw	0
 36168  013FAA  6E0A               	movwf	i2___awdiv@divisor+1,c
 36169  013FAC  0E64               	movlw	100
 36170  013FAE  6E09               	movwf	i2___awdiv@divisor,c
 36171  013FB0  5051               	movf	i2scale@scl,w,c
 36172  013FB2  6E07               	movwf	i2___awdiv@dividend,c
 36173  013FB4  6A08               	clrf	i2___awdiv@dividend+1,c
 36174  013FB6  BE07               	btfsc	i2___awdiv@dividend,7,c
 36175  013FB8  0608               	decf	i2___awdiv@dividend+1,f,c
 36176  013FBA  EC87  F0C2         	call	i2___awdiv	;wreg free
 36177  013FBE  90D8               	bcf	status,0,c
 36178  013FC0  3607               	rlcf	?i2___awdiv,f,c
 36179  013FC2  3608               	rlcf	?i2___awdiv+1,f,c
 36180  013FC4  90D8               	bcf	status,0,c
 36181  013FC6  3607               	rlcf	?i2___awdiv,f,c
 36182  013FC8  3608               	rlcf	?i2___awdiv+1,f,c
 36183  013FCA  0E48               	movlw	72
 36184  013FCC  2607               	addwf	?i2___awdiv,f,c
 36185  013FCE  0E00               	movlw	0
 36186  013FD0  2208               	addwfc	?i2___awdiv+1,f,c
 36187  013FD2  0E75               	movlw	low __npowers_
 36188  013FD4  2407               	addwf	?i2___awdiv,w,c
 36189  013FD6  6EF6               	movwf	tblptrl,c
 36190  013FD8  0ED7               	movlw	high __npowers_
 36191  013FDA  2008               	addwfc	?i2___awdiv+1,w,c
 36192  013FDC  6EF7               	movwf	tblptrh,c
 36193  013FDE                     	if	1	;There are 3 active tblptr bytes
 36194  013FDE  6AF8               	clrf	tblptru,c
 36195  013FE0  0E00               	movlw	low (__mediumconst shr (0+16))
 36196  013FE2  22F8               	addwfc	tblptru,f,c
 36197  013FE4                     	endif
 36198  013FE4  0009               	tblrd		*+
 36199  013FE6  CFF5 F030          	movff	tablat,i2___flmul@b
 36200  013FEA  0009               	tblrd		*+
 36201  013FEC  CFF5 F031          	movff	tablat,i2___flmul@b+1
 36202  013FF0  0009               	tblrd		*+
 36203  013FF2  CFF5 F032          	movff	tablat,i2___flmul@b+2
 36204  013FF6  000A               	tblrd		*-
 36205  013FF8  CFF5 F033          	movff	tablat,i2___flmul@b+3
 36206  013FFC  EC34  F0A5         	call	i2___flmul	;wreg free
 36207  014000  C030  F04D         	movff	?i2___flmul,i2_scale$4398
 36208  014004  C031  F04E         	movff	?i2___flmul+1,i2_scale$4398+1
 36209  014008  C032  F04F         	movff	?i2___flmul+2,i2_scale$4398+2
 36210  01400C  C033  F050         	movff	?i2___flmul+3,i2_scale$4398+3
 36211                           
 36212                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 36213  014010  C04D  F030         	movff	i2_scale$4398,i2___flmul@b
 36214  014014  C04E  F031         	movff	i2_scale$4398+1,i2___flmul@b+1
 36215  014018  C04F  F032         	movff	i2_scale$4398+2,i2___flmul@b+2
 36216  01401C  C050  F033         	movff	i2_scale$4398+3,i2___flmul@b+3
 36217  014020  0E00               	movlw	0
 36218  014022  6E04               	movwf	i2___awmod@divisor+1,c
 36219  014024  0E0A               	movlw	10
 36220  014026  6E03               	movwf	i2___awmod@divisor,c
 36221  014028  5051               	movf	i2scale@scl,w,c
 36222  01402A  6E01               	movwf	i2___awmod@dividend,c
 36223  01402C  6A02               	clrf	i2___awmod@dividend+1,c
 36224  01402E  BE01               	btfsc	i2___awmod@dividend,7,c
 36225  014030  0602               	decf	i2___awmod@dividend+1,f,c
 36226  014032  ECBE  F0C3         	call	i2___awmod	;wreg free
 36227  014036  90D8               	bcf	status,0,c
 36228  014038  3601               	rlcf	?i2___awmod,f,c
 36229  01403A  3602               	rlcf	?i2___awmod+1,f,c
 36230  01403C  90D8               	bcf	status,0,c
 36231  01403E  3601               	rlcf	?i2___awmod,f,c
 36232  014040  3602               	rlcf	?i2___awmod+1,f,c
 36233  014042  0E75               	movlw	low __npowers_
 36234  014044  2401               	addwf	?i2___awmod,w,c
 36235  014046  6EF6               	movwf	tblptrl,c
 36236  014048  0ED7               	movlw	high __npowers_
 36237  01404A  2002               	addwfc	?i2___awmod+1,w,c
 36238  01404C  6EF7               	movwf	tblptrh,c
 36239  01404E                     	if	1	;There are 3 active tblptr bytes
 36240  01404E  6AF8               	clrf	tblptru,c
 36241  014050  0E00               	movlw	low (__mediumconst shr (0+16))
 36242  014052  22F8               	addwfc	tblptru,f,c
 36243  014054                     	endif
 36244  014054  0009               	tblrd		*+
 36245  014056  CFF5 F034          	movff	tablat,i2___flmul@a
 36246  01405A  0009               	tblrd		*+
 36247  01405C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 36248  014060  0009               	tblrd		*+
 36249  014062  CFF5 F036          	movff	tablat,i2___flmul@a+2
 36250  014066  000A               	tblrd		*-
 36251  014068  CFF5 F037          	movff	tablat,i2___flmul@a+3
 36252  01406C  EC34  F0A5         	call	i2___flmul	;wreg free
 36253  014070  C030  F049         	movff	?i2___flmul,?i2_scale
 36254  014074  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 36255  014078  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 36256  01407C  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 36257  014080  0012               	return	
 36258  014082                     i2l1535:
 36259                           
 36260                           ;doprnt.c: 432: else if(scl > 10)
 36261  014082  5051               	movf	i2scale@scl,w,c
 36262  014084  0A80               	xorlw	128
 36263  014086  0F75               	addlw	-139
 36264  014088  A0D8               	btfss	status,0,c
 36265  01408A  D05B               	goto	i2l1538
 36266                           
 36267                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 36268  01408C  0E00               	movlw	0
 36269  01408E  6E0A               	movwf	i2___awdiv@divisor+1,c
 36270  014090  0E0A               	movlw	10
 36271  014092  6E09               	movwf	i2___awdiv@divisor,c
 36272  014094  5051               	movf	i2scale@scl,w,c
 36273  014096  6E07               	movwf	i2___awdiv@dividend,c
 36274  014098  6A08               	clrf	i2___awdiv@dividend+1,c
 36275  01409A  BE07               	btfsc	i2___awdiv@dividend,7,c
 36276  01409C  0608               	decf	i2___awdiv@dividend+1,f,c
 36277  01409E  EC87  F0C2         	call	i2___awdiv	;wreg free
 36278  0140A2  90D8               	bcf	status,0,c
 36279  0140A4  3607               	rlcf	?i2___awdiv,f,c
 36280  0140A6  3608               	rlcf	?i2___awdiv+1,f,c
 36281  0140A8  90D8               	bcf	status,0,c
 36282  0140AA  3607               	rlcf	?i2___awdiv,f,c
 36283  0140AC  3608               	rlcf	?i2___awdiv+1,f,c
 36284  0140AE  0E24               	movlw	36
 36285  0140B0  2607               	addwf	?i2___awdiv,f,c
 36286  0140B2  0E00               	movlw	0
 36287  0140B4  2208               	addwfc	?i2___awdiv+1,f,c
 36288  0140B6  0E75               	movlw	low __npowers_
 36289  0140B8  2407               	addwf	?i2___awdiv,w,c
 36290  0140BA  6EF6               	movwf	tblptrl,c
 36291  0140BC  0ED7               	movlw	high __npowers_
 36292  0140BE  2008               	addwfc	?i2___awdiv+1,w,c
 36293  0140C0  6EF7               	movwf	tblptrh,c
 36294  0140C2                     	if	1	;There are 3 active tblptr bytes
 36295  0140C2  6AF8               	clrf	tblptru,c
 36296  0140C4  0E00               	movlw	low (__mediumconst shr (0+16))
 36297  0140C6  22F8               	addwfc	tblptru,f,c
 36298  0140C8                     	endif
 36299  0140C8  0009               	tblrd		*+
 36300  0140CA  CFF5 F030          	movff	tablat,i2___flmul@b
 36301  0140CE  0009               	tblrd		*+
 36302  0140D0  CFF5 F031          	movff	tablat,i2___flmul@b+1
 36303  0140D4  0009               	tblrd		*+
 36304  0140D6  CFF5 F032          	movff	tablat,i2___flmul@b+2
 36305  0140DA  000A               	tblrd		*-
 36306  0140DC  CFF5 F033          	movff	tablat,i2___flmul@b+3
 36307  0140E0  0E00               	movlw	0
 36308  0140E2  6E04               	movwf	i2___awmod@divisor+1,c
 36309  0140E4  0E0A               	movlw	10
 36310  0140E6  6E03               	movwf	i2___awmod@divisor,c
 36311  0140E8  5051               	movf	i2scale@scl,w,c
 36312  0140EA  6E01               	movwf	i2___awmod@dividend,c
 36313  0140EC  6A02               	clrf	i2___awmod@dividend+1,c
 36314  0140EE  BE01               	btfsc	i2___awmod@dividend,7,c
 36315  0140F0  0602               	decf	i2___awmod@dividend+1,f,c
 36316  0140F2  ECBE  F0C3         	call	i2___awmod	;wreg free
 36317  0140F6  90D8               	bcf	status,0,c
 36318  0140F8  3601               	rlcf	?i2___awmod,f,c
 36319  0140FA  3602               	rlcf	?i2___awmod+1,f,c
 36320  0140FC  90D8               	bcf	status,0,c
 36321  0140FE  3601               	rlcf	?i2___awmod,f,c
 36322  014100  3602               	rlcf	?i2___awmod+1,f,c
 36323  014102  0E75               	movlw	low __npowers_
 36324  014104  2401               	addwf	?i2___awmod,w,c
 36325  014106  6EF6               	movwf	tblptrl,c
 36326  014108  0ED7               	movlw	high __npowers_
 36327  01410A  2002               	addwfc	?i2___awmod+1,w,c
 36328  01410C  6EF7               	movwf	tblptrh,c
 36329  01410E                     	if	1	;There are 3 active tblptr bytes
 36330  01410E  6AF8               	clrf	tblptru,c
 36331  014110  0E00               	movlw	low (__mediumconst shr (0+16))
 36332  014112  22F8               	addwfc	tblptru,f,c
 36333  014114                     	endif
 36334  014114  0009               	tblrd		*+
 36335  014116  CFF5 F034          	movff	tablat,i2___flmul@a
 36336  01411A  0009               	tblrd		*+
 36337  01411C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 36338  014120  0009               	tblrd		*+
 36339  014122  CFF5 F036          	movff	tablat,i2___flmul@a+2
 36340  014126  000A               	tblrd		*-
 36341  014128  CFF5 F037          	movff	tablat,i2___flmul@a+3
 36342  01412C  EC34  F0A5         	call	i2___flmul	;wreg free
 36343  014130  C030  F049         	movff	?i2___flmul,?i2_scale
 36344  014134  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 36345  014138  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 36346  01413C  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 36347  014140  0012               	return	
 36348  014142                     i2l1538:
 36349                           
 36350                           ;doprnt.c: 434: return _npowers_[scl];
 36351  014142  5051               	movf	i2scale@scl,w,c
 36352  014144  0D04               	mullw	4
 36353  014146  0E75               	movlw	low __npowers_
 36354  014148  24F3               	addwf	prodl,w,c
 36355  01414A  6EF6               	movwf	tblptrl,c
 36356  01414C  0ED7               	movlw	high __npowers_
 36357  01414E  20F4               	addwfc	prodh,w,c
 36358  014150  6EF7               	movwf	tblptrh,c
 36359  014152                     	if	1	;There are 3 active tblptr bytes
 36360  014152  6AF8               	clrf	tblptru,c
 36361  014154  0E00               	movlw	low (__mediumconst shr (0+16))
 36362  014156  22F8               	addwfc	tblptru,f,c
 36363  014158                     	endif
 36364  014158  0009               	tblrd		*+
 36365  01415A  CFF5 F049          	movff	tablat,?i2_scale
 36366  01415E  0009               	tblrd		*+
 36367  014160  CFF5 F04A          	movff	tablat,?i2_scale+1
 36368  014164  0009               	tblrd		*+
 36369  014166  CFF5 F04B          	movff	tablat,?i2_scale+2
 36370  01416A  000A               	tblrd		*-
 36371  01416C  CFF5 F04C          	movff	tablat,?i2_scale+3
 36372  014170  0012               	return	
 36373  014172                     i2l1534:
 36374                           
 36375                           ;doprnt.c: 435: }
 36376                           ;doprnt.c: 436: if(scl>=110)
 36377  014172  5051               	movf	i2scale@scl,w,c
 36378  014174  0A80               	xorlw	128
 36379  014176  0F12               	addlw	-238
 36380  014178  A0D8               	btfss	status,0,c
 36381  01417A  D0A1               	goto	i2l1539
 36382                           
 36383                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 36384  01417C  0E00               	movlw	0
 36385  01417E  6E0A               	movwf	i2___awdiv@divisor+1,c
 36386  014180  0E0A               	movlw	10
 36387  014182  6E09               	movwf	i2___awdiv@divisor,c
 36388  014184  0E00               	movlw	0
 36389  014186  6E04               	movwf	i2___awmod@divisor+1,c
 36390  014188  0E64               	movlw	100
 36391  01418A  6E03               	movwf	i2___awmod@divisor,c
 36392  01418C  5051               	movf	i2scale@scl,w,c
 36393  01418E  6E01               	movwf	i2___awmod@dividend,c
 36394  014190  6A02               	clrf	i2___awmod@dividend+1,c
 36395  014192  BE01               	btfsc	i2___awmod@dividend,7,c
 36396  014194  0602               	decf	i2___awmod@dividend+1,f,c
 36397  014196  ECBE  F0C3         	call	i2___awmod	;wreg free
 36398  01419A  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 36399  01419E  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 36400  0141A2  EC87  F0C2         	call	i2___awdiv	;wreg free
 36401  0141A6  90D8               	bcf	status,0,c
 36402  0141A8  3607               	rlcf	?i2___awdiv,f,c
 36403  0141AA  3608               	rlcf	?i2___awdiv+1,f,c
 36404  0141AC  90D8               	bcf	status,0,c
 36405  0141AE  3607               	rlcf	?i2___awdiv,f,c
 36406  0141B0  3608               	rlcf	?i2___awdiv+1,f,c
 36407  0141B2  0E24               	movlw	36
 36408  0141B4  2607               	addwf	?i2___awdiv,f,c
 36409  0141B6  0E00               	movlw	0
 36410  0141B8  2208               	addwfc	?i2___awdiv+1,f,c
 36411  0141BA  0E41               	movlw	low __powers_
 36412  0141BC  2407               	addwf	?i2___awdiv,w,c
 36413  0141BE  6EF6               	movwf	tblptrl,c
 36414  0141C0  0ED7               	movlw	high __powers_
 36415  0141C2  2008               	addwfc	?i2___awdiv+1,w,c
 36416  0141C4  6EF7               	movwf	tblptrh,c
 36417  0141C6                     	if	1	;There are 3 active tblptr bytes
 36418  0141C6  6AF8               	clrf	tblptru,c
 36419  0141C8  0E00               	movlw	low (__mediumconst shr (0+16))
 36420  0141CA  22F8               	addwfc	tblptru,f,c
 36421  0141CC                     	endif
 36422  0141CC  0009               	tblrd		*+
 36423  0141CE  CFF5 F034          	movff	tablat,i2___flmul@a
 36424  0141D2  0009               	tblrd		*+
 36425  0141D4  CFF5 F035          	movff	tablat,i2___flmul@a+1
 36426  0141D8  0009               	tblrd		*+
 36427  0141DA  CFF5 F036          	movff	tablat,i2___flmul@a+2
 36428  0141DE  000A               	tblrd		*-
 36429  0141E0  CFF5 F037          	movff	tablat,i2___flmul@a+3
 36430  0141E4  0E00               	movlw	0
 36431  0141E6  6E0A               	movwf	i2___awdiv@divisor+1,c
 36432  0141E8  0E64               	movlw	100
 36433  0141EA  6E09               	movwf	i2___awdiv@divisor,c
 36434  0141EC  5051               	movf	i2scale@scl,w,c
 36435  0141EE  6E07               	movwf	i2___awdiv@dividend,c
 36436  0141F0  6A08               	clrf	i2___awdiv@dividend+1,c
 36437  0141F2  BE07               	btfsc	i2___awdiv@dividend,7,c
 36438  0141F4  0608               	decf	i2___awdiv@dividend+1,f,c
 36439  0141F6  EC87  F0C2         	call	i2___awdiv	;wreg free
 36440  0141FA  90D8               	bcf	status,0,c
 36441  0141FC  3607               	rlcf	?i2___awdiv,f,c
 36442  0141FE  3608               	rlcf	?i2___awdiv+1,f,c
 36443  014200  90D8               	bcf	status,0,c
 36444  014202  3607               	rlcf	?i2___awdiv,f,c
 36445  014204  3608               	rlcf	?i2___awdiv+1,f,c
 36446  014206  0E48               	movlw	72
 36447  014208  2607               	addwf	?i2___awdiv,f,c
 36448  01420A  0E00               	movlw	0
 36449  01420C  2208               	addwfc	?i2___awdiv+1,f,c
 36450  01420E  0E41               	movlw	low __powers_
 36451  014210  2407               	addwf	?i2___awdiv,w,c
 36452  014212  6EF6               	movwf	tblptrl,c
 36453  014214  0ED7               	movlw	high __powers_
 36454  014216  2008               	addwfc	?i2___awdiv+1,w,c
 36455  014218  6EF7               	movwf	tblptrh,c
 36456  01421A                     	if	1	;There are 3 active tblptr bytes
 36457  01421A  6AF8               	clrf	tblptru,c
 36458  01421C  0E00               	movlw	low (__mediumconst shr (0+16))
 36459  01421E  22F8               	addwfc	tblptru,f,c
 36460  014220                     	endif
 36461  014220  0009               	tblrd		*+
 36462  014222  CFF5 F030          	movff	tablat,i2___flmul@b
 36463  014226  0009               	tblrd		*+
 36464  014228  CFF5 F031          	movff	tablat,i2___flmul@b+1
 36465  01422C  0009               	tblrd		*+
 36466  01422E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 36467  014232  000A               	tblrd		*-
 36468  014234  CFF5 F033          	movff	tablat,i2___flmul@b+3
 36469  014238  EC34  F0A5         	call	i2___flmul	;wreg free
 36470  01423C  C030  F04D         	movff	?i2___flmul,i2_scale$4398
 36471  014240  C031  F04E         	movff	?i2___flmul+1,i2_scale$4398+1
 36472  014244  C032  F04F         	movff	?i2___flmul+2,i2_scale$4398+2
 36473  014248  C033  F050         	movff	?i2___flmul+3,i2_scale$4398+3
 36474                           
 36475                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 36476  01424C  C04D  F030         	movff	i2_scale$4398,i2___flmul@b
 36477  014250  C04E  F031         	movff	i2_scale$4398+1,i2___flmul@b+1
 36478  014254  C04F  F032         	movff	i2_scale$4398+2,i2___flmul@b+2
 36479  014258  C050  F033         	movff	i2_scale$4398+3,i2___flmul@b+3
 36480  01425C  0E00               	movlw	0
 36481  01425E  6E04               	movwf	i2___awmod@divisor+1,c
 36482  014260  0E0A               	movlw	10
 36483  014262  6E03               	movwf	i2___awmod@divisor,c
 36484  014264  5051               	movf	i2scale@scl,w,c
 36485  014266  6E01               	movwf	i2___awmod@dividend,c
 36486  014268  6A02               	clrf	i2___awmod@dividend+1,c
 36487  01426A  BE01               	btfsc	i2___awmod@dividend,7,c
 36488  01426C  0602               	decf	i2___awmod@dividend+1,f,c
 36489  01426E  ECBE  F0C3         	call	i2___awmod	;wreg free
 36490  014272  90D8               	bcf	status,0,c
 36491  014274  3601               	rlcf	?i2___awmod,f,c
 36492  014276  3602               	rlcf	?i2___awmod+1,f,c
 36493  014278  90D8               	bcf	status,0,c
 36494  01427A  3601               	rlcf	?i2___awmod,f,c
 36495  01427C  3602               	rlcf	?i2___awmod+1,f,c
 36496  01427E  0E41               	movlw	low __powers_
 36497  014280  2401               	addwf	?i2___awmod,w,c
 36498  014282  6EF6               	movwf	tblptrl,c
 36499  014284  0ED7               	movlw	high __powers_
 36500  014286  2002               	addwfc	?i2___awmod+1,w,c
 36501  014288  6EF7               	movwf	tblptrh,c
 36502  01428A                     	if	1	;There are 3 active tblptr bytes
 36503  01428A  6AF8               	clrf	tblptru,c
 36504  01428C  0E00               	movlw	low (__mediumconst shr (0+16))
 36505  01428E  22F8               	addwfc	tblptru,f,c
 36506  014290                     	endif
 36507  014290  0009               	tblrd		*+
 36508  014292  CFF5 F034          	movff	tablat,i2___flmul@a
 36509  014296  0009               	tblrd		*+
 36510  014298  CFF5 F035          	movff	tablat,i2___flmul@a+1
 36511  01429C  0009               	tblrd		*+
 36512  01429E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 36513  0142A2  000A               	tblrd		*-
 36514  0142A4  CFF5 F037          	movff	tablat,i2___flmul@a+3
 36515  0142A8  EC34  F0A5         	call	i2___flmul	;wreg free
 36516  0142AC  C030  F049         	movff	?i2___flmul,?i2_scale
 36517  0142B0  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 36518  0142B4  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 36519  0142B8  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 36520  0142BC  0012               	return	
 36521  0142BE                     i2l1539:
 36522                           
 36523                           ;doprnt.c: 438: else if(scl > 10)
 36524  0142BE  5051               	movf	i2scale@scl,w,c
 36525  0142C0  0A80               	xorlw	128
 36526  0142C2  0F75               	addlw	-139
 36527  0142C4  A0D8               	btfss	status,0,c
 36528  0142C6  D05B               	goto	i2l1541
 36529                           
 36530                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 36531  0142C8  0E00               	movlw	0
 36532  0142CA  6E0A               	movwf	i2___awdiv@divisor+1,c
 36533  0142CC  0E0A               	movlw	10
 36534  0142CE  6E09               	movwf	i2___awdiv@divisor,c
 36535  0142D0  5051               	movf	i2scale@scl,w,c
 36536  0142D2  6E07               	movwf	i2___awdiv@dividend,c
 36537  0142D4  6A08               	clrf	i2___awdiv@dividend+1,c
 36538  0142D6  BE07               	btfsc	i2___awdiv@dividend,7,c
 36539  0142D8  0608               	decf	i2___awdiv@dividend+1,f,c
 36540  0142DA  EC87  F0C2         	call	i2___awdiv	;wreg free
 36541  0142DE  90D8               	bcf	status,0,c
 36542  0142E0  3607               	rlcf	?i2___awdiv,f,c
 36543  0142E2  3608               	rlcf	?i2___awdiv+1,f,c
 36544  0142E4  90D8               	bcf	status,0,c
 36545  0142E6  3607               	rlcf	?i2___awdiv,f,c
 36546  0142E8  3608               	rlcf	?i2___awdiv+1,f,c
 36547  0142EA  0E24               	movlw	36
 36548  0142EC  2607               	addwf	?i2___awdiv,f,c
 36549  0142EE  0E00               	movlw	0
 36550  0142F0  2208               	addwfc	?i2___awdiv+1,f,c
 36551  0142F2  0E41               	movlw	low __powers_
 36552  0142F4  2407               	addwf	?i2___awdiv,w,c
 36553  0142F6  6EF6               	movwf	tblptrl,c
 36554  0142F8  0ED7               	movlw	high __powers_
 36555  0142FA  2008               	addwfc	?i2___awdiv+1,w,c
 36556  0142FC  6EF7               	movwf	tblptrh,c
 36557  0142FE                     	if	1	;There are 3 active tblptr bytes
 36558  0142FE  6AF8               	clrf	tblptru,c
 36559  014300  0E00               	movlw	low (__mediumconst shr (0+16))
 36560  014302  22F8               	addwfc	tblptru,f,c
 36561  014304                     	endif
 36562  014304  0009               	tblrd		*+
 36563  014306  CFF5 F030          	movff	tablat,i2___flmul@b
 36564  01430A  0009               	tblrd		*+
 36565  01430C  CFF5 F031          	movff	tablat,i2___flmul@b+1
 36566  014310  0009               	tblrd		*+
 36567  014312  CFF5 F032          	movff	tablat,i2___flmul@b+2
 36568  014316  000A               	tblrd		*-
 36569  014318  CFF5 F033          	movff	tablat,i2___flmul@b+3
 36570  01431C  0E00               	movlw	0
 36571  01431E  6E04               	movwf	i2___awmod@divisor+1,c
 36572  014320  0E0A               	movlw	10
 36573  014322  6E03               	movwf	i2___awmod@divisor,c
 36574  014324  5051               	movf	i2scale@scl,w,c
 36575  014326  6E01               	movwf	i2___awmod@dividend,c
 36576  014328  6A02               	clrf	i2___awmod@dividend+1,c
 36577  01432A  BE01               	btfsc	i2___awmod@dividend,7,c
 36578  01432C  0602               	decf	i2___awmod@dividend+1,f,c
 36579  01432E  ECBE  F0C3         	call	i2___awmod	;wreg free
 36580  014332  90D8               	bcf	status,0,c
 36581  014334  3601               	rlcf	?i2___awmod,f,c
 36582  014336  3602               	rlcf	?i2___awmod+1,f,c
 36583  014338  90D8               	bcf	status,0,c
 36584  01433A  3601               	rlcf	?i2___awmod,f,c
 36585  01433C  3602               	rlcf	?i2___awmod+1,f,c
 36586  01433E  0E41               	movlw	low __powers_
 36587  014340  2401               	addwf	?i2___awmod,w,c
 36588  014342  6EF6               	movwf	tblptrl,c
 36589  014344  0ED7               	movlw	high __powers_
 36590  014346  2002               	addwfc	?i2___awmod+1,w,c
 36591  014348  6EF7               	movwf	tblptrh,c
 36592  01434A                     	if	1	;There are 3 active tblptr bytes
 36593  01434A  6AF8               	clrf	tblptru,c
 36594  01434C  0E00               	movlw	low (__mediumconst shr (0+16))
 36595  01434E  22F8               	addwfc	tblptru,f,c
 36596  014350                     	endif
 36597  014350  0009               	tblrd		*+
 36598  014352  CFF5 F034          	movff	tablat,i2___flmul@a
 36599  014356  0009               	tblrd		*+
 36600  014358  CFF5 F035          	movff	tablat,i2___flmul@a+1
 36601  01435C  0009               	tblrd		*+
 36602  01435E  CFF5 F036          	movff	tablat,i2___flmul@a+2
 36603  014362  000A               	tblrd		*-
 36604  014364  CFF5 F037          	movff	tablat,i2___flmul@a+3
 36605  014368  EC34  F0A5         	call	i2___flmul	;wreg free
 36606  01436C  C030  F049         	movff	?i2___flmul,?i2_scale
 36607  014370  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 36608  014374  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 36609  014378  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 36610  01437C  0012               	return	
 36611  01437E                     i2l1541:
 36612                           
 36613                           ;doprnt.c: 440: return _powers_[scl];
 36614  01437E  5051               	movf	i2scale@scl,w,c
 36615  014380  0D04               	mullw	4
 36616  014382  0E41               	movlw	low __powers_
 36617  014384  24F3               	addwf	prodl,w,c
 36618  014386  6EF6               	movwf	tblptrl,c
 36619  014388  0ED7               	movlw	high __powers_
 36620  01438A  20F4               	addwfc	prodh,w,c
 36621  01438C  6EF7               	movwf	tblptrh,c
 36622  01438E                     	if	1	;There are 3 active tblptr bytes
 36623  01438E  6AF8               	clrf	tblptru,c
 36624  014390  0E00               	movlw	low (__mediumconst shr (0+16))
 36625  014392  22F8               	addwfc	tblptru,f,c
 36626  014394                     	endif
 36627  014394  0009               	tblrd		*+
 36628  014396  CFF5 F049          	movff	tablat,?i2_scale
 36629  01439A  0009               	tblrd		*+
 36630  01439C  CFF5 F04A          	movff	tablat,?i2_scale+1
 36631  0143A0  0009               	tblrd		*+
 36632  0143A2  CFF5 F04B          	movff	tablat,?i2_scale+2
 36633  0143A6  000A               	tblrd		*-
 36634  0143A8  CFF5 F04C          	movff	tablat,?i2_scale+3
 36635  0143AC  0012               	return	
 36636  0143AE                     __end_ofi2_scale:
 36637                           	opt stack 0
 36638                           tosu	equ	0xFFF
 36639                           tosh	equ	0xFFE
 36640                           tosl	equ	0xFFD
 36641                           pclatu	equ	0xFFB
 36642                           pclath	equ	0xFFA
 36643                           tblptru	equ	0xFF8
 36644                           tblptrh	equ	0xFF7
 36645                           tblptrl	equ	0xFF6
 36646                           tablat	equ	0xFF5
 36647                           prodh	equ	0xFF4
 36648                           prodl	equ	0xFF3
 36649                           intcon	equ	0xFF2
 36650                           indf0	equ	0xFEF
 36651                           postinc0	equ	0xFEE
 36652                           fsr0h	equ	0xFEA
 36653                           fsr0l	equ	0xFE9
 36654                           wreg	equ	0xFE8
 36655                           indf1	equ	0xFE7
 36656                           postdec1	equ	0xFE5
 36657                           plusw1	equ	0xFE3
 36658                           fsr1h	equ	0xFE2
 36659                           fsr1l	equ	0xFE1
 36660                           bsr	equ	0xFE0
 36661                           indf2	equ	0xFDF
 36662                           postinc2	equ	0xFDE
 36663                           postdec2	equ	0xFDD
 36664                           plusw2	equ	0xFDB
 36665                           fsr2h	equ	0xFDA
 36666                           fsr2l	equ	0xFD9
 36667                           status	equ	0xFD8
 36668                           
 36669 ;; *************** function i2_putch *****************
 36670 ;; Defined at:
 36671 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 36672 ;; Parameters:    Size  Location     Type
 36673 ;;  txData          1    wreg     unsigned char 
 36674 ;; Auto vars:     Size  Location     Type
 36675 ;;  txData          1    1[COMRAM] unsigned char 
 36676 ;; Return value:  Size  Location     Type
 36677 ;;                  1    wreg      void 
 36678 ;; Registers used:
 36679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36680 ;; Tracked objects:
 36681 ;;		On entry : 0/0
 36682 ;;		On exit  : 0/0
 36683 ;;		Unchanged: 0/0
 36684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36689 ;;Total ram usage:        1 bytes
 36690 ;; Hardware stack levels used:    1
 36691 ;; Hardware stack levels required when called:    1
 36692 ;; This function calls:
 36693 ;;		i2_EUSART2_Write
 36694 ;; This function is called by:
 36695 ;;		i2_printf
 36696 ;; This function uses a non-reentrant model
 36697 ;;
 36698                           
 36699                           	psect	text105
 36700  0196A2                     __ptext105:
 36701                           	opt stack 0
 36702  0196A2                     i2_putch:
 36703                           	opt stack 15
 36704                           
 36705                           ;incstack = 0
 36706                           ;i2putch@txData stored from wreg
 36707  0196A2  6E02               	movwf	i2putch@txData,c
 36708                           
 36709                           ;eusart2.c: 195: EUSART2_Write(txData);
 36710  0196A4  5002               	movf	i2putch@txData,w,c
 36711  0196A6  ECEF  F0C6         	call	i2_EUSART2_Write
 36712  0196AA  0012               	return		;funcret
 36713  0196AC                     __end_ofi2_putch:
 36714                           	opt stack 0
 36715                           tosu	equ	0xFFF
 36716                           tosh	equ	0xFFE
 36717                           tosl	equ	0xFFD
 36718                           pclatu	equ	0xFFB
 36719                           pclath	equ	0xFFA
 36720                           tblptru	equ	0xFF8
 36721                           tblptrh	equ	0xFF7
 36722                           tblptrl	equ	0xFF6
 36723                           tablat	equ	0xFF5
 36724                           prodh	equ	0xFF4
 36725                           prodl	equ	0xFF3
 36726                           intcon	equ	0xFF2
 36727                           indf0	equ	0xFEF
 36728                           postinc0	equ	0xFEE
 36729                           fsr0h	equ	0xFEA
 36730                           fsr0l	equ	0xFE9
 36731                           wreg	equ	0xFE8
 36732                           indf1	equ	0xFE7
 36733                           postdec1	equ	0xFE5
 36734                           plusw1	equ	0xFE3
 36735                           fsr1h	equ	0xFE2
 36736                           fsr1l	equ	0xFE1
 36737                           bsr	equ	0xFE0
 36738                           indf2	equ	0xFDF
 36739                           postinc2	equ	0xFDE
 36740                           postdec2	equ	0xFDD
 36741                           plusw2	equ	0xFDB
 36742                           fsr2h	equ	0xFDA
 36743                           fsr2l	equ	0xFD9
 36744                           status	equ	0xFD8
 36745                           
 36746 ;; *************** function i2_EUSART2_Write *****************
 36747 ;; Defined at:
 36748 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 36749 ;; Parameters:    Size  Location     Type
 36750 ;;  txData          1    wreg     unsigned char 
 36751 ;; Auto vars:     Size  Location     Type
 36752 ;;  txData          1    0[COMRAM] unsigned char 
 36753 ;; Return value:  Size  Location     Type
 36754 ;;                  1    wreg      void 
 36755 ;; Registers used:
 36756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36757 ;; Tracked objects:
 36758 ;;		On entry : 0/0
 36759 ;;		On exit  : 0/0
 36760 ;;		Unchanged: 0/0
 36761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36766 ;;Total ram usage:        1 bytes
 36767 ;; Hardware stack levels used:    1
 36768 ;; This function calls:
 36769 ;;		Nothing
 36770 ;; This function is called by:
 36771 ;;		i2_putch
 36772 ;; This function uses a non-reentrant model
 36773 ;;
 36774                           
 36775                           	psect	text106
 36776  018DDE                     __ptext106:
 36777                           	opt stack 0
 36778  018DDE                     i2_EUSART2_Write:
 36779                           	opt stack 15
 36780                           
 36781                           ;incstack = 0
 36782                           ;i2EUSART2_Write@txData stored from wreg
 36783  018DDE  6E01               	movwf	i2EUSART2_Write@txData,c
 36784                           
 36785                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 36786  018DE0  D002               	goto	i2l402
 36787  018DE2                     i2l403:
 36788                           
 36789                           ; BSR set to: 1
 36790  018DE2  0004               	clrwdt		;# 
 36791                           
 36792                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 36793  018DE4  827E               	bsf	3966,1,c	;volatile
 36794  018DE6                     i2l402:
 36795  018DE6  0101               	movlb	1	; () banked
 36796  018DE8  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 36797  018DEA  B4D8               	btfsc	status,2,c
 36798  018DEC  D7FA               	goto	i2l403
 36799                           
 36800                           ; BSR set to: 1
 36801                           ;eusart2.c: 167: }
 36802                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 36803  018DEE  927E               	bcf	3966,1,c	;volatile
 36804                           
 36805                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 36806  018DF0  010E               	movlb	14	; () banked
 36807  018DF2  BD2C               	btfsc	44,6,b	;volatile
 36808  018DF4  D003               	goto	i2l405
 36809                           
 36810                           ; BSR set to: 14
 36811                           ;eusart2.c: 172: {
 36812                           ;eusart2.c: 173: TX2REG = txData;
 36813  018DF6  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 36814                           
 36815                           ;eusart2.c: 174: }
 36816  018DFA  D013               	goto	i2l406
 36817  018DFC                     i2l405:
 36818                           
 36819                           ; BSR set to: 14
 36820                           ;eusart2.c: 175: else
 36821                           ;eusart2.c: 176: {
 36822                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 36823  018DFC  9D2C               	bcf	44,6,b	;volatile
 36824                           
 36825                           ; BSR set to: 14
 36826                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 36827  018DFE  0101               	movlb	1	; () banked
 36828  018E00  51E3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 36829  018E02  0D01               	mullw	1
 36830  018E04  0E00               	movlw	low _eusart2TxBuffer
 36831  018E06  24F3               	addwf	prodl,w,c
 36832  018E08  6ED9               	movwf	fsr2l,c
 36833  018E0A  0E03               	movlw	high _eusart2TxBuffer
 36834  018E0C  20F4               	addwfc	prodh,w,c
 36835  018E0E  6EDA               	movwf	fsr2h,c
 36836  018E10  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 36837                           
 36838                           ; BSR set to: 1
 36839  018E14  2BE3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 36840                           
 36841                           ; BSR set to: 1
 36842                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 36843  018E16  0E7F               	movlw	127
 36844  018E18  65E3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 36845  018E1A  D002               	goto	i2l407
 36846                           
 36847                           ; BSR set to: 1
 36848                           ;eusart2.c: 180: {
 36849                           ;eusart2.c: 181: eusart2TxHead = 0;
 36850  018E1C  0E00               	movlw	0
 36851  018E1E  6FE3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 36852  018E20                     i2l407:
 36853                           
 36854                           ; BSR set to: 1
 36855                           ;eusart2.c: 182: }
 36856                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 36857                           
 36858                           ; BSR set to: 1
 36859  018E20  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 36860  018E22                     i2l406:
 36861                           
 36862                           ;eusart2.c: 184: }
 36863                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 36864                           
 36865                           ; BSR set to: 1
 36866  018E22  010E               	movlb	14	; () banked
 36867  018E24  8D2C               	bsf	44,6,b	;volatile
 36868                           
 36869                           ; BSR set to: 14
 36870  018E26  0012               	return		;funcret
 36871  018E28                     __end_ofi2_EUSART2_Write:
 36872                           	opt stack 0
 36873                           tosu	equ	0xFFF
 36874                           tosh	equ	0xFFE
 36875                           tosl	equ	0xFFD
 36876                           pclatu	equ	0xFFB
 36877                           pclath	equ	0xFFA
 36878                           tblptru	equ	0xFF8
 36879                           tblptrh	equ	0xFF7
 36880                           tblptrl	equ	0xFF6
 36881                           tablat	equ	0xFF5
 36882                           prodh	equ	0xFF4
 36883                           prodl	equ	0xFF3
 36884                           intcon	equ	0xFF2
 36885                           indf0	equ	0xFEF
 36886                           postinc0	equ	0xFEE
 36887                           fsr0h	equ	0xFEA
 36888                           fsr0l	equ	0xFE9
 36889                           wreg	equ	0xFE8
 36890                           indf1	equ	0xFE7
 36891                           postdec1	equ	0xFE5
 36892                           plusw1	equ	0xFE3
 36893                           fsr1h	equ	0xFE2
 36894                           fsr1l	equ	0xFE1
 36895                           bsr	equ	0xFE0
 36896                           indf2	equ	0xFDF
 36897                           postinc2	equ	0xFDE
 36898                           postdec2	equ	0xFDD
 36899                           plusw2	equ	0xFDB
 36900                           fsr2h	equ	0xFDA
 36901                           fsr2l	equ	0xFD9
 36902                           status	equ	0xFD8
 36903                           
 36904 ;; *************** function i2_isdigit *****************
 36905 ;; Defined at:
 36906 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 36907 ;; Parameters:    Size  Location     Type
 36908 ;;  c               1    wreg     unsigned char 
 36909 ;; Auto vars:     Size  Location     Type
 36910 ;;  c               1    2[COMRAM] unsigned char 
 36911 ;; Return value:  Size  Location     Type
 36912 ;;		None               void
 36913 ;; Registers used:
 36914 ;;		wreg, status,2, status,0
 36915 ;; Tracked objects:
 36916 ;;		On entry : 0/0
 36917 ;;		On exit  : 0/0
 36918 ;;		Unchanged: 0/0
 36919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36923 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36924 ;;Total ram usage:        3 bytes
 36925 ;; Hardware stack levels used:    1
 36926 ;; This function calls:
 36927 ;;		Nothing
 36928 ;; This function is called by:
 36929 ;;		i2_printf
 36930 ;; This function uses a non-reentrant model
 36931 ;;
 36932                           
 36933                           	psect	text107
 36934  0194A2                     __ptext107:
 36935                           	opt stack 0
 36936  0194A2                     i2_isdigit:
 36937                           	opt stack 16
 36938                           
 36939                           ; BSR set to: 14
 36940                           ;incstack = 0
 36941                           ;i2isdigit@c stored from wreg
 36942  0194A2  6E03               	movwf	i2isdigit@c,c
 36943  0194A4  0E00               	movlw	0
 36944  0194A6  6E02               	movwf	i2_isdigit$3451,c
 36945  0194A8  0E3A               	movlw	58
 36946  0194AA  6003               	cpfslt	i2isdigit@c,c
 36947  0194AC  D005               	goto	i2l2112
 36948  0194AE  0E2F               	movlw	47
 36949  0194B0  6403               	cpfsgt	i2isdigit@c,c
 36950  0194B2  D002               	goto	i2l2112
 36951  0194B4  0E01               	movlw	1
 36952  0194B6  6E02               	movwf	i2_isdigit$3451,c
 36953  0194B8                     i2l2112:
 36954  0194B8  C002  F001         	movff	i2_isdigit$3451,??i2_isdigit
 36955  0194BC  3001               	rrcf	??i2_isdigit,w,c
 36956  0194BE  0012               	return	
 36957  0194C0                     __end_ofi2_isdigit:
 36958                           	opt stack 0
 36959                           tosu	equ	0xFFF
 36960                           tosh	equ	0xFFE
 36961                           tosl	equ	0xFFD
 36962                           pclatu	equ	0xFFB
 36963                           pclath	equ	0xFFA
 36964                           tblptru	equ	0xFF8
 36965                           tblptrh	equ	0xFF7
 36966                           tblptrl	equ	0xFF6
 36967                           tablat	equ	0xFF5
 36968                           prodh	equ	0xFF4
 36969                           prodl	equ	0xFF3
 36970                           intcon	equ	0xFF2
 36971                           indf0	equ	0xFEF
 36972                           postinc0	equ	0xFEE
 36973                           fsr0h	equ	0xFEA
 36974                           fsr0l	equ	0xFE9
 36975                           wreg	equ	0xFE8
 36976                           indf1	equ	0xFE7
 36977                           postdec1	equ	0xFE5
 36978                           plusw1	equ	0xFE3
 36979                           fsr1h	equ	0xFE2
 36980                           fsr1l	equ	0xFE1
 36981                           bsr	equ	0xFE0
 36982                           indf2	equ	0xFDF
 36983                           postinc2	equ	0xFDE
 36984                           postdec2	equ	0xFDD
 36985                           plusw2	equ	0xFDB
 36986                           fsr2h	equ	0xFDA
 36987                           fsr2l	equ	0xFD9
 36988                           status	equ	0xFD8
 36989                           
 36990 ;; *************** function i2_fround *****************
 36991 ;; Defined at:
 36992 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 36993 ;; Parameters:    Size  Location     Type
 36994 ;;  prec            1    wreg     unsigned char 
 36995 ;; Auto vars:     Size  Location     Type
 36996 ;;  prec            1   84[COMRAM] unsigned char 
 36997 ;; Return value:  Size  Location     Type
 36998 ;;                  4   72[COMRAM] unsigned char 
 36999 ;; Registers used:
 37000 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37001 ;; Tracked objects:
 37002 ;;		On entry : 0/0
 37003 ;;		On exit  : 0/0
 37004 ;;		Unchanged: 0/0
 37005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37007 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37009 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37010 ;;Total ram usage:       13 bytes
 37011 ;; Hardware stack levels used:    1
 37012 ;; Hardware stack levels required when called:    1
 37013 ;; This function calls:
 37014 ;;		i2___awdiv
 37015 ;;		i2___awmod
 37016 ;;		i2___flmul
 37017 ;; This function is called by:
 37018 ;;		i2_printf
 37019 ;; This function uses a non-reentrant model
 37020 ;;
 37021                           
 37022                           	psect	text108
 37023  01652A                     __ptext108:
 37024                           	opt stack 0
 37025  01652A                     i2_fround:
 37026                           	opt stack 15
 37027                           
 37028                           ;incstack = 0
 37029                           ;i2fround@prec stored from wreg
 37030  01652A  6E55               	movwf	i2fround@prec,c
 37031                           
 37032                           ;doprnt.c: 413: if(prec>=110)
 37033  01652C  0E6D               	movlw	109
 37034  01652E  6455               	cpfsgt	i2fround@prec,c
 37035  016530  D0B5               	goto	i2l1528
 37036                           
 37037                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 37038  016532  0E00               	movlw	0
 37039  016534  6E0A               	movwf	i2___awdiv@divisor+1,c
 37040  016536  0E0A               	movlw	10
 37041  016538  6E09               	movwf	i2___awdiv@divisor,c
 37042  01653A  0E00               	movlw	0
 37043  01653C  6E04               	movwf	i2___awmod@divisor+1,c
 37044  01653E  0E64               	movlw	100
 37045  016540  6E03               	movwf	i2___awmod@divisor,c
 37046  016542  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 37047  016546  6A02               	clrf	i2___awmod@dividend+1,c
 37048  016548  ECBE  F0C3         	call	i2___awmod	;wreg free
 37049  01654C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 37050  016550  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 37051  016554  EC87  F0C2         	call	i2___awdiv	;wreg free
 37052  016558  90D8               	bcf	status,0,c
 37053  01655A  3607               	rlcf	?i2___awdiv,f,c
 37054  01655C  3608               	rlcf	?i2___awdiv+1,f,c
 37055  01655E  90D8               	bcf	status,0,c
 37056  016560  3607               	rlcf	?i2___awdiv,f,c
 37057  016562  3608               	rlcf	?i2___awdiv+1,f,c
 37058  016564  0E24               	movlw	36
 37059  016566  2607               	addwf	?i2___awdiv,f,c
 37060  016568  0E00               	movlw	0
 37061  01656A  2208               	addwfc	?i2___awdiv+1,f,c
 37062  01656C  0E75               	movlw	low __npowers_
 37063  01656E  2407               	addwf	?i2___awdiv,w,c
 37064  016570  6EF6               	movwf	tblptrl,c
 37065  016572  0ED7               	movlw	high __npowers_
 37066  016574  2008               	addwfc	?i2___awdiv+1,w,c
 37067  016576  6EF7               	movwf	tblptrh,c
 37068  016578                     	if	1	;There are 3 active tblptr bytes
 37069  016578  6AF8               	clrf	tblptru,c
 37070  01657A  0E00               	movlw	low (__mediumconst shr (0+16))
 37071  01657C  22F8               	addwfc	tblptru,f,c
 37072  01657E                     	endif
 37073  01657E  0009               	tblrd		*+
 37074  016580  CFF5 F034          	movff	tablat,i2___flmul@a
 37075  016584  0009               	tblrd		*+
 37076  016586  CFF5 F035          	movff	tablat,i2___flmul@a+1
 37077  01658A  0009               	tblrd		*+
 37078  01658C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 37079  016590  000A               	tblrd		*-
 37080  016592  CFF5 F037          	movff	tablat,i2___flmul@a+3
 37081  016596  0E00               	movlw	0
 37082  016598  6E0A               	movwf	i2___awdiv@divisor+1,c
 37083  01659A  0E64               	movlw	100
 37084  01659C  6E09               	movwf	i2___awdiv@divisor,c
 37085  01659E  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 37086  0165A2  6A08               	clrf	i2___awdiv@dividend+1,c
 37087  0165A4  EC87  F0C2         	call	i2___awdiv	;wreg free
 37088  0165A8  90D8               	bcf	status,0,c
 37089  0165AA  3607               	rlcf	?i2___awdiv,f,c
 37090  0165AC  3608               	rlcf	?i2___awdiv+1,f,c
 37091  0165AE  90D8               	bcf	status,0,c
 37092  0165B0  3607               	rlcf	?i2___awdiv,f,c
 37093  0165B2  3608               	rlcf	?i2___awdiv+1,f,c
 37094  0165B4  0E48               	movlw	72
 37095  0165B6  2607               	addwf	?i2___awdiv,f,c
 37096  0165B8  0E00               	movlw	0
 37097  0165BA  2208               	addwfc	?i2___awdiv+1,f,c
 37098  0165BC  0E75               	movlw	low __npowers_
 37099  0165BE  2407               	addwf	?i2___awdiv,w,c
 37100  0165C0  6EF6               	movwf	tblptrl,c
 37101  0165C2  0ED7               	movlw	high __npowers_
 37102  0165C4  2008               	addwfc	?i2___awdiv+1,w,c
 37103  0165C6  6EF7               	movwf	tblptrh,c
 37104  0165C8                     	if	1	;There are 3 active tblptr bytes
 37105  0165C8  6AF8               	clrf	tblptru,c
 37106  0165CA  0E00               	movlw	low (__mediumconst shr (0+16))
 37107  0165CC  22F8               	addwfc	tblptru,f,c
 37108  0165CE                     	endif
 37109  0165CE  0009               	tblrd		*+
 37110  0165D0  CFF5 F030          	movff	tablat,i2___flmul@b
 37111  0165D4  0009               	tblrd		*+
 37112  0165D6  CFF5 F031          	movff	tablat,i2___flmul@b+1
 37113  0165DA  0009               	tblrd		*+
 37114  0165DC  CFF5 F032          	movff	tablat,i2___flmul@b+2
 37115  0165E0  000A               	tblrd		*-
 37116  0165E2  CFF5 F033          	movff	tablat,i2___flmul@b+3
 37117  0165E6  EC34  F0A5         	call	i2___flmul	;wreg free
 37118  0165EA  C030  F051         	movff	?i2___flmul,i2_fround$4396
 37119  0165EE  C031  F052         	movff	?i2___flmul+1,i2_fround$4396+1
 37120  0165F2  C032  F053         	movff	?i2___flmul+2,i2_fround$4396+2
 37121  0165F6  C033  F054         	movff	?i2___flmul+3,i2_fround$4396+3
 37122                           
 37123                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 37124  0165FA  0E00               	movlw	0
 37125  0165FC  6E04               	movwf	i2___awmod@divisor+1,c
 37126  0165FE  0E0A               	movlw	10
 37127  016600  6E03               	movwf	i2___awmod@divisor,c
 37128  016602  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 37129  016606  6A02               	clrf	i2___awmod@dividend+1,c
 37130  016608  ECBE  F0C3         	call	i2___awmod	;wreg free
 37131  01660C  90D8               	bcf	status,0,c
 37132  01660E  3601               	rlcf	?i2___awmod,f,c
 37133  016610  3602               	rlcf	?i2___awmod+1,f,c
 37134  016612  90D8               	bcf	status,0,c
 37135  016614  3601               	rlcf	?i2___awmod,f,c
 37136  016616  3602               	rlcf	?i2___awmod+1,f,c
 37137  016618  0E75               	movlw	low __npowers_
 37138  01661A  2401               	addwf	?i2___awmod,w,c
 37139  01661C  6EF6               	movwf	tblptrl,c
 37140  01661E  0ED7               	movlw	high __npowers_
 37141  016620  2002               	addwfc	?i2___awmod+1,w,c
 37142  016622  6EF7               	movwf	tblptrh,c
 37143  016624                     	if	1	;There are 3 active tblptr bytes
 37144  016624  6AF8               	clrf	tblptru,c
 37145  016626  0E00               	movlw	low (__mediumconst shr (0+16))
 37146  016628  22F8               	addwfc	tblptru,f,c
 37147  01662A                     	endif
 37148  01662A  0009               	tblrd		*+
 37149  01662C  CFF5 F034          	movff	tablat,i2___flmul@a
 37150  016630  0009               	tblrd		*+
 37151  016632  CFF5 F035          	movff	tablat,i2___flmul@a+1
 37152  016636  0009               	tblrd		*+
 37153  016638  CFF5 F036          	movff	tablat,i2___flmul@a+2
 37154  01663C  000A               	tblrd		*-
 37155  01663E  CFF5 F037          	movff	tablat,i2___flmul@a+3
 37156  016642  C051  F030         	movff	i2_fround$4396,i2___flmul@b
 37157  016646  C052  F031         	movff	i2_fround$4396+1,i2___flmul@b+1
 37158  01664A  C053  F032         	movff	i2_fround$4396+2,i2___flmul@b+2
 37159  01664E  C054  F033         	movff	i2_fround$4396+3,i2___flmul@b+3
 37160  016652  EC34  F0A5         	call	i2___flmul	;wreg free
 37161  016656  C030  F04D         	movff	?i2___flmul,i2_fround$4397
 37162  01665A  C031  F04E         	movff	?i2___flmul+1,i2_fround$4397+1
 37163  01665E  C032  F04F         	movff	?i2___flmul+2,i2_fround$4397+2
 37164  016662  C033  F050         	movff	?i2___flmul+3,i2_fround$4397+3
 37165                           
 37166                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 37167  016666  C04D  F030         	movff	i2_fround$4397,i2___flmul@b
 37168  01666A  C04E  F031         	movff	i2_fround$4397+1,i2___flmul@b+1
 37169  01666E  C04F  F032         	movff	i2_fround$4397+2,i2___flmul@b+2
 37170  016672  C050  F033         	movff	i2_fround$4397+3,i2___flmul@b+3
 37171  016676  0E00               	movlw	0
 37172  016678  6E34               	movwf	i2___flmul@a,c
 37173  01667A  0E00               	movlw	0
 37174  01667C  6E35               	movwf	i2___flmul@a+1,c
 37175  01667E  0E00               	movlw	0
 37176  016680  6E36               	movwf	i2___flmul@a+2,c
 37177  016682  0E3F               	movlw	63
 37178  016684  6E37               	movwf	i2___flmul@a+3,c
 37179  016686  EC34  F0A5         	call	i2___flmul	;wreg free
 37180  01668A  C030  F049         	movff	?i2___flmul,?i2_fround
 37181  01668E  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 37182  016692  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 37183  016696  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 37184  01669A  0012               	return	
 37185  01669C                     i2l1528:
 37186                           
 37187                           ;doprnt.c: 415: else if(prec > 10)
 37188  01669C  0E0A               	movlw	10
 37189  01669E  6455               	cpfsgt	i2fround@prec,c
 37190  0166A0  D071               	goto	i2l1531
 37191                           
 37192                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 37193  0166A2  0E00               	movlw	0
 37194  0166A4  6E04               	movwf	i2___awmod@divisor+1,c
 37195  0166A6  0E0A               	movlw	10
 37196  0166A8  6E03               	movwf	i2___awmod@divisor,c
 37197  0166AA  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 37198  0166AE  6A02               	clrf	i2___awmod@dividend+1,c
 37199  0166B0  ECBE  F0C3         	call	i2___awmod	;wreg free
 37200  0166B4  90D8               	bcf	status,0,c
 37201  0166B6  3601               	rlcf	?i2___awmod,f,c
 37202  0166B8  3602               	rlcf	?i2___awmod+1,f,c
 37203  0166BA  90D8               	bcf	status,0,c
 37204  0166BC  3601               	rlcf	?i2___awmod,f,c
 37205  0166BE  3602               	rlcf	?i2___awmod+1,f,c
 37206  0166C0  0E75               	movlw	low __npowers_
 37207  0166C2  2401               	addwf	?i2___awmod,w,c
 37208  0166C4  6EF6               	movwf	tblptrl,c
 37209  0166C6  0ED7               	movlw	high __npowers_
 37210  0166C8  2002               	addwfc	?i2___awmod+1,w,c
 37211  0166CA  6EF7               	movwf	tblptrh,c
 37212  0166CC                     	if	1	;There are 3 active tblptr bytes
 37213  0166CC  6AF8               	clrf	tblptru,c
 37214  0166CE  0E00               	movlw	low (__mediumconst shr (0+16))
 37215  0166D0  22F8               	addwfc	tblptru,f,c
 37216  0166D2                     	endif
 37217  0166D2  0009               	tblrd		*+
 37218  0166D4  CFF5 F034          	movff	tablat,i2___flmul@a
 37219  0166D8  0009               	tblrd		*+
 37220  0166DA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 37221  0166DE  0009               	tblrd		*+
 37222  0166E0  CFF5 F036          	movff	tablat,i2___flmul@a+2
 37223  0166E4  000A               	tblrd		*-
 37224  0166E6  CFF5 F037          	movff	tablat,i2___flmul@a+3
 37225  0166EA  0E00               	movlw	0
 37226  0166EC  6E0A               	movwf	i2___awdiv@divisor+1,c
 37227  0166EE  0E0A               	movlw	10
 37228  0166F0  6E09               	movwf	i2___awdiv@divisor,c
 37229  0166F2  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 37230  0166F6  6A08               	clrf	i2___awdiv@dividend+1,c
 37231  0166F8  EC87  F0C2         	call	i2___awdiv	;wreg free
 37232  0166FC  90D8               	bcf	status,0,c
 37233  0166FE  3607               	rlcf	?i2___awdiv,f,c
 37234  016700  3608               	rlcf	?i2___awdiv+1,f,c
 37235  016702  90D8               	bcf	status,0,c
 37236  016704  3607               	rlcf	?i2___awdiv,f,c
 37237  016706  3608               	rlcf	?i2___awdiv+1,f,c
 37238  016708  0E24               	movlw	36
 37239  01670A  2607               	addwf	?i2___awdiv,f,c
 37240  01670C  0E00               	movlw	0
 37241  01670E  2208               	addwfc	?i2___awdiv+1,f,c
 37242  016710  0E75               	movlw	low __npowers_
 37243  016712  2407               	addwf	?i2___awdiv,w,c
 37244  016714  6EF6               	movwf	tblptrl,c
 37245  016716  0ED7               	movlw	high __npowers_
 37246  016718  2008               	addwfc	?i2___awdiv+1,w,c
 37247  01671A  6EF7               	movwf	tblptrh,c
 37248  01671C                     	if	1	;There are 3 active tblptr bytes
 37249  01671C  6AF8               	clrf	tblptru,c
 37250  01671E  0E00               	movlw	low (__mediumconst shr (0+16))
 37251  016720  22F8               	addwfc	tblptru,f,c
 37252  016722                     	endif
 37253  016722  0009               	tblrd		*+
 37254  016724  CFF5 F030          	movff	tablat,i2___flmul@b
 37255  016728  0009               	tblrd		*+
 37256  01672A  CFF5 F031          	movff	tablat,i2___flmul@b+1
 37257  01672E  0009               	tblrd		*+
 37258  016730  CFF5 F032          	movff	tablat,i2___flmul@b+2
 37259  016734  000A               	tblrd		*-
 37260  016736  CFF5 F033          	movff	tablat,i2___flmul@b+3
 37261  01673A  EC34  F0A5         	call	i2___flmul	;wreg free
 37262  01673E  C030  F051         	movff	?i2___flmul,i2_fround$4396
 37263  016742  C031  F052         	movff	?i2___flmul+1,i2_fround$4396+1
 37264  016746  C032  F053         	movff	?i2___flmul+2,i2_fround$4396+2
 37265  01674A  C033  F054         	movff	?i2___flmul+3,i2_fround$4396+3
 37266                           
 37267                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 37268  01674E  C051  F030         	movff	i2_fround$4396,i2___flmul@b
 37269  016752  C052  F031         	movff	i2_fround$4396+1,i2___flmul@b+1
 37270  016756  C053  F032         	movff	i2_fround$4396+2,i2___flmul@b+2
 37271  01675A  C054  F033         	movff	i2_fround$4396+3,i2___flmul@b+3
 37272  01675E  0E00               	movlw	0
 37273  016760  6E34               	movwf	i2___flmul@a,c
 37274  016762  0E00               	movlw	0
 37275  016764  6E35               	movwf	i2___flmul@a+1,c
 37276  016766  0E00               	movlw	0
 37277  016768  6E36               	movwf	i2___flmul@a+2,c
 37278  01676A  0E3F               	movlw	63
 37279  01676C  6E37               	movwf	i2___flmul@a+3,c
 37280  01676E  EC34  F0A5         	call	i2___flmul	;wreg free
 37281  016772  C030  F049         	movff	?i2___flmul,?i2_fround
 37282  016776  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 37283  01677A  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 37284  01677E  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 37285  016782  0012               	return	
 37286  016784                     i2l1531:
 37287                           
 37288                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 37289  016784  5055               	movf	i2fround@prec,w,c
 37290  016786  0D04               	mullw	4
 37291  016788  0E75               	movlw	low __npowers_
 37292  01678A  24F3               	addwf	prodl,w,c
 37293  01678C  6EF6               	movwf	tblptrl,c
 37294  01678E  0ED7               	movlw	high __npowers_
 37295  016790  20F4               	addwfc	prodh,w,c
 37296  016792  6EF7               	movwf	tblptrh,c
 37297  016794                     	if	1	;There are 3 active tblptr bytes
 37298  016794  6AF8               	clrf	tblptru,c
 37299  016796  0E00               	movlw	low (__mediumconst shr (0+16))
 37300  016798  22F8               	addwfc	tblptru,f,c
 37301  01679A                     	endif
 37302  01679A  0009               	tblrd		*+
 37303  01679C  CFF5 F030          	movff	tablat,i2___flmul@b
 37304  0167A0  0009               	tblrd		*+
 37305  0167A2  CFF5 F031          	movff	tablat,i2___flmul@b+1
 37306  0167A6  0009               	tblrd		*+
 37307  0167A8  CFF5 F032          	movff	tablat,i2___flmul@b+2
 37308  0167AC  000A               	tblrd		*-
 37309  0167AE  CFF5 F033          	movff	tablat,i2___flmul@b+3
 37310  0167B2  0E00               	movlw	0
 37311  0167B4  6E34               	movwf	i2___flmul@a,c
 37312  0167B6  0E00               	movlw	0
 37313  0167B8  6E35               	movwf	i2___flmul@a+1,c
 37314  0167BA  0E00               	movlw	0
 37315  0167BC  6E36               	movwf	i2___flmul@a+2,c
 37316  0167BE  0E3F               	movlw	63
 37317  0167C0  6E37               	movwf	i2___flmul@a+3,c
 37318  0167C2  EC34  F0A5         	call	i2___flmul	;wreg free
 37319  0167C6  C030  F049         	movff	?i2___flmul,?i2_fround
 37320  0167CA  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 37321  0167CE  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 37322  0167D2  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 37323  0167D6  0012               	return	
 37324  0167D8                     __end_ofi2_fround:
 37325                           	opt stack 0
 37326                           tosu	equ	0xFFF
 37327                           tosh	equ	0xFFE
 37328                           tosl	equ	0xFFD
 37329                           pclatu	equ	0xFFB
 37330                           pclath	equ	0xFFA
 37331                           tblptru	equ	0xFF8
 37332                           tblptrh	equ	0xFF7
 37333                           tblptrl	equ	0xFF6
 37334                           tablat	equ	0xFF5
 37335                           prodh	equ	0xFF4
 37336                           prodl	equ	0xFF3
 37337                           intcon	equ	0xFF2
 37338                           indf0	equ	0xFEF
 37339                           postinc0	equ	0xFEE
 37340                           fsr0h	equ	0xFEA
 37341                           fsr0l	equ	0xFE9
 37342                           wreg	equ	0xFE8
 37343                           indf1	equ	0xFE7
 37344                           postdec1	equ	0xFE5
 37345                           plusw1	equ	0xFE3
 37346                           fsr1h	equ	0xFE2
 37347                           fsr1l	equ	0xFE1
 37348                           bsr	equ	0xFE0
 37349                           indf2	equ	0xFDF
 37350                           postinc2	equ	0xFDE
 37351                           postdec2	equ	0xFDD
 37352                           plusw2	equ	0xFDB
 37353                           fsr2h	equ	0xFDA
 37354                           fsr2l	equ	0xFD9
 37355                           status	equ	0xFD8
 37356                           
 37357 ;; *************** function i2___awmod *****************
 37358 ;; Defined at:
 37359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 37360 ;; Parameters:    Size  Location     Type
 37361 ;;  dividend        2    0[COMRAM] int 
 37362 ;;  divisor         2    2[COMRAM] int 
 37363 ;; Auto vars:     Size  Location     Type
 37364 ;;  __awmod         1    5[COMRAM] unsigned char 
 37365 ;;  __awmod         1    4[COMRAM] unsigned char 
 37366 ;; Return value:  Size  Location     Type
 37367 ;;                  2    0[COMRAM] int 
 37368 ;; Registers used:
 37369 ;;		wreg, status,2, status,0
 37370 ;; Tracked objects:
 37371 ;;		On entry : 0/0
 37372 ;;		On exit  : 0/0
 37373 ;;		Unchanged: 0/0
 37374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37379 ;;Total ram usage:        6 bytes
 37380 ;; Hardware stack levels used:    1
 37381 ;; This function calls:
 37382 ;;		Nothing
 37383 ;; This function is called by:
 37384 ;;		i2_fround
 37385 ;;		i2_scale
 37386 ;; This function uses a non-reentrant model
 37387 ;;
 37388                           
 37389                           	psect	text109
 37390  01877C                     __ptext109:
 37391                           	opt stack 0
 37392  01877C                     i2___awmod:
 37393                           	opt stack 15
 37394                           
 37395                           ;incstack = 0
 37396  01877C  0E00               	movlw	0
 37397  01877E  6E06               	movwf	i2___awmod@sign,c
 37398  018780  AE02               	btfss	i2___awmod@dividend+1,7,c
 37399  018782  D006               	goto	i2l1917
 37400  018784  6C01               	negf	i2___awmod@dividend,c
 37401  018786  1E02               	comf	i2___awmod@dividend+1,f,c
 37402  018788  B0D8               	btfsc	status,0,c
 37403  01878A  2A02               	incf	i2___awmod@dividend+1,f,c
 37404  01878C  0E01               	movlw	1
 37405  01878E  6E06               	movwf	i2___awmod@sign,c
 37406  018790                     i2l1917:
 37407  018790  AE04               	btfss	i2___awmod@divisor+1,7,c
 37408  018792  D004               	goto	i2l1918
 37409  018794  6C03               	negf	i2___awmod@divisor,c
 37410  018796  1E04               	comf	i2___awmod@divisor+1,f,c
 37411  018798  B0D8               	btfsc	status,0,c
 37412  01879A  2A04               	incf	i2___awmod@divisor+1,f,c
 37413  01879C                     i2l1918:
 37414  01879C  5003               	movf	i2___awmod@divisor,w,c
 37415  01879E  1004               	iorwf	i2___awmod@divisor+1,w,c
 37416  0187A0  B4D8               	btfsc	status,2,c
 37417  0187A2  D018               	goto	i2l1925
 37418  0187A4  0E01               	movlw	1
 37419  0187A6  6E05               	movwf	i2___awmod@counter,c
 37420  0187A8  D004               	goto	i2l1920
 37421  0187AA  90D8               	bcf	status,0,c
 37422  0187AC  3603               	rlcf	i2___awmod@divisor,f,c
 37423  0187AE  3604               	rlcf	i2___awmod@divisor+1,f,c
 37424  0187B0  2A05               	incf	i2___awmod@counter,f,c
 37425  0187B2                     i2l1920:
 37426  0187B2  AE04               	btfss	i2___awmod@divisor+1,7,c
 37427  0187B4  D7FA               	goto	i2l1921
 37428  0187B6                     i2u1709_40:
 37429  0187B6  5003               	movf	i2___awmod@divisor,w,c
 37430  0187B8  5C01               	subwf	i2___awmod@dividend,w,c
 37431  0187BA  5004               	movf	i2___awmod@divisor+1,w,c
 37432  0187BC  5802               	subwfb	i2___awmod@dividend+1,w,c
 37433  0187BE  A0D8               	btfss	status,0,c
 37434  0187C0  D004               	goto	i2l1924
 37435  0187C2  5003               	movf	i2___awmod@divisor,w,c
 37436  0187C4  5E01               	subwf	i2___awmod@dividend,f,c
 37437  0187C6  5004               	movf	i2___awmod@divisor+1,w,c
 37438  0187C8  5A02               	subwfb	i2___awmod@dividend+1,f,c
 37439  0187CA                     i2l1924:
 37440  0187CA  90D8               	bcf	status,0,c
 37441  0187CC  3204               	rrcf	i2___awmod@divisor+1,f,c
 37442  0187CE  3203               	rrcf	i2___awmod@divisor,f,c
 37443  0187D0  2E05               	decfsz	i2___awmod@counter,f,c
 37444  0187D2  D7F1               	goto	i2u1709_40
 37445  0187D4                     i2l1925:
 37446  0187D4  5006               	movf	i2___awmod@sign,w,c
 37447  0187D6  B4D8               	btfsc	status,2,c
 37448  0187D8  D004               	goto	i2l1926
 37449  0187DA  6C01               	negf	i2___awmod@dividend,c
 37450  0187DC  1E02               	comf	i2___awmod@dividend+1,f,c
 37451  0187DE  B0D8               	btfsc	status,0,c
 37452  0187E0  2A02               	incf	i2___awmod@dividend+1,f,c
 37453  0187E2                     i2l1926:
 37454  0187E2  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 37455  0187E6  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 37456  0187EA  0012               	return	
 37457  0187EC                     __end_ofi2___awmod:
 37458                           	opt stack 0
 37459                           tosu	equ	0xFFF
 37460                           tosh	equ	0xFFE
 37461                           tosl	equ	0xFFD
 37462                           pclatu	equ	0xFFB
 37463                           pclath	equ	0xFFA
 37464                           tblptru	equ	0xFF8
 37465                           tblptrh	equ	0xFF7
 37466                           tblptrl	equ	0xFF6
 37467                           tablat	equ	0xFF5
 37468                           prodh	equ	0xFF4
 37469                           prodl	equ	0xFF3
 37470                           intcon	equ	0xFF2
 37471                           indf0	equ	0xFEF
 37472                           postinc0	equ	0xFEE
 37473                           fsr0h	equ	0xFEA
 37474                           fsr0l	equ	0xFE9
 37475                           wreg	equ	0xFE8
 37476                           indf1	equ	0xFE7
 37477                           postdec1	equ	0xFE5
 37478                           plusw1	equ	0xFE3
 37479                           fsr1h	equ	0xFE2
 37480                           fsr1l	equ	0xFE1
 37481                           bsr	equ	0xFE0
 37482                           indf2	equ	0xFDF
 37483                           postinc2	equ	0xFDE
 37484                           postdec2	equ	0xFDD
 37485                           plusw2	equ	0xFDB
 37486                           fsr2h	equ	0xFDA
 37487                           fsr2l	equ	0xFD9
 37488                           status	equ	0xFD8
 37489                           
 37490 ;; *************** function i2___awdiv *****************
 37491 ;; Defined at:
 37492 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 37493 ;; Parameters:    Size  Location     Type
 37494 ;;  dividend        2    6[COMRAM] int 
 37495 ;;  divisor         2    8[COMRAM] int 
 37496 ;; Auto vars:     Size  Location     Type
 37497 ;;  __awdiv         2   12[COMRAM] int 
 37498 ;;  __awdiv         1   11[COMRAM] unsigned char 
 37499 ;;  __awdiv         1   10[COMRAM] unsigned char 
 37500 ;; Return value:  Size  Location     Type
 37501 ;;                  2    6[COMRAM] int 
 37502 ;; Registers used:
 37503 ;;		wreg, status,2, status,0
 37504 ;; Tracked objects:
 37505 ;;		On entry : 0/0
 37506 ;;		On exit  : 0/0
 37507 ;;		Unchanged: 0/0
 37508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37512 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37513 ;;Total ram usage:        8 bytes
 37514 ;; Hardware stack levels used:    1
 37515 ;; This function calls:
 37516 ;;		Nothing
 37517 ;; This function is called by:
 37518 ;;		i2_fround
 37519 ;;		i2_scale
 37520 ;;		i2_printf
 37521 ;; This function uses a non-reentrant model
 37522 ;;
 37523                           
 37524                           	psect	text110
 37525  01850E                     __ptext110:
 37526                           	opt stack 0
 37527  01850E                     i2___awdiv:
 37528                           	opt stack 15
 37529                           
 37530                           ;incstack = 0
 37531  01850E  0E00               	movlw	0
 37532  018510  6E0C               	movwf	i2___awdiv@sign,c
 37533  018512  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 37534  018514  D006               	goto	i2l1904
 37535  018516  6C09               	negf	i2___awdiv@divisor,c
 37536  018518  1E0A               	comf	i2___awdiv@divisor+1,f,c
 37537  01851A  B0D8               	btfsc	status,0,c
 37538  01851C  2A0A               	incf	i2___awdiv@divisor+1,f,c
 37539  01851E  0E01               	movlw	1
 37540  018520  6E0C               	movwf	i2___awdiv@sign,c
 37541  018522                     i2l1904:
 37542  018522  AE08               	btfss	i2___awdiv@dividend+1,7,c
 37543  018524  D006               	goto	i2l1905
 37544  018526  6C07               	negf	i2___awdiv@dividend,c
 37545  018528  1E08               	comf	i2___awdiv@dividend+1,f,c
 37546  01852A  B0D8               	btfsc	status,0,c
 37547  01852C  2A08               	incf	i2___awdiv@dividend+1,f,c
 37548  01852E  0E01               	movlw	1
 37549  018530  1A0C               	xorwf	i2___awdiv@sign,f,c
 37550  018532                     i2l1905:
 37551  018532  0E00               	movlw	0
 37552  018534  6E0E               	movwf	i2___awdiv@quotient+1,c
 37553  018536  0E00               	movlw	0
 37554  018538  6E0D               	movwf	i2___awdiv@quotient,c
 37555  01853A  5009               	movf	i2___awdiv@divisor,w,c
 37556  01853C  100A               	iorwf	i2___awdiv@divisor+1,w,c
 37557  01853E  B4D8               	btfsc	status,2,c
 37558  018540  D01C               	goto	i2l1912
 37559  018542  0E01               	movlw	1
 37560  018544  6E0B               	movwf	i2___awdiv@counter,c
 37561  018546  D004               	goto	i2l1907
 37562  018548  90D8               	bcf	status,0,c
 37563  01854A  3609               	rlcf	i2___awdiv@divisor,f,c
 37564  01854C  360A               	rlcf	i2___awdiv@divisor+1,f,c
 37565  01854E  2A0B               	incf	i2___awdiv@counter,f,c
 37566  018550                     i2l1907:
 37567  018550  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 37568  018552  D7FA               	goto	i2l1908
 37569  018554                     i2u1703_40:
 37570  018554  90D8               	bcf	status,0,c
 37571  018556  360D               	rlcf	i2___awdiv@quotient,f,c
 37572  018558  360E               	rlcf	i2___awdiv@quotient+1,f,c
 37573  01855A  5009               	movf	i2___awdiv@divisor,w,c
 37574  01855C  5C07               	subwf	i2___awdiv@dividend,w,c
 37575  01855E  500A               	movf	i2___awdiv@divisor+1,w,c
 37576  018560  5808               	subwfb	i2___awdiv@dividend+1,w,c
 37577  018562  A0D8               	btfss	status,0,c
 37578  018564  D005               	goto	i2l1911
 37579  018566  5009               	movf	i2___awdiv@divisor,w,c
 37580  018568  5E07               	subwf	i2___awdiv@dividend,f,c
 37581  01856A  500A               	movf	i2___awdiv@divisor+1,w,c
 37582  01856C  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 37583  01856E  800D               	bsf	i2___awdiv@quotient,0,c
 37584  018570                     i2l1911:
 37585  018570  90D8               	bcf	status,0,c
 37586  018572  320A               	rrcf	i2___awdiv@divisor+1,f,c
 37587  018574  3209               	rrcf	i2___awdiv@divisor,f,c
 37588  018576  2E0B               	decfsz	i2___awdiv@counter,f,c
 37589  018578  D7ED               	goto	i2u1703_40
 37590  01857A                     i2l1912:
 37591  01857A  500C               	movf	i2___awdiv@sign,w,c
 37592  01857C  B4D8               	btfsc	status,2,c
 37593  01857E  D004               	goto	i2l1913
 37594  018580  6C0D               	negf	i2___awdiv@quotient,c
 37595  018582  1E0E               	comf	i2___awdiv@quotient+1,f,c
 37596  018584  B0D8               	btfsc	status,0,c
 37597  018586  2A0E               	incf	i2___awdiv@quotient+1,f,c
 37598  018588                     i2l1913:
 37599  018588  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 37600  01858C  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 37601  018590  0012               	return	
 37602  018592                     __end_ofi2___awdiv:
 37603                           	opt stack 0
 37604                           tosu	equ	0xFFF
 37605                           tosh	equ	0xFFE
 37606                           tosl	equ	0xFFD
 37607                           pclatu	equ	0xFFB
 37608                           pclath	equ	0xFFA
 37609                           tblptru	equ	0xFF8
 37610                           tblptrh	equ	0xFF7
 37611                           tblptrl	equ	0xFF6
 37612                           tablat	equ	0xFF5
 37613                           prodh	equ	0xFF4
 37614                           prodl	equ	0xFF3
 37615                           intcon	equ	0xFF2
 37616                           indf0	equ	0xFEF
 37617                           postinc0	equ	0xFEE
 37618                           fsr0h	equ	0xFEA
 37619                           fsr0l	equ	0xFE9
 37620                           wreg	equ	0xFE8
 37621                           indf1	equ	0xFE7
 37622                           postdec1	equ	0xFE5
 37623                           plusw1	equ	0xFE3
 37624                           fsr1h	equ	0xFE2
 37625                           fsr1l	equ	0xFE1
 37626                           bsr	equ	0xFE0
 37627                           indf2	equ	0xFDF
 37628                           postinc2	equ	0xFDE
 37629                           postdec2	equ	0xFDD
 37630                           plusw2	equ	0xFDB
 37631                           fsr2h	equ	0xFDA
 37632                           fsr2l	equ	0xFD9
 37633                           status	equ	0xFD8
 37634                           
 37635 ;; *************** function i2__tdiv_to_l_ *****************
 37636 ;; Defined at:
 37637 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 37638 ;; Parameters:    Size  Location     Type
 37639 ;;  f1              3    0[COMRAM] float 
 37640 ;;  f2              3    3[COMRAM] float 
 37641 ;; Auto vars:     Size  Location     Type
 37642 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 37643 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 37644 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 37645 ;; Return value:  Size  Location     Type
 37646 ;;                  4    0[COMRAM] unsigned long 
 37647 ;; Registers used:
 37648 ;;		wreg, status,2, status,0
 37649 ;; Tracked objects:
 37650 ;;		On entry : 0/0
 37651 ;;		On exit  : 0/0
 37652 ;;		Unchanged: 0/0
 37653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37654 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37655 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37656 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37657 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37658 ;;Total ram usage:       15 bytes
 37659 ;; Hardware stack levels used:    1
 37660 ;; This function calls:
 37661 ;;		Nothing
 37662 ;; This function is called by:
 37663 ;;		i2_printf
 37664 ;; This function uses a non-reentrant model
 37665 ;;
 37666                           
 37667                           	psect	text111
 37668  0173CC                     __ptext111:
 37669                           	opt stack 0
 37670  0173CC                     i2__tdiv_to_l_:
 37671                           	opt stack 16
 37672                           
 37673                           ;incstack = 0
 37674  0173CC  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 37675  0173D0  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 37676  0173D2  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 37677  0173D4  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 37678  0173D6  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 37679  0173D8  E301               	bnc	u1770_41
 37680  0173DA  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 37681  0173DC                     u1770_41:
 37682  0173DC  5007               	movf	??i2__tdiv_to_l_,w,c
 37683  0173DE  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 37684  0173E0  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 37685  0173E2  A4D8               	btfss	status,2,c
 37686  0173E4  D009               	goto	i2l2052
 37687  0173E6  0E00               	movlw	0
 37688  0173E8  6E01               	movwf	?i2__tdiv_to_l_,c
 37689  0173EA  0E00               	movlw	0
 37690  0173EC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 37691  0173EE  0E00               	movlw	0
 37692  0173F0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 37693  0173F2  0E00               	movlw	0
 37694  0173F4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 37695  0173F6  0012               	return	
 37696  0173F8                     i2l2052:
 37697  0173F8  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 37698  0173FC  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 37699  0173FE  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 37700  017400  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 37701  017402  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 37702  017404  E301               	bnc	u1772_41
 37703  017406  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 37704  017408                     u1772_41:
 37705  017408  5007               	movf	??i2__tdiv_to_l_,w,c
 37706  01740A  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 37707  01740C  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 37708  01740E  A4D8               	btfss	status,2,c
 37709  017410  D009               	goto	i2l2054
 37710  017412  0E00               	movlw	0
 37711  017414  6E01               	movwf	?i2__tdiv_to_l_,c
 37712  017416  0E00               	movlw	0
 37713  017418  6E02               	movwf	?i2__tdiv_to_l_+1,c
 37714  01741A  0E00               	movlw	0
 37715  01741C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 37716  01741E  0E00               	movlw	0
 37717  017420  6E04               	movwf	?i2__tdiv_to_l_+3,c
 37718  017422  0012               	return	
 37719  017424                     i2l2054:
 37720  017424  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 37721  017426  0EFF               	movlw	255
 37722  017428  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 37723  01742A  0EFF               	movlw	255
 37724  01742C  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 37725  01742E  0E00               	movlw	0
 37726  017430  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 37727  017432  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 37728  017434  0EFF               	movlw	255
 37729  017436  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 37730  017438  0EFF               	movlw	255
 37731  01743A  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 37732  01743C  0E00               	movlw	0
 37733  01743E  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 37734  017440  0E00               	movlw	0
 37735  017442  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 37736  017444  0E00               	movlw	0
 37737  017446  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 37738  017448  0E00               	movlw	0
 37739  01744A  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 37740  01744C  0E00               	movlw	0
 37741  01744E  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 37742  017450  0E7F               	movlw	127
 37743  017452  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 37744  017454  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 37745  017456  0F98               	addlw	152
 37746  017458  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 37747  01745A  0E18               	movlw	24
 37748  01745C  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 37749  01745E                     i2l2055:
 37750  01745E  90D8               	bcf	status,0,c
 37751  017460  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 37752  017462  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 37753  017464  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 37754  017466  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 37755  017468  5004               	movf	i2__tdiv_to_l_@f2,w,c
 37756  01746A  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 37757  01746C  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 37758  01746E  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 37759  017470  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 37760  017472  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 37761  017474  A0D8               	btfss	status,0,c
 37762  017476  D007               	goto	i2l2056
 37763  017478  5004               	movf	i2__tdiv_to_l_@f2,w,c
 37764  01747A  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 37765  01747C  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 37766  01747E  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 37767  017480  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 37768  017482  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 37769  017484  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 37770  017486                     i2l2056:
 37771  017486  90D8               	bcf	status,0,c
 37772  017488  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 37773  01748A  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 37774  01748C  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 37775  01748E  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 37776  017490  D7E6               	goto	i2l2055
 37777  017492  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 37778  017494  D016               	goto	i2l2058
 37779  017496  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 37780  017498  0A80               	xorlw	128
 37781  01749A  0F97               	addlw	151
 37782  01749C  B0D8               	btfsc	status,0,c
 37783  01749E  D009               	goto	i2l2059
 37784  0174A0  0E00               	movlw	0
 37785  0174A2  6E01               	movwf	?i2__tdiv_to_l_,c
 37786  0174A4  0E00               	movlw	0
 37787  0174A6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 37788  0174A8  0E00               	movlw	0
 37789  0174AA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 37790  0174AC  0E00               	movlw	0
 37791  0174AE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 37792  0174B0  0012               	return	
 37793  0174B2                     i2l2059:
 37794  0174B2  90D8               	bcf	status,0,c
 37795  0174B4  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 37796  0174B6  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 37797  0174B8  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 37798  0174BA  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 37799  0174BC  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 37800  0174BE  D7F9               	goto	i2l2059
 37801  0174C0  D015               	goto	i2u1778_40
 37802  0174C2                     i2l2058:
 37803  0174C2  0E17               	movlw	23
 37804  0174C4  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 37805  0174C6  D00F               	goto	i2l2064
 37806  0174C8  0E00               	movlw	0
 37807  0174CA  6E01               	movwf	?i2__tdiv_to_l_,c
 37808  0174CC  0E00               	movlw	0
 37809  0174CE  6E02               	movwf	?i2__tdiv_to_l_+1,c
 37810  0174D0  0E00               	movlw	0
 37811  0174D2  6E03               	movwf	?i2__tdiv_to_l_+2,c
 37812  0174D4  0E00               	movlw	0
 37813  0174D6  6E04               	movwf	?i2__tdiv_to_l_+3,c
 37814  0174D8  0012               	return	
 37815  0174DA  90D8               	bcf	status,0,c
 37816  0174DC  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 37817  0174DE  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 37818  0174E0  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 37819  0174E2  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 37820  0174E4  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 37821  0174E6                     i2l2064:
 37822  0174E6  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 37823  0174E8  A4D8               	btfss	status,2,c
 37824  0174EA  D7F7               	goto	i2l2065
 37825  0174EC                     i2u1778_40:
 37826  0174EC  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 37827  0174F0  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 37828  0174F4  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 37829  0174F8  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 37830  0174FC  0012               	return		;funcret
 37831  0174FE                     __end_ofi2__tdiv_to_l_:
 37832                           	opt stack 0
 37833                           tosu	equ	0xFFF
 37834                           tosh	equ	0xFFE
 37835                           tosl	equ	0xFFD
 37836                           pclatu	equ	0xFFB
 37837                           pclath	equ	0xFFA
 37838                           tblptru	equ	0xFF8
 37839                           tblptrh	equ	0xFF7
 37840                           tblptrl	equ	0xFF6
 37841                           tablat	equ	0xFF5
 37842                           prodh	equ	0xFF4
 37843                           prodl	equ	0xFF3
 37844                           intcon	equ	0xFF2
 37845                           indf0	equ	0xFEF
 37846                           postinc0	equ	0xFEE
 37847                           fsr0h	equ	0xFEA
 37848                           fsr0l	equ	0xFE9
 37849                           wreg	equ	0xFE8
 37850                           indf1	equ	0xFE7
 37851                           postdec1	equ	0xFE5
 37852                           plusw1	equ	0xFE3
 37853                           fsr1h	equ	0xFE2
 37854                           fsr1l	equ	0xFE1
 37855                           bsr	equ	0xFE0
 37856                           indf2	equ	0xFDF
 37857                           postinc2	equ	0xFDE
 37858                           postdec2	equ	0xFDD
 37859                           plusw2	equ	0xFDB
 37860                           fsr2h	equ	0xFDA
 37861                           fsr2l	equ	0xFD9
 37862                           status	equ	0xFD8
 37863                           
 37864 ;; *************** function i2__div_to_l_ *****************
 37865 ;; Defined at:
 37866 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 37867 ;; Parameters:    Size  Location     Type
 37868 ;;  f1              4    0[COMRAM] unsigned long 
 37869 ;;  f2              4    4[COMRAM] unsigned long 
 37870 ;; Auto vars:     Size  Location     Type
 37871 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 37872 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 37873 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 37874 ;; Return value:  Size  Location     Type
 37875 ;;                  4    0[COMRAM] unsigned long 
 37876 ;; Registers used:
 37877 ;;		wreg, status,2, status,0
 37878 ;; Tracked objects:
 37879 ;;		On entry : 0/0
 37880 ;;		On exit  : 0/0
 37881 ;;		Unchanged: 0/0
 37882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37883 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37884 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37886 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37887 ;;Total ram usage:       14 bytes
 37888 ;; Hardware stack levels used:    1
 37889 ;; This function calls:
 37890 ;;		Nothing
 37891 ;; This function is called by:
 37892 ;;		i2_printf
 37893 ;; This function uses a non-reentrant model
 37894 ;;
 37895                           
 37896                           	psect	text112
 37897  017628                     __ptext112:
 37898                           	opt stack 0
 37899  017628                     i2__div_to_l_:
 37900                           	opt stack 16
 37901                           
 37902                           ;incstack = 0
 37903  017628  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 37904  01762A  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 37905  01762C  6E0E               	movwf	i2__div_to_l_@exp1,c
 37906  01762E  500E               	movf	i2__div_to_l_@exp1,w,c
 37907  017630  A4D8               	btfss	status,2,c
 37908  017632  D009               	goto	i2l1948
 37909  017634  0E00               	movlw	0
 37910  017636  6E01               	movwf	?i2__div_to_l_,c
 37911  017638  0E00               	movlw	0
 37912  01763A  6E02               	movwf	?i2__div_to_l_+1,c
 37913  01763C  0E00               	movlw	0
 37914  01763E  6E03               	movwf	?i2__div_to_l_+2,c
 37915  017640  0E00               	movlw	0
 37916  017642  6E04               	movwf	?i2__div_to_l_+3,c
 37917  017644  0012               	return	
 37918  017646                     i2l1948:
 37919  017646  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 37920  017648  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 37921  01764A  6E0D               	movwf	i2__div_to_l_@cntr,c
 37922  01764C  500D               	movf	i2__div_to_l_@cntr,w,c
 37923  01764E  A4D8               	btfss	status,2,c
 37924  017650  D009               	goto	i2l1950
 37925  017652  0E00               	movlw	0
 37926  017654  6E01               	movwf	?i2__div_to_l_,c
 37927  017656  0E00               	movlw	0
 37928  017658  6E02               	movwf	?i2__div_to_l_+1,c
 37929  01765A  0E00               	movlw	0
 37930  01765C  6E03               	movwf	?i2__div_to_l_+2,c
 37931  01765E  0E00               	movlw	0
 37932  017660  6E04               	movwf	?i2__div_to_l_+3,c
 37933  017662  0012               	return	
 37934  017664                     i2l1950:
 37935  017664  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 37936  017666  0EFF               	movlw	255
 37937  017668  1601               	andwf	i2__div_to_l_@f1,f,c
 37938  01766A  0EFF               	movlw	255
 37939  01766C  1602               	andwf	i2__div_to_l_@f1+1,f,c
 37940  01766E  0EFF               	movlw	255
 37941  017670  1603               	andwf	i2__div_to_l_@f1+2,f,c
 37942  017672  0E00               	movlw	0
 37943  017674  1604               	andwf	i2__div_to_l_@f1+3,f,c
 37944  017676  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 37945  017678  0EFF               	movlw	255
 37946  01767A  1605               	andwf	i2__div_to_l_@f2,f,c
 37947  01767C  0EFF               	movlw	255
 37948  01767E  1606               	andwf	i2__div_to_l_@f2+1,f,c
 37949  017680  0EFF               	movlw	255
 37950  017682  1607               	andwf	i2__div_to_l_@f2+2,f,c
 37951  017684  0E00               	movlw	0
 37952  017686  1608               	andwf	i2__div_to_l_@f2+3,f,c
 37953  017688  0E00               	movlw	0
 37954  01768A  6E09               	movwf	i2__div_to_l_@quot,c
 37955  01768C  0E00               	movlw	0
 37956  01768E  6E0A               	movwf	i2__div_to_l_@quot+1,c
 37957  017690  0E00               	movlw	0
 37958  017692  6E0B               	movwf	i2__div_to_l_@quot+2,c
 37959  017694  0E00               	movlw	0
 37960  017696  6E0C               	movwf	i2__div_to_l_@quot+3,c
 37961  017698  0E7F               	movlw	127
 37962  01769A  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 37963  01769C  500D               	movf	i2__div_to_l_@cntr,w,c
 37964  01769E  0FA0               	addlw	160
 37965  0176A0  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 37966  0176A2  0E20               	movlw	32
 37967  0176A4  6E0D               	movwf	i2__div_to_l_@cntr,c
 37968  0176A6  90D8               	bcf	status,0,c
 37969  0176A8  3609               	rlcf	i2__div_to_l_@quot,f,c
 37970  0176AA  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 37971  0176AC  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 37972  0176AE  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 37973  0176B0  5005               	movf	i2__div_to_l_@f2,w,c
 37974  0176B2  5C01               	subwf	i2__div_to_l_@f1,w,c
 37975  0176B4  5006               	movf	i2__div_to_l_@f2+1,w,c
 37976  0176B6  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 37977  0176B8  5007               	movf	i2__div_to_l_@f2+2,w,c
 37978  0176BA  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 37979  0176BC  5008               	movf	i2__div_to_l_@f2+3,w,c
 37980  0176BE  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 37981  0176C0  A0D8               	btfss	status,0,c
 37982  0176C2  D009               	goto	i2l1952
 37983  0176C4  5005               	movf	i2__div_to_l_@f2,w,c
 37984  0176C6  5E01               	subwf	i2__div_to_l_@f1,f,c
 37985  0176C8  5006               	movf	i2__div_to_l_@f2+1,w,c
 37986  0176CA  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 37987  0176CC  5007               	movf	i2__div_to_l_@f2+2,w,c
 37988  0176CE  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 37989  0176D0  5008               	movf	i2__div_to_l_@f2+3,w,c
 37990  0176D2  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 37991  0176D4  8009               	bsf	i2__div_to_l_@quot,0,c
 37992  0176D6                     i2l1952:
 37993  0176D6  90D8               	bcf	status,0,c
 37994  0176D8  3601               	rlcf	i2__div_to_l_@f1,f,c
 37995  0176DA  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 37996  0176DC  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 37997  0176DE  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 37998  0176E0  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 37999  0176E2  D7E1               	goto	i2l1951
 38000  0176E4  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 38001  0176E6  D016               	goto	i2l1954
 38002  0176E8  500E               	movf	i2__div_to_l_@exp1,w,c
 38003  0176EA  0A80               	xorlw	128
 38004  0176EC  0F9F               	addlw	159
 38005  0176EE  B0D8               	btfsc	status,0,c
 38006  0176F0  D009               	goto	i2l1955
 38007  0176F2  0E00               	movlw	0
 38008  0176F4  6E01               	movwf	?i2__div_to_l_,c
 38009  0176F6  0E00               	movlw	0
 38010  0176F8  6E02               	movwf	?i2__div_to_l_+1,c
 38011  0176FA  0E00               	movlw	0
 38012  0176FC  6E03               	movwf	?i2__div_to_l_+2,c
 38013  0176FE  0E00               	movlw	0
 38014  017700  6E04               	movwf	?i2__div_to_l_+3,c
 38015  017702  0012               	return	
 38016  017704                     i2l1955:
 38017  017704  90D8               	bcf	status,0,c
 38018  017706  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 38019  017708  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 38020  01770A  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 38021  01770C  3209               	rrcf	i2__div_to_l_@quot,f,c
 38022  01770E  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 38023  017710  D7F9               	goto	i2l1955
 38024  017712  D015               	goto	i2u1769_40
 38025  017714                     i2l1954:
 38026  017714  0E1F               	movlw	31
 38027  017716  640E               	cpfsgt	i2__div_to_l_@exp1,c
 38028  017718  D00F               	goto	i2l1960
 38029  01771A  0E00               	movlw	0
 38030  01771C  6E01               	movwf	?i2__div_to_l_,c
 38031  01771E  0E00               	movlw	0
 38032  017720  6E02               	movwf	?i2__div_to_l_+1,c
 38033  017722  0E00               	movlw	0
 38034  017724  6E03               	movwf	?i2__div_to_l_+2,c
 38035  017726  0E00               	movlw	0
 38036  017728  6E04               	movwf	?i2__div_to_l_+3,c
 38037  01772A  0012               	return	
 38038  01772C  90D8               	bcf	status,0,c
 38039  01772E  3609               	rlcf	i2__div_to_l_@quot,f,c
 38040  017730  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 38041  017732  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 38042  017734  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 38043  017736  060E               	decf	i2__div_to_l_@exp1,f,c
 38044  017738                     i2l1960:
 38045  017738  500E               	movf	i2__div_to_l_@exp1,w,c
 38046  01773A  A4D8               	btfss	status,2,c
 38047  01773C  D7F7               	goto	i2l1961
 38048  01773E                     i2u1769_40:
 38049  01773E  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 38050  017742  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 38051  017746  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 38052  01774A  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 38053  01774E  0012               	return		;funcret
 38054  017750                     __end_ofi2__div_to_l_:
 38055                           	opt stack 0
 38056                           tosu	equ	0xFFF
 38057                           tosh	equ	0xFFE
 38058                           tosl	equ	0xFFD
 38059                           pclatu	equ	0xFFB
 38060                           pclath	equ	0xFFA
 38061                           tblptru	equ	0xFF8
 38062                           tblptrh	equ	0xFF7
 38063                           tblptrl	equ	0xFF6
 38064                           tablat	equ	0xFF5
 38065                           prodh	equ	0xFF4
 38066                           prodl	equ	0xFF3
 38067                           intcon	equ	0xFF2
 38068                           indf0	equ	0xFEF
 38069                           postinc0	equ	0xFEE
 38070                           fsr0h	equ	0xFEA
 38071                           fsr0l	equ	0xFE9
 38072                           wreg	equ	0xFE8
 38073                           indf1	equ	0xFE7
 38074                           postdec1	equ	0xFE5
 38075                           plusw1	equ	0xFE3
 38076                           fsr1h	equ	0xFE2
 38077                           fsr1l	equ	0xFE1
 38078                           bsr	equ	0xFE0
 38079                           indf2	equ	0xFDF
 38080                           postinc2	equ	0xFDE
 38081                           postdec2	equ	0xFDD
 38082                           plusw2	equ	0xFDB
 38083                           fsr2h	equ	0xFDA
 38084                           fsr2l	equ	0xFD9
 38085                           status	equ	0xFD8
 38086                           
 38087 ;; *************** function i2___wmul *****************
 38088 ;; Defined at:
 38089 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 38090 ;; Parameters:    Size  Location     Type
 38091 ;;  multiplier      2    0[COMRAM] unsigned int 
 38092 ;;  multiplicand    2    2[COMRAM] unsigned int 
 38093 ;; Auto vars:     Size  Location     Type
 38094 ;;  __wmul          2    4[COMRAM] unsigned int 
 38095 ;; Return value:  Size  Location     Type
 38096 ;;                  2    0[COMRAM] unsigned int 
 38097 ;; Registers used:
 38098 ;;		wreg, status,2, status,0, prodl, prodh
 38099 ;; Tracked objects:
 38100 ;;		On entry : 0/0
 38101 ;;		On exit  : 0/0
 38102 ;;		Unchanged: 0/0
 38103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38108 ;;Total ram usage:        6 bytes
 38109 ;; Hardware stack levels used:    1
 38110 ;; This function calls:
 38111 ;;		Nothing
 38112 ;; This function is called by:
 38113 ;;		i2_printf
 38114 ;; This function uses a non-reentrant model
 38115 ;;
 38116                           
 38117                           	psect	text113
 38118  0193D4                     __ptext113:
 38119                           	opt stack 0
 38120  0193D4                     i2___wmul:
 38121                           	opt stack 16
 38122                           
 38123                           ;incstack = 0
 38124  0193D4  5001               	movf	i2___wmul@multiplier,w,c
 38125  0193D6  0203               	mulwf	i2___wmul@multiplicand,c
 38126  0193D8  CFF3 F005          	movff	prodl,i2___wmul@product
 38127  0193DC  CFF4 F006          	movff	prodh,i2___wmul@product+1
 38128  0193E0  5001               	movf	i2___wmul@multiplier,w,c
 38129  0193E2  0204               	mulwf	i2___wmul@multiplicand+1,c
 38130  0193E4  50F3               	movf	prodl,w,c
 38131  0193E6  2606               	addwf	i2___wmul@product+1,f,c
 38132  0193E8  5002               	movf	i2___wmul@multiplier+1,w,c
 38133  0193EA  0203               	mulwf	i2___wmul@multiplicand,c
 38134  0193EC  50F3               	movf	prodl,w,c
 38135  0193EE  2606               	addwf	i2___wmul@product+1,f,c
 38136  0193F0  C005  F001         	movff	i2___wmul@product,?i2___wmul
 38137  0193F4  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 38138  0193F8  0012               	return	
 38139  0193FA                     __end_ofi2___wmul:
 38140                           	opt stack 0
 38141                           tosu	equ	0xFFF
 38142                           tosh	equ	0xFFE
 38143                           tosl	equ	0xFFD
 38144                           pclatu	equ	0xFFB
 38145                           pclath	equ	0xFFA
 38146                           tblptru	equ	0xFF8
 38147                           tblptrh	equ	0xFF7
 38148                           tblptrl	equ	0xFF6
 38149                           tablat	equ	0xFF5
 38150                           prodh	equ	0xFF4
 38151                           prodl	equ	0xFF3
 38152                           intcon	equ	0xFF2
 38153                           indf0	equ	0xFEF
 38154                           postinc0	equ	0xFEE
 38155                           fsr0h	equ	0xFEA
 38156                           fsr0l	equ	0xFE9
 38157                           wreg	equ	0xFE8
 38158                           indf1	equ	0xFE7
 38159                           postdec1	equ	0xFE5
 38160                           plusw1	equ	0xFE3
 38161                           fsr1h	equ	0xFE2
 38162                           fsr1l	equ	0xFE1
 38163                           bsr	equ	0xFE0
 38164                           indf2	equ	0xFDF
 38165                           postinc2	equ	0xFDE
 38166                           postdec2	equ	0xFDD
 38167                           plusw2	equ	0xFDB
 38168                           fsr2h	equ	0xFDA
 38169                           fsr2l	equ	0xFD9
 38170                           status	equ	0xFD8
 38171                           
 38172 ;; *************** function i2___llmod *****************
 38173 ;; Defined at:
 38174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 38175 ;; Parameters:    Size  Location     Type
 38176 ;;  dividend        4   13[COMRAM] unsigned long 
 38177 ;;  divisor         4   17[COMRAM] unsigned long 
 38178 ;; Auto vars:     Size  Location     Type
 38179 ;;  __llmod         1   21[COMRAM] unsigned char 
 38180 ;; Return value:  Size  Location     Type
 38181 ;;                  4   13[COMRAM] unsigned long 
 38182 ;; Registers used:
 38183 ;;		wreg, status,2, status,0
 38184 ;; Tracked objects:
 38185 ;;		On entry : 0/0
 38186 ;;		On exit  : 0/0
 38187 ;;		Unchanged: 0/0
 38188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38189 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38192 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38193 ;;Total ram usage:        9 bytes
 38194 ;; Hardware stack levels used:    1
 38195 ;; This function calls:
 38196 ;;		Nothing
 38197 ;; This function is called by:
 38198 ;;		i2_printf
 38199 ;; This function uses a non-reentrant model
 38200 ;;
 38201                           
 38202                           	psect	text114
 38203  018994                     __ptext114:
 38204                           	opt stack 0
 38205  018994                     i2___llmod:
 38206                           	opt stack 16
 38207                           
 38208                           ;incstack = 0
 38209  018994  5012               	movf	i2___llmod@divisor,w,c
 38210  018996  1013               	iorwf	i2___llmod@divisor+1,w,c
 38211  018998  1014               	iorwf	i2___llmod@divisor+2,w,c
 38212  01899A  1015               	iorwf	i2___llmod@divisor+3,w,c
 38213  01899C  B4D8               	btfsc	status,2,c
 38214  01899E  D024               	goto	i2l2153
 38215  0189A0  0E01               	movlw	1
 38216  0189A2  6E16               	movwf	i2___llmod@counter,c
 38217  0189A4  D006               	goto	i2l2148
 38218  0189A6  90D8               	bcf	status,0,c
 38219  0189A8  3612               	rlcf	i2___llmod@divisor,f,c
 38220  0189AA  3613               	rlcf	i2___llmod@divisor+1,f,c
 38221  0189AC  3614               	rlcf	i2___llmod@divisor+2,f,c
 38222  0189AE  3615               	rlcf	i2___llmod@divisor+3,f,c
 38223  0189B0  2A16               	incf	i2___llmod@counter,f,c
 38224  0189B2                     i2l2148:
 38225  0189B2  AE15               	btfss	i2___llmod@divisor+3,7,c
 38226  0189B4  D7F8               	goto	i2l2149
 38227  0189B6                     i2u1785_40:
 38228  0189B6  5012               	movf	i2___llmod@divisor,w,c
 38229  0189B8  5C0E               	subwf	i2___llmod@dividend,w,c
 38230  0189BA  5013               	movf	i2___llmod@divisor+1,w,c
 38231  0189BC  580F               	subwfb	i2___llmod@dividend+1,w,c
 38232  0189BE  5014               	movf	i2___llmod@divisor+2,w,c
 38233  0189C0  5810               	subwfb	i2___llmod@dividend+2,w,c
 38234  0189C2  5015               	movf	i2___llmod@divisor+3,w,c
 38235  0189C4  5811               	subwfb	i2___llmod@dividend+3,w,c
 38236  0189C6  A0D8               	btfss	status,0,c
 38237  0189C8  D008               	goto	i2l2152
 38238  0189CA  5012               	movf	i2___llmod@divisor,w,c
 38239  0189CC  5E0E               	subwf	i2___llmod@dividend,f,c
 38240  0189CE  5013               	movf	i2___llmod@divisor+1,w,c
 38241  0189D0  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 38242  0189D2  5014               	movf	i2___llmod@divisor+2,w,c
 38243  0189D4  5A10               	subwfb	i2___llmod@dividend+2,f,c
 38244  0189D6  5015               	movf	i2___llmod@divisor+3,w,c
 38245  0189D8  5A11               	subwfb	i2___llmod@dividend+3,f,c
 38246  0189DA                     i2l2152:
 38247  0189DA  90D8               	bcf	status,0,c
 38248  0189DC  3215               	rrcf	i2___llmod@divisor+3,f,c
 38249  0189DE  3214               	rrcf	i2___llmod@divisor+2,f,c
 38250  0189E0  3213               	rrcf	i2___llmod@divisor+1,f,c
 38251  0189E2  3212               	rrcf	i2___llmod@divisor,f,c
 38252  0189E4  2E16               	decfsz	i2___llmod@counter,f,c
 38253  0189E6  D7E7               	goto	i2u1785_40
 38254  0189E8                     i2l2153:
 38255  0189E8  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 38256  0189EC  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 38257  0189F0  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 38258  0189F4  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 38259  0189F8  0012               	return		;funcret
 38260  0189FA                     __end_ofi2___llmod:
 38261                           	opt stack 0
 38262                           tosu	equ	0xFFF
 38263                           tosh	equ	0xFFE
 38264                           tosl	equ	0xFFD
 38265                           pclatu	equ	0xFFB
 38266                           pclath	equ	0xFFA
 38267                           tblptru	equ	0xFF8
 38268                           tblptrh	equ	0xFF7
 38269                           tblptrl	equ	0xFF6
 38270                           tablat	equ	0xFF5
 38271                           prodh	equ	0xFF4
 38272                           prodl	equ	0xFF3
 38273                           intcon	equ	0xFF2
 38274                           indf0	equ	0xFEF
 38275                           postinc0	equ	0xFEE
 38276                           fsr0h	equ	0xFEA
 38277                           fsr0l	equ	0xFE9
 38278                           wreg	equ	0xFE8
 38279                           indf1	equ	0xFE7
 38280                           postdec1	equ	0xFE5
 38281                           plusw1	equ	0xFE3
 38282                           fsr1h	equ	0xFE2
 38283                           fsr1l	equ	0xFE1
 38284                           bsr	equ	0xFE0
 38285                           indf2	equ	0xFDF
 38286                           postinc2	equ	0xFDE
 38287                           postdec2	equ	0xFDD
 38288                           plusw2	equ	0xFDB
 38289                           fsr2h	equ	0xFDA
 38290                           fsr2l	equ	0xFD9
 38291                           status	equ	0xFD8
 38292                           
 38293 ;; *************** function i2___lldiv *****************
 38294 ;; Defined at:
 38295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 38296 ;; Parameters:    Size  Location     Type
 38297 ;;  dividend        4    0[COMRAM] unsigned long 
 38298 ;;  divisor         4    4[COMRAM] unsigned long 
 38299 ;; Auto vars:     Size  Location     Type
 38300 ;;  __lldiv         4    8[COMRAM] unsigned long 
 38301 ;;  __lldiv         1   12[COMRAM] unsigned char 
 38302 ;; Return value:  Size  Location     Type
 38303 ;;                  4    0[COMRAM] unsigned long 
 38304 ;; Registers used:
 38305 ;;		wreg, status,2, status,0
 38306 ;; Tracked objects:
 38307 ;;		On entry : 0/0
 38308 ;;		On exit  : 0/0
 38309 ;;		Unchanged: 0/0
 38310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38311 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38312 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38314 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38315 ;;Total ram usage:       13 bytes
 38316 ;; Hardware stack levels used:    1
 38317 ;; This function calls:
 38318 ;;		Nothing
 38319 ;; This function is called by:
 38320 ;;		i2_printf
 38321 ;; This function uses a non-reentrant model
 38322 ;;
 38323                           
 38324                           	psect	text115
 38325  018592                     __ptext115:
 38326                           	opt stack 0
 38327  018592                     i2___lldiv:
 38328                           	opt stack 16
 38329                           
 38330                           ;incstack = 0
 38331  018592  0E00               	movlw	0
 38332  018594  6E09               	movwf	i2___lldiv@quotient,c
 38333  018596  0E00               	movlw	0
 38334  018598  6E0A               	movwf	i2___lldiv@quotient+1,c
 38335  01859A  0E00               	movlw	0
 38336  01859C  6E0B               	movwf	i2___lldiv@quotient+2,c
 38337  01859E  0E00               	movlw	0
 38338  0185A0  6E0C               	movwf	i2___lldiv@quotient+3,c
 38339  0185A2  5005               	movf	i2___lldiv@divisor,w,c
 38340  0185A4  1006               	iorwf	i2___lldiv@divisor+1,w,c
 38341  0185A6  1007               	iorwf	i2___lldiv@divisor+2,w,c
 38342  0185A8  1008               	iorwf	i2___lldiv@divisor+3,w,c
 38343  0185AA  B4D8               	btfsc	status,2,c
 38344  0185AC  D02A               	goto	i2l2143
 38345  0185AE  0E01               	movlw	1
 38346  0185B0  6E0D               	movwf	i2___lldiv@counter,c
 38347  0185B2  D006               	goto	i2l2138
 38348  0185B4  90D8               	bcf	status,0,c
 38349  0185B6  3605               	rlcf	i2___lldiv@divisor,f,c
 38350  0185B8  3606               	rlcf	i2___lldiv@divisor+1,f,c
 38351  0185BA  3607               	rlcf	i2___lldiv@divisor+2,f,c
 38352  0185BC  3608               	rlcf	i2___lldiv@divisor+3,f,c
 38353  0185BE  2A0D               	incf	i2___lldiv@counter,f,c
 38354  0185C0                     i2l2138:
 38355  0185C0  AE08               	btfss	i2___lldiv@divisor+3,7,c
 38356  0185C2  D7F8               	goto	i2l2139
 38357  0185C4                     i2u1782_40:
 38358  0185C4  90D8               	bcf	status,0,c
 38359  0185C6  3609               	rlcf	i2___lldiv@quotient,f,c
 38360  0185C8  360A               	rlcf	i2___lldiv@quotient+1,f,c
 38361  0185CA  360B               	rlcf	i2___lldiv@quotient+2,f,c
 38362  0185CC  360C               	rlcf	i2___lldiv@quotient+3,f,c
 38363  0185CE  5005               	movf	i2___lldiv@divisor,w,c
 38364  0185D0  5C01               	subwf	i2___lldiv@dividend,w,c
 38365  0185D2  5006               	movf	i2___lldiv@divisor+1,w,c
 38366  0185D4  5802               	subwfb	i2___lldiv@dividend+1,w,c
 38367  0185D6  5007               	movf	i2___lldiv@divisor+2,w,c
 38368  0185D8  5803               	subwfb	i2___lldiv@dividend+2,w,c
 38369  0185DA  5008               	movf	i2___lldiv@divisor+3,w,c
 38370  0185DC  5804               	subwfb	i2___lldiv@dividend+3,w,c
 38371  0185DE  A0D8               	btfss	status,0,c
 38372  0185E0  D009               	goto	i2l2142
 38373  0185E2  5005               	movf	i2___lldiv@divisor,w,c
 38374  0185E4  5E01               	subwf	i2___lldiv@dividend,f,c
 38375  0185E6  5006               	movf	i2___lldiv@divisor+1,w,c
 38376  0185E8  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 38377  0185EA  5007               	movf	i2___lldiv@divisor+2,w,c
 38378  0185EC  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 38379  0185EE  5008               	movf	i2___lldiv@divisor+3,w,c
 38380  0185F0  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 38381  0185F2  8009               	bsf	i2___lldiv@quotient,0,c
 38382  0185F4                     i2l2142:
 38383  0185F4  90D8               	bcf	status,0,c
 38384  0185F6  3208               	rrcf	i2___lldiv@divisor+3,f,c
 38385  0185F8  3207               	rrcf	i2___lldiv@divisor+2,f,c
 38386  0185FA  3206               	rrcf	i2___lldiv@divisor+1,f,c
 38387  0185FC  3205               	rrcf	i2___lldiv@divisor,f,c
 38388  0185FE  2E0D               	decfsz	i2___lldiv@counter,f,c
 38389  018600  D7E1               	goto	i2u1782_40
 38390  018602                     i2l2143:
 38391  018602  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 38392  018606  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 38393  01860A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 38394  01860E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 38395  018612  0012               	return		;funcret
 38396  018614                     __end_ofi2___lldiv:
 38397                           	opt stack 0
 38398                           tosu	equ	0xFFF
 38399                           tosh	equ	0xFFE
 38400                           tosl	equ	0xFFD
 38401                           pclatu	equ	0xFFB
 38402                           pclath	equ	0xFFA
 38403                           tblptru	equ	0xFF8
 38404                           tblptrh	equ	0xFF7
 38405                           tblptrl	equ	0xFF6
 38406                           tablat	equ	0xFF5
 38407                           prodh	equ	0xFF4
 38408                           prodl	equ	0xFF3
 38409                           intcon	equ	0xFF2
 38410                           indf0	equ	0xFEF
 38411                           postinc0	equ	0xFEE
 38412                           fsr0h	equ	0xFEA
 38413                           fsr0l	equ	0xFE9
 38414                           wreg	equ	0xFE8
 38415                           indf1	equ	0xFE7
 38416                           postdec1	equ	0xFE5
 38417                           plusw1	equ	0xFE3
 38418                           fsr1h	equ	0xFE2
 38419                           fsr1l	equ	0xFE1
 38420                           bsr	equ	0xFE0
 38421                           indf2	equ	0xFDF
 38422                           postinc2	equ	0xFDE
 38423                           postdec2	equ	0xFDD
 38424                           plusw2	equ	0xFDB
 38425                           fsr2h	equ	0xFDA
 38426                           fsr2l	equ	0xFD9
 38427                           status	equ	0xFD8
 38428                           
 38429 ;; *************** function _ADCC_ThresholdISR *****************
 38430 ;; Defined at:
 38431 ;;		line 298 in file "mcc_generated_files/adcc.c"
 38432 ;; Parameters:    Size  Location     Type
 38433 ;;		None
 38434 ;; Auto vars:     Size  Location     Type
 38435 ;;		None
 38436 ;; Return value:  Size  Location     Type
 38437 ;;                  1    wreg      void 
 38438 ;; Registers used:
 38439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38440 ;; Tracked objects:
 38441 ;;		On entry : 0/0
 38442 ;;		On exit  : 0/0
 38443 ;;		Unchanged: 0/0
 38444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38449 ;;Total ram usage:        0 bytes
 38450 ;; Hardware stack levels used:    1
 38451 ;; Hardware stack levels required when called:    7
 38452 ;; This function calls:
 38453 ;;		Absolute function
 38454 ;;		_ADCC_DefaultInterruptHandler
 38455 ;;		_ADCPostProcessingCallback
 38456 ;; This function is called by:
 38457 ;;		_INTERRUPT_InterruptManagerHigh
 38458 ;; This function uses a non-reentrant model
 38459 ;;
 38460                           
 38461                           	psect	text116
 38462  019360                     __ptext116:
 38463                           	opt stack 0
 38464  019360                     _ADCC_ThresholdISR:
 38465                           	opt stack 11
 38466                           
 38467                           ;adcc.c: 301: PIR1bits.ADTIF = 0;
 38468                           
 38469                           ;incstack = 0
 38470  019360  010E               	movlb	14	; () banked
 38471  019362  9334               	bcf	52,1,b	;volatile
 38472                           
 38473                           ; BSR set to: 14
 38474                           ;adcc.c: 303: if (ADCC_ADTI_InterruptHandler)
 38475  019364  0102               	movlb	2	; () banked
 38476  019366  5131               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38477  019368  1132               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38478  01936A  1133               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38479  01936C  B4D8               	btfsc	status,2,c
 38480  01936E  0012               	return	
 38481                           
 38482                           ; BSR set to: 2
 38483                           ;adcc.c: 304: ADCC_ADTI_InterruptHandler();
 38484  019370  D801               	call	i2u2705_48
 38485  019372  0012               	return	
 38486  019374                     i2u2705_48:
 38487  019374  0005               	push	
 38488  019376  6EFA               	movwf	pclath,c
 38489  019378  5131               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38490  01937A  6EFD               	movwf	tosl,c
 38491  01937C  5132               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38492  01937E  6EFE               	movwf	tosh,c
 38493  019380  5133               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38494  019382  6EFF               	movwf	tosu,c
 38495  019384  50FA               	movf	pclath,w,c
 38496  019386  0012               	return		;indir
 38497  019388                     __end_of_ADCC_ThresholdISR:
 38498                           	opt stack 0
 38499                           tosu	equ	0xFFF
 38500                           tosh	equ	0xFFE
 38501                           tosl	equ	0xFFD
 38502                           pclatu	equ	0xFFB
 38503                           pclath	equ	0xFFA
 38504                           tblptru	equ	0xFF8
 38505                           tblptrh	equ	0xFF7
 38506                           tblptrl	equ	0xFF6
 38507                           tablat	equ	0xFF5
 38508                           prodh	equ	0xFF4
 38509                           prodl	equ	0xFF3
 38510                           intcon	equ	0xFF2
 38511                           indf0	equ	0xFEF
 38512                           postinc0	equ	0xFEE
 38513                           fsr0h	equ	0xFEA
 38514                           fsr0l	equ	0xFE9
 38515                           wreg	equ	0xFE8
 38516                           indf1	equ	0xFE7
 38517                           postdec1	equ	0xFE5
 38518                           plusw1	equ	0xFE3
 38519                           fsr1h	equ	0xFE2
 38520                           fsr1l	equ	0xFE1
 38521                           bsr	equ	0xFE0
 38522                           indf2	equ	0xFDF
 38523                           postinc2	equ	0xFDE
 38524                           postdec2	equ	0xFDD
 38525                           plusw2	equ	0xFDB
 38526                           fsr2h	equ	0xFDA
 38527                           fsr2l	equ	0xFD9
 38528                           status	equ	0xFD8
 38529                           
 38530 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 38531 ;; Defined at:
 38532 ;;		line 310 in file "mcc_generated_files/adcc.c"
 38533 ;; Parameters:    Size  Location     Type
 38534 ;;		None
 38535 ;; Auto vars:     Size  Location     Type
 38536 ;;		None
 38537 ;; Return value:  Size  Location     Type
 38538 ;;                  1    wreg      void 
 38539 ;; Registers used:
 38540 ;;		None
 38541 ;; Tracked objects:
 38542 ;;		On entry : 0/0
 38543 ;;		On exit  : 0/0
 38544 ;;		Unchanged: 0/0
 38545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38550 ;;Total ram usage:        0 bytes
 38551 ;; Hardware stack levels used:    1
 38552 ;; This function calls:
 38553 ;;		Nothing
 38554 ;; This function is called by:
 38555 ;;		_ADCC_Initialize
 38556 ;;		_ADCC_ThresholdISR
 38557 ;; This function uses a non-reentrant model
 38558 ;;
 38559                           
 38560                           	psect	text117
 38561  0196EC                     __ptext117:
 38562                           	opt stack 0
 38563  0196EC                     _ADCC_DefaultInterruptHandler:
 38564                           	opt stack 17
 38565                           
 38566                           ;incstack = 0
 38567  0196EC  0012               	return		;funcret
 38568  0196EE                     __end_of_ADCC_DefaultInterruptHandler:
 38569                           	opt stack 0
 38570                           tosu	equ	0xFFF
 38571                           tosh	equ	0xFFE
 38572                           tosl	equ	0xFFD
 38573                           pclatu	equ	0xFFB
 38574                           pclath	equ	0xFFA
 38575                           tblptru	equ	0xFF8
 38576                           tblptrh	equ	0xFF7
 38577                           tblptrl	equ	0xFF6
 38578                           tablat	equ	0xFF5
 38579                           prodh	equ	0xFF4
 38580                           prodl	equ	0xFF3
 38581                           intcon	equ	0xFF2
 38582                           indf0	equ	0xFEF
 38583                           postinc0	equ	0xFEE
 38584                           fsr0h	equ	0xFEA
 38585                           fsr0l	equ	0xFE9
 38586                           wreg	equ	0xFE8
 38587                           indf1	equ	0xFE7
 38588                           postdec1	equ	0xFE5
 38589                           plusw1	equ	0xFE3
 38590                           fsr1h	equ	0xFE2
 38591                           fsr1l	equ	0xFE1
 38592                           bsr	equ	0xFE0
 38593                           indf2	equ	0xFDF
 38594                           postinc2	equ	0xFDE
 38595                           postdec2	equ	0xFDD
 38596                           plusw2	equ	0xFDB
 38597                           fsr2h	equ	0xFDA
 38598                           fsr2l	equ	0xFD9
 38599                           status	equ	0xFD8
 38600                           
 38601 ;; *************** function _ADCPostProcessingCallback *****************
 38602 ;; Defined at:
 38603 ;;		line 231 in file "main.c"
 38604 ;; Parameters:    Size  Location     Type
 38605 ;;		None
 38606 ;; Auto vars:     Size  Location     Type
 38607 ;;  current_adc_    1  117[BANK0 ] enum E17425
 38608 ;; Return value:  Size  Location     Type
 38609 ;;                  1    wreg      void 
 38610 ;; Registers used:
 38611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38612 ;; Tracked objects:
 38613 ;;		On entry : 0/0
 38614 ;;		On exit  : 0/0
 38615 ;;		Unchanged: 0/0
 38616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38618 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38620 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38621 ;;Total ram usage:       21 bytes
 38622 ;; Hardware stack levels used:    1
 38623 ;; Hardware stack levels required when called:    6
 38624 ;; This function calls:
 38625 ;;		_ADCC_GetConversionResult
 38626 ;;		_ADCC_GetFilterValue
 38627 ;;		_ADCC_HasAccumulatorOverflowed
 38628 ;;		_ADCC_StopConversion
 38629 ;;		_abs
 38630 ;;		_currentMeasuredToPeak
 38631 ;;		_peakToRMS
 38632 ;;		i2_TMR7_StopTimer
 38633 ;;		i2___fladd
 38634 ;;		i2___fldiv
 38635 ;;		i2___flge
 38636 ;;		i2___flmul
 38637 ;;		i2___flneg
 38638 ;;		i2___fltol
 38639 ;;		i2___xxtofl
 38640 ;; This function is called by:
 38641 ;;		_main
 38642 ;;		_ADCC_ThresholdISR
 38643 ;; This function uses a non-reentrant model
 38644 ;;
 38645                           
 38646                           	psect	text118
 38647  012FB0                     __ptext118:
 38648                           	opt stack 0
 38649  012FB0                     _ADCPostProcessingCallback:
 38650                           	opt stack 11
 38651                           
 38652                           ;main.c: 234: ADCC_StopConversion();
 38653                           
 38654                           ;incstack = 0
 38655  012FB0  EC70  F0CB         	call	_ADCC_StopConversion	;wreg free
 38656                           
 38657                           ;main.c: 237: adcc_channel_t current_adc_channel = ADPCH;
 38658  012FB4  CF5F F0D5          	movff	3935,ADCPostProcessingCallback@current_adc_channel	;volatile
 38659                           
 38660                           ;main.c: 240: switch (current_adc_channel) {
 38661  012FB8  EF2C  F09D         	goto	i2l1031
 38662  012FBC                     
 38663                           ;main.c: 244: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 38664  012FBC  ECC5  F0CA         	call	_ADCC_GetConversionResult	;wreg free
 38665  012FC0  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 38666  012FC4  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 38667  012FC8  6A07               	clrf	i2___xxtofl@val+2,c
 38668  012FCA  6A08               	clrf	i2___xxtofl@val+3,c
 38669  012FCC  0E00               	movlw	0
 38670  012FCE  EC09  F0B8         	call	i2___xxtofl
 38671  012FD2  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 38672  012FD6  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 38673  012FDA  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 38674  012FDE  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 38675  012FE2  0E0D               	movlw	13
 38676  012FE4  6E34               	movwf	i2___flmul@a,c
 38677  012FE6  0E68               	movlw	104
 38678  012FE8  6E35               	movwf	i2___flmul@a+1,c
 38679  012FEA  0E53               	movlw	83
 38680  012FEC  6E36               	movwf	i2___flmul@a+2,c
 38681  012FEE  0E3B               	movlw	59
 38682  012FF0  6E37               	movwf	i2___flmul@a+3,c
 38683  012FF2  EC34  F0A5         	call	i2___flmul	;wreg free
 38684  012FF6  C030  F1DB         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 38685  012FFA  C031  F1DC         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 38686  012FFE  C032  F1DD         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 38687  013002  C033  F1DE         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 38688                           
 38689                           ;main.c: 246: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 38690  013006  0E0A               	movlw	10
 38691  013008  6E34               	movwf	i2___flge@ff1,c
 38692  01300A  0ED7               	movlw	215
 38693  01300C  6E35               	movwf	i2___flge@ff1+1,c
 38694  01300E  0E23               	movlw	35
 38695  013010  6E36               	movwf	i2___flge@ff1+2,c
 38696  013012  0E3C               	movlw	60
 38697  013014  6E37               	movwf	i2___flge@ff1+3,c
 38698  013016  C1DB  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 38699  01301A  C1DC  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 38700  01301E  C1DD  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 38701  013022  C1DE  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 38702  013026  ECCB  F0BC         	call	i2___flge	;wreg free
 38703  01302A  A0D8               	btfss	status,0,c
 38704  01302C  D005               	goto	i2u1791_40
 38705  01302E  EC46  F0CB         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38706  013032  0900               	iorlw	0
 38707  013034  B4D8               	btfsc	status,2,c
 38708  013036  D007               	goto	i2l1033
 38709  013038                     i2u1791_40:
 38710                           
 38711                           ;main.c: 248: LATFbits.LATF3 = 1;
 38712  013038  867E               	bsf	3966,3,c	;volatile
 38713                           
 38714                           ;main.c: 249: adc_error_flag = 1;
 38715  01303A  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38716                           
 38717                           ;main.c: 251: PIE5bits.TMR7IE = 0;
 38718  01303C  010E               	movlb	14	; () banked
 38719  01303E  9D2E               	bcf	46,6,b	;volatile
 38720                           
 38721                           ; BSR set to: 14
 38722                           ;main.c: 252: TMR7_StopTimer();
 38723  013040  EC67  F0CB         	call	i2_TMR7_StopTimer	;wreg free
 38724                           
 38725                           ;main.c: 253: return;
 38726  013044  0012               	return	
 38727  013046                     i2l1033:
 38728                           
 38729                           ;main.c: 255: }
 38730                           ;main.c: 257: next_channel = channel_FVR_buf1;
 38731  013046  0E3F               	movlw	63
 38732  013048  0101               	movlb	1	; () banked
 38733  01304A  6FE8               	movwf	_next_channel& (0+255),b
 38734                           
 38735                           ;main.c: 259: break;
 38736  01304C  0012               	return	
 38737  01304E                     
 38738                           ;main.c: 264: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 38739                           
 38740                           ; BSR set to: 1
 38741  01304E  0E0D               	movlw	13
 38742  013050  6E34               	movwf	i2___flmul@a,c
 38743  013052  0E68               	movlw	104
 38744  013054  6E35               	movwf	i2___flmul@a+1,c
 38745  013056  0E53               	movlw	83
 38746  013058  6E36               	movwf	i2___flmul@a+2,c
 38747  01305A  0E3B               	movlw	59
 38748  01305C  6E37               	movwf	i2___flmul@a+3,c
 38749  01305E  ECC5  F0CA         	call	_ADCC_GetConversionResult	;wreg free
 38750  013062  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 38751  013066  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 38752  01306A  6A07               	clrf	i2___xxtofl@val+2,c
 38753  01306C  6A08               	clrf	i2___xxtofl@val+3,c
 38754  01306E  0E00               	movlw	0
 38755  013070  EC09  F0B8         	call	i2___xxtofl
 38756  013074  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 38757  013078  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 38758  01307C  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 38759  013080  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 38760  013084  EC34  F0A5         	call	i2___flmul	;wreg free
 38761  013088  C030  F056         	movff	?i2___flmul,i2___fladd@b
 38762  01308C  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 38763  013090  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 38764  013094  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 38765  013098  C1DB  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 38766  01309C  C1DC  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 38767  0130A0  C1DD  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 38768  0130A4  C1DE  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 38769  0130A8  EC7B  F0A8         	call	i2___fladd	;wreg free
 38770  0130AC  C056  F1E4         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 38771  0130B0  C057  F1E5         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 38772  0130B4  C058  F1E6         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 38773  0130B8  C059  F1E7         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 38774                           
 38775                           ;main.c: 265: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 38776  0130BC  0E6F               	movlw	111
 38777  0130BE  6E13               	movwf	i2___fldiv@b,c
 38778  0130C0  0E12               	movlw	18
 38779  0130C2  6E14               	movwf	i2___fldiv@b+1,c
 38780  0130C4  0E03               	movlw	3
 38781  0130C6  6E15               	movwf	i2___fldiv@b+2,c
 38782  0130C8  0E40               	movlw	64
 38783  0130CA  6E16               	movwf	i2___fldiv@b+3,c
 38784  0130CC  C1E4  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 38785  0130D0  C1E5  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 38786  0130D4  C1E6  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 38787  0130D8  C1E7  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 38788  0130DC  EC3B  F0B1         	call	i2___fldiv	;wreg free
 38789  0130E0  C013  F224         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 38790  0130E4  C014  F225         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 38791  0130E8  C015  F226         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 38792  0130EC  C016  F227         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 38793                           
 38794                           ;main.c: 267: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 38795  0130F0  0E00               	movlw	0
 38796  0130F2  6E34               	movwf	i2___flge@ff1,c
 38797  0130F4  0E00               	movlw	0
 38798  0130F6  6E35               	movwf	i2___flge@ff1+1,c
 38799  0130F8  0E20               	movlw	32
 38800  0130FA  6E36               	movwf	i2___flge@ff1+2,c
 38801  0130FC  0E40               	movlw	64
 38802  0130FE  6E37               	movwf	i2___flge@ff1+3,c
 38803  013100  C1E4  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 38804  013104  C1E5  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 38805  013108  C1E6  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 38806  01310C  C1E7  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 38807  013110  ECCB  F0BC         	call	i2___flge	;wreg free
 38808  013114  A0D8               	btfss	status,0,c
 38809  013116  D019               	goto	i2u1794_40
 38810  013118  C1E4  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 38811  01311C  C1E5  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 38812  013120  C1E6  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 38813  013124  C1E7  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 38814  013128  0E00               	movlw	0
 38815  01312A  6E38               	movwf	i2___flge@ff2,c
 38816  01312C  0E00               	movlw	0
 38817  01312E  6E39               	movwf	i2___flge@ff2+1,c
 38818  013130  0E00               	movlw	0
 38819  013132  6E3A               	movwf	i2___flge@ff2+2,c
 38820  013134  0E40               	movlw	64
 38821  013136  6E3B               	movwf	i2___flge@ff2+3,c
 38822  013138  ECCB  F0BC         	call	i2___flge	;wreg free
 38823  01313C  A0D8               	btfss	status,0,c
 38824  01313E  D005               	goto	i2u1794_40
 38825  013140  EC46  F0CB         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38826  013144  0900               	iorlw	0
 38827  013146  B4D8               	btfsc	status,2,c
 38828  013148  D007               	goto	i2l1039
 38829  01314A                     i2u1794_40:
 38830                           
 38831                           ;main.c: 269: LATFbits.LATF3 = 1;
 38832  01314A  867E               	bsf	3966,3,c	;volatile
 38833                           
 38834                           ;main.c: 270: adc_error_flag = 1;
 38835  01314C  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38836                           
 38837                           ;main.c: 272: PIE5bits.TMR7IE = 0;
 38838  01314E  010E               	movlb	14	; () banked
 38839  013150  9D2E               	bcf	46,6,b	;volatile
 38840                           
 38841                           ; BSR set to: 14
 38842                           ;main.c: 273: TMR7_StopTimer();
 38843  013152  EC67  F0CB         	call	i2_TMR7_StopTimer	;wreg free
 38844                           
 38845                           ;main.c: 274: return;
 38846  013156  0012               	return	
 38847  013158                     i2l1039:
 38848                           
 38849                           ;main.c: 276: }
 38850                           ;main.c: 278: next_channel = POS3P3_ADC;
 38851  013158  0E22               	movlw	34
 38852  01315A  0101               	movlb	1	; () banked
 38853  01315C  6FE8               	movwf	_next_channel& (0+255),b
 38854                           
 38855                           ;main.c: 280: break;
 38856  01315E  0012               	return	
 38857  013160                     
 38858                           ;main.c: 285: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 38859                           
 38860                           ; BSR set to: 1
 38861  013160  C224  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 38862  013164  C225  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 38863  013168  C226  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 38864  01316C  C227  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 38865  013170  ECBB  F0CA         	call	_ADCC_GetFilterValue	;wreg free
 38866  013174  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 38867  013178  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 38868  01317C  6A07               	clrf	i2___xxtofl@val+2,c
 38869  01317E  6A08               	clrf	i2___xxtofl@val+3,c
 38870  013180  0E00               	movlw	0
 38871  013182  EC09  F0B8         	call	i2___xxtofl
 38872  013186  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 38873  01318A  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 38874  01318E  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 38875  013192  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 38876  013196  EC34  F0A5         	call	i2___flmul	;wreg free
 38877  01319A  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4386
 38878  01319E  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4386+1
 38879  0131A2  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4386+2
 38880  0131A6  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4386+3
 38881                           
 38882                           ;main.c: 285: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 38883  0131AA  C0D6  F030         	movff	_ADCPostProcessingCallback$4386,i2___flmul@b
 38884  0131AE  C0D7  F031         	movff	_ADCPostProcessingCallback$4386+1,i2___flmul@b+1
 38885  0131B2  C0D8  F032         	movff	_ADCPostProcessingCallback$4386+2,i2___flmul@b+2
 38886  0131B6  C0D9  F033         	movff	_ADCPostProcessingCallback$4386+3,i2___flmul@b+3
 38887  0131BA  0E0D               	movlw	13
 38888  0131BC  6E34               	movwf	i2___flmul@a,c
 38889  0131BE  0E68               	movlw	104
 38890  0131C0  6E35               	movwf	i2___flmul@a+1,c
 38891  0131C2  0ED3               	movlw	211
 38892  0131C4  6E36               	movwf	i2___flmul@a+2,c
 38893  0131C6  0E3B               	movlw	59
 38894  0131C8  6E37               	movwf	i2___flmul@a+3,c
 38895  0131CA  EC34  F0A5         	call	i2___flmul	;wreg free
 38896  0131CE  C030  F1D7         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 38897  0131D2  C031  F1D8         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 38898  0131D6  C032  F1D9         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 38899  0131DA  C033  F1DA         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 38900                           
 38901                           ;main.c: 287: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 38902  0131DE  0E00               	movlw	0
 38903  0131E0  6E34               	movwf	i2___flge@ff1,c
 38904  0131E2  0E00               	movlw	0
 38905  0131E4  6E35               	movwf	i2___flge@ff1+1,c
 38906  0131E6  0E60               	movlw	96
 38907  0131E8  6E36               	movwf	i2___flge@ff1+2,c
 38908  0131EA  0E40               	movlw	64
 38909  0131EC  6E37               	movwf	i2___flge@ff1+3,c
 38910  0131EE  C1D7  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 38911  0131F2  C1D8  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 38912  0131F6  C1D9  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 38913  0131FA  C1DA  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 38914  0131FE  ECCB  F0BC         	call	i2___flge	;wreg free
 38915  013202  A0D8               	btfss	status,0,c
 38916  013204  D005               	goto	i2u1796_40
 38917  013206  EC46  F0CB         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 38918  01320A  0900               	iorlw	0
 38919  01320C  B4D8               	btfsc	status,2,c
 38920  01320E  D007               	goto	i2l1043
 38921  013210                     i2u1796_40:
 38922                           
 38923                           ;main.c: 289: LATFbits.LATF3 = 1;
 38924  013210  867E               	bsf	3966,3,c	;volatile
 38925                           
 38926                           ;main.c: 290: adc_error_flag = 1;
 38927  013212  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 38928                           
 38929                           ;main.c: 292: PIE5bits.TMR7IE = 0;
 38930  013214  010E               	movlb	14	; () banked
 38931  013216  9D2E               	bcf	46,6,b	;volatile
 38932                           
 38933                           ; BSR set to: 14
 38934                           ;main.c: 293: TMR7_StopTimer();
 38935  013218  EC67  F0CB         	call	i2_TMR7_StopTimer	;wreg free
 38936                           
 38937                           ;main.c: 294: return;
 38938  01321C  0012               	return	
 38939  01321E                     i2l1043:
 38940                           
 38941                           ;main.c: 296: }
 38942                           ;main.c: 298: next_channel = ISNS_ADC;
 38943  01321E  0E00               	movlw	0
 38944  013220  0101               	movlb	1	; () banked
 38945  013222  6FE8               	movwf	_next_channel& (0+255),b
 38946                           
 38947                           ;main.c: 300: break;
 38948  013224  0012               	return	
 38949  013226                     
 38950                           ;main.c: 305: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 38951                           
 38952                           ; BSR set to: 1
 38953  013226  0E00               	movlw	0
 38954  013228  6E17               	movwf	i2___fldiv@a,c
 38955  01322A  0EC0               	movlw	192
 38956  01322C  6E18               	movwf	i2___fldiv@a+1,c
 38957  01322E  0E7F               	movlw	127
 38958  013230  6E19               	movwf	i2___fldiv@a+2,c
 38959  013232  0E44               	movlw	68
 38960  013234  6E1A               	movwf	i2___fldiv@a+3,c
 38961  013236  C1D7  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 38962  01323A  C1D8  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 38963  01323E  C1D9  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 38964  013242  C1DA  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 38965  013246  EC3B  F0B1         	call	i2___fldiv	;wreg free
 38966  01324A  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 38967  01324E  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 38968  013252  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 38969  013256  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 38970  01325A  ECBB  F0CA         	call	_ADCC_GetFilterValue	;wreg free
 38971  01325E  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 38972  013262  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 38973  013266  6A07               	clrf	i2___xxtofl@val+2,c
 38974  013268  6A08               	clrf	i2___xxtofl@val+3,c
 38975  01326A  0E00               	movlw	0
 38976  01326C  EC09  F0B8         	call	i2___xxtofl
 38977  013270  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 38978  013274  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 38979  013278  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 38980  01327C  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 38981  013280  EC34  F0A5         	call	i2___flmul	;wreg free
 38982  013284  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4386
 38983  013288  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4386+1
 38984  01328C  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4386+2
 38985  013290  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4386+3
 38986                           
 38987                           ;main.c: 305: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 38988  013294  C0D6  F030         	movff	_ADCPostProcessingCallback$4386,i2___flmul@b
 38989  013298  C0D7  F031         	movff	_ADCPostProcessingCallback$4386+1,i2___flmul@b+1
 38990  01329C  C0D8  F032         	movff	_ADCPostProcessingCallback$4386+2,i2___flmul@b+2
 38991  0132A0  C0D9  F033         	movff	_ADCPostProcessingCallback$4386+3,i2___flmul@b+3
 38992  0132A4  0E35               	movlw	53
 38993  0132A6  6E34               	movwf	i2___flmul@a,c
 38994  0132A8  0E5E               	movlw	94
 38995  0132AA  6E35               	movwf	i2___flmul@a+1,c
 38996  0132AC  0EF2               	movlw	242
 38997  0132AE  6E36               	movwf	i2___flmul@a+2,c
 38998  0132B0  0E3F               	movlw	63
 38999  0132B2  6E37               	movwf	i2___flmul@a+3,c
 39000  0132B4  EC34  F0A5         	call	i2___flmul	;wreg free
 39001  0132B8  C030  F1C7         	movff	?i2___flmul,_Imeas	;volatile
 39002  0132BC  C031  F1C8         	movff	?i2___flmul+1,_Imeas+1	;volatile
 39003  0132C0  C032  F1C9         	movff	?i2___flmul+2,_Imeas+2	;volatile
 39004  0132C4  C033  F1CA         	movff	?i2___flmul+3,_Imeas+3	;volatile
 39005                           
 39006                           ;main.c: 309: if (LATGbits.LATG0 != 1) {
 39007  0132C8  B07F               	btfsc	3967,0,c	;volatile
 39008  0132CA  D166               	goto	i2l1047
 39009                           
 39010                           ;main.c: 314: if (load_enable) {
 39011  0132CC  A45E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 39012  0132CE  D0CD               	goto	i2l1048
 39013                           
 39014                           ;main.c: 317: if (dimming_period < 0x7FEE) {
 39015  0132D0  0EEE               	movlw	238
 39016  0132D2  0100               	movlb	0	; () banked
 39017  0132D4  5DF0               	subwf	_dimming_period& (0+255),w,b	;volatile
 39018  0132D6  0E7F               	movlw	127
 39019  0132D8  59F1               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 39020  0132DA  B0D8               	btfsc	status,0,c
 39021  0132DC  D052               	goto	i2l1049
 39022                           
 39023                           ; BSR set to: 0
 39024                           ;main.c: 319: Ipk = Imeas;
 39025  0132DE  C1C7  F1CB         	movff	_Imeas,_Ipk	;volatile
 39026  0132E2  C1C8  F1CC         	movff	_Imeas+1,_Ipk+1	;volatile
 39027  0132E6  C1C9  F1CD         	movff	_Imeas+2,_Ipk+2	;volatile
 39028  0132EA  C1CA  F1CE         	movff	_Imeas+3,_Ipk+3	;volatile
 39029                           
 39030                           ; BSR set to: 0
 39031                           ;main.c: 320: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 39032  0132EE  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 39033  0132F2  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 39034  0132F6  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 39035  0132FA  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 39036  0132FE  C1CB  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 39037  013302  C1CC  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 39038  013306  C1CD  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 39039  01330A  C1CE  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 39040  01330E  EC1F  F0B5         	call	_peakToRMS	;wreg free
 39041  013312  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4387
 39042  013316  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4387+1
 39043  01331A  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4387+2
 39044  01331E  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4387+3
 39045                           
 39046                           ;main.c: 320: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 39047  013322  C2F2  F05A         	movff	_Irms_offset,i2___fladd@a
 39048  013326  C2F3  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 39049  01332A  C2F4  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 39050  01332E  C2F5  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 39051  013332  C0DA  F056         	movff	_ADCPostProcessingCallback$4387,i2___fladd@b
 39052  013336  C0DB  F057         	movff	_ADCPostProcessingCallback$4387+1,i2___fladd@b+1
 39053  01333A  C0DC  F058         	movff	_ADCPostProcessingCallback$4387+2,i2___fladd@b+2
 39054  01333E  C0DD  F059         	movff	_ADCPostProcessingCallback$4387+3,i2___fladd@b+3
 39055  013342  EC7B  F0A8         	call	i2___fladd	;wreg free
 39056  013346  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 39057  01334A  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 39058  01334E  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 39059  013352  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 39060  013356  EC45  F0BF         	call	i2___fltol	;wreg free
 39061  01335A  C06C  F076         	movff	?i2___fltol,abs@a
 39062  01335E  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 39063  013362  EC73  F0C9         	call	_abs	;wreg free
 39064  013366  0100               	movlb	0	; () banked
 39065  013368  C076  F005         	movff	?_abs,i2___xxtofl@val
 39066  01336C  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 39067  013370  0E00               	movlw	0
 39068  013372  BE06               	btfsc	i2___xxtofl@val+1,7,c
 39069  013374  0EFF               	movlw	-1
 39070  013376  6E07               	movwf	i2___xxtofl@val+2,c
 39071  013378  6E08               	movwf	i2___xxtofl@val+3,c
 39072  01337A  0E01               	movlw	1
 39073  01337C  EC09  F0B8         	call	i2___xxtofl
 39074  013380  D063               	goto	L18
 39075  013382                     i2l1049:
 39076                           
 39077                           ;main.c: 325: else {
 39078                           ;main.c: 327: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 39079  013382  C1C7  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 39080  013386  C1C8  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 39081  01338A  C1C9  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 39082  01338E  C1CA  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 39083  013392  C0F2  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 39084  013396  C0F3  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 39085  01339A  C0F4  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 39086  01339E  C0F5  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 39087  0133A2  EC0A  F0C3         	call	_currentMeasuredToPeak	;wreg free
 39088  0133A6  C099  F1CB         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 39089  0133AA  C09A  F1CC         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 39090  0133AE  C09B  F1CD         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 39091  0133B2  C09C  F1CE         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 39092                           
 39093                           ;main.c: 328: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 39094  0133B6  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 39095  0133BA  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 39096  0133BE  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 39097  0133C2  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 39098  0133C6  C1CB  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 39099  0133CA  C1CC  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 39100  0133CE  C1CD  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 39101  0133D2  C1CE  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 39102  0133D6  EC1F  F0B5         	call	_peakToRMS	;wreg free
 39103  0133DA  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4387
 39104  0133DE  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4387+1
 39105  0133E2  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4387+2
 39106  0133E6  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4387+3
 39107                           
 39108                           ;main.c: 328: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 39109  0133EA  C2F2  F05A         	movff	_Irms_offset,i2___fladd@a
 39110  0133EE  C2F3  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 39111  0133F2  C2F4  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 39112  0133F6  C2F5  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 39113  0133FA  C0DA  F056         	movff	_ADCPostProcessingCallback$4387,i2___fladd@b
 39114  0133FE  C0DB  F057         	movff	_ADCPostProcessingCallback$4387+1,i2___fladd@b+1
 39115  013402  C0DC  F058         	movff	_ADCPostProcessingCallback$4387+2,i2___fladd@b+2
 39116  013406  C0DD  F059         	movff	_ADCPostProcessingCallback$4387+3,i2___fladd@b+3
 39117  01340A  EC7B  F0A8         	call	i2___fladd	;wreg free
 39118  01340E  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 39119  013412  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 39120  013416  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 39121  01341A  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 39122  01341E  EC45  F0BF         	call	i2___fltol	;wreg free
 39123  013422  C06C  F076         	movff	?i2___fltol,abs@a
 39124  013426  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 39125  01342A  EC73  F0C9         	call	_abs	;wreg free
 39126  01342E  0100               	movlb	0	; () banked
 39127  013430  C076  F005         	movff	?_abs,i2___xxtofl@val
 39128  013434  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 39129  013438  0E00               	movlw	0
 39130  01343A  BE06               	btfsc	i2___xxtofl@val+1,7,c
 39131  01343C  0EFF               	movlw	-1
 39132  01343E  6E07               	movwf	i2___xxtofl@val+2,c
 39133  013440  6E08               	movwf	i2___xxtofl@val+3,c
 39134  013442  0E01               	movlw	1
 39135  013444  EC09  F0B8         	call	i2___xxtofl
 39136  013448                     L18:
 39137  013448  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 39138  01344C  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 39139  013450  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 39140  013454  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 39141                           
 39142                           ;main.c: 330: }
 39143                           ;main.c: 332: Vpk = Vpk_const;
 39144  013458  C2F6  F220         	movff	_Vpk_const,_Vpk	;volatile
 39145  01345C  C2F7  F221         	movff	_Vpk_const+1,_Vpk+1	;volatile
 39146  013460  C2F8  F222         	movff	_Vpk_const+2,_Vpk+2	;volatile
 39147  013464  C2F9  F223         	movff	_Vpk_const+3,_Vpk+3	;volatile
 39148                           
 39149                           ;main.c: 334: }
 39150  013468  D02C               	goto	i2l1051
 39151  01346A                     i2l1048:
 39152                           
 39153                           ;main.c: 336: else {
 39154                           ;main.c: 338: Ipk = 0.0;
 39155  01346A  0E00               	movlw	0
 39156  01346C  0101               	movlb	1	; () banked
 39157  01346E  6FCB               	movwf	_Ipk& (0+255),b	;volatile
 39158  013470  0E00               	movlw	0
 39159  013472  6FCC               	movwf	(_Ipk+1)& (0+255),b	;volatile
 39160  013474  0E00               	movlw	0
 39161  013476  6FCD               	movwf	(_Ipk+2)& (0+255),b	;volatile
 39162  013478  0E00               	movlw	0
 39163  01347A  6FCE               	movwf	(_Ipk+3)& (0+255),b	;volatile
 39164                           
 39165                           ;main.c: 339: Vpk = 0.0;
 39166  01347C  0E00               	movlw	0
 39167  01347E  0102               	movlb	2	; () banked
 39168  013480  6F20               	movwf	_Vpk& (0+255),b	;volatile
 39169  013482  0E00               	movlw	0
 39170  013484  6F21               	movwf	(_Vpk+1)& (0+255),b	;volatile
 39171  013486  0E00               	movlw	0
 39172  013488  6F22               	movwf	(_Vpk+2)& (0+255),b	;volatile
 39173  01348A  0E00               	movlw	0
 39174  01348C  6F23               	movwf	(_Vpk+3)& (0+255),b	;volatile
 39175                           
 39176                           ; BSR set to: 2
 39177                           ;main.c: 340: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 39178  01348E  C1CB  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 39179  013492  C1CC  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 39180  013496  C1CD  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 39181  01349A  C1CE  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 39182  01349E  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 39183  0134A2  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 39184  0134A6  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 39185  0134AA  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 39186  0134AE  EC1F  F0B5         	call	_peakToRMS	;wreg free
 39187  0134B2  C0B1  F1C3         	movff	?_peakToRMS,_Irms	;volatile
 39188  0134B6  C0B2  F1C4         	movff	?_peakToRMS+1,_Irms+1	;volatile
 39189  0134BA  C0B3  F1C5         	movff	?_peakToRMS+2,_Irms+2	;volatile
 39190  0134BE  C0B4  F1C6         	movff	?_peakToRMS+3,_Irms+3	;volatile
 39191  0134C2                     i2l1051:
 39192                           
 39193                           ;main.c: 342: }
 39194                           ;main.c: 344: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 39195  0134C2  C220  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 39196  0134C6  C221  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 39197  0134CA  C222  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 39198  0134CE  C223  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 39199  0134D2  C0F2  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 39200  0134D6  C0F3  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 39201  0134DA  C0F4  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 39202  0134DE  C0F5  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 39203  0134E2  EC1F  F0B5         	call	_peakToRMS	;wreg free
 39204  0134E6  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 39205  0134EA  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 39206  0134EE  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 39207  0134F2  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 39208                           
 39209                           ;main.c: 345: Avg_Power = Vrms * Irms;
 39210  0134F6  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 39211  0134FA  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 39212  0134FE  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 39213  013502  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 39214  013506  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 39215  01350A  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 39216  01350E  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 39217  013512  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 39218  013516  EC34  F0A5         	call	i2___flmul	;wreg free
 39219  01351A  C030  F1BB         	movff	?i2___flmul,_Avg_Power	;volatile
 39220  01351E  C031  F1BC         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 39221  013522  C032  F1BD         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 39222  013526  C033  F1BE         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 39223                           
 39224                           ;main.c: 346: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 39225  01352A  0E00               	movlw	0
 39226  01352C  6E17               	movwf	i2___fldiv@a,c
 39227  01352E  0E00               	movlw	0
 39228  013530  6E18               	movwf	i2___fldiv@a+1,c
 39229  013532  0E61               	movlw	97
 39230  013534  6E19               	movwf	i2___fldiv@a+2,c
 39231  013536  0E45               	movlw	69
 39232  013538  6E1A               	movwf	i2___fldiv@a+3,c
 39233  01353A  0E29               	movlw	41
 39234  01353C  6E34               	movwf	i2___flmul@a,c
 39235  01353E  0E5C               	movlw	92
 39236  013540  6E35               	movwf	i2___flmul@a+1,c
 39237  013542  0E8F               	movlw	143
 39238  013544  6E36               	movwf	i2___flmul@a+2,c
 39239  013546  0E3D               	movlw	61
 39240  013548  6E37               	movwf	i2___flmul@a+3,c
 39241  01354A  C1BB  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 39242  01354E  C1BC  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 39243  013552  C1BD  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 39244  013556  C1BE  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 39245  01355A  EC34  F0A5         	call	i2___flmul	;wreg free
 39246  01355E  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 39247  013562  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 39248  013566  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 39249  01356A  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 39250  01356E  EC3B  F0B1         	call	i2___fldiv	;wreg free
 39251  013572  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 39252  013576  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 39253  01357A  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 39254  01357E  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 39255  013582  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 39256  013586  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 39257  01358A  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 39258  01358E  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 39259  013592  EC7B  F0A8         	call	i2___fladd	;wreg free
 39260  013596  D0C5               	goto	L17
 39261  013598                     i2l1047:
 39262                           
 39263                           ;main.c: 351: else {
 39264                           ;main.c: 353: Ipk = Imeas;
 39265  013598  C1C7  F1CB         	movff	_Imeas,_Ipk	;volatile
 39266  01359C  C1C8  F1CC         	movff	_Imeas+1,_Ipk+1	;volatile
 39267  0135A0  C1C9  F1CD         	movff	_Imeas+2,_Ipk+2	;volatile
 39268  0135A4  C1CA  F1CE         	movff	_Imeas+3,_Ipk+3	;volatile
 39269                           
 39270                           ;main.c: 354: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 39271  0135A8  0E00               	movlw	0
 39272  0135AA  0100               	movlb	0	; () banked
 39273  0135AC  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 39274  0135AE  0E00               	movlw	0
 39275  0135B0  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 39276  0135B2  0E00               	movlw	0
 39277  0135B4  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 39278  0135B6  0E00               	movlw	0
 39279  0135B8  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 39280  0135BA  C1CB  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 39281  0135BE  C1CC  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 39282  0135C2  C1CD  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 39283  0135C6  C1CE  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 39284  0135CA  EC1F  F0B5         	call	_peakToRMS	;wreg free
 39285  0135CE  C0B1  F0DA         	movff	?_peakToRMS,_ADCPostProcessingCallback$4387
 39286  0135D2  C0B2  F0DB         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$4387+1
 39287  0135D6  C0B3  F0DC         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$4387+2
 39288  0135DA  C0B4  F0DD         	movff	?_peakToRMS+3,_ADCPostProcessingCallback$4387+3
 39289                           
 39290                           ;main.c: 354: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 39291  0135DE  C2F2  F05A         	movff	_Irms_offset,i2___fladd@a
 39292  0135E2  C2F3  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 39293  0135E6  C2F4  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 39294  0135EA  C2F5  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 39295  0135EE  C0DA  F056         	movff	_ADCPostProcessingCallback$4387,i2___fladd@b
 39296  0135F2  C0DB  F057         	movff	_ADCPostProcessingCallback$4387+1,i2___fladd@b+1
 39297  0135F6  C0DC  F058         	movff	_ADCPostProcessingCallback$4387+2,i2___fladd@b+2
 39298  0135FA  C0DD  F059         	movff	_ADCPostProcessingCallback$4387+3,i2___fladd@b+3
 39299  0135FE  EC7B  F0A8         	call	i2___fladd	;wreg free
 39300  013602  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 39301  013606  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 39302  01360A  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 39303  01360E  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 39304  013612  EC45  F0BF         	call	i2___fltol	;wreg free
 39305  013616  C06C  F076         	movff	?i2___fltol,abs@a
 39306  01361A  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 39307  01361E  EC73  F0C9         	call	_abs	;wreg free
 39308  013622  0100               	movlb	0	; () banked
 39309  013624  C076  F005         	movff	?_abs,i2___xxtofl@val
 39310  013628  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 39311  01362C  0E00               	movlw	0
 39312  01362E  BE06               	btfsc	i2___xxtofl@val+1,7,c
 39313  013630  0EFF               	movlw	-1
 39314  013632  6E07               	movwf	i2___xxtofl@val+2,c
 39315  013634  6E08               	movwf	i2___xxtofl@val+3,c
 39316  013636  0E01               	movlw	1
 39317  013638  EC09  F0B8         	call	i2___xxtofl
 39318  01363C  C005  F1C3         	movff	?i2___xxtofl,_Irms	;volatile
 39319  013640  C006  F1C4         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 39320  013644  C007  F1C5         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 39321  013648  C008  F1C6         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 39322                           
 39323                           ;main.c: 355: Vrms = peakToRMS(Vpk_const, 0.0);
 39324  01364C  C2F6  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 39325  013650  C2F7  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 39326  013654  C2F8  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 39327  013658  C2F9  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 39328  01365C  0E00               	movlw	0
 39329  01365E  0100               	movlb	0	; () banked
 39330  013660  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 39331  013662  0E00               	movlw	0
 39332  013664  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 39333  013666  0E00               	movlw	0
 39334  013668  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 39335  01366A  0E00               	movlw	0
 39336  01366C  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 39337  01366E  EC1F  F0B5         	call	_peakToRMS	;wreg free
 39338  013672  C0B1  F1BF         	movff	?_peakToRMS,_Vrms	;volatile
 39339  013676  C0B2  F1C0         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 39340  01367A  C0B3  F1C1         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 39341  01367E  C0B4  F1C2         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 39342                           
 39343                           ;main.c: 356: Avg_Power = Vrms * Irms;
 39344  013682  C1BF  F030         	movff	_Vrms,i2___flmul@b	;volatile
 39345  013686  C1C0  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 39346  01368A  C1C1  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 39347  01368E  C1C2  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 39348  013692  C1C3  F034         	movff	_Irms,i2___flmul@a	;volatile
 39349  013696  C1C4  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 39350  01369A  C1C5  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 39351  01369E  C1C6  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 39352  0136A2  EC34  F0A5         	call	i2___flmul	;wreg free
 39353  0136A6  C030  F1BB         	movff	?i2___flmul,_Avg_Power	;volatile
 39354  0136AA  C031  F1BC         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 39355  0136AE  C032  F1BD         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 39356  0136B2  C033  F1BE         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 39357                           
 39358                           ;main.c: 357: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 39359  0136B6  0E00               	movlw	0
 39360  0136B8  6E17               	movwf	i2___fldiv@a,c
 39361  0136BA  0E00               	movlw	0
 39362  0136BC  6E18               	movwf	i2___fldiv@a+1,c
 39363  0136BE  0E61               	movlw	97
 39364  0136C0  6E19               	movwf	i2___fldiv@a+2,c
 39365  0136C2  0E45               	movlw	69
 39366  0136C4  6E1A               	movwf	i2___fldiv@a+3,c
 39367  0136C6  0E29               	movlw	41
 39368  0136C8  6E34               	movwf	i2___flmul@a,c
 39369  0136CA  0E5C               	movlw	92
 39370  0136CC  6E35               	movwf	i2___flmul@a+1,c
 39371  0136CE  0E8F               	movlw	143
 39372  0136D0  6E36               	movwf	i2___flmul@a+2,c
 39373  0136D2  0E3D               	movlw	61
 39374  0136D4  6E37               	movwf	i2___flmul@a+3,c
 39375  0136D6  C1BB  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 39376  0136DA  C1BC  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 39377  0136DE  C1BD  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 39378  0136E2  C1BE  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 39379  0136E6  EC34  F0A5         	call	i2___flmul	;wreg free
 39380  0136EA  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 39381  0136EE  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 39382  0136F2  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 39383  0136F6  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 39384  0136FA  EC3B  F0B1         	call	i2___fldiv	;wreg free
 39385  0136FE  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 39386  013702  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 39387  013706  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 39388  01370A  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 39389  01370E  C0F6  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 39390  013712  C0F7  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 39391  013716  C0F8  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 39392  01371A  C0F9  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 39393  01371E  EC7B  F0A8         	call	i2___fladd	;wreg free
 39394  013722                     L17:
 39395  013722  C056  F0F6         	movff	?i2___fladd,_Total_Energy	;volatile
 39396  013726  C057  F0F7         	movff	?i2___fladd+1,_Total_Energy+1	;volatile
 39397  01372A  C058  F0F8         	movff	?i2___fladd+2,_Total_Energy+2	;volatile
 39398  01372E  C059  F0F9         	movff	?i2___fladd+3,_Total_Energy+3	;volatile
 39399                           
 39400                           ;main.c: 359: }
 39401                           ;main.c: 361: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 39402  013732  0E00               	movlw	0
 39403  013734  6E34               	movwf	i2___flge@ff1,c
 39404  013736  0E00               	movlw	0
 39405  013738  6E35               	movwf	i2___flge@ff1+1,c
 39406  01373A  0EA0               	movlw	160
 39407  01373C  6E36               	movwf	i2___flge@ff1+2,c
 39408  01373E  0E40               	movlw	64
 39409  013740  6E37               	movwf	i2___flge@ff1+3,c
 39410  013742  C1C3  F038         	movff	_Irms,i2___flge@ff2	;volatile
 39411  013746  C1C4  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 39412  01374A  C1C5  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 39413  01374E  C1C6  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 39414  013752  ECCB  F0BC         	call	i2___flge	;wreg free
 39415  013756  A0D8               	btfss	status,0,c
 39416  013758  D005               	goto	i2u1801_40
 39417  01375A  EC46  F0CB         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 39418  01375E  0900               	iorlw	0
 39419  013760  B4D8               	btfsc	status,2,c
 39420  013762  D007               	goto	i2l1053
 39421  013764                     i2u1801_40:
 39422                           
 39423                           ;main.c: 363: LATFbits.LATF3 = 1;
 39424  013764  867E               	bsf	3966,3,c	;volatile
 39425                           
 39426                           ;main.c: 364: adc_error_flag = 1;
 39427  013766  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 39428                           
 39429                           ;main.c: 366: PIE5bits.TMR7IE = 0;
 39430  013768  010E               	movlb	14	; () banked
 39431  01376A  9D2E               	bcf	46,6,b	;volatile
 39432                           
 39433                           ; BSR set to: 14
 39434                           ;main.c: 367: TMR7_StopTimer();
 39435  01376C  EC67  F0CB         	call	i2_TMR7_StopTimer	;wreg free
 39436                           
 39437                           ;main.c: 368: return;
 39438  013770  0012               	return	
 39439  013772                     i2l1053:
 39440                           
 39441                           ;main.c: 370: }
 39442                           ;main.c: 372: next_channel = POS12_ADC;
 39443  013772  0E04               	movlw	4
 39444  013774  0101               	movlb	1	; () banked
 39445  013776  6FE8               	movwf	_next_channel& (0+255),b
 39446                           
 39447                           ;main.c: 374: break;
 39448  013778  0012               	return	
 39449  01377A                     
 39450                           ;main.c: 379: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 39451                           
 39452                           ; BSR set to: 1
 39453  01377A  0E00               	movlw	0
 39454  01377C  6E17               	movwf	i2___fldiv@a,c
 39455  01377E  0EC0               	movlw	192
 39456  013780  6E18               	movwf	i2___fldiv@a+1,c
 39457  013782  0E7F               	movlw	127
 39458  013784  6E19               	movwf	i2___fldiv@a+2,c
 39459  013786  0E44               	movlw	68
 39460  013788  6E1A               	movwf	i2___fldiv@a+3,c
 39461  01378A  C1D7  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 39462  01378E  C1D8  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 39463  013792  C1D9  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 39464  013796  C1DA  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 39465  01379A  EC3B  F0B1         	call	i2___fldiv	;wreg free
 39466  01379E  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 39467  0137A2  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 39468  0137A6  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 39469  0137AA  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 39470  0137AE  ECBB  F0CA         	call	_ADCC_GetFilterValue	;wreg free
 39471  0137B2  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 39472  0137B6  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 39473  0137BA  6A07               	clrf	i2___xxtofl@val+2,c
 39474  0137BC  6A08               	clrf	i2___xxtofl@val+3,c
 39475  0137BE  0E00               	movlw	0
 39476  0137C0  EC09  F0B8         	call	i2___xxtofl
 39477  0137C4  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 39478  0137C8  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 39479  0137CC  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 39480  0137D0  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 39481  0137D4  EC34  F0A5         	call	i2___flmul	;wreg free
 39482  0137D8  C030  F0D6         	movff	?i2___flmul,_ADCPostProcessingCallback$4386
 39483  0137DC  C031  F0D7         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4386+1
 39484  0137E0  C032  F0D8         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4386+2
 39485  0137E4  C033  F0D9         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4386+3
 39486                           
 39487                           ;main.c: 379: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 39488  0137E8  C0D6  F030         	movff	_ADCPostProcessingCallback$4386,i2___flmul@b
 39489  0137EC  C0D7  F031         	movff	_ADCPostProcessingCallback$4386+1,i2___flmul@b+1
 39490  0137F0  C0D8  F032         	movff	_ADCPostProcessingCallback$4386+2,i2___flmul@b+2
 39491  0137F4  C0D9  F033         	movff	_ADCPostProcessingCallback$4386+3,i2___flmul@b+3
 39492  0137F8  0E3E               	movlw	62
 39493  0137FA  6E34               	movwf	i2___flmul@a,c
 39494  0137FC  0EF8               	movlw	248
 39495  0137FE  6E35               	movwf	i2___flmul@a+1,c
 39496  013800  0E80               	movlw	128
 39497  013802  6E36               	movwf	i2___flmul@a+2,c
 39498  013804  0E40               	movlw	64
 39499  013806  6E37               	movwf	i2___flmul@a+3,c
 39500  013808  EC34  F0A5         	call	i2___flmul	;wreg free
 39501  01380C  C030  F1D3         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 39502  013810  C031  F1D4         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 39503  013814  C032  F1D5         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 39504  013818  C033  F1D6         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 39505                           
 39506                           ;main.c: 381: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 39507  01381C  0E9A               	movlw	154
 39508  01381E  6E34               	movwf	i2___flge@ff1,c
 39509  013820  0E99               	movlw	153
 39510  013822  6E35               	movwf	i2___flge@ff1+1,c
 39511  013824  0E59               	movlw	89
 39512  013826  6E36               	movwf	i2___flge@ff1+2,c
 39513  013828  0E41               	movlw	65
 39514  01382A  6E37               	movwf	i2___flge@ff1+3,c
 39515  01382C  C1D3  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 39516  013830  C1D4  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 39517  013834  C1D5  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 39518  013838  C1D6  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 39519  01383C  ECCB  F0BC         	call	i2___flge	;wreg free
 39520  013840  A0D8               	btfss	status,0,c
 39521  013842  D005               	goto	i2u1803_40
 39522  013844  EC46  F0CB         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 39523  013848  0900               	iorlw	0
 39524  01384A  B4D8               	btfsc	status,2,c
 39525  01384C  D007               	goto	i2l1057
 39526  01384E                     i2u1803_40:
 39527                           
 39528                           ;main.c: 383: LATFbits.LATF3 = 1;
 39529  01384E  867E               	bsf	3966,3,c	;volatile
 39530                           
 39531                           ;main.c: 384: adc_error_flag = 1;
 39532  013850  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 39533                           
 39534                           ;main.c: 386: PIE5bits.TMR7IE = 0;
 39535  013852  010E               	movlb	14	; () banked
 39536  013854  9D2E               	bcf	46,6,b	;volatile
 39537                           
 39538                           ; BSR set to: 14
 39539                           ;main.c: 387: TMR7_StopTimer();
 39540  013856  EC67  F0CB         	call	i2_TMR7_StopTimer	;wreg free
 39541                           
 39542                           ;main.c: 388: return;
 39543  01385A  0012               	return	
 39544  01385C                     i2l1057:
 39545                           
 39546                           ;main.c: 390: }
 39547                           ;main.c: 392: next_channel = channel_Temp;
 39548  01385C  0E3D               	movlw	61
 39549  01385E  0101               	movlb	1	; () banked
 39550  013860  6FE8               	movwf	_next_channel& (0+255),b
 39551                           
 39552                           ;main.c: 394: break;
 39553  013862  0012               	return	
 39554  013864                     
 39555                           ;main.c: 399: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 39556                           
 39557                           ; BSR set to: 1
 39558  013864  0E00               	movlw	0
 39559  013866  6E17               	movwf	i2___fldiv@a,c
 39560  013868  0E00               	movlw	0
 39561  01386A  6E18               	movwf	i2___fldiv@a+1,c
 39562  01386C  0E00               	movlw	0
 39563  01386E  6E19               	movwf	i2___fldiv@a+2,c
 39564  013870  0E40               	movlw	64
 39565  013872  6E1A               	movwf	i2___fldiv@a+3,c
 39566  013874  C1D7  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 39567  013878  C1D8  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 39568  01387C  C1D9  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 39569  013880  C1DA  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 39570  013884  EC3B  F0B1         	call	i2___fldiv	;wreg free
 39571  013888  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 39572  01388C  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 39573  013890  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 39574  013894  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 39575  013898  0E00               	movlw	0
 39576  01389A  6E5A               	movwf	i2___fladd@a,c
 39577  01389C  0E00               	movlw	0
 39578  01389E  6E5B               	movwf	i2___fladd@a+1,c
 39579  0138A0  0E80               	movlw	128
 39580  0138A2  6E5C               	movwf	i2___fladd@a+2,c
 39581  0138A4  0E3F               	movlw	63
 39582  0138A6  6E5D               	movwf	i2___fladd@a+3,c
 39583  0138A8  0E00               	movlw	0
 39584  0138AA  6E17               	movwf	i2___fldiv@a,c
 39585  0138AC  0EC0               	movlw	192
 39586  0138AE  6E18               	movwf	i2___fldiv@a+1,c
 39587  0138B0  0E7F               	movlw	127
 39588  0138B2  6E19               	movwf	i2___fldiv@a+2,c
 39589  0138B4  0E44               	movlw	68
 39590  0138B6  6E1A               	movwf	i2___fldiv@a+3,c
 39591  0138B8  ECBB  F0CA         	call	_ADCC_GetFilterValue	;wreg free
 39592  0138BC  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 39593  0138C0  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 39594  0138C4  6A07               	clrf	i2___xxtofl@val+2,c
 39595  0138C6  6A08               	clrf	i2___xxtofl@val+3,c
 39596  0138C8  0E00               	movlw	0
 39597  0138CA  EC09  F0B8         	call	i2___xxtofl
 39598  0138CE  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 39599  0138D2  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 39600  0138D6  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 39601  0138DA  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 39602  0138DE  EC3B  F0B1         	call	i2___fldiv	;wreg free
 39603  0138E2  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 39604  0138E6  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 39605  0138EA  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 39606  0138EE  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 39607  0138F2  EC5C  F0C9         	call	i2___flneg	;wreg free
 39608  0138F6  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 39609  0138FA  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 39610  0138FE  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 39611  013902  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 39612  013906  EC7B  F0A8         	call	i2___fladd	;wreg free
 39613  01390A  C056  F030         	movff	?i2___fladd,i2___flmul@b
 39614  01390E  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 39615  013912  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 39616  013916  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 39617  01391A  EC34  F0A5         	call	i2___flmul	;wreg free
 39618  01391E  C030  F0C9         	movff	?i2___flmul,_ADCPostProcessingCallback$4388
 39619  013922  C031  F0CA         	movff	?i2___flmul+1,_ADCPostProcessingCallback$4388+1
 39620  013926  C032  F0CB         	movff	?i2___flmul+2,_ADCPostProcessingCallback$4388+2
 39621  01392A  C033  F0CC         	movff	?i2___flmul+3,_ADCPostProcessingCallback$4388+3
 39622                           
 39623                           ;main.c: 399: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 39624  01392E  0EDA               	movlw	218
 39625  013930  6E17               	movwf	i2___fldiv@a,c
 39626  013932  0E03               	movlw	3
 39627  013934  6E18               	movwf	i2___fldiv@a+1,c
 39628  013936  0EAD               	movlw	173
 39629  013938  6E19               	movwf	i2___fldiv@a+2,c
 39630  01393A  0E3A               	movlw	58
 39631  01393C  6E1A               	movwf	i2___fldiv@a+3,c
 39632  01393E  0E39               	movlw	57
 39633  013940  6E5A               	movwf	i2___fladd@a,c
 39634  013942  0EB4               	movlw	180
 39635  013944  6E5B               	movwf	i2___fladd@a+1,c
 39636  013946  0E28               	movlw	40
 39637  013948  6E5C               	movwf	i2___fladd@a+2,c
 39638  01394A  0E3F               	movlw	63
 39639  01394C  6E5D               	movwf	i2___fladd@a+3,c
 39640  01394E  C0C9  F02C         	movff	_ADCPostProcessingCallback$4388,i2___flneg@f1
 39641  013952  C0CA  F02D         	movff	_ADCPostProcessingCallback$4388+1,i2___flneg@f1+1
 39642  013956  C0CB  F02E         	movff	_ADCPostProcessingCallback$4388+2,i2___flneg@f1+2
 39643  01395A  C0CC  F02F         	movff	_ADCPostProcessingCallback$4388+3,i2___flneg@f1+3
 39644  01395E  EC5C  F0C9         	call	i2___flneg	;wreg free
 39645  013962  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 39646  013966  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 39647  01396A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 39648  01396E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 39649  013972  EC7B  F0A8         	call	i2___fladd	;wreg free
 39650  013976  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 39651  01397A  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 39652  01397E  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 39653  013982  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 39654  013986  EC3B  F0B1         	call	i2___fldiv	;wreg free
 39655  01398A  C013  F0CD         	movff	?i2___fldiv,_ADCPostProcessingCallback$4389
 39656  01398E  C014  F0CE         	movff	?i2___fldiv+1,_ADCPostProcessingCallback$4389+1
 39657  013992  C015  F0CF         	movff	?i2___fldiv+2,_ADCPostProcessingCallback$4389+2
 39658  013996  C016  F0D0         	movff	?i2___fldiv+3,_ADCPostProcessingCallback$4389+3
 39659                           
 39660                           ;main.c: 399: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 39661  01399A  C2FA  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 39662  01399E  C2FB  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 39663  0139A2  C2FC  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 39664  0139A6  C2FD  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 39665  0139AA  C0CD  F056         	movff	_ADCPostProcessingCallback$4389,i2___fladd@b
 39666  0139AE  C0CE  F057         	movff	_ADCPostProcessingCallback$4389+1,i2___fladd@b+1
 39667  0139B2  C0CF  F058         	movff	_ADCPostProcessingCallback$4389+2,i2___fladd@b+2
 39668  0139B6  C0D0  F059         	movff	_ADCPostProcessingCallback$4389+3,i2___fladd@b+3
 39669  0139BA  EC7B  F0A8         	call	i2___fladd	;wreg free
 39670  0139BE  C056  F0D1         	movff	?i2___fladd,_ADCPostProcessingCallback$4390
 39671  0139C2  C057  F0D2         	movff	?i2___fladd+1,_ADCPostProcessingCallback$4390+1
 39672  0139C6  C058  F0D3         	movff	?i2___fladd+2,_ADCPostProcessingCallback$4390+2
 39673  0139CA  C059  F0D4         	movff	?i2___fladd+3,_ADCPostProcessingCallback$4390+3
 39674                           
 39675                           ;main.c: 399: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetFilterVa
      +                          lue()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 39676  0139CE  C0D1  F056         	movff	_ADCPostProcessingCallback$4390,i2___fladd@b
 39677  0139D2  C0D2  F057         	movff	_ADCPostProcessingCallback$4390+1,i2___fladd@b+1
 39678  0139D6  C0D3  F058         	movff	_ADCPostProcessingCallback$4390+2,i2___fladd@b+2
 39679  0139DA  C0D4  F059         	movff	_ADCPostProcessingCallback$4390+3,i2___fladd@b+3
 39680  0139DE  0E00               	movlw	0
 39681  0139E0  6E5A               	movwf	i2___fladd@a,c
 39682  0139E2  0E00               	movlw	0
 39683  0139E4  6E5B               	movwf	i2___fladd@a+1,c
 39684  0139E6  0E20               	movlw	32
 39685  0139E8  6E5C               	movwf	i2___fladd@a+2,c
 39686  0139EA  0EC2               	movlw	194
 39687  0139EC  6E5D               	movwf	i2___fladd@a+3,c
 39688  0139EE  EC7B  F0A8         	call	i2___fladd	;wreg free
 39689  0139F2  C056  F1CF         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 39690  0139F6  C057  F1D0         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 39691  0139FA  C058  F1D1         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 39692  0139FE  C059  F1D2         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 39693                           
 39694                           ;main.c: 401: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 39695  013A02  0E00               	movlw	0
 39696  013A04  6E34               	movwf	i2___flge@ff1,c
 39697  013A06  0E00               	movlw	0
 39698  013A08  6E35               	movwf	i2___flge@ff1+1,c
 39699  013A0A  0E20               	movlw	32
 39700  013A0C  6E36               	movwf	i2___flge@ff1+2,c
 39701  013A0E  0E42               	movlw	66
 39702  013A10  6E37               	movwf	i2___flge@ff1+3,c
 39703  013A12  C1CF  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 39704  013A16  C1D0  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 39705  013A1A  C1D1  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 39706  013A1E  C1D2  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 39707  013A22  ECCB  F0BC         	call	i2___flge	;wreg free
 39708  013A26  A0D8               	btfss	status,0,c
 39709  013A28  D005               	goto	i2u1805_40
 39710  013A2A  EC46  F0CB         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 39711  013A2E  0900               	iorlw	0
 39712  013A30  B4D8               	btfsc	status,2,c
 39713  013A32  D007               	goto	i2l1061
 39714  013A34                     i2u1805_40:
 39715                           
 39716                           ;main.c: 403: LATFbits.LATF3 = 1;
 39717  013A34  867E               	bsf	3966,3,c	;volatile
 39718                           
 39719                           ;main.c: 404: adc_error_flag = 1;
 39720  013A36  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 39721                           
 39722                           ;main.c: 406: PIE5bits.TMR7IE = 0;
 39723  013A38  010E               	movlb	14	; () banked
 39724  013A3A  9D2E               	bcf	46,6,b	;volatile
 39725                           
 39726                           ; BSR set to: 14
 39727                           ;main.c: 407: TMR7_StopTimer();
 39728  013A3C  EC67  F0CB         	call	i2_TMR7_StopTimer	;wreg free
 39729                           
 39730                           ;main.c: 408: return;
 39731  013A40  0012               	return	
 39732  013A42                     i2l1061:
 39733                           
 39734                           ;main.c: 410: }
 39735                           ;main.c: 412: next_channel = channel_VSS;
 39736  013A42  0E3C               	movlw	60
 39737  013A44  0101               	movlb	1	; () banked
 39738  013A46  6FE8               	movwf	_next_channel& (0+255),b
 39739                           
 39740                           ;main.c: 414: break;
 39741  013A48  0012               	return	
 39742  013A4A                     i2l1064:
 39743                           
 39744                           ; BSR set to: 0
 39745                           ;main.c: 419: LATFbits.LATF3 = 1;
 39746  013A4A  867E               	bsf	3966,3,c	;volatile
 39747                           
 39748                           ;main.c: 420: adc_error_flag = 1;
 39749  013A4C  825E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 39750                           
 39751                           ; BSR set to: 0
 39752                           ;main.c: 422: PIE5bits.TMR7IE == 0;
 39753  013A4E  010E               	movlb	14	; () banked
 39754  013A50  512E               	movf	46,w,b	;volatile
 39755                           
 39756                           ; BSR set to: 14
 39757                           ;main.c: 423: TMR7_StopTimer();
 39758  013A52  EC67  F0CB         	call	i2_TMR7_StopTimer	;wreg free
 39759                           
 39760                           ;main.c: 426: }
 39761                           
 39762                           ;main.c: 424: break;
 39763  013A56  0012               	return	
 39764  013A58                     i2l1031:
 39765  013A58  0100               	movlb	0	; () banked
 39766  013A5A  51D5               	movf	ADCPostProcessingCallback@current_adc_channel& (0+255),w,b
 39767                           
 39768                           ; Switch size 1, requested type "space"
 39769                           ; Number of cases is 6, Range of values is 0 to 63
 39770                           ; switch strategies available:
 39771                           ; Name         Instructions Cycles
 39772                           ; simple_byte           19    10 (average)
 39773                           ;	Chosen strategy is simple_byte
 39774  013A5C  0A00               	xorlw	0	; case 0
 39775  013A5E  B4D8               	btfsc	status,2,c
 39776  013A60  EF13  F099         	goto	i2l1046
 39777  013A64  0A04               	xorlw	4	; case 4
 39778  013A66  B4D8               	btfsc	status,2,c
 39779  013A68  D688               	goto	i2l1056
 39780  013A6A  0A26               	xorlw	38	; case 34
 39781  013A6C  B4D8               	btfsc	status,2,c
 39782  013A6E  EFB0  F098         	goto	i2l1042
 39783  013A72  0A1E               	xorlw	30	; case 60
 39784  013A74  B4D8               	btfsc	status,2,c
 39785  013A76  EFDE  F097         	goto	i2l1032
 39786  013A7A  0A01               	xorlw	1	; case 61
 39787  013A7C  B4D8               	btfsc	status,2,c
 39788  013A7E  D6F2               	goto	i2l1060
 39789  013A80  0A02               	xorlw	2	; case 63
 39790  013A82  B4D8               	btfsc	status,2,c
 39791  013A84  EF27  F098         	goto	i2l1038
 39792  013A88  D7E0               	goto	i2l1064
 39793  013A8A                     __end_of_ADCPostProcessingCallback:
 39794                           	opt stack 0
 39795                           tosu	equ	0xFFF
 39796                           tosh	equ	0xFFE
 39797                           tosl	equ	0xFFD
 39798                           pclatu	equ	0xFFB
 39799                           pclath	equ	0xFFA
 39800                           tblptru	equ	0xFF8
 39801                           tblptrh	equ	0xFF7
 39802                           tblptrl	equ	0xFF6
 39803                           tablat	equ	0xFF5
 39804                           prodh	equ	0xFF4
 39805                           prodl	equ	0xFF3
 39806                           intcon	equ	0xFF2
 39807                           indf0	equ	0xFEF
 39808                           postinc0	equ	0xFEE
 39809                           fsr0h	equ	0xFEA
 39810                           fsr0l	equ	0xFE9
 39811                           wreg	equ	0xFE8
 39812                           indf1	equ	0xFE7
 39813                           postdec1	equ	0xFE5
 39814                           plusw1	equ	0xFE3
 39815                           fsr1h	equ	0xFE2
 39816                           fsr1l	equ	0xFE1
 39817                           bsr	equ	0xFE0
 39818                           indf2	equ	0xFDF
 39819                           postinc2	equ	0xFDE
 39820                           postdec2	equ	0xFDD
 39821                           plusw2	equ	0xFDB
 39822                           fsr2h	equ	0xFDA
 39823                           fsr2l	equ	0xFD9
 39824                           status	equ	0xFD8
 39825                           
 39826 ;; *************** function i2_TMR7_StopTimer *****************
 39827 ;; Defined at:
 39828 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 39829 ;; Parameters:    Size  Location     Type
 39830 ;;		None
 39831 ;; Auto vars:     Size  Location     Type
 39832 ;;		None
 39833 ;; Return value:  Size  Location     Type
 39834 ;;                  1    wreg      void 
 39835 ;; Registers used:
 39836 ;;		None
 39837 ;; Tracked objects:
 39838 ;;		On entry : 0/0
 39839 ;;		On exit  : 0/0
 39840 ;;		Unchanged: 0/0
 39841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39846 ;;Total ram usage:        0 bytes
 39847 ;; Hardware stack levels used:    1
 39848 ;; This function calls:
 39849 ;;		Nothing
 39850 ;; This function is called by:
 39851 ;;		_ADCPostProcessingCallback
 39852 ;; This function uses a non-reentrant model
 39853 ;;
 39854                           
 39855                           	psect	text119
 39856  0196CE                     __ptext119:
 39857                           	opt stack 0
 39858  0196CE                     i2_TMR7_StopTimer:
 39859                           	opt stack 16
 39860                           
 39861                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 39862                           
 39863                           ;incstack = 0
 39864  0196CE  010F               	movlb	15	; () banked
 39865  0196D0  9130               	bcf	48,0,b	;volatile
 39866                           
 39867                           ; BSR set to: 15
 39868  0196D2  0012               	return		;funcret
 39869  0196D4                     __end_ofi2_TMR7_StopTimer:
 39870                           	opt stack 0
 39871                           tosu	equ	0xFFF
 39872                           tosh	equ	0xFFE
 39873                           tosl	equ	0xFFD
 39874                           pclatu	equ	0xFFB
 39875                           pclath	equ	0xFFA
 39876                           tblptru	equ	0xFF8
 39877                           tblptrh	equ	0xFF7
 39878                           tblptrl	equ	0xFF6
 39879                           tablat	equ	0xFF5
 39880                           prodh	equ	0xFF4
 39881                           prodl	equ	0xFF3
 39882                           intcon	equ	0xFF2
 39883                           indf0	equ	0xFEF
 39884                           postinc0	equ	0xFEE
 39885                           fsr0h	equ	0xFEA
 39886                           fsr0l	equ	0xFE9
 39887                           wreg	equ	0xFE8
 39888                           indf1	equ	0xFE7
 39889                           postdec1	equ	0xFE5
 39890                           plusw1	equ	0xFE3
 39891                           fsr1h	equ	0xFE2
 39892                           fsr1l	equ	0xFE1
 39893                           bsr	equ	0xFE0
 39894                           indf2	equ	0xFDF
 39895                           postinc2	equ	0xFDE
 39896                           postdec2	equ	0xFDD
 39897                           plusw2	equ	0xFDB
 39898                           fsr2h	equ	0xFDA
 39899                           fsr2l	equ	0xFD9
 39900                           status	equ	0xFD8
 39901                           
 39902 ;; *************** function _peakToRMS *****************
 39903 ;; Defined at:
 39904 ;;		line 125 in file "main.c"
 39905 ;; Parameters:    Size  Location     Type
 39906 ;;  Peak            4   81[BANK0 ] void 
 39907 ;;  Angle           4   85[BANK0 ] void 
 39908 ;; Auto vars:     Size  Location     Type
 39909 ;;  RMS             4  101[BANK0 ] void 
 39910 ;; Return value:  Size  Location     Type
 39911 ;;                  4   81[BANK0 ] void 
 39912 ;; Registers used:
 39913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39914 ;; Tracked objects:
 39915 ;;		On entry : 0/0
 39916 ;;		On exit  : 0/0
 39917 ;;		Unchanged: 0/0
 39918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39919 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39920 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39922 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39923 ;;Total ram usage:       24 bytes
 39924 ;; Hardware stack levels used:    1
 39925 ;; Hardware stack levels required when called:    5
 39926 ;; This function calls:
 39927 ;;		_acos
 39928 ;;		_sin
 39929 ;;		_sqrt
 39930 ;;		i2___fladd
 39931 ;;		i2___fldiv
 39932 ;;		i2___flmul
 39933 ;;		i2___flneg
 39934 ;; This function is called by:
 39935 ;;		_ADCPostProcessingCallback
 39936 ;; This function uses a non-reentrant model
 39937 ;;
 39938                           
 39939                           	psect	text120
 39940  016A3E                     __ptext120:
 39941                           	opt stack 0
 39942  016A3E                     _peakToRMS:
 39943                           	opt stack 11
 39944                           
 39945                           ;main.c: 128: double RMS = 0.0;
 39946                           
 39947                           ; BSR set to: 15
 39948                           ;incstack = 0
 39949  016A3E  0E00               	movlw	0
 39950  016A40  0100               	movlb	0	; () banked
 39951  016A42  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 39952  016A44  0E00               	movlw	0
 39953  016A46  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 39954  016A48  0E00               	movlw	0
 39955  016A4A  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 39956  016A4C  0E00               	movlw	0
 39957  016A4E  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 39958                           
 39959                           ; BSR set to: 0
 39960                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 39961  016A50  0E00               	movlw	0
 39962  016A52  6FA9               	movwf	acos@x& (0+255),b
 39963  016A54  0E00               	movlw	0
 39964  016A56  6FAA               	movwf	(acos@x+1)& (0+255),b
 39965  016A58  0E80               	movlw	128
 39966  016A5A  6FAB               	movwf	(acos@x+2)& (0+255),b
 39967  016A5C  0EBF               	movlw	191
 39968  016A5E  6FAC               	movwf	(acos@x+3)& (0+255),b
 39969  016A60  ECF6  F0C3         	call	_acos	;wreg free
 39970  016A64  C0A9  F0C1         	movff	?_acos,_peakToRMS$4383
 39971  016A68  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4383+1
 39972  016A6C  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4383+2
 39973  016A70  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4383+3
 39974                           
 39975                           ;main.c: 131: RMS = 2.0 * acos(-1.0);
 39976  016A74  C0C1  F030         	movff	_peakToRMS$4383,i2___flmul@b
 39977  016A78  C0C2  F031         	movff	_peakToRMS$4383+1,i2___flmul@b+1
 39978  016A7C  C0C3  F032         	movff	_peakToRMS$4383+2,i2___flmul@b+2
 39979  016A80  C0C4  F033         	movff	_peakToRMS$4383+3,i2___flmul@b+3
 39980  016A84  0E00               	movlw	0
 39981  016A86  6E34               	movwf	i2___flmul@a,c
 39982  016A88  0E00               	movlw	0
 39983  016A8A  6E35               	movwf	i2___flmul@a+1,c
 39984  016A8C  0E00               	movlw	0
 39985  016A8E  6E36               	movwf	i2___flmul@a+2,c
 39986  016A90  0E40               	movlw	64
 39987  016A92  6E37               	movwf	i2___flmul@a+3,c
 39988  016A94  EC34  F0A5         	call	i2___flmul	;wreg free
 39989  016A98  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 39990  016A9C  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 39991  016AA0  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 39992  016AA4  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 39993                           
 39994                           ;main.c: 132: RMS = RMS - (2.0 * Angle);
 39995  016AA8  0E00               	movlw	0
 39996  016AAA  6E34               	movwf	i2___flmul@a,c
 39997  016AAC  0E00               	movlw	0
 39998  016AAE  6E35               	movwf	i2___flmul@a+1,c
 39999  016AB0  0E00               	movlw	0
 40000  016AB2  6E36               	movwf	i2___flmul@a+2,c
 40001  016AB4  0E40               	movlw	64
 40002  016AB6  6E37               	movwf	i2___flmul@a+3,c
 40003  016AB8  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 40004  016ABC  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 40005  016AC0  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 40006  016AC4  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 40007  016AC8  EC34  F0A5         	call	i2___flmul	;wreg free
 40008  016ACC  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 40009  016AD0  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 40010  016AD4  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 40011  016AD8  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 40012  016ADC  EC5C  F0C9         	call	i2___flneg	;wreg free
 40013  016AE0  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 40014  016AE4  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 40015  016AE8  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 40016  016AEC  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 40017  016AF0  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 40018  016AF4  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 40019  016AF8  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 40020  016AFC  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 40021  016B00  EC7B  F0A8         	call	i2___fladd	;wreg free
 40022  016B04  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 40023  016B08  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 40024  016B0C  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 40025  016B10  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 40026                           
 40027                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 40028  016B14  0E00               	movlw	0
 40029  016B16  6E34               	movwf	i2___flmul@a,c
 40030  016B18  0E00               	movlw	0
 40031  016B1A  6E35               	movwf	i2___flmul@a+1,c
 40032  016B1C  0E00               	movlw	0
 40033  016B1E  6E36               	movwf	i2___flmul@a+2,c
 40034  016B20  0E40               	movlw	64
 40035  016B22  6E37               	movwf	i2___flmul@a+3,c
 40036  016B24  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 40037  016B28  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 40038  016B2C  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 40039  016B30  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 40040  016B34  EC34  F0A5         	call	i2___flmul	;wreg free
 40041  016B38  C030  F0B9         	movff	?i2___flmul,_peakToRMS$4384
 40042  016B3C  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$4384+1
 40043  016B40  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$4384+2
 40044  016B44  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$4384+3
 40045                           
 40046                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 40047  016B48  C0B9  F088         	movff	_peakToRMS$4384,sin@f
 40048  016B4C  C0BA  F089         	movff	_peakToRMS$4384+1,sin@f+1
 40049  016B50  C0BB  F08A         	movff	_peakToRMS$4384+2,sin@f+2
 40050  016B54  C0BC  F08B         	movff	_peakToRMS$4384+3,sin@f+3
 40051  016B58  EC9C  F0AB         	call	_sin	;wreg free
 40052  016B5C  C088  F0BD         	movff	?_sin,_peakToRMS$4385
 40053  016B60  C089  F0BE         	movff	?_sin+1,_peakToRMS$4385+1
 40054  016B64  C08A  F0BF         	movff	?_sin+2,_peakToRMS$4385+2
 40055  016B68  C08B  F0C0         	movff	?_sin+3,_peakToRMS$4385+3
 40056                           
 40057                           ;main.c: 133: RMS = RMS + sin(2.0 * Angle);
 40058  016B6C  C0BD  F056         	movff	_peakToRMS$4385,i2___fladd@b
 40059  016B70  C0BE  F057         	movff	_peakToRMS$4385+1,i2___fladd@b+1
 40060  016B74  C0BF  F058         	movff	_peakToRMS$4385+2,i2___fladd@b+2
 40061  016B78  C0C0  F059         	movff	_peakToRMS$4385+3,i2___fladd@b+3
 40062  016B7C  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 40063  016B80  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 40064  016B84  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 40065  016B88  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 40066  016B8C  EC7B  F0A8         	call	i2___fladd	;wreg free
 40067  016B90  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 40068  016B94  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 40069  016B98  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 40070  016B9C  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 40071                           
 40072                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 40073  016BA0  0E00               	movlw	0
 40074  016BA2  0100               	movlb	0	; () banked
 40075  016BA4  6FA9               	movwf	acos@x& (0+255),b
 40076  016BA6  0E00               	movlw	0
 40077  016BA8  6FAA               	movwf	(acos@x+1)& (0+255),b
 40078  016BAA  0E80               	movlw	128
 40079  016BAC  6FAB               	movwf	(acos@x+2)& (0+255),b
 40080  016BAE  0EBF               	movlw	191
 40081  016BB0  6FAC               	movwf	(acos@x+3)& (0+255),b
 40082  016BB2  ECF6  F0C3         	call	_acos	;wreg free
 40083  016BB6  C0A9  F0C1         	movff	?_acos,_peakToRMS$4383
 40084  016BBA  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$4383+1
 40085  016BBE  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$4383+2
 40086  016BC2  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$4383+3
 40087                           
 40088                           ;main.c: 134: RMS = RMS / (4.0 * acos(-1.0));
 40089  016BC6  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 40090  016BCA  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 40091  016BCE  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 40092  016BD2  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 40093  016BD6  0E00               	movlw	0
 40094  016BD8  6E34               	movwf	i2___flmul@a,c
 40095  016BDA  0E00               	movlw	0
 40096  016BDC  6E35               	movwf	i2___flmul@a+1,c
 40097  016BDE  0E80               	movlw	128
 40098  016BE0  6E36               	movwf	i2___flmul@a+2,c
 40099  016BE2  0E40               	movlw	64
 40100  016BE4  6E37               	movwf	i2___flmul@a+3,c
 40101  016BE6  C0C1  F030         	movff	_peakToRMS$4383,i2___flmul@b
 40102  016BEA  C0C2  F031         	movff	_peakToRMS$4383+1,i2___flmul@b+1
 40103  016BEE  C0C3  F032         	movff	_peakToRMS$4383+2,i2___flmul@b+2
 40104  016BF2  C0C4  F033         	movff	_peakToRMS$4383+3,i2___flmul@b+3
 40105  016BF6  EC34  F0A5         	call	i2___flmul	;wreg free
 40106  016BFA  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 40107  016BFE  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 40108  016C02  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 40109  016C06  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 40110  016C0A  EC3B  F0B1         	call	i2___fldiv	;wreg free
 40111  016C0E  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 40112  016C12  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 40113  016C16  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 40114  016C1A  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 40115                           
 40116                           ;main.c: 135: RMS = sqrt(RMS);
 40117  016C1E  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 40118  016C22  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 40119  016C26  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 40120  016C2A  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 40121  016C2E  EC19  F0AD         	call	_sqrt	;wreg free
 40122  016C32  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 40123  016C36  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 40124  016C3A  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 40125  016C3E  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 40126                           
 40127                           ;main.c: 136: RMS = Peak * RMS;
 40128  016C42  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 40129  016C46  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 40130  016C4A  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 40131  016C4E  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 40132  016C52  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 40133  016C56  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 40134  016C5A  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 40135  016C5E  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 40136  016C62  EC34  F0A5         	call	i2___flmul	;wreg free
 40137  016C66  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 40138  016C6A  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 40139  016C6E  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 40140  016C72  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 40141                           
 40142                           ;main.c: 137: return RMS;
 40143  016C76  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 40144  016C7A  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 40145  016C7E  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 40146  016C82  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 40147  016C86  0012               	return	
 40148  016C88                     __end_of_peakToRMS:
 40149                           	opt stack 0
 40150                           tosu	equ	0xFFF
 40151                           tosh	equ	0xFFE
 40152                           tosl	equ	0xFFD
 40153                           pclatu	equ	0xFFB
 40154                           pclath	equ	0xFFA
 40155                           tblptru	equ	0xFF8
 40156                           tblptrh	equ	0xFF7
 40157                           tblptrl	equ	0xFF6
 40158                           tablat	equ	0xFF5
 40159                           prodh	equ	0xFF4
 40160                           prodl	equ	0xFF3
 40161                           intcon	equ	0xFF2
 40162                           indf0	equ	0xFEF
 40163                           postinc0	equ	0xFEE
 40164                           fsr0h	equ	0xFEA
 40165                           fsr0l	equ	0xFE9
 40166                           wreg	equ	0xFE8
 40167                           indf1	equ	0xFE7
 40168                           postdec1	equ	0xFE5
 40169                           plusw1	equ	0xFE3
 40170                           fsr1h	equ	0xFE2
 40171                           fsr1l	equ	0xFE1
 40172                           bsr	equ	0xFE0
 40173                           indf2	equ	0xFDF
 40174                           postinc2	equ	0xFDE
 40175                           postdec2	equ	0xFDD
 40176                           plusw2	equ	0xFDB
 40177                           fsr2h	equ	0xFDA
 40178                           fsr2l	equ	0xFD9
 40179                           status	equ	0xFD8
 40180                           
 40181 ;; *************** function _acos *****************
 40182 ;; Defined at:
 40183 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 40184 ;; Parameters:    Size  Location     Type
 40185 ;;  x               4   73[BANK0 ] void 
 40186 ;; Auto vars:     Size  Location     Type
 40187 ;;		None
 40188 ;; Return value:  Size  Location     Type
 40189 ;;                  4   73[BANK0 ] void 
 40190 ;; Registers used:
 40191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40192 ;; Tracked objects:
 40193 ;;		On entry : 0/0
 40194 ;;		On exit  : 0/0
 40195 ;;		Unchanged: 0/0
 40196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40197 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40198 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40200 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40201 ;;Total ram usage:        8 bytes
 40202 ;; Hardware stack levels used:    1
 40203 ;; Hardware stack levels required when called:    4
 40204 ;; This function calls:
 40205 ;;		_asin
 40206 ;;		i2___fladd
 40207 ;;		i2___flneg
 40208 ;; This function is called by:
 40209 ;;		_peakToRMS
 40210 ;; This function uses a non-reentrant model
 40211 ;;
 40212                           
 40213                           	psect	text121
 40214  0187EC                     __ptext121:
 40215                           	opt stack 0
 40216  0187EC                     _acos:
 40217                           	opt stack 11
 40218                           
 40219                           ;incstack = 0
 40220  0187EC  C0A9  F091         	movff	acos@x,asin@x
 40221  0187F0  C0AA  F092         	movff	acos@x+1,asin@x+1
 40222  0187F4  C0AB  F093         	movff	acos@x+2,asin@x+2
 40223  0187F8  C0AC  F094         	movff	acos@x+3,asin@x+3
 40224  0187FC  EC1A  F0AA         	call	_asin	;wreg free
 40225  018800  C091  F0AD         	movff	?_asin,_acos$4391
 40226  018804  C092  F0AE         	movff	?_asin+1,_acos$4391+1
 40227  018808  C093  F0AF         	movff	?_asin+2,_acos$4391+2
 40228  01880C  C094  F0B0         	movff	?_asin+3,_acos$4391+3
 40229  018810  C0AD  F02C         	movff	_acos$4391,i2___flneg@f1
 40230  018814  C0AE  F02D         	movff	_acos$4391+1,i2___flneg@f1+1
 40231  018818  C0AF  F02E         	movff	_acos$4391+2,i2___flneg@f1+2
 40232  01881C  C0B0  F02F         	movff	_acos$4391+3,i2___flneg@f1+3
 40233  018820  EC5C  F0C9         	call	i2___flneg	;wreg free
 40234  018824  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 40235  018828  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 40236  01882C  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 40237  018830  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 40238  018834  0EDB               	movlw	219
 40239  018836  6E5A               	movwf	i2___fladd@a,c
 40240  018838  0E0F               	movlw	15
 40241  01883A  6E5B               	movwf	i2___fladd@a+1,c
 40242  01883C  0EC9               	movlw	201
 40243  01883E  6E5C               	movwf	i2___fladd@a+2,c
 40244  018840  0E3F               	movlw	63
 40245  018842  6E5D               	movwf	i2___fladd@a+3,c
 40246  018844  EC7B  F0A8         	call	i2___fladd	;wreg free
 40247  018848  C056  F0A9         	movff	?i2___fladd,?_acos
 40248  01884C  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 40249  018850  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 40250  018854  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 40251  018858  0012               	return	
 40252  01885A                     __end_of_acos:
 40253                           	opt stack 0
 40254                           tosu	equ	0xFFF
 40255                           tosh	equ	0xFFE
 40256                           tosl	equ	0xFFD
 40257                           pclatu	equ	0xFFB
 40258                           pclath	equ	0xFFA
 40259                           tblptru	equ	0xFF8
 40260                           tblptrh	equ	0xFF7
 40261                           tblptrl	equ	0xFF6
 40262                           tablat	equ	0xFF5
 40263                           prodh	equ	0xFF4
 40264                           prodl	equ	0xFF3
 40265                           intcon	equ	0xFF2
 40266                           indf0	equ	0xFEF
 40267                           postinc0	equ	0xFEE
 40268                           fsr0h	equ	0xFEA
 40269                           fsr0l	equ	0xFE9
 40270                           wreg	equ	0xFE8
 40271                           indf1	equ	0xFE7
 40272                           postdec1	equ	0xFE5
 40273                           plusw1	equ	0xFE3
 40274                           fsr1h	equ	0xFE2
 40275                           fsr1l	equ	0xFE1
 40276                           bsr	equ	0xFE0
 40277                           indf2	equ	0xFDF
 40278                           postinc2	equ	0xFDE
 40279                           postdec2	equ	0xFDD
 40280                           plusw2	equ	0xFDB
 40281                           fsr2h	equ	0xFDA
 40282                           fsr2l	equ	0xFD9
 40283                           status	equ	0xFD8
 40284                           
 40285 ;; *************** function _asin *****************
 40286 ;; Defined at:
 40287 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 40288 ;; Parameters:    Size  Location     Type
 40289 ;;  x               4   49[BANK0 ] void 
 40290 ;; Auto vars:     Size  Location     Type
 40291 ;;  y               4   65[BANK0 ] void 
 40292 ;;  sgn             4   53[BANK0 ] void 
 40293 ;; Return value:  Size  Location     Type
 40294 ;;                  4   49[BANK0 ] void 
 40295 ;; Registers used:
 40296 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40297 ;; Tracked objects:
 40298 ;;		On entry : 0/0
 40299 ;;		On exit  : 0/0
 40300 ;;		Unchanged: 0/0
 40301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40302 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40303 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40305 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40306 ;;Total ram usage:       24 bytes
 40307 ;; Hardware stack levels used:    1
 40308 ;; Hardware stack levels required when called:    3
 40309 ;; This function calls:
 40310 ;;		_atan
 40311 ;;		_fabs
 40312 ;;		_sqrt
 40313 ;;		i2___fladd
 40314 ;;		i2___fldiv
 40315 ;;		i2___flge
 40316 ;;		i2___flmul
 40317 ;;		i2___flneg
 40318 ;; This function is called by:
 40319 ;;		_acos
 40320 ;; This function uses a non-reentrant model
 40321 ;;
 40322                           
 40323                           	psect	text122
 40324  015434                     __ptext122:
 40325                           	opt stack 0
 40326  015434                     _asin:
 40327                           	opt stack 11
 40328                           
 40329                           ;incstack = 0
 40330  015434  0E00               	movlw	0
 40331  015436  6E34               	movwf	i2___flge@ff1,c
 40332  015438  0E00               	movlw	0
 40333  01543A  6E35               	movwf	i2___flge@ff1+1,c
 40334  01543C  0E80               	movlw	128
 40335  01543E  6E36               	movwf	i2___flge@ff1+2,c
 40336  015440  0E3F               	movlw	63
 40337  015442  6E37               	movwf	i2___flge@ff1+3,c
 40338  015444  C091  F030         	movff	asin@x,fabs@d
 40339  015448  C092  F031         	movff	asin@x+1,fabs@d+1
 40340  01544C  C093  F032         	movff	asin@x+2,fabs@d+2
 40341  015450  C094  F033         	movff	asin@x+3,fabs@d+3
 40342  015454  EC20  F0C8         	call	_fabs	;wreg free
 40343  015458  C030  F038         	movff	?_fabs,i2___flge@ff2
 40344  01545C  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 40345  015460  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 40346  015464  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 40347  015468  ECCB  F0BC         	call	i2___flge	;wreg free
 40348  01546C  B0D8               	btfsc	status,0,c
 40349  01546E  D00F               	goto	i2l1828
 40350  015470  0E00               	movlw	0
 40351  015472  0102               	movlb	2	; () banked
 40352  015474  6F3E               	movwf	(_errno+1)& (0+255),b
 40353  015476  0E21               	movlw	33
 40354  015478  6F3D               	movwf	_errno& (0+255),b
 40355  01547A  0E00               	movlw	0
 40356  01547C  0100               	movlb	0	; () banked
 40357  01547E  6F91               	movwf	?_asin& (0+255),b
 40358  015480  0E00               	movlw	0
 40359  015482  6F92               	movwf	(?_asin+1)& (0+255),b
 40360  015484  0E00               	movlw	0
 40361  015486  6F93               	movwf	(?_asin+2)& (0+255),b
 40362  015488  0E00               	movlw	0
 40363  01548A  6F94               	movwf	(?_asin+3)& (0+255),b
 40364                           
 40365                           ; BSR set to: 0
 40366  01548C  0012               	return	
 40367  01548E                     i2l1828:
 40368                           
 40369                           ; BSR set to: 0
 40370  01548E  0E00               	movlw	0
 40371  015490  0100               	movlb	0	; () banked
 40372  015492  6F95               	movwf	asin@sgn& (0+255),b
 40373  015494  0E00               	movlw	0
 40374  015496  6F96               	movwf	(asin@sgn+1)& (0+255),b
 40375  015498  0E80               	movlw	128
 40376  01549A  6F97               	movwf	(asin@sgn+2)& (0+255),b
 40377  01549C  0E3F               	movlw	63
 40378  01549E  6F98               	movwf	(asin@sgn+3)& (0+255),b
 40379                           
 40380                           ; BSR set to: 0
 40381  0154A0  C091  F034         	movff	asin@x,i2___flmul@a
 40382  0154A4  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 40383  0154A8  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 40384  0154AC  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 40385  0154B0  C091  F030         	movff	asin@x,i2___flmul@b
 40386  0154B4  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 40387  0154B8  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 40388  0154BC  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 40389  0154C0  EC34  F0A5         	call	i2___flmul	;wreg free
 40390  0154C4  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 40391  0154C8  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 40392  0154CC  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 40393  0154D0  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 40394  0154D4  EC5C  F0C9         	call	i2___flneg	;wreg free
 40395  0154D8  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 40396  0154DC  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 40397  0154E0  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 40398  0154E4  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 40399  0154E8  0E00               	movlw	0
 40400  0154EA  6E5A               	movwf	i2___fladd@a,c
 40401  0154EC  0E00               	movlw	0
 40402  0154EE  6E5B               	movwf	i2___fladd@a+1,c
 40403  0154F0  0E80               	movlw	128
 40404  0154F2  6E5C               	movwf	i2___fladd@a+2,c
 40405  0154F4  0E3F               	movlw	63
 40406  0154F6  6E5D               	movwf	i2___fladd@a+3,c
 40407  0154F8  EC7B  F0A8         	call	i2___fladd	;wreg free
 40408  0154FC  C056  F06C         	movff	?i2___fladd,sqrt@a
 40409  015500  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 40410  015504  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 40411  015508  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 40412  01550C  EC19  F0AD         	call	_sqrt	;wreg free
 40413  015510  C06C  F0A1         	movff	?_sqrt,asin@y
 40414  015514  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 40415  015518  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 40416  01551C  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 40417  015520  C091  F030         	movff	asin@x,fabs@d
 40418  015524  C092  F031         	movff	asin@x+1,fabs@d+1
 40419  015528  C093  F032         	movff	asin@x+2,fabs@d+2
 40420  01552C  C094  F033         	movff	asin@x+3,fabs@d+3
 40421  015530  EC20  F0C8         	call	_fabs	;wreg free
 40422  015534  C030  F034         	movff	?_fabs,i2___flge@ff1
 40423  015538  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 40424  01553C  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 40425  015540  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 40426  015544  0E8F               	movlw	143
 40427  015546  6E38               	movwf	i2___flge@ff2,c
 40428  015548  0EC2               	movlw	194
 40429  01554A  6E39               	movwf	i2___flge@ff2+1,c
 40430  01554C  0E35               	movlw	53
 40431  01554E  6E3A               	movwf	i2___flge@ff2+2,c
 40432  015550  0E3F               	movlw	63
 40433  015552  6E3B               	movwf	i2___flge@ff2+3,c
 40434  015554  ECCB  F0BC         	call	i2___flge	;wreg free
 40435  015558  B0D8               	btfsc	status,0,c
 40436  01555A  D02D               	goto	i2l1830
 40437  01555C  C091  F013         	movff	asin@x,i2___fldiv@b
 40438  015560  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 40439  015564  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 40440  015568  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 40441  01556C  C0A1  F017         	movff	asin@y,i2___fldiv@a
 40442  015570  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 40443  015574  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 40444  015578  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 40445  01557C  EC3B  F0B1         	call	i2___fldiv	;wreg free
 40446  015580  C013  F0A5         	movff	?i2___fldiv,_asin$4392
 40447  015584  C014  F0A6         	movff	?i2___fldiv+1,_asin$4392+1
 40448  015588  C015  F0A7         	movff	?i2___fldiv+2,_asin$4392+2
 40449  01558C  C016  F0A8         	movff	?i2___fldiv+3,_asin$4392+3
 40450  015590  C0A5  F07C         	movff	_asin$4392,atan@f
 40451  015594  C0A6  F07D         	movff	_asin$4392+1,atan@f+1
 40452  015598  C0A7  F07E         	movff	_asin$4392+2,atan@f+2
 40453  01559C  C0A8  F07F         	movff	_asin$4392+3,atan@f+3
 40454  0155A0  EC44  F0B6         	call	_atan	;wreg free
 40455  0155A4  C07C  F091         	movff	?_atan,?_asin
 40456  0155A8  C07D  F092         	movff	?_atan+1,?_asin+1
 40457  0155AC  C07E  F093         	movff	?_atan+2,?_asin+2
 40458  0155B0  C07F  F094         	movff	?_atan+3,?_asin+3
 40459  0155B4  0012               	return	
 40460  0155B6                     i2l1830:
 40461  0155B6  0100               	movlb	0	; () banked
 40462  0155B8  AF94               	btfss	(asin@x+3)& (0+255),7,b
 40463  0155BA  D06D               	goto	i2l1831
 40464                           
 40465                           ; BSR set to: 0
 40466  0155BC  C091  F017         	movff	asin@x,i2___fldiv@a
 40467  0155C0  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 40468  0155C4  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 40469  0155C8  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 40470  0155CC  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 40471  0155D0  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 40472  0155D4  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 40473  0155D8  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 40474  0155DC  EC5C  F0C9         	call	i2___flneg	;wreg free
 40475  0155E0  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 40476  0155E4  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 40477  0155E8  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 40478  0155EC  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 40479  0155F0  EC3B  F0B1         	call	i2___fldiv	;wreg free
 40480  0155F4  C013  F0A5         	movff	?i2___fldiv,_asin$4392
 40481  0155F8  C014  F0A6         	movff	?i2___fldiv+1,_asin$4392+1
 40482  0155FC  C015  F0A7         	movff	?i2___fldiv+2,_asin$4392+2
 40483  015600  C016  F0A8         	movff	?i2___fldiv+3,_asin$4392+3
 40484  015604  C0A5  F07C         	movff	_asin$4392,atan@f
 40485  015608  C0A6  F07D         	movff	_asin$4392+1,atan@f+1
 40486  01560C  C0A7  F07E         	movff	_asin$4392+2,atan@f+2
 40487  015610  C0A8  F07F         	movff	_asin$4392+3,atan@f+3
 40488  015614  EC44  F0B6         	call	_atan	;wreg free
 40489  015618  C07C  F09D         	movff	?_atan,_asin$4393
 40490  01561C  C07D  F09E         	movff	?_atan+1,_asin$4393+1
 40491  015620  C07E  F09F         	movff	?_atan+2,_asin$4393+2
 40492  015624  C07F  F0A0         	movff	?_atan+3,_asin$4393+3
 40493  015628  0EDB               	movlw	219
 40494  01562A  6E5A               	movwf	i2___fladd@a,c
 40495  01562C  0E0F               	movlw	15
 40496  01562E  6E5B               	movwf	i2___fladd@a+1,c
 40497  015630  0EC9               	movlw	201
 40498  015632  6E5C               	movwf	i2___fladd@a+2,c
 40499  015634  0E3F               	movlw	63
 40500  015636  6E5D               	movwf	i2___fladd@a+3,c
 40501  015638  C09D  F02C         	movff	_asin$4393,i2___flneg@f1
 40502  01563C  C09E  F02D         	movff	_asin$4393+1,i2___flneg@f1+1
 40503  015640  C09F  F02E         	movff	_asin$4393+2,i2___flneg@f1+2
 40504  015644  C0A0  F02F         	movff	_asin$4393+3,i2___flneg@f1+3
 40505  015648  EC5C  F0C9         	call	i2___flneg	;wreg free
 40506  01564C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 40507  015650  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 40508  015654  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 40509  015658  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 40510  01565C  EC7B  F0A8         	call	i2___fladd	;wreg free
 40511  015660  C056  F099         	movff	?i2___fladd,_asin$4394
 40512  015664  C057  F09A         	movff	?i2___fladd+1,_asin$4394+1
 40513  015668  C058  F09B         	movff	?i2___fladd+2,_asin$4394+2
 40514  01566C  C059  F09C         	movff	?i2___fladd+3,_asin$4394+3
 40515  015670  C099  F02C         	movff	_asin$4394,i2___flneg@f1
 40516  015674  C09A  F02D         	movff	_asin$4394+1,i2___flneg@f1+1
 40517  015678  C09B  F02E         	movff	_asin$4394+2,i2___flneg@f1+2
 40518  01567C  C09C  F02F         	movff	_asin$4394+3,i2___flneg@f1+3
 40519  015680  EC5C  F0C9         	call	i2___flneg	;wreg free
 40520  015684  C02C  F091         	movff	?i2___flneg,?_asin
 40521  015688  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 40522  01568C  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 40523  015690  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 40524  015694  0012               	return	
 40525  015696                     i2l1831:
 40526  015696  C091  F017         	movff	asin@x,i2___fldiv@a
 40527  01569A  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 40528  01569E  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 40529  0156A2  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 40530  0156A6  C0A1  F013         	movff	asin@y,i2___fldiv@b
 40531  0156AA  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 40532  0156AE  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 40533  0156B2  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 40534  0156B6  EC3B  F0B1         	call	i2___fldiv	;wreg free
 40535  0156BA  C013  F0A5         	movff	?i2___fldiv,_asin$4392
 40536  0156BE  C014  F0A6         	movff	?i2___fldiv+1,_asin$4392+1
 40537  0156C2  C015  F0A7         	movff	?i2___fldiv+2,_asin$4392+2
 40538  0156C6  C016  F0A8         	movff	?i2___fldiv+3,_asin$4392+3
 40539  0156CA  C0A5  F07C         	movff	_asin$4392,atan@f
 40540  0156CE  C0A6  F07D         	movff	_asin$4392+1,atan@f+1
 40541  0156D2  C0A7  F07E         	movff	_asin$4392+2,atan@f+2
 40542  0156D6  C0A8  F07F         	movff	_asin$4392+3,atan@f+3
 40543  0156DA  EC44  F0B6         	call	_atan	;wreg free
 40544  0156DE  C07C  F09D         	movff	?_atan,_asin$4393
 40545  0156E2  C07D  F09E         	movff	?_atan+1,_asin$4393+1
 40546  0156E6  C07E  F09F         	movff	?_atan+2,_asin$4393+2
 40547  0156EA  C07F  F0A0         	movff	?_atan+3,_asin$4393+3
 40548  0156EE  C09D  F02C         	movff	_asin$4393,i2___flneg@f1
 40549  0156F2  C09E  F02D         	movff	_asin$4393+1,i2___flneg@f1+1
 40550  0156F6  C09F  F02E         	movff	_asin$4393+2,i2___flneg@f1+2
 40551  0156FA  C0A0  F02F         	movff	_asin$4393+3,i2___flneg@f1+3
 40552  0156FE  EC5C  F0C9         	call	i2___flneg	;wreg free
 40553  015702  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 40554  015706  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 40555  01570A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 40556  01570E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 40557  015712  0EDB               	movlw	219
 40558  015714  6E5A               	movwf	i2___fladd@a,c
 40559  015716  0E0F               	movlw	15
 40560  015718  6E5B               	movwf	i2___fladd@a+1,c
 40561  01571A  0EC9               	movlw	201
 40562  01571C  6E5C               	movwf	i2___fladd@a+2,c
 40563  01571E  0E3F               	movlw	63
 40564  015720  6E5D               	movwf	i2___fladd@a+3,c
 40565  015722  EC7B  F0A8         	call	i2___fladd	;wreg free
 40566  015726  C056  F091         	movff	?i2___fladd,?_asin
 40567  01572A  C057  F092         	movff	?i2___fladd+1,?_asin+1
 40568  01572E  C058  F093         	movff	?i2___fladd+2,?_asin+2
 40569  015732  C059  F094         	movff	?i2___fladd+3,?_asin+3
 40570  015736  0012               	return	
 40571  015738                     __end_of_asin:
 40572                           	opt stack 0
 40573                           tosu	equ	0xFFF
 40574                           tosh	equ	0xFFE
 40575                           tosl	equ	0xFFD
 40576                           pclatu	equ	0xFFB
 40577                           pclath	equ	0xFFA
 40578                           tblptru	equ	0xFF8
 40579                           tblptrh	equ	0xFF7
 40580                           tblptrl	equ	0xFF6
 40581                           tablat	equ	0xFF5
 40582                           prodh	equ	0xFF4
 40583                           prodl	equ	0xFF3
 40584                           intcon	equ	0xFF2
 40585                           indf0	equ	0xFEF
 40586                           postinc0	equ	0xFEE
 40587                           fsr0h	equ	0xFEA
 40588                           fsr0l	equ	0xFE9
 40589                           wreg	equ	0xFE8
 40590                           indf1	equ	0xFE7
 40591                           postdec1	equ	0xFE5
 40592                           plusw1	equ	0xFE3
 40593                           fsr1h	equ	0xFE2
 40594                           fsr1l	equ	0xFE1
 40595                           bsr	equ	0xFE0
 40596                           indf2	equ	0xFDF
 40597                           postinc2	equ	0xFDE
 40598                           postdec2	equ	0xFDD
 40599                           plusw2	equ	0xFDB
 40600                           fsr2h	equ	0xFDA
 40601                           fsr2l	equ	0xFD9
 40602                           status	equ	0xFD8
 40603                           
 40604 ;; *************** function _sqrt *****************
 40605 ;; Defined at:
 40606 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 40607 ;; Parameters:    Size  Location     Type
 40608 ;;  a               4   12[BANK0 ] void 
 40609 ;; Auto vars:     Size  Location     Type
 40610 ;;  frac            4   37[BANK0 ] unsigned long 
 40611 ;;  root            4   33[BANK0 ] struct .
 40612 ;;  grs             4   27[BANK0 ] unsigned long 
 40613 ;;  tfrac           4   22[BANK0 ] unsigned long 
 40614 ;;  exp             2   31[BANK0 ] int 
 40615 ;;  p               1   26[BANK0 ] unsigned char 
 40616 ;;  i               1   21[BANK0 ] unsigned char 
 40617 ;;  sign            1   20[BANK0 ] unsigned char 
 40618 ;; Return value:  Size  Location     Type
 40619 ;;                  4   12[BANK0 ] unsigned char 
 40620 ;; Registers used:
 40621 ;;		wreg, status,2, status,0
 40622 ;; Tracked objects:
 40623 ;;		On entry : 0/0
 40624 ;;		On exit  : 0/0
 40625 ;;		Unchanged: 0/0
 40626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40627 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40628 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40629 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40630 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40631 ;;Total ram usage:       29 bytes
 40632 ;; Hardware stack levels used:    1
 40633 ;; This function calls:
 40634 ;;		Nothing
 40635 ;; This function is called by:
 40636 ;;		_peakToRMS
 40637 ;;		_asin
 40638 ;; This function uses a non-reentrant model
 40639 ;;
 40640                           
 40641                           	psect	text123
 40642  015A32                     __ptext123:
 40643                           	opt stack 0
 40644  015A32                     _sqrt:
 40645                           	opt stack 15
 40646                           
 40647                           ;incstack = 0
 40648  015A32  0100               	movlb	0	; () banked
 40649  015A34  516F               	movf	(sqrt@a+3)& (0+255),w,b
 40650  015A36  0B80               	andlw	128
 40651  015A38  6F74               	movwf	sqrt@sign& (0+255),b
 40652  015A3A  516F               	movf	(sqrt@a+3)& (0+255),w,b
 40653  015A3C  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 40654  015A3E  6F7A               	movwf	sqrt@p& (0+255),b
 40655                           
 40656                           ; BSR set to: 0
 40657  015A40  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 40658                           
 40659                           ; BSR set to: 0
 40660  015A42  817A               	bsf	sqrt@p& (0+255),0,b
 40661                           
 40662                           ; BSR set to: 0
 40663                           
 40664                           ; BSR set to: 0
 40665  015A44  C07A  F07F         	movff	sqrt@p,sqrt@exp
 40666  015A48  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 40667                           
 40668                           ; BSR set to: 0
 40669  015A4A  0EFF               	movlw	255
 40670  015A4C  156C               	andwf	sqrt@a& (0+255),w,b
 40671  015A4E  6F85               	movwf	sqrt@frac& (0+255),b
 40672  015A50  0EFF               	movlw	255
 40673  015A52  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 40674  015A54  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 40675  015A56  0E7F               	movlw	127
 40676  015A58  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 40677  015A5A  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 40678  015A5C  0E00               	movlw	0
 40679  015A5E  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 40680  015A60  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 40681                           
 40682                           ; BSR set to: 0
 40683  015A62  517F               	movf	sqrt@exp& (0+255),w,b
 40684  015A64  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 40685  015A66  B4D8               	btfsc	status,2,c
 40686  015A68  D005               	goto	i2l2357
 40687                           
 40688                           ; BSR set to: 0
 40689  015A6A  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 40690                           
 40691                           ; BSR set to: 0
 40692  015A6C  297F               	incf	sqrt@exp& (0+255),w,b
 40693  015A6E  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 40694  015A70  A4D8               	btfss	status,2,c
 40695  015A72  D008               	goto	i2l2359
 40696  015A74                     i2l2357:
 40697                           
 40698                           ; BSR set to: 0
 40699                           
 40700                           ; BSR set to: 0
 40701  015A74  0E00               	movlw	0
 40702  015A76  6F85               	movwf	sqrt@frac& (0+255),b
 40703  015A78  0E00               	movlw	0
 40704  015A7A  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 40705  015A7C  0E00               	movlw	0
 40706  015A7E  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 40707  015A80  0E00               	movlw	0
 40708  015A82  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 40709  015A84                     i2l2359:
 40710                           
 40711                           ; BSR set to: 0
 40712                           
 40713                           ; BSR set to: 0
 40714  015A84  517F               	movf	sqrt@exp& (0+255),w,b
 40715  015A86  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 40716  015A88  A4D8               	btfss	status,2,c
 40717  015A8A  D009               	goto	i2l2360
 40718                           
 40719                           ; BSR set to: 0
 40720  015A8C  0E00               	movlw	0
 40721  015A8E  6F6C               	movwf	?_sqrt& (0+255),b
 40722  015A90  0E00               	movlw	0
 40723  015A92  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 40724  015A94  0E00               	movlw	0
 40725  015A96  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 40726  015A98  0E00               	movlw	0
 40727  015A9A  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 40728                           
 40729                           ; BSR set to: 0
 40730  015A9C  0012               	return	
 40731  015A9E                     i2l2360:
 40732                           
 40733                           ; BSR set to: 0
 40734                           
 40735                           ; BSR set to: 0
 40736  015A9E  5174               	movf	sqrt@sign& (0+255),w,b
 40737  015AA0  B4D8               	btfsc	status,2,c
 40738  015AA2  D01A               	goto	i2l2362
 40739                           
 40740                           ; BSR set to: 0
 40741  015AA4  0E00               	movlw	0
 40742  015AA6  6F81               	movwf	sqrt@root& (0+255),b
 40743  015AA8  0E00               	movlw	0
 40744  015AAA  6F82               	movwf	(sqrt@root+1)& (0+255),b
 40745  015AAC  0E40               	movlw	64
 40746  015AAE  6F83               	movwf	(sqrt@root+2)& (0+255),b
 40747  015AB0  0E00               	movlw	0
 40748  015AB2  6F84               	movwf	(sqrt@root+3)& (0+255),b
 40749                           
 40750                           ; BSR set to: 0
 40751  015AB4  0E80               	movlw	128
 40752  015AB6  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 40753  015AB8  0EFF               	movlw	255
 40754  015ABA  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 40755                           
 40756                           ; BSR set to: 0
 40757  015ABC  0E00               	movlw	0
 40758  015ABE  0102               	movlb	2	; () banked
 40759  015AC0  6F3E               	movwf	(_errno+1)& (0+255),b
 40760  015AC2  0E21               	movlw	33
 40761  015AC4  6F3D               	movwf	_errno& (0+255),b
 40762                           
 40763                           ; BSR set to: 2
 40764  015AC6  C081  F06C         	movff	sqrt@root,?_sqrt
 40765  015ACA  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 40766  015ACE  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 40767  015AD2  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 40768                           
 40769                           ; BSR set to: 2
 40770  015AD6  0012               	return	
 40771  015AD8                     i2l2362:
 40772                           
 40773                           ; BSR set to: 2
 40774  015AD8  0100               	movlb	0	; () banked
 40775  015ADA  297F               	incf	sqrt@exp& (0+255),w,b
 40776  015ADC  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 40777  015ADE  A4D8               	btfss	status,2,c
 40778  015AE0  D011               	goto	i2l2363
 40779                           
 40780                           ; BSR set to: 0
 40781  015AE2  0E00               	movlw	0
 40782  015AE4  6F81               	movwf	sqrt@root& (0+255),b
 40783  015AE6  0E00               	movlw	0
 40784  015AE8  6F82               	movwf	(sqrt@root+1)& (0+255),b
 40785  015AEA  0E80               	movlw	128
 40786  015AEC  6F83               	movwf	(sqrt@root+2)& (0+255),b
 40787  015AEE  0E7F               	movlw	127
 40788  015AF0  6F84               	movwf	(sqrt@root+3)& (0+255),b
 40789                           
 40790                           ; BSR set to: 0
 40791  015AF2  C081  F06C         	movff	sqrt@root,?_sqrt
 40792  015AF6  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 40793  015AFA  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 40794  015AFE  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 40795                           
 40796                           ; BSR set to: 0
 40797  015B02  0012               	return	
 40798  015B04                     i2l2363:
 40799                           
 40800                           ; BSR set to: 0
 40801                           
 40802                           ; BSR set to: 0
 40803  015B04  0E81               	movlw	129
 40804  015B06  277F               	addwf	sqrt@exp& (0+255),f,b
 40805  015B08  0EFF               	movlw	255
 40806  015B0A  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 40807  015B0C  517F               	movf	sqrt@exp& (0+255),w,b
 40808  015B0E  0B01               	andlw	1
 40809  015B10  6F7A               	movwf	sqrt@p& (0+255),b
 40810  015B12  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 40811  015B14  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 40812  015B16  337F               	rrcf	sqrt@exp& (0+255),f,b
 40813  015B18  0E7F               	movlw	127
 40814  015B1A  277F               	addwf	sqrt@exp& (0+255),f,b
 40815  015B1C  0E00               	movlw	0
 40816  015B1E  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 40817  015B20  90D8               	bcf	status,0,c
 40818  015B22  3585               	rlcf	sqrt@frac& (0+255),w,b
 40819  015B24  6F76               	movwf	sqrt@tfrac& (0+255),b
 40820  015B26  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 40821  015B28  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 40822  015B2A  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 40823  015B2C  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 40824  015B2E  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 40825  015B30  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 40826                           
 40827                           ; BSR set to: 0
 40828  015B32  0E00               	movlw	0
 40829  015B34  6F85               	movwf	sqrt@frac& (0+255),b
 40830  015B36  0E00               	movlw	0
 40831  015B38  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 40832  015B3A  0E00               	movlw	0
 40833  015B3C  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 40834  015B3E  0E00               	movlw	0
 40835  015B40  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 40836                           
 40837                           ; BSR set to: 0
 40838  015B42  0E00               	movlw	0
 40839  015B44  6F7B               	movwf	sqrt@grs& (0+255),b
 40840  015B46  0E00               	movlw	0
 40841  015B48  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 40842  015B4A  0E00               	movlw	0
 40843  015B4C  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 40844  015B4E  0E01               	movlw	1
 40845  015B50  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 40846                           
 40847                           ; BSR set to: 0
 40848  015B52  517A               	movf	sqrt@p& (0+255),w,b
 40849  015B54  B4D8               	btfsc	status,2,c
 40850  015B56  D005               	goto	i2l2364
 40851                           
 40852                           ; BSR set to: 0
 40853  015B58  90D8               	bcf	status,0,c
 40854  015B5A  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 40855  015B5C  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 40856  015B5E  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 40857  015B60  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 40858  015B62                     i2l2364:
 40859                           
 40860                           ; BSR set to: 0
 40861                           
 40862                           ; BSR set to: 0
 40863  015B62  0E00               	movlw	0
 40864  015B64  6F75               	movwf	sqrt@i& (0+255),b
 40865  015B66  D052               	goto	i2l2365
 40866  015B68                     
 40867                           ; BSR set to: 0
 40868                           
 40869                           ; BSR set to: 0
 40870  015B68  517B               	movf	sqrt@grs& (0+255),w,b
 40871  015B6A  1385               	iorwf	sqrt@frac& (0+255),f,b
 40872  015B6C  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 40873  015B6E  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 40874  015B70  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 40875  015B72  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 40876  015B74  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 40877  015B76  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 40878  015B78  5185               	movf	sqrt@frac& (0+255),w,b
 40879  015B7A  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 40880  015B7C  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 40881  015B7E  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 40882  015B80  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 40883  015B82  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 40884  015B84  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 40885  015B86  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 40886  015B88  A0D8               	btfss	status,0,c
 40887  015B8A  D011               	goto	i2l2367
 40888                           
 40889                           ; BSR set to: 0
 40890  015B8C  5185               	movf	sqrt@frac& (0+255),w,b
 40891  015B8E  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 40892  015B90  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 40893  015B92  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 40894  015B94  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 40895  015B96  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 40896  015B98  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 40897  015B9A  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 40898  015B9C  517B               	movf	sqrt@grs& (0+255),w,b
 40899  015B9E  2785               	addwf	sqrt@frac& (0+255),f,b
 40900  015BA0  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 40901  015BA2  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 40902  015BA4  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 40903  015BA6  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 40904  015BA8  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 40905  015BAA  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 40906  015BAC  D014               	goto	i2l2368
 40907  015BAE                     i2l2367:
 40908                           
 40909                           ; BSR set to: 0
 40910                           
 40911                           ; BSR set to: 0
 40912  015BAE  C07B  F070         	movff	sqrt@grs,??_sqrt
 40913  015BB2  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 40914  015BB6  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 40915  015BBA  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 40916  015BBE  1F70               	comf	??_sqrt& (0+255),f,b
 40917  015BC0  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 40918  015BC2  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 40919  015BC4  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 40920  015BC6  5170               	movf	??_sqrt& (0+255),w,b
 40921  015BC8  1785               	andwf	sqrt@frac& (0+255),f,b
 40922  015BCA  5171               	movf	(??_sqrt+1)& (0+255),w,b
 40923  015BCC  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 40924  015BCE  5172               	movf	(??_sqrt+2)& (0+255),w,b
 40925  015BD0  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 40926  015BD2  5173               	movf	(??_sqrt+3)& (0+255),w,b
 40927  015BD4  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 40928  015BD6                     i2l2368:
 40929                           
 40930                           ; BSR set to: 0
 40931                           
 40932                           ; BSR set to: 0
 40933  015BD6  C07B  F070         	movff	sqrt@grs,??_sqrt
 40934  015BDA  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 40935  015BDE  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 40936  015BE2  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 40937  015BE6  90D8               	bcf	status,0,c
 40938  015BE8  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 40939  015BEA  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 40940  015BEC  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 40941  015BEE  3370               	rrcf	??_sqrt& (0+255),f,b
 40942  015BF0  C070  F07B         	movff	??_sqrt,sqrt@grs
 40943  015BF4  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 40944  015BF8  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 40945  015BFC  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 40946                           
 40947                           ; BSR set to: 0
 40948  015C00  90D8               	bcf	status,0,c
 40949  015C02  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 40950  015C04  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 40951  015C06  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 40952  015C08  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 40953                           
 40954                           ; BSR set to: 0
 40955  015C0A  2B75               	incf	sqrt@i& (0+255),f,b
 40956  015C0C                     i2l2365:
 40957                           
 40958                           ; BSR set to: 0
 40959                           
 40960                           ; BSR set to: 0
 40961  015C0C  0E18               	movlw	24
 40962  015C0E  6575               	cpfsgt	sqrt@i& (0+255),b
 40963  015C10  D7AB               	goto	i2l2366
 40964                           
 40965                           ; BSR set to: 0
 40966                           
 40967                           ; BSR set to: 0
 40968  015C12  C085  F070         	movff	sqrt@frac,??_sqrt
 40969  015C16  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 40970  015C1A  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 40971  015C1E  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 40972  015C22  90D8               	bcf	status,0,c
 40973  015C24  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 40974  015C26  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 40975  015C28  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 40976  015C2A  3370               	rrcf	??_sqrt& (0+255),f,b
 40977  015C2C  C070  F085         	movff	??_sqrt,sqrt@frac
 40978  015C30  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 40979  015C34  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 40980  015C38  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 40981                           
 40982                           ; BSR set to: 0
 40983  015C3C  0E01               	movlw	1
 40984  015C3E  1585               	andwf	sqrt@frac& (0+255),w,b
 40985  015C40  6F7B               	movwf	sqrt@grs& (0+255),b
 40986  015C42  0E00               	movlw	0
 40987  015C44  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 40988  015C46  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 40989  015C48  0E00               	movlw	0
 40990  015C4A  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 40991  015C4C  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 40992  015C4E  0E00               	movlw	0
 40993  015C50  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 40994  015C52  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 40995                           
 40996                           ; BSR set to: 0
 40997  015C54  C085  F070         	movff	sqrt@frac,??_sqrt
 40998  015C58  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 40999  015C5C  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 41000  015C60  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 41001  015C64  90D8               	bcf	status,0,c
 41002  015C66  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 41003  015C68  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 41004  015C6A  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 41005  015C6C  3370               	rrcf	??_sqrt& (0+255),f,b
 41006  015C6E  C070  F085         	movff	??_sqrt,sqrt@frac
 41007  015C72  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 41008  015C76  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 41009  015C7A  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 41010  015C7E  517B               	movf	sqrt@grs& (0+255),w,b
 41011  015C80  2785               	addwf	sqrt@frac& (0+255),f,b
 41012  015C82  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 41013  015C84  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 41014  015C86  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 41015  015C88  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 41016  015C8A  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 41017  015C8C  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 41018                           
 41019                           ; BSR set to: 0
 41020  015C8E  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 41021  015C90  D017               	goto	i2l2370
 41022                           
 41023                           ; BSR set to: 0
 41024  015C92  C085  F070         	movff	sqrt@frac,??_sqrt
 41025  015C96  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 41026  015C9A  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 41027  015C9E  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 41028  015CA2  90D8               	bcf	status,0,c
 41029  015CA4  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 41030  015CA6  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 41031  015CA8  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 41032  015CAA  3370               	rrcf	??_sqrt& (0+255),f,b
 41033  015CAC  C070  F085         	movff	??_sqrt,sqrt@frac
 41034  015CB0  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 41035  015CB4  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 41036  015CB8  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 41037  015CBC  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 41038  015CBE  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 41039  015CC0                     i2l2370:
 41040                           
 41041                           ; BSR set to: 0
 41042                           
 41043                           ; BSR set to: 0
 41044  015CC0  0EFF               	movlw	255
 41045  015CC2  1585               	andwf	sqrt@frac& (0+255),w,b
 41046  015CC4  6F81               	movwf	sqrt@root& (0+255),b
 41047  015CC6  0EFF               	movlw	255
 41048  015CC8  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 41049  015CCA  6F82               	movwf	(sqrt@root+1)& (0+255),b
 41050  015CCC  0E7F               	movlw	127
 41051  015CCE  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 41052  015CD0  6F83               	movwf	(sqrt@root+2)& (0+255),b
 41053  015CD2  0E00               	movlw	0
 41054  015CD4  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 41055  015CD6  6F84               	movwf	(sqrt@root+3)& (0+255),b
 41056                           
 41057                           ; BSR set to: 0
 41058  015CD8  C07F  F07A         	movff	sqrt@exp,sqrt@p
 41059                           
 41060                           ; BSR set to: 0
 41061  015CDC  B17A               	btfsc	sqrt@p& (0+255),0,b
 41062                           
 41063                           ; BSR set to: 0
 41064  015CDE  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 41065                           
 41066                           ; BSR set to: 0
 41067                           
 41068                           ; BSR set to: 0
 41069  015CE0  90D8               	bcf	status,0,c
 41070  015CE2  317A               	rrcf	sqrt@p& (0+255),w,b
 41071  015CE4  6F84               	movwf	(sqrt@root+3)& (0+255),b
 41072                           
 41073                           ; BSR set to: 0
 41074  015CE6  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 41075                           
 41076                           ; BSR set to: 0
 41077  015CE8  C081  F06C         	movff	sqrt@root,?_sqrt
 41078  015CEC  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 41079  015CF0  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 41080  015CF4  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 41081  015CF8  0012               	return	
 41082  015CFA                     __end_of_sqrt:
 41083                           	opt stack 0
 41084                           tosu	equ	0xFFF
 41085                           tosh	equ	0xFFE
 41086                           tosl	equ	0xFFD
 41087                           pclatu	equ	0xFFB
 41088                           pclath	equ	0xFFA
 41089                           tblptru	equ	0xFF8
 41090                           tblptrh	equ	0xFF7
 41091                           tblptrl	equ	0xFF6
 41092                           tablat	equ	0xFF5
 41093                           prodh	equ	0xFF4
 41094                           prodl	equ	0xFF3
 41095                           intcon	equ	0xFF2
 41096                           indf0	equ	0xFEF
 41097                           postinc0	equ	0xFEE
 41098                           fsr0h	equ	0xFEA
 41099                           fsr0l	equ	0xFE9
 41100                           wreg	equ	0xFE8
 41101                           indf1	equ	0xFE7
 41102                           postdec1	equ	0xFE5
 41103                           plusw1	equ	0xFE3
 41104                           fsr1h	equ	0xFE2
 41105                           fsr1l	equ	0xFE1
 41106                           bsr	equ	0xFE0
 41107                           indf2	equ	0xFDF
 41108                           postinc2	equ	0xFDE
 41109                           postdec2	equ	0xFDD
 41110                           plusw2	equ	0xFDB
 41111                           fsr2h	equ	0xFDA
 41112                           fsr2l	equ	0xFD9
 41113                           status	equ	0xFD8
 41114                           
 41115 ;; *************** function _atan *****************
 41116 ;; Defined at:
 41117 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 41118 ;; Parameters:    Size  Location     Type
 41119 ;;  f               4   28[BANK0 ] unsigned char 
 41120 ;; Auto vars:     Size  Location     Type
 41121 ;;  val             4   45[BANK0 ] unsigned char 
 41122 ;;  val_squared     4   41[BANK0 ] unsigned char 
 41123 ;;  x               4   36[BANK0 ] unsigned char 
 41124 ;;  y               4   32[BANK0 ] unsigned char 
 41125 ;;  recip           1   40[BANK0 ] unsigned char 
 41126 ;; Return value:  Size  Location     Type
 41127 ;;                  4   28[BANK0 ] unsigned char 
 41128 ;; Registers used:
 41129 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41130 ;; Tracked objects:
 41131 ;;		On entry : 0/0
 41132 ;;		On exit  : 0/0
 41133 ;;		Unchanged: 0/0
 41134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41136 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41138 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41139 ;;Total ram usage:       21 bytes
 41140 ;; Hardware stack levels used:    1
 41141 ;; Hardware stack levels required when called:    2
 41142 ;; This function calls:
 41143 ;;		_eval_poly
 41144 ;;		_fabs
 41145 ;;		i2___fladd
 41146 ;;		i2___fldiv
 41147 ;;		i2___flge
 41148 ;;		i2___flmul
 41149 ;;		i2___flneg
 41150 ;; This function is called by:
 41151 ;;		_asin
 41152 ;; This function uses a non-reentrant model
 41153 ;;
 41154                           
 41155                           	psect	text124
 41156  016C88                     __ptext124:
 41157                           	opt stack 0
 41158  016C88                     _atan:
 41159                           	opt stack 11
 41160                           
 41161                           ;incstack = 0
 41162  016C88  C07C  F030         	movff	atan@f,fabs@d
 41163  016C8C  C07D  F031         	movff	atan@f+1,fabs@d+1
 41164  016C90  C07E  F032         	movff	atan@f+2,fabs@d+2
 41165  016C94  C07F  F033         	movff	atan@f+3,fabs@d+3
 41166  016C98  EC20  F0C8         	call	_fabs	;wreg free
 41167  016C9C  C030  F08D         	movff	?_fabs,atan@val
 41168  016CA0  C031  F08E         	movff	?_fabs+1,atan@val+1
 41169  016CA4  C032  F08F         	movff	?_fabs+2,atan@val+2
 41170  016CA8  C033  F090         	movff	?_fabs+3,atan@val+3
 41171  016CAC  0100               	movlb	0	; () banked
 41172  016CAE  518D               	movf	atan@val& (0+255),w,b
 41173  016CB0  118E               	iorwf	(atan@val+1)& (0+255),w,b
 41174  016CB2  118F               	iorwf	(atan@val+2)& (0+255),w,b
 41175  016CB4  1190               	iorwf	(atan@val+3)& (0+255),w,b
 41176  016CB6  A4D8               	btfss	status,2,c
 41177  016CB8  D009               	goto	i2l1847
 41178                           
 41179                           ; BSR set to: 0
 41180  016CBA  0E00               	movlw	0
 41181  016CBC  6F7C               	movwf	?_atan& (0+255),b
 41182  016CBE  0E00               	movlw	0
 41183  016CC0  6F7D               	movwf	(?_atan+1)& (0+255),b
 41184  016CC2  0E00               	movlw	0
 41185  016CC4  6F7E               	movwf	(?_atan+2)& (0+255),b
 41186  016CC6  0E00               	movlw	0
 41187  016CC8  6F7F               	movwf	(?_atan+3)& (0+255),b
 41188                           
 41189                           ; BSR set to: 0
 41190  016CCA  0012               	return	
 41191  016CCC                     i2l1847:
 41192                           
 41193                           ; BSR set to: 0
 41194                           
 41195                           ; BSR set to: 0
 41196  016CCC  0E00               	movlw	0
 41197  016CCE  6E34               	movwf	i2___flge@ff1,c
 41198  016CD0  0E00               	movlw	0
 41199  016CD2  6E35               	movwf	i2___flge@ff1+1,c
 41200  016CD4  0E80               	movlw	128
 41201  016CD6  6E36               	movwf	i2___flge@ff1+2,c
 41202  016CD8  0E3F               	movlw	63
 41203  016CDA  6E37               	movwf	i2___flge@ff1+3,c
 41204  016CDC  C08D  F038         	movff	atan@val,i2___flge@ff2
 41205  016CE0  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 41206  016CE4  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 41207  016CE8  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 41208  016CEC  ECCB  F0BC         	call	i2___flge	;wreg free
 41209  016CF0  B0D8               	btfsc	status,0,c
 41210  016CF2  D002               	goto	i2u1539_40
 41211  016CF4  0E01               	movlw	1
 41212  016CF6  D001               	goto	i2u1540_40
 41213  016CF8                     i2u1539_40:
 41214  016CF8  0E00               	movlw	0
 41215  016CFA                     i2u1540_40:
 41216  016CFA  0100               	movlb	0	; () banked
 41217  016CFC  6F88               	movwf	atan@recip& (0+255),b
 41218  016CFE  5188               	movf	atan@recip& (0+255),w,b
 41219  016D00  B4D8               	btfsc	status,2,c
 41220  016D02  D01A               	goto	i2l1849
 41221                           
 41222                           ; BSR set to: 0
 41223  016D04  0E00               	movlw	0
 41224  016D06  6E13               	movwf	i2___fldiv@b,c
 41225  016D08  0E00               	movlw	0
 41226  016D0A  6E14               	movwf	i2___fldiv@b+1,c
 41227  016D0C  0E80               	movlw	128
 41228  016D0E  6E15               	movwf	i2___fldiv@b+2,c
 41229  016D10  0E3F               	movlw	63
 41230  016D12  6E16               	movwf	i2___fldiv@b+3,c
 41231  016D14  C08D  F017         	movff	atan@val,i2___fldiv@a
 41232  016D18  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 41233  016D1C  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 41234  016D20  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 41235  016D24  EC3B  F0B1         	call	i2___fldiv	;wreg free
 41236  016D28  C013  F08D         	movff	?i2___fldiv,atan@val
 41237  016D2C  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 41238  016D30  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 41239  016D34  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 41240  016D38                     i2l1849:
 41241  016D38  C08D  F030         	movff	atan@val,i2___flmul@b
 41242  016D3C  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 41243  016D40  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 41244  016D44  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 41245  016D48  C08D  F034         	movff	atan@val,i2___flmul@a
 41246  016D4C  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 41247  016D50  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 41248  016D54  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 41249  016D58  EC34  F0A5         	call	i2___flmul	;wreg free
 41250  016D5C  C030  F089         	movff	?i2___flmul,atan@val_squared
 41251  016D60  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 41252  016D64  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 41253  016D68  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 41254  016D6C  C089  F06C         	movff	atan@val_squared,eval_poly@x
 41255  016D70  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 41256  016D74  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 41257  016D78  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 41258  016D7C  0E2B               	movlw	low atan@coeff_b
 41259  016D7E  0100               	movlb	0	; () banked
 41260  016D80  6F70               	movwf	eval_poly@d& (0+255),b
 41261  016D82  0ED8               	movlw	high atan@coeff_b
 41262  016D84  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 41263  016D86  0E00               	movlw	0
 41264  016D88  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 41265  016D8A  0E04               	movlw	4
 41266  016D8C  6F72               	movwf	eval_poly@n& (0+255),b
 41267  016D8E  ECE4  F0BD         	call	_eval_poly	;wreg free
 41268  016D92  C06C  F080         	movff	?_eval_poly,atan@y
 41269  016D96  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 41270  016D9A  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 41271  016D9E  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 41272  016DA2  C089  F06C         	movff	atan@val_squared,eval_poly@x
 41273  016DA6  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 41274  016DAA  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 41275  016DAE  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 41276  016DB2  0EFF               	movlw	low atan@coeff_a
 41277  016DB4  0100               	movlb	0	; () banked
 41278  016DB6  6F70               	movwf	eval_poly@d& (0+255),b
 41279  016DB8  0ED7               	movlw	high atan@coeff_a
 41280  016DBA  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 41281  016DBC  0E00               	movlw	0
 41282  016DBE  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 41283  016DC0  0E05               	movlw	5
 41284  016DC2  6F72               	movwf	eval_poly@n& (0+255),b
 41285  016DC4  ECE4  F0BD         	call	_eval_poly	;wreg free
 41286  016DC8  C06C  F084         	movff	?_eval_poly,atan@x
 41287  016DCC  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 41288  016DD0  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 41289  016DD4  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 41290  016DD8  C08D  F030         	movff	atan@val,i2___flmul@b
 41291  016DDC  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 41292  016DE0  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 41293  016DE4  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 41294  016DE8  C080  F017         	movff	atan@y,i2___fldiv@a
 41295  016DEC  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 41296  016DF0  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 41297  016DF4  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 41298  016DF8  C084  F013         	movff	atan@x,i2___fldiv@b
 41299  016DFC  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 41300  016E00  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 41301  016E04  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 41302  016E08  EC3B  F0B1         	call	i2___fldiv	;wreg free
 41303  016E0C  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 41304  016E10  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 41305  016E14  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 41306  016E18  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 41307  016E1C  EC34  F0A5         	call	i2___flmul	;wreg free
 41308  016E20  C030  F08D         	movff	?i2___flmul,atan@val
 41309  016E24  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 41310  016E28  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 41311  016E2C  C033  F090         	movff	?i2___flmul+3,atan@val+3
 41312  016E30  0100               	movlb	0	; () banked
 41313  016E32  5188               	movf	atan@recip& (0+255),w,b
 41314  016E34  B4D8               	btfsc	status,2,c
 41315  016E36  D024               	goto	i2l1850
 41316                           
 41317                           ; BSR set to: 0
 41318  016E38  C08D  F02C         	movff	atan@val,i2___flneg@f1
 41319  016E3C  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 41320  016E40  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 41321  016E44  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 41322  016E48  EC5C  F0C9         	call	i2___flneg	;wreg free
 41323  016E4C  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 41324  016E50  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 41325  016E54  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 41326  016E58  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 41327  016E5C  0EDB               	movlw	219
 41328  016E5E  6E5A               	movwf	i2___fladd@a,c
 41329  016E60  0E0F               	movlw	15
 41330  016E62  6E5B               	movwf	i2___fladd@a+1,c
 41331  016E64  0EC9               	movlw	201
 41332  016E66  6E5C               	movwf	i2___fladd@a+2,c
 41333  016E68  0E3F               	movlw	63
 41334  016E6A  6E5D               	movwf	i2___fladd@a+3,c
 41335  016E6C  EC7B  F0A8         	call	i2___fladd	;wreg free
 41336  016E70  C056  F08D         	movff	?i2___fladd,atan@val
 41337  016E74  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 41338  016E78  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 41339  016E7C  C059  F090         	movff	?i2___fladd+3,atan@val+3
 41340  016E80                     i2l1850:
 41341  016E80  0100               	movlb	0	; () banked
 41342  016E82  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 41343  016E84  D009               	goto	i2l1852
 41344                           
 41345                           ; BSR set to: 0
 41346  016E86  C08D  F07C         	movff	atan@val,?_atan
 41347  016E8A  C08E  F07D         	movff	atan@val+1,?_atan+1
 41348  016E8E  C08F  F07E         	movff	atan@val+2,?_atan+2
 41349  016E92  C090  F07F         	movff	atan@val+3,?_atan+3
 41350  016E96  0012               	return	
 41351  016E98                     i2l1852:
 41352                           
 41353                           ; BSR set to: 0
 41354                           
 41355                           ; BSR set to: 0
 41356  016E98  C08D  F02C         	movff	atan@val,i2___flneg@f1
 41357  016E9C  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 41358  016EA0  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 41359  016EA4  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 41360  016EA8  EC5C  F0C9         	call	i2___flneg	;wreg free
 41361  016EAC  C02C  F07C         	movff	?i2___flneg,?_atan
 41362  016EB0  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 41363  016EB4  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 41364  016EB8  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 41365  016EBC  0012               	return	
 41366  016EBE                     __end_of_atan:
 41367                           	opt stack 0
 41368                           tosu	equ	0xFFF
 41369                           tosh	equ	0xFFE
 41370                           tosl	equ	0xFFD
 41371                           pclatu	equ	0xFFB
 41372                           pclath	equ	0xFFA
 41373                           tblptru	equ	0xFF8
 41374                           tblptrh	equ	0xFF7
 41375                           tblptrl	equ	0xFF6
 41376                           tablat	equ	0xFF5
 41377                           prodh	equ	0xFF4
 41378                           prodl	equ	0xFF3
 41379                           intcon	equ	0xFF2
 41380                           indf0	equ	0xFEF
 41381                           postinc0	equ	0xFEE
 41382                           fsr0h	equ	0xFEA
 41383                           fsr0l	equ	0xFE9
 41384                           wreg	equ	0xFE8
 41385                           indf1	equ	0xFE7
 41386                           postdec1	equ	0xFE5
 41387                           plusw1	equ	0xFE3
 41388                           fsr1h	equ	0xFE2
 41389                           fsr1l	equ	0xFE1
 41390                           bsr	equ	0xFE0
 41391                           indf2	equ	0xFDF
 41392                           postinc2	equ	0xFDE
 41393                           postdec2	equ	0xFDD
 41394                           plusw2	equ	0xFDB
 41395                           fsr2h	equ	0xFDA
 41396                           fsr2l	equ	0xFD9
 41397                           status	equ	0xFD8
 41398                           
 41399 ;; *************** function _fabs *****************
 41400 ;; Defined at:
 41401 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 41402 ;; Parameters:    Size  Location     Type
 41403 ;;  d               4   47[COMRAM] unsigned char 
 41404 ;; Auto vars:     Size  Location     Type
 41405 ;;		None
 41406 ;; Return value:  Size  Location     Type
 41407 ;;                  4   47[COMRAM] unsigned char 
 41408 ;; Registers used:
 41409 ;;		wreg, status,2, status,0, cstack
 41410 ;; Tracked objects:
 41411 ;;		On entry : 0/0
 41412 ;;		On exit  : 0/0
 41413 ;;		Unchanged: 0/0
 41414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41419 ;;Total ram usage:        4 bytes
 41420 ;; Hardware stack levels used:    1
 41421 ;; Hardware stack levels required when called:    1
 41422 ;; This function calls:
 41423 ;;		i2___flneg
 41424 ;; This function is called by:
 41425 ;;		_asin
 41426 ;;		_atan
 41427 ;; This function uses a non-reentrant model
 41428 ;;
 41429                           
 41430                           	psect	text125
 41431  019040                     __ptext125:
 41432                           	opt stack 0
 41433  019040                     _fabs:
 41434                           	opt stack 12
 41435                           
 41436                           ;incstack = 0
 41437  019040  AE33               	btfss	fabs@d+3,7,c
 41438  019042  D013               	goto	i2l1944
 41439  019044  C030  F02C         	movff	fabs@d,i2___flneg@f1
 41440  019048  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 41441  01904C  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 41442  019050  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 41443  019054  EC5C  F0C9         	call	i2___flneg	;wreg free
 41444  019058  C02C  F030         	movff	?i2___flneg,?_fabs
 41445  01905C  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 41446  019060  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 41447  019064  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 41448  019068  0012               	return	
 41449  01906A                     i2l1944:
 41450  01906A  C030  F030         	movff	fabs@d,?_fabs
 41451  01906E  C031  F031         	movff	fabs@d+1,?_fabs+1
 41452  019072  C032  F032         	movff	fabs@d+2,?_fabs+2
 41453  019076  C033  F033         	movff	fabs@d+3,?_fabs+3
 41454  01907A  0012               	return		;funcret
 41455  01907C                     __end_of_fabs:
 41456                           	opt stack 0
 41457                           tosu	equ	0xFFF
 41458                           tosh	equ	0xFFE
 41459                           tosl	equ	0xFFD
 41460                           pclatu	equ	0xFFB
 41461                           pclath	equ	0xFFA
 41462                           tblptru	equ	0xFF8
 41463                           tblptrh	equ	0xFF7
 41464                           tblptrl	equ	0xFF6
 41465                           tablat	equ	0xFF5
 41466                           prodh	equ	0xFF4
 41467                           prodl	equ	0xFF3
 41468                           intcon	equ	0xFF2
 41469                           indf0	equ	0xFEF
 41470                           postinc0	equ	0xFEE
 41471                           fsr0h	equ	0xFEA
 41472                           fsr0l	equ	0xFE9
 41473                           wreg	equ	0xFE8
 41474                           indf1	equ	0xFE7
 41475                           postdec1	equ	0xFE5
 41476                           plusw1	equ	0xFE3
 41477                           fsr1h	equ	0xFE2
 41478                           fsr1l	equ	0xFE1
 41479                           bsr	equ	0xFE0
 41480                           indf2	equ	0xFDF
 41481                           postinc2	equ	0xFDE
 41482                           postdec2	equ	0xFDD
 41483                           plusw2	equ	0xFDB
 41484                           fsr2h	equ	0xFDA
 41485                           fsr2l	equ	0xFD9
 41486                           status	equ	0xFD8
 41487                           
 41488 ;; *************** function _currentMeasuredToPeak *****************
 41489 ;; Defined at:
 41490 ;;		line 142 in file "main.c"
 41491 ;; Parameters:    Size  Location     Type
 41492 ;;  Measured        4   57[BANK0 ] unsigned char 
 41493 ;;  Angle           4   61[BANK0 ] unsigned char 
 41494 ;; Auto vars:     Size  Location     Type
 41495 ;;  Peak            4   65[BANK0 ] unsigned char 
 41496 ;; Return value:  Size  Location     Type
 41497 ;;                  4   57[BANK0 ] unsigned char 
 41498 ;; Registers used:
 41499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41500 ;; Tracked objects:
 41501 ;;		On entry : 0/0
 41502 ;;		On exit  : 0/0
 41503 ;;		Unchanged: 0/0
 41504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41505 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41506 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41508 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41509 ;;Total ram usage:       12 bytes
 41510 ;; Hardware stack levels used:    1
 41511 ;; Hardware stack levels required when called:    3
 41512 ;; This function calls:
 41513 ;;		_sin
 41514 ;;		i2___fldiv
 41515 ;; This function is called by:
 41516 ;;		_ADCPostProcessingCallback
 41517 ;; This function uses a non-reentrant model
 41518 ;;
 41519                           
 41520                           	psect	text126
 41521  018614                     __ptext126:
 41522                           	opt stack 0
 41523  018614                     _currentMeasuredToPeak:
 41524                           	opt stack 13
 41525                           
 41526                           ;main.c: 145: double Peak = 0.0;
 41527                           
 41528                           ;incstack = 0
 41529  018614  0E00               	movlw	0
 41530  018616  0100               	movlb	0	; () banked
 41531  018618  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 41532  01861A  0E00               	movlw	0
 41533  01861C  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 41534  01861E  0E00               	movlw	0
 41535  018620  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 41536  018622  0E00               	movlw	0
 41537  018624  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 41538                           
 41539                           ; BSR set to: 0
 41540                           ;main.c: 148: Peak = sin(Angle);
 41541  018626  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 41542  01862A  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 41543  01862E  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 41544  018632  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 41545  018636  EC9C  F0AB         	call	_sin	;wreg free
 41546  01863A  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 41547  01863E  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 41548  018642  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 41549  018646  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 41550                           
 41551                           ;main.c: 149: Peak = Measured / Peak;
 41552  01864A  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 41553  01864E  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 41554  018652  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 41555  018656  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 41556  01865A  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 41557  01865E  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 41558  018662  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 41559  018666  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 41560  01866A  EC3B  F0B1         	call	i2___fldiv	;wreg free
 41561  01866E  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 41562  018672  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 41563  018676  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 41564  01867A  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 41565                           
 41566                           ;main.c: 150: return Peak;
 41567  01867E  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 41568  018682  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 41569  018686  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 41570  01868A  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 41571  01868E  0012               	return	
 41572  018690                     __end_of_currentMeasuredToPeak:
 41573                           	opt stack 0
 41574                           tosu	equ	0xFFF
 41575                           tosh	equ	0xFFE
 41576                           tosl	equ	0xFFD
 41577                           pclatu	equ	0xFFB
 41578                           pclath	equ	0xFFA
 41579                           tblptru	equ	0xFF8
 41580                           tblptrh	equ	0xFF7
 41581                           tblptrl	equ	0xFF6
 41582                           tablat	equ	0xFF5
 41583                           prodh	equ	0xFF4
 41584                           prodl	equ	0xFF3
 41585                           intcon	equ	0xFF2
 41586                           indf0	equ	0xFEF
 41587                           postinc0	equ	0xFEE
 41588                           fsr0h	equ	0xFEA
 41589                           fsr0l	equ	0xFE9
 41590                           wreg	equ	0xFE8
 41591                           indf1	equ	0xFE7
 41592                           postdec1	equ	0xFE5
 41593                           plusw1	equ	0xFE3
 41594                           fsr1h	equ	0xFE2
 41595                           fsr1l	equ	0xFE1
 41596                           bsr	equ	0xFE0
 41597                           indf2	equ	0xFDF
 41598                           postinc2	equ	0xFDE
 41599                           postdec2	equ	0xFDD
 41600                           plusw2	equ	0xFDB
 41601                           fsr2h	equ	0xFDA
 41602                           fsr2l	equ	0xFD9
 41603                           status	equ	0xFD8
 41604                           
 41605 ;; *************** function _sin *****************
 41606 ;; Defined at:
 41607 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 41608 ;; Parameters:    Size  Location     Type
 41609 ;;  f               4   40[BANK0 ] unsigned char 
 41610 ;; Auto vars:     Size  Location     Type
 41611 ;;  x2              4   52[BANK0 ] unsigned char 
 41612 ;;  y               4   44[BANK0 ] unsigned char 
 41613 ;;  sgn             1   56[BANK0 ] unsigned char 
 41614 ;; Return value:  Size  Location     Type
 41615 ;;                  4   40[BANK0 ] unsigned char 
 41616 ;; Registers used:
 41617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41618 ;; Tracked objects:
 41619 ;;		On entry : 0/0
 41620 ;;		On exit  : 0/0
 41621 ;;		Unchanged: 0/0
 41622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41623 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41624 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41626 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41627 ;;Total ram usage:       17 bytes
 41628 ;; Hardware stack levels used:    1
 41629 ;; Hardware stack levels required when called:    2
 41630 ;; This function calls:
 41631 ;;		_eval_poly
 41632 ;;		_floor
 41633 ;;		i2___fladd
 41634 ;;		i2___fldiv
 41635 ;;		i2___flge
 41636 ;;		i2___flmul
 41637 ;;		i2___flneg
 41638 ;;		i2___flsub
 41639 ;; This function is called by:
 41640 ;;		_peakToRMS
 41641 ;;		_currentMeasuredToPeak
 41642 ;; This function uses a non-reentrant model
 41643 ;;
 41644                           
 41645                           	psect	text127
 41646  015738                     __ptext127:
 41647                           	opt stack 0
 41648  015738                     _sin:
 41649                           	opt stack 13
 41650                           
 41651                           ;incstack = 0
 41652  015738  0E00               	movlw	0
 41653  01573A  0100               	movlb	0	; () banked
 41654  01573C  6F98               	movwf	sin@sgn& (0+255),b
 41655                           
 41656                           ; BSR set to: 0
 41657  01573E  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 41658  015740  D015               	goto	i2l2227
 41659                           
 41660                           ; BSR set to: 0
 41661  015742  C088  F02C         	movff	sin@f,i2___flneg@f1
 41662  015746  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 41663  01574A  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 41664  01574E  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 41665  015752  EC5C  F0C9         	call	i2___flneg	;wreg free
 41666  015756  C02C  F088         	movff	?i2___flneg,sin@f
 41667  01575A  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 41668  01575E  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 41669  015762  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 41670  015766  0E01               	movlw	1
 41671  015768  0100               	movlb	0	; () banked
 41672  01576A  6F98               	movwf	sin@sgn& (0+255),b
 41673  01576C                     i2l2227:
 41674                           
 41675                           ; BSR set to: 0
 41676                           
 41677                           ; BSR set to: 0
 41678  01576C  C088  F030         	movff	sin@f,i2___flmul@b
 41679  015770  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 41680  015774  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 41681  015778  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 41682  01577C  0E83               	movlw	131
 41683  01577E  6E34               	movwf	i2___flmul@a,c
 41684  015780  0EF9               	movlw	249
 41685  015782  6E35               	movwf	i2___flmul@a+1,c
 41686  015784  0E22               	movlw	34
 41687  015786  6E36               	movwf	i2___flmul@a+2,c
 41688  015788  0E3E               	movlw	62
 41689  01578A  6E37               	movwf	i2___flmul@a+3,c
 41690  01578C  EC34  F0A5         	call	i2___flmul	;wreg free
 41691  015790  C030  F088         	movff	?i2___flmul,sin@f
 41692  015794  C031  F089         	movff	?i2___flmul+1,sin@f+1
 41693  015798  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 41694  01579C  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 41695  0157A0  C088  F080         	movff	sin@f,i2___flsub@b
 41696  0157A4  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 41697  0157A8  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 41698  0157AC  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 41699  0157B0  C088  F076         	movff	sin@f,floor@x
 41700  0157B4  C089  F077         	movff	sin@f+1,floor@x+1
 41701  0157B8  C08A  F078         	movff	sin@f+2,floor@x+2
 41702  0157BC  C08B  F079         	movff	sin@f+3,floor@x+3
 41703  0157C0  EC5B  F0BD         	call	_floor	;wreg free
 41704  0157C4  C076  F084         	movff	?_floor,i2___flsub@a
 41705  0157C8  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 41706  0157CC  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 41707  0157D0  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 41708  0157D4  EC5C  F0C7         	call	i2___flsub	;wreg free
 41709  0157D8  C080  F088         	movff	?i2___flsub,sin@f
 41710  0157DC  C081  F089         	movff	?i2___flsub+1,sin@f+1
 41711  0157E0  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 41712  0157E4  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 41713  0157E8  C088  F030         	movff	sin@f,i2___flmul@b
 41714  0157EC  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 41715  0157F0  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 41716  0157F4  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 41717  0157F8  0E00               	movlw	0
 41718  0157FA  6E34               	movwf	i2___flmul@a,c
 41719  0157FC  0E00               	movlw	0
 41720  0157FE  6E35               	movwf	i2___flmul@a+1,c
 41721  015800  0E80               	movlw	128
 41722  015802  6E36               	movwf	i2___flmul@a+2,c
 41723  015804  0E40               	movlw	64
 41724  015806  6E37               	movwf	i2___flmul@a+3,c
 41725  015808  EC34  F0A5         	call	i2___flmul	;wreg free
 41726  01580C  C030  F088         	movff	?i2___flmul,sin@f
 41727  015810  C031  F089         	movff	?i2___flmul+1,sin@f+1
 41728  015814  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 41729  015818  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 41730  01581C  0E00               	movlw	0
 41731  01581E  6E34               	movwf	i2___flge@ff1,c
 41732  015820  0E00               	movlw	0
 41733  015822  6E35               	movwf	i2___flge@ff1+1,c
 41734  015824  0E00               	movlw	0
 41735  015826  6E36               	movwf	i2___flge@ff1+2,c
 41736  015828  0E40               	movlw	64
 41737  01582A  6E37               	movwf	i2___flge@ff1+3,c
 41738  01582C  C088  F038         	movff	sin@f,i2___flge@ff2
 41739  015830  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 41740  015834  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 41741  015838  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 41742  01583C  ECCB  F0BC         	call	i2___flge	;wreg free
 41743  015840  B0D8               	btfsc	status,0,c
 41744  015842  D023               	goto	i2l2228
 41745  015844  C088  F080         	movff	sin@f,i2___flsub@b
 41746  015848  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 41747  01584C  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 41748  015850  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 41749  015854  0E00               	movlw	0
 41750  015856  0100               	movlb	0	; () banked
 41751  015858  6F84               	movwf	i2___flsub@a& (0+255),b
 41752  01585A  0E00               	movlw	0
 41753  01585C  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 41754  01585E  0E00               	movlw	0
 41755  015860  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 41756  015862  0E40               	movlw	64
 41757  015864  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 41758  015866  EC5C  F0C7         	call	i2___flsub	;wreg free
 41759  01586A  C080  F088         	movff	?i2___flsub,sin@f
 41760  01586E  C081  F089         	movff	?i2___flsub+1,sin@f+1
 41761  015872  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 41762  015876  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 41763  01587A  0100               	movlb	0	; () banked
 41764  01587C  5198               	movf	sin@sgn& (0+255),w,b
 41765  01587E  A4D8               	btfss	status,2,c
 41766  015880  D002               	goto	i2u1686_40
 41767  015882  0E01               	movlw	1
 41768  015884  D001               	goto	i2u1687_40
 41769  015886                     i2u1686_40:
 41770  015886  0E00               	movlw	0
 41771  015888                     i2u1687_40:
 41772  015888  6F98               	movwf	sin@sgn& (0+255),b
 41773  01588A                     i2l2228:
 41774                           
 41775                           ; BSR set to: 0
 41776  01588A  0E00               	movlw	0
 41777  01588C  6E34               	movwf	i2___flge@ff1,c
 41778  01588E  0E00               	movlw	0
 41779  015890  6E35               	movwf	i2___flge@ff1+1,c
 41780  015892  0E80               	movlw	128
 41781  015894  6E36               	movwf	i2___flge@ff1+2,c
 41782  015896  0E3F               	movlw	63
 41783  015898  6E37               	movwf	i2___flge@ff1+3,c
 41784  01589A  C088  F038         	movff	sin@f,i2___flge@ff2
 41785  01589E  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 41786  0158A2  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 41787  0158A6  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 41788  0158AA  ECCB  F0BC         	call	i2___flge	;wreg free
 41789  0158AE  B0D8               	btfsc	status,0,c
 41790  0158B0  D024               	goto	i2l2229
 41791  0158B2  C088  F02C         	movff	sin@f,i2___flneg@f1
 41792  0158B6  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 41793  0158BA  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 41794  0158BE  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 41795  0158C2  EC5C  F0C9         	call	i2___flneg	;wreg free
 41796  0158C6  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 41797  0158CA  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 41798  0158CE  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 41799  0158D2  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 41800  0158D6  0E00               	movlw	0
 41801  0158D8  6E5A               	movwf	i2___fladd@a,c
 41802  0158DA  0E00               	movlw	0
 41803  0158DC  6E5B               	movwf	i2___fladd@a+1,c
 41804  0158DE  0E00               	movlw	0
 41805  0158E0  6E5C               	movwf	i2___fladd@a+2,c
 41806  0158E2  0E40               	movlw	64
 41807  0158E4  6E5D               	movwf	i2___fladd@a+3,c
 41808  0158E6  EC7B  F0A8         	call	i2___fladd	;wreg free
 41809  0158EA  C056  F088         	movff	?i2___fladd,sin@f
 41810  0158EE  C057  F089         	movff	?i2___fladd+1,sin@f+1
 41811  0158F2  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 41812  0158F6  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 41813  0158FA                     i2l2229:
 41814  0158FA  C088  F030         	movff	sin@f,i2___flmul@b
 41815  0158FE  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 41816  015902  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 41817  015906  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 41818  01590A  C088  F034         	movff	sin@f,i2___flmul@a
 41819  01590E  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 41820  015912  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 41821  015916  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 41822  01591A  EC34  F0A5         	call	i2___flmul	;wreg free
 41823  01591E  C030  F094         	movff	?i2___flmul,sin@x2
 41824  015922  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 41825  015926  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 41826  01592A  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 41827  01592E  C094  F06C         	movff	sin@x2,eval_poly@x
 41828  015932  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 41829  015936  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 41830  01593A  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 41831  01593E  0E3F               	movlw	low sin@coeff_b
 41832  015940  0100               	movlb	0	; () banked
 41833  015942  6F70               	movwf	eval_poly@d& (0+255),b
 41834  015944  0ED8               	movlw	high sin@coeff_b
 41835  015946  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 41836  015948  0E00               	movlw	0
 41837  01594A  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 41838  01594C  0E03               	movlw	3
 41839  01594E  6F72               	movwf	eval_poly@n& (0+255),b
 41840  015950  ECE4  F0BD         	call	_eval_poly	;wreg free
 41841  015954  C06C  F08C         	movff	?_eval_poly,sin@y
 41842  015958  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 41843  01595C  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 41844  015960  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 41845  015964  C08C  F017         	movff	sin@y,i2___fldiv@a
 41846  015968  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 41847  01596C  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 41848  015970  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 41849  015974  0E00               	movlw	0
 41850  015976  0100               	movlb	0	; () banked
 41851  015978  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 41852  01597A  0E04               	movlw	4
 41853  01597C  6F72               	movwf	eval_poly@n& (0+255),b
 41854  01597E  0E17               	movlw	low sin@coeff_a
 41855  015980  6F70               	movwf	eval_poly@d& (0+255),b
 41856  015982  0ED8               	movlw	high sin@coeff_a
 41857  015984  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 41858  015986  C094  F06C         	movff	sin@x2,eval_poly@x
 41859  01598A  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 41860  01598E  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 41861  015992  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 41862  015996  ECE4  F0BD         	call	_eval_poly	;wreg free
 41863  01599A  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 41864  01599E  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 41865  0159A2  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 41866  0159A6  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 41867  0159AA  EC3B  F0B1         	call	i2___fldiv	;wreg free
 41868  0159AE  C013  F090         	movff	?i2___fldiv,_sin$4395
 41869  0159B2  C014  F091         	movff	?i2___fldiv+1,_sin$4395+1
 41870  0159B6  C015  F092         	movff	?i2___fldiv+2,_sin$4395+2
 41871  0159BA  C016  F093         	movff	?i2___fldiv+3,_sin$4395+3
 41872  0159BE  C088  F030         	movff	sin@f,i2___flmul@b
 41873  0159C2  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 41874  0159C6  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 41875  0159CA  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 41876  0159CE  C090  F034         	movff	_sin$4395,i2___flmul@a
 41877  0159D2  C091  F035         	movff	_sin$4395+1,i2___flmul@a+1
 41878  0159D6  C092  F036         	movff	_sin$4395+2,i2___flmul@a+2
 41879  0159DA  C093  F037         	movff	_sin$4395+3,i2___flmul@a+3
 41880  0159DE  EC34  F0A5         	call	i2___flmul	;wreg free
 41881  0159E2  C030  F088         	movff	?i2___flmul,sin@f
 41882  0159E6  C031  F089         	movff	?i2___flmul+1,sin@f+1
 41883  0159EA  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 41884  0159EE  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 41885  0159F2  0100               	movlb	0	; () banked
 41886  0159F4  5198               	movf	sin@sgn& (0+255),w,b
 41887  0159F6  B4D8               	btfsc	status,2,c
 41888  0159F8  D013               	goto	i2l2230
 41889                           
 41890                           ; BSR set to: 0
 41891  0159FA  C088  F02C         	movff	sin@f,i2___flneg@f1
 41892  0159FE  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 41893  015A02  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 41894  015A06  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 41895  015A0A  EC5C  F0C9         	call	i2___flneg	;wreg free
 41896  015A0E  C02C  F088         	movff	?i2___flneg,?_sin
 41897  015A12  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 41898  015A16  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 41899  015A1A  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 41900  015A1E  0012               	return	
 41901  015A20                     i2l2230:
 41902                           
 41903                           ; BSR set to: 0
 41904  015A20  C088  F088         	movff	sin@f,?_sin
 41905  015A24  C089  F089         	movff	sin@f+1,?_sin+1
 41906  015A28  C08A  F08A         	movff	sin@f+2,?_sin+2
 41907  015A2C  C08B  F08B         	movff	sin@f+3,?_sin+3
 41908  015A30  0012               	return		;funcret
 41909  015A32                     __end_of_sin:
 41910                           	opt stack 0
 41911                           tosu	equ	0xFFF
 41912                           tosh	equ	0xFFE
 41913                           tosl	equ	0xFFD
 41914                           pclatu	equ	0xFFB
 41915                           pclath	equ	0xFFA
 41916                           tblptru	equ	0xFF8
 41917                           tblptrh	equ	0xFF7
 41918                           tblptrl	equ	0xFF6
 41919                           tablat	equ	0xFF5
 41920                           prodh	equ	0xFF4
 41921                           prodl	equ	0xFF3
 41922                           intcon	equ	0xFF2
 41923                           indf0	equ	0xFEF
 41924                           postinc0	equ	0xFEE
 41925                           fsr0h	equ	0xFEA
 41926                           fsr0l	equ	0xFE9
 41927                           wreg	equ	0xFE8
 41928                           indf1	equ	0xFE7
 41929                           postdec1	equ	0xFE5
 41930                           plusw1	equ	0xFE3
 41931                           fsr1h	equ	0xFE2
 41932                           fsr1l	equ	0xFE1
 41933                           bsr	equ	0xFE0
 41934                           indf2	equ	0xFDF
 41935                           postinc2	equ	0xFDE
 41936                           postdec2	equ	0xFDD
 41937                           plusw2	equ	0xFDB
 41938                           fsr2h	equ	0xFDA
 41939                           fsr2l	equ	0xFD9
 41940                           status	equ	0xFD8
 41941                           
 41942 ;; *************** function i2___flsub *****************
 41943 ;; Defined at:
 41944 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 41945 ;; Parameters:    Size  Location     Type
 41946 ;;  b               4   32[BANK0 ] unsigned char 
 41947 ;;  a               4   36[BANK0 ] unsigned char 
 41948 ;; Auto vars:     Size  Location     Type
 41949 ;;		None
 41950 ;; Return value:  Size  Location     Type
 41951 ;;                  4   32[BANK0 ] unsigned char 
 41952 ;; Registers used:
 41953 ;;		wreg, status,2, status,0, cstack
 41954 ;; Tracked objects:
 41955 ;;		On entry : 0/0
 41956 ;;		On exit  : 0/0
 41957 ;;		Unchanged: 0/0
 41958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41959 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41962 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41963 ;;Total ram usage:        8 bytes
 41964 ;; Hardware stack levels used:    1
 41965 ;; Hardware stack levels required when called:    1
 41966 ;; This function calls:
 41967 ;;		i2___fladd
 41968 ;; This function is called by:
 41969 ;;		_sin
 41970 ;;		i2_printf
 41971 ;; This function uses a non-reentrant model
 41972 ;;
 41973                           
 41974                           	psect	text128
 41975  018EB8                     __ptext128:
 41976                           	opt stack 0
 41977  018EB8                     i2___flsub:
 41978                           	opt stack 15
 41979                           
 41980                           ;incstack = 0
 41981  018EB8  0E00               	movlw	0
 41982  018EBA  0100               	movlb	0	; () banked
 41983  018EBC  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 41984  018EBE  0E00               	movlw	0
 41985  018EC0  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 41986  018EC2  0E00               	movlw	0
 41987  018EC4  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 41988  018EC6  0E80               	movlw	128
 41989  018EC8  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 41990                           
 41991                           ; BSR set to: 0
 41992  018ECA  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 41993  018ECE  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 41994  018ED2  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 41995  018ED6  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 41996  018EDA  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 41997  018EDE  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 41998  018EE2  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 41999  018EE6  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 42000  018EEA  EC7B  F0A8         	call	i2___fladd	;wreg free
 42001  018EEE  C056  F080         	movff	?i2___fladd,?i2___flsub
 42002  018EF2  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 42003  018EF6  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 42004  018EFA  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 42005  018EFE  0012               	return	
 42006  018F00                     __end_ofi2___flsub:
 42007                           	opt stack 0
 42008                           tosu	equ	0xFFF
 42009                           tosh	equ	0xFFE
 42010                           tosl	equ	0xFFD
 42011                           pclatu	equ	0xFFB
 42012                           pclath	equ	0xFFA
 42013                           tblptru	equ	0xFF8
 42014                           tblptrh	equ	0xFF7
 42015                           tblptrl	equ	0xFF6
 42016                           tablat	equ	0xFF5
 42017                           prodh	equ	0xFF4
 42018                           prodl	equ	0xFF3
 42019                           intcon	equ	0xFF2
 42020                           indf0	equ	0xFEF
 42021                           postinc0	equ	0xFEE
 42022                           fsr0h	equ	0xFEA
 42023                           fsr0l	equ	0xFE9
 42024                           wreg	equ	0xFE8
 42025                           indf1	equ	0xFE7
 42026                           postdec1	equ	0xFE5
 42027                           plusw1	equ	0xFE3
 42028                           fsr1h	equ	0xFE2
 42029                           fsr1l	equ	0xFE1
 42030                           bsr	equ	0xFE0
 42031                           indf2	equ	0xFDF
 42032                           postinc2	equ	0xFDE
 42033                           postdec2	equ	0xFDD
 42034                           plusw2	equ	0xFDB
 42035                           fsr2h	equ	0xFDA
 42036                           fsr2l	equ	0xFD9
 42037                           status	equ	0xFD8
 42038                           
 42039 ;; *************** function i2___flneg *****************
 42040 ;; Defined at:
 42041 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 42042 ;; Parameters:    Size  Location     Type
 42043 ;;  f1              4   43[COMRAM] unsigned char 
 42044 ;; Auto vars:     Size  Location     Type
 42045 ;;		None
 42046 ;; Return value:  Size  Location     Type
 42047 ;;                  4   43[COMRAM] unsigned char 
 42048 ;; Registers used:
 42049 ;;		wreg, status,2, status,0
 42050 ;; Tracked objects:
 42051 ;;		On entry : 0/0
 42052 ;;		On exit  : 0/0
 42053 ;;		Unchanged: 0/0
 42054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42059 ;;Total ram usage:        4 bytes
 42060 ;; Hardware stack levels used:    1
 42061 ;; This function calls:
 42062 ;;		Nothing
 42063 ;; This function is called by:
 42064 ;;		_peakToRMS
 42065 ;;		_ADCPostProcessingCallback
 42066 ;;		_acos
 42067 ;;		_asin
 42068 ;;		_atan
 42069 ;;		_fabs
 42070 ;;		_sin
 42071 ;;		i2_printf
 42072 ;; This function uses a non-reentrant model
 42073 ;;
 42074                           
 42075                           	psect	text129
 42076  0192B8                     __ptext129:
 42077                           	opt stack 0
 42078  0192B8                     i2___flneg:
 42079                           	opt stack 16
 42080                           
 42081                           ;incstack = 0
 42082  0192B8  502C               	movf	i2___flneg@f1,w,c
 42083  0192BA  102D               	iorwf	i2___flneg@f1+1,w,c
 42084  0192BC  102E               	iorwf	i2___flneg@f1+2,w,c
 42085  0192BE  102F               	iorwf	i2___flneg@f1+3,w,c
 42086  0192C0  B4D8               	btfsc	status,2,c
 42087  0192C2  D008               	goto	i2l1972
 42088  0192C4  0E00               	movlw	0
 42089  0192C6  1A2C               	xorwf	i2___flneg@f1,f,c
 42090  0192C8  0E00               	movlw	0
 42091  0192CA  1A2D               	xorwf	i2___flneg@f1+1,f,c
 42092  0192CC  0E00               	movlw	0
 42093  0192CE  1A2E               	xorwf	i2___flneg@f1+2,f,c
 42094  0192D0  0E80               	movlw	128
 42095  0192D2  1A2F               	xorwf	i2___flneg@f1+3,f,c
 42096  0192D4                     i2l1972:
 42097  0192D4  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 42098  0192D8  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 42099  0192DC  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 42100  0192E0  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 42101  0192E4  0012               	return	
 42102  0192E6                     __end_ofi2___flneg:
 42103                           	opt stack 0
 42104                           tosu	equ	0xFFF
 42105                           tosh	equ	0xFFE
 42106                           tosl	equ	0xFFD
 42107                           pclatu	equ	0xFFB
 42108                           pclath	equ	0xFFA
 42109                           tblptru	equ	0xFF8
 42110                           tblptrh	equ	0xFF7
 42111                           tblptrl	equ	0xFF6
 42112                           tablat	equ	0xFF5
 42113                           prodh	equ	0xFF4
 42114                           prodl	equ	0xFF3
 42115                           intcon	equ	0xFF2
 42116                           indf0	equ	0xFEF
 42117                           postinc0	equ	0xFEE
 42118                           fsr0h	equ	0xFEA
 42119                           fsr0l	equ	0xFE9
 42120                           wreg	equ	0xFE8
 42121                           indf1	equ	0xFE7
 42122                           postdec1	equ	0xFE5
 42123                           plusw1	equ	0xFE3
 42124                           fsr1h	equ	0xFE2
 42125                           fsr1l	equ	0xFE1
 42126                           bsr	equ	0xFE0
 42127                           indf2	equ	0xFDF
 42128                           postinc2	equ	0xFDE
 42129                           postdec2	equ	0xFDD
 42130                           plusw2	equ	0xFDB
 42131                           fsr2h	equ	0xFDA
 42132                           fsr2l	equ	0xFD9
 42133                           status	equ	0xFD8
 42134                           
 42135 ;; *************** function i2___fldiv *****************
 42136 ;; Defined at:
 42137 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 42138 ;; Parameters:    Size  Location     Type
 42139 ;;  b               4   18[COMRAM] unsigned char 
 42140 ;;  a               4   22[COMRAM] unsigned char 
 42141 ;; Auto vars:     Size  Location     Type
 42142 ;;  __fldiv         4   37[COMRAM] unsigned long 
 42143 ;;  __fldiv         4   31[COMRAM] unsigned long 
 42144 ;;  __fldiv         2   35[COMRAM] int 
 42145 ;;  __fldiv         1   42[COMRAM] unsigned char 
 42146 ;;  __fldiv         1   41[COMRAM] unsigned char 
 42147 ;;  __fldiv         1   30[COMRAM] unsigned char 
 42148 ;; Return value:  Size  Location     Type
 42149 ;;                  4   18[COMRAM] unsigned char 
 42150 ;; Registers used:
 42151 ;;		wreg, status,2, status,0
 42152 ;; Tracked objects:
 42153 ;;		On entry : 0/0
 42154 ;;		On exit  : 0/0
 42155 ;;		Unchanged: 0/0
 42156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42157 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42158 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42160 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42161 ;;Total ram usage:       25 bytes
 42162 ;; Hardware stack levels used:    1
 42163 ;; This function calls:
 42164 ;;		Nothing
 42165 ;; This function is called by:
 42166 ;;		_peakToRMS
 42167 ;;		_currentMeasuredToPeak
 42168 ;;		_ADCPostProcessingCallback
 42169 ;;		_asin
 42170 ;;		_atan
 42171 ;;		_sin
 42172 ;; This function uses a non-reentrant model
 42173 ;;
 42174                           
 42175                           	psect	text130
 42176  016276                     __ptext130:
 42177                           	opt stack 0
 42178  016276                     i2___fldiv:
 42179                           	opt stack 16
 42180                           
 42181                           ;incstack = 0
 42182  016276  5016               	movf	i2___fldiv@b+3,w,c
 42183  016278  0B80               	andlw	128
 42184  01627A  6E1F               	movwf	i2___fldiv@sign,c
 42185  01627C  5016               	movf	i2___fldiv@b+3,w,c
 42186  01627E  2416               	addwf	i2___fldiv@b+3,w,c
 42187  016280  6E2A               	movwf	i2___fldiv@bexp,c
 42188  016282  BE15               	btfsc	i2___fldiv@b+2,7,c
 42189  016284  802A               	bsf	i2___fldiv@bexp,0,c
 42190  016286  502A               	movf	i2___fldiv@bexp,w,c
 42191  016288  B4D8               	btfsc	status,2,c
 42192  01628A  D00D               	goto	i2l2292
 42193  01628C  282A               	incf	i2___fldiv@bexp,w,c
 42194  01628E  A4D8               	btfss	status,2,c
 42195  016290  D008               	goto	i2l2293
 42196  016292  0E00               	movlw	0
 42197  016294  6E13               	movwf	i2___fldiv@b,c
 42198  016296  0E00               	movlw	0
 42199  016298  6E14               	movwf	i2___fldiv@b+1,c
 42200  01629A  0E00               	movlw	0
 42201  01629C  6E15               	movwf	i2___fldiv@b+2,c
 42202  01629E  0E00               	movlw	0
 42203  0162A0  6E16               	movwf	i2___fldiv@b+3,c
 42204  0162A2                     i2l2293:
 42205  0162A2  8E15               	bsf	i2___fldiv@b+2,7,c
 42206  0162A4  D006               	goto	L19
 42207  0162A6                     i2l2292:
 42208  0162A6  0E00               	movlw	0
 42209  0162A8  6E13               	movwf	i2___fldiv@b,c
 42210  0162AA  0E00               	movlw	0
 42211  0162AC  6E14               	movwf	i2___fldiv@b+1,c
 42212  0162AE  0E00               	movlw	0
 42213  0162B0  6E15               	movwf	i2___fldiv@b+2,c
 42214  0162B2                     L19:
 42215  0162B2  0E00               	movlw	0
 42216  0162B4  6E16               	movwf	i2___fldiv@b+3,c
 42217  0162B6  501A               	movf	i2___fldiv@a+3,w,c
 42218  0162B8  0B80               	andlw	128
 42219  0162BA  1A1F               	xorwf	i2___fldiv@sign,f,c
 42220  0162BC  501A               	movf	i2___fldiv@a+3,w,c
 42221  0162BE  241A               	addwf	i2___fldiv@a+3,w,c
 42222  0162C0  6E2B               	movwf	i2___fldiv@aexp,c
 42223  0162C2  BE19               	btfsc	i2___fldiv@a+2,7,c
 42224  0162C4  802B               	bsf	i2___fldiv@aexp,0,c
 42225  0162C6  502B               	movf	i2___fldiv@aexp,w,c
 42226  0162C8  B4D8               	btfsc	status,2,c
 42227  0162CA  D00D               	goto	i2l2296
 42228  0162CC  282B               	incf	i2___fldiv@aexp,w,c
 42229  0162CE  A4D8               	btfss	status,2,c
 42230  0162D0  D008               	goto	i2l2297
 42231  0162D2  0E00               	movlw	0
 42232  0162D4  6E17               	movwf	i2___fldiv@a,c
 42233  0162D6  0E00               	movlw	0
 42234  0162D8  6E18               	movwf	i2___fldiv@a+1,c
 42235  0162DA  0E00               	movlw	0
 42236  0162DC  6E19               	movwf	i2___fldiv@a+2,c
 42237  0162DE  0E00               	movlw	0
 42238  0162E0  6E1A               	movwf	i2___fldiv@a+3,c
 42239  0162E2                     i2l2297:
 42240  0162E2  8E19               	bsf	i2___fldiv@a+2,7,c
 42241  0162E4  D006               	goto	L20
 42242  0162E6                     i2l2296:
 42243  0162E6  0E00               	movlw	0
 42244  0162E8  6E17               	movwf	i2___fldiv@a,c
 42245  0162EA  0E00               	movlw	0
 42246  0162EC  6E18               	movwf	i2___fldiv@a+1,c
 42247  0162EE  0E00               	movlw	0
 42248  0162F0  6E19               	movwf	i2___fldiv@a+2,c
 42249  0162F2                     L20:
 42250  0162F2  0E00               	movlw	0
 42251  0162F4  6E1A               	movwf	i2___fldiv@a+3,c
 42252  0162F6  5017               	movf	i2___fldiv@a,w,c
 42253  0162F8  1018               	iorwf	i2___fldiv@a+1,w,c
 42254  0162FA  1019               	iorwf	i2___fldiv@a+2,w,c
 42255  0162FC  101A               	iorwf	i2___fldiv@a+3,w,c
 42256  0162FE  A4D8               	btfss	status,2,c
 42257  016300  D015               	goto	i2l2299
 42258  016302  0E00               	movlw	0
 42259  016304  6E13               	movwf	i2___fldiv@b,c
 42260  016306  0E00               	movlw	0
 42261  016308  6E14               	movwf	i2___fldiv@b+1,c
 42262  01630A  0E00               	movlw	0
 42263  01630C  6E15               	movwf	i2___fldiv@b+2,c
 42264  01630E  0E00               	movlw	0
 42265  016310  6E16               	movwf	i2___fldiv@b+3,c
 42266  016312  0E80               	movlw	128
 42267  016314  1215               	iorwf	i2___fldiv@b+2,f,c
 42268  016316  0E7F               	movlw	127
 42269  016318  1216               	iorwf	i2___fldiv@b+3,f,c
 42270  01631A  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 42271  01631E  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 42272  016322  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 42273  016326  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 42274  01632A  0012               	return	
 42275  01632C                     i2l2299:
 42276  01632C  502A               	movf	i2___fldiv@bexp,w,c
 42277  01632E  A4D8               	btfss	status,2,c
 42278  016330  D011               	goto	i2l2301
 42279  016332  0E00               	movlw	0
 42280  016334  6E13               	movwf	i2___fldiv@b,c
 42281  016336  0E00               	movlw	0
 42282  016338  6E14               	movwf	i2___fldiv@b+1,c
 42283  01633A  0E00               	movlw	0
 42284  01633C  6E15               	movwf	i2___fldiv@b+2,c
 42285  01633E  0E00               	movlw	0
 42286  016340  6E16               	movwf	i2___fldiv@b+3,c
 42287  016342  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 42288  016346  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 42289  01634A  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 42290  01634E  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 42291  016352  0012               	return	
 42292  016354                     i2l2301:
 42293  016354  502B               	movf	i2___fldiv@aexp,w,c
 42294  016356  6E1B               	movwf	??i2___fldiv& (0+255),c
 42295  016358  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 42296  01635A  1E1B               	comf	??i2___fldiv,f,c
 42297  01635C  1E1C               	comf	??i2___fldiv+1,f,c
 42298  01635E  4A1B               	infsnz	??i2___fldiv,f,c
 42299  016360  2A1C               	incf	??i2___fldiv+1,f,c
 42300  016362  502A               	movf	i2___fldiv@bexp,w,c
 42301  016364  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 42302  016366  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 42303  016368  501B               	movf	??i2___fldiv,w,c
 42304  01636A  261D               	addwf	??i2___fldiv+2,f,c
 42305  01636C  501C               	movf	??i2___fldiv+1,w,c
 42306  01636E  221E               	addwfc	??i2___fldiv+3,f,c
 42307  016370  0E7F               	movlw	127
 42308  016372  241D               	addwf	??i2___fldiv+2,w,c
 42309  016374  6E24               	movwf	i2___fldiv@new_exp,c
 42310  016376  0E00               	movlw	0
 42311  016378  201E               	addwfc	??i2___fldiv+3,w,c
 42312  01637A  6E25               	movwf	i2___fldiv@new_exp+1,c
 42313  01637C  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 42314  016380  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 42315  016384  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 42316  016388  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 42317  01638C  0E00               	movlw	0
 42318  01638E  6E13               	movwf	i2___fldiv@b,c
 42319  016390  0E00               	movlw	0
 42320  016392  6E14               	movwf	i2___fldiv@b+1,c
 42321  016394  0E00               	movlw	0
 42322  016396  6E15               	movwf	i2___fldiv@b+2,c
 42323  016398  0E00               	movlw	0
 42324  01639A  6E16               	movwf	i2___fldiv@b+3,c
 42325  01639C  0E00               	movlw	0
 42326  01639E  6E26               	movwf	i2___fldiv@grs,c
 42327  0163A0  0E00               	movlw	0
 42328  0163A2  6E27               	movwf	i2___fldiv@grs+1,c
 42329  0163A4  0E00               	movlw	0
 42330  0163A6  6E28               	movwf	i2___fldiv@grs+2,c
 42331  0163A8  0E00               	movlw	0
 42332  0163AA  6E29               	movwf	i2___fldiv@grs+3,c
 42333  0163AC  0E00               	movlw	0
 42334  0163AE  6E2B               	movwf	i2___fldiv@aexp,c
 42335  0163B0  D028               	goto	i2l2302
 42336  0163B2  502B               	movf	i2___fldiv@aexp,w,c
 42337  0163B4  B4D8               	btfsc	status,2,c
 42338  0163B6  D011               	goto	i2l2304
 42339  0163B8  90D8               	bcf	status,0,c
 42340  0163BA  3620               	rlcf	i2___fldiv@rem,f,c
 42341  0163BC  3621               	rlcf	i2___fldiv@rem+1,f,c
 42342  0163BE  3622               	rlcf	i2___fldiv@rem+2,f,c
 42343  0163C0  3623               	rlcf	i2___fldiv@rem+3,f,c
 42344  0163C2  90D8               	bcf	status,0,c
 42345  0163C4  3613               	rlcf	i2___fldiv@b,f,c
 42346  0163C6  3614               	rlcf	i2___fldiv@b+1,f,c
 42347  0163C8  3615               	rlcf	i2___fldiv@b+2,f,c
 42348  0163CA  3616               	rlcf	i2___fldiv@b+3,f,c
 42349  0163CC  BE29               	btfsc	i2___fldiv@grs+3,7,c
 42350  0163CE  8013               	bsf	i2___fldiv@b,0,c
 42351  0163D0  90D8               	bcf	status,0,c
 42352  0163D2  3626               	rlcf	i2___fldiv@grs,f,c
 42353  0163D4  3627               	rlcf	i2___fldiv@grs+1,f,c
 42354  0163D6  3628               	rlcf	i2___fldiv@grs+2,f,c
 42355  0163D8  3629               	rlcf	i2___fldiv@grs+3,f,c
 42356  0163DA                     i2l2304:
 42357  0163DA  5017               	movf	i2___fldiv@a,w,c
 42358  0163DC  5C20               	subwf	i2___fldiv@rem,w,c
 42359  0163DE  5018               	movf	i2___fldiv@a+1,w,c
 42360  0163E0  5821               	subwfb	i2___fldiv@rem+1,w,c
 42361  0163E2  5019               	movf	i2___fldiv@a+2,w,c
 42362  0163E4  5822               	subwfb	i2___fldiv@rem+2,w,c
 42363  0163E6  501A               	movf	i2___fldiv@a+3,w,c
 42364  0163E8  5823               	subwfb	i2___fldiv@rem+3,w,c
 42365  0163EA  A0D8               	btfss	status,0,c
 42366  0163EC  D009               	goto	i2l2306
 42367  0163EE  8C29               	bsf	i2___fldiv@grs+3,6,c
 42368  0163F0  5017               	movf	i2___fldiv@a,w,c
 42369  0163F2  5E20               	subwf	i2___fldiv@rem,f,c
 42370  0163F4  5018               	movf	i2___fldiv@a+1,w,c
 42371  0163F6  5A21               	subwfb	i2___fldiv@rem+1,f,c
 42372  0163F8  5019               	movf	i2___fldiv@a+2,w,c
 42373  0163FA  5A22               	subwfb	i2___fldiv@rem+2,f,c
 42374  0163FC  501A               	movf	i2___fldiv@a+3,w,c
 42375  0163FE  5A23               	subwfb	i2___fldiv@rem+3,f,c
 42376  016400                     i2l2306:
 42377  016400  2A2B               	incf	i2___fldiv@aexp,f,c
 42378  016402                     i2l2302:
 42379  016402  0E19               	movlw	25
 42380  016404  642B               	cpfsgt	i2___fldiv@aexp,c
 42381  016406  D7D5               	goto	i2l2303
 42382  016408  5020               	movf	i2___fldiv@rem,w,c
 42383  01640A  1021               	iorwf	i2___fldiv@rem+1,w,c
 42384  01640C  1022               	iorwf	i2___fldiv@rem+2,w,c
 42385  01640E  1023               	iorwf	i2___fldiv@rem+3,w,c
 42386  016410  B4D8               	btfsc	status,2,c
 42387  016412  D011               	goto	i2l2309
 42388  016414  8026               	bsf	i2___fldiv@grs,0,c
 42389  016416  D00F               	goto	i2l2309
 42390  016418  90D8               	bcf	status,0,c
 42391  01641A  3613               	rlcf	i2___fldiv@b,f,c
 42392  01641C  3614               	rlcf	i2___fldiv@b+1,f,c
 42393  01641E  3615               	rlcf	i2___fldiv@b+2,f,c
 42394  016420  3616               	rlcf	i2___fldiv@b+3,f,c
 42395  016422  BE29               	btfsc	i2___fldiv@grs+3,7,c
 42396  016424  8013               	bsf	i2___fldiv@b,0,c
 42397  016426  90D8               	bcf	status,0,c
 42398  016428  3626               	rlcf	i2___fldiv@grs,f,c
 42399  01642A  3627               	rlcf	i2___fldiv@grs+1,f,c
 42400  01642C  3628               	rlcf	i2___fldiv@grs+2,f,c
 42401  01642E  3629               	rlcf	i2___fldiv@grs+3,f,c
 42402  016430  0624               	decf	i2___fldiv@new_exp,f,c
 42403  016432  A0D8               	btfss	status,0,c
 42404  016434  0625               	decf	i2___fldiv@new_exp+1,f,c
 42405  016436                     i2l2309:
 42406  016436  AE15               	btfss	i2___fldiv@b+2,7,c
 42407  016438  D7EF               	goto	i2l2310
 42408  01643A  0E00               	movlw	0
 42409  01643C  6E2B               	movwf	i2___fldiv@aexp,c
 42410  01643E  AE29               	btfss	i2___fldiv@grs+3,7,c
 42411  016440  D016               	goto	i2l2316
 42412  016442  0EFF               	movlw	255
 42413  016444  1426               	andwf	i2___fldiv@grs,w,c
 42414  016446  6E1B               	movwf	??i2___fldiv& (0+255),c
 42415  016448  0EFF               	movlw	255
 42416  01644A  1427               	andwf	i2___fldiv@grs+1,w,c
 42417  01644C  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 42418  01644E  0EFF               	movlw	255
 42419  016450  1428               	andwf	i2___fldiv@grs+2,w,c
 42420  016452  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 42421  016454  0E7F               	movlw	127
 42422  016456  1429               	andwf	i2___fldiv@grs+3,w,c
 42423  016458  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 42424  01645A  501B               	movf	??i2___fldiv,w,c
 42425  01645C  101C               	iorwf	??i2___fldiv+1,w,c
 42426  01645E  101D               	iorwf	??i2___fldiv+2,w,c
 42427  016460  101E               	iorwf	??i2___fldiv+3,w,c
 42428  016462  A4D8               	btfss	status,2,c
 42429  016464  D002               	goto	i2u1496_40
 42430  016466  A013               	btfss	i2___fldiv@b,0,c
 42431  016468  D002               	goto	i2l2316
 42432  01646A                     i2u1496_40:
 42433  01646A  0E01               	movlw	1
 42434  01646C  6E2B               	movwf	i2___fldiv@aexp,c
 42435  01646E                     i2l2316:
 42436  01646E  502B               	movf	i2___fldiv@aexp,w,c
 42437  016470  B4D8               	btfsc	status,2,c
 42438  016472  D01F               	goto	i2l2318
 42439  016474  0E01               	movlw	1
 42440  016476  2613               	addwf	i2___fldiv@b,f,c
 42441  016478  0E00               	movlw	0
 42442  01647A  2214               	addwfc	i2___fldiv@b+1,f,c
 42443  01647C  2215               	addwfc	i2___fldiv@b+2,f,c
 42444  01647E  2216               	addwfc	i2___fldiv@b+3,f,c
 42445  016480  A016               	btfss	i2___fldiv@b+3,0,c
 42446  016482  D017               	goto	i2l2318
 42447  016484  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 42448  016488  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 42449  01648C  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 42450  016490  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 42451  016494  341E               	rlcf	??i2___fldiv+3,w,c
 42452  016496  321E               	rrcf	??i2___fldiv+3,f,c
 42453  016498  321D               	rrcf	??i2___fldiv+2,f,c
 42454  01649A  321C               	rrcf	??i2___fldiv+1,f,c
 42455  01649C  321B               	rrcf	??i2___fldiv,f,c
 42456  01649E  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 42457  0164A2  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 42458  0164A6  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 42459  0164AA  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 42460  0164AE  4A24               	infsnz	i2___fldiv@new_exp,f,c
 42461  0164B0  2A25               	incf	i2___fldiv@new_exp+1,f,c
 42462  0164B2                     i2l2318:
 42463  0164B2  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 42464  0164B4  D010               	goto	i2l2319
 42465  0164B6  5025               	movf	i2___fldiv@new_exp+1,w,c
 42466  0164B8  E103               	bnz	i2u1499_40
 42467  0164BA  2824               	incf	i2___fldiv@new_exp,w,c
 42468  0164BC  A0D8               	btfss	status,0,c
 42469  0164BE  D00B               	goto	i2l2319
 42470  0164C0                     i2u1499_40:
 42471  0164C0  0E00               	movlw	0
 42472  0164C2  6E25               	movwf	i2___fldiv@new_exp+1,c
 42473  0164C4  6824               	setf	i2___fldiv@new_exp,c
 42474  0164C6  0E00               	movlw	0
 42475  0164C8  6E13               	movwf	i2___fldiv@b,c
 42476  0164CA  0E00               	movlw	0
 42477  0164CC  6E14               	movwf	i2___fldiv@b+1,c
 42478  0164CE  0E00               	movlw	0
 42479  0164D0  6E15               	movwf	i2___fldiv@b+2,c
 42480  0164D2  0E00               	movlw	0
 42481  0164D4  6E16               	movwf	i2___fldiv@b+3,c
 42482  0164D6                     i2l2319:
 42483  0164D6  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 42484  0164D8  D005               	goto	i2u1500_40
 42485  0164DA  5025               	movf	i2___fldiv@new_exp+1,w,c
 42486  0164DC  E111               	bnz	i2l12520
 42487  0164DE  0424               	decf	i2___fldiv@new_exp,w,c
 42488  0164E0  B0D8               	btfsc	status,0,c
 42489  0164E2  D00E               	goto	i2l2320
 42490  0164E4                     i2u1500_40:
 42491  0164E4  0E00               	movlw	0
 42492  0164E6  6E25               	movwf	i2___fldiv@new_exp+1,c
 42493  0164E8  0E00               	movlw	0
 42494  0164EA  6E24               	movwf	i2___fldiv@new_exp,c
 42495  0164EC  0E00               	movlw	0
 42496  0164EE  6E13               	movwf	i2___fldiv@b,c
 42497  0164F0  0E00               	movlw	0
 42498  0164F2  6E14               	movwf	i2___fldiv@b+1,c
 42499  0164F4  0E00               	movlw	0
 42500  0164F6  6E15               	movwf	i2___fldiv@b+2,c
 42501  0164F8  0E00               	movlw	0
 42502  0164FA  6E16               	movwf	i2___fldiv@b+3,c
 42503  0164FC  0E00               	movlw	0
 42504  0164FE  6E1F               	movwf	i2___fldiv@sign,c
 42505  016500                     i2l2320:
 42506  016500                     i2l12520:
 42507  016500  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 42508  016504  A02A               	btfss	i2___fldiv@bexp,0,c
 42509  016506  D002               	goto	i2l2321
 42510  016508  8E15               	bsf	i2___fldiv@b+2,7,c
 42511  01650A  D001               	goto	i2l2322
 42512  01650C                     i2l2321:
 42513  01650C  9E15               	bcf	i2___fldiv@b+2,7,c
 42514  01650E                     i2l2322:
 42515  01650E  90D8               	bcf	status,0,c
 42516  016510  302A               	rrcf	i2___fldiv@bexp,w,c
 42517  016512  6E16               	movwf	i2___fldiv@b+3,c
 42518  016514  501F               	movf	i2___fldiv@sign,w,c
 42519  016516  1216               	iorwf	i2___fldiv@b+3,f,c
 42520  016518  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 42521  01651C  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 42522  016520  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 42523  016524  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 42524  016528  0012               	return	
 42525  01652A                     __end_ofi2___fldiv:
 42526                           	opt stack 0
 42527                           tosu	equ	0xFFF
 42528                           tosh	equ	0xFFE
 42529                           tosl	equ	0xFFD
 42530                           pclatu	equ	0xFFB
 42531                           pclath	equ	0xFFA
 42532                           tblptru	equ	0xFF8
 42533                           tblptrh	equ	0xFF7
 42534                           tblptrl	equ	0xFF6
 42535                           tablat	equ	0xFF5
 42536                           prodh	equ	0xFF4
 42537                           prodl	equ	0xFF3
 42538                           intcon	equ	0xFF2
 42539                           indf0	equ	0xFEF
 42540                           postinc0	equ	0xFEE
 42541                           fsr0h	equ	0xFEA
 42542                           fsr0l	equ	0xFE9
 42543                           wreg	equ	0xFE8
 42544                           indf1	equ	0xFE7
 42545                           postdec1	equ	0xFE5
 42546                           plusw1	equ	0xFE3
 42547                           fsr1h	equ	0xFE2
 42548                           fsr1l	equ	0xFE1
 42549                           bsr	equ	0xFE0
 42550                           indf2	equ	0xFDF
 42551                           postinc2	equ	0xFDE
 42552                           postdec2	equ	0xFDD
 42553                           plusw2	equ	0xFDB
 42554                           fsr2h	equ	0xFDA
 42555                           fsr2l	equ	0xFD9
 42556                           status	equ	0xFD8
 42557                           
 42558 ;; *************** function _floor *****************
 42559 ;; Defined at:
 42560 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 42561 ;; Parameters:    Size  Location     Type
 42562 ;;  x               4   22[BANK0 ] unsigned char 
 42563 ;; Auto vars:     Size  Location     Type
 42564 ;;  i               4   26[BANK0 ] unsigned char 
 42565 ;;  expon           2   30[BANK0 ] int 
 42566 ;; Return value:  Size  Location     Type
 42567 ;;                  4   22[BANK0 ] int 
 42568 ;; Registers used:
 42569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42570 ;; Tracked objects:
 42571 ;;		On entry : 0/0
 42572 ;;		On exit  : 0/0
 42573 ;;		Unchanged: 0/0
 42574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42575 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42576 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42578 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42579 ;;Total ram usage:       10 bytes
 42580 ;; Hardware stack levels used:    1
 42581 ;; Hardware stack levels required when called:    1
 42582 ;; This function calls:
 42583 ;;		_frexp
 42584 ;;		i2___fladd
 42585 ;;		i2___flge
 42586 ;;		i2___fltol
 42587 ;;		i2___xxtofl
 42588 ;; This function is called by:
 42589 ;;		_sin
 42590 ;; This function uses a non-reentrant model
 42591 ;;
 42592                           
 42593                           	psect	text131
 42594  017AB6                     __ptext131:
 42595                           	opt stack 0
 42596  017AB6                     _floor:
 42597                           	opt stack 13
 42598                           
 42599                           ;incstack = 0
 42600  017AB6  C076  F001         	movff	floor@x,frexp@value
 42601  017ABA  C077  F002         	movff	floor@x+1,frexp@value+1
 42602  017ABE  C078  F003         	movff	floor@x+2,frexp@value+2
 42603  017AC2  C079  F004         	movff	floor@x+3,frexp@value+3
 42604  017AC6  0E7E               	movlw	low floor@expon
 42605  017AC8  6E05               	movwf	frexp@eptr,c
 42606  017ACA  0E00               	movlw	high floor@expon
 42607  017ACC  6E06               	movwf	frexp@eptr+1,c
 42608  017ACE  EC48  F0C3         	call	_frexp	;wreg free
 42609  017AD2  0100               	movlb	0	; () banked
 42610  017AD4  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 42611  017AD6  D014               	goto	i2l2449
 42612                           
 42613                           ; BSR set to: 0
 42614  017AD8  AF79               	btfss	(floor@x+3)& (0+255),7,b
 42615  017ADA  D009               	goto	i2l2450
 42616                           
 42617                           ; BSR set to: 0
 42618  017ADC  0E00               	movlw	0
 42619  017ADE  6F76               	movwf	?_floor& (0+255),b
 42620  017AE0  0E00               	movlw	0
 42621  017AE2  6F77               	movwf	(?_floor+1)& (0+255),b
 42622  017AE4  0E80               	movlw	128
 42623  017AE6  6F78               	movwf	(?_floor+2)& (0+255),b
 42624  017AE8  0EBF               	movlw	191
 42625  017AEA  6F79               	movwf	(?_floor+3)& (0+255),b
 42626                           
 42627                           ; BSR set to: 0
 42628  017AEC  0012               	return	
 42629  017AEE                     i2l2450:
 42630                           
 42631                           ; BSR set to: 0
 42632                           
 42633                           ; BSR set to: 0
 42634  017AEE  0E00               	movlw	0
 42635  017AF0  6F76               	movwf	?_floor& (0+255),b
 42636  017AF2  0E00               	movlw	0
 42637  017AF4  6F77               	movwf	(?_floor+1)& (0+255),b
 42638  017AF6  0E00               	movlw	0
 42639  017AF8  6F78               	movwf	(?_floor+2)& (0+255),b
 42640  017AFA  0E00               	movlw	0
 42641  017AFC  6F79               	movwf	(?_floor+3)& (0+255),b
 42642                           
 42643                           ; BSR set to: 0
 42644  017AFE  0012               	return	
 42645  017B00                     i2l2449:
 42646                           
 42647                           ; BSR set to: 0
 42648                           
 42649                           ; BSR set to: 0
 42650  017B00  517F               	movf	(floor@expon+1)& (0+255),w,b
 42651  017B02  E104               	bnz	i2u1680_40
 42652  017B04  0E1D               	movlw	29
 42653  017B06  5D7E               	subwf	floor@expon& (0+255),w,b
 42654  017B08  A0D8               	btfss	status,0,c
 42655  017B0A  D009               	goto	i2l2452
 42656  017B0C                     i2u1680_40:
 42657                           
 42658                           ; BSR set to: 0
 42659  017B0C  C076  F076         	movff	floor@x,?_floor
 42660  017B10  C077  F077         	movff	floor@x+1,?_floor+1
 42661  017B14  C078  F078         	movff	floor@x+2,?_floor+2
 42662  017B18  C079  F079         	movff	floor@x+3,?_floor+3
 42663  017B1C  0012               	return	
 42664  017B1E                     i2l2452:
 42665                           
 42666                           ; BSR set to: 0
 42667                           
 42668                           ; BSR set to: 0
 42669  017B1E  C076  F06C         	movff	floor@x,i2___fltol@f1
 42670  017B22  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 42671  017B26  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 42672  017B2A  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 42673  017B2E  EC45  F0BF         	call	i2___fltol	;wreg free
 42674  017B32  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 42675  017B36  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 42676  017B3A  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 42677  017B3E  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 42678  017B42  0E01               	movlw	1
 42679  017B44  EC09  F0B8         	call	i2___xxtofl
 42680  017B48  C005  F07A         	movff	?i2___xxtofl,floor@i
 42681  017B4C  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 42682  017B50  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 42683  017B54  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 42684  017B58  C076  F034         	movff	floor@x,i2___flge@ff1
 42685  017B5C  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 42686  017B60  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 42687  017B64  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 42688  017B68  C07A  F038         	movff	floor@i,i2___flge@ff2
 42689  017B6C  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 42690  017B70  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 42691  017B74  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 42692  017B78  ECCB  F0BC         	call	i2___flge	;wreg free
 42693  017B7C  B0D8               	btfsc	status,0,c
 42694  017B7E  D01B               	goto	i2l2453
 42695  017B80  C07A  F056         	movff	floor@i,i2___fladd@b
 42696  017B84  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 42697  017B88  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 42698  017B8C  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 42699  017B90  0E00               	movlw	0
 42700  017B92  6E5A               	movwf	i2___fladd@a,c
 42701  017B94  0E00               	movlw	0
 42702  017B96  6E5B               	movwf	i2___fladd@a+1,c
 42703  017B98  0E80               	movlw	128
 42704  017B9A  6E5C               	movwf	i2___fladd@a+2,c
 42705  017B9C  0EBF               	movlw	191
 42706  017B9E  6E5D               	movwf	i2___fladd@a+3,c
 42707  017BA0  EC7B  F0A8         	call	i2___fladd	;wreg free
 42708  017BA4  C056  F076         	movff	?i2___fladd,?_floor
 42709  017BA8  C057  F077         	movff	?i2___fladd+1,?_floor+1
 42710  017BAC  C058  F078         	movff	?i2___fladd+2,?_floor+2
 42711  017BB0  C059  F079         	movff	?i2___fladd+3,?_floor+3
 42712  017BB4  0012               	return	
 42713  017BB6                     i2l2453:
 42714  017BB6  C07A  F076         	movff	floor@i,?_floor
 42715  017BBA  C07B  F077         	movff	floor@i+1,?_floor+1
 42716  017BBE  C07C  F078         	movff	floor@i+2,?_floor+2
 42717  017BC2  C07D  F079         	movff	floor@i+3,?_floor+3
 42718  017BC6  0012               	return		;funcret
 42719  017BC8                     __end_of_floor:
 42720                           	opt stack 0
 42721                           tosu	equ	0xFFF
 42722                           tosh	equ	0xFFE
 42723                           tosl	equ	0xFFD
 42724                           pclatu	equ	0xFFB
 42725                           pclath	equ	0xFFA
 42726                           tblptru	equ	0xFF8
 42727                           tblptrh	equ	0xFF7
 42728                           tblptrl	equ	0xFF6
 42729                           tablat	equ	0xFF5
 42730                           prodh	equ	0xFF4
 42731                           prodl	equ	0xFF3
 42732                           intcon	equ	0xFF2
 42733                           indf0	equ	0xFEF
 42734                           postinc0	equ	0xFEE
 42735                           fsr0h	equ	0xFEA
 42736                           fsr0l	equ	0xFE9
 42737                           wreg	equ	0xFE8
 42738                           indf1	equ	0xFE7
 42739                           postdec1	equ	0xFE5
 42740                           plusw1	equ	0xFE3
 42741                           fsr1h	equ	0xFE2
 42742                           fsr1l	equ	0xFE1
 42743                           bsr	equ	0xFE0
 42744                           indf2	equ	0xFDF
 42745                           postinc2	equ	0xFDE
 42746                           postdec2	equ	0xFDD
 42747                           plusw2	equ	0xFDB
 42748                           fsr2h	equ	0xFDA
 42749                           fsr2l	equ	0xFD9
 42750                           status	equ	0xFD8
 42751                           
 42752 ;; *************** function i2___xxtofl *****************
 42753 ;; Defined at:
 42754 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 42755 ;; Parameters:    Size  Location     Type
 42756 ;;  sign            1    wreg     unsigned char 
 42757 ;;  val             4    4[COMRAM] long 
 42758 ;; Auto vars:     Size  Location     Type
 42759 ;;  sign            1   12[COMRAM] unsigned char 
 42760 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 42761 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 42762 ;; Return value:  Size  Location     Type
 42763 ;;                  4    4[COMRAM] unsigned char 
 42764 ;; Registers used:
 42765 ;;		wreg, status,2, status,0
 42766 ;; Tracked objects:
 42767 ;;		On entry : 0/0
 42768 ;;		On exit  : 0/0
 42769 ;;		Unchanged: 0/0
 42770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42772 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42774 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42775 ;;Total ram usage:       14 bytes
 42776 ;; Hardware stack levels used:    1
 42777 ;; This function calls:
 42778 ;;		Nothing
 42779 ;; This function is called by:
 42780 ;;		_ADCPostProcessingCallback
 42781 ;;		_floor
 42782 ;;		i2_printf
 42783 ;; This function uses a non-reentrant model
 42784 ;;
 42785                           
 42786                           	psect	text132
 42787  017012                     __ptext132:
 42788                           	opt stack 0
 42789  017012                     i2___xxtofl:
 42790                           	opt stack 16
 42791                           
 42792                           ;incstack = 0
 42793                           ;i2___xxtofl@sign stored from wreg
 42794  017012  6E0D               	movwf	i2___xxtofl@sign,c
 42795  017014  500D               	movf	i2___xxtofl@sign,w,c
 42796  017016  A4D8               	btfss	status,2,c
 42797  017018  AE08               	btfss	i2___xxtofl@val+3,7,c
 42798  01701A  D01A               	goto	i2l2428
 42799  01701C  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 42800  017020  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 42801  017024  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 42802  017028  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 42803  01702C  1E09               	comf	??i2___xxtofl,f,c
 42804  01702E  1E0A               	comf	??i2___xxtofl+1,f,c
 42805  017030  1E0B               	comf	??i2___xxtofl+2,f,c
 42806  017032  1E0C               	comf	??i2___xxtofl+3,f,c
 42807  017034  2A09               	incf	??i2___xxtofl,f,c
 42808  017036  0E00               	movlw	0
 42809  017038  220A               	addwfc	??i2___xxtofl+1,f,c
 42810  01703A  220B               	addwfc	??i2___xxtofl+2,f,c
 42811  01703C  220C               	addwfc	??i2___xxtofl+3,f,c
 42812  01703E  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 42813  017042  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 42814  017046  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 42815  01704A  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 42816  01704E  D008               	goto	i2l2429
 42817  017050                     i2l2428:
 42818  017050  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 42819  017054  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 42820  017058  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 42821  01705C  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 42822  017060                     i2l2429:
 42823  017060  5005               	movf	i2___xxtofl@val,w,c
 42824  017062  1006               	iorwf	i2___xxtofl@val+1,w,c
 42825  017064  1007               	iorwf	i2___xxtofl@val+2,w,c
 42826  017066  1008               	iorwf	i2___xxtofl@val+3,w,c
 42827  017068  A4D8               	btfss	status,2,c
 42828  01706A  D009               	goto	i2l2430
 42829  01706C  0E00               	movlw	0
 42830  01706E  6E05               	movwf	?i2___xxtofl,c
 42831  017070  0E00               	movlw	0
 42832  017072  6E06               	movwf	?i2___xxtofl+1,c
 42833  017074  0E00               	movlw	0
 42834  017076  6E07               	movwf	?i2___xxtofl+2,c
 42835  017078  0E00               	movlw	0
 42836  01707A  6E08               	movwf	?i2___xxtofl+3,c
 42837  01707C  0012               	return	
 42838  01707E                     i2l2430:
 42839  01707E  0E96               	movlw	150
 42840  017080  6E0E               	movwf	i2___xxtofl@exp,c
 42841  017082  D006               	goto	i2l2432
 42842  017084  2A0E               	incf	i2___xxtofl@exp,f,c
 42843  017086  90D8               	bcf	status,0,c
 42844  017088  3212               	rrcf	i2___xxtofl@arg+3,f,c
 42845  01708A  3211               	rrcf	i2___xxtofl@arg+2,f,c
 42846  01708C  3210               	rrcf	i2___xxtofl@arg+1,f,c
 42847  01708E  320F               	rrcf	i2___xxtofl@arg,f,c
 42848  017090                     i2l2432:
 42849  017090  0E00               	movlw	0
 42850  017092  140F               	andwf	i2___xxtofl@arg,w,c
 42851  017094  6E09               	movwf	??i2___xxtofl& (0+255),c
 42852  017096  0E00               	movlw	0
 42853  017098  1410               	andwf	i2___xxtofl@arg+1,w,c
 42854  01709A  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 42855  01709C  0E00               	movlw	0
 42856  01709E  1411               	andwf	i2___xxtofl@arg+2,w,c
 42857  0170A0  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 42858  0170A2  0EFE               	movlw	254
 42859  0170A4  1412               	andwf	i2___xxtofl@arg+3,w,c
 42860  0170A6  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 42861  0170A8  5009               	movf	??i2___xxtofl,w,c
 42862  0170AA  100A               	iorwf	??i2___xxtofl+1,w,c
 42863  0170AC  100B               	iorwf	??i2___xxtofl+2,w,c
 42864  0170AE  100C               	iorwf	??i2___xxtofl+3,w,c
 42865  0170B0  B4D8               	btfsc	status,2,c
 42866  0170B2  D00D               	goto	i2l2435
 42867  0170B4  D7E7               	goto	i2l2433
 42868  0170B6  2A0E               	incf	i2___xxtofl@exp,f,c
 42869  0170B8  0E01               	movlw	1
 42870  0170BA  260F               	addwf	i2___xxtofl@arg,f,c
 42871  0170BC  0E00               	movlw	0
 42872  0170BE  2210               	addwfc	i2___xxtofl@arg+1,f,c
 42873  0170C0  2211               	addwfc	i2___xxtofl@arg+2,f,c
 42874  0170C2  2212               	addwfc	i2___xxtofl@arg+3,f,c
 42875  0170C4  90D8               	bcf	status,0,c
 42876  0170C6  3212               	rrcf	i2___xxtofl@arg+3,f,c
 42877  0170C8  3211               	rrcf	i2___xxtofl@arg+2,f,c
 42878  0170CA  3210               	rrcf	i2___xxtofl@arg+1,f,c
 42879  0170CC  320F               	rrcf	i2___xxtofl@arg,f,c
 42880  0170CE                     i2l2435:
 42881  0170CE  0E00               	movlw	0
 42882  0170D0  140F               	andwf	i2___xxtofl@arg,w,c
 42883  0170D2  6E09               	movwf	??i2___xxtofl& (0+255),c
 42884  0170D4  0E00               	movlw	0
 42885  0170D6  1410               	andwf	i2___xxtofl@arg+1,w,c
 42886  0170D8  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 42887  0170DA  0E00               	movlw	0
 42888  0170DC  1411               	andwf	i2___xxtofl@arg+2,w,c
 42889  0170DE  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 42890  0170E0  0EFF               	movlw	255
 42891  0170E2  1412               	andwf	i2___xxtofl@arg+3,w,c
 42892  0170E4  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 42893  0170E6  5009               	movf	??i2___xxtofl,w,c
 42894  0170E8  100A               	iorwf	??i2___xxtofl+1,w,c
 42895  0170EA  100B               	iorwf	??i2___xxtofl+2,w,c
 42896  0170EC  100C               	iorwf	??i2___xxtofl+3,w,c
 42897  0170EE  B4D8               	btfsc	status,2,c
 42898  0170F0  D007               	goto	i2l2438
 42899  0170F2  D7E1               	goto	i2l2436
 42900  0170F4  060E               	decf	i2___xxtofl@exp,f,c
 42901  0170F6  90D8               	bcf	status,0,c
 42902  0170F8  360F               	rlcf	i2___xxtofl@arg,f,c
 42903  0170FA  3610               	rlcf	i2___xxtofl@arg+1,f,c
 42904  0170FC  3611               	rlcf	i2___xxtofl@arg+2,f,c
 42905  0170FE  3612               	rlcf	i2___xxtofl@arg+3,f,c
 42906  017100                     i2l2438:
 42907  017100  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 42908  017102  D003               	goto	i2u1588_40
 42909  017104  0E02               	movlw	2
 42910  017106  600E               	cpfslt	i2___xxtofl@exp,c
 42911  017108  D7F5               	goto	i2l2439
 42912  01710A                     i2u1588_40:
 42913  01710A  B00E               	btfsc	i2___xxtofl@exp,0,c
 42914  01710C  D008               	goto	i2l2443
 42915  01710E  0EFF               	movlw	255
 42916  017110  160F               	andwf	i2___xxtofl@arg,f,c
 42917  017112  0EFF               	movlw	255
 42918  017114  1610               	andwf	i2___xxtofl@arg+1,f,c
 42919  017116  0E7F               	movlw	127
 42920  017118  1611               	andwf	i2___xxtofl@arg+2,f,c
 42921  01711A  0EFF               	movlw	255
 42922  01711C  1612               	andwf	i2___xxtofl@arg+3,f,c
 42923  01711E                     i2l2443:
 42924  01711E  90D8               	bcf	status,0,c
 42925  017120  320E               	rrcf	i2___xxtofl@exp,f,c
 42926  017122  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 42927  017126  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 42928  017128  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 42929  01712A  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 42930  01712C  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 42931  017130  6A0B               	clrf	??i2___xxtofl+2,c
 42932  017132  6A0A               	clrf	??i2___xxtofl+1,c
 42933  017134  6A09               	clrf	??i2___xxtofl,c
 42934  017136  5009               	movf	??i2___xxtofl,w,c
 42935  017138  120F               	iorwf	i2___xxtofl@arg,f,c
 42936  01713A  500A               	movf	??i2___xxtofl+1,w,c
 42937  01713C  1210               	iorwf	i2___xxtofl@arg+1,f,c
 42938  01713E  500B               	movf	??i2___xxtofl+2,w,c
 42939  017140  1211               	iorwf	i2___xxtofl@arg+2,f,c
 42940  017142  500C               	movf	??i2___xxtofl+3,w,c
 42941  017144  1212               	iorwf	i2___xxtofl@arg+3,f,c
 42942  017146  500D               	movf	i2___xxtofl@sign,w,c
 42943  017148  A4D8               	btfss	status,2,c
 42944  01714A  AE08               	btfss	i2___xxtofl@val+3,7,c
 42945  01714C  D001               	goto	i2l2444
 42946  01714E  8E12               	bsf	i2___xxtofl@arg+3,7,c
 42947  017150                     i2l2444:
 42948  017150  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 42949  017154  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 42950  017158  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 42951  01715C  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 42952  017160  0012               	return	
 42953  017162                     __end_ofi2___xxtofl:
 42954                           	opt stack 0
 42955                           tosu	equ	0xFFF
 42956                           tosh	equ	0xFFE
 42957                           tosl	equ	0xFFD
 42958                           pclatu	equ	0xFFB
 42959                           pclath	equ	0xFFA
 42960                           tblptru	equ	0xFF8
 42961                           tblptrh	equ	0xFF7
 42962                           tblptrl	equ	0xFF6
 42963                           tablat	equ	0xFF5
 42964                           prodh	equ	0xFF4
 42965                           prodl	equ	0xFF3
 42966                           intcon	equ	0xFF2
 42967                           indf0	equ	0xFEF
 42968                           postinc0	equ	0xFEE
 42969                           fsr0h	equ	0xFEA
 42970                           fsr0l	equ	0xFE9
 42971                           wreg	equ	0xFE8
 42972                           indf1	equ	0xFE7
 42973                           postdec1	equ	0xFE5
 42974                           plusw1	equ	0xFE3
 42975                           fsr1h	equ	0xFE2
 42976                           fsr1l	equ	0xFE1
 42977                           bsr	equ	0xFE0
 42978                           indf2	equ	0xFDF
 42979                           postinc2	equ	0xFDE
 42980                           postdec2	equ	0xFDD
 42981                           plusw2	equ	0xFDB
 42982                           fsr2h	equ	0xFDA
 42983                           fsr2l	equ	0xFD9
 42984                           status	equ	0xFD8
 42985                           
 42986 ;; *************** function i2___fltol *****************
 42987 ;; Defined at:
 42988 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 42989 ;; Parameters:    Size  Location     Type
 42990 ;;  f1              4   12[BANK0 ] unsigned char 
 42991 ;; Auto vars:     Size  Location     Type
 42992 ;;  __fltol         1   21[BANK0 ] unsigned char 
 42993 ;;  __fltol         1   20[BANK0 ] unsigned char 
 42994 ;; Return value:  Size  Location     Type
 42995 ;;                  4   12[BANK0 ] long 
 42996 ;; Registers used:
 42997 ;;		wreg, status,2, status,0
 42998 ;; Tracked objects:
 42999 ;;		On entry : 0/0
 43000 ;;		On exit  : 0/0
 43001 ;;		Unchanged: 0/0
 43002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43005 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43006 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43007 ;;Total ram usage:       10 bytes
 43008 ;; Hardware stack levels used:    1
 43009 ;; This function calls:
 43010 ;;		Nothing
 43011 ;; This function is called by:
 43012 ;;		_ADCPostProcessingCallback
 43013 ;;		_floor
 43014 ;;		i2_printf
 43015 ;; This function uses a non-reentrant model
 43016 ;;
 43017                           
 43018                           	psect	text133
 43019  017E8A                     __ptext133:
 43020                           	opt stack 0
 43021  017E8A                     i2___fltol:
 43022                           	opt stack 16
 43023                           
 43024                           ;incstack = 0
 43025  017E8A  0100               	movlb	0	; () banked
 43026  017E8C  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 43027  017E8E  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 43028  017E90  6F75               	movwf	i2___fltol@exp1& (0+255),b
 43029  017E92  5175               	movf	i2___fltol@exp1& (0+255),w,b
 43030  017E94  A4D8               	btfss	status,2,c
 43031  017E96  D009               	goto	i2l1995
 43032                           
 43033                           ; BSR set to: 0
 43034  017E98  0E00               	movlw	0
 43035  017E9A  6F6C               	movwf	?i2___fltol& (0+255),b
 43036  017E9C  0E00               	movlw	0
 43037  017E9E  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 43038  017EA0  0E00               	movlw	0
 43039  017EA2  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 43040  017EA4  0E00               	movlw	0
 43041  017EA6  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 43042                           
 43043                           ; BSR set to: 0
 43044  017EA8  0012               	return	
 43045  017EAA                     i2l1995:
 43046                           
 43047                           ; BSR set to: 0
 43048                           
 43049                           ; BSR set to: 0
 43050  017EAA  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 43051  017EAE  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 43052  017EB2  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 43053  017EB6  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 43054  017EBA  0E20               	movlw	32
 43055  017EBC  D005               	goto	i2u1576_40
 43056  017EBE                     i2u1576_45:
 43057  017EBE  90D8               	bcf	status,0,c
 43058  017EC0  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 43059  017EC2  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 43060  017EC4  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 43061  017EC6  3370               	rrcf	??i2___fltol& (0+255),f,b
 43062  017EC8                     i2u1576_40:
 43063  017EC8  2EE8               	decfsz	wreg,f,c
 43064  017ECA  D7F9               	goto	i2u1576_45
 43065  017ECC  5170               	movf	??i2___fltol& (0+255),w,b
 43066  017ECE  6F74               	movwf	i2___fltol@sign1& (0+255),b
 43067                           
 43068                           ; BSR set to: 0
 43069  017ED0  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 43070                           
 43071                           ; BSR set to: 0
 43072  017ED2  0EFF               	movlw	255
 43073  017ED4  176C               	andwf	i2___fltol@f1& (0+255),f,b
 43074  017ED6  0EFF               	movlw	255
 43075  017ED8  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 43076  017EDA  0EFF               	movlw	255
 43077  017EDC  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 43078  017EDE  0E00               	movlw	0
 43079  017EE0  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 43080                           
 43081                           ; BSR set to: 0
 43082  017EE2  0E96               	movlw	150
 43083  017EE4  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 43084                           
 43085                           ; BSR set to: 0
 43086  017EE6  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 43087  017EE8  D016               	goto	i2l1997
 43088                           
 43089                           ; BSR set to: 0
 43090  017EEA  5175               	movf	i2___fltol@exp1& (0+255),w,b
 43091  017EEC  0A80               	xorlw	128
 43092  017EEE  0F97               	addlw	151
 43093  017EF0  B0D8               	btfsc	status,0,c
 43094  017EF2  D009               	goto	i2l1998
 43095                           
 43096                           ; BSR set to: 0
 43097  017EF4  0E00               	movlw	0
 43098  017EF6  6F6C               	movwf	?i2___fltol& (0+255),b
 43099  017EF8  0E00               	movlw	0
 43100  017EFA  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 43101  017EFC  0E00               	movlw	0
 43102  017EFE  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 43103  017F00  0E00               	movlw	0
 43104  017F02  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 43105                           
 43106                           ; BSR set to: 0
 43107  017F04  0012               	return	
 43108  017F06                     i2l1998:
 43109                           
 43110                           ; BSR set to: 0
 43111                           
 43112                           ; BSR set to: 0
 43113                           
 43114                           ; BSR set to: 0
 43115  017F06  90D8               	bcf	status,0,c
 43116  017F08  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 43117  017F0A  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 43118  017F0C  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 43119  017F0E  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 43120                           
 43121                           ; BSR set to: 0
 43122  017F10  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 43123  017F12  D7F9               	goto	i2l1998
 43124                           
 43125                           ; BSR set to: 0
 43126  017F14  D015               	goto	i2u1580_40
 43127  017F16                     i2l1997:
 43128                           
 43129                           ; BSR set to: 0
 43130                           
 43131                           ; BSR set to: 0
 43132  017F16  0E1F               	movlw	31
 43133  017F18  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 43134  017F1A  D00F               	goto	i2l2003
 43135                           
 43136                           ; BSR set to: 0
 43137  017F1C  0E00               	movlw	0
 43138  017F1E  6F6C               	movwf	?i2___fltol& (0+255),b
 43139  017F20  0E00               	movlw	0
 43140  017F22  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 43141  017F24  0E00               	movlw	0
 43142  017F26  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 43143  017F28  0E00               	movlw	0
 43144  017F2A  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 43145                           
 43146                           ; BSR set to: 0
 43147  017F2C  0012               	return	
 43148  017F2E                     
 43149                           ; BSR set to: 0
 43150                           
 43151                           ; BSR set to: 0
 43152  017F2E  90D8               	bcf	status,0,c
 43153  017F30  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 43154  017F32  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 43155  017F34  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 43156  017F36  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 43157  017F38  0775               	decf	i2___fltol@exp1& (0+255),f,b
 43158  017F3A                     i2l2003:
 43159                           
 43160                           ; BSR set to: 0
 43161                           
 43162                           ; BSR set to: 0
 43163  017F3A  5175               	movf	i2___fltol@exp1& (0+255),w,b
 43164  017F3C  A4D8               	btfss	status,2,c
 43165  017F3E  D7F7               	goto	i2l2004
 43166  017F40                     i2u1580_40:
 43167                           
 43168                           ; BSR set to: 0
 43169                           
 43170                           ; BSR set to: 0
 43171                           
 43172                           ; BSR set to: 0
 43173  017F40  5174               	movf	i2___fltol@sign1& (0+255),w,b
 43174  017F42  B4D8               	btfsc	status,2,c
 43175  017F44  D008               	goto	i2l2006
 43176                           
 43177                           ; BSR set to: 0
 43178  017F46  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 43179  017F48  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 43180  017F4A  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 43181  017F4C  6D6C               	negf	i2___fltol@f1& (0+255),b
 43182  017F4E  0E00               	movlw	0
 43183  017F50  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 43184  017F52  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 43185  017F54  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 43186  017F56                     i2l2006:
 43187                           
 43188                           ; BSR set to: 0
 43189                           
 43190                           ; BSR set to: 0
 43191  017F56  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 43192  017F5A  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 43193  017F5E  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 43194  017F62  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 43195  017F66  0012               	return	
 43196  017F68                     __end_ofi2___fltol:
 43197                           	opt stack 0
 43198                           tosu	equ	0xFFF
 43199                           tosh	equ	0xFFE
 43200                           tosl	equ	0xFFD
 43201                           pclatu	equ	0xFFB
 43202                           pclath	equ	0xFFA
 43203                           tblptru	equ	0xFF8
 43204                           tblptrh	equ	0xFF7
 43205                           tblptrl	equ	0xFF6
 43206                           tablat	equ	0xFF5
 43207                           prodh	equ	0xFF4
 43208                           prodl	equ	0xFF3
 43209                           intcon	equ	0xFF2
 43210                           indf0	equ	0xFEF
 43211                           postinc0	equ	0xFEE
 43212                           fsr0h	equ	0xFEA
 43213                           fsr0l	equ	0xFE9
 43214                           wreg	equ	0xFE8
 43215                           indf1	equ	0xFE7
 43216                           postdec1	equ	0xFE5
 43217                           plusw1	equ	0xFE3
 43218                           fsr1h	equ	0xFE2
 43219                           fsr1l	equ	0xFE1
 43220                           bsr	equ	0xFE0
 43221                           indf2	equ	0xFDF
 43222                           postinc2	equ	0xFDE
 43223                           postdec2	equ	0xFDD
 43224                           plusw2	equ	0xFDB
 43225                           fsr2h	equ	0xFDA
 43226                           fsr2l	equ	0xFD9
 43227                           status	equ	0xFD8
 43228                           
 43229 ;; *************** function i2___flge *****************
 43230 ;; Defined at:
 43231 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 43232 ;; Parameters:    Size  Location     Type
 43233 ;;  ff1             4   51[COMRAM] long 
 43234 ;;  ff2             4   55[COMRAM] long 
 43235 ;; Auto vars:     Size  Location     Type
 43236 ;;		None
 43237 ;; Return value:  Size  Location     Type
 43238 ;;		None               void
 43239 ;; Registers used:
 43240 ;;		wreg, status,2, status,0
 43241 ;; Tracked objects:
 43242 ;;		On entry : 0/0
 43243 ;;		On exit  : 0/0
 43244 ;;		Unchanged: 0/0
 43245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43246 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43249 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43250 ;;Total ram usage:       12 bytes
 43251 ;; Hardware stack levels used:    1
 43252 ;; This function calls:
 43253 ;;		Nothing
 43254 ;; This function is called by:
 43255 ;;		_ADCPostProcessingCallback
 43256 ;;		_asin
 43257 ;;		_atan
 43258 ;;		_sin
 43259 ;;		_floor
 43260 ;;		i2_printf
 43261 ;; This function uses a non-reentrant model
 43262 ;;
 43263                           
 43264                           	psect	text134
 43265  017996                     __ptext134:
 43266                           	opt stack 0
 43267  017996                     i2___flge:
 43268                           	opt stack 16
 43269                           
 43270                           ; BSR set to: 0
 43271                           ;incstack = 0
 43272  017996  0E00               	movlw	0
 43273  017998  1434               	andwf	i2___flge@ff1,w,c
 43274  01799A  6E3C               	movwf	??i2___flge& (0+255),c
 43275  01799C  0E00               	movlw	0
 43276  01799E  1435               	andwf	i2___flge@ff1+1,w,c
 43277  0179A0  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 43278  0179A2  0E80               	movlw	128
 43279  0179A4  1436               	andwf	i2___flge@ff1+2,w,c
 43280  0179A6  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 43281  0179A8  0E7F               	movlw	127
 43282  0179AA  1437               	andwf	i2___flge@ff1+3,w,c
 43283  0179AC  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 43284  0179AE  503C               	movf	??i2___flge,w,c
 43285  0179B0  103D               	iorwf	??i2___flge+1,w,c
 43286  0179B2  103E               	iorwf	??i2___flge+2,w,c
 43287  0179B4  103F               	iorwf	??i2___flge+3,w,c
 43288  0179B6  A4D8               	btfss	status,2,c
 43289  0179B8  D008               	goto	i2l1965
 43290  0179BA  0E00               	movlw	0
 43291  0179BC  6E34               	movwf	i2___flge@ff1,c
 43292  0179BE  0E00               	movlw	0
 43293  0179C0  6E35               	movwf	i2___flge@ff1+1,c
 43294  0179C2  0E00               	movlw	0
 43295  0179C4  6E36               	movwf	i2___flge@ff1+2,c
 43296  0179C6  0E00               	movlw	0
 43297  0179C8  6E37               	movwf	i2___flge@ff1+3,c
 43298  0179CA                     i2l1965:
 43299  0179CA  0E00               	movlw	0
 43300  0179CC  1438               	andwf	i2___flge@ff2,w,c
 43301  0179CE  6E3C               	movwf	??i2___flge& (0+255),c
 43302  0179D0  0E00               	movlw	0
 43303  0179D2  1439               	andwf	i2___flge@ff2+1,w,c
 43304  0179D4  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 43305  0179D6  0E80               	movlw	128
 43306  0179D8  143A               	andwf	i2___flge@ff2+2,w,c
 43307  0179DA  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 43308  0179DC  0E7F               	movlw	127
 43309  0179DE  143B               	andwf	i2___flge@ff2+3,w,c
 43310  0179E0  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 43311  0179E2  503C               	movf	??i2___flge,w,c
 43312  0179E4  103D               	iorwf	??i2___flge+1,w,c
 43313  0179E6  103E               	iorwf	??i2___flge+2,w,c
 43314  0179E8  103F               	iorwf	??i2___flge+3,w,c
 43315  0179EA  A4D8               	btfss	status,2,c
 43316  0179EC  D008               	goto	i2l1966
 43317  0179EE  0E00               	movlw	0
 43318  0179F0  6E38               	movwf	i2___flge@ff2,c
 43319  0179F2  0E00               	movlw	0
 43320  0179F4  6E39               	movwf	i2___flge@ff2+1,c
 43321  0179F6  0E00               	movlw	0
 43322  0179F8  6E3A               	movwf	i2___flge@ff2+2,c
 43323  0179FA  0E00               	movlw	0
 43324  0179FC  6E3B               	movwf	i2___flge@ff2+3,c
 43325  0179FE                     i2l1966:
 43326  0179FE  AE37               	btfss	i2___flge@ff1+3,7,c
 43327  017A00  D01D               	goto	i2l1967
 43328  017A02  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 43329  017A06  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 43330  017A0A  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 43331  017A0E  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 43332  017A12  1E3C               	comf	??i2___flge,f,c
 43333  017A14  1E3D               	comf	??i2___flge+1,f,c
 43334  017A16  1E3E               	comf	??i2___flge+2,f,c
 43335  017A18  1E3F               	comf	??i2___flge+3,f,c
 43336  017A1A  2A3C               	incf	??i2___flge,f,c
 43337  017A1C  0E00               	movlw	0
 43338  017A1E  223D               	addwfc	??i2___flge+1,f,c
 43339  017A20  223E               	addwfc	??i2___flge+2,f,c
 43340  017A22  223F               	addwfc	??i2___flge+3,f,c
 43341  017A24  0E00               	movlw	0
 43342  017A26  243C               	addwf	??i2___flge,w,c
 43343  017A28  6E34               	movwf	i2___flge@ff1,c
 43344  017A2A  0E00               	movlw	0
 43345  017A2C  203D               	addwfc	??i2___flge+1,w,c
 43346  017A2E  6E35               	movwf	i2___flge@ff1+1,c
 43347  017A30  0E00               	movlw	0
 43348  017A32  203E               	addwfc	??i2___flge+2,w,c
 43349  017A34  6E36               	movwf	i2___flge@ff1+2,c
 43350  017A36  0E80               	movlw	128
 43351  017A38  203F               	addwfc	??i2___flge+3,w,c
 43352  017A3A  6E37               	movwf	i2___flge@ff1+3,c
 43353  017A3C                     i2l1967:
 43354  017A3C  AE3B               	btfss	i2___flge@ff2+3,7,c
 43355  017A3E  D01D               	goto	i2l1968
 43356  017A40  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 43357  017A44  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 43358  017A48  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 43359  017A4C  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 43360  017A50  1E3C               	comf	??i2___flge,f,c
 43361  017A52  1E3D               	comf	??i2___flge+1,f,c
 43362  017A54  1E3E               	comf	??i2___flge+2,f,c
 43363  017A56  1E3F               	comf	??i2___flge+3,f,c
 43364  017A58  2A3C               	incf	??i2___flge,f,c
 43365  017A5A  0E00               	movlw	0
 43366  017A5C  223D               	addwfc	??i2___flge+1,f,c
 43367  017A5E  223E               	addwfc	??i2___flge+2,f,c
 43368  017A60  223F               	addwfc	??i2___flge+3,f,c
 43369  017A62  0E00               	movlw	0
 43370  017A64  243C               	addwf	??i2___flge,w,c
 43371  017A66  6E38               	movwf	i2___flge@ff2,c
 43372  017A68  0E00               	movlw	0
 43373  017A6A  203D               	addwfc	??i2___flge+1,w,c
 43374  017A6C  6E39               	movwf	i2___flge@ff2+1,c
 43375  017A6E  0E00               	movlw	0
 43376  017A70  203E               	addwfc	??i2___flge+2,w,c
 43377  017A72  6E3A               	movwf	i2___flge@ff2+2,c
 43378  017A74  0E80               	movlw	128
 43379  017A76  203F               	addwfc	??i2___flge+3,w,c
 43380  017A78  6E3B               	movwf	i2___flge@ff2+3,c
 43381  017A7A                     i2l1968:
 43382  017A7A  0E00               	movlw	0
 43383  017A7C  1A34               	xorwf	i2___flge@ff1,f,c
 43384  017A7E  0E00               	movlw	0
 43385  017A80  1A35               	xorwf	i2___flge@ff1+1,f,c
 43386  017A82  0E00               	movlw	0
 43387  017A84  1A36               	xorwf	i2___flge@ff1+2,f,c
 43388  017A86  0E80               	movlw	128
 43389  017A88  1A37               	xorwf	i2___flge@ff1+3,f,c
 43390  017A8A  0E00               	movlw	0
 43391  017A8C  1A38               	xorwf	i2___flge@ff2,f,c
 43392  017A8E  0E00               	movlw	0
 43393  017A90  1A39               	xorwf	i2___flge@ff2+1,f,c
 43394  017A92  0E00               	movlw	0
 43395  017A94  1A3A               	xorwf	i2___flge@ff2+2,f,c
 43396  017A96  0E80               	movlw	128
 43397  017A98  1A3B               	xorwf	i2___flge@ff2+3,f,c
 43398  017A9A  5038               	movf	i2___flge@ff2,w,c
 43399  017A9C  5C34               	subwf	i2___flge@ff1,w,c
 43400  017A9E  5039               	movf	i2___flge@ff2+1,w,c
 43401  017AA0  5835               	subwfb	i2___flge@ff1+1,w,c
 43402  017AA2  503A               	movf	i2___flge@ff2+2,w,c
 43403  017AA4  5836               	subwfb	i2___flge@ff1+2,w,c
 43404  017AA6  503B               	movf	i2___flge@ff2+3,w,c
 43405  017AA8  5837               	subwfb	i2___flge@ff1+3,w,c
 43406  017AAA  B0D8               	btfsc	status,0,c
 43407  017AAC  D002               	goto	i2l11592
 43408  017AAE  90D8               	bcf	status,0,c
 43409  017AB0  0012               	return	
 43410  017AB2                     i2l11592:
 43411  017AB2  80D8               	bsf	status,0,c
 43412  017AB4  0012               	return	
 43413  017AB6                     __end_ofi2___flge:
 43414                           	opt stack 0
 43415                           tosu	equ	0xFFF
 43416                           tosh	equ	0xFFE
 43417                           tosl	equ	0xFFD
 43418                           pclatu	equ	0xFFB
 43419                           pclath	equ	0xFFA
 43420                           tblptru	equ	0xFF8
 43421                           tblptrh	equ	0xFF7
 43422                           tblptrl	equ	0xFF6
 43423                           tablat	equ	0xFF5
 43424                           prodh	equ	0xFF4
 43425                           prodl	equ	0xFF3
 43426                           intcon	equ	0xFF2
 43427                           indf0	equ	0xFEF
 43428                           postinc0	equ	0xFEE
 43429                           fsr0h	equ	0xFEA
 43430                           fsr0l	equ	0xFE9
 43431                           wreg	equ	0xFE8
 43432                           indf1	equ	0xFE7
 43433                           postdec1	equ	0xFE5
 43434                           plusw1	equ	0xFE3
 43435                           fsr1h	equ	0xFE2
 43436                           fsr1l	equ	0xFE1
 43437                           bsr	equ	0xFE0
 43438                           indf2	equ	0xFDF
 43439                           postinc2	equ	0xFDE
 43440                           postdec2	equ	0xFDD
 43441                           plusw2	equ	0xFDB
 43442                           fsr2h	equ	0xFDA
 43443                           fsr2l	equ	0xFD9
 43444                           status	equ	0xFD8
 43445                           
 43446 ;; *************** function _frexp *****************
 43447 ;; Defined at:
 43448 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 43449 ;; Parameters:    Size  Location     Type
 43450 ;;  value           4    0[COMRAM] long 
 43451 ;;  eptr            2    4[COMRAM] PTR int 
 43452 ;;		 -> floor@expon(2), 
 43453 ;; Auto vars:     Size  Location     Type
 43454 ;;		None
 43455 ;; Return value:  Size  Location     Type
 43456 ;;                  4    0[COMRAM] PTR int 
 43457 ;; Registers used:
 43458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43459 ;; Tracked objects:
 43460 ;;		On entry : 0/0
 43461 ;;		On exit  : 0/0
 43462 ;;		Unchanged: 0/0
 43463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43464 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43467 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43468 ;;Total ram usage:        8 bytes
 43469 ;; Hardware stack levels used:    1
 43470 ;; This function calls:
 43471 ;;		Nothing
 43472 ;; This function is called by:
 43473 ;;		_floor
 43474 ;; This function uses a non-reentrant model
 43475 ;;
 43476                           
 43477                           	psect	text135
 43478  018690                     __ptext135:
 43479                           	opt stack 0
 43480  018690                     _frexp:
 43481                           	opt stack 13
 43482                           
 43483                           ;incstack = 0
 43484  018690  5001               	movf	frexp@value,w,c
 43485  018692  1002               	iorwf	frexp@value+1,w,c
 43486  018694  1003               	iorwf	frexp@value+2,w,c
 43487  018696  1004               	iorwf	frexp@value+3,w,c
 43488  018698  A4D8               	btfss	status,2,c
 43489  01869A  D009               	goto	i2l2458
 43490  01869C  C005  FFD9         	movff	frexp@eptr,fsr2l
 43491  0186A0  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 43492  0186A4  0E00               	movlw	0
 43493  0186A6  6EDE               	movwf	postinc2,c
 43494  0186A8  0E00               	movlw	0
 43495  0186AA  6EDD               	movwf	postdec2,c
 43496                           
 43497                           ;	Return value of _frexp is never used
 43498  0186AC  0012               	return	
 43499  0186AE                     i2l2458:
 43500  0186AE  5004               	movf	frexp@value+3,w,c
 43501  0186B0  0B7F               	andlw	127
 43502  0186B2  6E07               	movwf	??_frexp& (0+255),c
 43503  0186B4  6A08               	clrf	(??_frexp+1)& (0+255),c
 43504  0186B6  90D8               	bcf	status,0,c
 43505  0186B8  3607               	rlcf	??_frexp,f,c
 43506  0186BA  3608               	rlcf	??_frexp+1,f,c
 43507  0186BC  C005  FFD9         	movff	frexp@eptr,fsr2l
 43508  0186C0  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 43509  0186C4  C007  FFDE         	movff	??_frexp,postinc2
 43510  0186C8  C008  FFDD         	movff	??_frexp+1,postdec2
 43511  0186CC  AE03               	btfss	frexp@value+2,7,c
 43512  0186CE  D003               	goto	i2u1574_40
 43513  0186D0  6A07               	clrf	??_frexp& (0+255),c
 43514  0186D2  2A07               	incf	??_frexp& (0+255),f,c
 43515  0186D4  D001               	goto	i2u1574_48
 43516  0186D6                     i2u1574_40:
 43517  0186D6  6A07               	clrf	??_frexp& (0+255),c
 43518  0186D8                     i2u1574_48:
 43519  0186D8  5007               	movf	??_frexp,w,c
 43520  0186DA  C005  FFD9         	movff	frexp@eptr,fsr2l
 43521  0186DE  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 43522  0186E2  12DE               	iorwf	postinc2,f,c
 43523  0186E4  0E00               	movlw	0
 43524  0186E6  12DD               	iorwf	postdec2,f,c
 43525  0186E8  C005  FFD9         	movff	frexp@eptr,fsr2l
 43526  0186EC  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 43527  0186F0  0E82               	movlw	130
 43528  0186F2  26DE               	addwf	postinc2,f,c
 43529  0186F4  0EFF               	movlw	255
 43530  0186F6  22DD               	addwfc	postdec2,f,c
 43531  0186F8  8004               	bsf	frexp@value+3,0,c
 43532  0186FA  8204               	bsf	frexp@value+3,1,c
 43533  0186FC  8404               	bsf	frexp@value+3,2,c
 43534  0186FE  8604               	bsf	frexp@value+3,3,c
 43535  018700  8804               	bsf	frexp@value+3,4,c
 43536  018702  8A04               	bsf	frexp@value+3,5,c
 43537  018704  9C04               	bcf	frexp@value+3,6,c
 43538  018706  9E03               	bcf	frexp@value+2,7,c
 43539  018708  0012               	return	
 43540  01870A                     __end_of_frexp:
 43541                           	opt stack 0
 43542                           tosu	equ	0xFFF
 43543                           tosh	equ	0xFFE
 43544                           tosl	equ	0xFFD
 43545                           pclatu	equ	0xFFB
 43546                           pclath	equ	0xFFA
 43547                           tblptru	equ	0xFF8
 43548                           tblptrh	equ	0xFF7
 43549                           tblptrl	equ	0xFF6
 43550                           tablat	equ	0xFF5
 43551                           prodh	equ	0xFF4
 43552                           prodl	equ	0xFF3
 43553                           intcon	equ	0xFF2
 43554                           indf0	equ	0xFEF
 43555                           postinc0	equ	0xFEE
 43556                           fsr0h	equ	0xFEA
 43557                           fsr0l	equ	0xFE9
 43558                           wreg	equ	0xFE8
 43559                           indf1	equ	0xFE7
 43560                           postdec1	equ	0xFE5
 43561                           plusw1	equ	0xFE3
 43562                           fsr1h	equ	0xFE2
 43563                           fsr1l	equ	0xFE1
 43564                           bsr	equ	0xFE0
 43565                           indf2	equ	0xFDF
 43566                           postinc2	equ	0xFDE
 43567                           postdec2	equ	0xFDD
 43568                           plusw2	equ	0xFDB
 43569                           fsr2h	equ	0xFDA
 43570                           fsr2l	equ	0xFD9
 43571                           status	equ	0xFD8
 43572                           
 43573 ;; *************** function _eval_poly *****************
 43574 ;; Defined at:
 43575 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 43576 ;; Parameters:    Size  Location     Type
 43577 ;;  x               4   12[BANK0 ] PTR int 
 43578 ;;  d               2   16[BANK0 ] PTR const 
 43579 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 43580 ;;  n               2   18[BANK0 ] int 
 43581 ;; Auto vars:     Size  Location     Type
 43582 ;;  res             4   24[BANK0 ] int 
 43583 ;; Return value:  Size  Location     Type
 43584 ;;                  4   12[BANK0 ] int 
 43585 ;; Registers used:
 43586 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43587 ;; Tracked objects:
 43588 ;;		On entry : 0/0
 43589 ;;		On exit  : 0/0
 43590 ;;		Unchanged: 0/0
 43591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43592 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43593 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43594 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43595 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43596 ;;Total ram usage:       16 bytes
 43597 ;; Hardware stack levels used:    1
 43598 ;; Hardware stack levels required when called:    1
 43599 ;; This function calls:
 43600 ;;		i2___fladd
 43601 ;;		i2___flmul
 43602 ;; This function is called by:
 43603 ;;		_atan
 43604 ;;		_sin
 43605 ;; This function uses a non-reentrant model
 43606 ;;
 43607                           
 43608                           	psect	text136
 43609  017BC8                     __ptext136:
 43610                           	opt stack 0
 43611  017BC8                     _eval_poly:
 43612                           	opt stack 13
 43613                           
 43614                           ;incstack = 0
 43615  017BC8  C072  F074         	movff	eval_poly@n,??_eval_poly
 43616  017BCC  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 43617  017BD0  0100               	movlb	0	; () banked
 43618  017BD2  90D8               	bcf	status,0,c
 43619  017BD4  3774               	rlcf	??_eval_poly& (0+255),f,b
 43620  017BD6  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 43621  017BD8  90D8               	bcf	status,0,c
 43622  017BDA  3774               	rlcf	??_eval_poly& (0+255),f,b
 43623  017BDC  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 43624  017BDE  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 43625  017BE2  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 43626  017BE6  5174               	movf	??_eval_poly& (0+255),w,b
 43627  017BE8  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 43628  017BEA  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 43629  017BEC  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 43630  017BEE  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 43631  017BF2  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 43632  017BF6                     	if	0	;tblptru may be non-zero
 43633  017BF6                     	endif
 43634  017BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 43635  017BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 43636  017BF8  6EF8               	movwf	tblptru,c
 43637  017BFA                     	endif
 43638  017BFA  0009               	tblrd		*+
 43639  017BFC  CFF5 F078          	movff	tablat,eval_poly@res
 43640  017C00  0009               	tblrd		*+
 43641  017C02  CFF5 F079          	movff	tablat,eval_poly@res+1
 43642  017C06  0009               	tblrd		*+
 43643  017C08  CFF5 F07A          	movff	tablat,eval_poly@res+2
 43644  017C0C  000A               	tblrd		*-
 43645  017C0E  CFF5 F07B          	movff	tablat,eval_poly@res+3
 43646  017C12  D04C               	goto	i2l1938
 43647  017C14                     
 43648                           ; BSR set to: 0
 43649                           
 43650                           ; BSR set to: 0
 43651  017C14  C078  F034         	movff	eval_poly@res,i2___flmul@a
 43652  017C18  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 43653  017C1C  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 43654  017C20  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 43655  017C24  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 43656  017C28  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 43657  017C2C  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 43658  017C30  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 43659  017C34  EC34  F0A5         	call	i2___flmul	;wreg free
 43660  017C38  C030  F056         	movff	?i2___flmul,i2___fladd@b
 43661  017C3C  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 43662  017C40  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 43663  017C44  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 43664  017C48  0100               	movlb	0	; () banked
 43665  017C4A  0772               	decf	eval_poly@n& (0+255),f,b
 43666  017C4C  A0D8               	btfss	status,0,c
 43667  017C4E  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 43668  017C50  C072  F074         	movff	eval_poly@n,??_eval_poly
 43669  017C54  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 43670  017C58  90D8               	bcf	status,0,c
 43671  017C5A  3774               	rlcf	??_eval_poly& (0+255),f,b
 43672  017C5C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 43673  017C5E  90D8               	bcf	status,0,c
 43674  017C60  3774               	rlcf	??_eval_poly& (0+255),f,b
 43675  017C62  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 43676  017C64  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 43677  017C68  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 43678  017C6C  5174               	movf	??_eval_poly& (0+255),w,b
 43679  017C6E  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 43680  017C70  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 43681  017C72  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 43682  017C74  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 43683  017C78  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 43684  017C7C                     	if	0	;tblptru may be non-zero
 43685  017C7C                     	endif
 43686  017C7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 43687  017C7C  0E00               	movlw	low (__mediumconst shr (0+16))
 43688  017C7E  6EF8               	movwf	tblptru,c
 43689  017C80                     	endif
 43690  017C80  0009               	tblrd		*+
 43691  017C82  CFF5 F05A          	movff	tablat,i2___fladd@a
 43692  017C86  0009               	tblrd		*+
 43693  017C88  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 43694  017C8C  0009               	tblrd		*+
 43695  017C8E  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 43696  017C92  000A               	tblrd		*-
 43697  017C94  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 43698  017C98  EC7B  F0A8         	call	i2___fladd	;wreg free
 43699  017C9C  C056  F078         	movff	?i2___fladd,eval_poly@res
 43700  017CA0  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 43701  017CA4  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 43702  017CA8  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 43703  017CAC                     i2l1938:
 43704  017CAC  0100               	movlb	0	; () banked
 43705  017CAE  5172               	movf	eval_poly@n& (0+255),w,b
 43706  017CB0  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 43707  017CB2  A4D8               	btfss	status,2,c
 43708  017CB4  D7AF               	goto	i2l1939
 43709                           
 43710                           ; BSR set to: 0
 43711  017CB6  C078  F06C         	movff	eval_poly@res,?_eval_poly
 43712  017CBA  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 43713  017CBE  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 43714  017CC2  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 43715                           
 43716                           ; BSR set to: 0
 43717  017CC6  0012               	return		;funcret
 43718  017CC8                     __end_of_eval_poly:
 43719                           	opt stack 0
 43720                           tosu	equ	0xFFF
 43721                           tosh	equ	0xFFE
 43722                           tosl	equ	0xFFD
 43723                           pclatu	equ	0xFFB
 43724                           pclath	equ	0xFFA
 43725                           tblptru	equ	0xFF8
 43726                           tblptrh	equ	0xFF7
 43727                           tblptrl	equ	0xFF6
 43728                           tablat	equ	0xFF5
 43729                           prodh	equ	0xFF4
 43730                           prodl	equ	0xFF3
 43731                           intcon	equ	0xFF2
 43732                           indf0	equ	0xFEF
 43733                           postinc0	equ	0xFEE
 43734                           fsr0h	equ	0xFEA
 43735                           fsr0l	equ	0xFE9
 43736                           wreg	equ	0xFE8
 43737                           indf1	equ	0xFE7
 43738                           postdec1	equ	0xFE5
 43739                           plusw1	equ	0xFE3
 43740                           fsr1h	equ	0xFE2
 43741                           fsr1l	equ	0xFE1
 43742                           bsr	equ	0xFE0
 43743                           indf2	equ	0xFDF
 43744                           postinc2	equ	0xFDE
 43745                           postdec2	equ	0xFDD
 43746                           plusw2	equ	0xFDB
 43747                           fsr2h	equ	0xFDA
 43748                           fsr2l	equ	0xFD9
 43749                           status	equ	0xFD8
 43750                           
 43751 ;; *************** function i2___flmul *****************
 43752 ;; Defined at:
 43753 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 43754 ;; Parameters:    Size  Location     Type
 43755 ;;  b               4   47[COMRAM] int 
 43756 ;;  a               4   51[COMRAM] int 
 43757 ;; Auto vars:     Size  Location     Type
 43758 ;;  __flmul         4   66[COMRAM] struct .
 43759 ;;  __flmul         4   61[COMRAM] unsigned long 
 43760 ;;  __flmul         2   70[COMRAM] struct .
 43761 ;;  __flmul         1   65[COMRAM] unsigned char 
 43762 ;;  __flmul         1   60[COMRAM] unsigned char 
 43763 ;;  __flmul         1   59[COMRAM] unsigned char 
 43764 ;; Return value:  Size  Location     Type
 43765 ;;                  4   47[COMRAM] unsigned char 
 43766 ;; Registers used:
 43767 ;;		wreg, status,2, status,0, prodl, prodh
 43768 ;; Tracked objects:
 43769 ;;		On entry : 0/0
 43770 ;;		On exit  : 0/0
 43771 ;;		Unchanged: 0/0
 43772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43773 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43774 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43775 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43776 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43777 ;;Total ram usage:       25 bytes
 43778 ;; Hardware stack levels used:    1
 43779 ;; This function calls:
 43780 ;;		Nothing
 43781 ;; This function is called by:
 43782 ;;		_peakToRMS
 43783 ;;		_ADCPostProcessingCallback
 43784 ;;		_asin
 43785 ;;		_atan
 43786 ;;		_eval_poly
 43787 ;;		_sin
 43788 ;;		i2_fround
 43789 ;;		i2_scale
 43790 ;;		i2_printf
 43791 ;; This function uses a non-reentrant model
 43792 ;;
 43793                           
 43794                           	psect	text137
 43795  014A68                     __ptext137:
 43796                           	opt stack 0
 43797  014A68                     i2___flmul:
 43798                           	opt stack 15
 43799                           
 43800                           ; BSR set to: 0
 43801                           ;incstack = 0
 43802  014A68  5033               	movf	i2___flmul@b+3,w,c
 43803  014A6A  0B80               	andlw	128
 43804  014A6C  6E3C               	movwf	i2___flmul@sign,c
 43805  014A6E  5033               	movf	i2___flmul@b+3,w,c
 43806  014A70  2433               	addwf	i2___flmul@b+3,w,c
 43807  014A72  6E42               	movwf	i2___flmul@bexp,c
 43808  014A74  BE32               	btfsc	i2___flmul@b+2,7,c
 43809  014A76  8042               	bsf	i2___flmul@bexp,0,c
 43810  014A78  5042               	movf	i2___flmul@bexp,w,c
 43811  014A7A  B4D8               	btfsc	status,2,c
 43812  014A7C  D00D               	goto	i2l2326
 43813  014A7E  2842               	incf	i2___flmul@bexp,w,c
 43814  014A80  A4D8               	btfss	status,2,c
 43815  014A82  D008               	goto	i2l2327
 43816  014A84  0E00               	movlw	0
 43817  014A86  6E30               	movwf	i2___flmul@b,c
 43818  014A88  0E00               	movlw	0
 43819  014A8A  6E31               	movwf	i2___flmul@b+1,c
 43820  014A8C  0E00               	movlw	0
 43821  014A8E  6E32               	movwf	i2___flmul@b+2,c
 43822  014A90  0E00               	movlw	0
 43823  014A92  6E33               	movwf	i2___flmul@b+3,c
 43824  014A94                     i2l2327:
 43825  014A94  8E32               	bsf	i2___flmul@b+2,7,c
 43826  014A96  D008               	goto	i2l2328
 43827  014A98                     i2l2326:
 43828  014A98  0E00               	movlw	0
 43829  014A9A  6E30               	movwf	i2___flmul@b,c
 43830  014A9C  0E00               	movlw	0
 43831  014A9E  6E31               	movwf	i2___flmul@b+1,c
 43832  014AA0  0E00               	movlw	0
 43833  014AA2  6E32               	movwf	i2___flmul@b+2,c
 43834  014AA4  0E00               	movlw	0
 43835  014AA6  6E33               	movwf	i2___flmul@b+3,c
 43836  014AA8                     i2l2328:
 43837  014AA8  5037               	movf	i2___flmul@a+3,w,c
 43838  014AAA  0B80               	andlw	128
 43839  014AAC  1A3C               	xorwf	i2___flmul@sign,f,c
 43840  014AAE  5037               	movf	i2___flmul@a+3,w,c
 43841  014AB0  2437               	addwf	i2___flmul@a+3,w,c
 43842  014AB2  6E3D               	movwf	i2___flmul@aexp,c
 43843  014AB4  BE36               	btfsc	i2___flmul@a+2,7,c
 43844  014AB6  803D               	bsf	i2___flmul@aexp,0,c
 43845  014AB8  503D               	movf	i2___flmul@aexp,w,c
 43846  014ABA  B4D8               	btfsc	status,2,c
 43847  014ABC  D00D               	goto	i2l2330
 43848  014ABE  283D               	incf	i2___flmul@aexp,w,c
 43849  014AC0  A4D8               	btfss	status,2,c
 43850  014AC2  D008               	goto	i2l2331
 43851  014AC4  0E00               	movlw	0
 43852  014AC6  6E34               	movwf	i2___flmul@a,c
 43853  014AC8  0E00               	movlw	0
 43854  014ACA  6E35               	movwf	i2___flmul@a+1,c
 43855  014ACC  0E00               	movlw	0
 43856  014ACE  6E36               	movwf	i2___flmul@a+2,c
 43857  014AD0  0E00               	movlw	0
 43858  014AD2  6E37               	movwf	i2___flmul@a+3,c
 43859  014AD4                     i2l2331:
 43860  014AD4  8E36               	bsf	i2___flmul@a+2,7,c
 43861  014AD6  D008               	goto	i2l2332
 43862  014AD8                     i2l2330:
 43863  014AD8  0E00               	movlw	0
 43864  014ADA  6E34               	movwf	i2___flmul@a,c
 43865  014ADC  0E00               	movlw	0
 43866  014ADE  6E35               	movwf	i2___flmul@a+1,c
 43867  014AE0  0E00               	movlw	0
 43868  014AE2  6E36               	movwf	i2___flmul@a+2,c
 43869  014AE4  0E00               	movlw	0
 43870  014AE6  6E37               	movwf	i2___flmul@a+3,c
 43871  014AE8                     i2l2332:
 43872  014AE8  503D               	movf	i2___flmul@aexp,w,c
 43873  014AEA  B4D8               	btfsc	status,2,c
 43874  014AEC  D003               	goto	i2u1387_40
 43875  014AEE  5042               	movf	i2___flmul@bexp,w,c
 43876  014AF0  A4D8               	btfss	status,2,c
 43877  014AF2  D009               	goto	i2l2333
 43878  014AF4                     i2u1387_40:
 43879  014AF4  0E00               	movlw	0
 43880  014AF6  6E30               	movwf	?i2___flmul,c
 43881  014AF8  0E00               	movlw	0
 43882  014AFA  6E31               	movwf	?i2___flmul+1,c
 43883  014AFC  0E00               	movlw	0
 43884  014AFE  6E32               	movwf	?i2___flmul+2,c
 43885  014B00  0E00               	movlw	0
 43886  014B02  6E33               	movwf	?i2___flmul+3,c
 43887  014B04  0012               	return	
 43888  014B06                     i2l2333:
 43889  014B06  5036               	movf	i2___flmul@a+2,w,c
 43890  014B08  0230               	mulwf	i2___flmul@b,c
 43891  014B0A  CFF3 F047          	movff	prodl,i2___flmul@temp
 43892  014B0E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43893  014B12  5047               	movf	i2___flmul@temp,w,c
 43894  014B14  6E3E               	movwf	i2___flmul@grs,c
 43895  014B16  6A3F               	clrf	i2___flmul@grs+1,c
 43896  014B18  6A40               	clrf	i2___flmul@grs+2,c
 43897  014B1A  6A41               	clrf	i2___flmul@grs+3,c
 43898  014B1C  5048               	movf	i2___flmul@temp+1,w,c
 43899  014B1E  6E43               	movwf	i2___flmul@prod,c
 43900  014B20  6A44               	clrf	i2___flmul@prod+1,c
 43901  014B22  6A45               	clrf	i2___flmul@prod+2,c
 43902  014B24  6A46               	clrf	i2___flmul@prod+3,c
 43903  014B26  5035               	movf	i2___flmul@a+1,w,c
 43904  014B28  0231               	mulwf	i2___flmul@b+1,c
 43905  014B2A  CFF3 F047          	movff	prodl,i2___flmul@temp
 43906  014B2E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43907  014B32  5047               	movf	i2___flmul@temp,w,c
 43908  014B34  263E               	addwf	i2___flmul@grs,f,c
 43909  014B36  0E00               	movlw	0
 43910  014B38  223F               	addwfc	i2___flmul@grs+1,f,c
 43911  014B3A  2240               	addwfc	i2___flmul@grs+2,f,c
 43912  014B3C  2241               	addwfc	i2___flmul@grs+3,f,c
 43913  014B3E  5048               	movf	i2___flmul@temp+1,w,c
 43914  014B40  2643               	addwf	i2___flmul@prod,f,c
 43915  014B42  0E00               	movlw	0
 43916  014B44  2244               	addwfc	i2___flmul@prod+1,f,c
 43917  014B46  2245               	addwfc	i2___flmul@prod+2,f,c
 43918  014B48  2246               	addwfc	i2___flmul@prod+3,f,c
 43919  014B4A  5034               	movf	i2___flmul@a,w,c
 43920  014B4C  0232               	mulwf	i2___flmul@b+2,c
 43921  014B4E  CFF3 F047          	movff	prodl,i2___flmul@temp
 43922  014B52  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43923  014B56  5047               	movf	i2___flmul@temp,w,c
 43924  014B58  263E               	addwf	i2___flmul@grs,f,c
 43925  014B5A  0E00               	movlw	0
 43926  014B5C  223F               	addwfc	i2___flmul@grs+1,f,c
 43927  014B5E  2240               	addwfc	i2___flmul@grs+2,f,c
 43928  014B60  2241               	addwfc	i2___flmul@grs+3,f,c
 43929  014B62  5048               	movf	i2___flmul@temp+1,w,c
 43930  014B64  2643               	addwf	i2___flmul@prod,f,c
 43931  014B66  0E00               	movlw	0
 43932  014B68  2244               	addwfc	i2___flmul@prod+1,f,c
 43933  014B6A  2245               	addwfc	i2___flmul@prod+2,f,c
 43934  014B6C  2246               	addwfc	i2___flmul@prod+3,f,c
 43935  014B6E  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 43936  014B72  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 43937  014B76  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 43938  014B7A  6A3E               	clrf	i2___flmul@grs,c
 43939  014B7C  5034               	movf	i2___flmul@a,w,c
 43940  014B7E  0231               	mulwf	i2___flmul@b+1,c
 43941  014B80  CFF3 F047          	movff	prodl,i2___flmul@temp
 43942  014B84  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43943  014B88  5047               	movf	i2___flmul@temp,w,c
 43944  014B8A  263E               	addwf	i2___flmul@grs,f,c
 43945  014B8C  5048               	movf	i2___flmul@temp+1,w,c
 43946  014B8E  223F               	addwfc	i2___flmul@grs+1,f,c
 43947  014B90  0E00               	movlw	0
 43948  014B92  2240               	addwfc	i2___flmul@grs+2,f,c
 43949  014B94  0E00               	movlw	0
 43950  014B96  2241               	addwfc	i2___flmul@grs+3,f,c
 43951  014B98  5035               	movf	i2___flmul@a+1,w,c
 43952  014B9A  0230               	mulwf	i2___flmul@b,c
 43953  014B9C  CFF3 F047          	movff	prodl,i2___flmul@temp
 43954  014BA0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43955  014BA4  5047               	movf	i2___flmul@temp,w,c
 43956  014BA6  263E               	addwf	i2___flmul@grs,f,c
 43957  014BA8  5048               	movf	i2___flmul@temp+1,w,c
 43958  014BAA  223F               	addwfc	i2___flmul@grs+1,f,c
 43959  014BAC  0E00               	movlw	0
 43960  014BAE  2240               	addwfc	i2___flmul@grs+2,f,c
 43961  014BB0  0E00               	movlw	0
 43962  014BB2  2241               	addwfc	i2___flmul@grs+3,f,c
 43963  014BB4  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 43964  014BB8  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 43965  014BBC  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 43966  014BC0  6A3E               	clrf	i2___flmul@grs,c
 43967  014BC2  5034               	movf	i2___flmul@a,w,c
 43968  014BC4  0230               	mulwf	i2___flmul@b,c
 43969  014BC6  CFF3 F047          	movff	prodl,i2___flmul@temp
 43970  014BCA  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43971  014BCE  5047               	movf	i2___flmul@temp,w,c
 43972  014BD0  263E               	addwf	i2___flmul@grs,f,c
 43973  014BD2  5048               	movf	i2___flmul@temp+1,w,c
 43974  014BD4  223F               	addwfc	i2___flmul@grs+1,f,c
 43975  014BD6  0E00               	movlw	0
 43976  014BD8  2240               	addwfc	i2___flmul@grs+2,f,c
 43977  014BDA  0E00               	movlw	0
 43978  014BDC  2241               	addwfc	i2___flmul@grs+3,f,c
 43979  014BDE  5036               	movf	i2___flmul@a+2,w,c
 43980  014BE0  0231               	mulwf	i2___flmul@b+1,c
 43981  014BE2  CFF3 F047          	movff	prodl,i2___flmul@temp
 43982  014BE6  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43983  014BEA  5047               	movf	i2___flmul@temp,w,c
 43984  014BEC  2643               	addwf	i2___flmul@prod,f,c
 43985  014BEE  5048               	movf	i2___flmul@temp+1,w,c
 43986  014BF0  2244               	addwfc	i2___flmul@prod+1,f,c
 43987  014BF2  0E00               	movlw	0
 43988  014BF4  2245               	addwfc	i2___flmul@prod+2,f,c
 43989  014BF6  0E00               	movlw	0
 43990  014BF8  2246               	addwfc	i2___flmul@prod+3,f,c
 43991  014BFA  5035               	movf	i2___flmul@a+1,w,c
 43992  014BFC  0232               	mulwf	i2___flmul@b+2,c
 43993  014BFE  CFF3 F047          	movff	prodl,i2___flmul@temp
 43994  014C02  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 43995  014C06  5047               	movf	i2___flmul@temp,w,c
 43996  014C08  2643               	addwf	i2___flmul@prod,f,c
 43997  014C0A  5048               	movf	i2___flmul@temp+1,w,c
 43998  014C0C  2244               	addwfc	i2___flmul@prod+1,f,c
 43999  014C0E  0E00               	movlw	0
 44000  014C10  2245               	addwfc	i2___flmul@prod+2,f,c
 44001  014C12  0E00               	movlw	0
 44002  014C14  2246               	addwfc	i2___flmul@prod+3,f,c
 44003  014C16  5036               	movf	i2___flmul@a+2,w,c
 44004  014C18  0232               	mulwf	i2___flmul@b+2,c
 44005  014C1A  CFF3 F047          	movff	prodl,i2___flmul@temp
 44006  014C1E  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 44007  014C22  5047               	movf	i2___flmul@temp,w,c
 44008  014C24  6E38               	movwf	??i2___flmul& (0+255),c
 44009  014C26  5048               	movf	i2___flmul@temp+1,w,c
 44010  014C28  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 44011  014C2A  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 44012  014C2C  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 44013  014C2E  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 44014  014C32  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 44015  014C36  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 44016  014C3A  6A38               	clrf	??i2___flmul,c
 44017  014C3C  5038               	movf	??i2___flmul,w,c
 44018  014C3E  2643               	addwf	i2___flmul@prod,f,c
 44019  014C40  5039               	movf	??i2___flmul+1,w,c
 44020  014C42  2244               	addwfc	i2___flmul@prod+1,f,c
 44021  014C44  503A               	movf	??i2___flmul+2,w,c
 44022  014C46  2245               	addwfc	i2___flmul@prod+2,f,c
 44023  014C48  503B               	movf	??i2___flmul+3,w,c
 44024  014C4A  2246               	addwfc	i2___flmul@prod+3,f,c
 44025  014C4C  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 44026  014C50  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 44027  014C54  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 44028  014C58  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 44029  014C5C  0E19               	movlw	25
 44030  014C5E  D005               	goto	i2u1388_40
 44031  014C60                     i2u1388_45:
 44032  014C60  90D8               	bcf	status,0,c
 44033  014C62  323B               	rrcf	??i2___flmul+3,f,c
 44034  014C64  323A               	rrcf	??i2___flmul+2,f,c
 44035  014C66  3239               	rrcf	??i2___flmul+1,f,c
 44036  014C68  3238               	rrcf	??i2___flmul,f,c
 44037  014C6A                     i2u1388_40:
 44038  014C6A  2EE8               	decfsz	wreg,f,c
 44039  014C6C  D7F9               	goto	i2u1388_45
 44040  014C6E  5038               	movf	??i2___flmul,w,c
 44041  014C70  2643               	addwf	i2___flmul@prod,f,c
 44042  014C72  5039               	movf	??i2___flmul+1,w,c
 44043  014C74  2244               	addwfc	i2___flmul@prod+1,f,c
 44044  014C76  503A               	movf	??i2___flmul+2,w,c
 44045  014C78  2245               	addwfc	i2___flmul@prod+2,f,c
 44046  014C7A  503B               	movf	??i2___flmul+3,w,c
 44047  014C7C  2246               	addwfc	i2___flmul@prod+3,f,c
 44048  014C7E  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 44049  014C82  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 44050  014C86  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 44051  014C8A  6A3E               	clrf	i2___flmul@grs,c
 44052  014C8C  503D               	movf	i2___flmul@aexp,w,c
 44053  014C8E  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 44054  014C92  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 44055  014C94  2638               	addwf	??i2___flmul,f,c
 44056  014C96  0E00               	movlw	0
 44057  014C98  2239               	addwfc	??i2___flmul+1,f,c
 44058  014C9A  0E82               	movlw	130
 44059  014C9C  2438               	addwf	??i2___flmul,w,c
 44060  014C9E  6E47               	movwf	i2___flmul@temp,c
 44061  014CA0  0EFF               	movlw	255
 44062  014CA2  2039               	addwfc	??i2___flmul+1,w,c
 44063  014CA4  6E48               	movwf	i2___flmul@temp+1,c
 44064  014CA6  D00F               	goto	i2l2337
 44065  014CA8  90D8               	bcf	status,0,c
 44066  014CAA  3643               	rlcf	i2___flmul@prod,f,c
 44067  014CAC  3644               	rlcf	i2___flmul@prod+1,f,c
 44068  014CAE  3645               	rlcf	i2___flmul@prod+2,f,c
 44069  014CB0  3646               	rlcf	i2___flmul@prod+3,f,c
 44070  014CB2  BE41               	btfsc	i2___flmul@grs+3,7,c
 44071  014CB4  8043               	bsf	i2___flmul@prod,0,c
 44072  014CB6  90D8               	bcf	status,0,c
 44073  014CB8  363E               	rlcf	i2___flmul@grs,f,c
 44074  014CBA  363F               	rlcf	i2___flmul@grs+1,f,c
 44075  014CBC  3640               	rlcf	i2___flmul@grs+2,f,c
 44076  014CBE  3641               	rlcf	i2___flmul@grs+3,f,c
 44077  014CC0  0647               	decf	i2___flmul@temp,f,c
 44078  014CC2  A0D8               	btfss	status,0,c
 44079  014CC4  0648               	decf	i2___flmul@temp+1,f,c
 44080  014CC6                     i2l2337:
 44081  014CC6  AE45               	btfss	i2___flmul@prod+2,7,c
 44082  014CC8  D7EF               	goto	i2l2338
 44083  014CCA  0E00               	movlw	0
 44084  014CCC  6E3D               	movwf	i2___flmul@aexp,c
 44085  014CCE  AE41               	btfss	i2___flmul@grs+3,7,c
 44086  014CD0  D016               	goto	i2l2344
 44087  014CD2  0EFF               	movlw	255
 44088  014CD4  143E               	andwf	i2___flmul@grs,w,c
 44089  014CD6  6E38               	movwf	??i2___flmul& (0+255),c
 44090  014CD8  0EFF               	movlw	255
 44091  014CDA  143F               	andwf	i2___flmul@grs+1,w,c
 44092  014CDC  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 44093  014CDE  0EFF               	movlw	255
 44094  014CE0  1440               	andwf	i2___flmul@grs+2,w,c
 44095  014CE2  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 44096  014CE4  0E7F               	movlw	127
 44097  014CE6  1441               	andwf	i2___flmul@grs+3,w,c
 44098  014CE8  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 44099  014CEA  5038               	movf	??i2___flmul,w,c
 44100  014CEC  1039               	iorwf	??i2___flmul+1,w,c
 44101  014CEE  103A               	iorwf	??i2___flmul+2,w,c
 44102  014CF0  103B               	iorwf	??i2___flmul+3,w,c
 44103  014CF2  A4D8               	btfss	status,2,c
 44104  014CF4  D002               	goto	i2u1393_40
 44105  014CF6  A043               	btfss	i2___flmul@prod,0,c
 44106  014CF8  D002               	goto	i2l2344
 44107  014CFA                     i2u1393_40:
 44108  014CFA  0E01               	movlw	1
 44109  014CFC  6E3D               	movwf	i2___flmul@aexp,c
 44110  014CFE                     i2l2344:
 44111  014CFE  503D               	movf	i2___flmul@aexp,w,c
 44112  014D00  B4D8               	btfsc	status,2,c
 44113  014D02  D01F               	goto	i2l2346
 44114  014D04  0E01               	movlw	1
 44115  014D06  2643               	addwf	i2___flmul@prod,f,c
 44116  014D08  0E00               	movlw	0
 44117  014D0A  2244               	addwfc	i2___flmul@prod+1,f,c
 44118  014D0C  2245               	addwfc	i2___flmul@prod+2,f,c
 44119  014D0E  2246               	addwfc	i2___flmul@prod+3,f,c
 44120  014D10  A046               	btfss	i2___flmul@prod+3,0,c
 44121  014D12  D017               	goto	i2l2346
 44122  014D14  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 44123  014D18  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 44124  014D1C  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 44125  014D20  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 44126  014D24  343B               	rlcf	??i2___flmul+3,w,c
 44127  014D26  323B               	rrcf	??i2___flmul+3,f,c
 44128  014D28  323A               	rrcf	??i2___flmul+2,f,c
 44129  014D2A  3239               	rrcf	??i2___flmul+1,f,c
 44130  014D2C  3238               	rrcf	??i2___flmul,f,c
 44131  014D2E  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 44132  014D32  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 44133  014D36  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 44134  014D3A  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 44135  014D3E  4A47               	infsnz	i2___flmul@temp,f,c
 44136  014D40  2A48               	incf	i2___flmul@temp+1,f,c
 44137  014D42                     i2l2346:
 44138  014D42  BE48               	btfsc	i2___flmul@temp+1,7,c
 44139  014D44  D00D               	goto	i2l2347
 44140  014D46  5048               	movf	i2___flmul@temp+1,w,c
 44141  014D48  E103               	bnz	i2u1396_40
 44142  014D4A  2847               	incf	i2___flmul@temp,w,c
 44143  014D4C  A0D8               	btfss	status,0,c
 44144  014D4E  D008               	goto	i2l2347
 44145  014D50                     i2u1396_40:
 44146  014D50  0E00               	movlw	0
 44147  014D52  6E43               	movwf	i2___flmul@prod,c
 44148  014D54  0E00               	movlw	0
 44149  014D56  6E44               	movwf	i2___flmul@prod+1,c
 44150  014D58  0E80               	movlw	128
 44151  014D5A  6E45               	movwf	i2___flmul@prod+2,c
 44152  014D5C  0E7F               	movlw	127
 44153  014D5E  D020               	goto	L21
 44154  014D60                     i2l2347:
 44155  014D60  BE48               	btfsc	i2___flmul@temp+1,7,c
 44156  014D62  D005               	goto	i2u1397_40
 44157  014D64  5048               	movf	i2___flmul@temp+1,w,c
 44158  014D66  E10E               	bnz	i2l2349
 44159  014D68  0447               	decf	i2___flmul@temp,w,c
 44160  014D6A  B0D8               	btfsc	status,0,c
 44161  014D6C  D00B               	goto	i2l2349
 44162  014D6E                     i2u1397_40:
 44163  014D6E  0E00               	movlw	0
 44164  014D70  6E43               	movwf	i2___flmul@prod,c
 44165  014D72  0E00               	movlw	0
 44166  014D74  6E44               	movwf	i2___flmul@prod+1,c
 44167  014D76  0E00               	movlw	0
 44168  014D78  6E45               	movwf	i2___flmul@prod+2,c
 44169  014D7A  0E00               	movlw	0
 44170  014D7C  6E46               	movwf	i2___flmul@prod+3,c
 44171  014D7E  0E00               	movlw	0
 44172  014D80  6E3C               	movwf	i2___flmul@sign,c
 44173  014D82  D00F               	goto	i2l2350
 44174  014D84                     i2l2349:
 44175  014D84  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 44176  014D88  0EFF               	movlw	255
 44177  014D8A  1643               	andwf	i2___flmul@prod,f,c
 44178  014D8C  0EFF               	movlw	255
 44179  014D8E  1644               	andwf	i2___flmul@prod+1,f,c
 44180  014D90  0E7F               	movlw	127
 44181  014D92  1645               	andwf	i2___flmul@prod+2,f,c
 44182  014D94  0E00               	movlw	0
 44183  014D96  1646               	andwf	i2___flmul@prod+3,f,c
 44184  014D98  B042               	btfsc	i2___flmul@bexp,0,c
 44185  014D9A  8E45               	bsf	i2___flmul@prod+2,7,c
 44186  014D9C  90D8               	bcf	status,0,c
 44187  014D9E  3042               	rrcf	i2___flmul@bexp,w,c
 44188  014DA0                     L21:
 44189  014DA0  6E46               	movwf	i2___flmul@prod+3,c
 44190  014DA2                     i2l2350:
 44191  014DA2  503C               	movf	i2___flmul@sign,w,c
 44192  014DA4  1246               	iorwf	i2___flmul@prod+3,f,c
 44193  014DA6  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 44194  014DAA  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 44195  014DAE  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 44196  014DB2  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 44197  014DB6  0012               	return	
 44198  014DB8                     __end_ofi2___flmul:
 44199                           	opt stack 0
 44200                           tosu	equ	0xFFF
 44201                           tosh	equ	0xFFE
 44202                           tosl	equ	0xFFD
 44203                           pclatu	equ	0xFFB
 44204                           pclath	equ	0xFFA
 44205                           tblptru	equ	0xFF8
 44206                           tblptrh	equ	0xFF7
 44207                           tblptrl	equ	0xFF6
 44208                           tablat	equ	0xFF5
 44209                           prodh	equ	0xFF4
 44210                           prodl	equ	0xFF3
 44211                           intcon	equ	0xFF2
 44212                           indf0	equ	0xFEF
 44213                           postinc0	equ	0xFEE
 44214                           fsr0h	equ	0xFEA
 44215                           fsr0l	equ	0xFE9
 44216                           wreg	equ	0xFE8
 44217                           indf1	equ	0xFE7
 44218                           postdec1	equ	0xFE5
 44219                           plusw1	equ	0xFE3
 44220                           fsr1h	equ	0xFE2
 44221                           fsr1l	equ	0xFE1
 44222                           bsr	equ	0xFE0
 44223                           indf2	equ	0xFDF
 44224                           postinc2	equ	0xFDE
 44225                           postdec2	equ	0xFDD
 44226                           plusw2	equ	0xFDB
 44227                           fsr2h	equ	0xFDA
 44228                           fsr2l	equ	0xFD9
 44229                           status	equ	0xFD8
 44230                           
 44231 ;; *************** function i2___fladd *****************
 44232 ;; Defined at:
 44233 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 44234 ;; Parameters:    Size  Location     Type
 44235 ;;  b               4   85[COMRAM] unsigned char 
 44236 ;;  a               4   89[COMRAM] unsigned char 
 44237 ;; Auto vars:     Size  Location     Type
 44238 ;;  __fladd         1   11[BANK0 ] unsigned char 
 44239 ;;  __fladd         1   10[BANK0 ] unsigned char 
 44240 ;;  __fladd         1    9[BANK0 ] unsigned char 
 44241 ;;  __fladd         1    8[BANK0 ] unsigned char 
 44242 ;; Return value:  Size  Location     Type
 44243 ;;                  4   85[COMRAM] unsigned char 
 44244 ;; Registers used:
 44245 ;;		wreg, status,2, status,0
 44246 ;; Tracked objects:
 44247 ;;		On entry : 0/0
 44248 ;;		On exit  : 0/0
 44249 ;;		Unchanged: 0/0
 44250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44251 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44252 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44253 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44254 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44255 ;;Total ram usage:       20 bytes
 44256 ;; Hardware stack levels used:    1
 44257 ;; This function calls:
 44258 ;;		Nothing
 44259 ;; This function is called by:
 44260 ;;		_peakToRMS
 44261 ;;		_ADCPostProcessingCallback
 44262 ;;		_acos
 44263 ;;		_asin
 44264 ;;		_atan
 44265 ;;		_eval_poly
 44266 ;;		_sin
 44267 ;;		_floor
 44268 ;;		i2_printf
 44269 ;;		i2___flsub
 44270 ;; This function uses a non-reentrant model
 44271 ;;
 44272                           
 44273                           	psect	text138
 44274  0150F6                     __ptext138:
 44275                           	opt stack 0
 44276  0150F6                     i2___fladd:
 44277                           	opt stack 15
 44278                           
 44279                           ;incstack = 0
 44280  0150F6  5059               	movf	i2___fladd@b+3,w,c
 44281  0150F8  0B80               	andlw	128
 44282  0150FA  0100               	movlb	0	; () banked
 44283  0150FC  6F68               	movwf	i2___fladd@signs& (0+255),b
 44284  0150FE  5059               	movf	i2___fladd@b+3,w,c
 44285  015100  2459               	addwf	i2___fladd@b+3,w,c
 44286  015102  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 44287                           
 44288                           ; BSR set to: 0
 44289  015104  BE58               	btfsc	i2___fladd@b+2,7,c
 44290                           
 44291                           ; BSR set to: 0
 44292  015106  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 44293                           
 44294                           ; BSR set to: 0
 44295                           
 44296                           ; BSR set to: 0
 44297  015108  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44298  01510A  B4D8               	btfsc	status,2,c
 44299  01510C  D00D               	goto	i2l2235
 44300                           
 44301                           ; BSR set to: 0
 44302  01510E  296A               	incf	i2___fladd@bexp& (0+255),w,b
 44303  015110  A4D8               	btfss	status,2,c
 44304  015112  D008               	goto	i2l2236
 44305                           
 44306                           ; BSR set to: 0
 44307  015114  0E00               	movlw	0
 44308  015116  6E56               	movwf	i2___fladd@b,c
 44309  015118  0E00               	movlw	0
 44310  01511A  6E57               	movwf	i2___fladd@b+1,c
 44311  01511C  0E00               	movlw	0
 44312  01511E  6E58               	movwf	i2___fladd@b+2,c
 44313  015120  0E00               	movlw	0
 44314  015122  6E59               	movwf	i2___fladd@b+3,c
 44315  015124                     i2l2236:
 44316                           
 44317                           ; BSR set to: 0
 44318                           
 44319                           ; BSR set to: 0
 44320  015124  8E58               	bsf	i2___fladd@b+2,7,c
 44321  015126  D006               	goto	L22
 44322  015128                     i2l2235:
 44323                           
 44324                           ; BSR set to: 0
 44325                           
 44326                           ; BSR set to: 0
 44327  015128  0E00               	movlw	0
 44328  01512A  6E56               	movwf	i2___fladd@b,c
 44329  01512C  0E00               	movlw	0
 44330  01512E  6E57               	movwf	i2___fladd@b+1,c
 44331  015130  0E00               	movlw	0
 44332  015132  6E58               	movwf	i2___fladd@b+2,c
 44333  015134                     L22:
 44334  015134  0E00               	movlw	0
 44335  015136  6E59               	movwf	i2___fladd@b+3,c
 44336                           
 44337                           ; BSR set to: 0
 44338                           
 44339                           ; BSR set to: 0
 44340  015138  505D               	movf	i2___fladd@a+3,w,c
 44341  01513A  0B80               	andlw	128
 44342  01513C  6F69               	movwf	i2___fladd@aexp& (0+255),b
 44343                           
 44344                           ; BSR set to: 0
 44345  01513E  5168               	movf	i2___fladd@signs& (0+255),w,b
 44346  015140  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 44347  015142  A4D8               	btfss	status,2,c
 44348                           
 44349                           ; BSR set to: 0
 44350  015144  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 44351                           
 44352                           ; BSR set to: 0
 44353                           
 44354                           ; BSR set to: 0
 44355  015146  505D               	movf	i2___fladd@a+3,w,c
 44356  015148  245D               	addwf	i2___fladd@a+3,w,c
 44357  01514A  6F69               	movwf	i2___fladd@aexp& (0+255),b
 44358                           
 44359                           ; BSR set to: 0
 44360  01514C  BE5C               	btfsc	i2___fladd@a+2,7,c
 44361                           
 44362                           ; BSR set to: 0
 44363  01514E  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 44364                           
 44365                           ; BSR set to: 0
 44366                           
 44367                           ; BSR set to: 0
 44368  015150  5169               	movf	i2___fladd@aexp& (0+255),w,b
 44369  015152  B4D8               	btfsc	status,2,c
 44370  015154  D00D               	goto	i2l2240
 44371                           
 44372                           ; BSR set to: 0
 44373  015156  2969               	incf	i2___fladd@aexp& (0+255),w,b
 44374  015158  A4D8               	btfss	status,2,c
 44375  01515A  D008               	goto	i2l2241
 44376                           
 44377                           ; BSR set to: 0
 44378  01515C  0E00               	movlw	0
 44379  01515E  6E5A               	movwf	i2___fladd@a,c
 44380  015160  0E00               	movlw	0
 44381  015162  6E5B               	movwf	i2___fladd@a+1,c
 44382  015164  0E00               	movlw	0
 44383  015166  6E5C               	movwf	i2___fladd@a+2,c
 44384  015168  0E00               	movlw	0
 44385  01516A  6E5D               	movwf	i2___fladd@a+3,c
 44386  01516C                     i2l2241:
 44387                           
 44388                           ; BSR set to: 0
 44389                           
 44390                           ; BSR set to: 0
 44391  01516C  8E5C               	bsf	i2___fladd@a+2,7,c
 44392  01516E  D006               	goto	L23
 44393  015170                     i2l2240:
 44394                           
 44395                           ; BSR set to: 0
 44396                           
 44397                           ; BSR set to: 0
 44398  015170  0E00               	movlw	0
 44399  015172  6E5A               	movwf	i2___fladd@a,c
 44400  015174  0E00               	movlw	0
 44401  015176  6E5B               	movwf	i2___fladd@a+1,c
 44402  015178  0E00               	movlw	0
 44403  01517A  6E5C               	movwf	i2___fladd@a+2,c
 44404  01517C                     L23:
 44405  01517C  0E00               	movlw	0
 44406  01517E  6E5D               	movwf	i2___fladd@a+3,c
 44407                           
 44408                           ; BSR set to: 0
 44409                           
 44410                           ; BSR set to: 0
 44411  015180  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44412  015182  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 44413  015184  B0D8               	btfsc	status,0,c
 44414  015186  D022               	goto	i2l2243
 44415                           
 44416                           ; BSR set to: 0
 44417  015188  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 44418  01518A  D002               	goto	i2l2244
 44419                           
 44420                           ; BSR set to: 0
 44421  01518C  0E80               	movlw	128
 44422  01518E  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 44423  015190                     i2l2244:
 44424                           
 44425                           ; BSR set to: 0
 44426                           
 44427                           ; BSR set to: 0
 44428  015190  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 44429                           
 44430                           ; BSR set to: 0
 44431  015194  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 44432                           
 44433                           ; BSR set to: 0
 44434  015198  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 44435                           
 44436                           ; BSR set to: 0
 44437  01519C  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 44438                           
 44439                           ; BSR set to: 0
 44440  0151A0  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 44441                           
 44442                           ; BSR set to: 0
 44443  0151A4  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 44444                           
 44445                           ; BSR set to: 0
 44446  0151A8  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 44447                           
 44448                           ; BSR set to: 0
 44449  0151AC  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 44450                           
 44451                           ; BSR set to: 0
 44452  0151B0  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 44453                           
 44454                           ; BSR set to: 0
 44455  0151B4  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 44456                           
 44457                           ; BSR set to: 0
 44458  0151B8  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 44459                           
 44460                           ; BSR set to: 0
 44461  0151BC  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 44462                           
 44463                           ; BSR set to: 0
 44464  0151C0  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 44465                           
 44466                           ; BSR set to: 0
 44467  0151C4  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 44468                           
 44469                           ; BSR set to: 0
 44470  0151C8  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 44471  0151CC                     i2l2243:
 44472                           
 44473                           ; BSR set to: 0
 44474                           
 44475                           ; BSR set to: 0
 44476  0151CC  0E00               	movlw	0
 44477  0151CE  6F6B               	movwf	i2___fladd@grs& (0+255),b
 44478                           
 44479                           ; BSR set to: 0
 44480  0151D0  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44481  0151D2  6F60               	movwf	??i2___fladd& (0+255),b
 44482  0151D4  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 44483  0151D6  1F60               	comf	??i2___fladd& (0+255),f,b
 44484  0151D8  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 44485  0151DA  4B60               	infsnz	??i2___fladd& (0+255),f,b
 44486  0151DC  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 44487  0151DE  5169               	movf	i2___fladd@aexp& (0+255),w,b
 44488  0151E0  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 44489  0151E2  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 44490  0151E4  5160               	movf	??i2___fladd& (0+255),w,b
 44491  0151E6  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 44492  0151E8  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 44493  0151EA  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 44494  0151EC  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 44495  0151EE  D02C               	goto	i2l2247
 44496  0151F0  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 44497  0151F2  E104               	bnz	i2u1350_40
 44498  0151F4  0E1A               	movlw	26
 44499  0151F6  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 44500  0151F8  A0D8               	btfss	status,0,c
 44501  0151FA  D026               	goto	i2l2247
 44502  0151FC                     i2u1350_40:
 44503                           
 44504                           ; BSR set to: 0
 44505  0151FC  5056               	movf	i2___fladd@b,w,c
 44506  0151FE  1057               	iorwf	i2___fladd@b+1,w,c
 44507  015200  1058               	iorwf	i2___fladd@b+2,w,c
 44508  015202  1059               	iorwf	i2___fladd@b+3,w,c
 44509  015204  B4D8               	btfsc	status,2,c
 44510  015206  D002               	goto	i2u1351_40
 44511  015208  0E01               	movlw	1
 44512  01520A  D001               	goto	i2u1352_40
 44513  01520C                     i2u1351_40:
 44514  01520C  0E00               	movlw	0
 44515  01520E                     i2u1352_40:
 44516  01520E  6F6B               	movwf	i2___fladd@grs& (0+255),b
 44517                           
 44518                           ; BSR set to: 0
 44519  015210  0E00               	movlw	0
 44520  015212  6E56               	movwf	i2___fladd@b,c
 44521  015214  0E00               	movlw	0
 44522  015216  6E57               	movwf	i2___fladd@b+1,c
 44523  015218  0E00               	movlw	0
 44524  01521A  6E58               	movwf	i2___fladd@b+2,c
 44525  01521C  0E00               	movlw	0
 44526  01521E  6E59               	movwf	i2___fladd@b+3,c
 44527                           
 44528                           ; BSR set to: 0
 44529  015220  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 44530  015224  D015               	goto	i2u1355_40
 44531  015226                     i2l2248:
 44532                           
 44533                           ; BSR set to: 0
 44534  015226  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 44535  015228  D005               	goto	i2l2249
 44536                           
 44537                           ; BSR set to: 0
 44538  01522A  90D8               	bcf	status,0,c
 44539  01522C  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 44540  01522E  0901               	iorlw	1
 44541  015230  6F6B               	movwf	i2___fladd@grs& (0+255),b
 44542  015232  D002               	goto	i2l2250
 44543  015234                     i2l2249:
 44544                           
 44545                           ; BSR set to: 0
 44546                           
 44547                           ; BSR set to: 0
 44548  015234  90D8               	bcf	status,0,c
 44549  015236  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 44550  015238                     i2l2250:
 44551                           
 44552                           ; BSR set to: 0
 44553                           
 44554                           ; BSR set to: 0
 44555  015238  B056               	btfsc	i2___fladd@b,0,c
 44556                           
 44557                           ; BSR set to: 0
 44558  01523A  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 44559                           
 44560                           ; BSR set to: 0
 44561                           
 44562                           ; BSR set to: 0
 44563  01523C  3459               	rlcf	i2___fladd@b+3,w,c
 44564  01523E  3259               	rrcf	i2___fladd@b+3,f,c
 44565  015240  3258               	rrcf	i2___fladd@b+2,f,c
 44566  015242  3257               	rrcf	i2___fladd@b+1,f,c
 44567  015244  3256               	rrcf	i2___fladd@b,f,c
 44568                           
 44569                           ; BSR set to: 0
 44570  015246  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 44571  015248                     i2l2247:
 44572                           
 44573                           ; BSR set to: 0
 44574  015248  5169               	movf	i2___fladd@aexp& (0+255),w,b
 44575  01524A  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 44576  01524C  A0D8               	btfss	status,0,c
 44577  01524E  D7EB               	goto	i2l2248
 44578  015250                     i2u1355_40:
 44579                           
 44580                           ; BSR set to: 0
 44581                           
 44582                           ; BSR set to: 0
 44583  015250  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 44584  015252  D029               	goto	i2l2253
 44585                           
 44586                           ; BSR set to: 0
 44587  015254  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44588  015256  A4D8               	btfss	status,2,c
 44589  015258  D009               	goto	i2l2254
 44590                           
 44591                           ; BSR set to: 0
 44592  01525A  0E00               	movlw	0
 44593  01525C  6E56               	movwf	?i2___fladd,c
 44594  01525E  0E00               	movlw	0
 44595  015260  6E57               	movwf	?i2___fladd+1,c
 44596  015262  0E00               	movlw	0
 44597  015264  6E58               	movwf	?i2___fladd+2,c
 44598  015266  0E00               	movlw	0
 44599  015268  6E59               	movwf	?i2___fladd+3,c
 44600                           
 44601                           ; BSR set to: 0
 44602  01526A  0012               	return	
 44603  01526C                     i2l2254:
 44604                           
 44605                           ; BSR set to: 0
 44606                           
 44607                           ; BSR set to: 0
 44608  01526C  505A               	movf	i2___fladd@a,w,c
 44609  01526E  2656               	addwf	i2___fladd@b,f,c
 44610  015270  505B               	movf	i2___fladd@a+1,w,c
 44611  015272  2257               	addwfc	i2___fladd@b+1,f,c
 44612  015274  505C               	movf	i2___fladd@a+2,w,c
 44613  015276  2258               	addwfc	i2___fladd@b+2,f,c
 44614  015278  505D               	movf	i2___fladd@a+3,w,c
 44615  01527A  2259               	addwfc	i2___fladd@b+3,f,c
 44616                           
 44617                           ; BSR set to: 0
 44618  01527C  A059               	btfss	i2___fladd@b+3,0,c
 44619  01527E  D083               	goto	i2u1368_40
 44620                           
 44621                           ; BSR set to: 0
 44622  015280  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 44623  015282  D006               	goto	i2l2257
 44624                           
 44625                           ; BSR set to: 0
 44626  015284  90D8               	bcf	status,0,c
 44627  015286  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 44628  015288  516B               	movf	i2___fladd@grs& (0+255),w,b
 44629  01528A  0901               	iorlw	1
 44630  01528C  6F6B               	movwf	i2___fladd@grs& (0+255),b
 44631  01528E  D002               	goto	i2l2258
 44632  015290                     i2l2257:
 44633                           
 44634                           ; BSR set to: 0
 44635                           
 44636                           ; BSR set to: 0
 44637  015290  90D8               	bcf	status,0,c
 44638  015292  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 44639  015294                     i2l2258:
 44640                           
 44641                           ; BSR set to: 0
 44642                           
 44643                           ; BSR set to: 0
 44644  015294  B056               	btfsc	i2___fladd@b,0,c
 44645                           
 44646                           ; BSR set to: 0
 44647  015296  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 44648                           
 44649                           ; BSR set to: 0
 44650                           
 44651                           ; BSR set to: 0
 44652  015298  3459               	rlcf	i2___fladd@b+3,w,c
 44653  01529A  3259               	rrcf	i2___fladd@b+3,f,c
 44654  01529C  3258               	rrcf	i2___fladd@b+2,f,c
 44655  01529E  3257               	rrcf	i2___fladd@b+1,f,c
 44656  0152A0  3256               	rrcf	i2___fladd@b,f,c
 44657                           
 44658                           ; BSR set to: 0
 44659  0152A2  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 44660                           
 44661                           ; BSR set to: 0
 44662  0152A4  D070               	goto	i2u1368_40
 44663  0152A6                     i2l2253:
 44664                           
 44665                           ; BSR set to: 0
 44666                           
 44667                           ; BSR set to: 0
 44668  0152A6  505A               	movf	i2___fladd@a,w,c
 44669  0152A8  5C56               	subwf	i2___fladd@b,w,c
 44670  0152AA  505B               	movf	i2___fladd@a+1,w,c
 44671  0152AC  5857               	subwfb	i2___fladd@b+1,w,c
 44672  0152AE  505C               	movf	i2___fladd@a+2,w,c
 44673  0152B0  5858               	subwfb	i2___fladd@b+2,w,c
 44674  0152B2  5059               	movf	i2___fladd@b+3,w,c
 44675  0152B4  0A80               	xorlw	128
 44676  0152B6  6F60               	movwf	??i2___fladd& (0+255),b
 44677  0152B8  505D               	movf	i2___fladd@a+3,w,c
 44678  0152BA  0A80               	xorlw	128
 44679  0152BC  5960               	subwfb	??i2___fladd& (0+255),w,b
 44680  0152BE  B0D8               	btfsc	status,0,c
 44681  0152C0  D036               	goto	i2l2261
 44682                           
 44683                           ; BSR set to: 0
 44684  0152C2  C056  F060         	movff	i2___fladd@b,??i2___fladd
 44685  0152C6  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 44686  0152CA  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 44687  0152CE  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 44688  0152D2  1F60               	comf	??i2___fladd& (0+255),f,b
 44689  0152D4  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 44690  0152D6  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 44691  0152D8  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 44692  0152DA  2B60               	incf	??i2___fladd& (0+255),f,b
 44693  0152DC  0E00               	movlw	0
 44694  0152DE  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 44695  0152E0  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 44696  0152E2  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 44697  0152E4  505A               	movf	i2___fladd@a,w,c
 44698  0152E6  2560               	addwf	??i2___fladd& (0+255),w,b
 44699  0152E8  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 44700  0152EA  505B               	movf	i2___fladd@a+1,w,c
 44701  0152EC  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 44702  0152EE  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 44703  0152F0  505C               	movf	i2___fladd@a+2,w,c
 44704  0152F2  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 44705  0152F4  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 44706  0152F6  505D               	movf	i2___fladd@a+3,w,c
 44707  0152F8  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 44708  0152FA  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 44709  0152FC  0EFF               	movlw	255
 44710  0152FE  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 44711  015300  6E56               	movwf	i2___fladd@b,c
 44712  015302  0EFF               	movlw	255
 44713  015304  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 44714  015306  6E57               	movwf	i2___fladd@b+1,c
 44715  015308  0EFF               	movlw	255
 44716  01530A  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 44717  01530C  6E58               	movwf	i2___fladd@b+2,c
 44718  01530E  0EFF               	movlw	255
 44719  015310  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 44720  015312  6E59               	movwf	i2___fladd@b+3,c
 44721  015314  0E80               	movlw	128
 44722  015316  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 44723                           
 44724                           ; BSR set to: 0
 44725  015318  6D6B               	negf	i2___fladd@grs& (0+255),b
 44726                           
 44727                           ; BSR set to: 0
 44728  01531A  516B               	movf	i2___fladd@grs& (0+255),w,b
 44729  01531C  A4D8               	btfss	status,2,c
 44730  01531E  D00F               	goto	i2l2263
 44731                           
 44732                           ; BSR set to: 0
 44733  015320  0E01               	movlw	1
 44734  015322  2656               	addwf	i2___fladd@b,f,c
 44735  015324  0E00               	movlw	0
 44736  015326  2257               	addwfc	i2___fladd@b+1,f,c
 44737  015328  2258               	addwfc	i2___fladd@b+2,f,c
 44738  01532A  2259               	addwfc	i2___fladd@b+3,f,c
 44739                           
 44740                           ; BSR set to: 0
 44741  01532C  D008               	goto	i2l2263
 44742  01532E                     i2l2261:
 44743                           
 44744                           ; BSR set to: 0
 44745                           
 44746                           ; BSR set to: 0
 44747  01532E  505A               	movf	i2___fladd@a,w,c
 44748  015330  5E56               	subwf	i2___fladd@b,f,c
 44749  015332  505B               	movf	i2___fladd@a+1,w,c
 44750  015334  5A57               	subwfb	i2___fladd@b+1,f,c
 44751  015336  505C               	movf	i2___fladd@a+2,w,c
 44752  015338  5A58               	subwfb	i2___fladd@b+2,f,c
 44753  01533A  505D               	movf	i2___fladd@a+3,w,c
 44754  01533C  5A59               	subwfb	i2___fladd@b+3,f,c
 44755  01533E                     i2l2263:
 44756                           
 44757                           ; BSR set to: 0
 44758  01533E  5056               	movf	i2___fladd@b,w,c
 44759  015340  1057               	iorwf	i2___fladd@b+1,w,c
 44760  015342  1058               	iorwf	i2___fladd@b+2,w,c
 44761  015344  1059               	iorwf	i2___fladd@b+3,w,c
 44762  015346  A4D8               	btfss	status,2,c
 44763  015348  D01C               	goto	i2l2270
 44764                           
 44765                           ; BSR set to: 0
 44766  01534A  516B               	movf	i2___fladd@grs& (0+255),w,b
 44767  01534C  A4D8               	btfss	status,2,c
 44768  01534E  D019               	goto	i2l2270
 44769                           
 44770                           ; BSR set to: 0
 44771  015350  0E00               	movlw	0
 44772  015352  6E56               	movwf	?i2___fladd,c
 44773  015354  0E00               	movlw	0
 44774  015356  6E57               	movwf	?i2___fladd+1,c
 44775  015358  0E00               	movlw	0
 44776  01535A  6E58               	movwf	?i2___fladd+2,c
 44777  01535C  0E00               	movlw	0
 44778  01535E  6E59               	movwf	?i2___fladd+3,c
 44779                           
 44780                           ; BSR set to: 0
 44781  015360  0012               	return	
 44782  015362                     
 44783                           ; BSR set to: 0
 44784                           
 44785                           ; BSR set to: 0
 44786  015362  90D8               	bcf	status,0,c
 44787  015364  3656               	rlcf	i2___fladd@b,f,c
 44788  015366  3657               	rlcf	i2___fladd@b+1,f,c
 44789  015368  3658               	rlcf	i2___fladd@b+2,f,c
 44790  01536A  3659               	rlcf	i2___fladd@b+3,f,c
 44791                           
 44792                           ; BSR set to: 0
 44793  01536C  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 44794                           
 44795                           ; BSR set to: 0
 44796  01536E  8056               	bsf	i2___fladd@b,0,c
 44797                           
 44798                           ; BSR set to: 0
 44799                           
 44800                           ; BSR set to: 0
 44801  015370  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 44802  015372  D002               	goto	i2l2268
 44803                           
 44804                           ; BSR set to: 0
 44805  015374  80D8               	bsf	status,0,c
 44806  015376  D001               	goto	L24
 44807  015378                     i2l2268:
 44808                           
 44809                           ; BSR set to: 0
 44810                           
 44811                           ; BSR set to: 0
 44812  015378  90D8               	bcf	status,0,c
 44813  01537A                     L24:
 44814  01537A  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 44815                           
 44816                           ; BSR set to: 0
 44817                           
 44818                           ; BSR set to: 0
 44819  01537C  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44820  01537E  A4D8               	btfss	status,2,c
 44821                           
 44822                           ; BSR set to: 0
 44823  015380  076A               	decf	i2___fladd@bexp& (0+255),f,b
 44824  015382                     i2l2270:
 44825                           
 44826                           ; BSR set to: 0
 44827                           
 44828                           ; BSR set to: 0
 44829                           
 44830                           ; BSR set to: 0
 44831  015382  AE58               	btfss	i2___fladd@b+2,7,c
 44832  015384  D7EE               	goto	i2l2266
 44833  015386                     i2u1368_40:
 44834                           
 44835                           ; BSR set to: 0
 44836                           
 44837                           ; BSR set to: 0
 44838                           
 44839                           ; BSR set to: 0
 44840  015386  0E00               	movlw	0
 44841  015388  6F69               	movwf	i2___fladd@aexp& (0+255),b
 44842                           
 44843                           ; BSR set to: 0
 44844  01538A  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 44845  01538C  D00A               	goto	i2l2275
 44846                           
 44847                           ; BSR set to: 0
 44848  01538E  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 44849  015392  0E7F               	movlw	127
 44850  015394  1760               	andwf	??i2___fladd& (0+255),f,b
 44851  015396  A4D8               	btfss	status,2,c
 44852  015398  D002               	goto	i2u1371_40
 44853                           
 44854                           ; BSR set to: 0
 44855                           
 44856                           ; BSR set to: 0
 44857  01539A  A056               	btfss	i2___fladd@b,0,c
 44858  01539C  D002               	goto	i2l2275
 44859  01539E                     i2u1371_40:
 44860                           
 44861                           ; BSR set to: 0
 44862  01539E  0E01               	movlw	1
 44863  0153A0  6F69               	movwf	i2___fladd@aexp& (0+255),b
 44864  0153A2                     i2l2275:
 44865                           
 44866                           ; BSR set to: 0
 44867                           
 44868                           ; BSR set to: 0
 44869                           
 44870                           ; BSR set to: 0
 44871  0153A2  5169               	movf	i2___fladd@aexp& (0+255),w,b
 44872  0153A4  B4D8               	btfsc	status,2,c
 44873  0153A6  D020               	goto	i2l2278
 44874                           
 44875                           ; BSR set to: 0
 44876  0153A8  0E01               	movlw	1
 44877  0153AA  2656               	addwf	i2___fladd@b,f,c
 44878  0153AC  0E00               	movlw	0
 44879  0153AE  2257               	addwfc	i2___fladd@b+1,f,c
 44880  0153B0  2258               	addwfc	i2___fladd@b+2,f,c
 44881  0153B2  2259               	addwfc	i2___fladd@b+3,f,c
 44882                           
 44883                           ; BSR set to: 0
 44884  0153B4  A059               	btfss	i2___fladd@b+3,0,c
 44885  0153B6  D018               	goto	i2l2278
 44886                           
 44887                           ; BSR set to: 0
 44888  0153B8  C056  F060         	movff	i2___fladd@b,??i2___fladd
 44889  0153BC  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 44890  0153C0  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 44891  0153C4  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 44892  0153C8  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 44893  0153CA  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 44894  0153CC  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 44895  0153CE  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 44896  0153D0  3360               	rrcf	??i2___fladd& (0+255),f,b
 44897  0153D2  C060  F056         	movff	??i2___fladd,i2___fladd@b
 44898  0153D6  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 44899  0153DA  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 44900  0153DE  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 44901  0153E2  296A               	incf	i2___fladd@bexp& (0+255),w,b
 44902  0153E4  A4D8               	btfss	status,2,c
 44903                           
 44904                           ; BSR set to: 0
 44905  0153E6  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 44906  0153E8                     i2l2278:
 44907                           
 44908                           ; BSR set to: 0
 44909                           
 44910                           ; BSR set to: 0
 44911                           
 44912                           ; BSR set to: 0
 44913                           
 44914                           ; BSR set to: 0
 44915  0153E8  296A               	incf	i2___fladd@bexp& (0+255),w,b
 44916  0153EA  B4D8               	btfsc	status,2,c
 44917  0153EC  D003               	goto	i2u1376_40
 44918                           
 44919                           ; BSR set to: 0
 44920  0153EE  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44921  0153F0  A4D8               	btfss	status,2,c
 44922  0153F2  D00D               	goto	i2l2282
 44923  0153F4                     i2u1376_40:
 44924                           
 44925                           ; BSR set to: 0
 44926                           
 44927                           ; BSR set to: 0
 44928  0153F4  0E00               	movlw	0
 44929  0153F6  6E56               	movwf	i2___fladd@b,c
 44930  0153F8  0E00               	movlw	0
 44931  0153FA  6E57               	movwf	i2___fladd@b+1,c
 44932  0153FC  0E00               	movlw	0
 44933  0153FE  6E58               	movwf	i2___fladd@b+2,c
 44934  015400  0E00               	movlw	0
 44935  015402  6E59               	movwf	i2___fladd@b+3,c
 44936  015404  516A               	movf	i2___fladd@bexp& (0+255),w,b
 44937  015406  A4D8               	btfss	status,2,c
 44938  015408  D002               	goto	i2l2282
 44939                           
 44940                           ; BSR set to: 0
 44941  01540A  0E00               	movlw	0
 44942  01540C  6F68               	movwf	i2___fladd@signs& (0+255),b
 44943  01540E                     i2l2282:
 44944                           
 44945                           ; BSR set to: 0
 44946                           
 44947                           ; BSR set to: 0
 44948                           
 44949                           ; BSR set to: 0
 44950  01540E  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 44951  015410  D002               	goto	i2l2283
 44952                           
 44953                           ; BSR set to: 0
 44954  015412  8E58               	bsf	i2___fladd@b+2,7,c
 44955  015414  D001               	goto	i2l2284
 44956  015416                     i2l2283:
 44957                           
 44958                           ; BSR set to: 0
 44959                           
 44960                           ; BSR set to: 0
 44961  015416  9E58               	bcf	i2___fladd@b+2,7,c
 44962  015418                     i2l2284:
 44963                           
 44964                           ; BSR set to: 0
 44965                           
 44966                           ; BSR set to: 0
 44967  015418  90D8               	bcf	status,0,c
 44968  01541A  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 44969  01541C  6E59               	movwf	i2___fladd@b+3,c
 44970                           
 44971                           ; BSR set to: 0
 44972  01541E  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 44973                           
 44974                           ; BSR set to: 0
 44975  015420  8E59               	bsf	i2___fladd@b+3,7,c
 44976                           
 44977                           ; BSR set to: 0
 44978                           
 44979                           ; BSR set to: 0
 44980  015422  C056  F056         	movff	i2___fladd@b,?i2___fladd
 44981  015426  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 44982  01542A  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 44983  01542E  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 44984  015432  0012               	return	
 44985  015434                     __end_ofi2___fladd:
 44986                           	opt stack 0
 44987                           tosu	equ	0xFFF
 44988                           tosh	equ	0xFFE
 44989                           tosl	equ	0xFFD
 44990                           pclatu	equ	0xFFB
 44991                           pclath	equ	0xFFA
 44992                           tblptru	equ	0xFF8
 44993                           tblptrh	equ	0xFF7
 44994                           tblptrl	equ	0xFF6
 44995                           tablat	equ	0xFF5
 44996                           prodh	equ	0xFF4
 44997                           prodl	equ	0xFF3
 44998                           intcon	equ	0xFF2
 44999                           indf0	equ	0xFEF
 45000                           postinc0	equ	0xFEE
 45001                           fsr0h	equ	0xFEA
 45002                           fsr0l	equ	0xFE9
 45003                           wreg	equ	0xFE8
 45004                           indf1	equ	0xFE7
 45005                           postdec1	equ	0xFE5
 45006                           plusw1	equ	0xFE3
 45007                           fsr1h	equ	0xFE2
 45008                           fsr1l	equ	0xFE1
 45009                           bsr	equ	0xFE0
 45010                           indf2	equ	0xFDF
 45011                           postinc2	equ	0xFDE
 45012                           postdec2	equ	0xFDD
 45013                           plusw2	equ	0xFDB
 45014                           fsr2h	equ	0xFDA
 45015                           fsr2l	equ	0xFD9
 45016                           status	equ	0xFD8
 45017                           
 45018 ;; *************** function _abs *****************
 45019 ;; Defined at:
 45020 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 45021 ;; Parameters:    Size  Location     Type
 45022 ;;  a               2   22[BANK0 ] int 
 45023 ;; Auto vars:     Size  Location     Type
 45024 ;;		None
 45025 ;; Return value:  Size  Location     Type
 45026 ;;                  2   22[BANK0 ] int 
 45027 ;; Registers used:
 45028 ;;		wreg, status,2, status,0
 45029 ;; Tracked objects:
 45030 ;;		On entry : 0/0
 45031 ;;		On exit  : 0/0
 45032 ;;		Unchanged: 0/0
 45033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45037 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45038 ;;Total ram usage:        4 bytes
 45039 ;; Hardware stack levels used:    1
 45040 ;; This function calls:
 45041 ;;		Nothing
 45042 ;; This function is called by:
 45043 ;;		_ADCPostProcessingCallback
 45044 ;; This function uses a non-reentrant model
 45045 ;;
 45046                           
 45047                           	psect	text139
 45048  0192E6                     __ptext139:
 45049                           	opt stack 0
 45050  0192E6                     _abs:
 45051                           	opt stack 16
 45052                           
 45053                           ; BSR set to: 0
 45054                           ;incstack = 0
 45055  0192E6  0100               	movlb	0	; () banked
 45056  0192E8  AF77               	btfss	(abs@a+1)& (0+255),7,b
 45057  0192EA  D00D               	goto	i2l1730
 45058                           
 45059                           ; BSR set to: 0
 45060  0192EC  C076  F078         	movff	abs@a,??_abs
 45061  0192F0  C077  F079         	movff	abs@a+1,??_abs+1
 45062  0192F4  1F78               	comf	??_abs& (0+255),f,b
 45063  0192F6  1F79               	comf	(??_abs+1)& (0+255),f,b
 45064  0192F8  4B78               	infsnz	??_abs& (0+255),f,b
 45065  0192FA  2B79               	incf	(??_abs+1)& (0+255),f,b
 45066  0192FC  C078  F076         	movff	??_abs,?_abs
 45067  019300  C079  F077         	movff	??_abs+1,?_abs+1
 45068  019304  0012               	return	
 45069  019306                     i2l1730:
 45070                           
 45071                           ; BSR set to: 0
 45072  019306  C076  F076         	movff	abs@a,?_abs
 45073  01930A  C077  F077         	movff	abs@a+1,?_abs+1
 45074                           
 45075                           ; BSR set to: 0
 45076  01930E  0012               	return		;funcret
 45077  019310                     __end_of_abs:
 45078                           	opt stack 0
 45079                           tosu	equ	0xFFF
 45080                           tosh	equ	0xFFE
 45081                           tosl	equ	0xFFD
 45082                           pclatu	equ	0xFFB
 45083                           pclath	equ	0xFFA
 45084                           tblptru	equ	0xFF8
 45085                           tblptrh	equ	0xFF7
 45086                           tblptrl	equ	0xFF6
 45087                           tablat	equ	0xFF5
 45088                           prodh	equ	0xFF4
 45089                           prodl	equ	0xFF3
 45090                           intcon	equ	0xFF2
 45091                           indf0	equ	0xFEF
 45092                           postinc0	equ	0xFEE
 45093                           fsr0h	equ	0xFEA
 45094                           fsr0l	equ	0xFE9
 45095                           wreg	equ	0xFE8
 45096                           indf1	equ	0xFE7
 45097                           postdec1	equ	0xFE5
 45098                           plusw1	equ	0xFE3
 45099                           fsr1h	equ	0xFE2
 45100                           fsr1l	equ	0xFE1
 45101                           bsr	equ	0xFE0
 45102                           indf2	equ	0xFDF
 45103                           postinc2	equ	0xFDE
 45104                           postdec2	equ	0xFDD
 45105                           plusw2	equ	0xFDB
 45106                           fsr2h	equ	0xFDA
 45107                           fsr2l	equ	0xFD9
 45108                           status	equ	0xFD8
 45109                           
 45110 ;; *************** function _ADCC_StopConversion *****************
 45111 ;; Defined at:
 45112 ;;		line 162 in file "mcc_generated_files/adcc.c"
 45113 ;; Parameters:    Size  Location     Type
 45114 ;;		None
 45115 ;; Auto vars:     Size  Location     Type
 45116 ;;		None
 45117 ;; Return value:  Size  Location     Type
 45118 ;;                  1    wreg      void 
 45119 ;; Registers used:
 45120 ;;		None
 45121 ;; Tracked objects:
 45122 ;;		On entry : 0/0
 45123 ;;		On exit  : 0/0
 45124 ;;		Unchanged: 0/0
 45125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45130 ;;Total ram usage:        0 bytes
 45131 ;; Hardware stack levels used:    1
 45132 ;; This function calls:
 45133 ;;		Nothing
 45134 ;; This function is called by:
 45135 ;;		_ADCPostProcessingCallback
 45136 ;; This function uses a non-reentrant model
 45137 ;;
 45138                           
 45139                           	psect	text140
 45140  0196E0                     __ptext140:
 45141                           	opt stack 0
 45142  0196E0                     _ADCC_StopConversion:
 45143                           	opt stack 16
 45144                           
 45145                           ;adcc.c: 165: ADCON0bits.ADGO = 0;
 45146                           
 45147                           ; BSR set to: 0
 45148                           ;incstack = 0
 45149  0196E0  9060               	bcf	3936,0,c	;volatile
 45150  0196E2  0012               	return		;funcret
 45151  0196E4                     __end_of_ADCC_StopConversion:
 45152                           	opt stack 0
 45153                           tosu	equ	0xFFF
 45154                           tosh	equ	0xFFE
 45155                           tosl	equ	0xFFD
 45156                           pclatu	equ	0xFFB
 45157                           pclath	equ	0xFFA
 45158                           tblptru	equ	0xFF8
 45159                           tblptrh	equ	0xFF7
 45160                           tblptrl	equ	0xFF6
 45161                           tablat	equ	0xFF5
 45162                           prodh	equ	0xFF4
 45163                           prodl	equ	0xFF3
 45164                           intcon	equ	0xFF2
 45165                           indf0	equ	0xFEF
 45166                           postinc0	equ	0xFEE
 45167                           fsr0h	equ	0xFEA
 45168                           fsr0l	equ	0xFE9
 45169                           wreg	equ	0xFE8
 45170                           indf1	equ	0xFE7
 45171                           postdec1	equ	0xFE5
 45172                           plusw1	equ	0xFE3
 45173                           fsr1h	equ	0xFE2
 45174                           fsr1l	equ	0xFE1
 45175                           bsr	equ	0xFE0
 45176                           indf2	equ	0xFDF
 45177                           postinc2	equ	0xFDE
 45178                           postdec2	equ	0xFDD
 45179                           plusw2	equ	0xFDB
 45180                           fsr2h	equ	0xFDA
 45181                           fsr2l	equ	0xFD9
 45182                           status	equ	0xFD8
 45183                           
 45184 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 45185 ;; Defined at:
 45186 ;;		line 216 in file "mcc_generated_files/adcc.c"
 45187 ;; Parameters:    Size  Location     Type
 45188 ;;		None
 45189 ;; Auto vars:     Size  Location     Type
 45190 ;;		None
 45191 ;; Return value:  Size  Location     Type
 45192 ;;                  1    wreg      unsigned char 
 45193 ;; Registers used:
 45194 ;;		wreg
 45195 ;; Tracked objects:
 45196 ;;		On entry : 0/0
 45197 ;;		On exit  : 0/0
 45198 ;;		Unchanged: 0/0
 45199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45204 ;;Total ram usage:        0 bytes
 45205 ;; Hardware stack levels used:    1
 45206 ;; This function calls:
 45207 ;;		Nothing
 45208 ;; This function is called by:
 45209 ;;		_ADCPostProcessingCallback
 45210 ;; This function uses a non-reentrant model
 45211 ;;
 45212                           
 45213                           	psect	text141
 45214  01968C                     __ptext141:
 45215                           	opt stack 0
 45216  01968C                     _ADCC_HasAccumulatorOverflowed:
 45217                           	opt stack 16
 45218                           
 45219                           ;adcc.c: 219: return ADSTATbits.ADAOV;
 45220                           
 45221                           ;incstack = 0
 45222  01968C  AE65               	btfss	3941,7,c	;volatile
 45223  01968E  D002               	goto	i2u1712_40
 45224  019690  0E01               	movlw	1
 45225  019692  0012               	return	
 45226  019694                     i2u1712_40:
 45227  019694  0E00               	movlw	0
 45228  019696  0012               	return	
 45229  019698                     __end_of_ADCC_HasAccumulatorOverflowed:
 45230                           	opt stack 0
 45231                           tosu	equ	0xFFF
 45232                           tosh	equ	0xFFE
 45233                           tosl	equ	0xFFD
 45234                           pclatu	equ	0xFFB
 45235                           pclath	equ	0xFFA
 45236                           tblptru	equ	0xFF8
 45237                           tblptrh	equ	0xFF7
 45238                           tblptrl	equ	0xFF6
 45239                           tablat	equ	0xFF5
 45240                           prodh	equ	0xFF4
 45241                           prodl	equ	0xFF3
 45242                           intcon	equ	0xFF2
 45243                           indf0	equ	0xFEF
 45244                           postinc0	equ	0xFEE
 45245                           fsr0h	equ	0xFEA
 45246                           fsr0l	equ	0xFE9
 45247                           wreg	equ	0xFE8
 45248                           indf1	equ	0xFE7
 45249                           postdec1	equ	0xFE5
 45250                           plusw1	equ	0xFE3
 45251                           fsr1h	equ	0xFE2
 45252                           fsr1l	equ	0xFE1
 45253                           bsr	equ	0xFE0
 45254                           indf2	equ	0xFDF
 45255                           postinc2	equ	0xFDE
 45256                           postdec2	equ	0xFDD
 45257                           plusw2	equ	0xFDB
 45258                           fsr2h	equ	0xFDA
 45259                           fsr2l	equ	0xFD9
 45260                           status	equ	0xFD8
 45261                           
 45262 ;; *************** function _ADCC_GetFilterValue *****************
 45263 ;; Defined at:
 45264 ;;		line 222 in file "mcc_generated_files/adcc.c"
 45265 ;; Parameters:    Size  Location     Type
 45266 ;;		None
 45267 ;; Auto vars:     Size  Location     Type
 45268 ;;		None
 45269 ;; Return value:  Size  Location     Type
 45270 ;;                  2    0[COMRAM] unsigned int 
 45271 ;; Registers used:
 45272 ;;		wreg, status,2, status,0
 45273 ;; Tracked objects:
 45274 ;;		On entry : 0/0
 45275 ;;		On exit  : 0/0
 45276 ;;		Unchanged: 0/0
 45277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45282 ;;Total ram usage:        4 bytes
 45283 ;; Hardware stack levels used:    1
 45284 ;; This function calls:
 45285 ;;		Nothing
 45286 ;; This function is called by:
 45287 ;;		_ADCPostProcessingCallback
 45288 ;; This function uses a non-reentrant model
 45289 ;;
 45290                           
 45291                           	psect	text142
 45292  019576                     __ptext142:
 45293                           	opt stack 0
 45294  019576                     _ADCC_GetFilterValue:
 45295                           	opt stack 16
 45296                           
 45297                           ;adcc.c: 225: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 45298                           
 45299                           ;incstack = 0
 45300  019576  5073               	movf	3955,w,c	;volatile
 45301  019578  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 45302  01957A  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 45303  01957C  5072               	movf	3954,w,c	;volatile
 45304  01957E  2403               	addwf	??_ADCC_GetFilterValue,w,c
 45305  019580  6E01               	movwf	?_ADCC_GetFilterValue,c
 45306  019582  0E00               	movlw	0
 45307  019584  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 45308  019586  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 45309  019588  0012               	return	
 45310  01958A                     __end_of_ADCC_GetFilterValue:
 45311                           	opt stack 0
 45312                           tosu	equ	0xFFF
 45313                           tosh	equ	0xFFE
 45314                           tosl	equ	0xFFD
 45315                           pclatu	equ	0xFFB
 45316                           pclath	equ	0xFFA
 45317                           tblptru	equ	0xFF8
 45318                           tblptrh	equ	0xFF7
 45319                           tblptrl	equ	0xFF6
 45320                           tablat	equ	0xFF5
 45321                           prodh	equ	0xFF4
 45322                           prodl	equ	0xFF3
 45323                           intcon	equ	0xFF2
 45324                           indf0	equ	0xFEF
 45325                           postinc0	equ	0xFEE
 45326                           fsr0h	equ	0xFEA
 45327                           fsr0l	equ	0xFE9
 45328                           wreg	equ	0xFE8
 45329                           indf1	equ	0xFE7
 45330                           postdec1	equ	0xFE5
 45331                           plusw1	equ	0xFE3
 45332                           fsr1h	equ	0xFE2
 45333                           fsr1l	equ	0xFE1
 45334                           bsr	equ	0xFE0
 45335                           indf2	equ	0xFDF
 45336                           postinc2	equ	0xFDE
 45337                           postdec2	equ	0xFDD
 45338                           plusw2	equ	0xFDB
 45339                           fsr2h	equ	0xFDA
 45340                           fsr2l	equ	0xFD9
 45341                           status	equ	0xFD8
 45342                           
 45343 ;; *************** function _ADCC_GetConversionResult *****************
 45344 ;; Defined at:
 45345 ;;		line 130 in file "mcc_generated_files/adcc.c"
 45346 ;; Parameters:    Size  Location     Type
 45347 ;;		None
 45348 ;; Auto vars:     Size  Location     Type
 45349 ;;		None
 45350 ;; Return value:  Size  Location     Type
 45351 ;;                  2    0[COMRAM] unsigned int 
 45352 ;; Registers used:
 45353 ;;		wreg, status,2, status,0
 45354 ;; Tracked objects:
 45355 ;;		On entry : 0/0
 45356 ;;		On exit  : 0/0
 45357 ;;		Unchanged: 0/0
 45358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45363 ;;Total ram usage:        4 bytes
 45364 ;; Hardware stack levels used:    1
 45365 ;; This function calls:
 45366 ;;		Nothing
 45367 ;; This function is called by:
 45368 ;;		_ADCPostProcessingCallback
 45369 ;; This function uses a non-reentrant model
 45370 ;;
 45371                           
 45372                           	psect	text143
 45373  01958A                     __ptext143:
 45374                           	opt stack 0
 45375  01958A                     _ADCC_GetConversionResult:
 45376                           	opt stack 16
 45377                           
 45378                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 45379                           
 45380                           ;incstack = 0
 45381  01958A  5064               	movf	3940,w,c	;volatile
 45382  01958C  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 45383  01958E  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 45384  019590  5063               	movf	3939,w,c	;volatile
 45385  019592  2403               	addwf	??_ADCC_GetConversionResult,w,c
 45386  019594  6E01               	movwf	?_ADCC_GetConversionResult,c
 45387  019596  0E00               	movlw	0
 45388  019598  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 45389  01959A  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 45390  01959C  0012               	return	
 45391  01959E                     __end_of_ADCC_GetConversionResult:
 45392                           	opt stack 0
 45393                           tosu	equ	0xFFF
 45394                           tosh	equ	0xFFE
 45395                           tosl	equ	0xFFD
 45396                           pclatu	equ	0xFFB
 45397                           pclath	equ	0xFFA
 45398                           tblptru	equ	0xFF8
 45399                           tblptrh	equ	0xFF7
 45400                           tblptrl	equ	0xFF6
 45401                           tablat	equ	0xFF5
 45402                           prodh	equ	0xFF4
 45403                           prodl	equ	0xFF3
 45404                           intcon	equ	0xFF2
 45405                           indf0	equ	0xFEF
 45406                           postinc0	equ	0xFEE
 45407                           fsr0h	equ	0xFEA
 45408                           fsr0l	equ	0xFE9
 45409                           wreg	equ	0xFE8
 45410                           indf1	equ	0xFE7
 45411                           postdec1	equ	0xFE5
 45412                           plusw1	equ	0xFE3
 45413                           fsr1h	equ	0xFE2
 45414                           fsr1l	equ	0xFE1
 45415                           bsr	equ	0xFE0
 45416                           indf2	equ	0xFDF
 45417                           postinc2	equ	0xFDE
 45418                           postdec2	equ	0xFDD
 45419                           plusw2	equ	0xFDB
 45420                           fsr2h	equ	0xFDA
 45421                           fsr2l	equ	0xFD9
 45422                           status	equ	0xFD8
 45423                           tosu	equ	0xFFF
 45424                           tosh	equ	0xFFE
 45425                           tosl	equ	0xFFD
 45426                           pclatu	equ	0xFFB
 45427                           pclath	equ	0xFFA
 45428                           tblptru	equ	0xFF8
 45429                           tblptrh	equ	0xFF7
 45430                           tblptrl	equ	0xFF6
 45431                           tablat	equ	0xFF5
 45432                           prodh	equ	0xFF4
 45433                           prodl	equ	0xFF3
 45434                           intcon	equ	0xFF2
 45435                           indf0	equ	0xFEF
 45436                           postinc0	equ	0xFEE
 45437                           fsr0h	equ	0xFEA
 45438                           fsr0l	equ	0xFE9
 45439                           wreg	equ	0xFE8
 45440                           indf1	equ	0xFE7
 45441                           postdec1	equ	0xFE5
 45442                           plusw1	equ	0xFE3
 45443                           fsr1h	equ	0xFE2
 45444                           fsr1l	equ	0xFE1
 45445                           bsr	equ	0xFE0
 45446                           indf2	equ	0xFDF
 45447                           postinc2	equ	0xFDE
 45448                           postdec2	equ	0xFDD
 45449                           plusw2	equ	0xFDB
 45450                           fsr2h	equ	0xFDA
 45451                           fsr2l	equ	0xFD9
 45452                           status	equ	0xFD8
 45453                           
 45454                           	psect	text144
 45455  000000                     __ptext144:
 45456                           	opt stack 0
 45457                           tosu	equ	0xFFF
 45458                           tosh	equ	0xFFE
 45459                           tosl	equ	0xFFD
 45460                           pclatu	equ	0xFFB
 45461                           pclath	equ	0xFFA
 45462                           tblptru	equ	0xFF8
 45463                           tblptrh	equ	0xFF7
 45464                           tblptrl	equ	0xFF6
 45465                           tablat	equ	0xFF5
 45466                           prodh	equ	0xFF4
 45467                           prodl	equ	0xFF3
 45468                           intcon	equ	0xFF2
 45469                           indf0	equ	0xFEF
 45470                           postinc0	equ	0xFEE
 45471                           fsr0h	equ	0xFEA
 45472                           fsr0l	equ	0xFE9
 45473                           wreg	equ	0xFE8
 45474                           indf1	equ	0xFE7
 45475                           postdec1	equ	0xFE5
 45476                           plusw1	equ	0xFE3
 45477                           fsr1h	equ	0xFE2
 45478                           fsr1l	equ	0xFE1
 45479                           bsr	equ	0xFE0
 45480                           indf2	equ	0xFDF
 45481                           postinc2	equ	0xFDE
 45482                           postdec2	equ	0xFDD
 45483                           plusw2	equ	0xFDB
 45484                           fsr2h	equ	0xFDA
 45485                           fsr2l	equ	0xFD9
 45486                           status	equ	0xFD8
 45487                           
 45488                           	psect	rparam
 45489  0000                     tosu	equ	0xFFF
 45490                           tosh	equ	0xFFE
 45491                           tosl	equ	0xFFD
 45492                           pclatu	equ	0xFFB
 45493                           pclath	equ	0xFFA
 45494                           tblptru	equ	0xFF8
 45495                           tblptrh	equ	0xFF7
 45496                           tblptrl	equ	0xFF6
 45497                           tablat	equ	0xFF5
 45498                           prodh	equ	0xFF4
 45499                           prodl	equ	0xFF3
 45500                           intcon	equ	0xFF2
 45501                           indf0	equ	0xFEF
 45502                           postinc0	equ	0xFEE
 45503                           fsr0h	equ	0xFEA
 45504                           fsr0l	equ	0xFE9
 45505                           wreg	equ	0xFE8
 45506                           indf1	equ	0xFE7
 45507                           postdec1	equ	0xFE5
 45508                           plusw1	equ	0xFE3
 45509                           fsr1h	equ	0xFE2
 45510                           fsr1l	equ	0xFE1
 45511                           bsr	equ	0xFE0
 45512                           indf2	equ	0xFDF
 45513                           postinc2	equ	0xFDE
 45514                           postdec2	equ	0xFDD
 45515                           plusw2	equ	0xFDB
 45516                           fsr2h	equ	0xFDA
 45517                           fsr2l	equ	0xFD9
 45518                           status	equ	0xFD8
 45519                           
 45520                           	psect	temp
 45521  00005F                     btemp:
 45522                           	opt stack 0
 45523  00005F                     	ds	1
 45524  0000                     int$flags	set	btemp
 45525  0000                     wtemp6	set	btemp+1
 45526                           tosu	equ	0xFFF
 45527                           tosh	equ	0xFFE
 45528                           tosl	equ	0xFFD
 45529                           pclatu	equ	0xFFB
 45530                           pclath	equ	0xFFA
 45531                           tblptru	equ	0xFF8
 45532                           tblptrh	equ	0xFF7
 45533                           tblptrl	equ	0xFF6
 45534                           tablat	equ	0xFF5
 45535                           prodh	equ	0xFF4
 45536                           prodl	equ	0xFF3
 45537                           intcon	equ	0xFF2
 45538                           indf0	equ	0xFEF
 45539                           postinc0	equ	0xFEE
 45540                           fsr0h	equ	0xFEA
 45541                           fsr0l	equ	0xFE9
 45542                           wreg	equ	0xFE8
 45543                           indf1	equ	0xFE7
 45544                           postdec1	equ	0xFE5
 45545                           plusw1	equ	0xFE3
 45546                           fsr1h	equ	0xFE2
 45547                           fsr1l	equ	0xFE1
 45548                           bsr	equ	0xFE0
 45549                           indf2	equ	0xFDF
 45550                           postinc2	equ	0xFDE
 45551                           postdec2	equ	0xFDD
 45552                           plusw2	equ	0xFDB
 45553                           fsr2h	equ	0xFDA
 45554                           fsr2l	equ	0xFD9
 45555                           status	equ	0xFD8


Data Sizes:
    Strings     10159
    Constant    270
    Data        43
    BSS         377
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256    187     233
    BANK2           256     83     255
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_111(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_111(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_111(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_111(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_68(CODE[10]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_146(CODE[5]), STR_144(CODE[9]), STR_142(CODE[29]), STR_140(CODE[34]), 
		 -> STR_138(CODE[33]), STR_136(CODE[29]), STR_134(CODE[17]), STR_132(CODE[17]), 
		 -> STR_130(CODE[14]), STR_128(CODE[19]), STR_126(CODE[20]), STR_124(CODE[11]), 
		 -> STR_122(CODE[17]), STR_120(CODE[14]), STR_118(CODE[16]), STR_109(CODE[13]), 
		 -> STR_105(CODE[17]), STR_102(CODE[14]), STR_100(CODE[12]), STR_98(CODE[16]), 
		 -> STR_96(CODE[15]), STR_94(CODE[16]), STR_92(CODE[15]), STR_90(CODE[21]), 
		 -> STR_88(CODE[21]), STR_86(CODE[26]), STR_84(CODE[14]), STR_82(CODE[13]), 
		 -> STR_80(CODE[18]), STR_78(CODE[15]), STR_76(CODE[16]), STR_73(CODE[17]), 
		 -> STR_71(CODE[16]), STR_60(CODE[11]), STR_57(CODE[10]), STR_55(CODE[13]), 
		 -> STR_53(CODE[11]), STR_50(CODE[4]), STR_49(CODE[6]), STR_47(CODE[16]), 
		 -> STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_166(CODE[7]), printf@c(BANK1[1]), STR_165(CODE[16]), STR_164(CODE[22]), 
		 -> STR_163(CODE[21]), STR_162(CODE[27]), STR_161(CODE[41]), STR_160(CODE[32]), 
		 -> STR_159(CODE[19]), STR_158(CODE[16]), STR_157(CODE[15]), STR_156(CODE[16]), 
		 -> STR_155(CODE[10]), STR_154(CODE[13]), STR_153(CODE[12]), ringBufferLUT@channel_name(BANK2[22]), 
		 -> TRIAC_Firing_Angle(BANK0[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2974
		 -> STR_152(CODE[30]), STR_151(CODE[46]), STR_150(CODE[39]), STR_149(CODE[62]), 
		 -> STR_148(CODE[55]), STR_147(CODE[470]), STR_145(CODE[2974]), STR_143(CODE[492]), 
		 -> STR_141(CODE[688]), STR_139(CODE[720]), STR_137(CODE[922]), STR_135(CODE[54]), 
		 -> STR_133(CODE[54]), STR_131(CODE[45]), STR_129(CODE[51]), STR_127(CODE[52]), 
		 -> STR_125(CODE[46]), STR_123(CODE[51]), STR_121(CODE[53]), STR_119(CODE[58]), 
		 -> STR_117(CODE[71]), STR_116(CODE[63]), STR_115(CODE[37]), STR_114(CODE[46]), 
		 -> STR_113(CODE[102]), STR_112(CODE[86]), STR_110(CODE[25]), STR_108(CODE[42]), 
		 -> STR_107(CODE[53]), STR_106(CODE[31]), STR_104(CODE[29]), STR_103(CODE[28]), 
		 -> STR_101(CODE[42]), STR_99(CODE[41]), STR_97(CODE[40]), STR_95(CODE[73]), 
		 -> STR_93(CODE[56]), STR_91(CODE[34]), STR_89(CODE[34]), STR_87(CODE[32]), 
		 -> STR_85(CODE[37]), STR_83(CODE[58]), STR_81(CODE[36]), STR_79(CODE[36]), 
		 -> STR_77(CODE[37]), STR_75(CODE[45]), STR_74(CODE[66]), STR_72(CODE[21]), 
		 -> STR_70(CODE[24]), STR_69(CODE[48]), STR_59(CODE[54]), STR_58(CODE[64]), 
		 -> STR_56(CODE[59]), STR_54(CODE[85]), STR_52(CODE[47]), STR_51(CODE[17]), 
		 -> STR_48(CODE[52]), STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), dimmingOffTimeCallback(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), dimmingOffTimeCallback(), Absolute function(), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_164(CODE[22]), STR_163(CODE[21]), STR_162(CODE[27]), STR_161(CODE[41]), 
		 -> STR_160(CODE[32]), STR_159(CODE[19]), STR_158(CODE[16]), STR_157(CODE[15]), 
		 -> STR_156(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_155(CODE[10]), STR_154(CODE[13]), STR_153(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_155(CODE[10]), STR_154(CODE[13]), STR_153(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> ringBufferLUT@channel_name(BANK2[22]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_155(CODE[10]), STR_154(CODE[13]), STR_153(CODE[12]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_165(CODE[16]), STR_164(CODE[22]), STR_163(CODE[21]), STR_162(CODE[27]), 
		 -> STR_161(CODE[41]), STR_160(CODE[32]), STR_159(CODE[19]), STR_158(CODE[16]), 
		 -> STR_157(CODE[15]), STR_156(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _dimmingOffTimeCallback->_TMR5_WriteTimer
    _HLVD_ISR->i2_writeDoubleToEEPROM
    i2_writeDoubleToEEPROM->i2_DATAEE_WriteByte
    i2_printf->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADCPostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    _ADCC_ThresholdISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___fldiv->___fladd
    _terminal_clearTerminal->_printf
    _printf->___fltol
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___fldiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    ___flneg->___xxtofl
    _saveSRAMMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _recoverSRAMMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  904320
                                             81 BANK2      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT0_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
                     _TMR5_StopTimer
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
           _recoverSRAMMaxFromEEPROM
                _saveSRAMMaxToEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0  107778
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  544945
                                            184 BANK1      3     3      0
                                             75 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       63    61      2  543754
                                            180 BANK1      4     2      2
                                             16 BANK2     59    59      0
                     _TMR5_StopTimer
                     _TMR7_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  130455
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  130455
                                            178 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     741
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    7213
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0  107778
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    2624
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     722
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     736
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     468
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2188
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4   10666
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2    1328
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0    1208
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0    1208
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     374
                                             36 BANK1     10     8      2
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2    1143
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4    1143
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     537
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2     110
                                             23 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2892
                                             29 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    5836
                                             61 BANK1     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR7_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      75
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0  107778
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              49    39     10  107778
                                            130 BANK1     48    38     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   19536
                                            111 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     165
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0     110
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     185
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   19041
                                            111 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   12024
                                             86 BANK1     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    3047
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    3335
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6    1133
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8    1133
                                             23 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1808
                                             23 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1953
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1427
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1457
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1272
                                            120 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   10282
                                             61 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    9486
                                             41 BANK1     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4    1343
                                             37 BANK1      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _saveSRAMMaxToEEPROM                                  0     0      0    8686
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    4264
                                             27 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     478
                                             23 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    4422
                                             23 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _recoverSRAMMaxFromEEPROM                             0     0      0    2271
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    2271
                                             25 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     234
                                             23 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1297
                    _ADCC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManagerLow                       21    21      0     271
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR7_ISR                                             0     0      0     271
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _acquisitionTimerCallback                            0     0      0      31
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (11) _ADCC_StartConversion                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (10) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0  202025
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _HLVD_ISR
                           _INT0_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR5_ISR                                            0     0      0     316
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
              _dimmingOnTimeCallback *
 ---------------------------------------------------------------------------------
 (14) _dimmingOnTimeCallback                               0     0      0       0
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT0_ISR                                            0     0      0     316
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (14) _INT0_CallBack                                       0     0      0     316
                   Absolute function *
       _INT0_DefaultInterruptHandler *
             _dimmingOffTimeCallback *
 ---------------------------------------------------------------------------------
 (15) _dimmingOffTimeCallback                              0     0      0     316
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR5_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR5_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _HLVD_ISR                                            0     0      0     350
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (14) i2_writeDoubleToEEPROM                              12     6      6     350
                                              4 COMRAM    12     6      6
                 i2_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (15) i2_DATAEE_WriteByte                                  4     1      3     141
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0   41165
                           i2_printf
 ---------------------------------------------------------------------------------
 (14) i2_printf                                           41    39      2   41165
                                             40 BANK0     40    38      2
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                             9     5      4    7749
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (15) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (16) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           13     9      4    7470
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) _ADCC_ThresholdISR                                   0     0      0  159878
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (14) _ADCPostProcessingCallback                          21    21      0  159878
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _peakToRMS                                          24    16      8  102522
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _acos                                                8     4      4   48677
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (17) _asin                                               24    20      4   43433
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (16) _sqrt                                               29    25      4    1493
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (18) _atan                                               21    17      4   26339
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (18) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (15) _currentMeasuredToPeak                              12     4      8   41238
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (16) _sin                                                17    13      4   38250
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (15) i2___flsub                                           8     0      8    4649
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fldiv                                          25    17      8    2675
                                             18 COMRAM    25    17      8
                _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) _floor                                              10     6      4    8139
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (15) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___flge                                           12     4      8    1386
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (18) _frexp                                               8     2      6     478
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (17) _eval_poly                                          16     8      8   10620
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (16) i2___flmul                                          25    17      8    4912
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___fladd                                          20    12      8    4374
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) _abs                                                 4     2      2     363
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT0_SetInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR5_StopTimer
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _recoverSRAMMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveSRAMMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR5_StopTimer
       _TMR7_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
             ___xxtofl
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetFilterValue (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetFilterValue (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_TMR7_StopTimer
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetFilterValue (ARG)
         i2___fldiv (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flsub
         _floor (ARG)
           _frexp
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fltol
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
   _HLVD_ISR *
     i2_writeDoubleToEEPROM
       i2_DATAEE_WriteByte
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _dimmingOffTimeCallback *
         _TMR5_StartTimer
         _TMR5_WriteTimer
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _dimmingOnTimeCallback *
       i2_TMR5_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C0      12       75.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     53      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BB      E9       7       91.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A2       8        0.0%
DATA                 0      0     3A2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 08 10:37:59 2018

                           ??i2_TMR7_StopTimer 0001                 ringBufferLUT@max_voltage_print 02B9  
                     getDeviceIDString@strings 0128                                   ___fldiv@aexp 0155  
                                 ___fldiv@bexp 0154                   __end_of_readDoubleFromEEPROM 8BB8  
             __end_of_TMR5_SetInterruptHandler 963A                                   ___fldiv@sign 0149  
                  __size_ofi2_DATAEE_WriteByte 003A                                    __CFG_CP$OFF 000000  
                                           l59 94F2                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 96B4                                             bsr 000FE0  
                          ___wmul@multiplicand 0119                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                 __end_of_heartbeatTimerCallback 8FC6  
                          _saveSRAMMaxToEEPROM 67D8                                            l402 8D50  
                                          l403 8D4C                                            l405 8D66  
                                          l406 8D8C                                            l407 8D8A  
                                          l803 8FF0                                            l395 8E34  
                                          l396 8E30                                            l398 8E5E  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                   ??_INT0_SetInterruptHandler 011A                                            _Ipk 01CB  
                                          _Vpk 0220                                            _abs 92E6  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString 8A5A                                            _sin 5738  
                   currentMeasuredToPeak@Angle 009D                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 7012                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                    i2___flmul@a 0034  
                                  i2___flmul@b 0030                                  _INT0_CallBack 941E  
                                  i2___flsub@a 0084                                    i2___flsub@b 0080  
                             ??_TMR7_StopTimer 0117                                   ___flmul@aexp 0163  
                                 ___flmul@bexp 0164                                   ___flmul@sign 0162  
                                 ___flmul@temp 016D                                   ___flmul@prod 0169  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___fltol@exp1 0181                                           l1015 683E  
                                         l1016 68A4                                           l1120 7790  
                                         l1017 690A                                           l1018 6970  
                                         l1122 77FC                                           l1019 69D6  
                                         l2003 7E5C                                           l1123 77CE  
                                         ?_abs 0076                                           l2004 7E50  
                                         l1117 7770                                           l2006 7E78  
                                         l1150 4402                                           l1302 006C  
                                         l1151 441A                                           l1119 77AE  
                                         l2112 945C                                           l1160 4504  
                                         l1152 4432                                           l1400 105C  
                                         l1320 0436                                           l1312 01CE  
                                         l1304 00A8                                           l1161 451C  
                                         l1153 444A                                           l1321 0412  
                                         l1170 4612                                           l1162 4534  
                                         l1146 447A                                           l1154 4462  
                                         l1410 131C                                           l1402 1214  
                                         l1322 03C6                                           l1330 0396  
                                         l1314 0232                                           l1306 00FA  
                                         l1171 462A                                           l1155 4594  
                                         l1163 454C                                           l1147 43D2  
                                         l1331 03AE                                           l1323 0306  
                                         l2052 72C6                                           l1172 4642  
                                         l1164 4564                                           l1156 44BC  
                                         l1148 44A4                                           l1412 135E  
                                         l1404 1256                                           l1340 0544  
                                         l1324 03F6                                           l1316 02CE  
                                         l1308 0168                                           l2301 60A0  
                                         l1173 465A                                           l1157 45CA  
                                         l1165 457C                                           l1149 43EA  
                                         l1325 031E                                           l1317 0288  
                                         l2142 84EE                                           l2054 72F2  
                                         l2310 6164                                           l2302 614E  
                                         l1166 46BA                                           l1174 4672  
                                         l1158 44D4                                           l1406 1298  
                                         l1350 06DE                                           l1342 0596  
                                         l1334 0486                                           l1326 0336  
                                         l1078 80EE                                           l2143 84FC  
                                         l2055 732C                                           l2303 60FE  
                                         l1431 8A2C                                           l1175 468A  
                                         l1167 45E2                                           l1159 44EC  
                                         l1327 034E                                           l2240 4E32  
                                         l2152 8974                                           l2064 73B4  
                                         l2056 7354                                           l1600 19F6  
                                         l2320 624C                                           l2304 6126  
                                         l1432 8A0E                                           l1168 46F0  
                                         l1176 46A2                                           l1408 12DA  
                                         l1360 0870                                           l1352 0730  
                                         l1344 05E8                                           l1336 04F2  
                                         l1328 0366                                           l2241 4E2E  
                                         l2153 8982                                           l2065 73A8  
                                         l2321 6258                                           l1169 45FA  
                                         l1337 04CE                                           l1329 037E  
                                         l1450 8BD8                                           l2250 4EFA  
                                         l2138 84BA                                           l2058 7390  
                                         l2330 4788                                           l1610 1B46  
                                         l2322 625A                                           l2306 614C  
                                         l1370 0A02                                           l1362 08BE  
                                         l1354 0782                                           l1346 063A  
                                         l2243 4E8E                                           l2235 4DEA  
                                         l2139 84AE                                           l2059 7380  
                                         l2331 4784                                           l1531 5F6A  
                                         l1611 1B60                                           l1435 8A18  
                                         l1371 09B8                                           l1452 8BE0  
                                         l1444 8BC0                                           l2244 4E52  
                                         l2236 4DE6                                           l2148 894C  
                                         l2332 4798                                           l2316 61BA  
                                         l1436 8A22                                           l2420 837A  
                                         l2404 88CE                                           l1364 0906  
                                         l1356 07D4                                           l1348 068C  
                                         l2261 4FF0                                           l2253 4F68  
                                         l2149 8940                                           l2333 47B6  
                                         l1541 3EFC                                           l2309 6182  
                                         l2421 83B6                                           l2405 88FE  
                                         l1381 0B40                                           l1373 09DE  
                                         l1454 8BE8                                           l1446 8BC8  
                                         l2270 5044                                           l2254 4F2E  
                                         l2430 6F2E                                           l2350 4A52  
                                         l2326 4748                                           l1534 3CE2  
                                         l1630 1CC6                                           l1622 1C6C  
                                         l1614 1B8E                                           l1606 1AD4  
                                         l2318 61FE                                           l1390 0DDC  
                                         l1366 0970                                           l1358 0826  
                                         l2263 5000                                           l2247 4F0A  
                                         l2327 4744                                           l1535 3BEA  
                                         l1631 1E10                                           l1623 1BD8  
                                         l1615 1B80                                           l2319 6222  
                                         l1463 927E                                           l2407 891A  
                                         l1367 094C                                           l1456 8BF0  
                                         l1448 8BD0                                           l2248 4EE8  
                                         l2432 6F40                                           l2344 49AE  
                                         l2328 4758                                           l1528 5E7A  
                                         l1632 1D28                                           l2408 890A  
                                         l1392 0E5C                                           l1376 0A4A  
                                         l2257 4F52                                           l2249 4EF6  
                                         l2433 6F34                                           l2337 4976  
                                         l1641 1F46                                           l1625 1C86  
                                         l1561 1744                                           l1545 142C  
                                         l1474 8CA8                                           l2282 50D0  
                                         l2266 5024                                           l2258 4F56  
                                         l2346 49F2                                           l2338 4958  
                                         l1538 3CB0                                           l1642 1EC2  
                                         l1634 1E2A                                           l1626 1C78  
                                         l1618 1BAE                                           l1570 1614  
                                         l1554 14B6                                           l1546 143E  
                                         l1394 0EDC                                           l1386 0D0A  
                                         l1378 0CB8                                           l2283 50D8  
                                         l2275 5064                                           l2443 6FCE  
                                         l2435 6F7E                                           l2347 4A10  
                                         l1539 3E36                                           l1635 1E1C  
                                         l1619 1BA0                                           l1571 163C  
                                         l2419 83E2                                           l1379 0A84  
              ??_ADCC_DischargeSampleCapacitor 0100                                           l2284 50DA  
                                         l2268 503A                                           l2444 7000  
                                         l2436 6F66                                           l2428 6F00  
                                         l1660 2010                                           l1652 1F78  
                                         l1628 1CAA                                           l1580 16BE  
                                         l1572 164C                                           l1564 160C  
                                         l1556 15FE                                           l1548 145A  
                                         l2292 5FF2                                           l1396 0F5C  
                                         l1388 0D5C                                           l1477 8B76  
                                         l2429 6F10                                           l2349 4A34  
                                         l1661 2048                                           l1637 1E84  
                                         l1629 1CAE                                           l1565 17B2  
                                         l1573 1646                                           l1557 15D2  
                                         l1549 1452                                           l2293 5FEE  
                                         l1478 8BA6                                           l2278 50AA  
                                         l2438 6FB0                                           l1662 202E  
                                         l1654 1F98                                           l1590 1814  
                                         l1582 1704                                           l1558 157E  
                                         l2374 8D0A                                           l1398 0FDC  
                                         l2439 6FA4                                           l1911 8468  
                                         l1671 219C                                           l1655 1FBA  
                                         l1647 1F5C                                           l1639 1EA8  
                                         l1583 16D8                                           l2383 8C16  
                                         l2391 9102                                           l2375 8D04  
                                         l1912 8472                                           l1904 841A  
                                         l1920 8742                                           l1648 1F04  
                                         l1592 1882                                           l1576 169E  
                                         l1568 1610                                           l2296 6032  
                                         l2384 8C0C                                           l2392 90F8  
                                         l2480 8354                                           l1913 8480  
                                         l1905 842A                                           l1921 873A  
                                         l1673 217E                                           l1657 1FDC  
                                         l1593 1902                                           l1585 1718  
                                         l1577 16B4                                           l2297 602E  
                                         l2473 90D2                                           l2377 8D24  
                                         l1674 2082                                           l1658 1FE4  
                                         l1586 172C                                           l2378 8D1A  
                                         l1907 8448                                           l1659 2008  
                                         l1595 1930                                           l1587 173E  
                                         l1579 16C4                                           l2299 6078  
                                         l1908 8440                                           l1924 875A  
                                         l1676 2196                                           l1588 1E34  
                                         l1596 197A                                           l1925 8764  
                                         l1917 8720                                           l1677 2106  
                                         l1597 1A5C                                           l1589 17C6  
                                         l2397 8ACA                                           l1950 753C  
                                         l1926 8772                                           l1918 872C  
                                         l2398 8AC4                                           l2478 835C  
                         _ADCC_StartConversion 9672                                           l1951 757E  
                                         l2479 82EA                                           l1960 7610  
                                         l1952 75AE                                           l1961 7604  
                                         l1954 75EC                                           l1955 75DC  
                                         l1891 8002                                           l1972 92A6  
                                         l1948 751E                                           l1892 7FC4  
                                         l1965 78AA                                           l1885 7F70  
                                         l1966 78DE                                           l1894 8036  
                                         l1886 7F6A                                           l1967 791C  
                                         l1968 795A                                           l1888 7FB2  
                                         l1995 7DCC                                           l1997 7E38  
                                         l1998 7E28                                           ?_sin 0088  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC4  
                                         STR_2 FFAF                                           STR_3 FFB8  
                                         STR_4 F0C9                                           STR_6 FFAF  
                                         STR_7 FFB8                                           STR_9 FFBC  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 019D                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                          _writeDoubleToEEPROM 8C5A                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                                 i2___flge@ff1 0034                                   i2___flge@ff2 0038  
                                         _Irms 01C3                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 8D46                ??_ADCC_HasAccumulatorOverflowed 0001  
                                         _Vrms 01BF                                           abs@a 0076  
                                         _acos 87EC                                           _fabs 9040  
               ringBufferLUT@max_current_print 02B1                                           _atan 6C88  
                                         _asin 5434                                           _atoi 7F68  
                                         _main 8040                           ?_saveSRAMMaxToEEPROM 0001  
                                         _line 0247                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
               __size_of_ADCC_ClearAccumulator 0006                                           _sqrt 5A32  
                                 i2___flneg@f1 002C                  __end_of_ADCC_ClearAccumulator 96CE  
                                         sin@f 0088                                           sin@y 008C  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FE                                _timer5ReloadVal 023F  
                                 i2___fltol@f1 006C                                ___fldiv@new_exp 014E  
                              __end_ofi2_scale 43AE                   __end_of_EUSART2_Transmit_ISR 915A  
                              __end_ofi2_putch 96AC                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
                        _dimmingOnTimeCallback 9680                readDoubleFromEEPROM@output_data 011D  
                     __size_ofi2_EUSART2_Write 004A                                          ??_abs 0078  
                    __size_of_DATAEE_WriteByte 003E                                _timer7ReloadVal 0241  
                                        ??_sin 005E                           ?_writeDoubleToEEPROM 011B  
                             __end_of_INT0_ISR 96A2                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0124                               __end_of_HLVD_ISR 9258  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 94F8  
                     ?_terminal_textAttributes 01B2                              ??_TMR7_WriteTimer 0102  
                                        l20004 02C8                                          l20170 0AF0  
                                        l20154 0A74                                          l20172 0B40  
                                        l20164 0ABA                                          l20380 7760  
                                        l20390 7786                                          l20556 8A46  
                                        l20558 8A50                                          l19140 16D8  
                                        ?_acos 00A9                                          l19216 19C8  
                                        l19208 197A                                          l19136 16BE  
                                        l18274 7992                                          ?_fabs 0030  
                                        l19236 1AD8                                          l19262 1B80  
                                        l19360 1F08                                          l19434 217E  
                                        l19346 1EC6                                          l19602 82EA  
                                        l19268 1BA0                                          l19286 1C78  
                                        l19462 890A                                          l19638 8C74  
                                ___fltol@sign1 0180                                          l19916 624C  
                                        ?_atan 007C                                          l19788 7FFE  
                                        l19994 0278                                          ?_asin 0091  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 011D  
                              __end_of___fladd 50F6                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                __end_of___fldiv 6276  
                                        _ADREF 000F58                                __end_of___awdiv 848A  
                              __end_of___flneg 92B8                                          _ADPRE 000F5E  
                                        STR_10 FFC0                                          STR_11 FFF5  
                                        STR_12 FFC9                                          STR_20 FFC8  
                                        STR_13 FCC4                                          STR_21 FFCB  
                                        STR_30 FF38                                          STR_14 FFDE  
                                        STR_22 FFD1                                          STR_15 FFE4  
                                        STR_23 FFD7                                          STR_31 FFCE  
                                        STR_40 EA54                                          STR_16 FFF0  
                                        STR_24 FFDD                                          STR_32 FFD4  
                                        STR_41 FDE7                                          STR_17 FFF8  
                                        STR_25 FFE3                                          STR_33 FFDA  
                                        STR_18 FFC9                                          STR_42 FFAF  
                                        STR_26 FFE9                                          STR_34 FFE0  
                                        STR_50 FFB4                                          STR_43 FFB8  
                                        STR_19 FFFA                                          STR_27 FFEF  
                                        STR_35 FFE6                                          STR_51 FD77  
                                        STR_28 FFEF                                          STR_36 FFEC  
                                        STR_44 FF9F                                          STR_60 FF5D  
                                        STR_52 F805                                __end_of___awmod 877C  
                                        STR_29 FFFA                                          STR_45 FFAF  
                                        STR_37 FFF2                                          STR_61 FFA5  
                                        STR_53 FF47                                          STR_38 FFF2  
                                        STR_46 FFB8                                          STR_62 FF93  
                                        STR_70 FC82                                          STR_54 F2F9  
                                        STR_39 FFFC                                          STR_63 FF8C  
                                        STR_55 FF08                                          STR_71 FE4D  
                                        STR_47 FE1D                                          STR_64 FEDF  
                                        STR_80 FD54                                          STR_72 FCDB  
                                        STR_48 F707                                          STR_56 F4DD  
                                        _ADRPT 000F66                                          STR_49 FF99  
                                        STR_57 FF68                                          STR_65 FEED  
                                        STR_73 FDAA                                          STR_81 FA7C  
                                        STR_82 FF15                                          STR_66 FE99  
                                        STR_90 FCF0                                          STR_58 F420  
                                        STR_74 F3DE                                          STR_67 FCB0  
                                        STR_91 FAE6                                          STR_75 F8EB  
                                        STR_59 F631                                          STR_83 F552  
                                        STR_68 FF72                                          STR_84 FEA7  
                                        STR_92 FE7B                                          STR_76 FDFD  
                                        STR_77 FA32                                          STR_85 FA0D  
                                        STR_69 F7D5                                          STR_93 F58C  
                                        STR_78 FE6C                                          STR_94 FE2D  
                                        STR_86 FC36                                          STR_87 FB4B  
                                        STR_79 FAA0                                          STR_95 F34E  
                                        STR_96 FE8A                                          STR_88 FD05  
                              __end_of___flmul 4A68                                          STR_89 FAC4  
                                        STR_97 F9BE                                          STR_98 FE3D  
                                        STR_99 F995                                __end_of___flsub 8EB8  
                              __end_of___fltol 7E8A                                __end_of___lldiv 850E  
                                        ?_sqrt 006C                                ___awdiv@divisor 011F  
                              __end_of___llmod 8994                                          _T5CLK 000FC6  
                                        u24200 50B6                                          u24120 5048  
                                        u25100 147C                                          u24150 5060  
                                        u24310 47A4                                          u25110 14A4  
                                        u24400 4A00                                          u24320 491A  
                                        _T5CON 000FC3                                          u25050 6FBA  
                                        u24410 4A1E                                          u25130 1500  
                                        u25107 1472                                          u25300 1774  
                                        u25220 167A                                          u25140 153C  
                                        u24325 4910                                          u25117 149A  
                                        u25230 1680                                          u25150 1544  
                                        _T7CLK 000F33                                          u26040 8BA6  
                                        u24520 8746                                          u25160 1566  
                                        _T6CON 000FB1                                          u25137 14F6  
                                        u24370 49AA                                          u26130 83FA  
                                        u25307 176A                                          u25227 1670  
                                        u25147 1532                                          u24460 844C  
                                        u25420 19C8                                          u25180 15B6  
                                        u26060 8C4E                                          u25190 15F4  
                               __CFG_DEBUG$OFF 000000                                          u25167 155C  
                                        u24720 73BA                                          u25520 1BBC  
                                        u25280 16FA                                          u26400 620C  
                                        _T7CON 000F30                                          u24641 72AA  
                                        u26081 8A04                                          u26410 6230  
                                        u25187 15AC                                          u23940 4EBE  
                                        u25460 1B16                                          u25380 1940  
                                        u24661 72D6                                          u25197 15EA  
                                        u23950 4ECE                                          u24910 7E62  
                                        u25550 1C94                                          u25390 198C  
                                        u25287 16F0                                          u26095 9030  
                                        u23960 4ED0                                          u25560 1CA4  
                                        u25810 2050                                          u26370 61B6  
                                        u27170 7786                                          u24940 84BE  
                                        u25820 2066                                          u26540 02C8  
                                        _T6HLT 000FB2                                          u23990 4F12  
                                        u24870 7DEA                                          u24790 7616  
                                        u25840 21AE                     _ADCC_ADTI_InterruptHandler 0231  
                                        u24970 8950                                          u25850 21DE  
                                        u26490 0138                                          u24875 7DE0  
                                        u27427 8054                                          u25940 8AEC  
                                        u26820 0ABA                                          u26830 0AE2  
                                        u25935 9000                                          u25936 9002  
                                        u26840 0AF0                                          u25857 21D4  
                                        u25970 831C                                          u25947 8AE2  
                                        i1l241 009C                                          i1l243 00A6  
                                        i1l239 007C                                          i1l417 9154  
                                        i1l418 9150                                          i2l230 7D56  
                                        i2l232 7D60                                          i2l224 7D1E  
                                        i2l402 8DE6                                          i2l226 7D2A  
                                        i2l403 8DE2                                          i2l228 7D4A  
                                        i2l405 8DFC                                          i2l406 8E22  
                                        i2l430 81A2                                          i1l654 93C6  
                                        i2l407 8E20                                          i2l423 8108  
                                        i2l424 812C                                          i2l425 814E  
                                        i2l428 8152                                          _T6TMR 000FAF  
                                        _T6RST 000FB4                                          i2l803 90A4  
                                        i2l728 950A                                ___awdiv@counter 0121  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 7628  
                                        _TRISA 000F81                                          _TRISB 000F82  
                               ?_INT0_CallBack 0001                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a D82B  
                           __end_ofsin@coeff_b D84F                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                        _Imeas 01C7                                  __CFG_WRT3$OFF 000000  
                                __CFG_PWRTE$ON 000000                                  __CFG_WRT4$OFF 000000  
                                i2___fladd@grs 006B                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 91C2  
                             __end_of_TMR6_ISR 9360                               __end_of_TMR7_ISR 918E  
                              _DATAEE_ReadByte 952E                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                      ??_terminal_ringBufferPull 01B8  
                              __end_of_dpowers D7D1                                          acos@x 00A9  
                                        fabs@d 0030                                     i2scale@scl 0051  
                                        _floor 7AB6          i2writeDoubleToEEPROM@starting_address 0009  
          writeDoubleToEEPROM@starting_address 011F                                          _frexp 8690  
                                        _errno 023D                          ?_ADCC_StartConversion 0001  
                                        _scale 3A8A                                __end_of_isdigit 9464  
                                        atan@f 007C                                          atan@x 0084  
                                        atan@y 0080                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 0122                                          atoi@s 011D  
                                        _putch 9602                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 7AB6                                          sin@x2 0094  
                                        tablat 000FF5          __end_of_max_POS3P3_ADC_Result_address D7F9  
                _max_POS3P3_ADC_Result_address D7F7                               __end_ofi2___wmul 93FA  
                        ??_saveSRAMMaxToEEPROM 0127                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 0117  
                 __size_of_ADCC_GetFilterValue 0014                                          sqrt@a 006C  
                                        sqrt@i 0075                                          sqrt@p 007A  
                                        status 000FD8                                          wtemp6 0060  
                                i2___flmul@grs 003E                                __end_of_strncmp 8378  
                              __end_of_strncpy 892C                               __end_ofi2_fround 67D8  
               ?_INTERRUPT_InterruptManagerLow 0001                    ringBufferLUT@max_temp_print 02C1  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0129  
                           __size_ofi2___flmul 0350                                  i2printf@width 00AB  
                           __size_ofi2___flsub 0048                             __size_ofi2___fltol 00DE  
                           __size_ofi2___lldiv 0082                    ??_ADCPostProcessingCallback 005E  
                           __size_ofi2___llmod 0066                               __end_ofi2_printf 2FB0  
                     __size_of_HLVD_Initialize 0010                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 9656         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 9648                                _TMR5_Initialize 8CAA  
                              __initialization 8256                              i2___lldiv@divisor 0005  
                                 __end_of_acos 885A                                   __end_of_fabs 907C  
                                 __end_of_atan 6EBE                                   __end_of_asin 5738  
                                 __end_of_atoi 8040                                   __end_of_main 80FC  
                            i2___lldiv@counter 000D                               _max_Irms_address D7FB  
                                 __end_of_sqrt 5CFA                                     i2printf@ap 0099  
                                   i2printf@cp 0095                          ??_writeDoubleToEEPROM 0121  
                        __end_of_ringBufferLUT 141E                                 __CFG_SCANE$OFF 000000  
                        _max_POS3P3_ADC_Result 020C                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                       ??_acos 005E                                         ??_fabs 0034  
                                       ??_atan 005E                                         ??_asin 005E  
                                       ??_atoi 011F                                         ??_main 02D8  
             __end_of_recoverSRAMMaxFromEEPROM 7298                       _TMR5_SetInterruptHandler 962C  
                                       ??_sqrt 0070                                  __activetblptr 000003  
                      __size_of_FLASH_ReadByte 001A                        __size_of_FLASH_ReadWord 0042  
                   __size_of_getDeviceIDString 0060                           __size_of__tdiv_to_l_ 0134  
                                  ?i2___xxtofl 0005                         getUserID@initialOffset 0125  
                              _TMR6_Initialize 91F4                             _TRIAC_Firing_Angle 00F2  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 88C4                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01E1  
                                       ?_floor 0076                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             ___llmod@dividend 0124                                         _ADLTHH 000F6B  
                                       ?_scale 016F                                         STR_100 FF3B  
                                       _ADLTHL 000F6A                                         STR_101 F918  
                                       STR_102 FEB5                                         STR_110 FC50  
                                       STR_111 FC69                                         STR_103 FBFF  
                                       STR_120 FEC3                                         STR_104 FBA8  
                                       STR_112 F2A3                                         STR_105 FD88  
                                       STR_121 F6D2                                         STR_113 F23D  
                                       STR_130 FED1                                         STR_122 FDBB  
                                       STR_106 FB6B                                         STR_114 F862  
                                       _ADRESH 000F64                                         STR_115 FA57  
                                       STR_131 F8BE                                         STR_123 F76F  
                                       STR_107 F69D                                         STR_124 FF52  
                                       STR_132 FD99                                         STR_140 FB08  
                                       STR_108 F942                                         STR_116 F460  
                                       STR_109 FF22                                         STR_125 F890  
                                       STR_133 F667                                         STR_117 F397  
                                       STR_141 EA57                                         STR_118 FE0D  
                                       STR_134 FDCC                                         STR_126 FD1A  
                                       STR_142 FBE2                                         STR_150 F9E6  
                                       _ADRESL 000F63                                         STR_151 F834  
                                       STR_127 F73B                                         STR_135 F5FB  
                                       STR_119 F518                                         STR_143 ED07  
                                       STR_144 FF7C                                         STR_128 FD41  
                                       STR_136 FBC5                                         STR_152 FB8A  
                                       STR_160 F975                                         STR_129 F7A2  
                                       STR_137 E3ED                                         STR_145 D84F  
                                       STR_153 FF2F                                         STR_161 F96C  
                                       STR_146 FFAA                                         STR_138 FB2A  
                                       STR_154 FEFB                                         STR_162 FC1B  
                                       STR_147 EEF3                                         STR_139 E787  
                                       STR_155 FF72                                         STR_163 FCC6  
                                       STR_148 F5C4                                         STR_164 FC9A  
                                       STR_156 FDDD                                         STR_165 FDDD  
                                       STR_149 F49F                                         STR_157 FE5D  
                                       STR_166 FF85                                         STR_158 FDED  
                                       STR_167 FD66                                         STR_159 FD2E  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 011D                                         _ADUTHL 000F6C  
                 __end_of_Total_Energy_address D7FF                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                         _readDoubleFromEEPROM 8B66                                         _T5GATE 000FC5  
                                       _T5GCON 000FC4                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                                       _RC2STA 000EF5                                         i1l1027 8FC2  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l1031 3A58                                         i2l1032 2FBC  
                                       i2l1033 3046                                         i2l1042 3160  
                                       i2l2003 7F3A                                         i2l1051 34C2  
                                       i2l1043 321E                                         i2l2004 7F2E  
                                       i2l1060 3864                                         i2l1061 3A42  
                                       i2l1053 3772                                         i2l2006 7F56  
                                       i2l1046 3226                                         i2l1038 304E  
                                       i2l1047 3598                                         i2l1039 3158  
                                       i2l1064 3A4A                                         i2l1056 377A  
                                       i2l1048 346A                                         i2l2112 94B8  
                                       i2l1057 385C                                         i2l1049 3382  
                                       i2l2052 73F8                                         i2l2301 6354  
                                       i2l2310 6418                                         i2l2302 6402  
                                       i2l2230 5A20                                         i2l2142 85F4  
                                       i2l2054 7424                                         i2l2303 63B2  
                                       i2l2143 8602                                         i2l2055 745E  
                                       i2l2240 5170                                         i2l2320 6500  
                                       i2l2304 63DA                                         i2l2152 89DA  
                                       i2l2064 74E6                                         i2l2056 7486  
                                       i2l1600 27BE                                         i2l2241 516C  
                                       i2l2321 650C                                         i2l2153 89E8  
                                       i2l2065 74DA                                         i2l2250 5238  
                                       i2l2330 4AD8                                         i2l2322 650E  
                                       i2l2306 6400                                         i2l2138 85C0  
                                       i2l2058 74C2                                         i2l1610 2910  
                                       i2l2243 51CC                                         i2l2235 5128  
                                       i2l2331 4AD4                                         i2l2227 576C  
                                       i2l2139 85B4                                         i2l2059 74B2  
                                       i2l1531 6784                                         i2l1611 292A  
                                       i2l2244 5190                                         i2l2236 5124  
                                       i2l2332 4AE8                                         i2l2316 646E  
                                       i2l2228 588A                                         i2l2148 89B2  
                                       i2l2261 532E                                         i2l2253 52A6  
                                       i2l2333 4B06                                         i2l2309 6436  
                                       i2l2229 58FA                                         i2l2149 89A6  
                                       i2l1541 437E                                         i2l2270 5382  
                                       i2l2254 526C                                         i2l2350 4DA2  
                                       i2l2326 4A98                                         i2l2430 707E  
                                       i2l2318 64B2                                         i2l1534 4172  
                                       i2l1630 2A8E                                         i2l1622 2A34  
                                       i2l1614 2958                                         i2l1606 289E  
                                       i2l2263 533E                                         i2l2247 5248  
                                       i2l2327 4A94                                         i2l2319 64D6  
                                       i2l1535 4082                                         i2l1631 2BD6  
                                       i2l1623 29A2                                         i2l1615 294A  
                                       i2l2248 5226                                         i2l2344 4CFE  
                                       i2l2328 4AA8                                         i2l2432 7090  
                                       i2l2360 5A9E                                         i2l1528 669C  
                                       i2l1632 2AF0                                         i2l2257 5290  
                                       i2l2249 5234                                         i2l2337 4CC6  
                                       i2l2433 7084                                         i2l1641 2D0C  
                                       i2l1625 2A4E                                         i2l1561 250E  
                                       i2l1545 21FA                                         i2l1730 9306  
                                       i2l2282 540E                                         i2l2266 5362  
                                       i2l2258 5294                                         i2l2346 4D42  
                                       i2l2338 4CA8                                         i2l2450 7AEE  
                                       i2l2370 5CC0                                         i2l2362 5AD8  
                                       i2l1538 4142                                         i2l1642 2C88  
                                       i2l1634 2BF0                                         i2l1626 2A40  
                                       i2l1618 2978                                         i2l1570 23DE  
                                       i2l1554 2284                                         i2l1546 220C  
                                       i2l1474 8DDC                                         i2l2283 5416  
                                       i2l2275 53A2                                         i2l2347 4D60  
                                       i2l2443 711E                                         i2l2435 70CE  
                                       i2l2363 5B04                                         i2l1539 42BE  
                                       i2l1635 2BE2                                         i2l1619 296A  
                                       i2l1571 2406                                         i2l2284 5418  
                                       i2l2268 5378                                         i2l2444 7150  
                                       i2l2436 70B6                                         i2l2428 7050  
                                       i2l2452 7B1E                                         i2l2292 62A6  
                                       i2l2364 5B62                                         i2l1660 2DD6  
                                       i2l1652 2D3E                                         i2l1628 2A72  
                                       i2l1580 2488                                         i2l1572 2416  
                                       i2l1564 23D6                                         i2l1556 23C8  
                                       i2l1548 2228                                         i2l2349 4D84  
                                       i2l2429 7060                                         i2l2453 7BB6  
                                       i2l2293 62A2                                         i2l2365 5C0C  
                                       i2l2357 5A74                                         i2l1661 2E0E  
                                       i2l1637 2C4A                                         i2l1629 2A76  
                                       i2l1565 257C                                         i2l1573 2410  
                                       i2l1557 239C                                         i2l1549 2220  
                                       i2l2278 53E8                                         i2l2438 7100  
                                       i2l2366 5B68                                         i2l1830 55B6  
                                       i2l1662 2DF4                                         i2l1654 2D5E  
                                       i2l1590 25DE                                         i2l1582 24CE  
                                       i2l1558 234A                                         i2l2439 70F4  
                                       i2l2367 5BAE                                         i2l2359 5A84  
                                       i2l1831 5696                                         i2l1911 8570  
                                       i2l1671 2F60                                         i2l1655 2D80  
                                       i2l1647 2D22                                         i2l1639 2C6E  
                                       i2l1583 24A2                                         i2l2296 62E6  
                                       i2l2368 5BD6                                         i2l1912 857A  
                                       i2l1904 8522                                         i2l1920 87B2  
                                       i2l1648 2CCA                                         i2l1592 264A  
                                       i2l1576 2468                                         i2l1568 23DA  
                                       i2l2449 7B00                                         i2l2297 62E2  
                                       i2l1913 8588                                         i2l1905 8532  
                                       i2l1921 87AA                                         i2l1673 2F42  
                                       i2l1657 2DA2                                         i2l1593 26C8  
                                       i2l1585 24E2                                         i2l1577 247E  
                                       i2l2458 86AE                                         i2l1850 6E80  
                                       i2l1674 2E48                                         i2l1658 2DAA  
                                       i2l1586 24F6                                         i2l2299 632C  
                                       i2l1907 8550                                         i2l1659 2DCE  
                                       i2l1595 26F6                                         i2l1587 2508  
                                       i2l1579 248E                                         i2l1852 6E98  
                                       i2l1828 548E                                         i2l1908 8548  
                                       i2l1924 87CA                                         i2l1676 2F5A  
                                       i2l1588 2BFA                                         i2l1596 2742  
                                       i2l1925 87D4                                         i2l1917 8790  
                                       i2l1677 2ECA                                         i2l1597 2826  
                                       i2l1589 2590                                         i2l1950 7664  
                                       i2l1926 87E2                                         i2l1918 879C  
                                       i2l1847 6CCC                                         i2l1951 76A6  
                                       i2l1944 906A                                         i2l1960 7738  
                                       i2l1952 76D6                                         i2l1849 6D38  
                                       i2l1961 772C                                         i2l1938 7CAC  
                                       i2l1954 7714                                         i2l1939 7C14  
                                       i2l1955 7704                                         i2l1972 92D4  
                                       i2l1948 7646                                         i2l1965 79CA  
                                       i2l1966 79FE                                         i2l1967 7A3C  
                                       i2l1968 7A7A                                         i2l1995 7EAA  
                                       i2l1997 7F16                                         i2l1998 7F06  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 004D                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                         _NVMDAT 000F76  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                             __end_of___xxtofl 7012          __end_of_ADCC_DischargeSampleCapacitor 96BC  
       __size_of_ADCC_DischargeSampleCapacitor 0008                  _ADCC_DischargeSampleCapacitor 96B4  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 0132  
                               i2___fladd@aexp 0069                                 i2___fladd@bexp 006A  
                       ?_dimmingOnTimeCallback 0001          __end_of_ADCC_HasAccumulatorOverflowed 9698  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed 968C  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize 8B12  
                                 i2_scale$4398 004D                               __end_of__powers_ D775  
              __end_of_terminal_ringBufferPull 7874                                         ___flge 7874  
                            _ADCC_ThresholdISR 9360                                      ??___fladd 0131  
                                       ___wmul 9310                                      ??___fldiv 0145  
                                    ??___awdiv 0121                                      ??___flneg 0129  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___flmul 015E                                      ??___flsub 0145  
                                    ??___fltol 017C                                      ??___lldiv 011F  
                                    ??___llmod 012C                             ?_ADCC_ThresholdISR 0001  
                     ??_terminal_setCursorHome 01B2                                         _fround 5CFA  
                                       clear_0 82AE                                         clear_1 82BA  
                                       clear_2 82C6                           _eusart2RxStringReady 07D8  
                             ___awdiv@quotient 0123                                 i2___fldiv@aexp 002B  
                               i2___fldiv@bexp 002A                                ___awmod@divisor 0119  
                               i2___fldiv@sign 001F                                ___awmod@counter 011B  
                                       _printf 141E                                ??_INT0_CallBack 0003  
                                       _strcat 8CFA                                         _strchr 90B6  
                      __end_of_DATAEE_ReadByte 9548                                         _strcmp 8C0A  
                                       _strcpy 90EE                                         _strlen 8ABA  
                               i2___awdiv@sign 000C                                         _strstr 8378  
                                       floor@i 007A                                         floor@x 0076  
                 getCauseOfResetString@strings 02DA                               _background_color 0244  
                              _TMR5_StartTimer 96DC                                _ADCC_Initialize 8A5A  
                            ??i2_EUSART2_Write 0001                      _ADCPostProcessingCallback 2FB0  
                               _PMD_Initialize 94C0                        FLASH_ReadWord@flashAddr 011B  
                            __end_ofi2___fladd 5434                                      ??_isdigit 0117  
                            __end_ofi2___fldiv 652A                              __end_ofi2___awdiv 8592  
                            __end_ofi2___flneg 92E6                              __end_ofi2___awmod 87EC  
                            __end_ofi2___flmul 4DB8                              __end_ofi2___flsub 8F00  
                            __end_ofi2___fltol 7F68                        ??i2_writeDoubleToEEPROM 000B  
                            __end_ofi2___lldiv 8614                                         sin@sgn 0098  
                          ??_ADCC_ThresholdISR 005E                              __end_ofi2___llmod 89FA  
                                 __mediumconst D740                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion 96E0                           _EUSART2_Transmit_ISR 9124  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                              ??_EUSART2_Write 0117       INT0_SetInterruptHandler@InterruptHandler 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
 ADCC_SetADTIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 00B5                          ?_readDoubleFromEEPROM 0119  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 01B2                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                                 i2___flmul@prod 0043  
                __size_of_INTERRUPT_Initialize 0016                                _eusart2RxBuffer 0380  
                                   ___flge@ff1 0117                                     ___flge@ff2 011B  
                      __end_of_TMR5_Initialize 8CFA                                   ___xxtofl@arg 0121  
                            __end_ofi2_isdigit 94C0                                   ___xxtofl@exp 0120  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize 91C2                                   ___xxtofl@val 0117  
         __end_of_TMR7_DefaultInterruptHandler 96E6          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 96E4                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 82DE  
                               i2___fltol@exp1 0075                                      ?_INT0_ISR 0001  
                                   ___flneg@f1 0125                                      ?_HLVD_ISR 0001  
                               i2printf@tmpval 009B                             ?_SYSTEM_Initialize 0001  
                    __size_ofi2_TMR5_StopTimer 0004                                   eval_poly@res 0078  
                                ___rparam_used 000001                                     ___fltol@f1 0178  
                              _TMR5_WriteTimer 94F8                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                    __end_of_ADCC_ThresholdISR 9388                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 02D2                            __size_ofi2___xxtofl 0150  
                   __end_of_getMajorRevisionID 9040                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 01B2  
                                 __pidataBANK0 96BC                                   __pidataBANK1 96EE  
                                 __pidataBANK2 93FA                            ??_SYSTEM_Initialize 011C  
                                    ?_TMR5_ISR 0001                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                               _DATAEE_WriteByte 8FC6  
                                __end_of_floor 7BC8                                  __end_of_frexp 870A  
                                __end_of_scale 3F2E                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 9610                              ??_HLVD_Initialize 0117  
                                  i2printf@idx 0094                       ??_terminal_clearTerminal 01B2  
                                  i2printf@len 0097                                    i2printf@exp 009F  
                                  i2printf@val 00A1                        __end_of_TMR6_Initialize 9226  
                     __size_of_getCauseOfReset 0052                         __end_of_PMD_Initialize 94DC  
                        _getCauseOfResetString 9258                                      ?i2___flge 0034  
                         __end_of_EUSART2_Read 8E70                                      ?i2___wmul 0001  
                                i2__tdiv_to_l_ 73CC                    __size_of_EXT_INT_Initialize 001E  
                                   __div_to_l_ 74FE                      __size_ofi2_TMR7_StopTimer 0006  
                           __size_of_getUserID 0044                                      ?i2_fround 0049  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                                    ?i2_printf 0088                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0124                                        ??_floor 005E  
                              __div_to_l_@cntr 0123                                        ??_frexp 0007  
                                      ??_scale 0173                      __end_of_SYSTEM_Initialize 91F4  
                              __div_to_l_@quot 011F                                        ??_putch 0118  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00FA                                  _eusart2TxHead 01E3  
                                   __pbssBANK0 00F6                                     __pbssBANK1 01BB  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01E0                                  _eusart2TxTail 01E2  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 8B66  
                           __size_of_peakToRMS 024A                          _INT0_InterruptHandler 0228  
                                   ??_INT0_ISR 0003                                     ??_HLVD_ISR 0011  
            __size_of_recoverSRAMMaxFromEEPROM 0136                      ?_recoverSRAMMaxFromEEPROM 0001  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011B                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 93AE                          ??_ADCC_StopConversion 0001  
                             ??_FVR_Initialize 0117                     __end_ofi2_DATAEE_WriteByte 90B6  
                               _peakToRMS$4383 00C1                                 _peakToRMS$4384 00B9  
                               _peakToRMS$4385 00BD                          ringBufferLUT@arg_buff 02C9  
                                  _Irms_offset 02F2                                        ?___flge 0117  
               ?_ADCC_DischargeSampleCapacitor 0001              terminal_ringBufferPull@index_2531 02D4  
                                      ?___wmul 0117                          _currentMeasuredToPeak 8614  
                      __end_of_TMR5_StartTimer 96E0                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 962C                        __end_of_ADCC_Initialize 8ABA  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                 ringBufferLUT@max_Power_print 02B5                           _Total_Energy_address D7FD  
                                      ?_fround 016F                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler 9672  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler 9664  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 0182  
                              ?_PMD_Initialize 0001                            _ADCC_GetFilterValue 9576  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 003C  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte 9514  
          ringBufferLUT@max_voltage_print_2884 02C5            ringBufferLUT@max_voltage_print_2878 02BD  
                                      ?_strstr 0126                               ?_DATAEE_ReadByte 0117  
                                   ??i2___wmul 0005                                 _FLASH_ReadWord 8F44  
                                      _INT0PPS 000DF0                                        i2l10830 8DAA  
                                      i2l12520 6500                                        i2l11592 7AB2  
                                      i2l15304 2790                                        i2l15224 2488  
                                      i2l15324 28A2                                        i2l15228 24A2  
                                      i2l15350 294A                                        i2l15522 2F42  
                                      i2l15434 2C8C                                        i2l15356 296A  
                                      u1770_41 73DC                                        i2l15374 2A40  
                                      i2l15448 2CCE                                        i2l15296 2742  
                                      u1772_41 7408              i2writeDoubleToEEPROM@input_double 0005  
              writeDoubleToEEPROM@input_double 011B                                      ?___xxtofl 0117  
                                      _SP2BRGH 000EF4                                     ??i2_fround 004D  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 81AA  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                     ??i2_printf 008A  
                                      _NVMADRH 000F75                                        _NVMADRL 000F74  
                                      _OSCTUNE 000E48                                        _NVMCON2 000F78  
                       ??_readDoubleFromEEPROM 011D                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE            __end_of_max_Temp_ADC_Result_address D7F5  
                  _max_Temp_ADC_Result_address D7F3                       _acquisitionTimerCallback 95B0  
                     __end_of_max_Irms_address D7FD                        __end_of_TMR5_WriteTimer 9514  
             __size_of_terminal_textAttributes 0368                                        i2_scale 3F2E  
                             ?_TMR5_Initialize 0001                           DATAEE_WriteByte@bAdd 0117  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch 96A2  
            __size_of_INT0_SetInterruptHandler 000E                      ?_INT0_SetInterruptHandler 0117  
                              i2___fladd@signs 0068           __end_of_terminal_textAttributesReset 95B0  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 959E  
                            __end_of__npowers_ D7A9                                        __Hparam 0000  
                   __size_of_ADCC_ThresholdISR 0028                                     _scale$4176 0173  
           __end_of_max_FVR_ADC_Result_address D7F3                     _max_FVR_ADC_Result_address D7F1  
                                      __Lparam 0000                              __end_of_getUserID 8F44  
                        _ADCC_ClearAccumulator 96C8                     ??_TMR5_SetInterruptHandler 011A  
                     ??_dimmingOffTimeCallback 0003                                 _adc_error_flag 02F1  
                              __size_of___flge 0122                                        ___fladd 4DB8  
                                      ___fldiv 5FC0                                        ___awdiv 8404  
                                      ___flneg 9288                                        ___awmod 870A  
                                      ___flmul 4716                                        ___flsub 8E70  
                                      ___fltol 7DAC                                        ___lldiv 848A  
                              __size_of___wmul 0028                                        ___llmod 892C  
                       __end_of_FLASH_ReadByte 952E                         ?_getCauseOfResetString 0117  
                       __end_of_FLASH_ReadWord 8F86                                        __pcinit 8256  
                            __end_of_eval_poly 7CC8                                __size_of_fround 02C6  
                             ?_TMR6_Initialize 0001                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                        __ptext0 8040  
               readDoubleFromEEPROM@byte_index 0121                                        __ptext1 95C2  
                                      __ptext2 7750                                        __ptext3 0000  
                                      __ptext4 959E                                        __ptext5 43AE  
                                      __ptext6 88C4                                        __ptext7 8CFA  
                                      __ptext8 95D2                                        __ptext9 8378  
                            __end_of_peakToRMS 6C88                                __size_of_printf 0DCE  
                currentMeasuredToPeak@Measured 0099                     ringBufferLUT@angle_degrees 02AD  
                ?_ADCC_SetADTIInterruptHandler 0117                        __size_of_TMR5_StopTimer 0004  
                              __size_of_strcat 004C                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                  i2_fround$4396 0051  
                                i2_fround$4397 004D                                __size_of_strcpy 0036  
                              __size_of_strlen 0058                              __end_of_hexpowers D7F1  
                       getCauseOfResetString@r 0119                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers D7A9  
                        _OSCILLATOR_Initialize 94DC                         ??_EUSART2_Transmit_ISR 0100  
                                 __size_of_abs 002A                                   i2fround@prec 0055  
                                      _isdigit 9442                                atan@val_squared 0089  
                                 __size_of_sin 02FA                                   ??i2___xxtofl 0009  
                                   ??___xxtofl 011B                               ___awmod@dividend 0117  
                     ??_PIN_MANAGER_Initialize 0117                                        atan@val 008D  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0117  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 0095  
                  __end_of_saveSRAMMaxToEEPROM 6A3E                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 02CE                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 0032                          i2EUSART2_Write@txData 0001  
                                      _strncmp 82E8                                 __pintcode_body 7CC8  
                                      _strncpy 88C4                           end_of_initialization 82DE  
                      __end_of_TMR7_WriteTimer 93D4                        getDeviceIDString@F17550 02EC  
                       _terminal_setCursorHome 95C2                          ??_ADCC_GetFilterValue 0003  
                                    _PCON0bits 000FD7                               ?_TMR7_Initialize 0001  
                                    i1u1130_28 8F96                           _max_POS12_ADC_Result 0208  
                                    i1u1129_20 8F92                        ??_dimmingOnTimeCallback 0001  
                                      int_func 7CC8                            i2___wmul@multiplier 0001  
                                    _T6RSTbits 000FB4                                      i1u2707_28 934C  
                      __size_of_TMR7_StopTimer 0006                                      i1u2709_28 917A  
                                    i1u2736_28 0086                                 i2___xxtofl@arg 000F  
                                    i2u1500_40 64E4                               i2_TMR5_StopTimer 96D8  
                                    i2u1093_45 90B2                                      i2u1093_46 90B4  
                                    i2u1350_40 51FC                                      i2u1351_40 520C  
                               i2___xxtofl@exp 000E                                      i2u1352_40 520E  
                               i2___xxtofl@val 0005                                      i2u1371_40 539E  
                                    i2u1355_40 5250                                      i2u1540_40 6CFA  
                                    i2u1703_40 8554                                      i2u1712_40 9694  
                                    i2u1376_40 53F4                                      i2u1368_40 5386  
                                    i2u1393_40 4CFA                                      i2u1801_40 3764  
                                    i2u1387_40 4AF4                                      i2u1539_40 6CF8  
                                    i2u1803_40 384E                                      i2u1396_40 4D50  
                                    i2u1388_40 4C6A                                      i2u1580_40 7F40  
                                    i2u1900_40 28E0                                      i2u1388_45 4C60  
                                    i2u1397_40 4D6E                                      i2u1805_40 3A34  
                                    i2u1709_40 87B6                                      i2u1574_40 86D6  
                                    i2u1910_40 2A6C                                      i2u2701_48 942E  
                                    i2u1574_48 86D8                                      i2u1576_40 7EC8  
                                    i2u1680_40 7B0C                                      i2u1496_40 646A  
                                    i2u2703_48 91AE                                      i2u1576_45 7EBE  
                                    i2u2705_48 9374                                      i2u1906_40 2986  
                                    i2u1499_40 64C0                                      i2u1588_40 710A  
                                    i2u1909_40 2A5C                                      i2u1686_40 5886  
                                    i2u1782_40 85C4                                      i2u1870_40 2332  
                                    i2u1870_47 2328                                      i2u1687_40 5888  
                                    i2u1791_40 3038                                      i2u1935_40 2E16  
                                    i2u1936_40 2E2C                                      i2u1872_40 2380  
                                    i2u1864_40 224A                                      i2u1952_40 8142  
                                    i2u2727_48 7D34                                      i2u1872_47 2376  
                                    i2u1864_47 2240                                      i2u1785_40 89B6  
                                    i2u1769_40 773E                                      i2u1873_40 23BE  
                                    i2u1865_40 2272                                      i2u1873_47 23B4  
                                    i2u1865_47 2268                                      i2u1794_40 314A  
                                    i2u1778_40 74EC                                      i2u1938_40 2F72  
                                    i2u1882_40 24C4                                ___lldiv@divisor 011B  
                                    i2u1882_47 24BA                                      i2u1939_40 2FA2  
                                    i2u1867_40 22CC                                      i2u1939_47 2F98  
                                    i2u1867_47 22C2                                      i2u1796_40 3210  
                                    i2u1892_40 2708                                      i2u1884_40 253E  
                                    i2u1876_40 2444                                      i2u1868_40 2308  
                                    i2u1884_47 2534                                      i2u1876_47 243A  
                                    i2u1868_47 22FE                                      i2u1893_40 2754  
                                    i2u1877_40 244A                                      i2u1869_40 2310  
                  __end_of_writeDoubleToEEPROM 8CAA                                      i2u1896_40 2790  
                              ___lldiv@counter 011F                             _EUSART2_Initialize 885A  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0099  
                  getDeviceIDString@inputDevID 0124                                i2_EUSART2_Write 8DDE  
                                ??_getDeviceID 0124                                        printf@c 01B1  
                                      printf@f 0182                       ??_heartbeatTimerCallback 0100  
                           __end_ofi2___xxtofl 7162                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0048                               ?_TMR5_StartTimer 0001  
                             ?_ADCC_Initialize 0001                 _ADCPostProcessingCallback$4390 00D1  
               _ADCPostProcessingCallback$4386 00D6                 _ADCPostProcessingCallback$4387 00DA  
               _ADCPostProcessingCallback$4388 00C9                 _ADCPostProcessingCallback$4389 00CD  
                                      sqrt@grs 007B                                        sqrt@exp 007F  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                   _HLVDCON0bits 000EC2  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 02D6  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler 961E                          _TMR5_InterruptHandler 022B  
                             i2_TMR7_StopTimer 96CE                       ?_terminal_ringBufferPull 0001  
                                  ___fladd@grs 013C                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 011F                 __size_ofi2_writeDoubleToEEPROM 004C  
                __end_ofi2_writeDoubleToEEPROM 8DDE                                    ___fldiv@grs 0150  
                                  ___fldiv@rem 014A                                i2___fltol@sign1 0074  
                                    i2___fladd 50F6                                      i2___fldiv 6276  
                                    i2___awdiv 850E                                      i2___flneg 92B8  
                                    i2___awmod 877C                               __CFG_FEXTOSC$ECH 000000  
                                    i2___flmul 4A68                                      i2___flsub 8EB8  
                                    i2___fltol 7E8A                                      i2___lldiv 8592  
                                    i2___llmod 8994                       __end_of_DATAEE_WriteByte 9004  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 95E2                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 141E                                    ___flmul@grs 0165  
                                  printf@width 01AD                                   _EUSART2_Read 8E28  
                           i2___llmod@dividend 000E                                _HLVD_Initialize 95F2  
                           i2___awdiv@dividend 0007                         ?_ADCC_ClearAccumulator 0001  
                                    i2_isdigit 94A2                              __size_of_INT0_ISR 000A  
                          __size_of__div_to_l_ 012A                              __size_of_HLVD_ISR 0032  
                           _max_FVR_ADC_Result 0200                __size_of_dimmingOffTimeCallback 0018  
                                    _Avg_Power 01BB                   __end_of_INTERRUPT_Initialize 9576  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___flge 7996           __end_of_INT0_DefaultInterruptHandler 96EC  
        __size_of_INT0_DefaultInterruptHandler 0002                   _INT0_DefaultInterruptHandler 96EA  
                __end_of_terminal_printNewline 95E2                                 __end_of___wmul 9338  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 07D8                            __end_of_getDeviceID 9484  
                               __end_of_fround 5FC0              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 007E  
                             i2___wmul@product 0005                                 __end_of_printf 21EC  
                                i2_printf$4399 0090                          __end_of_INT0_CallBack 9442  
                           _getMajorRevisionID 9004                                 __end_of_strcat 8D46  
                               __end_of_strchr 90EE                                 __end_of_strcmp 8C5A  
                                 i2printf@flag 00A9                                 __end_of_strcpy 9124  
                               __end_of_strlen 8B12                                   i2printf@fval 00A5  
                               __end_of_strstr 8404                                   i2printf@prec 00AD  
                            __size_ofi2___flge 0120                            start_initialization 8256  
                                   eval_poly@d 0070                                     eval_poly@n 0072  
                                   eval_poly@x 006C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 96EA  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 96E8  
              __size_of_PIN_MANAGER_Initialize 00AC                            __end_of__tdiv_to_l_ 73CC  
                                  __end_of_abs 9310                                    __end_of_sin 5A32  
                                    i2printf@c 00AF                                      i2printf@f 0088  
                      _terminal_textAttributes 43AE                                     ?i2___fladd 0056  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                                   ?i2___fldiv 0013                              __size_ofi2_fround 02AE  
                                   ?i2___awdiv 0007                                     ?i2___flneg 002C  
                                   ?i2___awmod 0001                                     ?i2___flmul 0030  
                                   ?i2___flsub 0080                                     ?i2___fltol 006C  
                                   ?i2___lldiv 0001                                     ?i2___llmod 000E  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                              __size_ofi2_printf 0DC4  
                        __end_of_EUSART2_Write 8D92                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 0288  
                      __end_ofi2_EUSART2_Write 8E28                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                            DATAEE_ReadByte@bAdd 0117  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 01E4  
                             __CFG_LPBOREN$OFF 000000                                       ??___flge 011F  
                             ??_PMD_Initialize 0117                                       ??___wmul 011B  
              __size_of_heartbeatTimerCallback 0040                           ??_getMajorRevisionID 0122  
                                  __pdataBANK0 00F0                                    __pdataBANK1 01E8  
                                  __pdataBANK2 02DA                                       ??_fround 0173  
                                _ringBufferLUT 0000                     __end_of_EXT_INT_Initialize 94A2  
               ??_terminal_textAttributesReset 01B4                  ?_INT0_DefaultInterruptHandler 0001  
                                     ??_printf 018C              getCauseOfReset@return_reset_cause 0117  
         readDoubleFromEEPROM@starting_address 0119                              _POS3P3_ADC_Result 01D7  
                               _TMR5_StopTimer 96D4                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strcpy 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 00B1  
                   __end_of_getMinorRevisionID 93AE                                       ??_strstr 012A  
                                    ___fladd@a 012D                                      ___fladd@b 0129  
                                    _Vpk_const 02F6                                     fround@prec 017B  
                               _eusart2RxCount 01DF                                  ?i2__div_to_l_ 0001  
                           i2_DATAEE_WriteByte 907C                                      ___fldiv@a 0141  
                                    ___fldiv@b 013D                                      _acos$4391 00AD  
                                    ___flmul@a 015A                                      ___flmul@b 0156  
                                    ___flsub@a 0141                                      ___flsub@b 013D  
             __end_of_INT0_SetInterruptHandler 9648                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 0287  
                       _dimmingOffTimeCallback 9548                              __size_of___xxtofl 0154  
                                 _isdigit$3451 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize 9602                            ?i2_DATAEE_WriteByte 0001  
                          EUSART2_Write@txData 0117                                   _load_on_time 0218  
                  __end_of_ADCC_StopConversion 96E4                                       ?i2_scale 0049  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$4392 00A5  
                                    _asin$4393 009D                                      _asin$4394 0099  
                                     ?i2_putch 0001                                     sin@coeff_a D817  
                                   sin@coeff_b D83F                                 _TMR7_StopTimer 96C2  
                        _TMR6_InterruptHandler 0234                                      __pnvBANK2 02FE  
                  getMinorRevisionID@REVID_RAW 0122                         _PIN_MANAGER_Initialize 81AA  
                      ??_getCauseOfResetString 0119                                      __pintcode 0008  
                                  _getDeviceID 9464                                  __pmediumconst D740  
                                     ?___fladd 0129                                       ?___fldiv 013D  
                                     ?___awdiv 011D                           ??i2_DATAEE_WriteByte 0004  
                                    __ptext100 8D92                                      __ptext101 907C  
                                    __ptext110 850E                                      __ptext102 80FC  
                                     ?___flneg 0125                                      __ptext111 73CC  
                                    __ptext103 21EC                                      __ptext120 6A3E  
                                    __ptext112 7628                                      __ptext104 3F2E  
                                    __ptext121 87EC                                      __ptext113 93D4  
                                    __ptext105 96A2                                      __ptext130 6276  
                                    __ptext122 5434                                      __ptext114 8994  
                                    __ptext106 8DDE                                      __ptext131 7AB6  
                                    __ptext123 5A32                                      __ptext115 8592  
                                    __ptext107 94A2                                      __ptext140 96E0  
                                    __ptext132 7012                                      __ptext124 6C88  
                                    __ptext116 9360                                      __ptext108 652A  
                                    __ptext141 968C                                      __ptext133 7E8A  
                                    __ptext125 9040                                      __ptext117 96EC  
                                    __ptext109 877C                                      __ptext142 9576  
                                    __ptext134 7996                                      __ptext126 8614  
                                    __ptext118 2FB0                                      __ptext143 958A  
                                    __ptext135 8690                                      __ptext127 5738  
                                    __ptext119 96CE                                      __ptext144 0000  
                                    __ptext136 7BC8                                      __ptext128 8EB8  
                                    __ptext137 4A68                                      __ptext129 92B8  
                                    __ptext138 50F6                                      __ptext139 92E6  
                                     ?___awmod 0117                                       ?___flmul 0156  
                                     ?___flsub 013D                                       ?___fltol 0178  
             __end_of_TMR7_SetInterruptHandler 961E                                       ?___lldiv 0117  
                                     ?___llmod 0124                                      __npowers_ D775  
                              _getCauseOfReset 8BB8                                 ?_ringBufferLUT 01B4  
                                    _getUserID 8F00                         __end_of_TMR5_StopTimer 96D8  
            _EUSART2_TxDefaultInterruptHandler 023A                                    __pintcodelo 0018  
                         _VCC_overvoltage_flag 02F0                                    __tdiv_to_l_ 7298  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 011F  
                             _POS12_ADC_Result 01D3                                       _BAUD2CON 000EF7  
                     __end_ofi2_TMR5_StopTimer 96DC                                       ?_isdigit 0001  
                                  _dev_on_time 021C                                      _eval_poly 7BC8  
                    ??_terminal_textAttributes 01B4                  i2DATAEE_WriteByte@GIEBitValue 0004  
                                    _max_Power 0210                                      _attribute 0246  
                                    _peakToRMS 6A3E                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers D7D1  
                       _heartbeatTimerCallback 8F86                                 _dimming_period 00F0  
                                  ??i2___fladd 0060                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0030  
                                  ??i2___awmod 0005                                    ??i2___flmul 0038  
                               __size_of_floor 0112                                    ??i2___flsub 005E  
                                  ??i2___fltol 0070                                 __size_of_frexp 007A  
                                  ??i2___lldiv 0009                                 __size_of_scale 04A4  
                                  ??i2___llmod 0016                       __size_of_DATAEE_ReadByte 001A  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                __size_of_readDoubleFromEEPROM 0052                       _recoverSRAMMaxFromEEPROM 7162  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 9560  
                       __end_of_TMR7_StopTimer 96C8                                       _T6CLKCON 000FB3  
       terminal_textAttributes@input_attribute 01B3                                       _HLVDCON0 000EC2  
                                     _HLVDCON1 000EC3                   __size_of_EUSART2_Receive_ISR 00AE  
                                     _INT0_ISR 9698                                 ___wmul@product 011B  
                    currentMeasuredToPeak@Peak 00A1                               ?i2_EUSART2_Write 0001  
                                     _HLVD_ISR 9226                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0088  
                                     _IPR0bits 000E1F                                       _IPR1bits 000E20  
                                     _IPR2bits 000E21                                       _PIE0bits 000E29  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                     __end_ofi2_TMR7_StopTimer 96D4                                       _PIE2bits 000E2B  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                 __size_of_dimmingOnTimeCallback 000C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                __end_of_dimmingOnTimeCallback 968C                            _max_Temp_ADC_Result 0204  
                                     _PIR0bits 000E33                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 7628                               ??_FLASH_ReadByte 011B  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 0050                              i2___fldiv@new_exp 0024  
                                     _TMR5_ISR 918E                                       _TMR6_ISR 9338  
                                     _TMR7_ISR 915A                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                     ?_getUserID 0122  
                              ?_TMR5_StopTimer 0001                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                     i2___flge 7996                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0117                                       i2___wmul 93D4  
                      __size_of_FVR_Initialize 0008                                     printf@flag 01AB  
                                   printf@fval 01A3                                     printf@prec 01AF  
                                   ?_eval_poly 006C                 __end_of_terminal_setCursorHome 95D2  
                            i2___awdiv@divisor 0009                                       i2_fround 652A  
               ??_INT0_DefaultInterruptHandler 0001              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 00B1                i2writeDoubleToEEPROM@byte_index 000F  
                writeDoubleToEEPROM@byte_index 0125                              i2___awdiv@counter 000B  
                  __end_of_ADCC_GetFilterValue 958A                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                          DATAEE_WriteByte@bData 0119  
                                     i2_printf 21EC                            __end_ofatan@coeff_a D817  
                          __end_ofatan@coeff_b D83F                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                              _max_Power_address D7F9  
                                    copy_data0 826A                                      copy_data1 829C  
                             ?_HLVD_Initialize 0001                          ?_INTERRUPT_Initialize 0001  
                          _current_adc_channel 0243                       _INT0_SetInterruptHandler 963A  
                           i2___awmod@dividend 0001                                ?_TMR7_StopTimer 0001  
                            ?_DATAEE_WriteByte 0117                        ??_ADCC_ClearAccumulator 0100  
             __size_of_terminal_ringBufferPull 0124                               __size_ofi2_scale 0480  
               ??_TMR5_DefaultInterruptHandler 0001                   __size_of_saveSRAMMaxToEEPROM 0266  
                           ??_DATAEE_WriteByte 011A                                   _next_channel 01E8  
                             __size_ofi2_putch 000A                                      frexp@eptr 0005  
                      __end_of_getCauseOfReset 8C0A                __end_of_terminal_textAttributes 4716  
              i2writeDoubleToEEPROM@input_data 000B                  writeDoubleToEEPROM@input_data 0121  
                                   _ADSTATbits 000F65   ADCPostProcessingCallback@current_adc_channel 00D5  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 959E  
         __end_of_max_POS12_ADC_Result_address D7F7                   _max_POS12_ADC_Result_address D7F5  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 9664  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 9656  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 01B6                       __size_of_TMR7_Initialize 0054  
                             _foreground_color 0245                        ??_OSCILLATOR_Initialize 0117  
                             __size_of___fladd 033E                               __size_of___fldiv 02B6  
                             __size_of___awdiv 0086                               __size_of___flneg 0030  
                             __size_of___awmod 0072                               __size_of___flmul 0352  
                             __size_of___flsub 0048                               __size_of___fltol 00DE  
                        i2___wmul@multiplicand 0003                               __size_of___lldiv 0084  
                             __size_of___llmod 0068                   __size_of_writeDoubleToEEPROM 0050  
                                  _load_enable 02F2               __end_of_acquisitionTimerCallback 95C2  
                                  _fround$4174 0177                                    _fround$4175 0173  
                        __end_ofi2__tdiv_to_l_ 74FE                       _TMR7_SetInterruptHandler 9610  
                        _TMR7_InterruptHandler 022E                             _ADC_Result_Scaling 0224  
      terminal_textAttributes@foreground_color 0287                                       ___xxtofl 6EBE  
                     __size_of_TMR5_StartTimer 0004                       __size_of_ADCC_Initialize 0060  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 95F2                               __size_of_isdigit 0022  
                    __end_of_max_Power_address D7FB                                       __ptext10 82E8  
                                     __ptext11 8ABA                                       __ptext20 8F44  
                                     __ptext12 90B6                                       __ptext21 9514  
                                     __ptext13 90EE                                       __ptext30 3A8A  
                                     __ptext22 9258                                       __ptext14 8C0A  
                                     __ptext31 9602                                       __ptext23 7F68  
                                     __ptext15 8F00                                       __ptext40 6EBE  
                                     __ptext32 8D46                                       __ptext24 5FC0  
                                     __ptext16 9388                                       __ptext41 9310  
                                     __ptext33 9442                                       __ptext25 96C2  
                                     __ptext17 9004                                       __ptext50 8FC6  
                                     __ptext42 892C                                       __ptext34 5CFA  
                                     __ptext26 96D4                                       __ptext18 89FA  
                                     __ptext51 7874                                       __ptext43 848A  
                                     __ptext35 4716                                       __ptext27 8E28  
                                     __ptext19 9464                                       __ptext60 961E  
                                     __ptext52 7162                                       __ptext44 7DAC  
                                     __ptext36 870A                                       __ptext28 95E2  
                                     __ptext61 8CAA                                       __ptext53 8B66  
                                     __ptext45 8E70                                       __ptext37 8404  
                                     __ptext29 141E                                       __ptext70 963A  
                                     __ptext62 962C                                       __ptext54 952E  
                                     __ptext46 4DB8                                       __ptext38 7298  
                                     __ptext71 885A                                       __ptext63 94C0  
                                     __ptext55 8BB8                                       __ptext47 9288  
                                     __ptext39 74FE                                       __ptext80 9672  
                                     __ptext72 9648                                       __ptext64 81AA  
                                     __ptext56 91C2                                       __ptext48 67D8  
                                     __ptext81 96B4                                       __ptext73 9656  
                                     __ptext65 94DC                                       __ptext57 8B12  
                                     __ptext49 8C5A                                       __ptext90 96E8  
                                     __ptext82 96C8                                       __ptext74 8A5A  
                                     __ptext66 9560                                       __ptext58 9610  
                                     __ptext91 9680                                       __ptext83 93AE  
                                     __ptext75 9664                                       __ptext67 95F2  
                                     __ptext59 91F4                                       __ptext92 96D8  
                                     __ptext84 9338                                       __ptext68 96AC  
                                     __ptext93 9698                                       __ptext85 96E6  
                                     __ptext77 915A                                       __ptext69 9484  
                                     __ptext94 941E                                       __ptext86 8F86  
                                     __ptext78 96E4                                       __ptext95 96EA  
                                     __ptext87 9124                                       __ptext79 95B0  
                                     __ptext96 9548                                       __ptext97 94F8  
                                     __ptext89 918E                                       __ptext98 96DC  
                                     __ptext99 9226                                       _sin$4395 0090  
                                     __powers_ D741                            ringBufferLUT@userID 02D0  
                              _Temp_ADC_Offset 02FA                          i2_writeDoubleToEEPROM 8D92  
                  DATAEE_WriteByte@GIEBitValue 011A                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 006A  
                                   strcpy@from 0119                                       _max_Irms 0214  
                               i2_isdigit$3451 0002                                _Temp_ADC_Result 01CF  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 00BC  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
           __size_of_ADCPostProcessingCallback 0ADA                           __end_ofi2__div_to_l_ 7750  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                            ??_DATAEE_ReadByte 0119                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      ringBufferLUT@channel_name 0297  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 9680  
                                     int$flags 005F                                       atoi@sign 0121  
                                  ??_getUserID 0124                                      printf@idx 0196  
                                    printf@len 0199                                      printf@exp 01A1  
                                    printf@val 01A7                                    atan@coeff_a D7FF  
                                  atan@coeff_b D82B                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 95D2                              i2___awmod@divisor 0003  
                      ?_dimmingOffTimeCallback 0001                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0074  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 0177  
                                    sqrt@tfrac 0076                             _EXT_INT_Initialize 9484  
         __end_of_TMR6_DefaultInterruptHandler 96E8          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 96E6           __end_of_ADCC_DefaultInterruptHandler 96EE  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 96EC  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                           _getMinorRevisionID 9388                               __tdiv_to_l_@quot 0120  
                              i2___xxtofl@sign 000D                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 02CC  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                          ?_EXT_INT_Initialize 0001                                    _reset_cause 02FE  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 01DB  
            __end_of_ADCPostProcessingCallback 3A8A                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                       __size_of_INT0_CallBack 0024                       __size_of_TMR7_WriteTimer 0026  
                                 ?_getDeviceID 0122                                       printf@ap 019B  
                                     printf@cp 0197                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString 9288                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult 958A                 ?_EUSART2_SetRxInterruptHandler 0117  
                                 ?__tdiv_to_l_ 0117                 __end_of_dimmingOffTimeCallback 9560  
                       __size_of_EUSART2_Write 004C                            _EUSART2_Receive_ISR 80FC  
                                     sqrt@frac 0085         __end_of_INTERRUPT_InterruptManagerHigh 7DAC  
      __size_of_INTERRUPT_InterruptManagerHigh 7DA4                 _INTERRUPT_InterruptManagerHigh 0008  
                                     sqrt@sign 0074                    getMajorRevisionID@REVID_RAW 0125  
                                     sqrt@root 0081                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 96AC                                    _printf$4177 0192  
                         ??_EXT_INT_Initialize 011A                     ??_recoverSRAMMaxFromEEPROM 0123  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01B4  
                             ___lldiv@quotient 0120                        i2DATAEE_WriteByte@bData 0003  
                            ?i2_TMR5_StopTimer 0001                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                         ??_getMinorRevisionID 0122                              _getDeviceIDString 89FA  
                           ??i2_TMR5_StopTimer 0001                                       strstr@s1 0126  
                                     strstr@s2 0128                                   _Total_Energy 00F6  
                       ?i2_writeDoubleToEEPROM 0005                                     _TX2STAbits 000EF6  
                                ___fladd@signs 0139                             ?_getDeviceIDString 0124  
        __end_of_INTERRUPT_InterruptManagerLow 00FE         __size_of_INTERRUPT_InterruptManagerLow 00E6  
                _INTERRUPT_InterruptManagerLow 0018                              ??_TMR5_StartTimer 0001  
               ??_ADCC_SetADTIInterruptHandler 011A                 __end_of_PIN_MANAGER_Initialize 8256  
                            ??_ADCC_Initialize 011A                         i2DATAEE_WriteByte@bAdd 0001  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                      _terminal_ringBufferPull 7750                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 013A                                   ___fladd@bexp 013B  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                          ??_getDeviceIDString 0126                              ?i2_TMR7_StopTimer 0001  
            _EUSART2_RxDefaultInterruptHandler 0237                 __size_of_currentMeasuredToPeak 007C  
                             ??_TMR5_StopTimer 0117                  __end_of_currentMeasuredToPeak 8690  
                 __size_of_ADCC_StopConversion 0004  
